var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __esm = (fn, res) => function() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
)), __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var __accessCheck = (obj, member, msg) => {
  if (!member.has(obj))
    throw TypeError("Cannot " + msg);
};
var __privateGet = (obj, member, getter) => (__accessCheck(obj, member, "read from private field"), getter ? getter.call(obj) : member.get(obj)), __privateAdd = (obj, member, value) => {
  if (member.has(obj))
    throw TypeError("Cannot add the same private member more than once");
  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
}, __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, "write to private field"), setter ? setter.call(obj, value) : member.set(obj, value), value);

// node_modules/react/cjs/react.development.js
var require_react_development = __commonJS({
  "node_modules/react/cjs/react.development.js"(exports, module) {
    "use strict";
    (function() {
      "use strict";
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var ReactVersion = "18.2.0", REACT_ELEMENT_TYPE = Symbol.for("react.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler"), REACT_PROVIDER_TYPE = Symbol.for("react.provider"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"), MAYBE_ITERATOR_SYMBOL = Symbol.iterator, FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable != "object")
          return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        return typeof maybeIterator == "function" ? maybeIterator : null;
      }
      var ReactCurrentDispatcher = {
        /**
         * @internal
         * @type {ReactComponent}
         */
        current: null
      }, ReactCurrentBatchConfig = {
        transition: null
      }, ReactCurrentActQueue = {
        current: null,
        // Used to reproduce behavior of `batchedUpdates` in legacy mode.
        isBatchingLegacy: !1,
        didScheduleLegacyUpdate: !1
      }, ReactCurrentOwner = {
        /**
         * @internal
         * @type {ReactComponent}
         */
        current: null
      }, ReactDebugCurrentFrame = {}, currentExtraStackFrame = null;
      function setExtraStackFrame(stack) {
        currentExtraStackFrame = stack;
      }
      ReactDebugCurrentFrame.setExtraStackFrame = function(stack) {
        currentExtraStackFrame = stack;
      }, ReactDebugCurrentFrame.getCurrentStack = null, ReactDebugCurrentFrame.getStackAddendum = function() {
        var stack = "";
        currentExtraStackFrame && (stack += currentExtraStackFrame);
        var impl = ReactDebugCurrentFrame.getCurrentStack;
        return impl && (stack += impl() || ""), stack;
      };
      var enableScopeAPI = !1, enableCacheElement = !1, enableTransitionTracing = !1, enableLegacyHidden = !1, enableDebugTracing = !1, ReactSharedInternals = {
        ReactCurrentDispatcher,
        ReactCurrentBatchConfig,
        ReactCurrentOwner
      };
      ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame, ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
      function warn(format) {
        {
          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)
            args[_key - 1] = arguments[_key];
          printWarning("warn", format, args);
        }
      }
      function error(format) {
        {
          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)
            args[_key2 - 1] = arguments[_key2];
          printWarning("error", format, args);
        }
      }
      function printWarning(level, format, args) {
        {
          var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame, stack = ReactDebugCurrentFrame2.getStackAddendum();
          stack !== "" && (format += "%s", args = args.concat([stack]));
          var argsWithFormat = args.map(function(item) {
            return String(item);
          });
          argsWithFormat.unshift("Warning: " + format), Function.prototype.apply.call(console[level], console, argsWithFormat);
        }
      }
      var didWarnStateUpdateForUnmountedComponent = {};
      function warnNoop(publicInstance, callerName) {
        {
          var _constructor = publicInstance.constructor, componentName = _constructor && (_constructor.displayName || _constructor.name) || "ReactClass", warningKey = componentName + "." + callerName;
          if (didWarnStateUpdateForUnmountedComponent[warningKey])
            return;
          error("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, componentName), didWarnStateUpdateForUnmountedComponent[warningKey] = !0;
        }
      }
      var ReactNoopUpdateQueue = {
        /**
         * Checks whether or not this composite component is mounted.
         * @param {ReactClass} publicInstance The instance we want to test.
         * @return {boolean} True if mounted, false otherwise.
         * @protected
         * @final
         */
        isMounted: function(publicInstance) {
          return !1;
        },
        /**
         * Forces an update. This should only be invoked when it is known with
         * certainty that we are **not** in a DOM transaction.
         *
         * You may want to call this when you know that some deeper aspect of the
         * component's state has changed but `setState` was not called.
         *
         * This will not invoke `shouldComponentUpdate`, but it will invoke
         * `componentWillUpdate` and `componentDidUpdate`.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {?function} callback Called after component is updated.
         * @param {?string} callerName name of the calling function in the public API.
         * @internal
         */
        enqueueForceUpdate: function(publicInstance, callback, callerName) {
          warnNoop(publicInstance, "forceUpdate");
        },
        /**
         * Replaces all of the state. Always use this or `setState` to mutate state.
         * You should treat `this.state` as immutable.
         *
         * There is no guarantee that `this.state` will be immediately updated, so
         * accessing `this.state` after calling this method may return the old value.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} completeState Next state.
         * @param {?function} callback Called after component is updated.
         * @param {?string} callerName name of the calling function in the public API.
         * @internal
         */
        enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {
          warnNoop(publicInstance, "replaceState");
        },
        /**
         * Sets a subset of the state. This only exists because _pendingState is
         * internal. This provides a merging strategy that is not available to deep
         * properties which is confusing. TODO: Expose pendingState or don't use it
         * during the merge.
         *
         * @param {ReactClass} publicInstance The instance that should rerender.
         * @param {object} partialState Next partial state to be merged with state.
         * @param {?function} callback Called after component is updated.
         * @param {?string} Name of the calling function in the public API.
         * @internal
         */
        enqueueSetState: function(publicInstance, partialState, callback, callerName) {
          warnNoop(publicInstance, "setState");
        }
      }, assign = Object.assign, emptyObject = {};
      Object.freeze(emptyObject);
      function Component2(props, context, updater) {
        this.props = props, this.context = context, this.refs = emptyObject, this.updater = updater || ReactNoopUpdateQueue;
      }
      Component2.prototype.isReactComponent = {}, Component2.prototype.setState = function(partialState, callback) {
        if (typeof partialState != "object" && typeof partialState != "function" && partialState != null)
          throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        this.updater.enqueueSetState(this, partialState, callback, "setState");
      }, Component2.prototype.forceUpdate = function(callback) {
        this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
      };
      {
        var deprecatedAPIs = {
          isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
          replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
        }, defineDeprecationWarning = function(methodName, info) {
          Object.defineProperty(Component2.prototype, methodName, {
            get: function() {
              warn("%s(...) is deprecated in plain JavaScript React classes. %s", info[0], info[1]);
            }
          });
        };
        for (var fnName in deprecatedAPIs)
          deprecatedAPIs.hasOwnProperty(fnName) && defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
      }
      function ComponentDummy() {
      }
      ComponentDummy.prototype = Component2.prototype;
      function PureComponent(props, context, updater) {
        this.props = props, this.context = context, this.refs = emptyObject, this.updater = updater || ReactNoopUpdateQueue;
      }
      var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
      pureComponentPrototype.constructor = PureComponent, assign(pureComponentPrototype, Component2.prototype), pureComponentPrototype.isPureReactComponent = !0;
      function createRef() {
        var refObject = {
          current: null
        };
        return Object.seal(refObject), refObject;
      }
      var isArrayImpl = Array.isArray;
      function isArray(a13) {
        return isArrayImpl(a13);
      }
      function typeName(value) {
        {
          var hasToStringTag = typeof Symbol == "function" && Symbol.toStringTag, type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
          return type;
        }
      }
      function willCoercionThrow(value) {
        try {
          return testStringCoercion(value), !1;
        } catch {
          return !0;
        }
      }
      function testStringCoercion(value) {
        return "" + value;
      }
      function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value))
          return error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value)), testStringCoercion(value);
      }
      function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName)
          return displayName;
        var functionName = innerType.displayName || innerType.name || "";
        return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
      }
      function getContextName(type) {
        return type.displayName || "Context";
      }
      function getComponentNameFromType(type) {
        if (type == null)
          return null;
        if (typeof type.tag == "number" && error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof type == "function")
          return type.displayName || type.name || null;
        if (typeof type == "string")
          return type;
        switch (type) {
          case REACT_FRAGMENT_TYPE:
            return "Fragment";
          case REACT_PORTAL_TYPE:
            return "Portal";
          case REACT_PROFILER_TYPE:
            return "Profiler";
          case REACT_STRICT_MODE_TYPE:
            return "StrictMode";
          case REACT_SUSPENSE_TYPE:
            return "Suspense";
          case REACT_SUSPENSE_LIST_TYPE:
            return "SuspenseList";
        }
        if (typeof type == "object")
          switch (type.$$typeof) {
            case REACT_CONTEXT_TYPE:
              var context = type;
              return getContextName(context) + ".Consumer";
            case REACT_PROVIDER_TYPE:
              var provider = type;
              return getContextName(provider._context) + ".Provider";
            case REACT_FORWARD_REF_TYPE:
              return getWrappedName(type, type.render, "ForwardRef");
            case REACT_MEMO_TYPE:
              var outerName = type.displayName || null;
              return outerName !== null ? outerName : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE: {
              var lazyComponent = type, payload = lazyComponent._payload, init = lazyComponent._init;
              try {
                return getComponentNameFromType(init(payload));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var hasOwnProperty = Object.prototype.hasOwnProperty, RESERVED_PROPS = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
      }, specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
      didWarnAboutStringRefs = {};
      function hasValidRef(config) {
        if (hasOwnProperty.call(config, "ref")) {
          var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
          if (getter && getter.isReactWarning)
            return !1;
        }
        return config.ref !== void 0;
      }
      function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
          var getter = Object.getOwnPropertyDescriptor(config, "key").get;
          if (getter && getter.isReactWarning)
            return !1;
        }
        return config.key !== void 0;
      }
      function defineKeyPropWarningGetter(props, displayName) {
        var warnAboutAccessingKey = function() {
          specialPropKeyWarningShown || (specialPropKeyWarningShown = !0, error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName));
        };
        warnAboutAccessingKey.isReactWarning = !0, Object.defineProperty(props, "key", {
          get: warnAboutAccessingKey,
          configurable: !0
        });
      }
      function defineRefPropWarningGetter(props, displayName) {
        var warnAboutAccessingRef = function() {
          specialPropRefWarningShown || (specialPropRefWarningShown = !0, error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName));
        };
        warnAboutAccessingRef.isReactWarning = !0, Object.defineProperty(props, "ref", {
          get: warnAboutAccessingRef,
          configurable: !0
        });
      }
      function warnIfStringRefCannotBeAutoConverted(config) {
        if (typeof config.ref == "string" && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
          var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
          didWarnAboutStringRefs[componentName] || (error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref), didWarnAboutStringRefs[componentName] = !0);
        }
      }
      var ReactElement = function(type, key, ref, self2, source, owner, props) {
        var element = {
          // This tag allows us to uniquely identify this as a React Element
          $$typeof: REACT_ELEMENT_TYPE,
          // Built-in properties that belong on the element
          type,
          key,
          ref,
          props,
          // Record the component responsible for creating this element.
          _owner: owner
        };
        return element._store = {}, Object.defineProperty(element._store, "validated", {
          configurable: !1,
          enumerable: !1,
          writable: !0,
          value: !1
        }), Object.defineProperty(element, "_self", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: self2
        }), Object.defineProperty(element, "_source", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: source
        }), Object.freeze && (Object.freeze(element.props), Object.freeze(element)), element;
      };
      function createElement17(type, config, children) {
        var propName, props = {}, key = null, ref = null, self2 = null, source = null;
        if (config != null) {
          hasValidRef(config) && (ref = config.ref, warnIfStringRefCannotBeAutoConverted(config)), hasValidKey(config) && (checkKeyStringCoercion(config.key), key = "" + config.key), self2 = config.__self === void 0 ? null : config.__self, source = config.__source === void 0 ? null : config.__source;
          for (propName in config)
            hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName) && (props[propName] = config[propName]);
        }
        var childrenLength = arguments.length - 2;
        if (childrenLength === 1)
          props.children = children;
        else if (childrenLength > 1) {
          for (var childArray = Array(childrenLength), i7 = 0; i7 < childrenLength; i7++)
            childArray[i7] = arguments[i7 + 2];
          Object.freeze && Object.freeze(childArray), props.children = childArray;
        }
        if (type && type.defaultProps) {
          var defaultProps = type.defaultProps;
          for (propName in defaultProps)
            props[propName] === void 0 && (props[propName] = defaultProps[propName]);
        }
        if (key || ref) {
          var displayName = typeof type == "function" ? type.displayName || type.name || "Unknown" : type;
          key && defineKeyPropWarningGetter(props, displayName), ref && defineRefPropWarningGetter(props, displayName);
        }
        return ReactElement(type, key, ref, self2, source, ReactCurrentOwner.current, props);
      }
      function cloneAndReplaceKey(oldElement, newKey) {
        var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
        return newElement;
      }
      function cloneElement(element, config, children) {
        if (element == null)
          throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
        var propName, props = assign({}, element.props), key = element.key, ref = element.ref, self2 = element._self, source = element._source, owner = element._owner;
        if (config != null) {
          hasValidRef(config) && (ref = config.ref, owner = ReactCurrentOwner.current), hasValidKey(config) && (checkKeyStringCoercion(config.key), key = "" + config.key);
          var defaultProps;
          element.type && element.type.defaultProps && (defaultProps = element.type.defaultProps);
          for (propName in config)
            hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName) && (config[propName] === void 0 && defaultProps !== void 0 ? props[propName] = defaultProps[propName] : props[propName] = config[propName]);
        }
        var childrenLength = arguments.length - 2;
        if (childrenLength === 1)
          props.children = children;
        else if (childrenLength > 1) {
          for (var childArray = Array(childrenLength), i7 = 0; i7 < childrenLength; i7++)
            childArray[i7] = arguments[i7 + 2];
          props.children = childArray;
        }
        return ReactElement(element.type, key, ref, self2, source, owner, props);
      }
      function isValidElement2(object) {
        return typeof object == "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
      }
      var SEPARATOR = ".", SUBSEPARATOR = ":";
      function escape(key) {
        var escapeRegex = /[=:]/g, escaperLookup = {
          "=": "=0",
          ":": "=2"
        }, escapedString = key.replace(escapeRegex, function(match) {
          return escaperLookup[match];
        });
        return "$" + escapedString;
      }
      var didWarnAboutMaps = !1, userProvidedKeyEscapeRegex = /\/+/g;
      function escapeUserProvidedKey(text) {
        return text.replace(userProvidedKeyEscapeRegex, "$&/");
      }
      function getElementKey(element, index3) {
        return typeof element == "object" && element !== null && element.key != null ? (checkKeyStringCoercion(element.key), escape("" + element.key)) : index3.toString(36);
      }
      function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
        var type = typeof children;
        (type === "undefined" || type === "boolean") && (children = null);
        var invokeCallback = !1;
        if (children === null)
          invokeCallback = !0;
        else
          switch (type) {
            case "string":
            case "number":
              invokeCallback = !0;
              break;
            case "object":
              switch (children.$$typeof) {
                case REACT_ELEMENT_TYPE:
                case REACT_PORTAL_TYPE:
                  invokeCallback = !0;
              }
          }
        if (invokeCallback) {
          var _child = children, mappedChild = callback(_child), childKey = nameSoFar === "" ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
          if (isArray(mappedChild)) {
            var escapedChildKey = "";
            childKey != null && (escapedChildKey = escapeUserProvidedKey(childKey) + "/"), mapIntoArray(mappedChild, array, escapedChildKey, "", function(c13) {
              return c13;
            });
          } else
            mappedChild != null && (isValidElement2(mappedChild) && (mappedChild.key && (!_child || _child.key !== mappedChild.key) && checkKeyStringCoercion(mappedChild.key), mappedChild = cloneAndReplaceKey(
              mappedChild,
              // Keep both the (mapped) and old keys if they differ, just as
              // traverseAllChildren used to do for objects as children
              escapedPrefix + // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
              (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? (
                // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
                // eslint-disable-next-line react-internal/safe-string-coercion
                escapeUserProvidedKey("" + mappedChild.key) + "/"
              ) : "") + childKey
            )), array.push(mappedChild));
          return 1;
        }
        var child, nextName, subtreeCount = 0, nextNamePrefix = nameSoFar === "" ? SEPARATOR : nameSoFar + SUBSEPARATOR;
        if (isArray(children))
          for (var i7 = 0; i7 < children.length; i7++)
            child = children[i7], nextName = nextNamePrefix + getElementKey(child, i7), subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
        else {
          var iteratorFn = getIteratorFn(children);
          if (typeof iteratorFn == "function") {
            var iterableChildren = children;
            iteratorFn === iterableChildren.entries && (didWarnAboutMaps || warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), didWarnAboutMaps = !0);
            for (var iterator = iteratorFn.call(iterableChildren), step, ii = 0; !(step = iterator.next()).done; )
              child = step.value, nextName = nextNamePrefix + getElementKey(child, ii++), subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
          } else if (type === "object") {
            var childrenString = String(children);
            throw new Error("Objects are not valid as a React child (found: " + (childrenString === "[object Object]" ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString) + "). If you meant to render a collection of children, use an array instead.");
          }
        }
        return subtreeCount;
      }
      function mapChildren(children, func, context) {
        if (children == null)
          return children;
        var result = [], count = 0;
        return mapIntoArray(children, result, "", "", function(child) {
          return func.call(context, child, count++);
        }), result;
      }
      function countChildren(children) {
        var n7 = 0;
        return mapChildren(children, function() {
          n7++;
        }), n7;
      }
      function forEachChildren(children, forEachFunc, forEachContext) {
        mapChildren(children, function() {
          forEachFunc.apply(this, arguments);
        }, forEachContext);
      }
      function toArray(children) {
        return mapChildren(children, function(child) {
          return child;
        }) || [];
      }
      function onlyChild(children) {
        if (!isValidElement2(children))
          throw new Error("React.Children.only expected to receive a single React element child.");
        return children;
      }
      function createContext5(defaultValue) {
        var context = {
          $$typeof: REACT_CONTEXT_TYPE,
          // As a workaround to support multiple concurrent renderers, we categorize
          // some renderers as primary and others as secondary. We only expect
          // there to be two concurrent renderers at most: React Native (primary) and
          // Fabric (secondary); React DOM (primary) and React ART (secondary).
          // Secondary renderers store their context values on separate fields.
          _currentValue: defaultValue,
          _currentValue2: defaultValue,
          // Used to track how many concurrent renderers this context currently
          // supports within in a single renderer. Such as parallel server rendering.
          _threadCount: 0,
          // These are circular
          Provider: null,
          Consumer: null,
          // Add these to use same hidden class in VM as ServerContext
          _defaultValue: null,
          _globalName: null
        };
        context.Provider = {
          $$typeof: REACT_PROVIDER_TYPE,
          _context: context
        };
        var hasWarnedAboutUsingNestedContextConsumers = !1, hasWarnedAboutUsingConsumerProvider = !1, hasWarnedAboutDisplayNameOnConsumer = !1;
        {
          var Consumer = {
            $$typeof: REACT_CONTEXT_TYPE,
            _context: context
          };
          Object.defineProperties(Consumer, {
            Provider: {
              get: function() {
                return hasWarnedAboutUsingConsumerProvider || (hasWarnedAboutUsingConsumerProvider = !0, error("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?")), context.Provider;
              },
              set: function(_Provider) {
                context.Provider = _Provider;
              }
            },
            _currentValue: {
              get: function() {
                return context._currentValue;
              },
              set: function(_currentValue) {
                context._currentValue = _currentValue;
              }
            },
            _currentValue2: {
              get: function() {
                return context._currentValue2;
              },
              set: function(_currentValue2) {
                context._currentValue2 = _currentValue2;
              }
            },
            _threadCount: {
              get: function() {
                return context._threadCount;
              },
              set: function(_threadCount) {
                context._threadCount = _threadCount;
              }
            },
            Consumer: {
              get: function() {
                return hasWarnedAboutUsingNestedContextConsumers || (hasWarnedAboutUsingNestedContextConsumers = !0, error("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?")), context.Consumer;
              }
            },
            displayName: {
              get: function() {
                return context.displayName;
              },
              set: function(displayName) {
                hasWarnedAboutDisplayNameOnConsumer || (warn("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", displayName), hasWarnedAboutDisplayNameOnConsumer = !0);
              }
            }
          }), context.Consumer = Consumer;
        }
        return context._currentRenderer = null, context._currentRenderer2 = null, context;
      }
      var Uninitialized = -1, Pending = 0, Resolved = 1, Rejected = 2;
      function lazyInitializer(payload) {
        if (payload._status === Uninitialized) {
          var ctor = payload._result, thenable = ctor();
          if (thenable.then(function(moduleObject2) {
            if (payload._status === Pending || payload._status === Uninitialized) {
              var resolved = payload;
              resolved._status = Resolved, resolved._result = moduleObject2;
            }
          }, function(error2) {
            if (payload._status === Pending || payload._status === Uninitialized) {
              var rejected = payload;
              rejected._status = Rejected, rejected._result = error2;
            }
          }), payload._status === Uninitialized) {
            var pending = payload;
            pending._status = Pending, pending._result = thenable;
          }
        }
        if (payload._status === Resolved) {
          var moduleObject = payload._result;
          return moduleObject === void 0 && error(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))

Did you accidentally put curly braces around the import?`, moduleObject), "default" in moduleObject || error(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))`, moduleObject), moduleObject.default;
        } else
          throw payload._result;
      }
      function lazy2(ctor) {
        var payload = {
          // We use these fields to store the result.
          _status: Uninitialized,
          _result: ctor
        }, lazyType = {
          $$typeof: REACT_LAZY_TYPE,
          _payload: payload,
          _init: lazyInitializer
        };
        {
          var defaultProps, propTypes;
          Object.defineProperties(lazyType, {
            defaultProps: {
              configurable: !0,
              get: function() {
                return defaultProps;
              },
              set: function(newDefaultProps) {
                error("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."), defaultProps = newDefaultProps, Object.defineProperty(lazyType, "defaultProps", {
                  enumerable: !0
                });
              }
            },
            propTypes: {
              configurable: !0,
              get: function() {
                return propTypes;
              },
              set: function(newPropTypes) {
                error("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."), propTypes = newPropTypes, Object.defineProperty(lazyType, "propTypes", {
                  enumerable: !0
                });
              }
            }
          });
        }
        return lazyType;
      }
      function forwardRef15(render) {
        render != null && render.$$typeof === REACT_MEMO_TYPE ? error("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).") : typeof render != "function" ? error("forwardRef requires a render function but was given %s.", render === null ? "null" : typeof render) : render.length !== 0 && render.length !== 2 && error("forwardRef render functions accept exactly two parameters: props and ref. %s", render.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined."), render != null && (render.defaultProps != null || render.propTypes != null) && error("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
        var elementType = {
          $$typeof: REACT_FORWARD_REF_TYPE,
          render
        };
        {
          var ownName;
          Object.defineProperty(elementType, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
              return ownName;
            },
            set: function(name) {
              ownName = name, !render.name && !render.displayName && (render.displayName = name);
            }
          });
        }
        return elementType;
      }
      var REACT_MODULE_REFERENCE;
      REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
      function isValidElementType(type) {
        return !!(typeof type == "string" || typeof type == "function" || type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing || typeof type == "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
        // types supported by any Flight configuration anywhere since
        // we don't know which Flight build this will end up being used
        // with.
        type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0));
      }
      function memo(type, compare) {
        isValidElementType(type) || error("memo: The first argument must be a component. Instead received: %s", type === null ? "null" : typeof type);
        var elementType = {
          $$typeof: REACT_MEMO_TYPE,
          type,
          compare: compare === void 0 ? null : compare
        };
        {
          var ownName;
          Object.defineProperty(elementType, "displayName", {
            enumerable: !1,
            configurable: !0,
            get: function() {
              return ownName;
            },
            set: function(name) {
              ownName = name, !type.name && !type.displayName && (type.displayName = name);
            }
          });
        }
        return elementType;
      }
      function resolveDispatcher() {
        var dispatcher = ReactCurrentDispatcher.current;
        return dispatcher === null && error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`), dispatcher;
      }
      function useContext7(Context) {
        var dispatcher = resolveDispatcher();
        if (Context._context !== void 0) {
          var realContext = Context._context;
          realContext.Consumer === Context ? error("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?") : realContext.Provider === Context && error("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
        }
        return dispatcher.useContext(Context);
      }
      function useState22(initialState) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useState(initialState);
      }
      function useReducer(reducer, initialArg, init) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useReducer(reducer, initialArg, init);
      }
      function useRef9(initialValue) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useRef(initialValue);
      }
      function useEffect16(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useEffect(create, deps);
      }
      function useInsertionEffect(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useInsertionEffect(create, deps);
      }
      function useLayoutEffect3(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useLayoutEffect(create, deps);
      }
      function useCallback4(callback, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useCallback(callback, deps);
      }
      function useMemo10(create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useMemo(create, deps);
      }
      function useImperativeHandle(ref, create, deps) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useImperativeHandle(ref, create, deps);
      }
      function useDebugValue(value, formatterFn) {
        {
          var dispatcher = resolveDispatcher();
          return dispatcher.useDebugValue(value, formatterFn);
        }
      }
      function useTransition2() {
        var dispatcher = resolveDispatcher();
        return dispatcher.useTransition();
      }
      function useDeferredValue(value) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useDeferredValue(value);
      }
      function useId() {
        var dispatcher = resolveDispatcher();
        return dispatcher.useId();
      }
      function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var dispatcher = resolveDispatcher();
        return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
      }
      var disabledDepth = 0, prevLog, prevInfo, prevWarn, prevError, prevGroup, prevGroupCollapsed, prevGroupEnd;
      function disabledLog() {
      }
      disabledLog.__reactDisabledLog = !0;
      function disableLogs() {
        {
          if (disabledDepth === 0) {
            prevLog = console.log, prevInfo = console.info, prevWarn = console.warn, prevError = console.error, prevGroup = console.group, prevGroupCollapsed = console.groupCollapsed, prevGroupEnd = console.groupEnd;
            var props = {
              configurable: !0,
              enumerable: !0,
              value: disabledLog,
              writable: !0
            };
            Object.defineProperties(console, {
              info: props,
              log: props,
              warn: props,
              error: props,
              group: props,
              groupCollapsed: props,
              groupEnd: props
            });
          }
          disabledDepth++;
        }
      }
      function reenableLogs() {
        {
          if (disabledDepth--, disabledDepth === 0) {
            var props = {
              configurable: !0,
              enumerable: !0,
              writable: !0
            };
            Object.defineProperties(console, {
              log: assign({}, props, {
                value: prevLog
              }),
              info: assign({}, props, {
                value: prevInfo
              }),
              warn: assign({}, props, {
                value: prevWarn
              }),
              error: assign({}, props, {
                value: prevError
              }),
              group: assign({}, props, {
                value: prevGroup
              }),
              groupCollapsed: assign({}, props, {
                value: prevGroupCollapsed
              }),
              groupEnd: assign({}, props, {
                value: prevGroupEnd
              })
            });
          }
          disabledDepth < 0 && error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }
      }
      var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, prefix;
      function describeBuiltInComponentFrame(name, source, ownerFn) {
        {
          if (prefix === void 0)
            try {
              throw Error();
            } catch (x5) {
              var match = x5.stack.trim().match(/\n( *(at )?)/);
              prefix = match && match[1] || "";
            }
          return `
` + prefix + name;
        }
      }
      var reentry = !1, componentFrameCache;
      {
        var PossiblyWeakMap = typeof WeakMap == "function" ? WeakMap : Map;
        componentFrameCache = new PossiblyWeakMap();
      }
      function describeNativeComponentFrame(fn, construct) {
        if (!fn || reentry)
          return "";
        {
          var frame = componentFrameCache.get(fn);
          if (frame !== void 0)
            return frame;
        }
        var control;
        reentry = !0;
        var previousPrepareStackTrace = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher$1.current, ReactCurrentDispatcher$1.current = null, disableLogs();
        try {
          if (construct) {
            var Fake = function() {
              throw Error();
            };
            if (Object.defineProperty(Fake.prototype, "props", {
              set: function() {
                throw Error();
              }
            }), typeof Reflect == "object" && Reflect.construct) {
              try {
                Reflect.construct(Fake, []);
              } catch (x5) {
                control = x5;
              }
              Reflect.construct(fn, [], Fake);
            } else {
              try {
                Fake.call();
              } catch (x5) {
                control = x5;
              }
              fn.call(Fake.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (x5) {
              control = x5;
            }
            fn();
          }
        } catch (sample) {
          if (sample && control && typeof sample.stack == "string") {
            for (var sampleLines = sample.stack.split(`
`), controlLines = control.stack.split(`
`), s15 = sampleLines.length - 1, c13 = controlLines.length - 1; s15 >= 1 && c13 >= 0 && sampleLines[s15] !== controlLines[c13]; )
              c13--;
            for (; s15 >= 1 && c13 >= 0; s15--, c13--)
              if (sampleLines[s15] !== controlLines[c13]) {
                if (s15 !== 1 || c13 !== 1)
                  do
                    if (s15--, c13--, c13 < 0 || sampleLines[s15] !== controlLines[c13]) {
                      var _frame = `
` + sampleLines[s15].replace(" at new ", " at ");
                      return fn.displayName && _frame.includes("<anonymous>") && (_frame = _frame.replace("<anonymous>", fn.displayName)), typeof fn == "function" && componentFrameCache.set(fn, _frame), _frame;
                    }
                  while (s15 >= 1 && c13 >= 0);
                break;
              }
          }
        } finally {
          reentry = !1, ReactCurrentDispatcher$1.current = previousDispatcher, reenableLogs(), Error.prepareStackTrace = previousPrepareStackTrace;
        }
        var name = fn ? fn.displayName || fn.name : "", syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
        return typeof fn == "function" && componentFrameCache.set(fn, syntheticFrame), syntheticFrame;
      }
      function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, !1);
      }
      function shouldConstruct(Component3) {
        var prototype = Component3.prototype;
        return !!(prototype && prototype.isReactComponent);
      }
      function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null)
          return "";
        if (typeof type == "function")
          return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type == "string")
          return describeBuiltInComponentFrame(type);
        switch (type) {
          case REACT_SUSPENSE_TYPE:
            return describeBuiltInComponentFrame("Suspense");
          case REACT_SUSPENSE_LIST_TYPE:
            return describeBuiltInComponentFrame("SuspenseList");
        }
        if (typeof type == "object")
          switch (type.$$typeof) {
            case REACT_FORWARD_REF_TYPE:
              return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
              return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE: {
              var lazyComponent = type, payload = lazyComponent._payload, init = lazyComponent._init;
              try {
                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
              } catch {
              }
            }
          }
        return "";
      }
      var loggedTypeFailures = {}, ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
      function setCurrentlyValidatingElement(element) {
        if (element) {
          var owner = element._owner, stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
          ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else
          ReactDebugCurrentFrame$1.setExtraStackFrame(null);
      }
      function checkPropTypes(typeSpecs, values, location, componentName, element) {
        {
          var has = Function.call.bind(hasOwnProperty);
          for (var typeSpecName in typeSpecs)
            if (has(typeSpecs, typeSpecName)) {
              var error$1 = void 0;
              try {
                if (typeof typeSpecs[typeSpecName] != "function") {
                  var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw err.name = "Invariant Violation", err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (ex) {
                error$1 = ex;
              }
              error$1 && !(error$1 instanceof Error) && (setCurrentlyValidatingElement(element), error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1), setCurrentlyValidatingElement(null)), error$1 instanceof Error && !(error$1.message in loggedTypeFailures) && (loggedTypeFailures[error$1.message] = !0, setCurrentlyValidatingElement(element), error("Failed %s type: %s", location, error$1.message), setCurrentlyValidatingElement(null));
            }
        }
      }
      function setCurrentlyValidatingElement$1(element) {
        if (element) {
          var owner = element._owner, stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
          setExtraStackFrame(stack);
        } else
          setExtraStackFrame(null);
      }
      var propTypesMisspellWarningShown;
      propTypesMisspellWarningShown = !1;
      function getDeclarationErrorAddendum() {
        if (ReactCurrentOwner.current) {
          var name = getComponentNameFromType(ReactCurrentOwner.current.type);
          if (name)
            return `

Check the render method of \`` + name + "`.";
        }
        return "";
      }
      function getSourceInfoErrorAddendum(source) {
        if (source !== void 0) {
          var fileName = source.fileName.replace(/^.*[\\\/]/, ""), lineNumber = source.lineNumber;
          return `

Check your code at ` + fileName + ":" + lineNumber + ".";
        }
        return "";
      }
      function getSourceInfoErrorAddendumForProps(elementProps) {
        return elementProps != null ? getSourceInfoErrorAddendum(elementProps.__source) : "";
      }
      var ownerHasKeyUseWarning = {};
      function getCurrentComponentErrorInfo(parentType) {
        var info = getDeclarationErrorAddendum();
        if (!info) {
          var parentName = typeof parentType == "string" ? parentType : parentType.displayName || parentType.name;
          parentName && (info = `

Check the top-level render call using <` + parentName + ">.");
        }
        return info;
      }
      function validateExplicitKey(element, parentType) {
        if (!(!element._store || element._store.validated || element.key != null)) {
          element._store.validated = !0;
          var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
          if (!ownerHasKeyUseWarning[currentComponentErrorInfo]) {
            ownerHasKeyUseWarning[currentComponentErrorInfo] = !0;
            var childOwner = "";
            element && element._owner && element._owner !== ReactCurrentOwner.current && (childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + "."), setCurrentlyValidatingElement$1(element), error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner), setCurrentlyValidatingElement$1(null);
          }
        }
      }
      function validateChildKeys(node, parentType) {
        if (typeof node == "object") {
          if (isArray(node))
            for (var i7 = 0; i7 < node.length; i7++) {
              var child = node[i7];
              isValidElement2(child) && validateExplicitKey(child, parentType);
            }
          else if (isValidElement2(node))
            node._store && (node._store.validated = !0);
          else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn == "function" && iteratorFn !== node.entries)
              for (var iterator = iteratorFn.call(node), step; !(step = iterator.next()).done; )
                isValidElement2(step.value) && validateExplicitKey(step.value, parentType);
          }
        }
      }
      function validatePropTypes(element) {
        {
          var type = element.type;
          if (type == null || typeof type == "string")
            return;
          var propTypes;
          if (typeof type == "function")
            propTypes = type.propTypes;
          else if (typeof type == "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
          // Inner props are checked in the reconciler.
          type.$$typeof === REACT_MEMO_TYPE))
            propTypes = type.propTypes;
          else
            return;
          if (propTypes) {
            var name = getComponentNameFromType(type);
            checkPropTypes(propTypes, element.props, "prop", name, element);
          } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = !0;
            var _name = getComponentNameFromType(type);
            error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
          }
          typeof type.getDefaultProps == "function" && !type.getDefaultProps.isReactClassApproved && error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
        }
      }
      function validateFragmentProps(fragment) {
        {
          for (var keys2 = Object.keys(fragment.props), i7 = 0; i7 < keys2.length; i7++) {
            var key = keys2[i7];
            if (key !== "children" && key !== "key") {
              setCurrentlyValidatingElement$1(fragment), error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key), setCurrentlyValidatingElement$1(null);
              break;
            }
          }
          fragment.ref !== null && (setCurrentlyValidatingElement$1(fragment), error("Invalid attribute `ref` supplied to `React.Fragment`."), setCurrentlyValidatingElement$1(null));
        }
      }
      function createElementWithValidation(type, props, children) {
        var validType = isValidElementType(type);
        if (!validType) {
          var info = "";
          (type === void 0 || typeof type == "object" && type !== null && Object.keys(type).length === 0) && (info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var sourceInfo = getSourceInfoErrorAddendumForProps(props);
          sourceInfo ? info += sourceInfo : info += getDeclarationErrorAddendum();
          var typeString;
          type === null ? typeString = "null" : isArray(type) ? typeString = "array" : type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE ? (typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />", info = " Did you accidentally export a JSX literal instead of a component?") : typeString = typeof type, error("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
        }
        var element = createElement17.apply(this, arguments);
        if (element == null)
          return element;
        if (validType)
          for (var i7 = 2; i7 < arguments.length; i7++)
            validateChildKeys(arguments[i7], type);
        return type === REACT_FRAGMENT_TYPE ? validateFragmentProps(element) : validatePropTypes(element), element;
      }
      var didWarnAboutDeprecatedCreateFactory = !1;
      function createFactoryWithValidation(type) {
        var validatedFactory = createElementWithValidation.bind(null, type);
        return validatedFactory.type = type, didWarnAboutDeprecatedCreateFactory || (didWarnAboutDeprecatedCreateFactory = !0, warn("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.")), Object.defineProperty(validatedFactory, "type", {
          enumerable: !1,
          get: function() {
            return warn("Factory.type is deprecated. Access the class directly before passing it to createFactory."), Object.defineProperty(this, "type", {
              value: type
            }), type;
          }
        }), validatedFactory;
      }
      function cloneElementWithValidation(element, props, children) {
        for (var newElement = cloneElement.apply(this, arguments), i7 = 2; i7 < arguments.length; i7++)
          validateChildKeys(arguments[i7], newElement.type);
        return validatePropTypes(newElement), newElement;
      }
      function startTransition(scope, options) {
        var prevTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition = {};
        var currentTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition._updatedFibers = /* @__PURE__ */ new Set();
        try {
          scope();
        } finally {
          if (ReactCurrentBatchConfig.transition = prevTransition, prevTransition === null && currentTransition._updatedFibers) {
            var updatedFibersCount = currentTransition._updatedFibers.size;
            updatedFibersCount > 10 && warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."), currentTransition._updatedFibers.clear();
          }
        }
      }
      var didWarnAboutMessageChannel = !1, enqueueTaskImpl = null;
      function enqueueTask(task) {
        if (enqueueTaskImpl === null)
          try {
            var requireString = ("require" + Math.random()).slice(0, 7), nodeRequire = module && module[requireString];
            enqueueTaskImpl = nodeRequire.call(module, "timers").setImmediate;
          } catch {
            enqueueTaskImpl = function(callback) {
              didWarnAboutMessageChannel === !1 && (didWarnAboutMessageChannel = !0, typeof MessageChannel > "u" && error("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning."));
              var channel = new MessageChannel();
              channel.port1.onmessage = callback, channel.port2.postMessage(void 0);
            };
          }
        return enqueueTaskImpl(task);
      }
      var actScopeDepth = 0, didWarnNoAwaitAct = !1;
      function act(callback) {
        {
          var prevActScopeDepth = actScopeDepth;
          actScopeDepth++, ReactCurrentActQueue.current === null && (ReactCurrentActQueue.current = []);
          var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy, result;
          try {
            if (ReactCurrentActQueue.isBatchingLegacy = !0, result = callback(), !prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
              var queue = ReactCurrentActQueue.current;
              queue !== null && (ReactCurrentActQueue.didScheduleLegacyUpdate = !1, flushActQueue(queue));
            }
          } catch (error2) {
            throw popActScope(prevActScopeDepth), error2;
          } finally {
            ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
          }
          if (result !== null && typeof result == "object" && typeof result.then == "function") {
            var thenableResult = result, wasAwaited = !1, thenable = {
              then: function(resolve, reject) {
                wasAwaited = !0, thenableResult.then(function(returnValue2) {
                  popActScope(prevActScopeDepth), actScopeDepth === 0 ? recursivelyFlushAsyncActWork(returnValue2, resolve, reject) : resolve(returnValue2);
                }, function(error2) {
                  popActScope(prevActScopeDepth), reject(error2);
                });
              }
            };
            return !didWarnNoAwaitAct && typeof Promise < "u" && Promise.resolve().then(function() {
            }).then(function() {
              wasAwaited || (didWarnNoAwaitAct = !0, error("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);"));
            }), thenable;
          } else {
            var returnValue = result;
            if (popActScope(prevActScopeDepth), actScopeDepth === 0) {
              var _queue = ReactCurrentActQueue.current;
              _queue !== null && (flushActQueue(_queue), ReactCurrentActQueue.current = null);
              var _thenable = {
                then: function(resolve, reject) {
                  ReactCurrentActQueue.current === null ? (ReactCurrentActQueue.current = [], recursivelyFlushAsyncActWork(returnValue, resolve, reject)) : resolve(returnValue);
                }
              };
              return _thenable;
            } else {
              var _thenable2 = {
                then: function(resolve, reject) {
                  resolve(returnValue);
                }
              };
              return _thenable2;
            }
          }
        }
      }
      function popActScope(prevActScopeDepth) {
        prevActScopeDepth !== actScopeDepth - 1 && error("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. "), actScopeDepth = prevActScopeDepth;
      }
      function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
        {
          var queue = ReactCurrentActQueue.current;
          if (queue !== null)
            try {
              flushActQueue(queue), enqueueTask(function() {
                queue.length === 0 ? (ReactCurrentActQueue.current = null, resolve(returnValue)) : recursivelyFlushAsyncActWork(returnValue, resolve, reject);
              });
            } catch (error2) {
              reject(error2);
            }
          else
            resolve(returnValue);
        }
      }
      var isFlushing = !1;
      function flushActQueue(queue) {
        if (!isFlushing) {
          isFlushing = !0;
          var i7 = 0;
          try {
            for (; i7 < queue.length; i7++) {
              var callback = queue[i7];
              do
                callback = callback(!0);
              while (callback !== null);
            }
            queue.length = 0;
          } catch (error2) {
            throw queue = queue.slice(i7 + 1), error2;
          } finally {
            isFlushing = !1;
          }
        }
      }
      var createElement$1 = createElementWithValidation, cloneElement$1 = cloneElementWithValidation, createFactory = createFactoryWithValidation, Children2 = {
        map: mapChildren,
        forEach: forEachChildren,
        count: countChildren,
        toArray,
        only: onlyChild
      };
      exports.Children = Children2, exports.Component = Component2, exports.Fragment = REACT_FRAGMENT_TYPE, exports.Profiler = REACT_PROFILER_TYPE, exports.PureComponent = PureComponent, exports.StrictMode = REACT_STRICT_MODE_TYPE, exports.Suspense = REACT_SUSPENSE_TYPE, exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals, exports.cloneElement = cloneElement$1, exports.createContext = createContext5, exports.createElement = createElement$1, exports.createFactory = createFactory, exports.createRef = createRef, exports.forwardRef = forwardRef15, exports.isValidElement = isValidElement2, exports.lazy = lazy2, exports.memo = memo, exports.startTransition = startTransition, exports.unstable_act = act, exports.useCallback = useCallback4, exports.useContext = useContext7, exports.useDebugValue = useDebugValue, exports.useDeferredValue = useDeferredValue, exports.useEffect = useEffect16, exports.useId = useId, exports.useImperativeHandle = useImperativeHandle, exports.useInsertionEffect = useInsertionEffect, exports.useLayoutEffect = useLayoutEffect3, exports.useMemo = useMemo10, exports.useReducer = useReducer, exports.useRef = useRef9, exports.useState = useState22, exports.useSyncExternalStore = useSyncExternalStore, exports.useTransition = useTransition2, exports.version = ReactVersion, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
    })();
  }
});

// node_modules/react/index.js
var require_react = __commonJS({
  "node_modules/react/index.js"(exports, module) {
    "use strict";
    module.exports = require_react_development();
  }
});

// node_modules/@remix-run/router/dist/router.js
var router_exports = {};
__export(router_exports, {
  AbortedDeferredError: () => AbortedDeferredError,
  Action: () => Action,
  ErrorResponse: () => ErrorResponse,
  IDLE_BLOCKER: () => IDLE_BLOCKER,
  IDLE_FETCHER: () => IDLE_FETCHER,
  IDLE_NAVIGATION: () => IDLE_NAVIGATION,
  UNSAFE_DEFERRED_SYMBOL: () => UNSAFE_DEFERRED_SYMBOL,
  UNSAFE_DeferredData: () => DeferredData,
  UNSAFE_convertRoutesToDataRoutes: () => convertRoutesToDataRoutes,
  UNSAFE_getPathContributingMatches: () => getPathContributingMatches,
  UNSAFE_invariant: () => invariant,
  UNSAFE_warning: () => warning,
  createBrowserHistory: () => createBrowserHistory,
  createHashHistory: () => createHashHistory,
  createMemoryHistory: () => createMemoryHistory,
  createPath: () => createPath,
  createRouter: () => createRouter,
  createStaticHandler: () => createStaticHandler,
  defer: () => defer,
  generatePath: () => generatePath,
  getStaticContextFromError: () => getStaticContextFromError,
  getToPathname: () => getToPathname,
  isDeferredData: () => isDeferredData,
  isRouteErrorResponse: () => isRouteErrorResponse,
  joinPaths: () => joinPaths,
  json: () => json,
  matchPath: () => matchPath,
  matchRoutes: () => matchRoutes,
  normalizePathname: () => normalizePathname,
  parsePath: () => parsePath,
  redirect: () => redirect2,
  resolvePath: () => resolvePath,
  resolveTo: () => resolveTo,
  stripBasename: () => stripBasename
});
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i7 = 1; i7 < arguments.length; i7++) {
      var source = arguments[i7];
      for (var key in source)
        Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
    }
    return target;
  }, _extends.apply(this, arguments);
}
function createMemoryHistory(options) {
  options === void 0 && (options = {});
  let {
    initialEntries = ["/"],
    initialIndex,
    v5Compat = !1
  } = options, entries;
  entries = initialEntries.map((entry2, index4) => createMemoryLocation(entry2, typeof entry2 == "string" ? null : entry2.state, index4 === 0 ? "default" : void 0));
  let index3 = clampIndex(initialIndex ?? entries.length - 1), action12 = Action.Pop, listener = null;
  function clampIndex(n7) {
    return Math.min(Math.max(n7, 0), entries.length - 1);
  }
  function getCurrentLocation() {
    return entries[index3];
  }
  function createMemoryLocation(to, state, key) {
    state === void 0 && (state = null);
    let location = createLocation(entries ? getCurrentLocation().pathname : "/", to, state, key);
    return warning(location.pathname.charAt(0) === "/", "relative pathnames are not supported in memory history: " + JSON.stringify(to)), location;
  }
  function createHref(to) {
    return typeof to == "string" ? to : createPath(to);
  }
  return {
    get index() {
      return index3;
    },
    get action() {
      return action12;
    },
    get location() {
      return getCurrentLocation();
    },
    createHref,
    createURL(to) {
      return new URL(createHref(to), "http://localhost");
    },
    encodeLocation(to) {
      let path = typeof to == "string" ? parsePath(to) : to;
      return {
        pathname: path.pathname || "",
        search: path.search || "",
        hash: path.hash || ""
      };
    },
    push(to, state) {
      action12 = Action.Push;
      let nextLocation = createMemoryLocation(to, state);
      index3 += 1, entries.splice(index3, entries.length, nextLocation), v5Compat && listener && listener({
        action: action12,
        location: nextLocation,
        delta: 1
      });
    },
    replace(to, state) {
      action12 = Action.Replace;
      let nextLocation = createMemoryLocation(to, state);
      entries[index3] = nextLocation, v5Compat && listener && listener({
        action: action12,
        location: nextLocation,
        delta: 0
      });
    },
    go(delta) {
      action12 = Action.Pop;
      let nextIndex = clampIndex(index3 + delta), nextLocation = entries[nextIndex];
      index3 = nextIndex, listener && listener({
        action: action12,
        location: nextLocation,
        delta
      });
    },
    listen(fn) {
      return listener = fn, () => {
        listener = null;
      };
    }
  };
}
function createBrowserHistory(options) {
  options === void 0 && (options = {});
  function createBrowserLocation(window2, globalHistory) {
    let {
      pathname,
      search,
      hash
    } = window2.location;
    return createLocation(
      "",
      {
        pathname,
        search,
        hash
      },
      // state defaults to `null` because `window.history.state` does
      globalHistory.state && globalHistory.state.usr || null,
      globalHistory.state && globalHistory.state.key || "default"
    );
  }
  function createBrowserHref(window2, to) {
    return typeof to == "string" ? to : createPath(to);
  }
  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);
}
function createHashHistory(options) {
  options === void 0 && (options = {});
  function createHashLocation(window2, globalHistory) {
    let {
      pathname = "/",
      search = "",
      hash = ""
    } = parsePath(window2.location.hash.substr(1));
    return createLocation(
      "",
      {
        pathname,
        search,
        hash
      },
      // state defaults to `null` because `window.history.state` does
      globalHistory.state && globalHistory.state.usr || null,
      globalHistory.state && globalHistory.state.key || "default"
    );
  }
  function createHashHref(window2, to) {
    let base = window2.document.querySelector("base"), href = "";
    if (base && base.getAttribute("href")) {
      let url = window2.location.href, hashIndex = url.indexOf("#");
      href = hashIndex === -1 ? url : url.slice(0, hashIndex);
    }
    return href + "#" + (typeof to == "string" ? to : createPath(to));
  }
  function validateHashLocation(location, to) {
    warning(location.pathname.charAt(0) === "/", "relative pathnames are not supported in hash history.push(" + JSON.stringify(to) + ")");
  }
  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);
}
function invariant(value, message) {
  if (value === !1 || value === null || typeof value > "u")
    throw new Error(message);
}
function warning(cond, message) {
  if (!cond) {
    typeof console < "u" && console.warn(message);
    try {
      throw new Error(message);
    } catch {
    }
  }
}
function createKey() {
  return Math.random().toString(36).substr(2, 8);
}
function getHistoryState(location, index3) {
  return {
    usr: location.state,
    key: location.key,
    idx: index3
  };
}
function createLocation(current, to, state, key) {
  return state === void 0 && (state = null), _extends({
    pathname: typeof current == "string" ? current : current.pathname,
    search: "",
    hash: ""
  }, typeof to == "string" ? parsePath(to) : to, {
    state,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: to && to.key || key || createKey()
  });
}
function createPath(_ref) {
  let {
    pathname = "/",
    search = "",
    hash = ""
  } = _ref;
  return search && search !== "?" && (pathname += search.charAt(0) === "?" ? search : "?" + search), hash && hash !== "#" && (pathname += hash.charAt(0) === "#" ? hash : "#" + hash), pathname;
}
function parsePath(path) {
  let parsedPath = {};
  if (path) {
    let hashIndex = path.indexOf("#");
    hashIndex >= 0 && (parsedPath.hash = path.substr(hashIndex), path = path.substr(0, hashIndex));
    let searchIndex = path.indexOf("?");
    searchIndex >= 0 && (parsedPath.search = path.substr(searchIndex), path = path.substr(0, searchIndex)), path && (parsedPath.pathname = path);
  }
  return parsedPath;
}
function getUrlBasedHistory(getLocation, createHref, validateLocation, options) {
  options === void 0 && (options = {});
  let {
    window: window2 = document.defaultView,
    v5Compat = !1
  } = options, globalHistory = window2.history, action12 = Action.Pop, listener = null, index3 = getIndex();
  index3 == null && (index3 = 0, globalHistory.replaceState(_extends({}, globalHistory.state, {
    idx: index3
  }), ""));
  function getIndex() {
    return (globalHistory.state || {
      idx: null
    }).idx;
  }
  function handlePop() {
    action12 = Action.Pop;
    let nextIndex = getIndex(), delta = nextIndex == null ? null : nextIndex - index3;
    index3 = nextIndex, listener && listener({
      action: action12,
      location: history2.location,
      delta
    });
  }
  function push(to, state) {
    action12 = Action.Push;
    let location = createLocation(history2.location, to, state);
    validateLocation && validateLocation(location, to), index3 = getIndex() + 1;
    let historyState = getHistoryState(location, index3), url = history2.createHref(location);
    try {
      globalHistory.pushState(historyState, "", url);
    } catch (error) {
      if (error instanceof DOMException && error.name === "DataCloneError")
        throw error;
      window2.location.assign(url);
    }
    v5Compat && listener && listener({
      action: action12,
      location: history2.location,
      delta: 1
    });
  }
  function replace(to, state) {
    action12 = Action.Replace;
    let location = createLocation(history2.location, to, state);
    validateLocation && validateLocation(location, to), index3 = getIndex();
    let historyState = getHistoryState(location, index3), url = history2.createHref(location);
    globalHistory.replaceState(historyState, "", url), v5Compat && listener && listener({
      action: action12,
      location: history2.location,
      delta: 0
    });
  }
  function createURL(to) {
    let base = window2.location.origin !== "null" ? window2.location.origin : window2.location.href, href = typeof to == "string" ? to : createPath(to);
    return invariant(base, "No window.location.(origin|href) available to create URL for href: " + href), new URL(href, base);
  }
  let history2 = {
    get action() {
      return action12;
    },
    get location() {
      return getLocation(window2, globalHistory);
    },
    listen(fn) {
      if (listener)
        throw new Error("A history only accepts one active listener");
      return window2.addEventListener(PopStateEventType, handlePop), listener = fn, () => {
        window2.removeEventListener(PopStateEventType, handlePop), listener = null;
      };
    },
    createHref(to) {
      return createHref(window2, to);
    },
    createURL,
    encodeLocation(to) {
      let url = createURL(to);
      return {
        pathname: url.pathname,
        search: url.search,
        hash: url.hash
      };
    },
    push,
    replace,
    go(n7) {
      return globalHistory.go(n7);
    }
  };
  return history2;
}
function isIndexRoute(route) {
  return route.index === !0;
}
function convertRoutesToDataRoutes(routes2, mapRouteProperties2, parentPath, manifest) {
  return parentPath === void 0 && (parentPath = []), manifest === void 0 && (manifest = {}), routes2.map((route, index3) => {
    let treePath = [...parentPath, index3], id = typeof route.id == "string" ? route.id : treePath.join("-");
    if (invariant(route.index !== !0 || !route.children, "Cannot specify children on an index route"), invariant(!manifest[id], 'Found a route id collision on id "' + id + `".  Route id's must be globally unique within Data Router usages`), isIndexRoute(route)) {
      let indexRoute = _extends({}, route, mapRouteProperties2(route), {
        id
      });
      return manifest[id] = indexRoute, indexRoute;
    } else {
      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties2(route), {
        id,
        children: void 0
      });
      return manifest[id] = pathOrLayoutRoute, route.children && (pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties2, treePath, manifest)), pathOrLayoutRoute;
    }
  });
}
function matchRoutes(routes2, locationArg, basename) {
  basename === void 0 && (basename = "/");
  let location = typeof locationArg == "string" ? parsePath(locationArg) : locationArg, pathname = stripBasename(location.pathname || "/", basename);
  if (pathname == null)
    return null;
  let branches = flattenRoutes(routes2);
  rankRouteBranches(branches);
  let matches = null;
  for (let i7 = 0; matches == null && i7 < branches.length; ++i7)
    matches = matchRouteBranch(
      branches[i7],
      // Incoming pathnames are generally encoded from either window.location
      // or from router.navigate, but we want to match against the unencoded
      // paths in the route definitions.  Memory router locations won't be
      // encoded here but there also shouldn't be anything to decode so this
      // should be a safe operation.  This avoids needing matchRoutes to be
      // history-aware.
      safelyDecodeURI(pathname)
    );
  return matches;
}
function flattenRoutes(routes2, branches, parentsMeta, parentPath) {
  branches === void 0 && (branches = []), parentsMeta === void 0 && (parentsMeta = []), parentPath === void 0 && (parentPath = "");
  let flattenRoute = (route, index3, relativePath) => {
    let meta21 = {
      relativePath: relativePath === void 0 ? route.path || "" : relativePath,
      caseSensitive: route.caseSensitive === !0,
      childrenIndex: index3,
      route
    };
    meta21.relativePath.startsWith("/") && (invariant(meta21.relativePath.startsWith(parentPath), 'Absolute route path "' + meta21.relativePath + '" nested under path ' + ('"' + parentPath + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes."), meta21.relativePath = meta21.relativePath.slice(parentPath.length));
    let path = joinPaths([parentPath, meta21.relativePath]), routesMeta = parentsMeta.concat(meta21);
    route.children && route.children.length > 0 && (invariant(
      // Our types know better, but runtime JS may not!
      // @ts-expect-error
      route.index !== !0,
      "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + path + '".')
    ), flattenRoutes(route.children, branches, routesMeta, path)), !(route.path == null && !route.index) && branches.push({
      path,
      score: computeScore(path, route.index),
      routesMeta
    });
  };
  return routes2.forEach((route, index3) => {
    var _route$path;
    if (route.path === "" || !((_route$path = route.path) != null && _route$path.includes("?")))
      flattenRoute(route, index3);
    else
      for (let exploded of explodeOptionalSegments(route.path))
        flattenRoute(route, index3, exploded);
  }), branches;
}
function explodeOptionalSegments(path) {
  let segments = path.split("/");
  if (segments.length === 0)
    return [];
  let [first, ...rest] = segments, isOptional = first.endsWith("?"), required = first.replace(/\?$/, "");
  if (rest.length === 0)
    return isOptional ? [required, ""] : [required];
  let restExploded = explodeOptionalSegments(rest.join("/")), result = [];
  return result.push(...restExploded.map((subpath) => subpath === "" ? required : [required, subpath].join("/"))), isOptional && result.push(...restExploded), result.map((exploded) => path.startsWith("/") && exploded === "" ? "/" : exploded);
}
function rankRouteBranches(branches) {
  branches.sort((a13, b6) => a13.score !== b6.score ? b6.score - a13.score : compareIndexes(a13.routesMeta.map((meta21) => meta21.childrenIndex), b6.routesMeta.map((meta21) => meta21.childrenIndex)));
}
function computeScore(path, index3) {
  let segments = path.split("/"), initialScore = segments.length;
  return segments.some(isSplat) && (initialScore += splatPenalty), index3 && (initialScore += indexRouteValue), segments.filter((s15) => !isSplat(s15)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue), initialScore);
}
function compareIndexes(a13, b6) {
  return a13.length === b6.length && a13.slice(0, -1).every((n7, i7) => n7 === b6[i7]) ? (
    // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    a13[a13.length - 1] - b6[b6.length - 1]
  ) : (
    // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0
  );
}
function matchRouteBranch(branch, pathname) {
  let {
    routesMeta
  } = branch, matchedParams = {}, matchedPathname = "/", matches = [];
  for (let i7 = 0; i7 < routesMeta.length; ++i7) {
    let meta21 = routesMeta[i7], end = i7 === routesMeta.length - 1, remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/", match = matchPath({
      path: meta21.relativePath,
      caseSensitive: meta21.caseSensitive,
      end
    }, remainingPathname);
    if (!match)
      return null;
    Object.assign(matchedParams, match.params);
    let route = meta21.route;
    matches.push({
      // TODO: Can this as be avoided?
      params: matchedParams,
      pathname: joinPaths([matchedPathname, match.pathname]),
      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),
      route
    }), match.pathnameBase !== "/" && (matchedPathname = joinPaths([matchedPathname, match.pathnameBase]));
  }
  return matches;
}
function generatePath(originalPath, params) {
  params === void 0 && (params = {});
  let path = originalPath;
  path.endsWith("*") && path !== "*" && !path.endsWith("/*") && (warning(!1, 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".')), path = path.replace(/\*$/, "/*"));
  let prefix = path.startsWith("/") ? "/" : "", stringify = (p7) => p7 == null ? "" : typeof p7 == "string" ? p7 : String(p7), segments = path.split(/\/+/).map((segment, index3, array) => {
    if (index3 === array.length - 1 && segment === "*")
      return stringify(params["*"]);
    let keyMatch = segment.match(/^:(\w+)(\??)$/);
    if (keyMatch) {
      let [, key, optional] = keyMatch, param = params[key];
      return invariant(optional === "?" || param != null, 'Missing ":' + key + '" param'), stringify(param);
    }
    return segment.replace(/\?$/g, "");
  }).filter((segment) => !!segment);
  return prefix + segments.join("/");
}
function matchPath(pattern, pathname) {
  typeof pattern == "string" && (pattern = {
    path: pattern,
    caseSensitive: !1,
    end: !0
  });
  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end), match = pathname.match(matcher);
  if (!match)
    return null;
  let matchedPathname = match[0], pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1"), captureGroups = match.slice(1);
  return {
    params: paramNames.reduce((memo, paramName, index3) => {
      if (paramName === "*") {
        let splatValue = captureGroups[index3] || "";
        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
      }
      return memo[paramName] = safelyDecodeURIComponent(captureGroups[index3] || "", paramName), memo;
    }, {}),
    pathname: matchedPathname,
    pathnameBase,
    pattern
  };
}
function compilePath(path, caseSensitive, end) {
  caseSensitive === void 0 && (caseSensitive = !1), end === void 0 && (end = !0), warning(path === "*" || !path.endsWith("*") || path.endsWith("/*"), 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".'));
  let paramNames = [], regexpSource = "^" + path.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^$?{}|()[\]]/g, "\\$&").replace(/\/:(\w+)/g, (_3, paramName) => (paramNames.push(paramName), "/([^\\/]+)"));
  return path.endsWith("*") ? (paramNames.push("*"), regexpSource += path === "*" || path === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$") : end ? regexpSource += "\\/*$" : path !== "" && path !== "/" && (regexpSource += "(?:(?=\\/|$))"), [new RegExp(regexpSource, caseSensitive ? void 0 : "i"), paramNames];
}
function safelyDecodeURI(value) {
  try {
    return decodeURI(value);
  } catch (error) {
    return warning(!1, 'The URL path "' + value + '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' + ("encoding (" + error + ").")), value;
  }
}
function safelyDecodeURIComponent(value, paramName) {
  try {
    return decodeURIComponent(value);
  } catch (error) {
    return warning(!1, 'The value for the URL param "' + paramName + '" will not be decoded because' + (' the string "' + value + '" is a malformed URL segment. This is probably') + (" due to a bad percent encoding (" + error + ").")), value;
  }
}
function stripBasename(pathname, basename) {
  if (basename === "/")
    return pathname;
  if (!pathname.toLowerCase().startsWith(basename.toLowerCase()))
    return null;
  let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length, nextChar = pathname.charAt(startIndex);
  return nextChar && nextChar !== "/" ? null : pathname.slice(startIndex) || "/";
}
function resolvePath(to, fromPathname) {
  fromPathname === void 0 && (fromPathname = "/");
  let {
    pathname: toPathname,
    search = "",
    hash = ""
  } = typeof to == "string" ? parsePath(to) : to;
  return {
    pathname: toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname,
    search: normalizeSearch(search),
    hash: normalizeHash(hash)
  };
}
function resolvePathname(relativePath, fromPathname) {
  let segments = fromPathname.replace(/\/+$/, "").split("/");
  return relativePath.split("/").forEach((segment) => {
    segment === ".." ? segments.length > 1 && segments.pop() : segment !== "." && segments.push(segment);
  }), segments.length > 1 ? segments.join("/") : "/";
}
function getInvalidPathError(char, field, dest, path) {
  return "Cannot include a '" + char + "' character in a manually specified " + ("`to." + field + "` field [" + JSON.stringify(path) + "].  Please separate it out to the ") + ("`to." + dest + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
}
function getPathContributingMatches(matches) {
  return matches.filter((match, index3) => index3 === 0 || match.route.path && match.route.path.length > 0);
}
function resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {
  isPathRelative === void 0 && (isPathRelative = !1);
  let to;
  typeof toArg == "string" ? to = parsePath(toArg) : (to = _extends({}, toArg), invariant(!to.pathname || !to.pathname.includes("?"), getInvalidPathError("?", "pathname", "search", to)), invariant(!to.pathname || !to.pathname.includes("#"), getInvalidPathError("#", "pathname", "hash", to)), invariant(!to.search || !to.search.includes("#"), getInvalidPathError("#", "search", "hash", to)));
  let isEmptyPath = toArg === "" || to.pathname === "", toPathname = isEmptyPath ? "/" : to.pathname, from;
  if (isPathRelative || toPathname == null)
    from = locationPathname;
  else {
    let routePathnameIndex = routePathnames.length - 1;
    if (toPathname.startsWith("..")) {
      let toSegments = toPathname.split("/");
      for (; toSegments[0] === ".."; )
        toSegments.shift(), routePathnameIndex -= 1;
      to.pathname = toSegments.join("/");
    }
    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
  }
  let path = resolvePath(to, from), hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/"), hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
  return !path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash) && (path.pathname += "/"), path;
}
function getToPathname(to) {
  return to === "" || to.pathname === "" ? "/" : typeof to == "string" ? parsePath(to).pathname : to.pathname;
}
function isTrackedPromise(value) {
  return value instanceof Promise && value._tracked === !0;
}
function unwrapTrackedPromise(value) {
  if (!isTrackedPromise(value))
    return value;
  if (value._error)
    throw value._error;
  return value._data;
}
function isRouteErrorResponse(error) {
  return error != null && typeof error.status == "number" && typeof error.statusText == "string" && typeof error.internal == "boolean" && "data" in error;
}
function createRouter(init) {
  let routerWindow = init.window ? init.window : typeof window < "u" ? window : void 0, isBrowser3 = typeof routerWindow < "u" && typeof routerWindow.document < "u" && typeof routerWindow.document.createElement < "u", isServer = !isBrowser3;
  invariant(init.routes.length > 0, "You must provide a non-empty routes array to createRouter");
  let mapRouteProperties2;
  if (init.mapRouteProperties)
    mapRouteProperties2 = init.mapRouteProperties;
  else if (init.detectErrorBoundary) {
    let detectErrorBoundary = init.detectErrorBoundary;
    mapRouteProperties2 = (route) => ({
      hasErrorBoundary: detectErrorBoundary(route)
    });
  } else
    mapRouteProperties2 = defaultMapRouteProperties;
  let manifest = {}, dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties2, void 0, manifest), inFlightDataRoutes, basename = init.basename || "/", future2 = _extends({
    v7_normalizeFormMethod: !1,
    v7_prependBasename: !1
  }, init.future), unlistenHistory = null, subscribers = /* @__PURE__ */ new Set(), savedScrollPositions2 = null, getScrollRestorationKey = null, getScrollPosition = null, initialScrollRestored = init.hydrationData != null, initialMatches = matchRoutes(dataRoutes, init.history.location, basename), initialErrors = null;
  if (initialMatches == null) {
    let error = getInternalRouterError(404, {
      pathname: init.history.location.pathname
    }), {
      matches,
      route
    } = getShortCircuitMatches(dataRoutes);
    initialMatches = matches, initialErrors = {
      [route.id]: error
    };
  }
  let initialized = (
    // All initialMatches need to be loaded before we're ready.  If we have lazy
    // functions around still then we'll need to run them in initialize()
    !initialMatches.some((m10) => m10.route.lazy) && // And we have to either have no loaders or have been provided hydrationData
    (!initialMatches.some((m10) => m10.route.loader) || init.hydrationData != null)
  ), router, state = {
    historyAction: init.history.action,
    location: init.history.location,
    matches: initialMatches,
    initialized,
    navigation: IDLE_NAVIGATION,
    // Don't restore on initial updateState() if we were SSR'd
    restoreScrollPosition: init.hydrationData != null ? !1 : null,
    preventScrollReset: !1,
    revalidation: "idle",
    loaderData: init.hydrationData && init.hydrationData.loaderData || {},
    actionData: init.hydrationData && init.hydrationData.actionData || null,
    errors: init.hydrationData && init.hydrationData.errors || initialErrors,
    fetchers: /* @__PURE__ */ new Map(),
    blockers: /* @__PURE__ */ new Map()
  }, pendingAction = Action.Pop, pendingPreventScrollReset = !1, pendingNavigationController, isUninterruptedRevalidation = !1, isRevalidationRequired = !1, cancelledDeferredRoutes = [], cancelledFetcherLoads = [], fetchControllers = /* @__PURE__ */ new Map(), incrementingLoadId = 0, pendingNavigationLoadId = -1, fetchReloadIds = /* @__PURE__ */ new Map(), fetchRedirectIds = /* @__PURE__ */ new Set(), fetchLoadMatches = /* @__PURE__ */ new Map(), activeDeferreds = /* @__PURE__ */ new Map(), blockerFunctions = /* @__PURE__ */ new Map(), ignoreNextHistoryUpdate = !1;
  function initialize() {
    return unlistenHistory = init.history.listen((_ref) => {
      let {
        action: historyAction,
        location,
        delta
      } = _ref;
      if (ignoreNextHistoryUpdate) {
        ignoreNextHistoryUpdate = !1;
        return;
      }
      warning(blockerFunctions.size === 0 || delta != null, "You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.");
      let blockerKey = shouldBlockNavigation({
        currentLocation: state.location,
        nextLocation: location,
        historyAction
      });
      if (blockerKey && delta != null) {
        ignoreNextHistoryUpdate = !0, init.history.go(delta * -1), updateBlocker(blockerKey, {
          state: "blocked",
          location,
          proceed() {
            updateBlocker(blockerKey, {
              state: "proceeding",
              proceed: void 0,
              reset: void 0,
              location
            }), init.history.go(delta);
          },
          reset() {
            let blockers = new Map(state.blockers);
            blockers.set(blockerKey, IDLE_BLOCKER), updateState({
              blockers
            });
          }
        });
        return;
      }
      return startNavigation(historyAction, location);
    }), state.initialized || startNavigation(Action.Pop, state.location), router;
  }
  function dispose() {
    unlistenHistory && unlistenHistory(), subscribers.clear(), pendingNavigationController && pendingNavigationController.abort(), state.fetchers.forEach((_3, key) => deleteFetcher(key)), state.blockers.forEach((_3, key) => deleteBlocker(key));
  }
  function subscribe(fn) {
    return subscribers.add(fn), () => subscribers.delete(fn);
  }
  function updateState(newState) {
    state = _extends({}, state, newState), subscribers.forEach((subscriber) => subscriber(state));
  }
  function completeNavigation(location, newState) {
    var _location$state, _location$state2;
    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === "loading" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== !0, actionData;
    newState.actionData ? Object.keys(newState.actionData).length > 0 ? actionData = newState.actionData : actionData = null : isActionReload ? actionData = state.actionData : actionData = null;
    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData, blockers = state.blockers;
    blockers.size > 0 && (blockers = new Map(blockers), blockers.forEach((_3, k2) => blockers.set(k2, IDLE_BLOCKER)));
    let preventScrollReset = pendingPreventScrollReset === !0 || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== !0;
    inFlightDataRoutes && (dataRoutes = inFlightDataRoutes, inFlightDataRoutes = void 0), isUninterruptedRevalidation || pendingAction === Action.Pop || (pendingAction === Action.Push ? init.history.push(location, location.state) : pendingAction === Action.Replace && init.history.replace(location, location.state)), updateState(_extends({}, newState, {
      actionData,
      loaderData,
      historyAction: pendingAction,
      location,
      initialized: !0,
      navigation: IDLE_NAVIGATION,
      revalidation: "idle",
      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),
      preventScrollReset,
      blockers
    })), pendingAction = Action.Pop, pendingPreventScrollReset = !1, isUninterruptedRevalidation = !1, isRevalidationRequired = !1, cancelledDeferredRoutes = [], cancelledFetcherLoads = [];
  }
  async function navigate(to, opts) {
    if (typeof to == "number") {
      init.history.go(to);
      return;
    }
    let normalizedPath = normalizeTo(state.location, state.matches, basename, future2.v7_prependBasename, to, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative), {
      path,
      submission,
      error
    } = normalizeNavigateOptions(future2.v7_normalizeFormMethod, !1, normalizedPath, opts), currentLocation = state.location, nextLocation = createLocation(state.location, path, opts && opts.state);
    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));
    let userReplace = opts && opts.replace != null ? opts.replace : void 0, historyAction = Action.Push;
    userReplace === !0 ? historyAction = Action.Replace : userReplace === !1 || submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search && (historyAction = Action.Replace);
    let preventScrollReset = opts && "preventScrollReset" in opts ? opts.preventScrollReset === !0 : void 0, blockerKey = shouldBlockNavigation({
      currentLocation,
      nextLocation,
      historyAction
    });
    if (blockerKey) {
      updateBlocker(blockerKey, {
        state: "blocked",
        location: nextLocation,
        proceed() {
          updateBlocker(blockerKey, {
            state: "proceeding",
            proceed: void 0,
            reset: void 0,
            location: nextLocation
          }), navigate(to, opts);
        },
        reset() {
          let blockers = new Map(state.blockers);
          blockers.set(blockerKey, IDLE_BLOCKER), updateState({
            blockers
          });
        }
      });
      return;
    }
    return await startNavigation(historyAction, nextLocation, {
      submission,
      // Send through the formData serialization error if we have one so we can
      // render at the right error boundary after we match routes
      pendingError: error,
      preventScrollReset,
      replace: opts && opts.replace
    });
  }
  function revalidate() {
    if (interruptActiveLoads(), updateState({
      revalidation: "loading"
    }), state.navigation.state !== "submitting") {
      if (state.navigation.state === "idle") {
        startNavigation(state.historyAction, state.location, {
          startUninterruptedRevalidation: !0
        });
        return;
      }
      startNavigation(pendingAction || state.historyAction, state.navigation.location, {
        overrideNavigation: state.navigation
      });
    }
  }
  async function startNavigation(historyAction, location, opts) {
    pendingNavigationController && pendingNavigationController.abort(), pendingNavigationController = null, pendingAction = historyAction, isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === !0, saveScrollPosition(state.location, state.matches), pendingPreventScrollReset = (opts && opts.preventScrollReset) === !0;
    let routesToUse = inFlightDataRoutes || dataRoutes, loadingNavigation = opts && opts.overrideNavigation, matches = matchRoutes(routesToUse, location, basename);
    if (!matches) {
      let error = getInternalRouterError(404, {
        pathname: location.pathname
      }), {
        matches: notFoundMatches,
        route
      } = getShortCircuitMatches(routesToUse);
      cancelActiveDeferreds(), completeNavigation(location, {
        matches: notFoundMatches,
        loaderData: {},
        errors: {
          [route.id]: error
        }
      });
      return;
    }
    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {
      completeNavigation(location, {
        matches
      });
      return;
    }
    pendingNavigationController = new AbortController();
    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission), pendingActionData, pendingError;
    if (opts && opts.pendingError)
      pendingError = {
        [findNearestBoundary(matches).route.id]: opts.pendingError
      };
    else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {
      let actionOutput = await handleAction(request, location, opts.submission, matches, {
        replace: opts.replace
      });
      if (actionOutput.shortCircuited)
        return;
      pendingActionData = actionOutput.pendingActionData, pendingError = actionOutput.pendingActionError, loadingNavigation = getLoadingNavigation(location, opts.submission), request = new Request(request.url, {
        signal: request.signal
      });
    }
    let {
      shortCircuited,
      loaderData,
      errors
    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, pendingActionData, pendingError);
    shortCircuited || (pendingNavigationController = null, completeNavigation(location, _extends({
      matches
    }, pendingActionData ? {
      actionData: pendingActionData
    } : {}, {
      loaderData,
      errors
    })));
  }
  async function handleAction(request, location, submission, matches, opts) {
    opts === void 0 && (opts = {}), interruptActiveLoads();
    let navigation = getSubmittingNavigation(location, submission);
    updateState({
      navigation
    });
    let result, actionMatch = getTargetMatch(matches, location);
    if (!actionMatch.route.action && !actionMatch.route.lazy)
      result = {
        type: ResultType.error,
        error: getInternalRouterError(405, {
          method: request.method,
          pathname: location.pathname,
          routeId: actionMatch.route.id
        })
      };
    else if (result = await callLoaderOrAction("action", request, actionMatch, matches, manifest, mapRouteProperties2, basename), request.signal.aborted)
      return {
        shortCircuited: !0
      };
    if (isRedirectResult(result)) {
      let replace;
      return opts && opts.replace != null ? replace = opts.replace : replace = result.location === state.location.pathname + state.location.search, await startRedirectNavigation(state, result, {
        submission,
        replace
      }), {
        shortCircuited: !0
      };
    }
    if (isErrorResult(result)) {
      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);
      return (opts && opts.replace) !== !0 && (pendingAction = Action.Push), {
        // Send back an empty object we can use to clear out any prior actionData
        pendingActionData: {},
        pendingActionError: {
          [boundaryMatch.route.id]: result.error
        }
      };
    }
    if (isDeferredResult(result))
      throw getInternalRouterError(400, {
        type: "defer-action"
      });
    return {
      pendingActionData: {
        [actionMatch.route.id]: result.data
      }
    };
  }
  async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, pendingActionData, pendingError) {
    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission), activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation), routesToUse = inFlightDataRoutes || dataRoutes, [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError);
    if (cancelActiveDeferreds((routeId) => !(matches && matches.some((m10) => m10.route.id === routeId)) || matchesToLoad && matchesToLoad.some((m10) => m10.route.id === routeId)), pendingNavigationLoadId = ++incrementingLoadId, matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {
      let updatedFetchers2 = markFetchRedirectsDone();
      return completeNavigation(location, _extends({
        matches,
        loaderData: {},
        // Commit pending error if we're short circuiting
        errors: pendingError || null
      }, pendingActionData ? {
        actionData: pendingActionData
      } : {}, updatedFetchers2 ? {
        fetchers: new Map(state.fetchers)
      } : {})), {
        shortCircuited: !0
      };
    }
    if (!isUninterruptedRevalidation) {
      revalidatingFetchers.forEach((rf) => {
        let fetcher = state.fetchers.get(rf.key), revalidatingFetcher = getLoadingFetcher(void 0, fetcher ? fetcher.data : void 0);
        state.fetchers.set(rf.key, revalidatingFetcher);
      });
      let actionData = pendingActionData || state.actionData;
      updateState(_extends({
        navigation: loadingNavigation
      }, actionData ? Object.keys(actionData).length === 0 ? {
        actionData: null
      } : {
        actionData
      } : {}, revalidatingFetchers.length > 0 ? {
        fetchers: new Map(state.fetchers)
      } : {}));
    }
    revalidatingFetchers.forEach((rf) => {
      fetchControllers.has(rf.key) && abortFetcher(rf.key), rf.controller && fetchControllers.set(rf.key, rf.controller);
    });
    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f10) => abortFetcher(f10.key));
    pendingNavigationController && pendingNavigationController.signal.addEventListener("abort", abortPendingFetchRevalidations);
    let {
      results: results2,
      loaderResults,
      fetcherResults
    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);
    if (request.signal.aborted)
      return {
        shortCircuited: !0
      };
    pendingNavigationController && pendingNavigationController.signal.removeEventListener("abort", abortPendingFetchRevalidations), revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));
    let redirect6 = findRedirect(results2);
    if (redirect6) {
      if (redirect6.idx >= matchesToLoad.length) {
        let fetcherKey = revalidatingFetchers[redirect6.idx - matchesToLoad.length].key;
        fetchRedirectIds.add(fetcherKey);
      }
      return await startRedirectNavigation(state, redirect6.result, {
        replace
      }), {
        shortCircuited: !0
      };
    }
    let {
      loaderData,
      errors
    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds);
    activeDeferreds.forEach((deferredData, routeId) => {
      deferredData.subscribe((aborted) => {
        (aborted || deferredData.done) && activeDeferreds.delete(routeId);
      });
    });
    let updatedFetchers = markFetchRedirectsDone(), didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId), shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;
    return _extends({
      loaderData,
      errors
    }, shouldUpdateFetchers ? {
      fetchers: new Map(state.fetchers)
    } : {});
  }
  function getFetcher(key) {
    return state.fetchers.get(key) || IDLE_FETCHER;
  }
  function fetch2(key, routeId, href, opts) {
    if (isServer)
      throw new Error("router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback.");
    fetchControllers.has(key) && abortFetcher(key);
    let routesToUse = inFlightDataRoutes || dataRoutes, normalizedPath = normalizeTo(state.location, state.matches, basename, future2.v7_prependBasename, href, routeId, opts == null ? void 0 : opts.relative), matches = matchRoutes(routesToUse, normalizedPath, basename);
    if (!matches) {
      setFetcherError(key, routeId, getInternalRouterError(404, {
        pathname: normalizedPath
      }));
      return;
    }
    let {
      path,
      submission,
      error
    } = normalizeNavigateOptions(future2.v7_normalizeFormMethod, !0, normalizedPath, opts);
    if (error) {
      setFetcherError(key, routeId, error);
      return;
    }
    let match = getTargetMatch(matches, path);
    if (pendingPreventScrollReset = (opts && opts.preventScrollReset) === !0, submission && isMutationMethod(submission.formMethod)) {
      handleFetcherAction(key, routeId, path, match, matches, submission);
      return;
    }
    fetchLoadMatches.set(key, {
      routeId,
      path
    }), handleFetcherLoader(key, routeId, path, match, matches, submission);
  }
  async function handleFetcherAction(key, routeId, path, match, requestMatches, submission) {
    if (interruptActiveLoads(), fetchLoadMatches.delete(key), !match.route.action && !match.route.lazy) {
      let error = getInternalRouterError(405, {
        method: submission.formMethod,
        pathname: path,
        routeId
      });
      setFetcherError(key, routeId, error);
      return;
    }
    let existingFetcher = state.fetchers.get(key), fetcher = getSubmittingFetcher(submission, existingFetcher);
    state.fetchers.set(key, fetcher), updateState({
      fetchers: new Map(state.fetchers)
    });
    let abortController = new AbortController(), fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);
    fetchControllers.set(key, abortController);
    let originatingLoadId = incrementingLoadId, actionResult = await callLoaderOrAction("action", fetchRequest, match, requestMatches, manifest, mapRouteProperties2, basename);
    if (fetchRequest.signal.aborted) {
      fetchControllers.get(key) === abortController && fetchControllers.delete(key);
      return;
    }
    if (isRedirectResult(actionResult))
      if (fetchControllers.delete(key), pendingNavigationLoadId > originatingLoadId) {
        let doneFetcher = getDoneFetcher(void 0);
        state.fetchers.set(key, doneFetcher), updateState({
          fetchers: new Map(state.fetchers)
        });
        return;
      } else {
        fetchRedirectIds.add(key);
        let loadingFetcher = getLoadingFetcher(submission);
        return state.fetchers.set(key, loadingFetcher), updateState({
          fetchers: new Map(state.fetchers)
        }), startRedirectNavigation(state, actionResult, {
          submission,
          isFetchActionRedirect: !0
        });
      }
    if (isErrorResult(actionResult)) {
      setFetcherError(key, routeId, actionResult.error);
      return;
    }
    if (isDeferredResult(actionResult))
      throw getInternalRouterError(400, {
        type: "defer-action"
      });
    let nextLocation = state.navigation.location || state.location, revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal), routesToUse = inFlightDataRoutes || dataRoutes, matches = state.navigation.state !== "idle" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;
    invariant(matches, "Didn't find any matches after fetcher action");
    let loadId = ++incrementingLoadId;
    fetchReloadIds.set(key, loadId);
    let loadFetcher = getLoadingFetcher(submission, actionResult.data);
    state.fetchers.set(key, loadFetcher);
    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(
      init.history,
      state,
      matches,
      submission,
      nextLocation,
      isRevalidationRequired,
      cancelledDeferredRoutes,
      cancelledFetcherLoads,
      fetchLoadMatches,
      fetchRedirectIds,
      routesToUse,
      basename,
      {
        [match.route.id]: actionResult.data
      },
      void 0
      // No need to send through errors since we short circuit above
    );
    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {
      let staleKey = rf.key, existingFetcher2 = state.fetchers.get(staleKey), revalidatingFetcher = getLoadingFetcher(void 0, existingFetcher2 ? existingFetcher2.data : void 0);
      state.fetchers.set(staleKey, revalidatingFetcher), fetchControllers.has(staleKey) && abortFetcher(staleKey), rf.controller && fetchControllers.set(staleKey, rf.controller);
    }), updateState({
      fetchers: new Map(state.fetchers)
    });
    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));
    abortController.signal.addEventListener("abort", abortPendingFetchRevalidations);
    let {
      results: results2,
      loaderResults,
      fetcherResults
    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);
    if (abortController.signal.aborted)
      return;
    abortController.signal.removeEventListener("abort", abortPendingFetchRevalidations), fetchReloadIds.delete(key), fetchControllers.delete(key), revalidatingFetchers.forEach((r9) => fetchControllers.delete(r9.key));
    let redirect6 = findRedirect(results2);
    if (redirect6) {
      if (redirect6.idx >= matchesToLoad.length) {
        let fetcherKey = revalidatingFetchers[redirect6.idx - matchesToLoad.length].key;
        fetchRedirectIds.add(fetcherKey);
      }
      return startRedirectNavigation(state, redirect6.result);
    }
    let {
      loaderData,
      errors
    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, void 0, revalidatingFetchers, fetcherResults, activeDeferreds);
    if (state.fetchers.has(key)) {
      let doneFetcher = getDoneFetcher(actionResult.data);
      state.fetchers.set(key, doneFetcher);
    }
    let didAbortFetchLoads = abortStaleFetchLoads(loadId);
    state.navigation.state === "loading" && loadId > pendingNavigationLoadId ? (invariant(pendingAction, "Expected pending action"), pendingNavigationController && pendingNavigationController.abort(), completeNavigation(state.navigation.location, {
      matches,
      loaderData,
      errors,
      fetchers: new Map(state.fetchers)
    })) : (updateState(_extends({
      errors,
      loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors)
    }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {
      fetchers: new Map(state.fetchers)
    } : {})), isRevalidationRequired = !1);
  }
  async function handleFetcherLoader(key, routeId, path, match, matches, submission) {
    let existingFetcher = state.fetchers.get(key), loadingFetcher = getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : void 0);
    state.fetchers.set(key, loadingFetcher), updateState({
      fetchers: new Map(state.fetchers)
    });
    let abortController = new AbortController(), fetchRequest = createClientSideRequest(init.history, path, abortController.signal);
    fetchControllers.set(key, abortController);
    let originatingLoadId = incrementingLoadId, result = await callLoaderOrAction("loader", fetchRequest, match, matches, manifest, mapRouteProperties2, basename);
    if (isDeferredResult(result) && (result = await resolveDeferredData(result, fetchRequest.signal, !0) || result), fetchControllers.get(key) === abortController && fetchControllers.delete(key), fetchRequest.signal.aborted)
      return;
    if (isRedirectResult(result))
      if (pendingNavigationLoadId > originatingLoadId) {
        let doneFetcher2 = getDoneFetcher(void 0);
        state.fetchers.set(key, doneFetcher2), updateState({
          fetchers: new Map(state.fetchers)
        });
        return;
      } else {
        fetchRedirectIds.add(key), await startRedirectNavigation(state, result);
        return;
      }
    if (isErrorResult(result)) {
      let boundaryMatch = findNearestBoundary(state.matches, routeId);
      state.fetchers.delete(key), updateState({
        fetchers: new Map(state.fetchers),
        errors: {
          [boundaryMatch.route.id]: result.error
        }
      });
      return;
    }
    invariant(!isDeferredResult(result), "Unhandled fetcher deferred data");
    let doneFetcher = getDoneFetcher(result.data);
    state.fetchers.set(key, doneFetcher), updateState({
      fetchers: new Map(state.fetchers)
    });
  }
  async function startRedirectNavigation(state2, redirect6, _temp) {
    let {
      submission,
      replace,
      isFetchActionRedirect
    } = _temp === void 0 ? {} : _temp;
    redirect6.revalidate && (isRevalidationRequired = !0);
    let redirectLocation = createLocation(
      state2.location,
      redirect6.location,
      // TODO: This can be removed once we get rid of useTransition in Remix v2
      _extends({
        _isRedirect: !0
      }, isFetchActionRedirect ? {
        _isFetchActionRedirect: !0
      } : {})
    );
    if (invariant(redirectLocation, "Expected a location on the redirect navigation"), ABSOLUTE_URL_REGEX.test(redirect6.location) && isBrowser3) {
      let url = init.history.createURL(redirect6.location), isDifferentBasename = stripBasename(url.pathname, basename) == null;
      if (routerWindow.location.origin !== url.origin || isDifferentBasename) {
        replace ? routerWindow.location.replace(redirect6.location) : routerWindow.location.assign(redirect6.location);
        return;
      }
    }
    pendingNavigationController = null;
    let redirectHistoryAction = replace === !0 ? Action.Replace : Action.Push, activeSubmission = submission || getSubmissionFromNavigation(state2.navigation);
    if (redirectPreserveMethodStatusCodes.has(redirect6.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod))
      await startNavigation(redirectHistoryAction, redirectLocation, {
        submission: _extends({}, activeSubmission, {
          formAction: redirect6.location
        }),
        // Preserve this flag across redirects
        preventScrollReset: pendingPreventScrollReset
      });
    else if (isFetchActionRedirect)
      await startNavigation(redirectHistoryAction, redirectLocation, {
        overrideNavigation: getLoadingNavigation(redirectLocation),
        fetcherSubmission: activeSubmission,
        // Preserve this flag across redirects
        preventScrollReset: pendingPreventScrollReset
      });
    else {
      let overrideNavigation = getLoadingNavigation(redirectLocation, activeSubmission);
      await startNavigation(redirectHistoryAction, redirectLocation, {
        overrideNavigation,
        // Preserve this flag across redirects
        preventScrollReset: pendingPreventScrollReset
      });
    }
  }
  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {
    let results2 = await Promise.all([...matchesToLoad.map((match) => callLoaderOrAction("loader", request, match, matches, manifest, mapRouteProperties2, basename)), ...fetchersToLoad.map((f10) => f10.matches && f10.match && f10.controller ? callLoaderOrAction("loader", createClientSideRequest(init.history, f10.path, f10.controller.signal), f10.match, f10.matches, manifest, mapRouteProperties2, basename) : {
      type: ResultType.error,
      error: getInternalRouterError(404, {
        pathname: f10.path
      })
    })]), loaderResults = results2.slice(0, matchesToLoad.length), fetcherResults = results2.slice(matchesToLoad.length);
    return await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), !1, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map((f10) => f10.match), fetcherResults, fetchersToLoad.map((f10) => f10.controller ? f10.controller.signal : null), !0)]), {
      results: results2,
      loaderResults,
      fetcherResults
    };
  }
  function interruptActiveLoads() {
    isRevalidationRequired = !0, cancelledDeferredRoutes.push(...cancelActiveDeferreds()), fetchLoadMatches.forEach((_3, key) => {
      fetchControllers.has(key) && (cancelledFetcherLoads.push(key), abortFetcher(key));
    });
  }
  function setFetcherError(key, routeId, error) {
    let boundaryMatch = findNearestBoundary(state.matches, routeId);
    deleteFetcher(key), updateState({
      errors: {
        [boundaryMatch.route.id]: error
      },
      fetchers: new Map(state.fetchers)
    });
  }
  function deleteFetcher(key) {
    let fetcher = state.fetchers.get(key);
    fetchControllers.has(key) && !(fetcher && fetcher.state === "loading" && fetchReloadIds.has(key)) && abortFetcher(key), fetchLoadMatches.delete(key), fetchReloadIds.delete(key), fetchRedirectIds.delete(key), state.fetchers.delete(key);
  }
  function abortFetcher(key) {
    let controller = fetchControllers.get(key);
    invariant(controller, "Expected fetch controller: " + key), controller.abort(), fetchControllers.delete(key);
  }
  function markFetchersDone(keys2) {
    for (let key of keys2) {
      let fetcher = getFetcher(key), doneFetcher = getDoneFetcher(fetcher.data);
      state.fetchers.set(key, doneFetcher);
    }
  }
  function markFetchRedirectsDone() {
    let doneKeys = [], updatedFetchers = !1;
    for (let key of fetchRedirectIds) {
      let fetcher = state.fetchers.get(key);
      invariant(fetcher, "Expected fetcher: " + key), fetcher.state === "loading" && (fetchRedirectIds.delete(key), doneKeys.push(key), updatedFetchers = !0);
    }
    return markFetchersDone(doneKeys), updatedFetchers;
  }
  function abortStaleFetchLoads(landedId) {
    let yeetedKeys = [];
    for (let [key, id] of fetchReloadIds)
      if (id < landedId) {
        let fetcher = state.fetchers.get(key);
        invariant(fetcher, "Expected fetcher: " + key), fetcher.state === "loading" && (abortFetcher(key), fetchReloadIds.delete(key), yeetedKeys.push(key));
      }
    return markFetchersDone(yeetedKeys), yeetedKeys.length > 0;
  }
  function getBlocker(key, fn) {
    let blocker = state.blockers.get(key) || IDLE_BLOCKER;
    return blockerFunctions.get(key) !== fn && blockerFunctions.set(key, fn), blocker;
  }
  function deleteBlocker(key) {
    state.blockers.delete(key), blockerFunctions.delete(key);
  }
  function updateBlocker(key, newBlocker) {
    let blocker = state.blockers.get(key) || IDLE_BLOCKER;
    invariant(blocker.state === "unblocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "proceeding" || blocker.state === "blocked" && newBlocker.state === "unblocked" || blocker.state === "proceeding" && newBlocker.state === "unblocked", "Invalid blocker state transition: " + blocker.state + " -> " + newBlocker.state);
    let blockers = new Map(state.blockers);
    blockers.set(key, newBlocker), updateState({
      blockers
    });
  }
  function shouldBlockNavigation(_ref2) {
    let {
      currentLocation,
      nextLocation,
      historyAction
    } = _ref2;
    if (blockerFunctions.size === 0)
      return;
    blockerFunctions.size > 1 && warning(!1, "A router only supports one blocker at a time");
    let entries = Array.from(blockerFunctions.entries()), [blockerKey, blockerFunction] = entries[entries.length - 1], blocker = state.blockers.get(blockerKey);
    if (!(blocker && blocker.state === "proceeding") && blockerFunction({
      currentLocation,
      nextLocation,
      historyAction
    }))
      return blockerKey;
  }
  function cancelActiveDeferreds(predicate) {
    let cancelledRouteIds = [];
    return activeDeferreds.forEach((dfd, routeId) => {
      (!predicate || predicate(routeId)) && (dfd.cancel(), cancelledRouteIds.push(routeId), activeDeferreds.delete(routeId));
    }), cancelledRouteIds;
  }
  function enableScrollRestoration(positions, getPosition, getKey) {
    if (savedScrollPositions2 = positions, getScrollPosition = getPosition, getScrollRestorationKey = getKey || null, !initialScrollRestored && state.navigation === IDLE_NAVIGATION) {
      initialScrollRestored = !0;
      let y6 = getSavedScrollPosition(state.location, state.matches);
      y6 != null && updateState({
        restoreScrollPosition: y6
      });
    }
    return () => {
      savedScrollPositions2 = null, getScrollPosition = null, getScrollRestorationKey = null;
    };
  }
  function getScrollKey(location, matches) {
    return getScrollRestorationKey && getScrollRestorationKey(location, matches.map((m10) => createUseMatchesMatch(m10, state.loaderData))) || location.key;
  }
  function saveScrollPosition(location, matches) {
    if (savedScrollPositions2 && getScrollPosition) {
      let key = getScrollKey(location, matches);
      savedScrollPositions2[key] = getScrollPosition();
    }
  }
  function getSavedScrollPosition(location, matches) {
    if (savedScrollPositions2) {
      let key = getScrollKey(location, matches), y6 = savedScrollPositions2[key];
      if (typeof y6 == "number")
        return y6;
    }
    return null;
  }
  function _internalSetRoutes(newRoutes) {
    manifest = {}, inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties2, void 0, manifest);
  }
  return router = {
    get basename() {
      return basename;
    },
    get state() {
      return state;
    },
    get routes() {
      return dataRoutes;
    },
    initialize,
    subscribe,
    enableScrollRestoration,
    navigate,
    fetch: fetch2,
    revalidate,
    // Passthrough to history-aware createHref used by useHref so we get proper
    // hash-aware URLs in DOM paths
    createHref: (to) => init.history.createHref(to),
    encodeLocation: (to) => init.history.encodeLocation(to),
    getFetcher,
    deleteFetcher,
    dispose,
    getBlocker,
    deleteBlocker,
    _internalFetchControllers: fetchControllers,
    _internalActiveDeferreds: activeDeferreds,
    // TODO: Remove setRoutes, it's temporary to avoid dealing with
    // updating the tree while validating the update algorithm.
    _internalSetRoutes
  }, router;
}
function createStaticHandler(routes2, opts) {
  invariant(routes2.length > 0, "You must provide a non-empty routes array to createStaticHandler");
  let manifest = {}, basename = (opts ? opts.basename : null) || "/", mapRouteProperties2;
  if (opts != null && opts.mapRouteProperties)
    mapRouteProperties2 = opts.mapRouteProperties;
  else if (opts != null && opts.detectErrorBoundary) {
    let detectErrorBoundary = opts.detectErrorBoundary;
    mapRouteProperties2 = (route) => ({
      hasErrorBoundary: detectErrorBoundary(route)
    });
  } else
    mapRouteProperties2 = defaultMapRouteProperties;
  let dataRoutes = convertRoutesToDataRoutes(routes2, mapRouteProperties2, void 0, manifest);
  async function query(request, _temp2) {
    let {
      requestContext
    } = _temp2 === void 0 ? {} : _temp2, url = new URL(request.url), method = request.method, location = createLocation("", createPath(url), null, "default"), matches = matchRoutes(dataRoutes, location, basename);
    if (!isValidMethod(method) && method !== "HEAD") {
      let error = getInternalRouterError(405, {
        method
      }), {
        matches: methodNotAllowedMatches,
        route
      } = getShortCircuitMatches(dataRoutes);
      return {
        basename,
        location,
        matches: methodNotAllowedMatches,
        loaderData: {},
        actionData: null,
        errors: {
          [route.id]: error
        },
        statusCode: error.status,
        loaderHeaders: {},
        actionHeaders: {},
        activeDeferreds: null
      };
    } else if (!matches) {
      let error = getInternalRouterError(404, {
        pathname: location.pathname
      }), {
        matches: notFoundMatches,
        route
      } = getShortCircuitMatches(dataRoutes);
      return {
        basename,
        location,
        matches: notFoundMatches,
        loaderData: {},
        actionData: null,
        errors: {
          [route.id]: error
        },
        statusCode: error.status,
        loaderHeaders: {},
        actionHeaders: {},
        activeDeferreds: null
      };
    }
    let result = await queryImpl(request, location, matches, requestContext);
    return isResponse(result) ? result : _extends({
      location,
      basename
    }, result);
  }
  async function queryRoute(request, _temp3) {
    let {
      routeId,
      requestContext
    } = _temp3 === void 0 ? {} : _temp3, url = new URL(request.url), method = request.method, location = createLocation("", createPath(url), null, "default"), matches = matchRoutes(dataRoutes, location, basename);
    if (!isValidMethod(method) && method !== "HEAD" && method !== "OPTIONS")
      throw getInternalRouterError(405, {
        method
      });
    if (!matches)
      throw getInternalRouterError(404, {
        pathname: location.pathname
      });
    let match = routeId ? matches.find((m10) => m10.route.id === routeId) : getTargetMatch(matches, location);
    if (routeId && !match)
      throw getInternalRouterError(403, {
        pathname: location.pathname,
        routeId
      });
    if (!match)
      throw getInternalRouterError(404, {
        pathname: location.pathname
      });
    let result = await queryImpl(request, location, matches, requestContext, match);
    if (isResponse(result))
      return result;
    let error = result.errors ? Object.values(result.errors)[0] : void 0;
    if (error !== void 0)
      throw error;
    if (result.actionData)
      return Object.values(result.actionData)[0];
    if (result.loaderData) {
      var _result$activeDeferre;
      let data2 = Object.values(result.loaderData)[0];
      return (_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id] && (data2[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id]), data2;
    }
  }
  async function queryImpl(request, location, matches, requestContext, routeMatch) {
    invariant(request.signal, "query()/queryRoute() requests must contain an AbortController signal");
    try {
      if (isMutationMethod(request.method.toLowerCase()))
        return await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);
      let result = await loadRouteData(request, matches, requestContext, routeMatch);
      return isResponse(result) ? result : _extends({}, result, {
        actionData: null,
        actionHeaders: {}
      });
    } catch (e5) {
      if (isQueryRouteResponse(e5)) {
        if (e5.type === ResultType.error && !isRedirectResponse(e5.response))
          throw e5.response;
        return e5.response;
      }
      if (isRedirectResponse(e5))
        return e5;
      throw e5;
    }
  }
  async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {
    let result;
    if (!actionMatch.route.action && !actionMatch.route.lazy) {
      let error = getInternalRouterError(405, {
        method: request.method,
        pathname: new URL(request.url).pathname,
        routeId: actionMatch.route.id
      });
      if (isRouteRequest)
        throw error;
      result = {
        type: ResultType.error,
        error
      };
    } else if (result = await callLoaderOrAction("action", request, actionMatch, matches, manifest, mapRouteProperties2, basename, {
      isStaticRequest: !0,
      isRouteRequest,
      requestContext
    }), request.signal.aborted) {
      let method = isRouteRequest ? "queryRoute" : "query";
      throw new Error(method + "() call aborted");
    }
    if (isRedirectResult(result))
      throw new Response(null, {
        status: result.status,
        headers: {
          Location: result.location
        }
      });
    if (isDeferredResult(result)) {
      let error = getInternalRouterError(400, {
        type: "defer-action"
      });
      if (isRouteRequest)
        throw error;
      result = {
        type: ResultType.error,
        error
      };
    }
    if (isRouteRequest) {
      if (isErrorResult(result))
        throw result.error;
      return {
        matches: [actionMatch],
        loaderData: {},
        actionData: {
          [actionMatch.route.id]: result.data
        },
        errors: null,
        // Note: statusCode + headers are unused here since queryRoute will
        // return the raw Response or value
        statusCode: 200,
        loaderHeaders: {},
        actionHeaders: {},
        activeDeferreds: null
      };
    }
    if (isErrorResult(result)) {
      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id), context2 = await loadRouteData(request, matches, requestContext, void 0, {
        [boundaryMatch.route.id]: result.error
      });
      return _extends({}, context2, {
        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,
        actionData: null,
        actionHeaders: _extends({}, result.headers ? {
          [actionMatch.route.id]: result.headers
        } : {})
      });
    }
    let loaderRequest = new Request(request.url, {
      headers: request.headers,
      redirect: request.redirect,
      signal: request.signal
    }), context = await loadRouteData(loaderRequest, matches, requestContext);
    return _extends({}, context, result.statusCode ? {
      statusCode: result.statusCode
    } : {}, {
      actionData: {
        [actionMatch.route.id]: result.data
      },
      actionHeaders: _extends({}, result.headers ? {
        [actionMatch.route.id]: result.headers
      } : {})
    });
  }
  async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {
    let isRouteRequest = routeMatch != null;
    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy))
      throw getInternalRouterError(400, {
        method: request.method,
        pathname: new URL(request.url).pathname,
        routeId: routeMatch == null ? void 0 : routeMatch.route.id
      });
    let matchesToLoad = (routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0])).filter((m10) => m10.route.loader || m10.route.lazy);
    if (matchesToLoad.length === 0)
      return {
        matches,
        // Add a null for all matched routes for proper revalidation on the client
        loaderData: matches.reduce((acc, m10) => Object.assign(acc, {
          [m10.route.id]: null
        }), {}),
        errors: pendingActionError || null,
        statusCode: 200,
        loaderHeaders: {},
        activeDeferreds: null
      };
    let results2 = await Promise.all([...matchesToLoad.map((match) => callLoaderOrAction("loader", request, match, matches, manifest, mapRouteProperties2, basename, {
      isStaticRequest: !0,
      isRouteRequest,
      requestContext
    }))]);
    if (request.signal.aborted) {
      let method = isRouteRequest ? "queryRoute" : "query";
      throw new Error(method + "() call aborted");
    }
    let activeDeferreds = /* @__PURE__ */ new Map(), context = processRouteLoaderData(matches, matchesToLoad, results2, pendingActionError, activeDeferreds), executedLoaders = new Set(matchesToLoad.map((match) => match.route.id));
    return matches.forEach((match) => {
      executedLoaders.has(match.route.id) || (context.loaderData[match.route.id] = null);
    }), _extends({}, context, {
      matches,
      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null
    });
  }
  return {
    dataRoutes,
    query,
    queryRoute
  };
}
function getStaticContextFromError(routes2, context, error) {
  return _extends({}, context, {
    statusCode: 500,
    errors: {
      [context._deepestRenderedBoundaryId || routes2[0].id]: error
    }
  });
}
function isSubmissionNavigation(opts) {
  return opts != null && ("formData" in opts && opts.formData != null || "body" in opts && opts.body !== void 0);
}
function normalizeTo(location, matches, basename, prependBasename, to, fromRouteId, relative) {
  let contextualMatches, activeRouteMatch;
  if (fromRouteId != null && relative !== "path") {
    contextualMatches = [];
    for (let match of matches)
      if (contextualMatches.push(match), match.route.id === fromRouteId) {
        activeRouteMatch = match;
        break;
      }
  } else
    contextualMatches = matches, activeRouteMatch = matches[matches.length - 1];
  let path = resolveTo(to || ".", getPathContributingMatches(contextualMatches).map((m10) => m10.pathnameBase), stripBasename(location.pathname, basename) || location.pathname, relative === "path");
  return to == null && (path.search = location.search, path.hash = location.hash), (to == null || to === "" || to === ".") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search) && (path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index"), prependBasename && basename !== "/" && (path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname])), createPath(path);
}
function normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {
  if (!opts || !isSubmissionNavigation(opts))
    return {
      path
    };
  if (opts.formMethod && !isValidMethod(opts.formMethod))
    return {
      path,
      error: getInternalRouterError(405, {
        method: opts.formMethod
      })
    };
  let getInvalidBodyError = () => ({
    path,
    error: getInternalRouterError(400, {
      type: "invalid-body"
    })
  }), rawFormMethod = opts.formMethod || "get", formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase(), formAction = stripHashFromPath(path);
  if (opts.body !== void 0) {
    if (opts.formEncType === "text/plain") {
      if (!isMutationMethod(formMethod))
        return getInvalidBodyError();
      let text = typeof opts.body == "string" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (
        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data
        Array.from(opts.body.entries()).reduce((acc, _ref3) => {
          let [name, value] = _ref3;
          return "" + acc + name + "=" + value + `
`;
        }, "")
      ) : String(opts.body);
      return {
        path,
        submission: {
          formMethod,
          formAction,
          formEncType: opts.formEncType,
          formData: void 0,
          json: void 0,
          text
        }
      };
    } else if (opts.formEncType === "application/json") {
      if (!isMutationMethod(formMethod))
        return getInvalidBodyError();
      try {
        let json4 = typeof opts.body == "string" ? JSON.parse(opts.body) : opts.body;
        return {
          path,
          submission: {
            formMethod,
            formAction,
            formEncType: opts.formEncType,
            formData: void 0,
            json: json4,
            text: void 0
          }
        };
      } catch {
        return getInvalidBodyError();
      }
    }
  }
  invariant(typeof FormData == "function", "FormData is not available in this environment");
  let searchParams, formData;
  if (opts.formData)
    searchParams = convertFormDataToSearchParams(opts.formData), formData = opts.formData;
  else if (opts.body instanceof FormData)
    searchParams = convertFormDataToSearchParams(opts.body), formData = opts.body;
  else if (opts.body instanceof URLSearchParams)
    searchParams = opts.body, formData = convertSearchParamsToFormData(searchParams);
  else if (opts.body == null)
    searchParams = new URLSearchParams(), formData = new FormData();
  else
    try {
      searchParams = new URLSearchParams(opts.body), formData = convertSearchParamsToFormData(searchParams);
    } catch {
      return getInvalidBodyError();
    }
  let submission = {
    formMethod,
    formAction,
    formEncType: opts && opts.formEncType || "application/x-www-form-urlencoded",
    formData,
    json: void 0,
    text: void 0
  };
  if (isMutationMethod(submission.formMethod))
    return {
      path,
      submission
    };
  let parsedPath = parsePath(path);
  return isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search) && searchParams.append("index", ""), parsedPath.search = "?" + searchParams, {
    path: createPath(parsedPath),
    submission
  };
}
function getLoaderMatchesUntilBoundary(matches, boundaryId) {
  let boundaryMatches = matches;
  if (boundaryId) {
    let index3 = matches.findIndex((m10) => m10.route.id === boundaryId);
    index3 >= 0 && (boundaryMatches = matches.slice(0, index3));
  }
  return boundaryMatches;
}
function getMatchesToLoad(history2, state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError) {
  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : void 0, currentUrl = history2.createURL(state.location), nextUrl = history2.createURL(location), boundaryId = pendingError ? Object.keys(pendingError)[0] : void 0, navigationMatches = getLoaderMatchesUntilBoundary(matches, boundaryId).filter((match, index3) => {
    if (match.route.lazy)
      return !0;
    if (match.route.loader == null)
      return !1;
    if (isNewLoader(state.loaderData, state.matches[index3], match) || cancelledDeferredRoutes.some((id) => id === match.route.id))
      return !0;
    let currentRouteMatch = state.matches[index3], nextRouteMatch = match;
    return shouldRevalidateLoader(match, _extends({
      currentUrl,
      currentParams: currentRouteMatch.params,
      nextUrl,
      nextParams: nextRouteMatch.params
    }, submission, {
      actionResult,
      defaultShouldRevalidate: (
        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate
        isRevalidationRequired || // Clicked the same link, resubmitted a GET form
        currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders
        currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)
      )
    }));
  }), revalidatingFetchers = [];
  return fetchLoadMatches.forEach((f10, key) => {
    if (!matches.some((m10) => m10.route.id === f10.routeId))
      return;
    let fetcherMatches = matchRoutes(routesToUse, f10.path, basename);
    if (!fetcherMatches) {
      revalidatingFetchers.push({
        key,
        routeId: f10.routeId,
        path: f10.path,
        matches: null,
        match: null,
        controller: null
      });
      return;
    }
    let fetcher = state.fetchers.get(key), fetcherMatch = getTargetMatch(fetcherMatches, f10.path), shouldRevalidate2 = !1;
    fetchRedirectIds.has(key) ? shouldRevalidate2 = !1 : cancelledFetcherLoads.includes(key) ? shouldRevalidate2 = !0 : fetcher && fetcher.state !== "idle" && fetcher.data === void 0 ? shouldRevalidate2 = isRevalidationRequired : shouldRevalidate2 = shouldRevalidateLoader(fetcherMatch, _extends({
      currentUrl,
      currentParams: state.matches[state.matches.length - 1].params,
      nextUrl,
      nextParams: matches[matches.length - 1].params
    }, submission, {
      actionResult,
      defaultShouldRevalidate: isRevalidationRequired
    })), shouldRevalidate2 && revalidatingFetchers.push({
      key,
      routeId: f10.routeId,
      path: f10.path,
      matches: fetcherMatches,
      match: fetcherMatch,
      controller: new AbortController()
    });
  }), [navigationMatches, revalidatingFetchers];
}
function isNewLoader(currentLoaderData, currentMatch, match) {
  let isNew = (
    // [a] -> [a, b]
    !currentMatch || // [a, b] -> [a, c]
    match.route.id !== currentMatch.route.id
  ), isMissingData = currentLoaderData[match.route.id] === void 0;
  return isNew || isMissingData;
}
function isNewRouteInstance(currentMatch, match) {
  let currentPath = currentMatch.route.path;
  return (
    // param change for this match, /users/123 -> /users/456
    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path
    // e.g. /files/images/avatar.jpg -> files/finances.xls
    currentPath != null && currentPath.endsWith("*") && currentMatch.params["*"] !== match.params["*"]
  );
}
function shouldRevalidateLoader(loaderMatch, arg) {
  if (loaderMatch.route.shouldRevalidate) {
    let routeChoice = loaderMatch.route.shouldRevalidate(arg);
    if (typeof routeChoice == "boolean")
      return routeChoice;
  }
  return arg.defaultShouldRevalidate;
}
async function loadLazyRouteModule(route, mapRouteProperties2, manifest) {
  if (!route.lazy)
    return;
  let lazyRoute = await route.lazy();
  if (!route.lazy)
    return;
  let routeToUpdate = manifest[route.id];
  invariant(routeToUpdate, "No route found in manifest");
  let routeUpdates = {};
  for (let lazyRouteProperty in lazyRoute) {
    let isPropertyStaticallyDefined = routeToUpdate[lazyRouteProperty] !== void 0 && // This property isn't static since it should always be updated based
    // on the route updates
    lazyRouteProperty !== "hasErrorBoundary";
    warning(!isPropertyStaticallyDefined, 'Route "' + routeToUpdate.id + '" has a static property "' + lazyRouteProperty + '" defined but its lazy function is also returning a value for this property. ' + ('The lazy route property "' + lazyRouteProperty + '" will be ignored.')), !isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty) && (routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty]);
  }
  Object.assign(routeToUpdate, routeUpdates), Object.assign(routeToUpdate, _extends({}, mapRouteProperties2(routeToUpdate), {
    lazy: void 0
  }));
}
async function callLoaderOrAction(type, request, match, matches, manifest, mapRouteProperties2, basename, opts) {
  opts === void 0 && (opts = {});
  let resultType, result, onReject, runHandler = (handler) => {
    let reject, abortPromise = new Promise((_3, r9) => reject = r9);
    return onReject = () => reject(), request.signal.addEventListener("abort", onReject), Promise.race([handler({
      request,
      params: match.params,
      context: opts.requestContext
    }), abortPromise]);
  };
  try {
    let handler = match.route[type];
    if (match.route.lazy)
      if (handler)
        result = (await Promise.all([runHandler(handler), loadLazyRouteModule(match.route, mapRouteProperties2, manifest)]))[0];
      else if (await loadLazyRouteModule(match.route, mapRouteProperties2, manifest), handler = match.route[type], handler)
        result = await runHandler(handler);
      else if (type === "action") {
        let url = new URL(request.url), pathname = url.pathname + url.search;
        throw getInternalRouterError(405, {
          method: request.method,
          pathname,
          routeId: match.route.id
        });
      } else
        return {
          type: ResultType.data,
          data: void 0
        };
    else if (handler)
      result = await runHandler(handler);
    else {
      let url = new URL(request.url), pathname = url.pathname + url.search;
      throw getInternalRouterError(404, {
        pathname
      });
    }
    invariant(result !== void 0, "You defined " + (type === "action" ? "an action" : "a loader") + " for route " + ('"' + match.route.id + "\" but didn't return anything from your `" + type + "` ") + "function. Please return a value or `null`.");
  } catch (e5) {
    resultType = ResultType.error, result = e5;
  } finally {
    onReject && request.signal.removeEventListener("abort", onReject);
  }
  if (isResponse(result)) {
    let status = result.status;
    if (redirectStatusCodes.has(status)) {
      let location = result.headers.get("Location");
      if (invariant(location, "Redirects returned/thrown from loaders/actions must have a Location header"), !ABSOLUTE_URL_REGEX.test(location))
        location = normalizeTo(new URL(request.url), matches.slice(0, matches.indexOf(match) + 1), basename, !0, location);
      else if (!opts.isStaticRequest) {
        let currentUrl = new URL(request.url), url = location.startsWith("//") ? new URL(currentUrl.protocol + location) : new URL(location), isSameBasename = stripBasename(url.pathname, basename) != null;
        url.origin === currentUrl.origin && isSameBasename && (location = url.pathname + url.search + url.hash);
      }
      if (opts.isStaticRequest)
        throw result.headers.set("Location", location), result;
      return {
        type: ResultType.redirect,
        status,
        location,
        revalidate: result.headers.get("X-Remix-Revalidate") !== null
      };
    }
    if (opts.isRouteRequest)
      throw {
        type: resultType || ResultType.data,
        response: result
      };
    let data2, contentType = result.headers.get("Content-Type");
    return contentType && /\bapplication\/json\b/.test(contentType) ? data2 = await result.json() : data2 = await result.text(), resultType === ResultType.error ? {
      type: resultType,
      error: new ErrorResponse(status, result.statusText, data2),
      headers: result.headers
    } : {
      type: ResultType.data,
      data: data2,
      statusCode: result.status,
      headers: result.headers
    };
  }
  if (resultType === ResultType.error)
    return {
      type: resultType,
      error: result
    };
  if (isDeferredData(result)) {
    var _result$init, _result$init2;
    return {
      type: ResultType.deferred,
      deferredData: result,
      statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,
      headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)
    };
  }
  return {
    type: ResultType.data,
    data: result
  };
}
function createClientSideRequest(history2, location, signal, submission) {
  let url = history2.createURL(stripHashFromPath(location)).toString(), init = {
    signal
  };
  if (submission && isMutationMethod(submission.formMethod)) {
    let {
      formMethod,
      formEncType
    } = submission;
    init.method = formMethod.toUpperCase(), formEncType === "application/json" ? (init.headers = new Headers({
      "Content-Type": formEncType
    }), init.body = JSON.stringify(submission.json)) : formEncType === "text/plain" ? init.body = submission.text : formEncType === "application/x-www-form-urlencoded" && submission.formData ? init.body = convertFormDataToSearchParams(submission.formData) : init.body = submission.formData;
  }
  return new Request(url, init);
}
function convertFormDataToSearchParams(formData) {
  let searchParams = new URLSearchParams();
  for (let [key, value] of formData.entries())
    searchParams.append(key, typeof value == "string" ? value : value.name);
  return searchParams;
}
function convertSearchParamsToFormData(searchParams) {
  let formData = new FormData();
  for (let [key, value] of searchParams.entries())
    formData.append(key, value);
  return formData;
}
function processRouteLoaderData(matches, matchesToLoad, results2, pendingError, activeDeferreds) {
  let loaderData = {}, errors = null, statusCode, foundError = !1, loaderHeaders = {};
  return results2.forEach((result, index3) => {
    let id = matchesToLoad[index3].route.id;
    if (invariant(!isRedirectResult(result), "Cannot handle redirect results in processLoaderData"), isErrorResult(result)) {
      let boundaryMatch = findNearestBoundary(matches, id), error = result.error;
      pendingError && (error = Object.values(pendingError)[0], pendingError = void 0), errors = errors || {}, errors[boundaryMatch.route.id] == null && (errors[boundaryMatch.route.id] = error), loaderData[id] = void 0, foundError || (foundError = !0, statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500), result.headers && (loaderHeaders[id] = result.headers);
    } else
      isDeferredResult(result) ? (activeDeferreds.set(id, result.deferredData), loaderData[id] = result.deferredData.data) : loaderData[id] = result.data, result.statusCode != null && result.statusCode !== 200 && !foundError && (statusCode = result.statusCode), result.headers && (loaderHeaders[id] = result.headers);
  }), pendingError && (errors = pendingError, loaderData[Object.keys(pendingError)[0]] = void 0), {
    loaderData,
    errors,
    statusCode: statusCode || 200,
    loaderHeaders
  };
}
function processLoaderData(state, matches, matchesToLoad, results2, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {
  let {
    loaderData,
    errors
  } = processRouteLoaderData(matches, matchesToLoad, results2, pendingError, activeDeferreds);
  for (let index3 = 0; index3 < revalidatingFetchers.length; index3++) {
    let {
      key,
      match,
      controller
    } = revalidatingFetchers[index3];
    invariant(fetcherResults !== void 0 && fetcherResults[index3] !== void 0, "Did not find corresponding fetcher result");
    let result = fetcherResults[index3];
    if (!(controller && controller.signal.aborted))
      if (isErrorResult(result)) {
        let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);
        errors && errors[boundaryMatch.route.id] || (errors = _extends({}, errors, {
          [boundaryMatch.route.id]: result.error
        })), state.fetchers.delete(key);
      } else if (isRedirectResult(result))
        invariant(!1, "Unhandled fetcher revalidation redirect");
      else if (isDeferredResult(result))
        invariant(!1, "Unhandled fetcher deferred data");
      else {
        let doneFetcher = getDoneFetcher(result.data);
        state.fetchers.set(key, doneFetcher);
      }
  }
  return {
    loaderData,
    errors
  };
}
function mergeLoaderData(loaderData, newLoaderData, matches, errors) {
  let mergedLoaderData = _extends({}, newLoaderData);
  for (let match of matches) {
    let id = match.route.id;
    if (newLoaderData.hasOwnProperty(id) ? newLoaderData[id] !== void 0 && (mergedLoaderData[id] = newLoaderData[id]) : loaderData[id] !== void 0 && match.route.loader && (mergedLoaderData[id] = loaderData[id]), errors && errors.hasOwnProperty(id))
      break;
  }
  return mergedLoaderData;
}
function findNearestBoundary(matches, routeId) {
  return (routeId ? matches.slice(0, matches.findIndex((m10) => m10.route.id === routeId) + 1) : [...matches]).reverse().find((m10) => m10.route.hasErrorBoundary === !0) || matches[0];
}
function getShortCircuitMatches(routes2) {
  let route = routes2.find((r9) => r9.index || !r9.path || r9.path === "/") || {
    id: "__shim-error-route__"
  };
  return {
    matches: [{
      params: {},
      pathname: "",
      pathnameBase: "",
      route
    }],
    route
  };
}
function getInternalRouterError(status, _temp4) {
  let {
    pathname,
    routeId,
    method,
    type
  } = _temp4 === void 0 ? {} : _temp4, statusText = "Unknown Server Error", errorMessage = "Unknown @remix-run/router error";
  return status === 400 ? (statusText = "Bad Request", method && pathname && routeId ? errorMessage = "You made a " + method + ' request to "' + pathname + '" but ' + ('did not provide a `loader` for route "' + routeId + '", ') + "so there is no way to handle the request." : type === "defer-action" ? errorMessage = "defer() is not supported in actions" : type === "invalid-body" && (errorMessage = "Unable to encode submission body")) : status === 403 ? (statusText = "Forbidden", errorMessage = 'Route "' + routeId + '" does not match URL "' + pathname + '"') : status === 404 ? (statusText = "Not Found", errorMessage = 'No route matches URL "' + pathname + '"') : status === 405 && (statusText = "Method Not Allowed", method && pathname && routeId ? errorMessage = "You made a " + method.toUpperCase() + ' request to "' + pathname + '" but ' + ('did not provide an `action` for route "' + routeId + '", ') + "so there is no way to handle the request." : method && (errorMessage = 'Invalid request method "' + method.toUpperCase() + '"')), new ErrorResponse(status || 500, statusText, new Error(errorMessage), !0);
}
function findRedirect(results2) {
  for (let i7 = results2.length - 1; i7 >= 0; i7--) {
    let result = results2[i7];
    if (isRedirectResult(result))
      return {
        result,
        idx: i7
      };
  }
}
function stripHashFromPath(path) {
  let parsedPath = typeof path == "string" ? parsePath(path) : path;
  return createPath(_extends({}, parsedPath, {
    hash: ""
  }));
}
function isHashChangeOnly(a13, b6) {
  return a13.pathname !== b6.pathname || a13.search !== b6.search ? !1 : a13.hash === "" ? b6.hash !== "" : a13.hash === b6.hash ? !0 : b6.hash !== "";
}
function isDeferredResult(result) {
  return result.type === ResultType.deferred;
}
function isErrorResult(result) {
  return result.type === ResultType.error;
}
function isRedirectResult(result) {
  return (result && result.type) === ResultType.redirect;
}
function isDeferredData(value) {
  let deferred = value;
  return deferred && typeof deferred == "object" && typeof deferred.data == "object" && typeof deferred.subscribe == "function" && typeof deferred.cancel == "function" && typeof deferred.resolveData == "function";
}
function isResponse(value) {
  return value != null && typeof value.status == "number" && typeof value.statusText == "string" && typeof value.headers == "object" && typeof value.body < "u";
}
function isRedirectResponse(result) {
  if (!isResponse(result))
    return !1;
  let status = result.status, location = result.headers.get("Location");
  return status >= 300 && status <= 399 && location != null;
}
function isQueryRouteResponse(obj) {
  return obj && isResponse(obj.response) && (obj.type === ResultType.data || ResultType.error);
}
function isValidMethod(method) {
  return validRequestMethods.has(method.toLowerCase());
}
function isMutationMethod(method) {
  return validMutationMethods.has(method.toLowerCase());
}
async function resolveDeferredResults(currentMatches, matchesToLoad, results2, signals, isFetcher, currentLoaderData) {
  for (let index3 = 0; index3 < results2.length; index3++) {
    let result = results2[index3], match = matchesToLoad[index3];
    if (!match)
      continue;
    let currentMatch = currentMatches.find((m10) => m10.route.id === match.route.id), isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== void 0;
    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {
      let signal = signals[index3];
      invariant(signal, "Expected an AbortSignal for revalidating fetcher deferred result"), await resolveDeferredData(result, signal, isFetcher).then((result2) => {
        result2 && (results2[index3] = result2 || results2[index3]);
      });
    }
  }
}
async function resolveDeferredData(result, signal, unwrap) {
  if (unwrap === void 0 && (unwrap = !1), !await result.deferredData.resolveData(signal)) {
    if (unwrap)
      try {
        return {
          type: ResultType.data,
          data: result.deferredData.unwrappedData
        };
      } catch (e5) {
        return {
          type: ResultType.error,
          error: e5
        };
      }
    return {
      type: ResultType.data,
      data: result.deferredData.data
    };
  }
}
function hasNakedIndexQuery(search) {
  return new URLSearchParams(search).getAll("index").some((v4) => v4 === "");
}
function createUseMatchesMatch(match, loaderData) {
  let {
    route,
    pathname,
    params
  } = match;
  return {
    id: route.id,
    pathname,
    params,
    data: loaderData[route.id],
    handle: route.handle
  };
}
function getTargetMatch(matches, location) {
  let search = typeof location == "string" ? parsePath(location).search : location.search;
  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || ""))
    return matches[matches.length - 1];
  let pathMatches = getPathContributingMatches(matches);
  return pathMatches[pathMatches.length - 1];
}
function getSubmissionFromNavigation(navigation) {
  let {
    formMethod,
    formAction,
    formEncType,
    text,
    formData,
    json: json4
  } = navigation;
  if (!(!formMethod || !formAction || !formEncType)) {
    if (text != null)
      return {
        formMethod,
        formAction,
        formEncType,
        formData: void 0,
        json: void 0,
        text
      };
    if (formData != null)
      return {
        formMethod,
        formAction,
        formEncType,
        formData,
        json: void 0,
        text: void 0
      };
    if (json4 !== void 0)
      return {
        formMethod,
        formAction,
        formEncType,
        formData: void 0,
        json: json4,
        text: void 0
      };
  }
}
function getLoadingNavigation(location, submission) {
  return submission ? {
    state: "loading",
    location,
    formMethod: submission.formMethod,
    formAction: submission.formAction,
    formEncType: submission.formEncType,
    formData: submission.formData,
    json: submission.json,
    text: submission.text
  } : {
    state: "loading",
    location,
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0
  };
}
function getSubmittingNavigation(location, submission) {
  return {
    state: "submitting",
    location,
    formMethod: submission.formMethod,
    formAction: submission.formAction,
    formEncType: submission.formEncType,
    formData: submission.formData,
    json: submission.json,
    text: submission.text
  };
}
function getLoadingFetcher(submission, data2) {
  return submission ? {
    state: "loading",
    formMethod: submission.formMethod,
    formAction: submission.formAction,
    formEncType: submission.formEncType,
    formData: submission.formData,
    json: submission.json,
    text: submission.text,
    data: data2,
    " _hasFetcherDoneAnything ": !0
  } : {
    state: "loading",
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0,
    data: data2,
    " _hasFetcherDoneAnything ": !0
  };
}
function getSubmittingFetcher(submission, existingFetcher) {
  return {
    state: "submitting",
    formMethod: submission.formMethod,
    formAction: submission.formAction,
    formEncType: submission.formEncType,
    formData: submission.formData,
    json: submission.json,
    text: submission.text,
    data: existingFetcher ? existingFetcher.data : void 0,
    " _hasFetcherDoneAnything ": !0
  };
}
function getDoneFetcher(data2) {
  return {
    state: "idle",
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0,
    data: data2,
    " _hasFetcherDoneAnything ": !0
  };
}
var Action, PopStateEventType, ResultType, immutableRouteKeys, paramRe, dynamicSegmentValue, indexRouteValue, emptySegmentValue, staticSegmentValue, splatPenalty, isSplat, joinPaths, normalizePathname, normalizeSearch, normalizeHash, json, AbortedDeferredError, DeferredData, defer, redirect2, ErrorResponse, validMutationMethodsArr, validMutationMethods, validRequestMethodsArr, validRequestMethods, redirectStatusCodes, redirectPreserveMethodStatusCodes, IDLE_NAVIGATION, IDLE_FETCHER, IDLE_BLOCKER, ABSOLUTE_URL_REGEX, defaultMapRouteProperties, UNSAFE_DEFERRED_SYMBOL, init_router = __esm({
  "node_modules/@remix-run/router/dist/router.js"() {
    (function(Action2) {
      Action2.Pop = "POP", Action2.Push = "PUSH", Action2.Replace = "REPLACE";
    })(Action || (Action = {}));
    PopStateEventType = "popstate";
    (function(ResultType2) {
      ResultType2.data = "data", ResultType2.deferred = "deferred", ResultType2.redirect = "redirect", ResultType2.error = "error";
    })(ResultType || (ResultType = {}));
    immutableRouteKeys = /* @__PURE__ */ new Set(["lazy", "caseSensitive", "path", "id", "index", "children"]);
    paramRe = /^:\w+$/, dynamicSegmentValue = 3, indexRouteValue = 2, emptySegmentValue = 1, staticSegmentValue = 10, splatPenalty = -2, isSplat = (s15) => s15 === "*";
    joinPaths = (paths) => paths.join("/").replace(/\/\/+/g, "/"), normalizePathname = (pathname) => pathname.replace(/\/+$/, "").replace(/^\/*/, "/"), normalizeSearch = (search) => !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search, normalizeHash = (hash) => !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash, json = function(data2, init) {
      init === void 0 && (init = {});
      let responseInit = typeof init == "number" ? {
        status: init
      } : init, headers = new Headers(responseInit.headers);
      return headers.has("Content-Type") || headers.set("Content-Type", "application/json; charset=utf-8"), new Response(JSON.stringify(data2), _extends({}, responseInit, {
        headers
      }));
    }, AbortedDeferredError = class extends Error {
    }, DeferredData = class {
      constructor(data2, responseInit) {
        this.pendingKeysSet = /* @__PURE__ */ new Set(), this.subscribers = /* @__PURE__ */ new Set(), this.deferredKeys = [], invariant(data2 && typeof data2 == "object" && !Array.isArray(data2), "defer() only accepts plain objects");
        let reject;
        this.abortPromise = new Promise((_3, r9) => reject = r9), this.controller = new AbortController();
        let onAbort = () => reject(new AbortedDeferredError("Deferred data aborted"));
        this.unlistenAbortSignal = () => this.controller.signal.removeEventListener("abort", onAbort), this.controller.signal.addEventListener("abort", onAbort), this.data = Object.entries(data2).reduce((acc, _ref) => {
          let [key, value] = _ref;
          return Object.assign(acc, {
            [key]: this.trackPromise(key, value)
          });
        }, {}), this.done && this.unlistenAbortSignal(), this.init = responseInit;
      }
      trackPromise(key, value) {
        if (!(value instanceof Promise))
          return value;
        this.deferredKeys.push(key), this.pendingKeysSet.add(key);
        let promise = Promise.race([value, this.abortPromise]).then((data2) => this.onSettle(promise, key, void 0, data2), (error) => this.onSettle(promise, key, error));
        return promise.catch(() => {
        }), Object.defineProperty(promise, "_tracked", {
          get: () => !0
        }), promise;
      }
      onSettle(promise, key, error, data2) {
        if (this.controller.signal.aborted && error instanceof AbortedDeferredError)
          return this.unlistenAbortSignal(), Object.defineProperty(promise, "_error", {
            get: () => error
          }), Promise.reject(error);
        if (this.pendingKeysSet.delete(key), this.done && this.unlistenAbortSignal(), error === void 0 && data2 === void 0) {
          let undefinedError = new Error('Deferred data for key "' + key + '" resolved/rejected with `undefined`, you must resolve/reject with a value or `null`.');
          return Object.defineProperty(promise, "_error", {
            get: () => undefinedError
          }), this.emit(!1, key), Promise.reject(undefinedError);
        }
        return data2 === void 0 ? (Object.defineProperty(promise, "_error", {
          get: () => error
        }), this.emit(!1, key), Promise.reject(error)) : (Object.defineProperty(promise, "_data", {
          get: () => data2
        }), this.emit(!1, key), data2);
      }
      emit(aborted, settledKey) {
        this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));
      }
      subscribe(fn) {
        return this.subscribers.add(fn), () => this.subscribers.delete(fn);
      }
      cancel() {
        this.controller.abort(), this.pendingKeysSet.forEach((v4, k2) => this.pendingKeysSet.delete(k2)), this.emit(!0);
      }
      async resolveData(signal) {
        let aborted = !1;
        if (!this.done) {
          let onAbort = () => this.cancel();
          signal.addEventListener("abort", onAbort), aborted = await new Promise((resolve) => {
            this.subscribe((aborted2) => {
              signal.removeEventListener("abort", onAbort), (aborted2 || this.done) && resolve(aborted2);
            });
          });
        }
        return aborted;
      }
      get done() {
        return this.pendingKeysSet.size === 0;
      }
      get unwrappedData() {
        return invariant(this.data !== null && this.done, "Can only unwrap data on initialized and settled deferreds"), Object.entries(this.data).reduce((acc, _ref2) => {
          let [key, value] = _ref2;
          return Object.assign(acc, {
            [key]: unwrapTrackedPromise(value)
          });
        }, {});
      }
      get pendingKeys() {
        return Array.from(this.pendingKeysSet);
      }
    };
    defer = function(data2, init) {
      init === void 0 && (init = {});
      let responseInit = typeof init == "number" ? {
        status: init
      } : init;
      return new DeferredData(data2, responseInit);
    }, redirect2 = function(url, init) {
      init === void 0 && (init = 302);
      let responseInit = init;
      typeof responseInit == "number" ? responseInit = {
        status: responseInit
      } : typeof responseInit.status > "u" && (responseInit.status = 302);
      let headers = new Headers(responseInit.headers);
      return headers.set("Location", url), new Response(null, _extends({}, responseInit, {
        headers
      }));
    }, ErrorResponse = class {
      constructor(status, statusText, data2, internal) {
        internal === void 0 && (internal = !1), this.status = status, this.statusText = statusText || "", this.internal = internal, data2 instanceof Error ? (this.data = data2.toString(), this.error = data2) : this.data = data2;
      }
    };
    validMutationMethodsArr = ["post", "put", "patch", "delete"], validMutationMethods = new Set(validMutationMethodsArr), validRequestMethodsArr = ["get", ...validMutationMethodsArr], validRequestMethods = new Set(validRequestMethodsArr), redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]), redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]), IDLE_NAVIGATION = {
      state: "idle",
      location: void 0,
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0,
      json: void 0,
      text: void 0
    }, IDLE_FETCHER = {
      state: "idle",
      data: void 0,
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0,
      json: void 0,
      text: void 0
    }, IDLE_BLOCKER = {
      state: "unblocked",
      proceed: void 0,
      reset: void 0,
      location: void 0
    }, ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, defaultMapRouteProperties = (route) => ({
      hasErrorBoundary: Boolean(route.hasErrorBoundary)
    });
    UNSAFE_DEFERRED_SYMBOL = Symbol("deferred");
  }
});

// node_modules/react-router/dist/index.js
var dist_exports = {};
__export(dist_exports, {
  AbortedDeferredError: () => AbortedDeferredError,
  Await: () => Await,
  MemoryRouter: () => MemoryRouter,
  Navigate: () => Navigate,
  NavigationType: () => Action,
  Outlet: () => Outlet,
  Route: () => Route,
  Router: () => Router,
  RouterProvider: () => RouterProvider,
  Routes: () => Routes,
  UNSAFE_DataRouterContext: () => DataRouterContext,
  UNSAFE_DataRouterStateContext: () => DataRouterStateContext,
  UNSAFE_LocationContext: () => LocationContext,
  UNSAFE_NavigationContext: () => NavigationContext,
  UNSAFE_RouteContext: () => RouteContext,
  UNSAFE_mapRouteProperties: () => mapRouteProperties,
  UNSAFE_useRouteId: () => useRouteId,
  UNSAFE_useRoutesImpl: () => useRoutesImpl,
  createMemoryRouter: () => createMemoryRouter,
  createPath: () => createPath,
  createRoutesFromChildren: () => createRoutesFromChildren,
  createRoutesFromElements: () => createRoutesFromChildren,
  defer: () => defer,
  generatePath: () => generatePath,
  isRouteErrorResponse: () => isRouteErrorResponse,
  json: () => json,
  matchPath: () => matchPath,
  matchRoutes: () => matchRoutes,
  parsePath: () => parsePath,
  redirect: () => redirect2,
  renderMatches: () => renderMatches,
  resolvePath: () => resolvePath,
  unstable_useBlocker: () => useBlocker,
  useActionData: () => useActionData,
  useAsyncError: () => useAsyncError,
  useAsyncValue: () => useAsyncValue,
  useHref: () => useHref,
  useInRouterContext: () => useInRouterContext,
  useLoaderData: () => useLoaderData,
  useLocation: () => useLocation,
  useMatch: () => useMatch,
  useMatches: () => useMatches,
  useNavigate: () => useNavigate,
  useNavigation: () => useNavigation,
  useNavigationType: () => useNavigationType,
  useOutlet: () => useOutlet,
  useOutletContext: () => useOutletContext,
  useParams: () => useParams,
  useResolvedPath: () => useResolvedPath,
  useRevalidator: () => useRevalidator,
  useRouteError: () => useRouteError,
  useRouteLoaderData: () => useRouteLoaderData,
  useRoutes: () => useRoutes
});
function _extends2() {
  return _extends2 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i7 = 1; i7 < arguments.length; i7++) {
      var source = arguments[i7];
      for (var key in source)
        Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
    }
    return target;
  }, _extends2.apply(this, arguments);
}
function useHref(to, _temp) {
  let {
    relative
  } = _temp === void 0 ? {} : _temp;
  useInRouterContext() || invariant(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useHref() may be used only in the context of a <Router> component."
  );
  let {
    basename,
    navigator: navigator2
  } = React.useContext(NavigationContext), {
    hash,
    pathname,
    search
  } = useResolvedPath(to, {
    relative
  }), joinedPathname = pathname;
  return basename !== "/" && (joinedPathname = pathname === "/" ? basename : joinPaths([basename, pathname])), navigator2.createHref({
    pathname: joinedPathname,
    search,
    hash
  });
}
function useInRouterContext() {
  return React.useContext(LocationContext) != null;
}
function useLocation() {
  return useInRouterContext() || invariant(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useLocation() may be used only in the context of a <Router> component."
  ), React.useContext(LocationContext).location;
}
function useNavigationType() {
  return React.useContext(LocationContext).navigationType;
}
function useMatch(pattern) {
  useInRouterContext() || invariant(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useMatch() may be used only in the context of a <Router> component."
  );
  let {
    pathname
  } = useLocation();
  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);
}
function useIsomorphicLayoutEffect(cb) {
  React.useContext(NavigationContext).static || React.useLayoutEffect(cb);
}
function useNavigate() {
  let {
    isDataRoute
  } = React.useContext(RouteContext);
  return isDataRoute ? useNavigateStable() : useNavigateUnstable();
}
function useNavigateUnstable() {
  useInRouterContext() || invariant(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useNavigate() may be used only in the context of a <Router> component."
  );
  let dataRouterContext = React.useContext(DataRouterContext), {
    basename,
    navigator: navigator2
  } = React.useContext(NavigationContext), {
    matches
  } = React.useContext(RouteContext), {
    pathname: locationPathname
  } = useLocation(), routePathnamesJson = JSON.stringify(getPathContributingMatches(matches).map((match) => match.pathnameBase)), activeRef = React.useRef(!1);
  return useIsomorphicLayoutEffect(() => {
    activeRef.current = !0;
  }), React.useCallback(function(to, options) {
    if (options === void 0 && (options = {}), warning(activeRef.current, navigateEffectWarning), !activeRef.current)
      return;
    if (typeof to == "number") {
      navigator2.go(to);
      return;
    }
    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === "path");
    dataRouterContext == null && basename !== "/" && (path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname])), (options.replace ? navigator2.replace : navigator2.push)(path, options.state, options);
  }, [basename, navigator2, routePathnamesJson, locationPathname, dataRouterContext]);
}
function useOutletContext() {
  return React.useContext(OutletContext);
}
function useOutlet(context) {
  let outlet = React.useContext(RouteContext).outlet;
  return outlet && /* @__PURE__ */ React.createElement(OutletContext.Provider, {
    value: context
  }, outlet);
}
function useParams() {
  let {
    matches
  } = React.useContext(RouteContext), routeMatch = matches[matches.length - 1];
  return routeMatch ? routeMatch.params : {};
}
function useResolvedPath(to, _temp2) {
  let {
    relative
  } = _temp2 === void 0 ? {} : _temp2, {
    matches
  } = React.useContext(RouteContext), {
    pathname: locationPathname
  } = useLocation(), routePathnamesJson = JSON.stringify(getPathContributingMatches(matches).map((match) => match.pathnameBase));
  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === "path"), [to, routePathnamesJson, locationPathname, relative]);
}
function useRoutes(routes2, locationArg) {
  return useRoutesImpl(routes2, locationArg);
}
function useRoutesImpl(routes2, locationArg, dataRouterState) {
  useInRouterContext() || invariant(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    "useRoutes() may be used only in the context of a <Router> component."
  );
  let {
    navigator: navigator2
  } = React.useContext(NavigationContext), {
    matches: parentMatches
  } = React.useContext(RouteContext), routeMatch = parentMatches[parentMatches.length - 1], parentParams = routeMatch ? routeMatch.params : {}, parentPathname = routeMatch ? routeMatch.pathname : "/", parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/", parentRoute = routeMatch && routeMatch.route;
  {
    let parentPath = parentRoute && parentRoute.path || "";
    warningOnce(parentPathname, !parentRoute || parentPath.endsWith("*"), "You rendered descendant <Routes> (or called `useRoutes()`) at " + ('"' + parentPathname + '" (under <Route path="' + parentPath + '">) but the ') + `parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

` + ('Please change the parent <Route path="' + parentPath + '"> to <Route ') + ('path="' + (parentPath === "/" ? "*" : parentPath + "/*") + '">.'));
  }
  let locationFromContext = useLocation(), location;
  if (locationArg) {
    var _parsedLocationArg$pa;
    let parsedLocationArg = typeof locationArg == "string" ? parsePath(locationArg) : locationArg;
    parentPathnameBase === "/" || (_parsedLocationArg$pa = parsedLocationArg.pathname) != null && _parsedLocationArg$pa.startsWith(parentPathnameBase) || invariant(!1, "When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, the location pathname must begin with the portion of the URL pathname that was " + ('matched by all parent routes. The current pathname base is "' + parentPathnameBase + '" ') + ('but pathname "' + parsedLocationArg.pathname + '" was given in the `location` prop.')), location = parsedLocationArg;
  } else
    location = locationFromContext;
  let pathname = location.pathname || "/", remainingPathname = parentPathnameBase === "/" ? pathname : pathname.slice(parentPathnameBase.length) || "/", matches = matchRoutes(routes2, {
    pathname: remainingPathname
  });
  warning(parentRoute || matches != null, 'No routes matched location "' + location.pathname + location.search + location.hash + '" '), warning(matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0, 'Matched leaf route at location "' + location.pathname + location.search + location.hash + '" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.');
  let renderedMatches = _renderMatches(matches && matches.map((match) => Object.assign({}, match, {
    params: Object.assign({}, parentParams, match.params),
    pathname: joinPaths([
      parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname
    ]),
    pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : joinPaths([
      parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase
    ])
  })), parentMatches, dataRouterState);
  return locationArg && renderedMatches ? /* @__PURE__ */ React.createElement(LocationContext.Provider, {
    value: {
      location: _extends2({
        pathname: "/",
        search: "",
        hash: "",
        state: null,
        key: "default"
      }, location),
      navigationType: Action.Pop
    }
  }, renderedMatches) : renderedMatches;
}
function DefaultErrorComponent() {
  let error = useRouteError(), message = isRouteErrorResponse(error) ? error.status + " " + error.statusText : error instanceof Error ? error.message : JSON.stringify(error), stack = error instanceof Error ? error.stack : null, lightgrey = "rgba(200,200,200, 0.5)", preStyles = {
    padding: "0.5rem",
    backgroundColor: lightgrey
  }, codeStyles = {
    padding: "2px 4px",
    backgroundColor: lightgrey
  }, devInfo = null;
  return console.error("Error handled by React Router default ErrorBoundary:", error), devInfo = /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("p", null, "\u{1F4BF} Hey developer \u{1F44B}"), /* @__PURE__ */ React.createElement("p", null, "You can provide a way better UX than this when your app throws errors by providing your own ", /* @__PURE__ */ React.createElement("code", {
    style: codeStyles
  }, "ErrorBoundary"), " or", " ", /* @__PURE__ */ React.createElement("code", {
    style: codeStyles
  }, "errorElement"), " prop on your route.")), /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("h2", null, "Unexpected Application Error!"), /* @__PURE__ */ React.createElement("h3", {
    style: {
      fontStyle: "italic"
    }
  }, message), stack ? /* @__PURE__ */ React.createElement("pre", {
    style: preStyles
  }, stack) : null, devInfo);
}
function RenderedRoute(_ref) {
  let {
    routeContext,
    match,
    children
  } = _ref, dataRouterContext = React.useContext(DataRouterContext);
  return dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary) && (dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id), /* @__PURE__ */ React.createElement(RouteContext.Provider, {
    value: routeContext
  }, children);
}
function _renderMatches(matches, parentMatches, dataRouterState) {
  var _dataRouterState2;
  if (parentMatches === void 0 && (parentMatches = []), dataRouterState === void 0 && (dataRouterState = null), matches == null) {
    var _dataRouterState;
    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors)
      matches = dataRouterState.matches;
    else
      return null;
  }
  let renderedMatches = matches, errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;
  if (errors != null) {
    let errorIndex = renderedMatches.findIndex((m10) => m10.route.id && (errors == null ? void 0 : errors[m10.route.id]));
    errorIndex >= 0 || invariant(!1, "Could not find a matching route for errors on route IDs: " + Object.keys(errors).join(",")), renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));
  }
  return renderedMatches.reduceRight((outlet, match, index3) => {
    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null, errorElement = null;
    dataRouterState && (errorElement = match.route.errorElement || defaultErrorElement);
    let matches2 = parentMatches.concat(renderedMatches.slice(0, index3 + 1)), getChildren = () => {
      let children;
      return error ? children = errorElement : match.route.Component ? children = /* @__PURE__ */ React.createElement(match.route.Component, null) : match.route.element ? children = match.route.element : children = outlet, /* @__PURE__ */ React.createElement(RenderedRoute, {
        match,
        routeContext: {
          outlet,
          matches: matches2,
          isDataRoute: dataRouterState != null
        },
        children
      });
    };
    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index3 === 0) ? /* @__PURE__ */ React.createElement(RenderErrorBoundary, {
      location: dataRouterState.location,
      revalidation: dataRouterState.revalidation,
      component: errorElement,
      error,
      children: getChildren(),
      routeContext: {
        outlet: null,
        matches: matches2,
        isDataRoute: !0
      }
    }) : getChildren();
  }, null);
}
function getDataRouterConsoleError(hookName) {
  return hookName + " must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.";
}
function useDataRouterContext(hookName) {
  let ctx = React.useContext(DataRouterContext);
  return ctx || invariant(!1, getDataRouterConsoleError(hookName)), ctx;
}
function useDataRouterState(hookName) {
  let state = React.useContext(DataRouterStateContext);
  return state || invariant(!1, getDataRouterConsoleError(hookName)), state;
}
function useRouteContext(hookName) {
  let route = React.useContext(RouteContext);
  return route || invariant(!1, getDataRouterConsoleError(hookName)), route;
}
function useCurrentRouteId(hookName) {
  let route = useRouteContext(hookName), thisRoute = route.matches[route.matches.length - 1];
  return thisRoute.route.id || invariant(!1, hookName + ' can only be used on routes that contain a unique "id"'), thisRoute.route.id;
}
function useRouteId() {
  return useCurrentRouteId(DataRouterStateHook.UseRouteId);
}
function useNavigation() {
  return useDataRouterState(DataRouterStateHook.UseNavigation).navigation;
}
function useRevalidator() {
  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator), state = useDataRouterState(DataRouterStateHook.UseRevalidator);
  return {
    revalidate: dataRouterContext.router.revalidate,
    state: state.revalidation
  };
}
function useMatches() {
  let {
    matches,
    loaderData
  } = useDataRouterState(DataRouterStateHook.UseMatches);
  return React.useMemo(() => matches.map((match) => {
    let {
      pathname,
      params
    } = match;
    return {
      id: match.route.id,
      pathname,
      params,
      data: loaderData[match.route.id],
      handle: match.route.handle
    };
  }), [matches, loaderData]);
}
function useLoaderData() {
  let state = useDataRouterState(DataRouterStateHook.UseLoaderData), routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);
  if (state.errors && state.errors[routeId] != null) {
    console.error("You cannot `useLoaderData` in an errorElement (routeId: " + routeId + ")");
    return;
  }
  return state.loaderData[routeId];
}
function useRouteLoaderData(routeId) {
  return useDataRouterState(DataRouterStateHook.UseRouteLoaderData).loaderData[routeId];
}
function useActionData() {
  let state = useDataRouterState(DataRouterStateHook.UseActionData);
  return React.useContext(RouteContext) || invariant(!1, "useActionData must be used inside a RouteContext"), Object.values((state == null ? void 0 : state.actionData) || {})[0];
}
function useRouteError() {
  var _state$errors;
  let error = React.useContext(RouteErrorContext), state = useDataRouterState(DataRouterStateHook.UseRouteError), routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);
  return error || ((_state$errors = state.errors) == null ? void 0 : _state$errors[routeId]);
}
function useAsyncValue() {
  let value = React.useContext(AwaitContext);
  return value == null ? void 0 : value._data;
}
function useAsyncError() {
  let value = React.useContext(AwaitContext);
  return value == null ? void 0 : value._error;
}
function useBlocker(shouldBlock) {
  let {
    router,
    basename
  } = useDataRouterContext(DataRouterHook.UseBlocker), state = useDataRouterState(DataRouterStateHook.UseBlocker), [blockerKey, setBlockerKey] = React.useState(""), blockerFunction = React.useCallback((arg) => {
    if (typeof shouldBlock != "function")
      return !!shouldBlock;
    if (basename === "/")
      return shouldBlock(arg);
    let {
      currentLocation,
      nextLocation,
      historyAction
    } = arg;
    return shouldBlock({
      currentLocation: _extends2({}, currentLocation, {
        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname
      }),
      nextLocation: _extends2({}, nextLocation, {
        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname
      }),
      historyAction
    });
  }, [basename, shouldBlock]);
  return React.useEffect(() => {
    let key = String(++blockerId);
    return setBlockerKey(key), () => router.deleteBlocker(key);
  }, [router]), React.useEffect(() => {
    blockerKey !== "" && router.getBlocker(blockerKey, blockerFunction);
  }, [router, blockerKey, blockerFunction]), blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;
}
function useNavigateStable() {
  let {
    router
  } = useDataRouterContext(DataRouterHook.UseNavigateStable), id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable), activeRef = React.useRef(!1);
  return useIsomorphicLayoutEffect(() => {
    activeRef.current = !0;
  }), React.useCallback(function(to, options) {
    options === void 0 && (options = {}), warning(activeRef.current, navigateEffectWarning), activeRef.current && (typeof to == "number" ? router.navigate(to) : router.navigate(to, _extends2({
      fromRouteId: id
    }, options)));
  }, [router, id]);
}
function warningOnce(key, cond, message) {
  !cond && !alreadyWarned[key] && (alreadyWarned[key] = !0, warning(!1, message));
}
function RouterProvider(_ref) {
  let {
    fallbackElement,
    router,
    future: future2
  } = _ref, [state, setStateImpl] = React.useState(router.state), {
    v7_startTransition
  } = future2 || {}, setState = React.useCallback((newState) => {
    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);
  }, [setStateImpl, v7_startTransition]);
  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);
  let navigator2 = React.useMemo(() => ({
    createHref: router.createHref,
    encodeLocation: router.encodeLocation,
    go: (n7) => router.navigate(n7),
    push: (to, state2, opts) => router.navigate(to, {
      state: state2,
      preventScrollReset: opts == null ? void 0 : opts.preventScrollReset
    }),
    replace: (to, state2, opts) => router.navigate(to, {
      replace: !0,
      state: state2,
      preventScrollReset: opts == null ? void 0 : opts.preventScrollReset
    })
  }), [router]), basename = router.basename || "/", dataRouterContext = React.useMemo(() => ({
    router,
    navigator: navigator2,
    static: !1,
    basename
  }), [router, navigator2, basename]);
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(DataRouterContext.Provider, {
    value: dataRouterContext
  }, /* @__PURE__ */ React.createElement(DataRouterStateContext.Provider, {
    value: state
  }, /* @__PURE__ */ React.createElement(Router, {
    basename,
    location: state.location,
    navigationType: state.historyAction,
    navigator: navigator2
  }, state.initialized ? /* @__PURE__ */ React.createElement(DataRoutes, {
    routes: router.routes,
    state
  }) : fallbackElement))), null);
}
function DataRoutes(_ref2) {
  let {
    routes: routes2,
    state
  } = _ref2;
  return useRoutesImpl(routes2, void 0, state);
}
function MemoryRouter(_ref3) {
  let {
    basename,
    children,
    initialEntries,
    initialIndex,
    future: future2
  } = _ref3, historyRef = React.useRef();
  historyRef.current == null && (historyRef.current = createMemoryHistory({
    initialEntries,
    initialIndex,
    v5Compat: !0
  }));
  let history2 = historyRef.current, [state, setStateImpl] = React.useState({
    action: history2.action,
    location: history2.location
  }), {
    v7_startTransition
  } = future2 || {}, setState = React.useCallback((newState) => {
    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);
  }, [setStateImpl, v7_startTransition]);
  return React.useLayoutEffect(() => history2.listen(setState), [history2, setState]), /* @__PURE__ */ React.createElement(Router, {
    basename,
    children,
    location: state.location,
    navigationType: state.action,
    navigator: history2
  });
}
function Navigate(_ref4) {
  let {
    to,
    replace,
    state,
    relative
  } = _ref4;
  useInRouterContext() || invariant(
    !1,
    // TODO: This error is probably because they somehow have 2 versions of
    // the router loaded. We can help them understand how to avoid that.
    "<Navigate> may be used only in the context of a <Router> component."
  ), warning(!React.useContext(NavigationContext).static, "<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.");
  let {
    matches
  } = React.useContext(RouteContext), {
    pathname: locationPathname
  } = useLocation(), navigate = useNavigate(), path = resolveTo(to, getPathContributingMatches(matches).map((match) => match.pathnameBase), locationPathname, relative === "path"), jsonPath = JSON.stringify(path);
  return React.useEffect(() => navigate(JSON.parse(jsonPath), {
    replace,
    state,
    relative
  }), [navigate, jsonPath, relative, replace, state]), null;
}
function Outlet(props) {
  return useOutlet(props.context);
}
function Route(_props) {
  invariant(!1, "A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.");
}
function Router(_ref5) {
  let {
    basename: basenameProp = "/",
    children = null,
    location: locationProp,
    navigationType = Action.Pop,
    navigator: navigator2,
    static: staticProp = !1
  } = _ref5;
  useInRouterContext() && invariant(!1, "You cannot render a <Router> inside another <Router>. You should never have more than one in your app.");
  let basename = basenameProp.replace(/^\/*/, "/"), navigationContext = React.useMemo(() => ({
    basename,
    navigator: navigator2,
    static: staticProp
  }), [basename, navigator2, staticProp]);
  typeof locationProp == "string" && (locationProp = parsePath(locationProp));
  let {
    pathname = "/",
    search = "",
    hash = "",
    state = null,
    key = "default"
  } = locationProp, locationContext = React.useMemo(() => {
    let trailingPathname = stripBasename(pathname, basename);
    return trailingPathname == null ? null : {
      location: {
        pathname: trailingPathname,
        search,
        hash,
        state,
        key
      },
      navigationType
    };
  }, [basename, pathname, search, hash, state, key, navigationType]);
  return warning(locationContext != null, '<Router basename="' + basename + '"> is not able to match the URL ' + ('"' + pathname + search + hash + '" because it does not start with the ') + "basename, so the <Router> won't render anything."), locationContext == null ? null : /* @__PURE__ */ React.createElement(NavigationContext.Provider, {
    value: navigationContext
  }, /* @__PURE__ */ React.createElement(LocationContext.Provider, {
    children,
    value: locationContext
  }));
}
function Routes(_ref6) {
  let {
    children,
    location
  } = _ref6;
  return useRoutes(createRoutesFromChildren(children), location);
}
function Await(_ref7) {
  let {
    children,
    errorElement,
    resolve
  } = _ref7;
  return /* @__PURE__ */ React.createElement(AwaitErrorBoundary, {
    resolve,
    errorElement
  }, /* @__PURE__ */ React.createElement(ResolveAwait, null, children));
}
function ResolveAwait(_ref8) {
  let {
    children
  } = _ref8, data2 = useAsyncValue(), toRender = typeof children == "function" ? children(data2) : children;
  return /* @__PURE__ */ React.createElement(React.Fragment, null, toRender);
}
function createRoutesFromChildren(children, parentPath) {
  parentPath === void 0 && (parentPath = []);
  let routes2 = [];
  return React.Children.forEach(children, (element, index3) => {
    if (!/* @__PURE__ */ React.isValidElement(element))
      return;
    let treePath = [...parentPath, index3];
    if (element.type === React.Fragment) {
      routes2.push.apply(routes2, createRoutesFromChildren(element.props.children, treePath));
      return;
    }
    element.type !== Route && invariant(!1, "[" + (typeof element.type == "string" ? element.type : element.type.name) + "] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>"), !element.props.index || !element.props.children || invariant(!1, "An index route cannot have child routes.");
    let route = {
      id: element.props.id || treePath.join("-"),
      caseSensitive: element.props.caseSensitive,
      element: element.props.element,
      Component: element.props.Component,
      index: element.props.index,
      path: element.props.path,
      loader: element.props.loader,
      action: element.props.action,
      errorElement: element.props.errorElement,
      ErrorBoundary: element.props.ErrorBoundary,
      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,
      shouldRevalidate: element.props.shouldRevalidate,
      handle: element.props.handle,
      lazy: element.props.lazy
    };
    element.props.children && (route.children = createRoutesFromChildren(element.props.children, treePath)), routes2.push(route);
  }), routes2;
}
function renderMatches(matches) {
  return _renderMatches(matches);
}
function mapRouteProperties(route) {
  let updates = {
    // Note: this check also occurs in createRoutesFromChildren so update
    // there if you change this -- please and thank you!
    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null
  };
  return route.Component && (route.element && warning(!1, "You should not include both `Component` and `element` on your route - `Component` will be used."), Object.assign(updates, {
    element: /* @__PURE__ */ React.createElement(route.Component),
    Component: void 0
  })), route.ErrorBoundary && (route.errorElement && warning(!1, "You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used."), Object.assign(updates, {
    errorElement: /* @__PURE__ */ React.createElement(route.ErrorBoundary),
    ErrorBoundary: void 0
  })), updates;
}
function createMemoryRouter(routes2, opts) {
  return createRouter({
    basename: opts == null ? void 0 : opts.basename,
    future: _extends2({}, opts == null ? void 0 : opts.future, {
      v7_prependBasename: !0
    }),
    history: createMemoryHistory({
      initialEntries: opts == null ? void 0 : opts.initialEntries,
      initialIndex: opts == null ? void 0 : opts.initialIndex
    }),
    hydrationData: opts == null ? void 0 : opts.hydrationData,
    routes: routes2,
    mapRouteProperties
  }).initialize();
}
var React, DataRouterContext, DataRouterStateContext, AwaitContext, NavigationContext, LocationContext, RouteContext, RouteErrorContext, navigateEffectWarning, OutletContext, defaultErrorElement, RenderErrorBoundary, DataRouterHook, DataRouterStateHook, blockerId, alreadyWarned, START_TRANSITION, startTransitionImpl, AwaitRenderStatus, neverSettledPromise, AwaitErrorBoundary, init_dist = __esm({
  "node_modules/react-router/dist/index.js"() {
    React = __toESM(require_react());
    init_router();
    init_router();
    DataRouterContext = /* @__PURE__ */ React.createContext(null);
    DataRouterContext.displayName = "DataRouter";
    DataRouterStateContext = /* @__PURE__ */ React.createContext(null);
    DataRouterStateContext.displayName = "DataRouterState";
    AwaitContext = /* @__PURE__ */ React.createContext(null);
    AwaitContext.displayName = "Await";
    NavigationContext = /* @__PURE__ */ React.createContext(null);
    NavigationContext.displayName = "Navigation";
    LocationContext = /* @__PURE__ */ React.createContext(null);
    LocationContext.displayName = "Location";
    RouteContext = /* @__PURE__ */ React.createContext({
      outlet: null,
      matches: [],
      isDataRoute: !1
    });
    RouteContext.displayName = "Route";
    RouteErrorContext = /* @__PURE__ */ React.createContext(null);
    RouteErrorContext.displayName = "RouteError";
    navigateEffectWarning = "You should call navigate() in a React.useEffect(), not when your component is first rendered.";
    OutletContext = /* @__PURE__ */ React.createContext(null);
    defaultErrorElement = /* @__PURE__ */ React.createElement(DefaultErrorComponent, null), RenderErrorBoundary = class extends React.Component {
      constructor(props) {
        super(props), this.state = {
          location: props.location,
          revalidation: props.revalidation,
          error: props.error
        };
      }
      static getDerivedStateFromError(error) {
        return {
          error
        };
      }
      static getDerivedStateFromProps(props, state) {
        return state.location !== props.location || state.revalidation !== "idle" && props.revalidation === "idle" ? {
          error: props.error,
          location: props.location,
          revalidation: props.revalidation
        } : {
          error: props.error || state.error,
          location: state.location,
          revalidation: props.revalidation || state.revalidation
        };
      }
      componentDidCatch(error, errorInfo) {
        console.error("React Router caught the following error during render", error, errorInfo);
      }
      render() {
        return this.state.error ? /* @__PURE__ */ React.createElement(RouteContext.Provider, {
          value: this.props.routeContext
        }, /* @__PURE__ */ React.createElement(RouteErrorContext.Provider, {
          value: this.state.error,
          children: this.props.component
        })) : this.props.children;
      }
    };
    (function(DataRouterHook3) {
      DataRouterHook3.UseBlocker = "useBlocker", DataRouterHook3.UseRevalidator = "useRevalidator", DataRouterHook3.UseNavigateStable = "useNavigate";
    })(DataRouterHook || (DataRouterHook = {}));
    (function(DataRouterStateHook3) {
      DataRouterStateHook3.UseBlocker = "useBlocker", DataRouterStateHook3.UseLoaderData = "useLoaderData", DataRouterStateHook3.UseActionData = "useActionData", DataRouterStateHook3.UseRouteError = "useRouteError", DataRouterStateHook3.UseNavigation = "useNavigation", DataRouterStateHook3.UseRouteLoaderData = "useRouteLoaderData", DataRouterStateHook3.UseMatches = "useMatches", DataRouterStateHook3.UseRevalidator = "useRevalidator", DataRouterStateHook3.UseNavigateStable = "useNavigate", DataRouterStateHook3.UseRouteId = "useRouteId";
    })(DataRouterStateHook || (DataRouterStateHook = {}));
    blockerId = 0;
    alreadyWarned = {};
    START_TRANSITION = "startTransition", startTransitionImpl = React[START_TRANSITION];
    (function(AwaitRenderStatus2) {
      AwaitRenderStatus2[AwaitRenderStatus2.pending = 0] = "pending", AwaitRenderStatus2[AwaitRenderStatus2.success = 1] = "success", AwaitRenderStatus2[AwaitRenderStatus2.error = 2] = "error";
    })(AwaitRenderStatus || (AwaitRenderStatus = {}));
    neverSettledPromise = new Promise(() => {
    }), AwaitErrorBoundary = class extends React.Component {
      constructor(props) {
        super(props), this.state = {
          error: null
        };
      }
      static getDerivedStateFromError(error) {
        return {
          error
        };
      }
      componentDidCatch(error, errorInfo) {
        console.error("<Await> caught the following error during render", error, errorInfo);
      }
      render() {
        let {
          children,
          errorElement,
          resolve
        } = this.props, promise = null, status = AwaitRenderStatus.pending;
        if (!(resolve instanceof Promise))
          status = AwaitRenderStatus.success, promise = Promise.resolve(), Object.defineProperty(promise, "_tracked", {
            get: () => !0
          }), Object.defineProperty(promise, "_data", {
            get: () => resolve
          });
        else if (this.state.error) {
          status = AwaitRenderStatus.error;
          let renderError = this.state.error;
          promise = Promise.reject().catch(() => {
          }), Object.defineProperty(promise, "_tracked", {
            get: () => !0
          }), Object.defineProperty(promise, "_error", {
            get: () => renderError
          });
        } else
          resolve._tracked ? (promise = resolve, status = promise._error !== void 0 ? AwaitRenderStatus.error : promise._data !== void 0 ? AwaitRenderStatus.success : AwaitRenderStatus.pending) : (status = AwaitRenderStatus.pending, Object.defineProperty(resolve, "_tracked", {
            get: () => !0
          }), promise = resolve.then((data2) => Object.defineProperty(resolve, "_data", {
            get: () => data2
          }), (error) => Object.defineProperty(resolve, "_error", {
            get: () => error
          })));
        if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError)
          throw neverSettledPromise;
        if (status === AwaitRenderStatus.error && !errorElement)
          throw promise._error;
        if (status === AwaitRenderStatus.error)
          return /* @__PURE__ */ React.createElement(AwaitContext.Provider, {
            value: promise,
            children: errorElement
          });
        if (status === AwaitRenderStatus.success)
          return /* @__PURE__ */ React.createElement(AwaitContext.Provider, {
            value: promise,
            children
          });
        throw promise;
      }
    };
  }
});

// node_modules/react-router-dom/dist/index.js
var dist_exports2 = {};
__export(dist_exports2, {
  AbortedDeferredError: () => AbortedDeferredError,
  Await: () => Await,
  BrowserRouter: () => BrowserRouter,
  Form: () => Form,
  HashRouter: () => HashRouter,
  Link: () => Link,
  MemoryRouter: () => MemoryRouter,
  NavLink: () => NavLink,
  Navigate: () => Navigate,
  NavigationType: () => Action,
  Outlet: () => Outlet,
  Route: () => Route,
  Router: () => Router,
  RouterProvider: () => RouterProvider,
  Routes: () => Routes,
  ScrollRestoration: () => ScrollRestoration,
  UNSAFE_DataRouterContext: () => DataRouterContext,
  UNSAFE_DataRouterStateContext: () => DataRouterStateContext,
  UNSAFE_LocationContext: () => LocationContext,
  UNSAFE_NavigationContext: () => NavigationContext,
  UNSAFE_RouteContext: () => RouteContext,
  UNSAFE_useRouteId: () => useRouteId,
  UNSAFE_useScrollRestoration: () => useScrollRestoration,
  createBrowserRouter: () => createBrowserRouter,
  createHashRouter: () => createHashRouter,
  createMemoryRouter: () => createMemoryRouter,
  createPath: () => createPath,
  createRoutesFromChildren: () => createRoutesFromChildren,
  createRoutesFromElements: () => createRoutesFromChildren,
  createSearchParams: () => createSearchParams,
  defer: () => defer,
  generatePath: () => generatePath,
  isRouteErrorResponse: () => isRouteErrorResponse,
  json: () => json,
  matchPath: () => matchPath,
  matchRoutes: () => matchRoutes,
  parsePath: () => parsePath,
  redirect: () => redirect2,
  renderMatches: () => renderMatches,
  resolvePath: () => resolvePath,
  unstable_HistoryRouter: () => HistoryRouter,
  unstable_useBlocker: () => useBlocker,
  unstable_usePrompt: () => usePrompt,
  useActionData: () => useActionData,
  useAsyncError: () => useAsyncError,
  useAsyncValue: () => useAsyncValue,
  useBeforeUnload: () => useBeforeUnload,
  useFetcher: () => useFetcher,
  useFetchers: () => useFetchers,
  useFormAction: () => useFormAction,
  useHref: () => useHref,
  useInRouterContext: () => useInRouterContext,
  useLinkClickHandler: () => useLinkClickHandler,
  useLoaderData: () => useLoaderData,
  useLocation: () => useLocation,
  useMatch: () => useMatch,
  useMatches: () => useMatches,
  useNavigate: () => useNavigate,
  useNavigation: () => useNavigation,
  useNavigationType: () => useNavigationType,
  useOutlet: () => useOutlet,
  useOutletContext: () => useOutletContext,
  useParams: () => useParams,
  useResolvedPath: () => useResolvedPath,
  useRevalidator: () => useRevalidator,
  useRouteError: () => useRouteError,
  useRouteLoaderData: () => useRouteLoaderData,
  useRoutes: () => useRoutes,
  useSearchParams: () => useSearchParams,
  useSubmit: () => useSubmit
});
function _extends3() {
  return _extends3 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i7 = 1; i7 < arguments.length; i7++) {
      var source = arguments[i7];
      for (var key in source)
        Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
    }
    return target;
  }, _extends3.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {}, sourceKeys = Object.keys(source), key, i7;
  for (i7 = 0; i7 < sourceKeys.length; i7++)
    key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
  return target;
}
function isHtmlElement(object) {
  return object != null && typeof object.tagName == "string";
}
function isButtonElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "button";
}
function isFormElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "form";
}
function isInputElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "input";
}
function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
function shouldProcessLinkClick(event, target) {
  return event.button === 0 && // Ignore everything but left clicks
  (!target || target === "_self") && // Let browser handle "target=_blank" etc.
  !isModifiedEvent(event);
}
function createSearchParams(init) {
  return init === void 0 && (init = ""), new URLSearchParams(typeof init == "string" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {
    let value = init[key];
    return memo.concat(Array.isArray(value) ? value.map((v4) => [key, v4]) : [[key, value]]);
  }, []));
}
function getSearchParamsForLocation(locationSearch, defaultSearchParams) {
  let searchParams = createSearchParams(locationSearch);
  if (defaultSearchParams)
    for (let key of defaultSearchParams.keys())
      searchParams.has(key) || defaultSearchParams.getAll(key).forEach((value) => {
        searchParams.append(key, value);
      });
  return searchParams;
}
function isFormDataSubmitterSupported() {
  if (_formDataSupportsSubmitter === null)
    try {
      new FormData(
        document.createElement("form"),
        // @ts-expect-error if FormData supports the submitter parameter, this will throw
        0
      ), _formDataSupportsSubmitter = !1;
    } catch {
      _formDataSupportsSubmitter = !0;
    }
  return _formDataSupportsSubmitter;
}
function getFormEncType(encType) {
  return encType != null && !supportedFormEncTypes.has(encType) ? (warning(!1, '"' + encType + '" is not a valid `encType` for `<Form>`/`<fetcher.Form>` ' + ('and will default to "' + defaultEncType + '"')), null) : encType;
}
function getFormSubmissionInfo(target, basename) {
  let method, action12, encType, formData, body;
  if (isFormElement(target)) {
    let attr = target.getAttribute("action");
    action12 = attr ? stripBasename(attr, basename) : null, method = target.getAttribute("method") || defaultMethod, encType = getFormEncType(target.getAttribute("enctype")) || defaultEncType, formData = new FormData(target);
  } else if (isButtonElement(target) || isInputElement(target) && (target.type === "submit" || target.type === "image")) {
    let form = target.form;
    if (form == null)
      throw new Error('Cannot submit a <button> or <input type="submit"> without a <form>');
    let attr = target.getAttribute("formaction") || form.getAttribute("action");
    if (action12 = attr ? stripBasename(attr, basename) : null, method = target.getAttribute("formmethod") || form.getAttribute("method") || defaultMethod, encType = getFormEncType(target.getAttribute("formenctype")) || getFormEncType(form.getAttribute("enctype")) || defaultEncType, formData = new FormData(form, target), !isFormDataSubmitterSupported()) {
      let {
        name,
        type,
        value
      } = target;
      if (type === "image") {
        let prefix = name ? name + "." : "";
        formData.append(prefix + "x", "0"), formData.append(prefix + "y", "0");
      } else
        name && formData.append(name, value);
    }
  } else {
    if (isHtmlElement(target))
      throw new Error('Cannot submit element that is not <form>, <button>, or <input type="submit|image">');
    method = defaultMethod, action12 = null, encType = defaultEncType, body = target;
  }
  return formData && encType === "text/plain" && (body = formData, formData = void 0), {
    action: action12,
    method: method.toLowerCase(),
    encType,
    formData,
    body
  };
}
function createBrowserRouter(routes2, opts) {
  return createRouter({
    basename: opts == null ? void 0 : opts.basename,
    future: _extends3({}, opts == null ? void 0 : opts.future, {
      v7_prependBasename: !0
    }),
    history: createBrowserHistory({
      window: opts == null ? void 0 : opts.window
    }),
    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),
    routes: routes2,
    mapRouteProperties
  }).initialize();
}
function createHashRouter(routes2, opts) {
  return createRouter({
    basename: opts == null ? void 0 : opts.basename,
    future: _extends3({}, opts == null ? void 0 : opts.future, {
      v7_prependBasename: !0
    }),
    history: createHashHistory({
      window: opts == null ? void 0 : opts.window
    }),
    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),
    routes: routes2,
    mapRouteProperties
  }).initialize();
}
function parseHydrationData() {
  var _window;
  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;
  return state && state.errors && (state = _extends3({}, state, {
    errors: deserializeErrors(state.errors)
  })), state;
}
function deserializeErrors(errors) {
  if (!errors)
    return null;
  let entries = Object.entries(errors), serialized = {};
  for (let [key, val] of entries)
    if (val && val.__type === "RouteErrorResponse")
      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === !0);
    else if (val && val.__type === "Error") {
      if (val.__subType) {
        let ErrorConstructor = window[val.__subType];
        if (typeof ErrorConstructor == "function")
          try {
            let error = new ErrorConstructor(val.message);
            error.stack = "", serialized[key] = error;
          } catch {
          }
      }
      if (serialized[key] == null) {
        let error = new Error(val.message);
        error.stack = "", serialized[key] = error;
      }
    } else
      serialized[key] = val;
  return serialized;
}
function BrowserRouter(_ref) {
  let {
    basename,
    children,
    future: future2,
    window: window2
  } = _ref, historyRef = React2.useRef();
  historyRef.current == null && (historyRef.current = createBrowserHistory({
    window: window2,
    v5Compat: !0
  }));
  let history2 = historyRef.current, [state, setStateImpl] = React2.useState({
    action: history2.action,
    location: history2.location
  }), {
    v7_startTransition
  } = future2 || {}, setState = React2.useCallback((newState) => {
    v7_startTransition && startTransitionImpl2 ? startTransitionImpl2(() => setStateImpl(newState)) : setStateImpl(newState);
  }, [setStateImpl, v7_startTransition]);
  return React2.useLayoutEffect(() => history2.listen(setState), [history2, setState]), /* @__PURE__ */ React2.createElement(Router, {
    basename,
    children,
    location: state.location,
    navigationType: state.action,
    navigator: history2
  });
}
function HashRouter(_ref2) {
  let {
    basename,
    children,
    future: future2,
    window: window2
  } = _ref2, historyRef = React2.useRef();
  historyRef.current == null && (historyRef.current = createHashHistory({
    window: window2,
    v5Compat: !0
  }));
  let history2 = historyRef.current, [state, setStateImpl] = React2.useState({
    action: history2.action,
    location: history2.location
  }), {
    v7_startTransition
  } = future2 || {}, setState = React2.useCallback((newState) => {
    v7_startTransition && startTransitionImpl2 ? startTransitionImpl2(() => setStateImpl(newState)) : setStateImpl(newState);
  }, [setStateImpl, v7_startTransition]);
  return React2.useLayoutEffect(() => history2.listen(setState), [history2, setState]), /* @__PURE__ */ React2.createElement(Router, {
    basename,
    children,
    location: state.location,
    navigationType: state.action,
    navigator: history2
  });
}
function HistoryRouter(_ref3) {
  let {
    basename,
    children,
    future: future2,
    history: history2
  } = _ref3, [state, setStateImpl] = React2.useState({
    action: history2.action,
    location: history2.location
  }), {
    v7_startTransition
  } = future2 || {}, setState = React2.useCallback((newState) => {
    v7_startTransition && startTransitionImpl2 ? startTransitionImpl2(() => setStateImpl(newState)) : setStateImpl(newState);
  }, [setStateImpl, v7_startTransition]);
  return React2.useLayoutEffect(() => history2.listen(setState), [history2, setState]), /* @__PURE__ */ React2.createElement(Router, {
    basename,
    children,
    location: state.location,
    navigationType: state.action,
    navigator: history2
  });
}
function ScrollRestoration(_ref7) {
  let {
    getKey,
    storageKey
  } = _ref7;
  return useScrollRestoration({
    getKey,
    storageKey
  }), null;
}
function getDataRouterConsoleError2(hookName) {
  return hookName + " must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.";
}
function useDataRouterContext2(hookName) {
  let ctx = React2.useContext(DataRouterContext);
  return ctx || invariant(!1, getDataRouterConsoleError2(hookName)), ctx;
}
function useDataRouterState2(hookName) {
  let state = React2.useContext(DataRouterStateContext);
  return state || invariant(!1, getDataRouterConsoleError2(hookName)), state;
}
function useLinkClickHandler(to, _temp) {
  let {
    target,
    replace: replaceProp,
    state,
    preventScrollReset,
    relative
  } = _temp === void 0 ? {} : _temp, navigate = useNavigate(), location = useLocation(), path = useResolvedPath(to, {
    relative
  });
  return React2.useCallback((event) => {
    if (shouldProcessLinkClick(event, target)) {
      event.preventDefault();
      let replace = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);
      navigate(to, {
        replace,
        state,
        preventScrollReset,
        relative
      });
    }
  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);
}
function useSearchParams(defaultInit) {
  warning(typeof URLSearchParams < "u", "You cannot use the `useSearchParams` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params\n\nIf you're unsure how to load polyfills, we recommend you check out https://polyfill.io/v3/ which provides some recommendations about how to load polyfills only for users that need them, instead of for every user.");
  let defaultSearchParamsRef = React2.useRef(createSearchParams(defaultInit)), hasSetSearchParamsRef = React2.useRef(!1), location = useLocation(), searchParams = React2.useMemo(() => (
    // Only merge in the defaults if we haven't yet called setSearchParams.
    // Once we call that we want those to take precedence, otherwise you can't
    // remove a param with setSearchParams({}) if it has an initial value
    getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current)
  ), [location.search]), navigate = useNavigate(), setSearchParams = React2.useCallback((nextInit, navigateOptions) => {
    let newSearchParams = createSearchParams(typeof nextInit == "function" ? nextInit(searchParams) : nextInit);
    hasSetSearchParamsRef.current = !0, navigate("?" + newSearchParams, navigateOptions);
  }, [navigate, searchParams]);
  return [searchParams, setSearchParams];
}
function validateClientSideSubmission() {
  if (typeof document > "u")
    throw new Error("You are calling submit during the server render. Try calling submit within a `useEffect` or callback instead.");
}
function useSubmit() {
  let {
    router
  } = useDataRouterContext2(DataRouterHook2.UseSubmit), {
    basename
  } = React2.useContext(NavigationContext), currentRouteId = useRouteId();
  return React2.useCallback(function(target, options) {
    options === void 0 && (options = {}), validateClientSideSubmission();
    let {
      action: action12,
      method,
      encType,
      formData,
      body
    } = getFormSubmissionInfo(target, basename);
    router.navigate(options.action || action12, {
      preventScrollReset: options.preventScrollReset,
      formData,
      body,
      formMethod: options.method || method,
      formEncType: options.encType || encType,
      replace: options.replace,
      state: options.state,
      fromRouteId: currentRouteId
    });
  }, [router, basename, currentRouteId]);
}
function useSubmitFetcher(fetcherKey, fetcherRouteId) {
  let {
    router
  } = useDataRouterContext2(DataRouterHook2.UseSubmitFetcher), {
    basename
  } = React2.useContext(NavigationContext);
  return React2.useCallback(function(target, options) {
    options === void 0 && (options = {}), validateClientSideSubmission();
    let {
      action: action12,
      method,
      encType,
      formData,
      body
    } = getFormSubmissionInfo(target, basename);
    fetcherRouteId == null && invariant(!1, "No routeId available for useFetcher()"), router.fetch(fetcherKey, fetcherRouteId, options.action || action12, {
      preventScrollReset: options.preventScrollReset,
      formData,
      body,
      formMethod: options.method || method,
      formEncType: options.encType || encType
    });
  }, [router, basename, fetcherKey, fetcherRouteId]);
}
function useFormAction(action12, _temp2) {
  let {
    relative
  } = _temp2 === void 0 ? {} : _temp2, {
    basename
  } = React2.useContext(NavigationContext), routeContext = React2.useContext(RouteContext);
  routeContext || invariant(!1, "useFormAction must be used inside a RouteContext");
  let [match] = routeContext.matches.slice(-1), path = _extends3({}, useResolvedPath(action12 || ".", {
    relative
  })), location = useLocation();
  if (action12 == null && (path.search = location.search, path.hash = location.hash, match.route.index)) {
    let params = new URLSearchParams(path.search);
    params.delete("index"), path.search = params.toString() ? "?" + params.toString() : "";
  }
  return (!action12 || action12 === ".") && match.route.index && (path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index"), basename !== "/" && (path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname])), createPath(path);
}
function createFetcherForm(fetcherKey, routeId) {
  let FetcherForm = /* @__PURE__ */ React2.forwardRef((props, ref) => {
    let submit = useSubmitFetcher(fetcherKey, routeId);
    return /* @__PURE__ */ React2.createElement(FormImpl, _extends3({}, props, {
      ref,
      submit
    }));
  });
  return FetcherForm.displayName = "fetcher.Form", FetcherForm;
}
function useFetcher() {
  var _route$matches;
  let {
    router
  } = useDataRouterContext2(DataRouterHook2.UseFetcher), route = React2.useContext(RouteContext);
  route || invariant(!1, "useFetcher must be used inside a RouteContext");
  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;
  routeId == null && invariant(!1, 'useFetcher can only be used on routes that contain a unique "id"');
  let [fetcherKey] = React2.useState(() => String(++fetcherId)), [Form2] = React2.useState(() => (routeId || invariant(!1, "No routeId available for fetcher.Form()"), createFetcherForm(fetcherKey, routeId))), [load] = React2.useState(() => (href) => {
    router || invariant(!1, "No router available for fetcher.load()"), routeId || invariant(!1, "No routeId available for fetcher.load()"), router.fetch(fetcherKey, routeId, href);
  }), submit = useSubmitFetcher(fetcherKey, routeId), fetcher = router.getFetcher(fetcherKey), fetcherWithComponents = React2.useMemo(() => _extends3({
    Form: Form2,
    submit,
    load
  }, fetcher), [fetcher, Form2, submit, load]);
  return React2.useEffect(() => () => {
    if (!router) {
      console.warn("No router available to clean up from useFetcher()");
      return;
    }
    router.deleteFetcher(fetcherKey);
  }, [router, fetcherKey]), fetcherWithComponents;
}
function useFetchers() {
  return [...useDataRouterState2(DataRouterStateHook2.UseFetchers).fetchers.values()];
}
function useScrollRestoration(_temp3) {
  let {
    getKey,
    storageKey
  } = _temp3 === void 0 ? {} : _temp3, {
    router
  } = useDataRouterContext2(DataRouterHook2.UseScrollRestoration), {
    restoreScrollPosition,
    preventScrollReset
  } = useDataRouterState2(DataRouterStateHook2.UseScrollRestoration), {
    basename
  } = React2.useContext(NavigationContext), location = useLocation(), matches = useMatches(), navigation = useNavigation();
  React2.useEffect(() => (window.history.scrollRestoration = "manual", () => {
    window.history.scrollRestoration = "auto";
  }), []), usePageHide(React2.useCallback(() => {
    if (navigation.state === "idle") {
      let key = (getKey ? getKey(location, matches) : null) || location.key;
      savedScrollPositions[key] = window.scrollY;
    }
    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions)), window.history.scrollRestoration = "auto";
  }, [storageKey, getKey, navigation.state, location, matches])), typeof document < "u" && (React2.useLayoutEffect(() => {
    try {
      let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);
      sessionPositions && (savedScrollPositions = JSON.parse(sessionPositions));
    } catch {
    }
  }, [storageKey]), React2.useLayoutEffect(() => {
    let getKeyWithoutBasename = getKey && basename !== "/" ? (location2, matches2) => getKey(
      // Strip the basename to match useLocation()
      _extends3({}, location2, {
        pathname: stripBasename(location2.pathname, basename) || location2.pathname
      }),
      matches2
    ) : getKey, disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);
    return () => disableScrollRestoration && disableScrollRestoration();
  }, [router, basename, getKey]), React2.useLayoutEffect(() => {
    if (restoreScrollPosition !== !1) {
      if (typeof restoreScrollPosition == "number") {
        window.scrollTo(0, restoreScrollPosition);
        return;
      }
      if (location.hash) {
        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));
        if (el) {
          el.scrollIntoView();
          return;
        }
      }
      preventScrollReset !== !0 && window.scrollTo(0, 0);
    }
  }, [location, restoreScrollPosition, preventScrollReset]));
}
function useBeforeUnload(callback, options) {
  let {
    capture
  } = options || {};
  React2.useEffect(() => {
    let opts = capture != null ? {
      capture
    } : void 0;
    return window.addEventListener("beforeunload", callback, opts), () => {
      window.removeEventListener("beforeunload", callback, opts);
    };
  }, [callback, capture]);
}
function usePageHide(callback, options) {
  let {
    capture
  } = options || {};
  React2.useEffect(() => {
    let opts = capture != null ? {
      capture
    } : void 0;
    return window.addEventListener("pagehide", callback, opts), () => {
      window.removeEventListener("pagehide", callback, opts);
    };
  }, [callback, capture]);
}
function usePrompt(_ref8) {
  let {
    when,
    message
  } = _ref8, blocker = useBlocker(when);
  React2.useEffect(() => {
    blocker.state === "blocked" && !when && blocker.reset();
  }, [blocker, when]), React2.useEffect(() => {
    blocker.state === "blocked" && (window.confirm(message) ? setTimeout(blocker.proceed, 0) : blocker.reset());
  }, [blocker, message]);
}
var React2, defaultMethod, defaultEncType, _formDataSupportsSubmitter, supportedFormEncTypes, _excluded, _excluded2, _excluded3, START_TRANSITION2, startTransitionImpl2, isBrowser, ABSOLUTE_URL_REGEX2, Link, NavLink, Form, FormImpl, DataRouterHook2, DataRouterStateHook2, fetcherId, SCROLL_RESTORATION_STORAGE_KEY, savedScrollPositions, init_dist2 = __esm({
  "node_modules/react-router-dom/dist/index.js"() {
    React2 = __toESM(require_react());
    init_dist();
    init_dist();
    init_router();
    defaultMethod = "get", defaultEncType = "application/x-www-form-urlencoded";
    _formDataSupportsSubmitter = null;
    supportedFormEncTypes = /* @__PURE__ */ new Set(["application/x-www-form-urlencoded", "multipart/form-data", "text/plain"]);
    _excluded = ["onClick", "relative", "reloadDocument", "replace", "state", "target", "to", "preventScrollReset"], _excluded2 = ["aria-current", "caseSensitive", "className", "end", "style", "to", "children"], _excluded3 = ["reloadDocument", "replace", "state", "method", "action", "onSubmit", "submit", "relative", "preventScrollReset"];
    START_TRANSITION2 = "startTransition", startTransitionImpl2 = React2[START_TRANSITION2];
    HistoryRouter.displayName = "unstable_HistoryRouter";
    isBrowser = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, Link = /* @__PURE__ */ React2.forwardRef(function(_ref4, ref) {
      let {
        onClick,
        relative,
        reloadDocument,
        replace,
        state,
        target,
        to,
        preventScrollReset
      } = _ref4, rest = _objectWithoutPropertiesLoose(_ref4, _excluded), {
        basename
      } = React2.useContext(NavigationContext), absoluteHref, isExternal = !1;
      if (typeof to == "string" && ABSOLUTE_URL_REGEX2.test(to) && (absoluteHref = to, isBrowser))
        try {
          let currentUrl = new URL(window.location.href), targetUrl = to.startsWith("//") ? new URL(currentUrl.protocol + to) : new URL(to), path = stripBasename(targetUrl.pathname, basename);
          targetUrl.origin === currentUrl.origin && path != null ? to = path + targetUrl.search + targetUrl.hash : isExternal = !0;
        } catch {
          warning(!1, '<Link to="' + to + '"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.');
        }
      let href = useHref(to, {
        relative
      }), internalOnClick = useLinkClickHandler(to, {
        replace,
        state,
        target,
        preventScrollReset,
        relative
      });
      function handleClick(event) {
        onClick && onClick(event), event.defaultPrevented || internalOnClick(event);
      }
      return (
        // eslint-disable-next-line jsx-a11y/anchor-has-content
        /* @__PURE__ */ React2.createElement("a", _extends3({}, rest, {
          href: absoluteHref || href,
          onClick: isExternal || reloadDocument ? onClick : handleClick,
          ref,
          target
        }))
      );
    });
    Link.displayName = "Link";
    NavLink = /* @__PURE__ */ React2.forwardRef(function(_ref5, ref) {
      let {
        "aria-current": ariaCurrentProp = "page",
        caseSensitive = !1,
        className: classNameProp = "",
        end = !1,
        style: styleProp,
        to,
        children
      } = _ref5, rest = _objectWithoutPropertiesLoose(_ref5, _excluded2), path = useResolvedPath(to, {
        relative: rest.relative
      }), location = useLocation(), routerState = React2.useContext(DataRouterStateContext), {
        navigator: navigator2
      } = React2.useContext(NavigationContext), toPathname = navigator2.encodeLocation ? navigator2.encodeLocation(path).pathname : path.pathname, locationPathname = location.pathname, nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;
      caseSensitive || (locationPathname = locationPathname.toLowerCase(), nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null, toPathname = toPathname.toLowerCase());
      let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === "/", isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === "/"), ariaCurrent = isActive ? ariaCurrentProp : void 0, className;
      typeof classNameProp == "function" ? className = classNameProp({
        isActive,
        isPending
      }) : className = [classNameProp, isActive ? "active" : null, isPending ? "pending" : null].filter(Boolean).join(" ");
      let style2 = typeof styleProp == "function" ? styleProp({
        isActive,
        isPending
      }) : styleProp;
      return /* @__PURE__ */ React2.createElement(Link, _extends3({}, rest, {
        "aria-current": ariaCurrent,
        className,
        ref,
        style: style2,
        to
      }), typeof children == "function" ? children({
        isActive,
        isPending
      }) : children);
    });
    NavLink.displayName = "NavLink";
    Form = /* @__PURE__ */ React2.forwardRef((props, ref) => {
      let submit = useSubmit();
      return /* @__PURE__ */ React2.createElement(FormImpl, _extends3({}, props, {
        submit,
        ref
      }));
    });
    Form.displayName = "Form";
    FormImpl = /* @__PURE__ */ React2.forwardRef((_ref6, forwardedRef) => {
      let {
        reloadDocument,
        replace,
        state,
        method = defaultMethod,
        action: action12,
        onSubmit,
        submit,
        relative,
        preventScrollReset
      } = _ref6, props = _objectWithoutPropertiesLoose(_ref6, _excluded3), formMethod = method.toLowerCase() === "get" ? "get" : "post", formAction = useFormAction(action12, {
        relative
      });
      return /* @__PURE__ */ React2.createElement("form", _extends3({
        ref: forwardedRef,
        method: formMethod,
        action: formAction,
        onSubmit: reloadDocument ? onSubmit : (event) => {
          if (onSubmit && onSubmit(event), event.defaultPrevented)
            return;
          event.preventDefault();
          let submitter = event.nativeEvent.submitter, submitMethod = (submitter == null ? void 0 : submitter.getAttribute("formmethod")) || method;
          submit(submitter || event.currentTarget, {
            method: submitMethod,
            replace,
            state,
            relative,
            preventScrollReset
          });
        }
      }, props));
    });
    FormImpl.displayName = "FormImpl";
    ScrollRestoration.displayName = "ScrollRestoration";
    (function(DataRouterHook3) {
      DataRouterHook3.UseScrollRestoration = "useScrollRestoration", DataRouterHook3.UseSubmit = "useSubmit", DataRouterHook3.UseSubmitFetcher = "useSubmitFetcher", DataRouterHook3.UseFetcher = "useFetcher";
    })(DataRouterHook2 || (DataRouterHook2 = {}));
    (function(DataRouterStateHook3) {
      DataRouterStateHook3.UseFetchers = "useFetchers", DataRouterStateHook3.UseScrollRestoration = "useScrollRestoration";
    })(DataRouterStateHook2 || (DataRouterStateHook2 = {}));
    fetcherId = 0;
    SCROLL_RESTORATION_STORAGE_KEY = "react-router-scroll-positions", savedScrollPositions = {};
  }
});

// node_modules/react-router-dom/server.js
var require_server = __commonJS({
  "node_modules/react-router-dom/server.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var React26 = require_react(), router = (init_router(), __toCommonJS(router_exports)), reactRouter = (init_dist(), __toCommonJS(dist_exports)), reactRouterDom = (init_dist2(), __toCommonJS(dist_exports2));
    function _interopNamespace(e5) {
      if (e5 && e5.__esModule)
        return e5;
      var n7 = /* @__PURE__ */ Object.create(null);
      return e5 && Object.keys(e5).forEach(function(k2) {
        if (k2 !== "default") {
          var d12 = Object.getOwnPropertyDescriptor(e5, k2);
          Object.defineProperty(n7, k2, d12.get ? d12 : {
            enumerable: !0,
            get: function() {
              return e5[k2];
            }
          });
        }
      }), n7.default = e5, Object.freeze(n7);
    }
    var React__namespace = /* @__PURE__ */ _interopNamespace(React26);
    function StaticRouter({
      basename,
      children,
      location: locationProp = "/"
    }) {
      typeof locationProp == "string" && (locationProp = reactRouterDom.parsePath(locationProp));
      let action12 = router.Action.Pop, location = {
        pathname: locationProp.pathname || "/",
        search: locationProp.search || "",
        hash: locationProp.hash || "",
        state: locationProp.state || null,
        key: locationProp.key || "default"
      }, staticNavigator = getStatelessNavigator();
      return /* @__PURE__ */ React__namespace.createElement(reactRouterDom.Router, {
        basename,
        children,
        location,
        navigationType: action12,
        navigator: staticNavigator,
        static: !0
      });
    }
    function StaticRouterProvider2({
      context,
      router: router$1,
      hydrate = !0,
      nonce
    }) {
      router$1 && context || router.UNSAFE_invariant(!1, "You must provide `router` and `context` to <StaticRouterProvider>");
      let dataRouterContext = {
        router: router$1,
        navigator: getStatelessNavigator(),
        static: !0,
        staticContext: context,
        basename: context.basename || "/"
      }, hydrateScript = "";
      if (hydrate !== !1) {
        let data2 = {
          loaderData: context.loaderData,
          actionData: context.actionData,
          errors: serializeErrors2(context.errors)
        };
        hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${htmlEscape(JSON.stringify(JSON.stringify(data2)))});`;
      }
      let {
        state
      } = dataRouterContext.router;
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.UNSAFE_DataRouterContext.Provider, {
        value: dataRouterContext
      }, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.UNSAFE_DataRouterStateContext.Provider, {
        value: state
      }, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.Router, {
        basename: dataRouterContext.basename,
        location: state.location,
        navigationType: state.historyAction,
        navigator: dataRouterContext.navigator,
        static: dataRouterContext.static
      }, /* @__PURE__ */ React__namespace.createElement(DataRoutes2, {
        routes: router$1.routes,
        state
      })))), hydrateScript ? /* @__PURE__ */ React__namespace.createElement("script", {
        suppressHydrationWarning: !0,
        nonce,
        dangerouslySetInnerHTML: {
          __html: hydrateScript
        }
      }) : null);
    }
    function DataRoutes2({
      routes: routes2,
      state
    }) {
      return reactRouter.UNSAFE_useRoutesImpl(routes2, void 0, state);
    }
    function serializeErrors2(errors) {
      if (!errors)
        return null;
      let entries = Object.entries(errors), serialized = {};
      for (let [key, val] of entries)
        router.isRouteErrorResponse(val) ? serialized[key] = {
          ...val,
          __type: "RouteErrorResponse"
        } : val instanceof Error ? serialized[key] = {
          message: val.message,
          __type: "Error",
          // If this is a subclass (i.e., ReferenceError), send up the type so we
          // can re-create the same type during hydration.
          ...val.name !== "Error" ? {
            __subType: val.name
          } : {}
        } : serialized[key] = val;
      return serialized;
    }
    function getStatelessNavigator() {
      return {
        createHref,
        encodeLocation,
        push(to) {
          throw new Error(`You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${JSON.stringify(to)})\` somewhere in your app.`);
        },
        replace(to) {
          throw new Error(`You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${JSON.stringify(to)}, { replace: true })\` somewhere in your app.`);
        },
        go(delta) {
          throw new Error(`You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${delta})\` somewhere in your app.`);
        },
        back() {
          throw new Error("You cannot use navigator.back() on the server because it is a stateless environment.");
        },
        forward() {
          throw new Error("You cannot use navigator.forward() on the server because it is a stateless environment.");
        }
      };
    }
    function createStaticHandler2(routes2, opts) {
      return router.createStaticHandler(routes2, {
        ...opts,
        mapRouteProperties: reactRouter.UNSAFE_mapRouteProperties
      });
    }
    function createStaticRouter2(routes2, context) {
      let manifest = {}, dataRoutes = router.UNSAFE_convertRoutesToDataRoutes(routes2, reactRouter.UNSAFE_mapRouteProperties, void 0, manifest), matches = context.matches.map((match) => {
        let route = manifest[match.route.id] || match.route;
        return {
          ...match,
          route
        };
      }), msg = (method) => `You cannot use router.${method}() on the server because it is a stateless environment`;
      return {
        get basename() {
          return context.basename;
        },
        get state() {
          return {
            historyAction: router.Action.Pop,
            location: context.location,
            matches,
            loaderData: context.loaderData,
            actionData: context.actionData,
            errors: context.errors,
            initialized: !0,
            navigation: router.IDLE_NAVIGATION,
            restoreScrollPosition: null,
            preventScrollReset: !1,
            revalidation: "idle",
            fetchers: /* @__PURE__ */ new Map(),
            blockers: /* @__PURE__ */ new Map()
          };
        },
        get routes() {
          return dataRoutes;
        },
        initialize() {
          throw msg("initialize");
        },
        subscribe() {
          throw msg("subscribe");
        },
        enableScrollRestoration() {
          throw msg("enableScrollRestoration");
        },
        navigate() {
          throw msg("navigate");
        },
        fetch() {
          throw msg("fetch");
        },
        revalidate() {
          throw msg("revalidate");
        },
        createHref,
        encodeLocation,
        getFetcher() {
          return router.IDLE_FETCHER;
        },
        deleteFetcher() {
          throw msg("deleteFetcher");
        },
        dispose() {
          throw msg("dispose");
        },
        getBlocker() {
          return router.IDLE_BLOCKER;
        },
        deleteBlocker() {
          throw msg("deleteBlocker");
        },
        _internalFetchControllers: /* @__PURE__ */ new Map(),
        _internalActiveDeferreds: /* @__PURE__ */ new Map(),
        _internalSetRoutes() {
          throw msg("_internalSetRoutes");
        }
      };
    }
    function createHref(to) {
      return typeof to == "string" ? to : reactRouterDom.createPath(to);
    }
    function encodeLocation(to) {
      let path = typeof to == "string" ? reactRouterDom.parsePath(to) : to;
      return {
        pathname: path.pathname || "",
        search: path.search || "",
        hash: path.hash || ""
      };
    }
    var ESCAPE_LOOKUP3 = {
      "&": "\\u0026",
      ">": "\\u003e",
      "<": "\\u003c",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    }, ESCAPE_REGEX3 = /[&><\u2028\u2029]/g;
    function htmlEscape(str) {
      return str.replace(ESCAPE_REGEX3, (match) => ESCAPE_LOOKUP3[match]);
    }
    exports.StaticRouter = StaticRouter;
    exports.StaticRouterProvider = StaticRouterProvider2;
    exports.createStaticHandler = createStaticHandler2;
    exports.createStaticRouter = createStaticRouter2;
  }
});

// node_modules/react-dom/cjs/react-dom-server-legacy.browser.development.js
var require_react_dom_server_legacy_browser_development = __commonJS({
  "node_modules/react-dom/cjs/react-dom-server-legacy.browser.development.js"(exports) {
    "use strict";
    (function() {
      "use strict";
      var React26 = require_react(), ReactVersion = "18.2.0", ReactSharedInternals = React26.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
      function warn(format) {
        {
          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)
            args[_key - 1] = arguments[_key];
          printWarning("warn", format, args);
        }
      }
      function error(format) {
        {
          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)
            args[_key2 - 1] = arguments[_key2];
          printWarning("error", format, args);
        }
      }
      function printWarning(level, format, args) {
        {
          var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame, stack = ReactDebugCurrentFrame2.getStackAddendum();
          stack !== "" && (format += "%s", args = args.concat([stack]));
          var argsWithFormat = args.map(function(item) {
            return String(item);
          });
          argsWithFormat.unshift("Warning: " + format), Function.prototype.apply.call(console[level], console, argsWithFormat);
        }
      }
      function scheduleWork(callback) {
        callback();
      }
      function beginWriting(destination) {
      }
      function writeChunk(destination, chunk) {
        writeChunkAndReturn(destination, chunk);
      }
      function writeChunkAndReturn(destination, chunk) {
        return destination.push(chunk);
      }
      function completeWriting(destination) {
      }
      function close(destination) {
        destination.push(null);
      }
      function stringToChunk(content) {
        return content;
      }
      function stringToPrecomputedChunk(content) {
        return content;
      }
      function closeWithError(destination, error2) {
        destination.destroy(error2);
      }
      function typeName(value) {
        {
          var hasToStringTag = typeof Symbol == "function" && Symbol.toStringTag, type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
          return type;
        }
      }
      function willCoercionThrow(value) {
        try {
          return testStringCoercion(value), !1;
        } catch {
          return !0;
        }
      }
      function testStringCoercion(value) {
        return "" + value;
      }
      function checkAttributeStringCoercion(value, attributeName) {
        if (willCoercionThrow(value))
          return error("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", attributeName, typeName(value)), testStringCoercion(value);
      }
      function checkCSSPropertyStringCoercion(value, propName) {
        if (willCoercionThrow(value))
          return error("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value)), testStringCoercion(value);
      }
      function checkHtmlStringCoercion(value) {
        if (willCoercionThrow(value))
          return error("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value)), testStringCoercion(value);
      }
      var hasOwnProperty = Object.prototype.hasOwnProperty, RESERVED = 0, STRING = 1, BOOLEANISH_STRING = 2, BOOLEAN = 3, OVERLOADED_BOOLEAN = 4, NUMERIC = 5, POSITIVE_NUMERIC = 6, ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD", ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040", VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$"), illegalAttributeNameCache = {}, validatedAttributeNameCache = {};
      function isAttributeNameSafe(attributeName) {
        return hasOwnProperty.call(validatedAttributeNameCache, attributeName) ? !0 : hasOwnProperty.call(illegalAttributeNameCache, attributeName) ? !1 : VALID_ATTRIBUTE_NAME_REGEX.test(attributeName) ? (validatedAttributeNameCache[attributeName] = !0, !0) : (illegalAttributeNameCache[attributeName] = !0, error("Invalid attribute name: `%s`", attributeName), !1);
      }
      function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
        if (propertyInfo !== null && propertyInfo.type === RESERVED)
          return !1;
        switch (typeof value) {
          case "function":
          case "symbol":
            return !0;
          case "boolean": {
            if (isCustomComponentTag)
              return !1;
            if (propertyInfo !== null)
              return !propertyInfo.acceptsBooleans;
            var prefix2 = name.toLowerCase().slice(0, 5);
            return prefix2 !== "data-" && prefix2 !== "aria-";
          }
          default:
            return !1;
        }
      }
      function getPropertyInfo(name) {
        return properties.hasOwnProperty(name) ? properties[name] : null;
      }
      function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL2, removeEmptyString) {
        this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN, this.attributeName = attributeName, this.attributeNamespace = attributeNamespace, this.mustUseProperty = mustUseProperty, this.propertyName = name, this.type = type, this.sanitizeURL = sanitizeURL2, this.removeEmptyString = removeEmptyString;
      }
      var properties = {}, reservedProps = [
        "children",
        "dangerouslySetInnerHTML",
        // TODO: This prevents the assignment of defaultValue to regular
        // elements (not just inputs). Now that ReactDOMInput assigns to the
        // defaultValue property -- do we need this?
        "defaultValue",
        "defaultChecked",
        "innerHTML",
        "suppressContentEditableWarning",
        "suppressHydrationWarning",
        "style"
      ];
      reservedProps.forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          RESERVED,
          !1,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(_ref) {
        var name = _ref[0], attributeName = _ref[1];
        properties[name] = new PropertyInfoRecord(
          name,
          STRING,
          !1,
          // mustUseProperty
          attributeName,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          BOOLEANISH_STRING,
          !1,
          // mustUseProperty
          name.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          BOOLEANISH_STRING,
          !1,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "allowFullScreen",
        "async",
        // Note: there is a special case that prevents it from being written to the DOM
        // on the client side because the browsers are inconsistent. Instead we call focus().
        "autoFocus",
        "autoPlay",
        "controls",
        "default",
        "defer",
        "disabled",
        "disablePictureInPicture",
        "disableRemotePlayback",
        "formNoValidate",
        "hidden",
        "loop",
        "noModule",
        "noValidate",
        "open",
        "playsInline",
        "readOnly",
        "required",
        "reversed",
        "scoped",
        "seamless",
        // Microdata
        "itemScope"
      ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          BOOLEAN,
          !1,
          // mustUseProperty
          name.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "checked",
        // Note: `option.selected` is not updated if `select.multiple` is
        // disabled with `removeAttribute`. We have special logic for handling this.
        "multiple",
        "muted",
        "selected"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          BOOLEAN,
          !0,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "capture",
        "download"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          OVERLOADED_BOOLEAN,
          !1,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "cols",
        "rows",
        "size",
        "span"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          POSITIVE_NUMERIC,
          !1,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), ["rowSpan", "start"].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          NUMERIC,
          !1,
          // mustUseProperty
          name.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      });
      var CAMELIZE = /[\-\:]([a-z])/g, capitalize = function(token) {
        return token[1].toUpperCase();
      };
      [
        "accent-height",
        "alignment-baseline",
        "arabic-form",
        "baseline-shift",
        "cap-height",
        "clip-path",
        "clip-rule",
        "color-interpolation",
        "color-interpolation-filters",
        "color-profile",
        "color-rendering",
        "dominant-baseline",
        "enable-background",
        "fill-opacity",
        "fill-rule",
        "flood-color",
        "flood-opacity",
        "font-family",
        "font-size",
        "font-size-adjust",
        "font-stretch",
        "font-style",
        "font-variant",
        "font-weight",
        "glyph-name",
        "glyph-orientation-horizontal",
        "glyph-orientation-vertical",
        "horiz-adv-x",
        "horiz-origin-x",
        "image-rendering",
        "letter-spacing",
        "lighting-color",
        "marker-end",
        "marker-mid",
        "marker-start",
        "overline-position",
        "overline-thickness",
        "paint-order",
        "panose-1",
        "pointer-events",
        "rendering-intent",
        "shape-rendering",
        "stop-color",
        "stop-opacity",
        "strikethrough-position",
        "strikethrough-thickness",
        "stroke-dasharray",
        "stroke-dashoffset",
        "stroke-linecap",
        "stroke-linejoin",
        "stroke-miterlimit",
        "stroke-opacity",
        "stroke-width",
        "text-anchor",
        "text-decoration",
        "text-rendering",
        "underline-position",
        "underline-thickness",
        "unicode-bidi",
        "unicode-range",
        "units-per-em",
        "v-alphabetic",
        "v-hanging",
        "v-ideographic",
        "v-mathematical",
        "vector-effect",
        "vert-adv-y",
        "vert-origin-x",
        "vert-origin-y",
        "word-spacing",
        "writing-mode",
        "xmlns:xlink",
        "x-height"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(
          name,
          STRING,
          !1,
          // mustUseProperty
          attributeName,
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "xlink:actuate",
        "xlink:arcrole",
        "xlink:role",
        "xlink:show",
        "xlink:title",
        "xlink:type"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(
          name,
          STRING,
          !1,
          // mustUseProperty
          attributeName,
          "http://www.w3.org/1999/xlink",
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "xml:base",
        "xml:lang",
        "xml:space"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(
          name,
          STRING,
          !1,
          // mustUseProperty
          attributeName,
          "http://www.w3.org/XML/1998/namespace",
          !1,
          // sanitizeURL
          !1
        );
      }), ["tabIndex", "crossOrigin"].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(
          attributeName,
          STRING,
          !1,
          // mustUseProperty
          attributeName.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      });
      var xlinkHref = "xlinkHref";
      properties[xlinkHref] = new PropertyInfoRecord(
        "xlinkHref",
        STRING,
        !1,
        // mustUseProperty
        "xlink:href",
        "http://www.w3.org/1999/xlink",
        !0,
        // sanitizeURL
        !1
      ), ["src", "href", "action", "formAction"].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(
          attributeName,
          STRING,
          !1,
          // mustUseProperty
          attributeName.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !0,
          // sanitizeURL
          !0
        );
      });
      var isUnitlessNumber = {
        animationIterationCount: !0,
        aspectRatio: !0,
        borderImageOutset: !0,
        borderImageSlice: !0,
        borderImageWidth: !0,
        boxFlex: !0,
        boxFlexGroup: !0,
        boxOrdinalGroup: !0,
        columnCount: !0,
        columns: !0,
        flex: !0,
        flexGrow: !0,
        flexPositive: !0,
        flexShrink: !0,
        flexNegative: !0,
        flexOrder: !0,
        gridArea: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowSpan: !0,
        gridRowStart: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnSpan: !0,
        gridColumnStart: !0,
        fontWeight: !0,
        lineClamp: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        tabSize: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        // SVG-related properties
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeDasharray: !0,
        strokeDashoffset: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0,
        strokeWidth: !0
      };
      function prefixKey(prefix2, key) {
        return prefix2 + key.charAt(0).toUpperCase() + key.substring(1);
      }
      var prefixes = ["Webkit", "ms", "Moz", "O"];
      Object.keys(isUnitlessNumber).forEach(function(prop) {
        prefixes.forEach(function(prefix2) {
          isUnitlessNumber[prefixKey(prefix2, prop)] = isUnitlessNumber[prop];
        });
      });
      var hasReadOnlyValue = {
        button: !0,
        checkbox: !0,
        image: !0,
        hidden: !0,
        radio: !0,
        reset: !0,
        submit: !0
      };
      function checkControlledValueProps(tagName, props) {
        hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null || error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`."), props.onChange || props.readOnly || props.disabled || props.checked == null || error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
      }
      function isCustomComponent(tagName, props) {
        if (tagName.indexOf("-") === -1)
          return typeof props.is == "string";
        switch (tagName) {
          case "annotation-xml":
          case "color-profile":
          case "font-face":
          case "font-face-src":
          case "font-face-uri":
          case "font-face-format":
          case "font-face-name":
          case "missing-glyph":
            return !1;
          default:
            return !0;
        }
      }
      var ariaProperties = {
        "aria-current": 0,
        // state
        "aria-description": 0,
        "aria-details": 0,
        "aria-disabled": 0,
        // state
        "aria-hidden": 0,
        // state
        "aria-invalid": 0,
        // state
        "aria-keyshortcuts": 0,
        "aria-label": 0,
        "aria-roledescription": 0,
        // Widget Attributes
        "aria-autocomplete": 0,
        "aria-checked": 0,
        "aria-expanded": 0,
        "aria-haspopup": 0,
        "aria-level": 0,
        "aria-modal": 0,
        "aria-multiline": 0,
        "aria-multiselectable": 0,
        "aria-orientation": 0,
        "aria-placeholder": 0,
        "aria-pressed": 0,
        "aria-readonly": 0,
        "aria-required": 0,
        "aria-selected": 0,
        "aria-sort": 0,
        "aria-valuemax": 0,
        "aria-valuemin": 0,
        "aria-valuenow": 0,
        "aria-valuetext": 0,
        // Live Region Attributes
        "aria-atomic": 0,
        "aria-busy": 0,
        "aria-live": 0,
        "aria-relevant": 0,
        // Drag-and-Drop Attributes
        "aria-dropeffect": 0,
        "aria-grabbed": 0,
        // Relationship Attributes
        "aria-activedescendant": 0,
        "aria-colcount": 0,
        "aria-colindex": 0,
        "aria-colspan": 0,
        "aria-controls": 0,
        "aria-describedby": 0,
        "aria-errormessage": 0,
        "aria-flowto": 0,
        "aria-labelledby": 0,
        "aria-owns": 0,
        "aria-posinset": 0,
        "aria-rowcount": 0,
        "aria-rowindex": 0,
        "aria-rowspan": 0,
        "aria-setsize": 0
      }, warnedProperties = {}, rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$"), rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
      function validateProperty(tagName, name) {
        {
          if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name])
            return !0;
          if (rARIACamel.test(name)) {
            var ariaName = "aria-" + name.slice(4).toLowerCase(), correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;
            if (correctName == null)
              return error("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name), warnedProperties[name] = !0, !0;
            if (name !== correctName)
              return error("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, correctName), warnedProperties[name] = !0, !0;
          }
          if (rARIA.test(name)) {
            var lowerCasedName = name.toLowerCase(), standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;
            if (standardName == null)
              return warnedProperties[name] = !0, !1;
            if (name !== standardName)
              return error("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, standardName), warnedProperties[name] = !0, !0;
          }
        }
        return !0;
      }
      function warnInvalidARIAProps(type, props) {
        {
          var invalidProps = [];
          for (var key in props) {
            var isValid = validateProperty(type, key);
            isValid || invalidProps.push(key);
          }
          var unknownPropString = invalidProps.map(function(prop) {
            return "`" + prop + "`";
          }).join(", ");
          invalidProps.length === 1 ? error("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type) : invalidProps.length > 1 && error("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
        }
      }
      function validateProperties(type, props) {
        isCustomComponent(type, props) || warnInvalidARIAProps(type, props);
      }
      var didWarnValueNull = !1;
      function validateProperties$1(type, props) {
        {
          if (type !== "input" && type !== "textarea" && type !== "select")
            return;
          props != null && props.value === null && !didWarnValueNull && (didWarnValueNull = !0, type === "select" && props.multiple ? error("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type) : error("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type));
        }
      }
      var possibleStandardNames = {
        // HTML
        accept: "accept",
        acceptcharset: "acceptCharset",
        "accept-charset": "acceptCharset",
        accesskey: "accessKey",
        action: "action",
        allowfullscreen: "allowFullScreen",
        alt: "alt",
        as: "as",
        async: "async",
        autocapitalize: "autoCapitalize",
        autocomplete: "autoComplete",
        autocorrect: "autoCorrect",
        autofocus: "autoFocus",
        autoplay: "autoPlay",
        autosave: "autoSave",
        capture: "capture",
        cellpadding: "cellPadding",
        cellspacing: "cellSpacing",
        challenge: "challenge",
        charset: "charSet",
        checked: "checked",
        children: "children",
        cite: "cite",
        class: "className",
        classid: "classID",
        classname: "className",
        cols: "cols",
        colspan: "colSpan",
        content: "content",
        contenteditable: "contentEditable",
        contextmenu: "contextMenu",
        controls: "controls",
        controlslist: "controlsList",
        coords: "coords",
        crossorigin: "crossOrigin",
        dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
        data: "data",
        datetime: "dateTime",
        default: "default",
        defaultchecked: "defaultChecked",
        defaultvalue: "defaultValue",
        defer: "defer",
        dir: "dir",
        disabled: "disabled",
        disablepictureinpicture: "disablePictureInPicture",
        disableremoteplayback: "disableRemotePlayback",
        download: "download",
        draggable: "draggable",
        enctype: "encType",
        enterkeyhint: "enterKeyHint",
        for: "htmlFor",
        form: "form",
        formmethod: "formMethod",
        formaction: "formAction",
        formenctype: "formEncType",
        formnovalidate: "formNoValidate",
        formtarget: "formTarget",
        frameborder: "frameBorder",
        headers: "headers",
        height: "height",
        hidden: "hidden",
        high: "high",
        href: "href",
        hreflang: "hrefLang",
        htmlfor: "htmlFor",
        httpequiv: "httpEquiv",
        "http-equiv": "httpEquiv",
        icon: "icon",
        id: "id",
        imagesizes: "imageSizes",
        imagesrcset: "imageSrcSet",
        innerhtml: "innerHTML",
        inputmode: "inputMode",
        integrity: "integrity",
        is: "is",
        itemid: "itemID",
        itemprop: "itemProp",
        itemref: "itemRef",
        itemscope: "itemScope",
        itemtype: "itemType",
        keyparams: "keyParams",
        keytype: "keyType",
        kind: "kind",
        label: "label",
        lang: "lang",
        list: "list",
        loop: "loop",
        low: "low",
        manifest: "manifest",
        marginwidth: "marginWidth",
        marginheight: "marginHeight",
        max: "max",
        maxlength: "maxLength",
        media: "media",
        mediagroup: "mediaGroup",
        method: "method",
        min: "min",
        minlength: "minLength",
        multiple: "multiple",
        muted: "muted",
        name: "name",
        nomodule: "noModule",
        nonce: "nonce",
        novalidate: "noValidate",
        open: "open",
        optimum: "optimum",
        pattern: "pattern",
        placeholder: "placeholder",
        playsinline: "playsInline",
        poster: "poster",
        preload: "preload",
        profile: "profile",
        radiogroup: "radioGroup",
        readonly: "readOnly",
        referrerpolicy: "referrerPolicy",
        rel: "rel",
        required: "required",
        reversed: "reversed",
        role: "role",
        rows: "rows",
        rowspan: "rowSpan",
        sandbox: "sandbox",
        scope: "scope",
        scoped: "scoped",
        scrolling: "scrolling",
        seamless: "seamless",
        selected: "selected",
        shape: "shape",
        size: "size",
        sizes: "sizes",
        span: "span",
        spellcheck: "spellCheck",
        src: "src",
        srcdoc: "srcDoc",
        srclang: "srcLang",
        srcset: "srcSet",
        start: "start",
        step: "step",
        style: "style",
        summary: "summary",
        tabindex: "tabIndex",
        target: "target",
        title: "title",
        type: "type",
        usemap: "useMap",
        value: "value",
        width: "width",
        wmode: "wmode",
        wrap: "wrap",
        // SVG
        about: "about",
        accentheight: "accentHeight",
        "accent-height": "accentHeight",
        accumulate: "accumulate",
        additive: "additive",
        alignmentbaseline: "alignmentBaseline",
        "alignment-baseline": "alignmentBaseline",
        allowreorder: "allowReorder",
        alphabetic: "alphabetic",
        amplitude: "amplitude",
        arabicform: "arabicForm",
        "arabic-form": "arabicForm",
        ascent: "ascent",
        attributename: "attributeName",
        attributetype: "attributeType",
        autoreverse: "autoReverse",
        azimuth: "azimuth",
        basefrequency: "baseFrequency",
        baselineshift: "baselineShift",
        "baseline-shift": "baselineShift",
        baseprofile: "baseProfile",
        bbox: "bbox",
        begin: "begin",
        bias: "bias",
        by: "by",
        calcmode: "calcMode",
        capheight: "capHeight",
        "cap-height": "capHeight",
        clip: "clip",
        clippath: "clipPath",
        "clip-path": "clipPath",
        clippathunits: "clipPathUnits",
        cliprule: "clipRule",
        "clip-rule": "clipRule",
        color: "color",
        colorinterpolation: "colorInterpolation",
        "color-interpolation": "colorInterpolation",
        colorinterpolationfilters: "colorInterpolationFilters",
        "color-interpolation-filters": "colorInterpolationFilters",
        colorprofile: "colorProfile",
        "color-profile": "colorProfile",
        colorrendering: "colorRendering",
        "color-rendering": "colorRendering",
        contentscripttype: "contentScriptType",
        contentstyletype: "contentStyleType",
        cursor: "cursor",
        cx: "cx",
        cy: "cy",
        d: "d",
        datatype: "datatype",
        decelerate: "decelerate",
        descent: "descent",
        diffuseconstant: "diffuseConstant",
        direction: "direction",
        display: "display",
        divisor: "divisor",
        dominantbaseline: "dominantBaseline",
        "dominant-baseline": "dominantBaseline",
        dur: "dur",
        dx: "dx",
        dy: "dy",
        edgemode: "edgeMode",
        elevation: "elevation",
        enablebackground: "enableBackground",
        "enable-background": "enableBackground",
        end: "end",
        exponent: "exponent",
        externalresourcesrequired: "externalResourcesRequired",
        fill: "fill",
        fillopacity: "fillOpacity",
        "fill-opacity": "fillOpacity",
        fillrule: "fillRule",
        "fill-rule": "fillRule",
        filter: "filter",
        filterres: "filterRes",
        filterunits: "filterUnits",
        floodopacity: "floodOpacity",
        "flood-opacity": "floodOpacity",
        floodcolor: "floodColor",
        "flood-color": "floodColor",
        focusable: "focusable",
        fontfamily: "fontFamily",
        "font-family": "fontFamily",
        fontsize: "fontSize",
        "font-size": "fontSize",
        fontsizeadjust: "fontSizeAdjust",
        "font-size-adjust": "fontSizeAdjust",
        fontstretch: "fontStretch",
        "font-stretch": "fontStretch",
        fontstyle: "fontStyle",
        "font-style": "fontStyle",
        fontvariant: "fontVariant",
        "font-variant": "fontVariant",
        fontweight: "fontWeight",
        "font-weight": "fontWeight",
        format: "format",
        from: "from",
        fx: "fx",
        fy: "fy",
        g1: "g1",
        g2: "g2",
        glyphname: "glyphName",
        "glyph-name": "glyphName",
        glyphorientationhorizontal: "glyphOrientationHorizontal",
        "glyph-orientation-horizontal": "glyphOrientationHorizontal",
        glyphorientationvertical: "glyphOrientationVertical",
        "glyph-orientation-vertical": "glyphOrientationVertical",
        glyphref: "glyphRef",
        gradienttransform: "gradientTransform",
        gradientunits: "gradientUnits",
        hanging: "hanging",
        horizadvx: "horizAdvX",
        "horiz-adv-x": "horizAdvX",
        horizoriginx: "horizOriginX",
        "horiz-origin-x": "horizOriginX",
        ideographic: "ideographic",
        imagerendering: "imageRendering",
        "image-rendering": "imageRendering",
        in2: "in2",
        in: "in",
        inlist: "inlist",
        intercept: "intercept",
        k1: "k1",
        k2: "k2",
        k3: "k3",
        k4: "k4",
        k: "k",
        kernelmatrix: "kernelMatrix",
        kernelunitlength: "kernelUnitLength",
        kerning: "kerning",
        keypoints: "keyPoints",
        keysplines: "keySplines",
        keytimes: "keyTimes",
        lengthadjust: "lengthAdjust",
        letterspacing: "letterSpacing",
        "letter-spacing": "letterSpacing",
        lightingcolor: "lightingColor",
        "lighting-color": "lightingColor",
        limitingconeangle: "limitingConeAngle",
        local: "local",
        markerend: "markerEnd",
        "marker-end": "markerEnd",
        markerheight: "markerHeight",
        markermid: "markerMid",
        "marker-mid": "markerMid",
        markerstart: "markerStart",
        "marker-start": "markerStart",
        markerunits: "markerUnits",
        markerwidth: "markerWidth",
        mask: "mask",
        maskcontentunits: "maskContentUnits",
        maskunits: "maskUnits",
        mathematical: "mathematical",
        mode: "mode",
        numoctaves: "numOctaves",
        offset: "offset",
        opacity: "opacity",
        operator: "operator",
        order: "order",
        orient: "orient",
        orientation: "orientation",
        origin: "origin",
        overflow: "overflow",
        overlineposition: "overlinePosition",
        "overline-position": "overlinePosition",
        overlinethickness: "overlineThickness",
        "overline-thickness": "overlineThickness",
        paintorder: "paintOrder",
        "paint-order": "paintOrder",
        panose1: "panose1",
        "panose-1": "panose1",
        pathlength: "pathLength",
        patterncontentunits: "patternContentUnits",
        patterntransform: "patternTransform",
        patternunits: "patternUnits",
        pointerevents: "pointerEvents",
        "pointer-events": "pointerEvents",
        points: "points",
        pointsatx: "pointsAtX",
        pointsaty: "pointsAtY",
        pointsatz: "pointsAtZ",
        prefix: "prefix",
        preservealpha: "preserveAlpha",
        preserveaspectratio: "preserveAspectRatio",
        primitiveunits: "primitiveUnits",
        property: "property",
        r: "r",
        radius: "radius",
        refx: "refX",
        refy: "refY",
        renderingintent: "renderingIntent",
        "rendering-intent": "renderingIntent",
        repeatcount: "repeatCount",
        repeatdur: "repeatDur",
        requiredextensions: "requiredExtensions",
        requiredfeatures: "requiredFeatures",
        resource: "resource",
        restart: "restart",
        result: "result",
        results: "results",
        rotate: "rotate",
        rx: "rx",
        ry: "ry",
        scale: "scale",
        security: "security",
        seed: "seed",
        shaperendering: "shapeRendering",
        "shape-rendering": "shapeRendering",
        slope: "slope",
        spacing: "spacing",
        specularconstant: "specularConstant",
        specularexponent: "specularExponent",
        speed: "speed",
        spreadmethod: "spreadMethod",
        startoffset: "startOffset",
        stddeviation: "stdDeviation",
        stemh: "stemh",
        stemv: "stemv",
        stitchtiles: "stitchTiles",
        stopcolor: "stopColor",
        "stop-color": "stopColor",
        stopopacity: "stopOpacity",
        "stop-opacity": "stopOpacity",
        strikethroughposition: "strikethroughPosition",
        "strikethrough-position": "strikethroughPosition",
        strikethroughthickness: "strikethroughThickness",
        "strikethrough-thickness": "strikethroughThickness",
        string: "string",
        stroke: "stroke",
        strokedasharray: "strokeDasharray",
        "stroke-dasharray": "strokeDasharray",
        strokedashoffset: "strokeDashoffset",
        "stroke-dashoffset": "strokeDashoffset",
        strokelinecap: "strokeLinecap",
        "stroke-linecap": "strokeLinecap",
        strokelinejoin: "strokeLinejoin",
        "stroke-linejoin": "strokeLinejoin",
        strokemiterlimit: "strokeMiterlimit",
        "stroke-miterlimit": "strokeMiterlimit",
        strokewidth: "strokeWidth",
        "stroke-width": "strokeWidth",
        strokeopacity: "strokeOpacity",
        "stroke-opacity": "strokeOpacity",
        suppresscontenteditablewarning: "suppressContentEditableWarning",
        suppresshydrationwarning: "suppressHydrationWarning",
        surfacescale: "surfaceScale",
        systemlanguage: "systemLanguage",
        tablevalues: "tableValues",
        targetx: "targetX",
        targety: "targetY",
        textanchor: "textAnchor",
        "text-anchor": "textAnchor",
        textdecoration: "textDecoration",
        "text-decoration": "textDecoration",
        textlength: "textLength",
        textrendering: "textRendering",
        "text-rendering": "textRendering",
        to: "to",
        transform: "transform",
        typeof: "typeof",
        u1: "u1",
        u2: "u2",
        underlineposition: "underlinePosition",
        "underline-position": "underlinePosition",
        underlinethickness: "underlineThickness",
        "underline-thickness": "underlineThickness",
        unicode: "unicode",
        unicodebidi: "unicodeBidi",
        "unicode-bidi": "unicodeBidi",
        unicoderange: "unicodeRange",
        "unicode-range": "unicodeRange",
        unitsperem: "unitsPerEm",
        "units-per-em": "unitsPerEm",
        unselectable: "unselectable",
        valphabetic: "vAlphabetic",
        "v-alphabetic": "vAlphabetic",
        values: "values",
        vectoreffect: "vectorEffect",
        "vector-effect": "vectorEffect",
        version: "version",
        vertadvy: "vertAdvY",
        "vert-adv-y": "vertAdvY",
        vertoriginx: "vertOriginX",
        "vert-origin-x": "vertOriginX",
        vertoriginy: "vertOriginY",
        "vert-origin-y": "vertOriginY",
        vhanging: "vHanging",
        "v-hanging": "vHanging",
        videographic: "vIdeographic",
        "v-ideographic": "vIdeographic",
        viewbox: "viewBox",
        viewtarget: "viewTarget",
        visibility: "visibility",
        vmathematical: "vMathematical",
        "v-mathematical": "vMathematical",
        vocab: "vocab",
        widths: "widths",
        wordspacing: "wordSpacing",
        "word-spacing": "wordSpacing",
        writingmode: "writingMode",
        "writing-mode": "writingMode",
        x1: "x1",
        x2: "x2",
        x: "x",
        xchannelselector: "xChannelSelector",
        xheight: "xHeight",
        "x-height": "xHeight",
        xlinkactuate: "xlinkActuate",
        "xlink:actuate": "xlinkActuate",
        xlinkarcrole: "xlinkArcrole",
        "xlink:arcrole": "xlinkArcrole",
        xlinkhref: "xlinkHref",
        "xlink:href": "xlinkHref",
        xlinkrole: "xlinkRole",
        "xlink:role": "xlinkRole",
        xlinkshow: "xlinkShow",
        "xlink:show": "xlinkShow",
        xlinktitle: "xlinkTitle",
        "xlink:title": "xlinkTitle",
        xlinktype: "xlinkType",
        "xlink:type": "xlinkType",
        xmlbase: "xmlBase",
        "xml:base": "xmlBase",
        xmllang: "xmlLang",
        "xml:lang": "xmlLang",
        xmlns: "xmlns",
        "xml:space": "xmlSpace",
        xmlnsxlink: "xmlnsXlink",
        "xmlns:xlink": "xmlnsXlink",
        xmlspace: "xmlSpace",
        y1: "y1",
        y2: "y2",
        y: "y",
        ychannelselector: "yChannelSelector",
        z: "z",
        zoomandpan: "zoomAndPan"
      }, validateProperty$1 = function() {
      };
      {
        var warnedProperties$1 = {}, EVENT_NAME_REGEX = /^on./, INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/, rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$"), rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
        validateProperty$1 = function(tagName, name, value, eventRegistry) {
          if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name])
            return !0;
          var lowerCasedName = name.toLowerCase();
          if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout")
            return error("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React."), warnedProperties$1[name] = !0, !0;
          if (eventRegistry != null) {
            var registrationNameDependencies = eventRegistry.registrationNameDependencies, possibleRegistrationNames = eventRegistry.possibleRegistrationNames;
            if (registrationNameDependencies.hasOwnProperty(name))
              return !0;
            var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
            if (registrationName != null)
              return error("Invalid event handler property `%s`. Did you mean `%s`?", name, registrationName), warnedProperties$1[name] = !0, !0;
            if (EVENT_NAME_REGEX.test(name))
              return error("Unknown event handler property `%s`. It will be ignored.", name), warnedProperties$1[name] = !0, !0;
          } else if (EVENT_NAME_REGEX.test(name))
            return INVALID_EVENT_NAME_REGEX.test(name) && error("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name), warnedProperties$1[name] = !0, !0;
          if (rARIA$1.test(name) || rARIACamel$1.test(name))
            return !0;
          if (lowerCasedName === "innerhtml")
            return error("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`."), warnedProperties$1[name] = !0, !0;
          if (lowerCasedName === "aria")
            return error("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead."), warnedProperties$1[name] = !0, !0;
          if (lowerCasedName === "is" && value !== null && value !== void 0 && typeof value != "string")
            return error("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value), warnedProperties$1[name] = !0, !0;
          if (typeof value == "number" && isNaN(value))
            return error("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name), warnedProperties$1[name] = !0, !0;
          var propertyInfo = getPropertyInfo(name), isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;
          if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
            var standardName = possibleStandardNames[lowerCasedName];
            if (standardName !== name)
              return error("Invalid DOM property `%s`. Did you mean `%s`?", name, standardName), warnedProperties$1[name] = !0, !0;
          } else if (!isReserved && name !== lowerCasedName)
            return error("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName), warnedProperties$1[name] = !0, !0;
          return typeof value == "boolean" && shouldRemoveAttributeWithWarning(name, value, propertyInfo, !1) ? (value ? error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name) : error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name), warnedProperties$1[name] = !0, !0) : isReserved ? !0 : shouldRemoveAttributeWithWarning(name, value, propertyInfo, !1) ? (warnedProperties$1[name] = !0, !1) : ((value === "false" || value === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN && (error("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value), warnedProperties$1[name] = !0), !0);
        };
      }
      var warnUnknownProperties = function(type, props, eventRegistry) {
        {
          var unknownProps = [];
          for (var key in props) {
            var isValid = validateProperty$1(type, key, props[key], eventRegistry);
            isValid || unknownProps.push(key);
          }
          var unknownPropString = unknownProps.map(function(prop) {
            return "`" + prop + "`";
          }).join(", ");
          unknownProps.length === 1 ? error("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type) : unknownProps.length > 1 && error("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
        }
      };
      function validateProperties$2(type, props, eventRegistry) {
        isCustomComponent(type, props) || warnUnknownProperties(type, props, eventRegistry);
      }
      var warnValidStyle = function() {
      };
      {
        var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/, msPattern = /^-ms-/, hyphenPattern = /-(.)/g, badStyleValueWithSemicolonPattern = /;\s*$/, warnedStyleNames = {}, warnedStyleValues = {}, warnedForNaNValue = !1, warnedForInfinityValue = !1, camelize = function(string) {
          return string.replace(hyphenPattern, function(_3, character) {
            return character.toUpperCase();
          });
        }, warnHyphenatedStyleName = function(name) {
          warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name] || (warnedStyleNames[name] = !0, error(
            "Unsupported style property %s. Did you mean %s?",
            name,
            // As Andi Smith suggests
            // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
            // is converted to lowercase `ms`.
            camelize(name.replace(msPattern, "ms-"))
          ));
        }, warnBadVendoredStyleName = function(name) {
          warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name] || (warnedStyleNames[name] = !0, error("Unsupported vendor-prefixed style property %s. Did you mean %s?", name, name.charAt(0).toUpperCase() + name.slice(1)));
        }, warnStyleValueWithSemicolon = function(name, value) {
          warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value] || (warnedStyleValues[value] = !0, error(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, "")));
        }, warnStyleValueIsNaN = function(name, value) {
          warnedForNaNValue || (warnedForNaNValue = !0, error("`NaN` is an invalid value for the `%s` css style property.", name));
        }, warnStyleValueIsInfinity = function(name, value) {
          warnedForInfinityValue || (warnedForInfinityValue = !0, error("`Infinity` is an invalid value for the `%s` css style property.", name));
        };
        warnValidStyle = function(name, value) {
          name.indexOf("-") > -1 ? warnHyphenatedStyleName(name) : badVendoredStyleNamePattern.test(name) ? warnBadVendoredStyleName(name) : badStyleValueWithSemicolonPattern.test(value) && warnStyleValueWithSemicolon(name, value), typeof value == "number" && (isNaN(value) ? warnStyleValueIsNaN(name, value) : isFinite(value) || warnStyleValueIsInfinity(name, value));
        };
      }
      var warnValidStyle$1 = warnValidStyle, matchHtmlRegExp = /["'&<>]/;
      function escapeHtml3(string) {
        checkHtmlStringCoercion(string);
        var str = "" + string, match = matchHtmlRegExp.exec(str);
        if (!match)
          return str;
        var escape, html = "", index3, lastIndex = 0;
        for (index3 = match.index; index3 < str.length; index3++) {
          switch (str.charCodeAt(index3)) {
            case 34:
              escape = "&quot;";
              break;
            case 38:
              escape = "&amp;";
              break;
            case 39:
              escape = "&#x27;";
              break;
            case 60:
              escape = "&lt;";
              break;
            case 62:
              escape = "&gt;";
              break;
            default:
              continue;
          }
          lastIndex !== index3 && (html += str.substring(lastIndex, index3)), lastIndex = index3 + 1, html += escape;
        }
        return lastIndex !== index3 ? html + str.substring(lastIndex, index3) : html;
      }
      function escapeTextForBrowser(text) {
        return typeof text == "boolean" || typeof text == "number" ? "" + text : escapeHtml3(text);
      }
      var uppercasePattern = /([A-Z])/g, msPattern$1 = /^ms-/;
      function hyphenateStyleName(name) {
        return name.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern$1, "-ms-");
      }
      var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i, didWarn = !1;
      function sanitizeURL(url) {
        !didWarn && isJavaScriptProtocol.test(url) && (didWarn = !0, error("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url)));
      }
      var isArrayImpl = Array.isArray;
      function isArray(a13) {
        return isArrayImpl(a13);
      }
      var startInlineScript = "<script>", endInlineScript = "</script>", startScriptSrc = '<script src="', startModuleSrc = '<script type="module" src="', endAsyncScript = '" async=""></script>';
      function escapeBootstrapScriptContent(scriptText) {
        return checkHtmlStringCoercion(scriptText), ("" + scriptText).replace(scriptRegex, scriptReplacer);
      }
      var scriptRegex = /(<\/|<)(s)(cript)/gi, scriptReplacer = function(match, prefix2, s15, suffix) {
        return "" + prefix2 + (s15 === "s" ? "\\u0073" : "\\u0053") + suffix;
      };
      function createResponseState(identifierPrefix, nonce, bootstrapScriptContent, bootstrapScripts, bootstrapModules) {
        var idPrefix = identifierPrefix === void 0 ? "" : identifierPrefix, inlineScriptWithNonce = nonce === void 0 ? startInlineScript : '<script nonce="' + escapeTextForBrowser(nonce) + '">', bootstrapChunks = [];
        if (bootstrapScriptContent !== void 0 && bootstrapChunks.push(inlineScriptWithNonce, escapeBootstrapScriptContent(bootstrapScriptContent), endInlineScript), bootstrapScripts !== void 0)
          for (var i7 = 0; i7 < bootstrapScripts.length; i7++)
            bootstrapChunks.push(startScriptSrc, escapeTextForBrowser(bootstrapScripts[i7]), endAsyncScript);
        if (bootstrapModules !== void 0)
          for (var _i = 0; _i < bootstrapModules.length; _i++)
            bootstrapChunks.push(startModuleSrc, escapeTextForBrowser(bootstrapModules[_i]), endAsyncScript);
        return {
          bootstrapChunks,
          startInlineScript: inlineScriptWithNonce,
          placeholderPrefix: idPrefix + "P:",
          segmentPrefix: idPrefix + "S:",
          boundaryPrefix: idPrefix + "B:",
          idPrefix,
          nextSuspenseID: 0,
          sentCompleteSegmentFunction: !1,
          sentCompleteBoundaryFunction: !1,
          sentClientRenderFunction: !1
        };
      }
      var ROOT_HTML_MODE = 0, HTML_MODE = 1, SVG_MODE = 2, MATHML_MODE = 3, HTML_TABLE_MODE = 4, HTML_TABLE_BODY_MODE = 5, HTML_TABLE_ROW_MODE = 6, HTML_COLGROUP_MODE = 7;
      function createFormatContext(insertionMode, selectedValue) {
        return {
          insertionMode,
          selectedValue
        };
      }
      function getChildFormatContext(parentContext, type, props) {
        switch (type) {
          case "select":
            return createFormatContext(HTML_MODE, props.value != null ? props.value : props.defaultValue);
          case "svg":
            return createFormatContext(SVG_MODE, null);
          case "math":
            return createFormatContext(MATHML_MODE, null);
          case "foreignObject":
            return createFormatContext(HTML_MODE, null);
          case "table":
            return createFormatContext(HTML_TABLE_MODE, null);
          case "thead":
          case "tbody":
          case "tfoot":
            return createFormatContext(HTML_TABLE_BODY_MODE, null);
          case "colgroup":
            return createFormatContext(HTML_COLGROUP_MODE, null);
          case "tr":
            return createFormatContext(HTML_TABLE_ROW_MODE, null);
        }
        return parentContext.insertionMode >= HTML_TABLE_MODE || parentContext.insertionMode === ROOT_HTML_MODE ? createFormatContext(HTML_MODE, null) : parentContext;
      }
      var UNINITIALIZED_SUSPENSE_BOUNDARY_ID = null;
      function assignSuspenseBoundaryID(responseState) {
        var generatedID = responseState.nextSuspenseID++;
        return responseState.boundaryPrefix + generatedID.toString(16);
      }
      function makeId(responseState, treeId, localId) {
        var idPrefix = responseState.idPrefix, id = ":" + idPrefix + "R" + treeId;
        return localId > 0 && (id += "H" + localId.toString(32)), id + ":";
      }
      function encodeHTMLTextNode(text) {
        return escapeTextForBrowser(text);
      }
      var textSeparator = "<!-- -->";
      function pushTextInstance(target, text, responseState, textEmbedded) {
        return text === "" ? textEmbedded : (textEmbedded && target.push(textSeparator), target.push(encodeHTMLTextNode(text)), !0);
      }
      function pushSegmentFinale(target, responseState, lastPushedText, textEmbedded) {
        lastPushedText && textEmbedded && target.push(textSeparator);
      }
      var styleNameCache = /* @__PURE__ */ new Map();
      function processStyleName(styleName) {
        var chunk = styleNameCache.get(styleName);
        if (chunk !== void 0)
          return chunk;
        var result = escapeTextForBrowser(hyphenateStyleName(styleName));
        return styleNameCache.set(styleName, result), result;
      }
      var styleAttributeStart = ' style="', styleAssign = ":", styleSeparator = ";";
      function pushStyle(target, responseState, style2) {
        if (typeof style2 != "object")
          throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
        var isFirst = !0;
        for (var styleName in style2)
          if (hasOwnProperty.call(style2, styleName)) {
            var styleValue = style2[styleName];
            if (!(styleValue == null || typeof styleValue == "boolean" || styleValue === "")) {
              var nameChunk = void 0, valueChunk = void 0, isCustomProperty = styleName.indexOf("--") === 0;
              isCustomProperty ? (nameChunk = escapeTextForBrowser(styleName), checkCSSPropertyStringCoercion(styleValue, styleName), valueChunk = escapeTextForBrowser(("" + styleValue).trim())) : (warnValidStyle$1(styleName, styleValue), nameChunk = processStyleName(styleName), typeof styleValue == "number" ? styleValue !== 0 && !hasOwnProperty.call(isUnitlessNumber, styleName) ? valueChunk = styleValue + "px" : valueChunk = "" + styleValue : (checkCSSPropertyStringCoercion(styleValue, styleName), valueChunk = escapeTextForBrowser(("" + styleValue).trim()))), isFirst ? (isFirst = !1, target.push(styleAttributeStart, nameChunk, styleAssign, valueChunk)) : target.push(styleSeparator, nameChunk, styleAssign, valueChunk);
            }
          }
        isFirst || target.push(attributeEnd);
      }
      var attributeSeparator = " ", attributeAssign = '="', attributeEnd = '"', attributeEmptyString = '=""';
      function pushAttribute(target, responseState, name, value) {
        switch (name) {
          case "style": {
            pushStyle(target, responseState, value);
            return;
          }
          case "defaultValue":
          case "defaultChecked":
          case "innerHTML":
          case "suppressContentEditableWarning":
          case "suppressHydrationWarning":
            return;
        }
        if (
          // shouldIgnoreAttribute
          // We have already filtered out null/undefined and reserved words.
          !(name.length > 2 && (name[0] === "o" || name[0] === "O") && (name[1] === "n" || name[1] === "N"))
        ) {
          var propertyInfo = getPropertyInfo(name);
          if (propertyInfo !== null) {
            switch (typeof value) {
              case "function":
              case "symbol":
                return;
              case "boolean":
                if (!propertyInfo.acceptsBooleans)
                  return;
            }
            var attributeName = propertyInfo.attributeName, attributeNameChunk = attributeName;
            switch (propertyInfo.type) {
              case BOOLEAN:
                value && target.push(attributeSeparator, attributeNameChunk, attributeEmptyString);
                return;
              case OVERLOADED_BOOLEAN:
                value === !0 ? target.push(attributeSeparator, attributeNameChunk, attributeEmptyString) : value === !1 || target.push(attributeSeparator, attributeNameChunk, attributeAssign, escapeTextForBrowser(value), attributeEnd);
                return;
              case NUMERIC:
                isNaN(value) || target.push(attributeSeparator, attributeNameChunk, attributeAssign, escapeTextForBrowser(value), attributeEnd);
                break;
              case POSITIVE_NUMERIC:
                !isNaN(value) && value >= 1 && target.push(attributeSeparator, attributeNameChunk, attributeAssign, escapeTextForBrowser(value), attributeEnd);
                break;
              default:
                propertyInfo.sanitizeURL && (checkAttributeStringCoercion(value, attributeName), value = "" + value, sanitizeURL(value)), target.push(attributeSeparator, attributeNameChunk, attributeAssign, escapeTextForBrowser(value), attributeEnd);
            }
          } else if (isAttributeNameSafe(name)) {
            switch (typeof value) {
              case "function":
              case "symbol":
                return;
              case "boolean": {
                var prefix2 = name.toLowerCase().slice(0, 5);
                if (prefix2 !== "data-" && prefix2 !== "aria-")
                  return;
              }
            }
            target.push(attributeSeparator, name, attributeAssign, escapeTextForBrowser(value), attributeEnd);
          }
        }
      }
      var endOfStartTag = ">", endOfStartTagSelfClosing = "/>";
      function pushInnerHTML(target, innerHTML, children) {
        if (innerHTML != null) {
          if (children != null)
            throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
          if (typeof innerHTML != "object" || !("__html" in innerHTML))
            throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
          var html = innerHTML.__html;
          html != null && (checkHtmlStringCoercion(html), target.push("" + html));
        }
      }
      var didWarnDefaultInputValue = !1, didWarnDefaultChecked = !1, didWarnDefaultSelectValue = !1, didWarnDefaultTextareaValue = !1, didWarnInvalidOptionChildren = !1, didWarnInvalidOptionInnerHTML = !1, didWarnSelectedSetOnOption = !1;
      function checkSelectProp(props, propName) {
        {
          var value = props[propName];
          if (value != null) {
            var array = isArray(value);
            props.multiple && !array ? error("The `%s` prop supplied to <select> must be an array if `multiple` is true.", propName) : !props.multiple && array && error("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.", propName);
          }
        }
      }
      function pushStartSelect(target, props, responseState) {
        checkControlledValueProps("select", props), checkSelectProp(props, "value"), checkSelectProp(props, "defaultValue"), props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultSelectValue && (error("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components"), didWarnDefaultSelectValue = !0), target.push(startChunkForTag("select"));
        var children = null, innerHTML = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              case "defaultValue":
              case "value":
                break;
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        return target.push(endOfStartTag), pushInnerHTML(target, innerHTML, children), children;
      }
      function flattenOptionChildren(children) {
        var content = "";
        return React26.Children.forEach(children, function(child) {
          child != null && (content += child, !didWarnInvalidOptionChildren && typeof child != "string" && typeof child != "number" && (didWarnInvalidOptionChildren = !0, error("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.")));
        }), content;
      }
      var selectedMarkerAttribute = ' selected=""';
      function pushStartOption(target, props, responseState, formatContext) {
        var selectedValue = formatContext.selectedValue;
        target.push(startChunkForTag("option"));
        var children = null, value = null, selected = null, innerHTML = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "selected":
                selected = propValue, didWarnSelectedSetOnOption || (error("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>."), didWarnSelectedSetOnOption = !0);
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              case "value":
                value = propValue;
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        if (selectedValue != null) {
          var stringValue;
          if (value !== null ? (checkAttributeStringCoercion(value, "value"), stringValue = "" + value) : (innerHTML !== null && (didWarnInvalidOptionInnerHTML || (didWarnInvalidOptionInnerHTML = !0, error("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected."))), stringValue = flattenOptionChildren(children)), isArray(selectedValue))
            for (var i7 = 0; i7 < selectedValue.length; i7++) {
              checkAttributeStringCoercion(selectedValue[i7], "value");
              var v4 = "" + selectedValue[i7];
              if (v4 === stringValue) {
                target.push(selectedMarkerAttribute);
                break;
              }
            }
          else
            checkAttributeStringCoercion(selectedValue, "select.value"), "" + selectedValue === stringValue && target.push(selectedMarkerAttribute);
        } else
          selected && target.push(selectedMarkerAttribute);
        return target.push(endOfStartTag), pushInnerHTML(target, innerHTML, children), children;
      }
      function pushInput(target, props, responseState) {
        checkControlledValueProps("input", props), props.checked !== void 0 && props.defaultChecked !== void 0 && !didWarnDefaultChecked && (error("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", "A component", props.type), didWarnDefaultChecked = !0), props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultInputValue && (error("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", "A component", props.type), didWarnDefaultInputValue = !0), target.push(startChunkForTag("input"));
        var value = null, defaultValue = null, checked = null, defaultChecked = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
              case "dangerouslySetInnerHTML":
                throw new Error("input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
              case "defaultChecked":
                defaultChecked = propValue;
                break;
              case "defaultValue":
                defaultValue = propValue;
                break;
              case "checked":
                checked = propValue;
                break;
              case "value":
                value = propValue;
                break;
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        return checked !== null ? pushAttribute(target, responseState, "checked", checked) : defaultChecked !== null && pushAttribute(target, responseState, "checked", defaultChecked), value !== null ? pushAttribute(target, responseState, "value", value) : defaultValue !== null && pushAttribute(target, responseState, "value", defaultValue), target.push(endOfStartTagSelfClosing), null;
      }
      function pushStartTextArea(target, props, responseState) {
        checkControlledValueProps("textarea", props), props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultTextareaValue && (error("Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components"), didWarnDefaultTextareaValue = !0), target.push(startChunkForTag("textarea"));
        var value = null, defaultValue = null, children = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "value":
                value = propValue;
                break;
              case "defaultValue":
                defaultValue = propValue;
                break;
              case "dangerouslySetInnerHTML":
                throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        if (value === null && defaultValue !== null && (value = defaultValue), target.push(endOfStartTag), children != null) {
          if (error("Use the `defaultValue` or `value` props instead of setting children on <textarea>."), value != null)
            throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
          if (isArray(children)) {
            if (children.length > 1)
              throw new Error("<textarea> can only have at most one child.");
            checkHtmlStringCoercion(children[0]), value = "" + children[0];
          }
          checkHtmlStringCoercion(children), value = "" + children;
        }
        return typeof value == "string" && value[0] === `
` && target.push(leadingNewline), value !== null && (checkAttributeStringCoercion(value, "value"), target.push(encodeHTMLTextNode("" + value))), null;
      }
      function pushSelfClosing(target, props, tag, responseState) {
        target.push(startChunkForTag(tag));
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
              case "dangerouslySetInnerHTML":
                throw new Error(tag + " is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        return target.push(endOfStartTagSelfClosing), null;
      }
      function pushStartMenuItem(target, props, responseState) {
        target.push(startChunkForTag("menuitem"));
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
              case "dangerouslySetInnerHTML":
                throw new Error("menuitems cannot have `children` nor `dangerouslySetInnerHTML`.");
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        return target.push(endOfStartTag), null;
      }
      function pushStartTitle(target, props, responseState) {
        target.push(startChunkForTag("title"));
        var children = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                throw new Error("`dangerouslySetInnerHTML` does not make sense on <title>.");
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        target.push(endOfStartTag);
        {
          var child = Array.isArray(children) && children.length < 2 ? children[0] || null : children;
          Array.isArray(children) && children.length > 1 ? error("A title element received an array with more than 1 element as children. In browsers title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering") : child != null && child.$$typeof != null ? error("A title element received a React element for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering") : child != null && typeof child != "string" && typeof child != "number" && error("A title element received a value that was not a string or number for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering");
        }
        return children;
      }
      function pushStartGenericElement(target, props, tag, responseState) {
        target.push(startChunkForTag(tag));
        var children = null, innerHTML = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        return target.push(endOfStartTag), pushInnerHTML(target, innerHTML, children), typeof children == "string" ? (target.push(encodeHTMLTextNode(children)), null) : children;
      }
      function pushStartCustomElement(target, props, tag, responseState) {
        target.push(startChunkForTag(tag));
        var children = null, innerHTML = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              case "style":
                pushStyle(target, responseState, propValue);
                break;
              case "suppressContentEditableWarning":
              case "suppressHydrationWarning":
                break;
              default:
                isAttributeNameSafe(propKey) && typeof propValue != "function" && typeof propValue != "symbol" && target.push(attributeSeparator, propKey, attributeAssign, escapeTextForBrowser(propValue), attributeEnd);
                break;
            }
          }
        return target.push(endOfStartTag), pushInnerHTML(target, innerHTML, children), children;
      }
      var leadingNewline = `
`;
      function pushStartPreformattedElement(target, props, tag, responseState) {
        target.push(startChunkForTag(tag));
        var children = null, innerHTML = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        if (target.push(endOfStartTag), innerHTML != null) {
          if (children != null)
            throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
          if (typeof innerHTML != "object" || !("__html" in innerHTML))
            throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
          var html = innerHTML.__html;
          html != null && (typeof html == "string" && html.length > 0 && html[0] === `
` ? target.push(leadingNewline, html) : (checkHtmlStringCoercion(html), target.push("" + html)));
        }
        return typeof children == "string" && children[0] === `
` && target.push(leadingNewline), children;
      }
      var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/, validatedTagCache = /* @__PURE__ */ new Map();
      function startChunkForTag(tag) {
        var tagStartChunk = validatedTagCache.get(tag);
        if (tagStartChunk === void 0) {
          if (!VALID_TAG_REGEX.test(tag))
            throw new Error("Invalid tag: " + tag);
          tagStartChunk = "<" + tag, validatedTagCache.set(tag, tagStartChunk);
        }
        return tagStartChunk;
      }
      var DOCTYPE = "<!DOCTYPE html>";
      function pushStartInstance(target, type, props, responseState, formatContext) {
        switch (validateProperties(type, props), validateProperties$1(type, props), validateProperties$2(type, props, null), !props.suppressContentEditableWarning && props.contentEditable && props.children != null && error("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional."), formatContext.insertionMode !== SVG_MODE && formatContext.insertionMode !== MATHML_MODE && type.indexOf("-") === -1 && typeof props.is != "string" && type.toLowerCase() !== type && error("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type), type) {
          case "select":
            return pushStartSelect(target, props, responseState);
          case "option":
            return pushStartOption(target, props, responseState, formatContext);
          case "textarea":
            return pushStartTextArea(target, props, responseState);
          case "input":
            return pushInput(target, props, responseState);
          case "menuitem":
            return pushStartMenuItem(target, props, responseState);
          case "title":
            return pushStartTitle(target, props, responseState);
          case "listing":
          case "pre":
            return pushStartPreformattedElement(target, props, type, responseState);
          case "area":
          case "base":
          case "br":
          case "col":
          case "embed":
          case "hr":
          case "img":
          case "keygen":
          case "link":
          case "meta":
          case "param":
          case "source":
          case "track":
          case "wbr":
            return pushSelfClosing(target, props, type, responseState);
          case "annotation-xml":
          case "color-profile":
          case "font-face":
          case "font-face-src":
          case "font-face-uri":
          case "font-face-format":
          case "font-face-name":
          case "missing-glyph":
            return pushStartGenericElement(target, props, type, responseState);
          case "html":
            return formatContext.insertionMode === ROOT_HTML_MODE && target.push(DOCTYPE), pushStartGenericElement(target, props, type, responseState);
          default:
            return type.indexOf("-") === -1 && typeof props.is != "string" ? pushStartGenericElement(target, props, type, responseState) : pushStartCustomElement(target, props, type, responseState);
        }
      }
      var endTag1 = "</", endTag2 = ">";
      function pushEndInstance(target, type, props) {
        switch (type) {
          case "area":
          case "base":
          case "br":
          case "col":
          case "embed":
          case "hr":
          case "img":
          case "input":
          case "keygen":
          case "link":
          case "meta":
          case "param":
          case "source":
          case "track":
          case "wbr":
            break;
          default:
            target.push(endTag1, type, endTag2);
        }
      }
      function writeCompletedRoot(destination, responseState) {
        for (var bootstrapChunks = responseState.bootstrapChunks, i7 = 0; i7 < bootstrapChunks.length - 1; i7++)
          writeChunk(destination, bootstrapChunks[i7]);
        return i7 < bootstrapChunks.length ? writeChunkAndReturn(destination, bootstrapChunks[i7]) : !0;
      }
      var placeholder1 = '<template id="', placeholder2 = '"></template>';
      function writePlaceholder(destination, responseState, id) {
        writeChunk(destination, placeholder1), writeChunk(destination, responseState.placeholderPrefix);
        var formattedID = id.toString(16);
        return writeChunk(destination, formattedID), writeChunkAndReturn(destination, placeholder2);
      }
      var startCompletedSuspenseBoundary = "<!--$-->", startPendingSuspenseBoundary1 = '<!--$?--><template id="', startPendingSuspenseBoundary2 = '"></template>', startClientRenderedSuspenseBoundary = "<!--$!-->", endSuspenseBoundary = "<!--/$-->", clientRenderedSuspenseBoundaryError1 = "<template", clientRenderedSuspenseBoundaryErrorAttrInterstitial = '"', clientRenderedSuspenseBoundaryError1A = ' data-dgst="', clientRenderedSuspenseBoundaryError1B = ' data-msg="', clientRenderedSuspenseBoundaryError1C = ' data-stck="', clientRenderedSuspenseBoundaryError2 = "></template>";
      function writeStartCompletedSuspenseBoundary(destination, responseState) {
        return writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
      }
      function writeStartPendingSuspenseBoundary(destination, responseState, id) {
        if (writeChunk(destination, startPendingSuspenseBoundary1), id === null)
          throw new Error("An ID must have been assigned before we can complete the boundary.");
        return writeChunk(destination, id), writeChunkAndReturn(destination, startPendingSuspenseBoundary2);
      }
      function writeStartClientRenderedSuspenseBoundary(destination, responseState, errorDigest, errorMesssage, errorComponentStack) {
        var result;
        return result = writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary), writeChunk(destination, clientRenderedSuspenseBoundaryError1), errorDigest && (writeChunk(destination, clientRenderedSuspenseBoundaryError1A), writeChunk(destination, escapeTextForBrowser(errorDigest)), writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial)), errorMesssage && (writeChunk(destination, clientRenderedSuspenseBoundaryError1B), writeChunk(destination, escapeTextForBrowser(errorMesssage)), writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial)), errorComponentStack && (writeChunk(destination, clientRenderedSuspenseBoundaryError1C), writeChunk(destination, escapeTextForBrowser(errorComponentStack)), writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial)), result = writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2), result;
      }
      function writeEndCompletedSuspenseBoundary(destination, responseState) {
        return writeChunkAndReturn(destination, endSuspenseBoundary);
      }
      function writeEndPendingSuspenseBoundary(destination, responseState) {
        return writeChunkAndReturn(destination, endSuspenseBoundary);
      }
      function writeEndClientRenderedSuspenseBoundary(destination, responseState) {
        return writeChunkAndReturn(destination, endSuspenseBoundary);
      }
      var startSegmentHTML = '<div hidden id="', startSegmentHTML2 = '">', endSegmentHTML = "</div>", startSegmentSVG = '<svg aria-hidden="true" style="display:none" id="', startSegmentSVG2 = '">', endSegmentSVG = "</svg>", startSegmentMathML = '<math aria-hidden="true" style="display:none" id="', startSegmentMathML2 = '">', endSegmentMathML = "</math>", startSegmentTable = '<table hidden id="', startSegmentTable2 = '">', endSegmentTable = "</table>", startSegmentTableBody = '<table hidden><tbody id="', startSegmentTableBody2 = '">', endSegmentTableBody = "</tbody></table>", startSegmentTableRow = '<table hidden><tr id="', startSegmentTableRow2 = '">', endSegmentTableRow = "</tr></table>", startSegmentColGroup = '<table hidden><colgroup id="', startSegmentColGroup2 = '">', endSegmentColGroup = "</colgroup></table>";
      function writeStartSegment(destination, responseState, formatContext, id) {
        switch (formatContext.insertionMode) {
          case ROOT_HTML_MODE:
          case HTML_MODE:
            return writeChunk(destination, startSegmentHTML), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, id.toString(16)), writeChunkAndReturn(destination, startSegmentHTML2);
          case SVG_MODE:
            return writeChunk(destination, startSegmentSVG), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, id.toString(16)), writeChunkAndReturn(destination, startSegmentSVG2);
          case MATHML_MODE:
            return writeChunk(destination, startSegmentMathML), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, id.toString(16)), writeChunkAndReturn(destination, startSegmentMathML2);
          case HTML_TABLE_MODE:
            return writeChunk(destination, startSegmentTable), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, id.toString(16)), writeChunkAndReturn(destination, startSegmentTable2);
          case HTML_TABLE_BODY_MODE:
            return writeChunk(destination, startSegmentTableBody), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, id.toString(16)), writeChunkAndReturn(destination, startSegmentTableBody2);
          case HTML_TABLE_ROW_MODE:
            return writeChunk(destination, startSegmentTableRow), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, id.toString(16)), writeChunkAndReturn(destination, startSegmentTableRow2);
          case HTML_COLGROUP_MODE:
            return writeChunk(destination, startSegmentColGroup), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, id.toString(16)), writeChunkAndReturn(destination, startSegmentColGroup2);
          default:
            throw new Error("Unknown insertion mode. This is a bug in React.");
        }
      }
      function writeEndSegment(destination, formatContext) {
        switch (formatContext.insertionMode) {
          case ROOT_HTML_MODE:
          case HTML_MODE:
            return writeChunkAndReturn(destination, endSegmentHTML);
          case SVG_MODE:
            return writeChunkAndReturn(destination, endSegmentSVG);
          case MATHML_MODE:
            return writeChunkAndReturn(destination, endSegmentMathML);
          case HTML_TABLE_MODE:
            return writeChunkAndReturn(destination, endSegmentTable);
          case HTML_TABLE_BODY_MODE:
            return writeChunkAndReturn(destination, endSegmentTableBody);
          case HTML_TABLE_ROW_MODE:
            return writeChunkAndReturn(destination, endSegmentTableRow);
          case HTML_COLGROUP_MODE:
            return writeChunkAndReturn(destination, endSegmentColGroup);
          default:
            throw new Error("Unknown insertion mode. This is a bug in React.");
        }
      }
      var completeSegmentFunction = "function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)}", completeBoundaryFunction = 'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}}', clientRenderFunction = 'function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())}', completeSegmentScript1Full = completeSegmentFunction + ';$RS("', completeSegmentScript1Partial = '$RS("', completeSegmentScript2 = '","', completeSegmentScript3 = '")</script>';
      function writeCompletedSegmentInstruction(destination, responseState, contentSegmentID) {
        writeChunk(destination, responseState.startInlineScript), responseState.sentCompleteSegmentFunction ? writeChunk(destination, completeSegmentScript1Partial) : (responseState.sentCompleteSegmentFunction = !0, writeChunk(destination, completeSegmentScript1Full)), writeChunk(destination, responseState.segmentPrefix);
        var formattedID = contentSegmentID.toString(16);
        return writeChunk(destination, formattedID), writeChunk(destination, completeSegmentScript2), writeChunk(destination, responseState.placeholderPrefix), writeChunk(destination, formattedID), writeChunkAndReturn(destination, completeSegmentScript3);
      }
      var completeBoundaryScript1Full = completeBoundaryFunction + ';$RC("', completeBoundaryScript1Partial = '$RC("', completeBoundaryScript2 = '","', completeBoundaryScript3 = '")</script>';
      function writeCompletedBoundaryInstruction(destination, responseState, boundaryID, contentSegmentID) {
        if (writeChunk(destination, responseState.startInlineScript), responseState.sentCompleteBoundaryFunction ? writeChunk(destination, completeBoundaryScript1Partial) : (responseState.sentCompleteBoundaryFunction = !0, writeChunk(destination, completeBoundaryScript1Full)), boundaryID === null)
          throw new Error("An ID must have been assigned before we can complete the boundary.");
        var formattedContentID = contentSegmentID.toString(16);
        return writeChunk(destination, boundaryID), writeChunk(destination, completeBoundaryScript2), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, formattedContentID), writeChunkAndReturn(destination, completeBoundaryScript3);
      }
      var clientRenderScript1Full = clientRenderFunction + ';$RX("', clientRenderScript1Partial = '$RX("', clientRenderScript1A = '"', clientRenderScript2 = ")</script>", clientRenderErrorScriptArgInterstitial = ",";
      function writeClientRenderBoundaryInstruction(destination, responseState, boundaryID, errorDigest, errorMessage, errorComponentStack) {
        if (writeChunk(destination, responseState.startInlineScript), responseState.sentClientRenderFunction ? writeChunk(destination, clientRenderScript1Partial) : (responseState.sentClientRenderFunction = !0, writeChunk(destination, clientRenderScript1Full)), boundaryID === null)
          throw new Error("An ID must have been assigned before we can complete the boundary.");
        return writeChunk(destination, boundaryID), writeChunk(destination, clientRenderScript1A), (errorDigest || errorMessage || errorComponentStack) && (writeChunk(destination, clientRenderErrorScriptArgInterstitial), writeChunk(destination, escapeJSStringsForInstructionScripts(errorDigest || ""))), (errorMessage || errorComponentStack) && (writeChunk(destination, clientRenderErrorScriptArgInterstitial), writeChunk(destination, escapeJSStringsForInstructionScripts(errorMessage || ""))), errorComponentStack && (writeChunk(destination, clientRenderErrorScriptArgInterstitial), writeChunk(destination, escapeJSStringsForInstructionScripts(errorComponentStack))), writeChunkAndReturn(destination, clientRenderScript2);
      }
      var regexForJSStringsInScripts = /[<\u2028\u2029]/g;
      function escapeJSStringsForInstructionScripts(input) {
        var escaped = JSON.stringify(input);
        return escaped.replace(regexForJSStringsInScripts, function(match) {
          switch (match) {
            case "<":
              return "\\u003c";
            case "\u2028":
              return "\\u2028";
            case "\u2029":
              return "\\u2029";
            default:
              throw new Error("escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");
          }
        });
      }
      function createResponseState$1(generateStaticMarkup, identifierPrefix) {
        var responseState = createResponseState(identifierPrefix, void 0);
        return {
          // Keep this in sync with ReactDOMServerFormatConfig
          bootstrapChunks: responseState.bootstrapChunks,
          startInlineScript: responseState.startInlineScript,
          placeholderPrefix: responseState.placeholderPrefix,
          segmentPrefix: responseState.segmentPrefix,
          boundaryPrefix: responseState.boundaryPrefix,
          idPrefix: responseState.idPrefix,
          nextSuspenseID: responseState.nextSuspenseID,
          sentCompleteSegmentFunction: responseState.sentCompleteSegmentFunction,
          sentCompleteBoundaryFunction: responseState.sentCompleteBoundaryFunction,
          sentClientRenderFunction: responseState.sentClientRenderFunction,
          // This is an extra field for the legacy renderer
          generateStaticMarkup
        };
      }
      function createRootFormatContext() {
        return {
          insertionMode: HTML_MODE,
          // We skip the root mode because we don't want to emit the DOCTYPE in legacy mode.
          selectedValue: null
        };
      }
      function pushTextInstance$1(target, text, responseState, textEmbedded) {
        return responseState.generateStaticMarkup ? (target.push(escapeTextForBrowser(text)), !1) : pushTextInstance(target, text, responseState, textEmbedded);
      }
      function pushSegmentFinale$1(target, responseState, lastPushedText, textEmbedded) {
        if (!responseState.generateStaticMarkup)
          return pushSegmentFinale(target, responseState, lastPushedText, textEmbedded);
      }
      function writeStartCompletedSuspenseBoundary$1(destination, responseState) {
        return responseState.generateStaticMarkup ? !0 : writeStartCompletedSuspenseBoundary(destination);
      }
      function writeStartClientRenderedSuspenseBoundary$1(destination, responseState, errorDigest, errorMessage, errorComponentStack) {
        return responseState.generateStaticMarkup ? !0 : writeStartClientRenderedSuspenseBoundary(destination, responseState, errorDigest, errorMessage, errorComponentStack);
      }
      function writeEndCompletedSuspenseBoundary$1(destination, responseState) {
        return responseState.generateStaticMarkup ? !0 : writeEndCompletedSuspenseBoundary(destination);
      }
      function writeEndClientRenderedSuspenseBoundary$1(destination, responseState) {
        return responseState.generateStaticMarkup ? !0 : writeEndClientRenderedSuspenseBoundary(destination);
      }
      var assign = Object.assign, REACT_ELEMENT_TYPE = Symbol.for("react.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler"), REACT_PROVIDER_TYPE = Symbol.for("react.provider"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_SCOPE_TYPE = Symbol.for("react.scope"), REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for("react.debug_trace_mode"), REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden"), REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for("react.default_value"), MAYBE_ITERATOR_SYMBOL = Symbol.iterator, FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable != "object")
          return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        return typeof maybeIterator == "function" ? maybeIterator : null;
      }
      function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName)
          return displayName;
        var functionName = innerType.displayName || innerType.name || "";
        return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
      }
      function getContextName(type) {
        return type.displayName || "Context";
      }
      function getComponentNameFromType(type) {
        if (type == null)
          return null;
        if (typeof type.tag == "number" && error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof type == "function")
          return type.displayName || type.name || null;
        if (typeof type == "string")
          return type;
        switch (type) {
          case REACT_FRAGMENT_TYPE:
            return "Fragment";
          case REACT_PORTAL_TYPE:
            return "Portal";
          case REACT_PROFILER_TYPE:
            return "Profiler";
          case REACT_STRICT_MODE_TYPE:
            return "StrictMode";
          case REACT_SUSPENSE_TYPE:
            return "Suspense";
          case REACT_SUSPENSE_LIST_TYPE:
            return "SuspenseList";
        }
        if (typeof type == "object")
          switch (type.$$typeof) {
            case REACT_CONTEXT_TYPE:
              var context = type;
              return getContextName(context) + ".Consumer";
            case REACT_PROVIDER_TYPE:
              var provider = type;
              return getContextName(provider._context) + ".Provider";
            case REACT_FORWARD_REF_TYPE:
              return getWrappedName(type, type.render, "ForwardRef");
            case REACT_MEMO_TYPE:
              var outerName = type.displayName || null;
              return outerName !== null ? outerName : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE: {
              var lazyComponent = type, payload = lazyComponent._payload, init = lazyComponent._init;
              try {
                return getComponentNameFromType(init(payload));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var disabledDepth = 0, prevLog, prevInfo, prevWarn, prevError, prevGroup, prevGroupCollapsed, prevGroupEnd;
      function disabledLog() {
      }
      disabledLog.__reactDisabledLog = !0;
      function disableLogs() {
        {
          if (disabledDepth === 0) {
            prevLog = console.log, prevInfo = console.info, prevWarn = console.warn, prevError = console.error, prevGroup = console.group, prevGroupCollapsed = console.groupCollapsed, prevGroupEnd = console.groupEnd;
            var props = {
              configurable: !0,
              enumerable: !0,
              value: disabledLog,
              writable: !0
            };
            Object.defineProperties(console, {
              info: props,
              log: props,
              warn: props,
              error: props,
              group: props,
              groupCollapsed: props,
              groupEnd: props
            });
          }
          disabledDepth++;
        }
      }
      function reenableLogs() {
        {
          if (disabledDepth--, disabledDepth === 0) {
            var props = {
              configurable: !0,
              enumerable: !0,
              writable: !0
            };
            Object.defineProperties(console, {
              log: assign({}, props, {
                value: prevLog
              }),
              info: assign({}, props, {
                value: prevInfo
              }),
              warn: assign({}, props, {
                value: prevWarn
              }),
              error: assign({}, props, {
                value: prevError
              }),
              group: assign({}, props, {
                value: prevGroup
              }),
              groupCollapsed: assign({}, props, {
                value: prevGroupCollapsed
              }),
              groupEnd: assign({}, props, {
                value: prevGroupEnd
              })
            });
          }
          disabledDepth < 0 && error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }
      }
      var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher, prefix;
      function describeBuiltInComponentFrame(name, source, ownerFn) {
        {
          if (prefix === void 0)
            try {
              throw Error();
            } catch (x5) {
              var match = x5.stack.trim().match(/\n( *(at )?)/);
              prefix = match && match[1] || "";
            }
          return `
` + prefix + name;
        }
      }
      var reentry = !1, componentFrameCache;
      {
        var PossiblyWeakMap = typeof WeakMap == "function" ? WeakMap : Map;
        componentFrameCache = new PossiblyWeakMap();
      }
      function describeNativeComponentFrame(fn, construct) {
        if (!fn || reentry)
          return "";
        {
          var frame = componentFrameCache.get(fn);
          if (frame !== void 0)
            return frame;
        }
        var control;
        reentry = !0;
        var previousPrepareStackTrace = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher.current, ReactCurrentDispatcher.current = null, disableLogs();
        try {
          if (construct) {
            var Fake = function() {
              throw Error();
            };
            if (Object.defineProperty(Fake.prototype, "props", {
              set: function() {
                throw Error();
              }
            }), typeof Reflect == "object" && Reflect.construct) {
              try {
                Reflect.construct(Fake, []);
              } catch (x5) {
                control = x5;
              }
              Reflect.construct(fn, [], Fake);
            } else {
              try {
                Fake.call();
              } catch (x5) {
                control = x5;
              }
              fn.call(Fake.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (x5) {
              control = x5;
            }
            fn();
          }
        } catch (sample) {
          if (sample && control && typeof sample.stack == "string") {
            for (var sampleLines = sample.stack.split(`
`), controlLines = control.stack.split(`
`), s15 = sampleLines.length - 1, c13 = controlLines.length - 1; s15 >= 1 && c13 >= 0 && sampleLines[s15] !== controlLines[c13]; )
              c13--;
            for (; s15 >= 1 && c13 >= 0; s15--, c13--)
              if (sampleLines[s15] !== controlLines[c13]) {
                if (s15 !== 1 || c13 !== 1)
                  do
                    if (s15--, c13--, c13 < 0 || sampleLines[s15] !== controlLines[c13]) {
                      var _frame = `
` + sampleLines[s15].replace(" at new ", " at ");
                      return fn.displayName && _frame.includes("<anonymous>") && (_frame = _frame.replace("<anonymous>", fn.displayName)), typeof fn == "function" && componentFrameCache.set(fn, _frame), _frame;
                    }
                  while (s15 >= 1 && c13 >= 0);
                break;
              }
          }
        } finally {
          reentry = !1, ReactCurrentDispatcher.current = previousDispatcher, reenableLogs(), Error.prepareStackTrace = previousPrepareStackTrace;
        }
        var name = fn ? fn.displayName || fn.name : "", syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
        return typeof fn == "function" && componentFrameCache.set(fn, syntheticFrame), syntheticFrame;
      }
      function describeClassComponentFrame(ctor, source, ownerFn) {
        return describeNativeComponentFrame(ctor, !0);
      }
      function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, !1);
      }
      function shouldConstruct(Component2) {
        var prototype = Component2.prototype;
        return !!(prototype && prototype.isReactComponent);
      }
      function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null)
          return "";
        if (typeof type == "function")
          return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type == "string")
          return describeBuiltInComponentFrame(type);
        switch (type) {
          case REACT_SUSPENSE_TYPE:
            return describeBuiltInComponentFrame("Suspense");
          case REACT_SUSPENSE_LIST_TYPE:
            return describeBuiltInComponentFrame("SuspenseList");
        }
        if (typeof type == "object")
          switch (type.$$typeof) {
            case REACT_FORWARD_REF_TYPE:
              return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
              return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE: {
              var lazyComponent = type, payload = lazyComponent._payload, init = lazyComponent._init;
              try {
                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
              } catch {
              }
            }
          }
        return "";
      }
      var loggedTypeFailures = {}, ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
      function setCurrentlyValidatingElement(element) {
        if (element) {
          var owner = element._owner, stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
          ReactDebugCurrentFrame.setExtraStackFrame(stack);
        } else
          ReactDebugCurrentFrame.setExtraStackFrame(null);
      }
      function checkPropTypes(typeSpecs, values, location, componentName, element) {
        {
          var has = Function.call.bind(hasOwnProperty);
          for (var typeSpecName in typeSpecs)
            if (has(typeSpecs, typeSpecName)) {
              var error$1 = void 0;
              try {
                if (typeof typeSpecs[typeSpecName] != "function") {
                  var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw err.name = "Invariant Violation", err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (ex) {
                error$1 = ex;
              }
              error$1 && !(error$1 instanceof Error) && (setCurrentlyValidatingElement(element), error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1), setCurrentlyValidatingElement(null)), error$1 instanceof Error && !(error$1.message in loggedTypeFailures) && (loggedTypeFailures[error$1.message] = !0, setCurrentlyValidatingElement(element), error("Failed %s type: %s", location, error$1.message), setCurrentlyValidatingElement(null));
            }
        }
      }
      var warnedAboutMissingGetChildContext;
      warnedAboutMissingGetChildContext = {};
      var emptyContextObject = {};
      Object.freeze(emptyContextObject);
      function getMaskedContext(type, unmaskedContext) {
        {
          var contextTypes = type.contextTypes;
          if (!contextTypes)
            return emptyContextObject;
          var context = {};
          for (var key in contextTypes)
            context[key] = unmaskedContext[key];
          {
            var name = getComponentNameFromType(type) || "Unknown";
            checkPropTypes(contextTypes, context, "context", name);
          }
          return context;
        }
      }
      function processChildContext(instance, type, parentContext, childContextTypes) {
        {
          if (typeof instance.getChildContext != "function") {
            {
              var componentName = getComponentNameFromType(type) || "Unknown";
              warnedAboutMissingGetChildContext[componentName] || (warnedAboutMissingGetChildContext[componentName] = !0, error("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName));
            }
            return parentContext;
          }
          var childContext = instance.getChildContext();
          for (var contextKey in childContext)
            if (!(contextKey in childContextTypes))
              throw new Error((getComponentNameFromType(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
          {
            var name = getComponentNameFromType(type) || "Unknown";
            checkPropTypes(childContextTypes, childContext, "child context", name);
          }
          return assign({}, parentContext, childContext);
        }
      }
      var rendererSigil;
      rendererSigil = {};
      var rootContextSnapshot = null, currentActiveSnapshot = null;
      function popNode(prev) {
        prev.context._currentValue2 = prev.parentValue;
      }
      function pushNode(next) {
        next.context._currentValue2 = next.value;
      }
      function popToNearestCommonAncestor(prev, next) {
        if (prev !== next) {
          popNode(prev);
          var parentPrev = prev.parent, parentNext = next.parent;
          if (parentPrev === null) {
            if (parentNext !== null)
              throw new Error("The stacks must reach the root at the same time. This is a bug in React.");
          } else {
            if (parentNext === null)
              throw new Error("The stacks must reach the root at the same time. This is a bug in React.");
            popToNearestCommonAncestor(parentPrev, parentNext);
          }
          pushNode(next);
        }
      }
      function popAllPrevious(prev) {
        popNode(prev);
        var parentPrev = prev.parent;
        parentPrev !== null && popAllPrevious(parentPrev);
      }
      function pushAllNext(next) {
        var parentNext = next.parent;
        parentNext !== null && pushAllNext(parentNext), pushNode(next);
      }
      function popPreviousToCommonLevel(prev, next) {
        popNode(prev);
        var parentPrev = prev.parent;
        if (parentPrev === null)
          throw new Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
        parentPrev.depth === next.depth ? popToNearestCommonAncestor(parentPrev, next) : popPreviousToCommonLevel(parentPrev, next);
      }
      function popNextToCommonLevel(prev, next) {
        var parentNext = next.parent;
        if (parentNext === null)
          throw new Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
        prev.depth === parentNext.depth ? popToNearestCommonAncestor(prev, parentNext) : popNextToCommonLevel(prev, parentNext), pushNode(next);
      }
      function switchContext(newSnapshot) {
        var prev = currentActiveSnapshot, next = newSnapshot;
        prev !== next && (prev === null ? pushAllNext(next) : next === null ? popAllPrevious(prev) : prev.depth === next.depth ? popToNearestCommonAncestor(prev, next) : prev.depth > next.depth ? popPreviousToCommonLevel(prev, next) : popNextToCommonLevel(prev, next), currentActiveSnapshot = next);
      }
      function pushProvider(context, nextValue) {
        var prevValue;
        prevValue = context._currentValue2, context._currentValue2 = nextValue, context._currentRenderer2 !== void 0 && context._currentRenderer2 !== null && context._currentRenderer2 !== rendererSigil && error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported."), context._currentRenderer2 = rendererSigil;
        var prevNode = currentActiveSnapshot, newNode = {
          parent: prevNode,
          depth: prevNode === null ? 0 : prevNode.depth + 1,
          context,
          parentValue: prevValue,
          value: nextValue
        };
        return currentActiveSnapshot = newNode, newNode;
      }
      function popProvider(context) {
        var prevSnapshot = currentActiveSnapshot;
        if (prevSnapshot === null)
          throw new Error("Tried to pop a Context at the root of the app. This is a bug in React.");
        prevSnapshot.context !== context && error("The parent context is not the expected context. This is probably a bug in React.");
        {
          var _value = prevSnapshot.parentValue;
          _value === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED ? prevSnapshot.context._currentValue2 = prevSnapshot.context._defaultValue : prevSnapshot.context._currentValue2 = _value, context._currentRenderer2 !== void 0 && context._currentRenderer2 !== null && context._currentRenderer2 !== rendererSigil && error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported."), context._currentRenderer2 = rendererSigil;
        }
        return currentActiveSnapshot = prevSnapshot.parent;
      }
      function getActiveContext() {
        return currentActiveSnapshot;
      }
      function readContext(context) {
        var value = context._currentValue2;
        return value;
      }
      function get(key) {
        return key._reactInternals;
      }
      function set(key, value) {
        key._reactInternals = value;
      }
      var didWarnAboutNoopUpdateForComponent = {}, didWarnAboutDeprecatedWillMount = {}, didWarnAboutUninitializedState, didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate, didWarnAboutLegacyLifecyclesAndDerivedState, didWarnAboutUndefinedDerivedState, warnOnUndefinedDerivedState, warnOnInvalidCallback, didWarnAboutDirectlyAssigningPropsToState, didWarnAboutContextTypeAndContextTypes, didWarnAboutInvalidateContextType;
      {
        didWarnAboutUninitializedState = /* @__PURE__ */ new Set(), didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = /* @__PURE__ */ new Set(), didWarnAboutLegacyLifecyclesAndDerivedState = /* @__PURE__ */ new Set(), didWarnAboutDirectlyAssigningPropsToState = /* @__PURE__ */ new Set(), didWarnAboutUndefinedDerivedState = /* @__PURE__ */ new Set(), didWarnAboutContextTypeAndContextTypes = /* @__PURE__ */ new Set(), didWarnAboutInvalidateContextType = /* @__PURE__ */ new Set();
        var didWarnOnInvalidCallback = /* @__PURE__ */ new Set();
        warnOnInvalidCallback = function(callback, callerName) {
          if (!(callback === null || typeof callback == "function")) {
            var key = callerName + "_" + callback;
            didWarnOnInvalidCallback.has(key) || (didWarnOnInvalidCallback.add(key), error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback));
          }
        }, warnOnUndefinedDerivedState = function(type, partialState) {
          if (partialState === void 0) {
            var componentName = getComponentNameFromType(type) || "Component";
            didWarnAboutUndefinedDerivedState.has(componentName) || (didWarnAboutUndefinedDerivedState.add(componentName), error("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName));
          }
        };
      }
      function warnNoop(publicInstance, callerName) {
        {
          var _constructor = publicInstance.constructor, componentName = _constructor && getComponentNameFromType(_constructor) || "ReactClass", warningKey = componentName + "." + callerName;
          if (didWarnAboutNoopUpdateForComponent[warningKey])
            return;
          error(`%s(...): Can only update a mounting component. This usually means you called %s() outside componentWillMount() on the server. This is a no-op.

Please check the code for the %s component.`, callerName, callerName, componentName), didWarnAboutNoopUpdateForComponent[warningKey] = !0;
        }
      }
      var classComponentUpdater = {
        isMounted: function(inst) {
          return !1;
        },
        enqueueSetState: function(inst, payload, callback) {
          var internals = get(inst);
          internals.queue === null ? warnNoop(inst, "setState") : (internals.queue.push(payload), callback != null && warnOnInvalidCallback(callback, "setState"));
        },
        enqueueReplaceState: function(inst, payload, callback) {
          var internals = get(inst);
          internals.replace = !0, internals.queue = [payload], callback != null && warnOnInvalidCallback(callback, "setState");
        },
        enqueueForceUpdate: function(inst, callback) {
          var internals = get(inst);
          internals.queue === null ? warnNoop(inst, "forceUpdate") : callback != null && warnOnInvalidCallback(callback, "setState");
        }
      };
      function applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, prevState, nextProps) {
        var partialState = getDerivedStateFromProps(nextProps, prevState);
        warnOnUndefinedDerivedState(ctor, partialState);
        var newState = partialState == null ? prevState : assign({}, prevState, partialState);
        return newState;
      }
      function constructClassInstance(ctor, props, maskedLegacyContext) {
        var context = emptyContextObject, contextType = ctor.contextType;
        if ("contextType" in ctor) {
          var isValid = (
            // Allow null for conditional declaration
            contextType === null || contextType !== void 0 && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === void 0
          );
          if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
            didWarnAboutInvalidateContextType.add(ctor);
            var addendum = "";
            contextType === void 0 ? addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file." : typeof contextType != "object" ? addendum = " However, it is set to a " + typeof contextType + "." : contextType.$$typeof === REACT_PROVIDER_TYPE ? addendum = " Did you accidentally pass the Context.Provider instead?" : contextType._context !== void 0 ? addendum = " Did you accidentally pass the Context.Consumer instead?" : addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.", error("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(ctor) || "Component", addendum);
          }
        }
        typeof contextType == "object" && contextType !== null ? context = readContext(contextType) : context = maskedLegacyContext;
        var instance = new ctor(props, context);
        {
          if (typeof ctor.getDerivedStateFromProps == "function" && (instance.state === null || instance.state === void 0)) {
            var componentName = getComponentNameFromType(ctor) || "Component";
            didWarnAboutUninitializedState.has(componentName) || (didWarnAboutUninitializedState.add(componentName), error("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? "null" : "undefined", componentName));
          }
          if (typeof ctor.getDerivedStateFromProps == "function" || typeof instance.getSnapshotBeforeUpdate == "function") {
            var foundWillMountName = null, foundWillReceivePropsName = null, foundWillUpdateName = null;
            if (typeof instance.componentWillMount == "function" && instance.componentWillMount.__suppressDeprecationWarning !== !0 ? foundWillMountName = "componentWillMount" : typeof instance.UNSAFE_componentWillMount == "function" && (foundWillMountName = "UNSAFE_componentWillMount"), typeof instance.componentWillReceiveProps == "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== !0 ? foundWillReceivePropsName = "componentWillReceiveProps" : typeof instance.UNSAFE_componentWillReceiveProps == "function" && (foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps"), typeof instance.componentWillUpdate == "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== !0 ? foundWillUpdateName = "componentWillUpdate" : typeof instance.UNSAFE_componentWillUpdate == "function" && (foundWillUpdateName = "UNSAFE_componentWillUpdate"), foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
              var _componentName = getComponentNameFromType(ctor) || "Component", newApiName = typeof ctor.getDerivedStateFromProps == "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
              didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName) || (didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName), error(`Unsafe legacy lifecycles will not be called for components using new component APIs.

%s uses %s but also contains the following legacy lifecycles:%s%s%s

The above lifecycles should be removed. Learn more about this warning here:
https://reactjs.org/link/unsafe-component-lifecycles`, _componentName, newApiName, foundWillMountName !== null ? `
  ` + foundWillMountName : "", foundWillReceivePropsName !== null ? `
  ` + foundWillReceivePropsName : "", foundWillUpdateName !== null ? `
  ` + foundWillUpdateName : ""));
            }
          }
        }
        return instance;
      }
      function checkClassInstance(instance, ctor, newProps) {
        {
          var name = getComponentNameFromType(ctor) || "Component", renderPresent = instance.render;
          renderPresent || (ctor.prototype && typeof ctor.prototype.render == "function" ? error("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name) : error("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name)), instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state && error("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name), instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved && error("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name), instance.propTypes && error("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name), instance.contextType && error("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name), instance.contextTypes && error("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name), ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor) && (didWarnAboutContextTypeAndContextTypes.add(ctor), error("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name)), typeof instance.componentShouldUpdate == "function" && error("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name), ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate < "u" && error("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(ctor) || "A pure component"), typeof instance.componentDidUnmount == "function" && error("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name), typeof instance.componentDidReceiveProps == "function" && error("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name), typeof instance.componentWillRecieveProps == "function" && error("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name), typeof instance.UNSAFE_componentWillRecieveProps == "function" && error("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
          var hasMutatedProps = instance.props !== newProps;
          instance.props !== void 0 && hasMutatedProps && error("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name), instance.defaultProps && error("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name), typeof instance.getSnapshotBeforeUpdate == "function" && typeof instance.componentDidUpdate != "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor) && (didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor), error("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(ctor))), typeof instance.getDerivedStateFromProps == "function" && error("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name), typeof instance.getDerivedStateFromError == "function" && error("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name), typeof ctor.getSnapshotBeforeUpdate == "function" && error("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
          var _state = instance.state;
          _state && (typeof _state != "object" || isArray(_state)) && error("%s.state: must be set to an object or null", name), typeof instance.getChildContext == "function" && typeof ctor.childContextTypes != "object" && error("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
        }
      }
      function callComponentWillMount(type, instance) {
        var oldState = instance.state;
        if (typeof instance.componentWillMount == "function") {
          if (instance.componentWillMount.__suppressDeprecationWarning !== !0) {
            var componentName = getComponentNameFromType(type) || "Unknown";
            didWarnAboutDeprecatedWillMount[componentName] || (warn(
              // keep this warning in sync with ReactStrictModeWarning.js
              `componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code from componentWillMount to componentDidMount (preferred in most cases) or the constructor.

Please update the following components: %s`,
              componentName
            ), didWarnAboutDeprecatedWillMount[componentName] = !0);
          }
          instance.componentWillMount();
        }
        typeof instance.UNSAFE_componentWillMount == "function" && instance.UNSAFE_componentWillMount(), oldState !== instance.state && (error("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromType(type) || "Component"), classComponentUpdater.enqueueReplaceState(instance, instance.state, null));
      }
      function processUpdateQueue(internalInstance, inst, props, maskedLegacyContext) {
        if (internalInstance.queue !== null && internalInstance.queue.length > 0) {
          var oldQueue = internalInstance.queue, oldReplace = internalInstance.replace;
          if (internalInstance.queue = null, internalInstance.replace = !1, oldReplace && oldQueue.length === 1)
            inst.state = oldQueue[0];
          else {
            for (var nextState = oldReplace ? oldQueue[0] : inst.state, dontMutate = !0, i7 = oldReplace ? 1 : 0; i7 < oldQueue.length; i7++) {
              var partial = oldQueue[i7], partialState = typeof partial == "function" ? partial.call(inst, nextState, props, maskedLegacyContext) : partial;
              partialState != null && (dontMutate ? (dontMutate = !1, nextState = assign({}, nextState, partialState)) : assign(nextState, partialState));
            }
            inst.state = nextState;
          }
        } else
          internalInstance.queue = null;
      }
      function mountClassInstance(instance, ctor, newProps, maskedLegacyContext) {
        checkClassInstance(instance, ctor, newProps);
        var initialState = instance.state !== void 0 ? instance.state : null;
        instance.updater = classComponentUpdater, instance.props = newProps, instance.state = initialState;
        var internalInstance = {
          queue: [],
          replace: !1
        };
        set(instance, internalInstance);
        var contextType = ctor.contextType;
        if (typeof contextType == "object" && contextType !== null ? instance.context = readContext(contextType) : instance.context = maskedLegacyContext, instance.state === newProps) {
          var componentName = getComponentNameFromType(ctor) || "Component";
          didWarnAboutDirectlyAssigningPropsToState.has(componentName) || (didWarnAboutDirectlyAssigningPropsToState.add(componentName), error("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName));
        }
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        typeof getDerivedStateFromProps == "function" && (instance.state = applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, initialState, newProps)), typeof ctor.getDerivedStateFromProps != "function" && typeof instance.getSnapshotBeforeUpdate != "function" && (typeof instance.UNSAFE_componentWillMount == "function" || typeof instance.componentWillMount == "function") && (callComponentWillMount(ctor, instance), processUpdateQueue(internalInstance, instance, newProps, maskedLegacyContext));
      }
      var emptyTreeContext = {
        id: 1,
        overflow: ""
      };
      function getTreeId(context) {
        var overflow = context.overflow, idWithLeadingBit = context.id, id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
        return id.toString(32) + overflow;
      }
      function pushTreeContext(baseContext, totalChildren, index3) {
        var baseIdWithLeadingBit = baseContext.id, baseOverflow = baseContext.overflow, baseLength = getBitLength(baseIdWithLeadingBit) - 1, baseId = baseIdWithLeadingBit & ~(1 << baseLength), slot = index3 + 1, length2 = getBitLength(totalChildren) + baseLength;
        if (length2 > 30) {
          var numberOfOverflowBits = baseLength - baseLength % 5, newOverflowBits = (1 << numberOfOverflowBits) - 1, newOverflow = (baseId & newOverflowBits).toString(32), restOfBaseId = baseId >> numberOfOverflowBits, restOfBaseLength = baseLength - numberOfOverflowBits, restOfLength = getBitLength(totalChildren) + restOfBaseLength, restOfNewBits = slot << restOfBaseLength, id = restOfNewBits | restOfBaseId, overflow = newOverflow + baseOverflow;
          return {
            id: 1 << restOfLength | id,
            overflow
          };
        } else {
          var newBits = slot << baseLength, _id = newBits | baseId, _overflow = baseOverflow;
          return {
            id: 1 << length2 | _id,
            overflow: _overflow
          };
        }
      }
      function getBitLength(number) {
        return 32 - clz32(number);
      }
      function getLeadingBit(id) {
        return 1 << getBitLength(id) - 1;
      }
      var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback, log = Math.log, LN2 = Math.LN2;
      function clz32Fallback(x5) {
        var asUint = x5 >>> 0;
        return asUint === 0 ? 32 : 31 - (log(asUint) / LN2 | 0) | 0;
      }
      function is(x5, y6) {
        return x5 === y6 && (x5 !== 0 || 1 / x5 === 1 / y6) || x5 !== x5 && y6 !== y6;
      }
      var objectIs = typeof Object.is == "function" ? Object.is : is, currentlyRenderingComponent = null, currentlyRenderingTask = null, firstWorkInProgressHook = null, workInProgressHook = null, isReRender = !1, didScheduleRenderPhaseUpdate = !1, localIdCounter = 0, renderPhaseUpdates = null, numberOfReRenders = 0, RE_RENDER_LIMIT = 25, isInHookUserCodeInDev = !1, currentHookNameInDev;
      function resolveCurrentlyRenderingComponent() {
        if (currentlyRenderingComponent === null)
          throw new Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
        return isInHookUserCodeInDev && error("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks"), currentlyRenderingComponent;
      }
      function areHookInputsEqual(nextDeps, prevDeps) {
        if (prevDeps === null)
          return error("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev), !1;
        nextDeps.length !== prevDeps.length && error(`The final argument passed to %s changed size between renders. The order and size of this array must remain constant.

Previous: %s
Incoming: %s`, currentHookNameInDev, "[" + nextDeps.join(", ") + "]", "[" + prevDeps.join(", ") + "]");
        for (var i7 = 0; i7 < prevDeps.length && i7 < nextDeps.length; i7++)
          if (!objectIs(nextDeps[i7], prevDeps[i7]))
            return !1;
        return !0;
      }
      function createHook() {
        if (numberOfReRenders > 0)
          throw new Error("Rendered more hooks than during the previous render");
        return {
          memoizedState: null,
          queue: null,
          next: null
        };
      }
      function createWorkInProgressHook() {
        return workInProgressHook === null ? firstWorkInProgressHook === null ? (isReRender = !1, firstWorkInProgressHook = workInProgressHook = createHook()) : (isReRender = !0, workInProgressHook = firstWorkInProgressHook) : workInProgressHook.next === null ? (isReRender = !1, workInProgressHook = workInProgressHook.next = createHook()) : (isReRender = !0, workInProgressHook = workInProgressHook.next), workInProgressHook;
      }
      function prepareToUseHooks(task, componentIdentity) {
        currentlyRenderingComponent = componentIdentity, currentlyRenderingTask = task, isInHookUserCodeInDev = !1, localIdCounter = 0;
      }
      function finishHooks(Component2, props, children, refOrContext) {
        for (; didScheduleRenderPhaseUpdate; )
          didScheduleRenderPhaseUpdate = !1, localIdCounter = 0, numberOfReRenders += 1, workInProgressHook = null, children = Component2(props, refOrContext);
        return resetHooksState(), children;
      }
      function checkDidRenderIdHook() {
        var didRenderIdHook = localIdCounter !== 0;
        return didRenderIdHook;
      }
      function resetHooksState() {
        isInHookUserCodeInDev = !1, currentlyRenderingComponent = null, currentlyRenderingTask = null, didScheduleRenderPhaseUpdate = !1, firstWorkInProgressHook = null, numberOfReRenders = 0, renderPhaseUpdates = null, workInProgressHook = null;
      }
      function readContext$1(context) {
        return isInHookUserCodeInDev && error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."), readContext(context);
      }
      function useContext7(context) {
        return currentHookNameInDev = "useContext", resolveCurrentlyRenderingComponent(), readContext(context);
      }
      function basicStateReducer(state, action12) {
        return typeof action12 == "function" ? action12(state) : action12;
      }
      function useState22(initialState) {
        return currentHookNameInDev = "useState", useReducer(
          basicStateReducer,
          // useReducer has a special case to support lazy useState initializers
          initialState
        );
      }
      function useReducer(reducer, initialArg, init) {
        if (reducer !== basicStateReducer && (currentHookNameInDev = "useReducer"), currentlyRenderingComponent = resolveCurrentlyRenderingComponent(), workInProgressHook = createWorkInProgressHook(), isReRender) {
          var queue = workInProgressHook.queue, dispatch = queue.dispatch;
          if (renderPhaseUpdates !== null) {
            var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
            if (firstRenderPhaseUpdate !== void 0) {
              renderPhaseUpdates.delete(queue);
              var newState = workInProgressHook.memoizedState, update = firstRenderPhaseUpdate;
              do {
                var action12 = update.action;
                isInHookUserCodeInDev = !0, newState = reducer(newState, action12), isInHookUserCodeInDev = !1, update = update.next;
              } while (update !== null);
              return workInProgressHook.memoizedState = newState, [newState, dispatch];
            }
          }
          return [workInProgressHook.memoizedState, dispatch];
        } else {
          isInHookUserCodeInDev = !0;
          var initialState;
          reducer === basicStateReducer ? initialState = typeof initialArg == "function" ? initialArg() : initialArg : initialState = init !== void 0 ? init(initialArg) : initialArg, isInHookUserCodeInDev = !1, workInProgressHook.memoizedState = initialState;
          var _queue = workInProgressHook.queue = {
            last: null,
            dispatch: null
          }, _dispatch = _queue.dispatch = dispatchAction.bind(null, currentlyRenderingComponent, _queue);
          return [workInProgressHook.memoizedState, _dispatch];
        }
      }
      function useMemo10(nextCreate, deps) {
        currentlyRenderingComponent = resolveCurrentlyRenderingComponent(), workInProgressHook = createWorkInProgressHook();
        var nextDeps = deps === void 0 ? null : deps;
        if (workInProgressHook !== null) {
          var prevState = workInProgressHook.memoizedState;
          if (prevState !== null && nextDeps !== null) {
            var prevDeps = prevState[1];
            if (areHookInputsEqual(nextDeps, prevDeps))
              return prevState[0];
          }
        }
        isInHookUserCodeInDev = !0;
        var nextValue = nextCreate();
        return isInHookUserCodeInDev = !1, workInProgressHook.memoizedState = [nextValue, nextDeps], nextValue;
      }
      function useRef9(initialValue) {
        currentlyRenderingComponent = resolveCurrentlyRenderingComponent(), workInProgressHook = createWorkInProgressHook();
        var previousRef = workInProgressHook.memoizedState;
        if (previousRef === null) {
          var ref = {
            current: initialValue
          };
          return Object.seal(ref), workInProgressHook.memoizedState = ref, ref;
        } else
          return previousRef;
      }
      function useLayoutEffect3(create, inputs) {
        currentHookNameInDev = "useLayoutEffect", error("useLayoutEffect does nothing on the server, because its effect cannot be encoded into the server renderer's output format. This will lead to a mismatch between the initial, non-hydrated UI and the intended UI. To avoid this, useLayoutEffect should only be used in components that render exclusively on the client. See https://reactjs.org/link/uselayouteffect-ssr for common fixes.");
      }
      function dispatchAction(componentIdentity, queue, action12) {
        if (numberOfReRenders >= RE_RENDER_LIMIT)
          throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
        if (componentIdentity === currentlyRenderingComponent) {
          didScheduleRenderPhaseUpdate = !0;
          var update = {
            action: action12,
            next: null
          };
          renderPhaseUpdates === null && (renderPhaseUpdates = /* @__PURE__ */ new Map());
          var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
          if (firstRenderPhaseUpdate === void 0)
            renderPhaseUpdates.set(queue, update);
          else {
            for (var lastRenderPhaseUpdate = firstRenderPhaseUpdate; lastRenderPhaseUpdate.next !== null; )
              lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
            lastRenderPhaseUpdate.next = update;
          }
        }
      }
      function useCallback4(callback, deps) {
        return useMemo10(function() {
          return callback;
        }, deps);
      }
      function useMutableSource(source, getSnapshot, subscribe) {
        return resolveCurrentlyRenderingComponent(), getSnapshot(source._source);
      }
      function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        if (getServerSnapshot === void 0)
          throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
        return getServerSnapshot();
      }
      function useDeferredValue(value) {
        return resolveCurrentlyRenderingComponent(), value;
      }
      function unsupportedStartTransition() {
        throw new Error("startTransition cannot be called during server rendering.");
      }
      function useTransition2() {
        return resolveCurrentlyRenderingComponent(), [!1, unsupportedStartTransition];
      }
      function useId() {
        var task = currentlyRenderingTask, treeId = getTreeId(task.treeContext), responseState = currentResponseState;
        if (responseState === null)
          throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component.");
        var localId = localIdCounter++;
        return makeId(responseState, treeId, localId);
      }
      function noop2() {
      }
      var Dispatcher = {
        readContext: readContext$1,
        useContext: useContext7,
        useMemo: useMemo10,
        useReducer,
        useRef: useRef9,
        useState: useState22,
        useInsertionEffect: noop2,
        useLayoutEffect: useLayoutEffect3,
        useCallback: useCallback4,
        // useImperativeHandle is not run in the server environment
        useImperativeHandle: noop2,
        // Effects are not run in the server environment.
        useEffect: noop2,
        // Debugging effect
        useDebugValue: noop2,
        useDeferredValue,
        useTransition: useTransition2,
        useId,
        // Subscriptions are not setup in a server environment.
        useMutableSource,
        useSyncExternalStore
      }, currentResponseState = null;
      function setCurrentResponseState(responseState) {
        currentResponseState = responseState;
      }
      function getStackByComponentStackNode(componentStack) {
        try {
          var info = "", node = componentStack;
          do {
            switch (node.tag) {
              case 0:
                info += describeBuiltInComponentFrame(node.type, null, null);
                break;
              case 1:
                info += describeFunctionComponentFrame(node.type, null, null);
                break;
              case 2:
                info += describeClassComponentFrame(node.type, null, null);
                break;
            }
            node = node.parent;
          } while (node);
          return info;
        } catch (x5) {
          return `
Error generating stack: ` + x5.message + `
` + x5.stack;
        }
      }
      var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame, PENDING = 0, COMPLETED = 1, FLUSHED = 2, ABORTED = 3, ERRORED = 4, OPEN = 0, CLOSING = 1, CLOSED = 2, DEFAULT_PROGRESSIVE_CHUNK_SIZE = 12800;
      function defaultErrorHandler(error2) {
        return console.error(error2), null;
      }
      function noop$1() {
      }
      function createRequest(children, responseState, rootFormatContext, progressiveChunkSize, onError2, onAllReady, onShellReady, onShellError, onFatalError) {
        var pingedTasks = [], abortSet = /* @__PURE__ */ new Set(), request = {
          destination: null,
          responseState,
          progressiveChunkSize: progressiveChunkSize === void 0 ? DEFAULT_PROGRESSIVE_CHUNK_SIZE : progressiveChunkSize,
          status: OPEN,
          fatalError: null,
          nextSegmentId: 0,
          allPendingTasks: 0,
          pendingRootTasks: 0,
          completedRootSegment: null,
          abortableTasks: abortSet,
          pingedTasks,
          clientRenderedBoundaries: [],
          completedBoundaries: [],
          partialBoundaries: [],
          onError: onError2 === void 0 ? defaultErrorHandler : onError2,
          onAllReady: onAllReady === void 0 ? noop$1 : onAllReady,
          onShellReady: onShellReady === void 0 ? noop$1 : onShellReady,
          onShellError: onShellError === void 0 ? noop$1 : onShellError,
          onFatalError: onFatalError === void 0 ? noop$1 : onFatalError
        }, rootSegment = createPendingSegment(
          request,
          0,
          null,
          rootFormatContext,
          // Root segments are never embedded in Text on either edge
          !1,
          !1
        );
        rootSegment.parentFlushed = !0;
        var rootTask = createTask(request, children, null, rootSegment, abortSet, emptyContextObject, rootContextSnapshot, emptyTreeContext);
        return pingedTasks.push(rootTask), request;
      }
      function pingTask(request, task) {
        var pingedTasks = request.pingedTasks;
        pingedTasks.push(task), pingedTasks.length === 1 && scheduleWork(function() {
          return performWork(request);
        });
      }
      function createSuspenseBoundary(request, fallbackAbortableTasks) {
        return {
          id: UNINITIALIZED_SUSPENSE_BOUNDARY_ID,
          rootSegmentID: -1,
          parentFlushed: !1,
          pendingTasks: 0,
          forceClientRender: !1,
          completedSegments: [],
          byteSize: 0,
          fallbackAbortableTasks,
          errorDigest: null
        };
      }
      function createTask(request, node, blockedBoundary, blockedSegment, abortSet, legacyContext, context, treeContext) {
        request.allPendingTasks++, blockedBoundary === null ? request.pendingRootTasks++ : blockedBoundary.pendingTasks++;
        var task = {
          node,
          ping: function() {
            return pingTask(request, task);
          },
          blockedBoundary,
          blockedSegment,
          abortSet,
          legacyContext,
          context,
          treeContext
        };
        return task.componentStack = null, abortSet.add(task), task;
      }
      function createPendingSegment(request, index3, boundary, formatContext, lastPushedText, textEmbedded) {
        return {
          status: PENDING,
          id: -1,
          // lazily assigned later
          index: index3,
          parentFlushed: !1,
          chunks: [],
          children: [],
          formatContext,
          boundary,
          lastPushedText,
          textEmbedded
        };
      }
      var currentTaskInDEV = null;
      function getCurrentStackInDEV() {
        return currentTaskInDEV === null || currentTaskInDEV.componentStack === null ? "" : getStackByComponentStackNode(currentTaskInDEV.componentStack);
      }
      function pushBuiltInComponentStackInDEV(task, type) {
        task.componentStack = {
          tag: 0,
          parent: task.componentStack,
          type
        };
      }
      function pushFunctionComponentStackInDEV(task, type) {
        task.componentStack = {
          tag: 1,
          parent: task.componentStack,
          type
        };
      }
      function pushClassComponentStackInDEV(task, type) {
        task.componentStack = {
          tag: 2,
          parent: task.componentStack,
          type
        };
      }
      function popComponentStackInDEV(task) {
        task.componentStack === null ? error("Unexpectedly popped too many stack frames. This is a bug in React.") : task.componentStack = task.componentStack.parent;
      }
      var lastBoundaryErrorComponentStackDev = null;
      function captureBoundaryErrorDetailsDev(boundary, error2) {
        {
          var errorMessage;
          typeof error2 == "string" ? errorMessage = error2 : error2 && typeof error2.message == "string" ? errorMessage = error2.message : errorMessage = String(error2);
          var errorComponentStack = lastBoundaryErrorComponentStackDev || getCurrentStackInDEV();
          lastBoundaryErrorComponentStackDev = null, boundary.errorMessage = errorMessage, boundary.errorComponentStack = errorComponentStack;
        }
      }
      function logRecoverableError(request, error2) {
        var errorDigest = request.onError(error2);
        if (errorDigest != null && typeof errorDigest != "string")
          throw new Error('onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' + typeof errorDigest + '" instead');
        return errorDigest;
      }
      function fatalError(request, error2) {
        var onShellError = request.onShellError;
        onShellError(error2);
        var onFatalError = request.onFatalError;
        onFatalError(error2), request.destination !== null ? (request.status = CLOSED, closeWithError(request.destination, error2)) : (request.status = CLOSING, request.fatalError = error2);
      }
      function renderSuspenseBoundary(request, task, props) {
        pushBuiltInComponentStackInDEV(task, "Suspense");
        var parentBoundary = task.blockedBoundary, parentSegment = task.blockedSegment, fallback = props.fallback, content = props.children, fallbackAbortSet = /* @__PURE__ */ new Set(), newBoundary = createSuspenseBoundary(request, fallbackAbortSet), insertionIndex = parentSegment.chunks.length, boundarySegment = createPendingSegment(
          request,
          insertionIndex,
          newBoundary,
          parentSegment.formatContext,
          // boundaries never require text embedding at their edges because comment nodes bound them
          !1,
          !1
        );
        parentSegment.children.push(boundarySegment), parentSegment.lastPushedText = !1;
        var contentRootSegment = createPendingSegment(
          request,
          0,
          null,
          parentSegment.formatContext,
          // boundaries never require text embedding at their edges because comment nodes bound them
          !1,
          !1
        );
        contentRootSegment.parentFlushed = !0, task.blockedBoundary = newBoundary, task.blockedSegment = contentRootSegment;
        try {
          if (renderNode(request, task, content), pushSegmentFinale$1(contentRootSegment.chunks, request.responseState, contentRootSegment.lastPushedText, contentRootSegment.textEmbedded), contentRootSegment.status = COMPLETED, queueCompletedSegment(newBoundary, contentRootSegment), newBoundary.pendingTasks === 0) {
            popComponentStackInDEV(task);
            return;
          }
        } catch (error2) {
          contentRootSegment.status = ERRORED, newBoundary.forceClientRender = !0, newBoundary.errorDigest = logRecoverableError(request, error2), captureBoundaryErrorDetailsDev(newBoundary, error2);
        } finally {
          task.blockedBoundary = parentBoundary, task.blockedSegment = parentSegment;
        }
        var suspendedFallbackTask = createTask(request, fallback, parentBoundary, boundarySegment, fallbackAbortSet, task.legacyContext, task.context, task.treeContext);
        suspendedFallbackTask.componentStack = task.componentStack, request.pingedTasks.push(suspendedFallbackTask), popComponentStackInDEV(task);
      }
      function renderHostElement(request, task, type, props) {
        pushBuiltInComponentStackInDEV(task, type);
        var segment = task.blockedSegment, children = pushStartInstance(segment.chunks, type, props, request.responseState, segment.formatContext);
        segment.lastPushedText = !1;
        var prevContext = segment.formatContext;
        segment.formatContext = getChildFormatContext(prevContext, type, props), renderNode(request, task, children), segment.formatContext = prevContext, pushEndInstance(segment.chunks, type), segment.lastPushedText = !1, popComponentStackInDEV(task);
      }
      function shouldConstruct$1(Component2) {
        return Component2.prototype && Component2.prototype.isReactComponent;
      }
      function renderWithHooks(request, task, Component2, props, secondArg) {
        var componentIdentity = {};
        prepareToUseHooks(task, componentIdentity);
        var result = Component2(props, secondArg);
        return finishHooks(Component2, props, result, secondArg);
      }
      function finishClassComponent(request, task, instance, Component2, props) {
        var nextChildren = instance.render();
        instance.props !== props && (didWarnAboutReassigningProps || error("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromType(Component2) || "a component"), didWarnAboutReassigningProps = !0);
        {
          var childContextTypes = Component2.childContextTypes;
          if (childContextTypes != null) {
            var previousContext = task.legacyContext, mergedContext = processChildContext(instance, Component2, previousContext, childContextTypes);
            task.legacyContext = mergedContext, renderNodeDestructive(request, task, nextChildren), task.legacyContext = previousContext;
            return;
          }
        }
        renderNodeDestructive(request, task, nextChildren);
      }
      function renderClassComponent(request, task, Component2, props) {
        pushClassComponentStackInDEV(task, Component2);
        var maskedContext = getMaskedContext(Component2, task.legacyContext), instance = constructClassInstance(Component2, props, maskedContext);
        mountClassInstance(instance, Component2, props, maskedContext), finishClassComponent(request, task, instance, Component2, props), popComponentStackInDEV(task);
      }
      var didWarnAboutBadClass = {}, didWarnAboutModulePatternComponent = {}, didWarnAboutContextTypeOnFunctionComponent = {}, didWarnAboutGetDerivedStateOnFunctionComponent = {}, didWarnAboutReassigningProps = !1, didWarnAboutGenerators = !1, didWarnAboutMaps = !1, hasWarnedAboutUsingContextAsConsumer = !1;
      function renderIndeterminateComponent(request, task, Component2, props) {
        var legacyContext;
        if (legacyContext = getMaskedContext(Component2, task.legacyContext), pushFunctionComponentStackInDEV(task, Component2), Component2.prototype && typeof Component2.prototype.render == "function") {
          var componentName = getComponentNameFromType(Component2) || "Unknown";
          didWarnAboutBadClass[componentName] || (error("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName), didWarnAboutBadClass[componentName] = !0);
        }
        var value = renderWithHooks(request, task, Component2, props, legacyContext), hasId = checkDidRenderIdHook();
        if (typeof value == "object" && value !== null && typeof value.render == "function" && value.$$typeof === void 0) {
          var _componentName = getComponentNameFromType(Component2) || "Unknown";
          didWarnAboutModulePatternComponent[_componentName] || (error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName), didWarnAboutModulePatternComponent[_componentName] = !0);
        }
        if (
          // Run these checks in production only if the flag is off.
          // Eventually we'll delete this branch altogether.
          typeof value == "object" && value !== null && typeof value.render == "function" && value.$$typeof === void 0
        ) {
          {
            var _componentName2 = getComponentNameFromType(Component2) || "Unknown";
            didWarnAboutModulePatternComponent[_componentName2] || (error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2), didWarnAboutModulePatternComponent[_componentName2] = !0);
          }
          mountClassInstance(value, Component2, props, legacyContext), finishClassComponent(request, task, value, Component2, props);
        } else if (validateFunctionComponentInDev(Component2), hasId) {
          var prevTreeContext = task.treeContext, totalChildren = 1, index3 = 0;
          task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index3);
          try {
            renderNodeDestructive(request, task, value);
          } finally {
            task.treeContext = prevTreeContext;
          }
        } else
          renderNodeDestructive(request, task, value);
        popComponentStackInDEV(task);
      }
      function validateFunctionComponentInDev(Component2) {
        {
          if (Component2 && Component2.childContextTypes && error("%s(...): childContextTypes cannot be defined on a function component.", Component2.displayName || Component2.name || "Component"), typeof Component2.getDerivedStateFromProps == "function") {
            var _componentName3 = getComponentNameFromType(Component2) || "Unknown";
            didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] || (error("%s: Function components do not support getDerivedStateFromProps.", _componentName3), didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = !0);
          }
          if (typeof Component2.contextType == "object" && Component2.contextType !== null) {
            var _componentName4 = getComponentNameFromType(Component2) || "Unknown";
            didWarnAboutContextTypeOnFunctionComponent[_componentName4] || (error("%s: Function components do not support contextType.", _componentName4), didWarnAboutContextTypeOnFunctionComponent[_componentName4] = !0);
          }
        }
      }
      function resolveDefaultProps(Component2, baseProps) {
        if (Component2 && Component2.defaultProps) {
          var props = assign({}, baseProps), defaultProps = Component2.defaultProps;
          for (var propName in defaultProps)
            props[propName] === void 0 && (props[propName] = defaultProps[propName]);
          return props;
        }
        return baseProps;
      }
      function renderForwardRef(request, task, type, props, ref) {
        pushFunctionComponentStackInDEV(task, type.render);
        var children = renderWithHooks(request, task, type.render, props, ref), hasId = checkDidRenderIdHook();
        if (hasId) {
          var prevTreeContext = task.treeContext, totalChildren = 1, index3 = 0;
          task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index3);
          try {
            renderNodeDestructive(request, task, children);
          } finally {
            task.treeContext = prevTreeContext;
          }
        } else
          renderNodeDestructive(request, task, children);
        popComponentStackInDEV(task);
      }
      function renderMemo(request, task, type, props, ref) {
        var innerType = type.type, resolvedProps = resolveDefaultProps(innerType, props);
        renderElement(request, task, innerType, resolvedProps, ref);
      }
      function renderContextConsumer(request, task, context, props) {
        context._context === void 0 ? context !== context.Consumer && (hasWarnedAboutUsingContextAsConsumer || (hasWarnedAboutUsingContextAsConsumer = !0, error("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?"))) : context = context._context;
        var render = props.children;
        typeof render != "function" && error("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
        var newValue = readContext(context), newChildren = render(newValue);
        renderNodeDestructive(request, task, newChildren);
      }
      function renderContextProvider(request, task, type, props) {
        var context = type._context, value = props.value, children = props.children, prevSnapshot;
        prevSnapshot = task.context, task.context = pushProvider(context, value), renderNodeDestructive(request, task, children), task.context = popProvider(context), prevSnapshot !== task.context && error("Popping the context provider did not return back to the original snapshot. This is a bug in React.");
      }
      function renderLazyComponent(request, task, lazyComponent, props, ref) {
        pushBuiltInComponentStackInDEV(task, "Lazy");
        var payload = lazyComponent._payload, init = lazyComponent._init, Component2 = init(payload), resolvedProps = resolveDefaultProps(Component2, props);
        renderElement(request, task, Component2, resolvedProps, ref), popComponentStackInDEV(task);
      }
      function renderElement(request, task, type, props, ref) {
        if (typeof type == "function")
          if (shouldConstruct$1(type)) {
            renderClassComponent(request, task, type, props);
            return;
          } else {
            renderIndeterminateComponent(request, task, type, props);
            return;
          }
        if (typeof type == "string") {
          renderHostElement(request, task, type, props);
          return;
        }
        switch (type) {
          case REACT_LEGACY_HIDDEN_TYPE:
          case REACT_DEBUG_TRACING_MODE_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_FRAGMENT_TYPE: {
            renderNodeDestructive(request, task, props.children);
            return;
          }
          case REACT_SUSPENSE_LIST_TYPE: {
            pushBuiltInComponentStackInDEV(task, "SuspenseList"), renderNodeDestructive(request, task, props.children), popComponentStackInDEV(task);
            return;
          }
          case REACT_SCOPE_TYPE:
            throw new Error("ReactDOMServer does not yet support scope components.");
          case REACT_SUSPENSE_TYPE: {
            renderSuspenseBoundary(request, task, props);
            return;
          }
        }
        if (typeof type == "object" && type !== null)
          switch (type.$$typeof) {
            case REACT_FORWARD_REF_TYPE: {
              renderForwardRef(request, task, type, props, ref);
              return;
            }
            case REACT_MEMO_TYPE: {
              renderMemo(request, task, type, props, ref);
              return;
            }
            case REACT_PROVIDER_TYPE: {
              renderContextProvider(request, task, type, props);
              return;
            }
            case REACT_CONTEXT_TYPE: {
              renderContextConsumer(request, task, type, props);
              return;
            }
            case REACT_LAZY_TYPE: {
              renderLazyComponent(request, task, type, props);
              return;
            }
          }
        var info = "";
        throw (type === void 0 || typeof type == "object" && type !== null && Object.keys(type).length === 0) && (info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports."), new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (type == null ? type : typeof type) + "." + info));
      }
      function validateIterable(iterable, iteratorFn) {
        typeof Symbol == "function" && // $FlowFixMe Flow doesn't know about toStringTag
        iterable[Symbol.toStringTag] === "Generator" && (didWarnAboutGenerators || error("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers."), didWarnAboutGenerators = !0), iterable.entries === iteratorFn && (didWarnAboutMaps || error("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), didWarnAboutMaps = !0);
      }
      function renderNodeDestructive(request, task, node) {
        try {
          return renderNodeDestructiveImpl(request, task, node);
        } catch (x5) {
          throw typeof x5 == "object" && x5 !== null && typeof x5.then == "function" || (lastBoundaryErrorComponentStackDev = lastBoundaryErrorComponentStackDev !== null ? lastBoundaryErrorComponentStackDev : getCurrentStackInDEV()), x5;
        }
      }
      function renderNodeDestructiveImpl(request, task, node) {
        if (task.node = node, typeof node == "object" && node !== null) {
          switch (node.$$typeof) {
            case REACT_ELEMENT_TYPE: {
              var element = node, type = element.type, props = element.props, ref = element.ref;
              renderElement(request, task, type, props, ref);
              return;
            }
            case REACT_PORTAL_TYPE:
              throw new Error("Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.");
            case REACT_LAZY_TYPE: {
              var lazyNode = node, payload = lazyNode._payload, init = lazyNode._init, resolvedNode;
              try {
                resolvedNode = init(payload);
              } catch (x5) {
                throw typeof x5 == "object" && x5 !== null && typeof x5.then == "function" && pushBuiltInComponentStackInDEV(task, "Lazy"), x5;
              }
              renderNodeDestructive(request, task, resolvedNode);
              return;
            }
          }
          if (isArray(node)) {
            renderChildrenArray(request, task, node);
            return;
          }
          var iteratorFn = getIteratorFn(node);
          if (iteratorFn) {
            validateIterable(node, iteratorFn);
            var iterator = iteratorFn.call(node);
            if (iterator) {
              var step = iterator.next();
              if (!step.done) {
                var children = [];
                do
                  children.push(step.value), step = iterator.next();
                while (!step.done);
                renderChildrenArray(request, task, children);
                return;
              }
              return;
            }
          }
          var childString = Object.prototype.toString.call(node);
          throw new Error("Objects are not valid as a React child (found: " + (childString === "[object Object]" ? "object with keys {" + Object.keys(node).join(", ") + "}" : childString) + "). If you meant to render a collection of children, use an array instead.");
        }
        if (typeof node == "string") {
          var segment = task.blockedSegment;
          segment.lastPushedText = pushTextInstance$1(task.blockedSegment.chunks, node, request.responseState, segment.lastPushedText);
          return;
        }
        if (typeof node == "number") {
          var _segment = task.blockedSegment;
          _segment.lastPushedText = pushTextInstance$1(task.blockedSegment.chunks, "" + node, request.responseState, _segment.lastPushedText);
          return;
        }
        typeof node == "function" && error("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
      }
      function renderChildrenArray(request, task, children) {
        for (var totalChildren = children.length, i7 = 0; i7 < totalChildren; i7++) {
          var prevTreeContext = task.treeContext;
          task.treeContext = pushTreeContext(prevTreeContext, totalChildren, i7);
          try {
            renderNode(request, task, children[i7]);
          } finally {
            task.treeContext = prevTreeContext;
          }
        }
      }
      function spawnNewSuspendedTask(request, task, x5) {
        var segment = task.blockedSegment, insertionIndex = segment.chunks.length, newSegment = createPendingSegment(
          request,
          insertionIndex,
          null,
          segment.formatContext,
          // Adopt the parent segment's leading text embed
          segment.lastPushedText,
          // Assume we are text embedded at the trailing edge
          !0
        );
        segment.children.push(newSegment), segment.lastPushedText = !1;
        var newTask = createTask(request, task.node, task.blockedBoundary, newSegment, task.abortSet, task.legacyContext, task.context, task.treeContext);
        task.componentStack !== null && (newTask.componentStack = task.componentStack.parent);
        var ping = newTask.ping;
        x5.then(ping, ping);
      }
      function renderNode(request, task, node) {
        var previousFormatContext = task.blockedSegment.formatContext, previousLegacyContext = task.legacyContext, previousContext = task.context, previousComponentStack = null;
        previousComponentStack = task.componentStack;
        try {
          return renderNodeDestructive(request, task, node);
        } catch (x5) {
          if (resetHooksState(), typeof x5 == "object" && x5 !== null && typeof x5.then == "function") {
            spawnNewSuspendedTask(request, task, x5), task.blockedSegment.formatContext = previousFormatContext, task.legacyContext = previousLegacyContext, task.context = previousContext, switchContext(previousContext), task.componentStack = previousComponentStack;
            return;
          } else
            throw task.blockedSegment.formatContext = previousFormatContext, task.legacyContext = previousLegacyContext, task.context = previousContext, switchContext(previousContext), task.componentStack = previousComponentStack, x5;
        }
      }
      function erroredTask(request, boundary, segment, error2) {
        var errorDigest = logRecoverableError(request, error2);
        if (boundary === null ? fatalError(request, error2) : (boundary.pendingTasks--, boundary.forceClientRender || (boundary.forceClientRender = !0, boundary.errorDigest = errorDigest, captureBoundaryErrorDetailsDev(boundary, error2), boundary.parentFlushed && request.clientRenderedBoundaries.push(boundary))), request.allPendingTasks--, request.allPendingTasks === 0) {
          var onAllReady = request.onAllReady;
          onAllReady();
        }
      }
      function abortTaskSoft(task) {
        var request = this, boundary = task.blockedBoundary, segment = task.blockedSegment;
        segment.status = ABORTED, finishedTask(request, boundary, segment);
      }
      function abortTask(task, request, reason) {
        var boundary = task.blockedBoundary, segment = task.blockedSegment;
        if (segment.status = ABORTED, boundary === null)
          request.allPendingTasks--, request.status !== CLOSED && (request.status = CLOSED, request.destination !== null && close(request.destination));
        else {
          if (boundary.pendingTasks--, !boundary.forceClientRender) {
            boundary.forceClientRender = !0;
            var _error = reason === void 0 ? new Error("The render was aborted by the server without a reason.") : reason;
            boundary.errorDigest = request.onError(_error);
            {
              var errorPrefix = "The server did not finish this Suspense boundary: ";
              _error && typeof _error.message == "string" ? _error = errorPrefix + _error.message : _error = errorPrefix + String(_error);
              var previousTaskInDev = currentTaskInDEV;
              currentTaskInDEV = task;
              try {
                captureBoundaryErrorDetailsDev(boundary, _error);
              } finally {
                currentTaskInDEV = previousTaskInDev;
              }
            }
            boundary.parentFlushed && request.clientRenderedBoundaries.push(boundary);
          }
          if (boundary.fallbackAbortableTasks.forEach(function(fallbackTask) {
            return abortTask(fallbackTask, request, reason);
          }), boundary.fallbackAbortableTasks.clear(), request.allPendingTasks--, request.allPendingTasks === 0) {
            var onAllReady = request.onAllReady;
            onAllReady();
          }
        }
      }
      function queueCompletedSegment(boundary, segment) {
        if (segment.chunks.length === 0 && segment.children.length === 1 && segment.children[0].boundary === null) {
          var childSegment = segment.children[0];
          childSegment.id = segment.id, childSegment.parentFlushed = !0, childSegment.status === COMPLETED && queueCompletedSegment(boundary, childSegment);
        } else {
          var completedSegments = boundary.completedSegments;
          completedSegments.push(segment);
        }
      }
      function finishedTask(request, boundary, segment) {
        if (boundary === null) {
          if (segment.parentFlushed) {
            if (request.completedRootSegment !== null)
              throw new Error("There can only be one root segment. This is a bug in React.");
            request.completedRootSegment = segment;
          }
          if (request.pendingRootTasks--, request.pendingRootTasks === 0) {
            request.onShellError = noop$1;
            var onShellReady = request.onShellReady;
            onShellReady();
          }
        } else if (boundary.pendingTasks--, !boundary.forceClientRender) {
          if (boundary.pendingTasks === 0)
            segment.parentFlushed && segment.status === COMPLETED && queueCompletedSegment(boundary, segment), boundary.parentFlushed && request.completedBoundaries.push(boundary), boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request), boundary.fallbackAbortableTasks.clear();
          else if (segment.parentFlushed && segment.status === COMPLETED) {
            queueCompletedSegment(boundary, segment);
            var completedSegments = boundary.completedSegments;
            completedSegments.length === 1 && boundary.parentFlushed && request.partialBoundaries.push(boundary);
          }
        }
        if (request.allPendingTasks--, request.allPendingTasks === 0) {
          var onAllReady = request.onAllReady;
          onAllReady();
        }
      }
      function retryTask(request, task) {
        var segment = task.blockedSegment;
        if (segment.status === PENDING) {
          switchContext(task.context);
          var prevTaskInDEV = null;
          prevTaskInDEV = currentTaskInDEV, currentTaskInDEV = task;
          try {
            renderNodeDestructive(request, task, task.node), pushSegmentFinale$1(segment.chunks, request.responseState, segment.lastPushedText, segment.textEmbedded), task.abortSet.delete(task), segment.status = COMPLETED, finishedTask(request, task.blockedBoundary, segment);
          } catch (x5) {
            if (resetHooksState(), typeof x5 == "object" && x5 !== null && typeof x5.then == "function") {
              var ping = task.ping;
              x5.then(ping, ping);
            } else
              task.abortSet.delete(task), segment.status = ERRORED, erroredTask(request, task.blockedBoundary, segment, x5);
          } finally {
            currentTaskInDEV = prevTaskInDEV;
          }
        }
      }
      function performWork(request) {
        if (request.status !== CLOSED) {
          var prevContext = getActiveContext(), prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = Dispatcher;
          var prevGetCurrentStackImpl;
          prevGetCurrentStackImpl = ReactDebugCurrentFrame$1.getCurrentStack, ReactDebugCurrentFrame$1.getCurrentStack = getCurrentStackInDEV;
          var prevResponseState = currentResponseState;
          setCurrentResponseState(request.responseState);
          try {
            var pingedTasks = request.pingedTasks, i7;
            for (i7 = 0; i7 < pingedTasks.length; i7++) {
              var task = pingedTasks[i7];
              retryTask(request, task);
            }
            pingedTasks.splice(0, i7), request.destination !== null && flushCompletedQueues(request, request.destination);
          } catch (error2) {
            logRecoverableError(request, error2), fatalError(request, error2);
          } finally {
            setCurrentResponseState(prevResponseState), ReactCurrentDispatcher$1.current = prevDispatcher, ReactDebugCurrentFrame$1.getCurrentStack = prevGetCurrentStackImpl, prevDispatcher === Dispatcher && switchContext(prevContext);
          }
        }
      }
      function flushSubtree(request, destination, segment) {
        switch (segment.parentFlushed = !0, segment.status) {
          case PENDING: {
            var segmentID = segment.id = request.nextSegmentId++;
            return segment.lastPushedText = !1, segment.textEmbedded = !1, writePlaceholder(destination, request.responseState, segmentID);
          }
          case COMPLETED: {
            segment.status = FLUSHED;
            for (var r9 = !0, chunks = segment.chunks, chunkIdx = 0, children = segment.children, childIdx = 0; childIdx < children.length; childIdx++) {
              for (var nextChild = children[childIdx]; chunkIdx < nextChild.index; chunkIdx++)
                writeChunk(destination, chunks[chunkIdx]);
              r9 = flushSegment(request, destination, nextChild);
            }
            for (; chunkIdx < chunks.length - 1; chunkIdx++)
              writeChunk(destination, chunks[chunkIdx]);
            return chunkIdx < chunks.length && (r9 = writeChunkAndReturn(destination, chunks[chunkIdx])), r9;
          }
          default:
            throw new Error("Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.");
        }
      }
      function flushSegment(request, destination, segment) {
        var boundary = segment.boundary;
        if (boundary === null)
          return flushSubtree(request, destination, segment);
        if (boundary.parentFlushed = !0, boundary.forceClientRender)
          return writeStartClientRenderedSuspenseBoundary$1(destination, request.responseState, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack), flushSubtree(request, destination, segment), writeEndClientRenderedSuspenseBoundary$1(destination, request.responseState);
        if (boundary.pendingTasks > 0) {
          boundary.rootSegmentID = request.nextSegmentId++, boundary.completedSegments.length > 0 && request.partialBoundaries.push(boundary);
          var id = boundary.id = assignSuspenseBoundaryID(request.responseState);
          return writeStartPendingSuspenseBoundary(destination, request.responseState, id), flushSubtree(request, destination, segment), writeEndPendingSuspenseBoundary(destination, request.responseState);
        } else {
          if (boundary.byteSize > request.progressiveChunkSize)
            return boundary.rootSegmentID = request.nextSegmentId++, request.completedBoundaries.push(boundary), writeStartPendingSuspenseBoundary(destination, request.responseState, boundary.id), flushSubtree(request, destination, segment), writeEndPendingSuspenseBoundary(destination, request.responseState);
          writeStartCompletedSuspenseBoundary$1(destination, request.responseState);
          var completedSegments = boundary.completedSegments;
          if (completedSegments.length !== 1)
            throw new Error("A previously unvisited boundary must have exactly one root segment. This is a bug in React.");
          var contentSegment = completedSegments[0];
          return flushSegment(request, destination, contentSegment), writeEndCompletedSuspenseBoundary$1(destination, request.responseState);
        }
      }
      function flushClientRenderedBoundary(request, destination, boundary) {
        return writeClientRenderBoundaryInstruction(destination, request.responseState, boundary.id, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack);
      }
      function flushSegmentContainer(request, destination, segment) {
        return writeStartSegment(destination, request.responseState, segment.formatContext, segment.id), flushSegment(request, destination, segment), writeEndSegment(destination, segment.formatContext);
      }
      function flushCompletedBoundary(request, destination, boundary) {
        for (var completedSegments = boundary.completedSegments, i7 = 0; i7 < completedSegments.length; i7++) {
          var segment = completedSegments[i7];
          flushPartiallyCompletedSegment(request, destination, boundary, segment);
        }
        return completedSegments.length = 0, writeCompletedBoundaryInstruction(destination, request.responseState, boundary.id, boundary.rootSegmentID);
      }
      function flushPartialBoundary(request, destination, boundary) {
        for (var completedSegments = boundary.completedSegments, i7 = 0; i7 < completedSegments.length; i7++) {
          var segment = completedSegments[i7];
          if (!flushPartiallyCompletedSegment(request, destination, boundary, segment))
            return i7++, completedSegments.splice(0, i7), !1;
        }
        return completedSegments.splice(0, i7), !0;
      }
      function flushPartiallyCompletedSegment(request, destination, boundary, segment) {
        if (segment.status === FLUSHED)
          return !0;
        var segmentID = segment.id;
        if (segmentID === -1) {
          var rootSegmentID = segment.id = boundary.rootSegmentID;
          if (rootSegmentID === -1)
            throw new Error("A root segment ID must have been assigned by now. This is a bug in React.");
          return flushSegmentContainer(request, destination, segment);
        } else
          return flushSegmentContainer(request, destination, segment), writeCompletedSegmentInstruction(destination, request.responseState, segmentID);
      }
      function flushCompletedQueues(request, destination) {
        try {
          var completedRootSegment = request.completedRootSegment;
          completedRootSegment !== null && request.pendingRootTasks === 0 && (flushSegment(request, destination, completedRootSegment), request.completedRootSegment = null, writeCompletedRoot(destination, request.responseState));
          var clientRenderedBoundaries = request.clientRenderedBoundaries, i7;
          for (i7 = 0; i7 < clientRenderedBoundaries.length; i7++) {
            var boundary = clientRenderedBoundaries[i7];
            if (!flushClientRenderedBoundary(request, destination, boundary)) {
              request.destination = null, i7++, clientRenderedBoundaries.splice(0, i7);
              return;
            }
          }
          clientRenderedBoundaries.splice(0, i7);
          var completedBoundaries = request.completedBoundaries;
          for (i7 = 0; i7 < completedBoundaries.length; i7++) {
            var _boundary = completedBoundaries[i7];
            if (!flushCompletedBoundary(request, destination, _boundary)) {
              request.destination = null, i7++, completedBoundaries.splice(0, i7);
              return;
            }
          }
          completedBoundaries.splice(0, i7);
          var partialBoundaries = request.partialBoundaries;
          for (i7 = 0; i7 < partialBoundaries.length; i7++) {
            var _boundary2 = partialBoundaries[i7];
            if (!flushPartialBoundary(request, destination, _boundary2)) {
              request.destination = null, i7++, partialBoundaries.splice(0, i7);
              return;
            }
          }
          partialBoundaries.splice(0, i7);
          var largeBoundaries = request.completedBoundaries;
          for (i7 = 0; i7 < largeBoundaries.length; i7++) {
            var _boundary3 = largeBoundaries[i7];
            if (!flushCompletedBoundary(request, destination, _boundary3)) {
              request.destination = null, i7++, largeBoundaries.splice(0, i7);
              return;
            }
          }
          largeBoundaries.splice(0, i7);
        } finally {
          request.allPendingTasks === 0 && request.pingedTasks.length === 0 && request.clientRenderedBoundaries.length === 0 && request.completedBoundaries.length === 0 && (request.abortableTasks.size !== 0 && error("There was still abortable task at the root when we closed. This is a bug in React."), close(destination));
        }
      }
      function startWork(request) {
        scheduleWork(function() {
          return performWork(request);
        });
      }
      function startFlowing(request, destination) {
        if (request.status === CLOSING) {
          request.status = CLOSED, closeWithError(destination, request.fatalError);
          return;
        }
        if (request.status !== CLOSED && request.destination === null) {
          request.destination = destination;
          try {
            flushCompletedQueues(request, destination);
          } catch (error2) {
            logRecoverableError(request, error2), fatalError(request, error2);
          }
        }
      }
      function abort(request, reason) {
        try {
          var abortableTasks = request.abortableTasks;
          abortableTasks.forEach(function(task) {
            return abortTask(task, request, reason);
          }), abortableTasks.clear(), request.destination !== null && flushCompletedQueues(request, request.destination);
        } catch (error2) {
          logRecoverableError(request, error2), fatalError(request, error2);
        }
      }
      function onError() {
      }
      function renderToStringImpl(children, options, generateStaticMarkup, abortReason) {
        var didFatal = !1, fatalError2 = null, result = "", destination = {
          push: function(chunk) {
            return chunk !== null && (result += chunk), !0;
          },
          destroy: function(error2) {
            didFatal = !0, fatalError2 = error2;
          }
        }, readyToStream = !1;
        function onShellReady() {
          readyToStream = !0;
        }
        var request = createRequest(children, createResponseState$1(generateStaticMarkup, options ? options.identifierPrefix : void 0), createRootFormatContext(), 1 / 0, onError, void 0, onShellReady, void 0, void 0);
        if (startWork(request), abort(request, abortReason), startFlowing(request, destination), didFatal)
          throw fatalError2;
        if (!readyToStream)
          throw new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
        return result;
      }
      function renderToString(children, options) {
        return renderToStringImpl(children, options, !1, 'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server');
      }
      function renderToStaticMarkup(children, options) {
        return renderToStringImpl(children, options, !0, 'The server used "renderToStaticMarkup" which does not support Suspense. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server');
      }
      function renderToNodeStream() {
        throw new Error("ReactDOMServer.renderToNodeStream(): The streaming API is not available in the browser. Use ReactDOMServer.renderToString() instead.");
      }
      function renderToStaticNodeStream() {
        throw new Error("ReactDOMServer.renderToStaticNodeStream(): The streaming API is not available in the browser. Use ReactDOMServer.renderToStaticMarkup() instead.");
      }
      exports.renderToNodeStream = renderToNodeStream, exports.renderToStaticMarkup = renderToStaticMarkup, exports.renderToStaticNodeStream = renderToStaticNodeStream, exports.renderToString = renderToString, exports.version = ReactVersion;
    })();
  }
});

// node_modules/react-dom/cjs/react-dom-server.browser.development.js
var require_react_dom_server_browser_development = __commonJS({
  "node_modules/react-dom/cjs/react-dom-server.browser.development.js"(exports) {
    "use strict";
    (function() {
      "use strict";
      var React26 = require_react(), ReactVersion = "18.2.0", ReactSharedInternals = React26.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
      function warn(format) {
        {
          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)
            args[_key - 1] = arguments[_key];
          printWarning("warn", format, args);
        }
      }
      function error(format) {
        {
          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)
            args[_key2 - 1] = arguments[_key2];
          printWarning("error", format, args);
        }
      }
      function printWarning(level, format, args) {
        {
          var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame, stack = ReactDebugCurrentFrame2.getStackAddendum();
          stack !== "" && (format += "%s", args = args.concat([stack]));
          var argsWithFormat = args.map(function(item) {
            return String(item);
          });
          argsWithFormat.unshift("Warning: " + format), Function.prototype.apply.call(console[level], console, argsWithFormat);
        }
      }
      function scheduleWork(callback) {
        callback();
      }
      var VIEW_SIZE = 512, currentView = null, writtenBytes = 0;
      function beginWriting(destination) {
        currentView = new Uint8Array(VIEW_SIZE), writtenBytes = 0;
      }
      function writeChunk(destination, chunk) {
        if (chunk.length !== 0) {
          if (chunk.length > VIEW_SIZE) {
            writtenBytes > 0 && (destination.enqueue(new Uint8Array(currentView.buffer, 0, writtenBytes)), currentView = new Uint8Array(VIEW_SIZE), writtenBytes = 0), destination.enqueue(chunk);
            return;
          }
          var bytesToWrite = chunk, allowableBytes = currentView.length - writtenBytes;
          allowableBytes < bytesToWrite.length && (allowableBytes === 0 ? destination.enqueue(currentView) : (currentView.set(bytesToWrite.subarray(0, allowableBytes), writtenBytes), destination.enqueue(currentView), bytesToWrite = bytesToWrite.subarray(allowableBytes)), currentView = new Uint8Array(VIEW_SIZE), writtenBytes = 0), currentView.set(bytesToWrite, writtenBytes), writtenBytes += bytesToWrite.length;
        }
      }
      function writeChunkAndReturn(destination, chunk) {
        return writeChunk(destination, chunk), !0;
      }
      function completeWriting(destination) {
        currentView && writtenBytes > 0 && (destination.enqueue(new Uint8Array(currentView.buffer, 0, writtenBytes)), currentView = null, writtenBytes = 0);
      }
      function close(destination) {
        destination.close();
      }
      var textEncoder = new TextEncoder();
      function stringToChunk(content) {
        return textEncoder.encode(content);
      }
      function stringToPrecomputedChunk(content) {
        return textEncoder.encode(content);
      }
      function closeWithError(destination, error2) {
        typeof destination.error == "function" ? destination.error(error2) : destination.close();
      }
      function typeName(value) {
        {
          var hasToStringTag = typeof Symbol == "function" && Symbol.toStringTag, type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
          return type;
        }
      }
      function willCoercionThrow(value) {
        try {
          return testStringCoercion(value), !1;
        } catch {
          return !0;
        }
      }
      function testStringCoercion(value) {
        return "" + value;
      }
      function checkAttributeStringCoercion(value, attributeName) {
        if (willCoercionThrow(value))
          return error("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", attributeName, typeName(value)), testStringCoercion(value);
      }
      function checkCSSPropertyStringCoercion(value, propName) {
        if (willCoercionThrow(value))
          return error("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value)), testStringCoercion(value);
      }
      function checkHtmlStringCoercion(value) {
        if (willCoercionThrow(value))
          return error("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value)), testStringCoercion(value);
      }
      var hasOwnProperty = Object.prototype.hasOwnProperty, RESERVED = 0, STRING = 1, BOOLEANISH_STRING = 2, BOOLEAN = 3, OVERLOADED_BOOLEAN = 4, NUMERIC = 5, POSITIVE_NUMERIC = 6, ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD", ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040", VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$"), illegalAttributeNameCache = {}, validatedAttributeNameCache = {};
      function isAttributeNameSafe(attributeName) {
        return hasOwnProperty.call(validatedAttributeNameCache, attributeName) ? !0 : hasOwnProperty.call(illegalAttributeNameCache, attributeName) ? !1 : VALID_ATTRIBUTE_NAME_REGEX.test(attributeName) ? (validatedAttributeNameCache[attributeName] = !0, !0) : (illegalAttributeNameCache[attributeName] = !0, error("Invalid attribute name: `%s`", attributeName), !1);
      }
      function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
        if (propertyInfo !== null && propertyInfo.type === RESERVED)
          return !1;
        switch (typeof value) {
          case "function":
          case "symbol":
            return !0;
          case "boolean": {
            if (isCustomComponentTag)
              return !1;
            if (propertyInfo !== null)
              return !propertyInfo.acceptsBooleans;
            var prefix2 = name.toLowerCase().slice(0, 5);
            return prefix2 !== "data-" && prefix2 !== "aria-";
          }
          default:
            return !1;
        }
      }
      function getPropertyInfo(name) {
        return properties.hasOwnProperty(name) ? properties[name] : null;
      }
      function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL2, removeEmptyString) {
        this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN, this.attributeName = attributeName, this.attributeNamespace = attributeNamespace, this.mustUseProperty = mustUseProperty, this.propertyName = name, this.type = type, this.sanitizeURL = sanitizeURL2, this.removeEmptyString = removeEmptyString;
      }
      var properties = {}, reservedProps = [
        "children",
        "dangerouslySetInnerHTML",
        // TODO: This prevents the assignment of defaultValue to regular
        // elements (not just inputs). Now that ReactDOMInput assigns to the
        // defaultValue property -- do we need this?
        "defaultValue",
        "defaultChecked",
        "innerHTML",
        "suppressContentEditableWarning",
        "suppressHydrationWarning",
        "style"
      ];
      reservedProps.forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          RESERVED,
          !1,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(_ref) {
        var name = _ref[0], attributeName = _ref[1];
        properties[name] = new PropertyInfoRecord(
          name,
          STRING,
          !1,
          // mustUseProperty
          attributeName,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          BOOLEANISH_STRING,
          !1,
          // mustUseProperty
          name.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          BOOLEANISH_STRING,
          !1,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "allowFullScreen",
        "async",
        // Note: there is a special case that prevents it from being written to the DOM
        // on the client side because the browsers are inconsistent. Instead we call focus().
        "autoFocus",
        "autoPlay",
        "controls",
        "default",
        "defer",
        "disabled",
        "disablePictureInPicture",
        "disableRemotePlayback",
        "formNoValidate",
        "hidden",
        "loop",
        "noModule",
        "noValidate",
        "open",
        "playsInline",
        "readOnly",
        "required",
        "reversed",
        "scoped",
        "seamless",
        // Microdata
        "itemScope"
      ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          BOOLEAN,
          !1,
          // mustUseProperty
          name.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "checked",
        // Note: `option.selected` is not updated if `select.multiple` is
        // disabled with `removeAttribute`. We have special logic for handling this.
        "multiple",
        "muted",
        "selected"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          BOOLEAN,
          !0,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "capture",
        "download"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          OVERLOADED_BOOLEAN,
          !1,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "cols",
        "rows",
        "size",
        "span"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          POSITIVE_NUMERIC,
          !1,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), ["rowSpan", "start"].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          NUMERIC,
          !1,
          // mustUseProperty
          name.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      });
      var CAMELIZE = /[\-\:]([a-z])/g, capitalize = function(token) {
        return token[1].toUpperCase();
      };
      [
        "accent-height",
        "alignment-baseline",
        "arabic-form",
        "baseline-shift",
        "cap-height",
        "clip-path",
        "clip-rule",
        "color-interpolation",
        "color-interpolation-filters",
        "color-profile",
        "color-rendering",
        "dominant-baseline",
        "enable-background",
        "fill-opacity",
        "fill-rule",
        "flood-color",
        "flood-opacity",
        "font-family",
        "font-size",
        "font-size-adjust",
        "font-stretch",
        "font-style",
        "font-variant",
        "font-weight",
        "glyph-name",
        "glyph-orientation-horizontal",
        "glyph-orientation-vertical",
        "horiz-adv-x",
        "horiz-origin-x",
        "image-rendering",
        "letter-spacing",
        "lighting-color",
        "marker-end",
        "marker-mid",
        "marker-start",
        "overline-position",
        "overline-thickness",
        "paint-order",
        "panose-1",
        "pointer-events",
        "rendering-intent",
        "shape-rendering",
        "stop-color",
        "stop-opacity",
        "strikethrough-position",
        "strikethrough-thickness",
        "stroke-dasharray",
        "stroke-dashoffset",
        "stroke-linecap",
        "stroke-linejoin",
        "stroke-miterlimit",
        "stroke-opacity",
        "stroke-width",
        "text-anchor",
        "text-decoration",
        "text-rendering",
        "underline-position",
        "underline-thickness",
        "unicode-bidi",
        "unicode-range",
        "units-per-em",
        "v-alphabetic",
        "v-hanging",
        "v-ideographic",
        "v-mathematical",
        "vector-effect",
        "vert-adv-y",
        "vert-origin-x",
        "vert-origin-y",
        "word-spacing",
        "writing-mode",
        "xmlns:xlink",
        "x-height"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(
          name,
          STRING,
          !1,
          // mustUseProperty
          attributeName,
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "xlink:actuate",
        "xlink:arcrole",
        "xlink:role",
        "xlink:show",
        "xlink:title",
        "xlink:type"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(
          name,
          STRING,
          !1,
          // mustUseProperty
          attributeName,
          "http://www.w3.org/1999/xlink",
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "xml:base",
        "xml:lang",
        "xml:space"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(
          name,
          STRING,
          !1,
          // mustUseProperty
          attributeName,
          "http://www.w3.org/XML/1998/namespace",
          !1,
          // sanitizeURL
          !1
        );
      }), ["tabIndex", "crossOrigin"].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(
          attributeName,
          STRING,
          !1,
          // mustUseProperty
          attributeName.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      });
      var xlinkHref = "xlinkHref";
      properties[xlinkHref] = new PropertyInfoRecord(
        "xlinkHref",
        STRING,
        !1,
        // mustUseProperty
        "xlink:href",
        "http://www.w3.org/1999/xlink",
        !0,
        // sanitizeURL
        !1
      ), ["src", "href", "action", "formAction"].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(
          attributeName,
          STRING,
          !1,
          // mustUseProperty
          attributeName.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !0,
          // sanitizeURL
          !0
        );
      });
      var isUnitlessNumber = {
        animationIterationCount: !0,
        aspectRatio: !0,
        borderImageOutset: !0,
        borderImageSlice: !0,
        borderImageWidth: !0,
        boxFlex: !0,
        boxFlexGroup: !0,
        boxOrdinalGroup: !0,
        columnCount: !0,
        columns: !0,
        flex: !0,
        flexGrow: !0,
        flexPositive: !0,
        flexShrink: !0,
        flexNegative: !0,
        flexOrder: !0,
        gridArea: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowSpan: !0,
        gridRowStart: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnSpan: !0,
        gridColumnStart: !0,
        fontWeight: !0,
        lineClamp: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        tabSize: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        // SVG-related properties
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeDasharray: !0,
        strokeDashoffset: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0,
        strokeWidth: !0
      };
      function prefixKey(prefix2, key) {
        return prefix2 + key.charAt(0).toUpperCase() + key.substring(1);
      }
      var prefixes = ["Webkit", "ms", "Moz", "O"];
      Object.keys(isUnitlessNumber).forEach(function(prop) {
        prefixes.forEach(function(prefix2) {
          isUnitlessNumber[prefixKey(prefix2, prop)] = isUnitlessNumber[prop];
        });
      });
      var hasReadOnlyValue = {
        button: !0,
        checkbox: !0,
        image: !0,
        hidden: !0,
        radio: !0,
        reset: !0,
        submit: !0
      };
      function checkControlledValueProps(tagName, props) {
        hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null || error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`."), props.onChange || props.readOnly || props.disabled || props.checked == null || error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
      }
      function isCustomComponent(tagName, props) {
        if (tagName.indexOf("-") === -1)
          return typeof props.is == "string";
        switch (tagName) {
          case "annotation-xml":
          case "color-profile":
          case "font-face":
          case "font-face-src":
          case "font-face-uri":
          case "font-face-format":
          case "font-face-name":
          case "missing-glyph":
            return !1;
          default:
            return !0;
        }
      }
      var ariaProperties = {
        "aria-current": 0,
        // state
        "aria-description": 0,
        "aria-details": 0,
        "aria-disabled": 0,
        // state
        "aria-hidden": 0,
        // state
        "aria-invalid": 0,
        // state
        "aria-keyshortcuts": 0,
        "aria-label": 0,
        "aria-roledescription": 0,
        // Widget Attributes
        "aria-autocomplete": 0,
        "aria-checked": 0,
        "aria-expanded": 0,
        "aria-haspopup": 0,
        "aria-level": 0,
        "aria-modal": 0,
        "aria-multiline": 0,
        "aria-multiselectable": 0,
        "aria-orientation": 0,
        "aria-placeholder": 0,
        "aria-pressed": 0,
        "aria-readonly": 0,
        "aria-required": 0,
        "aria-selected": 0,
        "aria-sort": 0,
        "aria-valuemax": 0,
        "aria-valuemin": 0,
        "aria-valuenow": 0,
        "aria-valuetext": 0,
        // Live Region Attributes
        "aria-atomic": 0,
        "aria-busy": 0,
        "aria-live": 0,
        "aria-relevant": 0,
        // Drag-and-Drop Attributes
        "aria-dropeffect": 0,
        "aria-grabbed": 0,
        // Relationship Attributes
        "aria-activedescendant": 0,
        "aria-colcount": 0,
        "aria-colindex": 0,
        "aria-colspan": 0,
        "aria-controls": 0,
        "aria-describedby": 0,
        "aria-errormessage": 0,
        "aria-flowto": 0,
        "aria-labelledby": 0,
        "aria-owns": 0,
        "aria-posinset": 0,
        "aria-rowcount": 0,
        "aria-rowindex": 0,
        "aria-rowspan": 0,
        "aria-setsize": 0
      }, warnedProperties = {}, rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$"), rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
      function validateProperty(tagName, name) {
        {
          if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name])
            return !0;
          if (rARIACamel.test(name)) {
            var ariaName = "aria-" + name.slice(4).toLowerCase(), correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;
            if (correctName == null)
              return error("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name), warnedProperties[name] = !0, !0;
            if (name !== correctName)
              return error("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, correctName), warnedProperties[name] = !0, !0;
          }
          if (rARIA.test(name)) {
            var lowerCasedName = name.toLowerCase(), standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;
            if (standardName == null)
              return warnedProperties[name] = !0, !1;
            if (name !== standardName)
              return error("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, standardName), warnedProperties[name] = !0, !0;
          }
        }
        return !0;
      }
      function warnInvalidARIAProps(type, props) {
        {
          var invalidProps = [];
          for (var key in props) {
            var isValid = validateProperty(type, key);
            isValid || invalidProps.push(key);
          }
          var unknownPropString = invalidProps.map(function(prop) {
            return "`" + prop + "`";
          }).join(", ");
          invalidProps.length === 1 ? error("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type) : invalidProps.length > 1 && error("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
        }
      }
      function validateProperties(type, props) {
        isCustomComponent(type, props) || warnInvalidARIAProps(type, props);
      }
      var didWarnValueNull = !1;
      function validateProperties$1(type, props) {
        {
          if (type !== "input" && type !== "textarea" && type !== "select")
            return;
          props != null && props.value === null && !didWarnValueNull && (didWarnValueNull = !0, type === "select" && props.multiple ? error("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type) : error("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type));
        }
      }
      var possibleStandardNames = {
        // HTML
        accept: "accept",
        acceptcharset: "acceptCharset",
        "accept-charset": "acceptCharset",
        accesskey: "accessKey",
        action: "action",
        allowfullscreen: "allowFullScreen",
        alt: "alt",
        as: "as",
        async: "async",
        autocapitalize: "autoCapitalize",
        autocomplete: "autoComplete",
        autocorrect: "autoCorrect",
        autofocus: "autoFocus",
        autoplay: "autoPlay",
        autosave: "autoSave",
        capture: "capture",
        cellpadding: "cellPadding",
        cellspacing: "cellSpacing",
        challenge: "challenge",
        charset: "charSet",
        checked: "checked",
        children: "children",
        cite: "cite",
        class: "className",
        classid: "classID",
        classname: "className",
        cols: "cols",
        colspan: "colSpan",
        content: "content",
        contenteditable: "contentEditable",
        contextmenu: "contextMenu",
        controls: "controls",
        controlslist: "controlsList",
        coords: "coords",
        crossorigin: "crossOrigin",
        dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
        data: "data",
        datetime: "dateTime",
        default: "default",
        defaultchecked: "defaultChecked",
        defaultvalue: "defaultValue",
        defer: "defer",
        dir: "dir",
        disabled: "disabled",
        disablepictureinpicture: "disablePictureInPicture",
        disableremoteplayback: "disableRemotePlayback",
        download: "download",
        draggable: "draggable",
        enctype: "encType",
        enterkeyhint: "enterKeyHint",
        for: "htmlFor",
        form: "form",
        formmethod: "formMethod",
        formaction: "formAction",
        formenctype: "formEncType",
        formnovalidate: "formNoValidate",
        formtarget: "formTarget",
        frameborder: "frameBorder",
        headers: "headers",
        height: "height",
        hidden: "hidden",
        high: "high",
        href: "href",
        hreflang: "hrefLang",
        htmlfor: "htmlFor",
        httpequiv: "httpEquiv",
        "http-equiv": "httpEquiv",
        icon: "icon",
        id: "id",
        imagesizes: "imageSizes",
        imagesrcset: "imageSrcSet",
        innerhtml: "innerHTML",
        inputmode: "inputMode",
        integrity: "integrity",
        is: "is",
        itemid: "itemID",
        itemprop: "itemProp",
        itemref: "itemRef",
        itemscope: "itemScope",
        itemtype: "itemType",
        keyparams: "keyParams",
        keytype: "keyType",
        kind: "kind",
        label: "label",
        lang: "lang",
        list: "list",
        loop: "loop",
        low: "low",
        manifest: "manifest",
        marginwidth: "marginWidth",
        marginheight: "marginHeight",
        max: "max",
        maxlength: "maxLength",
        media: "media",
        mediagroup: "mediaGroup",
        method: "method",
        min: "min",
        minlength: "minLength",
        multiple: "multiple",
        muted: "muted",
        name: "name",
        nomodule: "noModule",
        nonce: "nonce",
        novalidate: "noValidate",
        open: "open",
        optimum: "optimum",
        pattern: "pattern",
        placeholder: "placeholder",
        playsinline: "playsInline",
        poster: "poster",
        preload: "preload",
        profile: "profile",
        radiogroup: "radioGroup",
        readonly: "readOnly",
        referrerpolicy: "referrerPolicy",
        rel: "rel",
        required: "required",
        reversed: "reversed",
        role: "role",
        rows: "rows",
        rowspan: "rowSpan",
        sandbox: "sandbox",
        scope: "scope",
        scoped: "scoped",
        scrolling: "scrolling",
        seamless: "seamless",
        selected: "selected",
        shape: "shape",
        size: "size",
        sizes: "sizes",
        span: "span",
        spellcheck: "spellCheck",
        src: "src",
        srcdoc: "srcDoc",
        srclang: "srcLang",
        srcset: "srcSet",
        start: "start",
        step: "step",
        style: "style",
        summary: "summary",
        tabindex: "tabIndex",
        target: "target",
        title: "title",
        type: "type",
        usemap: "useMap",
        value: "value",
        width: "width",
        wmode: "wmode",
        wrap: "wrap",
        // SVG
        about: "about",
        accentheight: "accentHeight",
        "accent-height": "accentHeight",
        accumulate: "accumulate",
        additive: "additive",
        alignmentbaseline: "alignmentBaseline",
        "alignment-baseline": "alignmentBaseline",
        allowreorder: "allowReorder",
        alphabetic: "alphabetic",
        amplitude: "amplitude",
        arabicform: "arabicForm",
        "arabic-form": "arabicForm",
        ascent: "ascent",
        attributename: "attributeName",
        attributetype: "attributeType",
        autoreverse: "autoReverse",
        azimuth: "azimuth",
        basefrequency: "baseFrequency",
        baselineshift: "baselineShift",
        "baseline-shift": "baselineShift",
        baseprofile: "baseProfile",
        bbox: "bbox",
        begin: "begin",
        bias: "bias",
        by: "by",
        calcmode: "calcMode",
        capheight: "capHeight",
        "cap-height": "capHeight",
        clip: "clip",
        clippath: "clipPath",
        "clip-path": "clipPath",
        clippathunits: "clipPathUnits",
        cliprule: "clipRule",
        "clip-rule": "clipRule",
        color: "color",
        colorinterpolation: "colorInterpolation",
        "color-interpolation": "colorInterpolation",
        colorinterpolationfilters: "colorInterpolationFilters",
        "color-interpolation-filters": "colorInterpolationFilters",
        colorprofile: "colorProfile",
        "color-profile": "colorProfile",
        colorrendering: "colorRendering",
        "color-rendering": "colorRendering",
        contentscripttype: "contentScriptType",
        contentstyletype: "contentStyleType",
        cursor: "cursor",
        cx: "cx",
        cy: "cy",
        d: "d",
        datatype: "datatype",
        decelerate: "decelerate",
        descent: "descent",
        diffuseconstant: "diffuseConstant",
        direction: "direction",
        display: "display",
        divisor: "divisor",
        dominantbaseline: "dominantBaseline",
        "dominant-baseline": "dominantBaseline",
        dur: "dur",
        dx: "dx",
        dy: "dy",
        edgemode: "edgeMode",
        elevation: "elevation",
        enablebackground: "enableBackground",
        "enable-background": "enableBackground",
        end: "end",
        exponent: "exponent",
        externalresourcesrequired: "externalResourcesRequired",
        fill: "fill",
        fillopacity: "fillOpacity",
        "fill-opacity": "fillOpacity",
        fillrule: "fillRule",
        "fill-rule": "fillRule",
        filter: "filter",
        filterres: "filterRes",
        filterunits: "filterUnits",
        floodopacity: "floodOpacity",
        "flood-opacity": "floodOpacity",
        floodcolor: "floodColor",
        "flood-color": "floodColor",
        focusable: "focusable",
        fontfamily: "fontFamily",
        "font-family": "fontFamily",
        fontsize: "fontSize",
        "font-size": "fontSize",
        fontsizeadjust: "fontSizeAdjust",
        "font-size-adjust": "fontSizeAdjust",
        fontstretch: "fontStretch",
        "font-stretch": "fontStretch",
        fontstyle: "fontStyle",
        "font-style": "fontStyle",
        fontvariant: "fontVariant",
        "font-variant": "fontVariant",
        fontweight: "fontWeight",
        "font-weight": "fontWeight",
        format: "format",
        from: "from",
        fx: "fx",
        fy: "fy",
        g1: "g1",
        g2: "g2",
        glyphname: "glyphName",
        "glyph-name": "glyphName",
        glyphorientationhorizontal: "glyphOrientationHorizontal",
        "glyph-orientation-horizontal": "glyphOrientationHorizontal",
        glyphorientationvertical: "glyphOrientationVertical",
        "glyph-orientation-vertical": "glyphOrientationVertical",
        glyphref: "glyphRef",
        gradienttransform: "gradientTransform",
        gradientunits: "gradientUnits",
        hanging: "hanging",
        horizadvx: "horizAdvX",
        "horiz-adv-x": "horizAdvX",
        horizoriginx: "horizOriginX",
        "horiz-origin-x": "horizOriginX",
        ideographic: "ideographic",
        imagerendering: "imageRendering",
        "image-rendering": "imageRendering",
        in2: "in2",
        in: "in",
        inlist: "inlist",
        intercept: "intercept",
        k1: "k1",
        k2: "k2",
        k3: "k3",
        k4: "k4",
        k: "k",
        kernelmatrix: "kernelMatrix",
        kernelunitlength: "kernelUnitLength",
        kerning: "kerning",
        keypoints: "keyPoints",
        keysplines: "keySplines",
        keytimes: "keyTimes",
        lengthadjust: "lengthAdjust",
        letterspacing: "letterSpacing",
        "letter-spacing": "letterSpacing",
        lightingcolor: "lightingColor",
        "lighting-color": "lightingColor",
        limitingconeangle: "limitingConeAngle",
        local: "local",
        markerend: "markerEnd",
        "marker-end": "markerEnd",
        markerheight: "markerHeight",
        markermid: "markerMid",
        "marker-mid": "markerMid",
        markerstart: "markerStart",
        "marker-start": "markerStart",
        markerunits: "markerUnits",
        markerwidth: "markerWidth",
        mask: "mask",
        maskcontentunits: "maskContentUnits",
        maskunits: "maskUnits",
        mathematical: "mathematical",
        mode: "mode",
        numoctaves: "numOctaves",
        offset: "offset",
        opacity: "opacity",
        operator: "operator",
        order: "order",
        orient: "orient",
        orientation: "orientation",
        origin: "origin",
        overflow: "overflow",
        overlineposition: "overlinePosition",
        "overline-position": "overlinePosition",
        overlinethickness: "overlineThickness",
        "overline-thickness": "overlineThickness",
        paintorder: "paintOrder",
        "paint-order": "paintOrder",
        panose1: "panose1",
        "panose-1": "panose1",
        pathlength: "pathLength",
        patterncontentunits: "patternContentUnits",
        patterntransform: "patternTransform",
        patternunits: "patternUnits",
        pointerevents: "pointerEvents",
        "pointer-events": "pointerEvents",
        points: "points",
        pointsatx: "pointsAtX",
        pointsaty: "pointsAtY",
        pointsatz: "pointsAtZ",
        prefix: "prefix",
        preservealpha: "preserveAlpha",
        preserveaspectratio: "preserveAspectRatio",
        primitiveunits: "primitiveUnits",
        property: "property",
        r: "r",
        radius: "radius",
        refx: "refX",
        refy: "refY",
        renderingintent: "renderingIntent",
        "rendering-intent": "renderingIntent",
        repeatcount: "repeatCount",
        repeatdur: "repeatDur",
        requiredextensions: "requiredExtensions",
        requiredfeatures: "requiredFeatures",
        resource: "resource",
        restart: "restart",
        result: "result",
        results: "results",
        rotate: "rotate",
        rx: "rx",
        ry: "ry",
        scale: "scale",
        security: "security",
        seed: "seed",
        shaperendering: "shapeRendering",
        "shape-rendering": "shapeRendering",
        slope: "slope",
        spacing: "spacing",
        specularconstant: "specularConstant",
        specularexponent: "specularExponent",
        speed: "speed",
        spreadmethod: "spreadMethod",
        startoffset: "startOffset",
        stddeviation: "stdDeviation",
        stemh: "stemh",
        stemv: "stemv",
        stitchtiles: "stitchTiles",
        stopcolor: "stopColor",
        "stop-color": "stopColor",
        stopopacity: "stopOpacity",
        "stop-opacity": "stopOpacity",
        strikethroughposition: "strikethroughPosition",
        "strikethrough-position": "strikethroughPosition",
        strikethroughthickness: "strikethroughThickness",
        "strikethrough-thickness": "strikethroughThickness",
        string: "string",
        stroke: "stroke",
        strokedasharray: "strokeDasharray",
        "stroke-dasharray": "strokeDasharray",
        strokedashoffset: "strokeDashoffset",
        "stroke-dashoffset": "strokeDashoffset",
        strokelinecap: "strokeLinecap",
        "stroke-linecap": "strokeLinecap",
        strokelinejoin: "strokeLinejoin",
        "stroke-linejoin": "strokeLinejoin",
        strokemiterlimit: "strokeMiterlimit",
        "stroke-miterlimit": "strokeMiterlimit",
        strokewidth: "strokeWidth",
        "stroke-width": "strokeWidth",
        strokeopacity: "strokeOpacity",
        "stroke-opacity": "strokeOpacity",
        suppresscontenteditablewarning: "suppressContentEditableWarning",
        suppresshydrationwarning: "suppressHydrationWarning",
        surfacescale: "surfaceScale",
        systemlanguage: "systemLanguage",
        tablevalues: "tableValues",
        targetx: "targetX",
        targety: "targetY",
        textanchor: "textAnchor",
        "text-anchor": "textAnchor",
        textdecoration: "textDecoration",
        "text-decoration": "textDecoration",
        textlength: "textLength",
        textrendering: "textRendering",
        "text-rendering": "textRendering",
        to: "to",
        transform: "transform",
        typeof: "typeof",
        u1: "u1",
        u2: "u2",
        underlineposition: "underlinePosition",
        "underline-position": "underlinePosition",
        underlinethickness: "underlineThickness",
        "underline-thickness": "underlineThickness",
        unicode: "unicode",
        unicodebidi: "unicodeBidi",
        "unicode-bidi": "unicodeBidi",
        unicoderange: "unicodeRange",
        "unicode-range": "unicodeRange",
        unitsperem: "unitsPerEm",
        "units-per-em": "unitsPerEm",
        unselectable: "unselectable",
        valphabetic: "vAlphabetic",
        "v-alphabetic": "vAlphabetic",
        values: "values",
        vectoreffect: "vectorEffect",
        "vector-effect": "vectorEffect",
        version: "version",
        vertadvy: "vertAdvY",
        "vert-adv-y": "vertAdvY",
        vertoriginx: "vertOriginX",
        "vert-origin-x": "vertOriginX",
        vertoriginy: "vertOriginY",
        "vert-origin-y": "vertOriginY",
        vhanging: "vHanging",
        "v-hanging": "vHanging",
        videographic: "vIdeographic",
        "v-ideographic": "vIdeographic",
        viewbox: "viewBox",
        viewtarget: "viewTarget",
        visibility: "visibility",
        vmathematical: "vMathematical",
        "v-mathematical": "vMathematical",
        vocab: "vocab",
        widths: "widths",
        wordspacing: "wordSpacing",
        "word-spacing": "wordSpacing",
        writingmode: "writingMode",
        "writing-mode": "writingMode",
        x1: "x1",
        x2: "x2",
        x: "x",
        xchannelselector: "xChannelSelector",
        xheight: "xHeight",
        "x-height": "xHeight",
        xlinkactuate: "xlinkActuate",
        "xlink:actuate": "xlinkActuate",
        xlinkarcrole: "xlinkArcrole",
        "xlink:arcrole": "xlinkArcrole",
        xlinkhref: "xlinkHref",
        "xlink:href": "xlinkHref",
        xlinkrole: "xlinkRole",
        "xlink:role": "xlinkRole",
        xlinkshow: "xlinkShow",
        "xlink:show": "xlinkShow",
        xlinktitle: "xlinkTitle",
        "xlink:title": "xlinkTitle",
        xlinktype: "xlinkType",
        "xlink:type": "xlinkType",
        xmlbase: "xmlBase",
        "xml:base": "xmlBase",
        xmllang: "xmlLang",
        "xml:lang": "xmlLang",
        xmlns: "xmlns",
        "xml:space": "xmlSpace",
        xmlnsxlink: "xmlnsXlink",
        "xmlns:xlink": "xmlnsXlink",
        xmlspace: "xmlSpace",
        y1: "y1",
        y2: "y2",
        y: "y",
        ychannelselector: "yChannelSelector",
        z: "z",
        zoomandpan: "zoomAndPan"
      }, validateProperty$1 = function() {
      };
      {
        var warnedProperties$1 = {}, EVENT_NAME_REGEX = /^on./, INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/, rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$"), rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
        validateProperty$1 = function(tagName, name, value, eventRegistry) {
          if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name])
            return !0;
          var lowerCasedName = name.toLowerCase();
          if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout")
            return error("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React."), warnedProperties$1[name] = !0, !0;
          if (eventRegistry != null) {
            var registrationNameDependencies = eventRegistry.registrationNameDependencies, possibleRegistrationNames = eventRegistry.possibleRegistrationNames;
            if (registrationNameDependencies.hasOwnProperty(name))
              return !0;
            var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
            if (registrationName != null)
              return error("Invalid event handler property `%s`. Did you mean `%s`?", name, registrationName), warnedProperties$1[name] = !0, !0;
            if (EVENT_NAME_REGEX.test(name))
              return error("Unknown event handler property `%s`. It will be ignored.", name), warnedProperties$1[name] = !0, !0;
          } else if (EVENT_NAME_REGEX.test(name))
            return INVALID_EVENT_NAME_REGEX.test(name) && error("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name), warnedProperties$1[name] = !0, !0;
          if (rARIA$1.test(name) || rARIACamel$1.test(name))
            return !0;
          if (lowerCasedName === "innerhtml")
            return error("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`."), warnedProperties$1[name] = !0, !0;
          if (lowerCasedName === "aria")
            return error("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead."), warnedProperties$1[name] = !0, !0;
          if (lowerCasedName === "is" && value !== null && value !== void 0 && typeof value != "string")
            return error("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value), warnedProperties$1[name] = !0, !0;
          if (typeof value == "number" && isNaN(value))
            return error("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name), warnedProperties$1[name] = !0, !0;
          var propertyInfo = getPropertyInfo(name), isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;
          if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
            var standardName = possibleStandardNames[lowerCasedName];
            if (standardName !== name)
              return error("Invalid DOM property `%s`. Did you mean `%s`?", name, standardName), warnedProperties$1[name] = !0, !0;
          } else if (!isReserved && name !== lowerCasedName)
            return error("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName), warnedProperties$1[name] = !0, !0;
          return typeof value == "boolean" && shouldRemoveAttributeWithWarning(name, value, propertyInfo, !1) ? (value ? error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name) : error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name), warnedProperties$1[name] = !0, !0) : isReserved ? !0 : shouldRemoveAttributeWithWarning(name, value, propertyInfo, !1) ? (warnedProperties$1[name] = !0, !1) : ((value === "false" || value === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN && (error("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value), warnedProperties$1[name] = !0), !0);
        };
      }
      var warnUnknownProperties = function(type, props, eventRegistry) {
        {
          var unknownProps = [];
          for (var key in props) {
            var isValid = validateProperty$1(type, key, props[key], eventRegistry);
            isValid || unknownProps.push(key);
          }
          var unknownPropString = unknownProps.map(function(prop) {
            return "`" + prop + "`";
          }).join(", ");
          unknownProps.length === 1 ? error("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type) : unknownProps.length > 1 && error("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
        }
      };
      function validateProperties$2(type, props, eventRegistry) {
        isCustomComponent(type, props) || warnUnknownProperties(type, props, eventRegistry);
      }
      var warnValidStyle = function() {
      };
      {
        var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/, msPattern = /^-ms-/, hyphenPattern = /-(.)/g, badStyleValueWithSemicolonPattern = /;\s*$/, warnedStyleNames = {}, warnedStyleValues = {}, warnedForNaNValue = !1, warnedForInfinityValue = !1, camelize = function(string) {
          return string.replace(hyphenPattern, function(_3, character) {
            return character.toUpperCase();
          });
        }, warnHyphenatedStyleName = function(name) {
          warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name] || (warnedStyleNames[name] = !0, error(
            "Unsupported style property %s. Did you mean %s?",
            name,
            // As Andi Smith suggests
            // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
            // is converted to lowercase `ms`.
            camelize(name.replace(msPattern, "ms-"))
          ));
        }, warnBadVendoredStyleName = function(name) {
          warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name] || (warnedStyleNames[name] = !0, error("Unsupported vendor-prefixed style property %s. Did you mean %s?", name, name.charAt(0).toUpperCase() + name.slice(1)));
        }, warnStyleValueWithSemicolon = function(name, value) {
          warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value] || (warnedStyleValues[value] = !0, error(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, "")));
        }, warnStyleValueIsNaN = function(name, value) {
          warnedForNaNValue || (warnedForNaNValue = !0, error("`NaN` is an invalid value for the `%s` css style property.", name));
        }, warnStyleValueIsInfinity = function(name, value) {
          warnedForInfinityValue || (warnedForInfinityValue = !0, error("`Infinity` is an invalid value for the `%s` css style property.", name));
        };
        warnValidStyle = function(name, value) {
          name.indexOf("-") > -1 ? warnHyphenatedStyleName(name) : badVendoredStyleNamePattern.test(name) ? warnBadVendoredStyleName(name) : badStyleValueWithSemicolonPattern.test(value) && warnStyleValueWithSemicolon(name, value), typeof value == "number" && (isNaN(value) ? warnStyleValueIsNaN(name, value) : isFinite(value) || warnStyleValueIsInfinity(name, value));
        };
      }
      var warnValidStyle$1 = warnValidStyle, matchHtmlRegExp = /["'&<>]/;
      function escapeHtml3(string) {
        checkHtmlStringCoercion(string);
        var str = "" + string, match = matchHtmlRegExp.exec(str);
        if (!match)
          return str;
        var escape, html = "", index3, lastIndex = 0;
        for (index3 = match.index; index3 < str.length; index3++) {
          switch (str.charCodeAt(index3)) {
            case 34:
              escape = "&quot;";
              break;
            case 38:
              escape = "&amp;";
              break;
            case 39:
              escape = "&#x27;";
              break;
            case 60:
              escape = "&lt;";
              break;
            case 62:
              escape = "&gt;";
              break;
            default:
              continue;
          }
          lastIndex !== index3 && (html += str.substring(lastIndex, index3)), lastIndex = index3 + 1, html += escape;
        }
        return lastIndex !== index3 ? html + str.substring(lastIndex, index3) : html;
      }
      function escapeTextForBrowser(text) {
        return typeof text == "boolean" || typeof text == "number" ? "" + text : escapeHtml3(text);
      }
      var uppercasePattern = /([A-Z])/g, msPattern$1 = /^ms-/;
      function hyphenateStyleName(name) {
        return name.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern$1, "-ms-");
      }
      var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i, didWarn = !1;
      function sanitizeURL(url) {
        !didWarn && isJavaScriptProtocol.test(url) && (didWarn = !0, error("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url)));
      }
      var isArrayImpl = Array.isArray;
      function isArray(a13) {
        return isArrayImpl(a13);
      }
      var startInlineScript = stringToPrecomputedChunk("<script>"), endInlineScript = stringToPrecomputedChunk("</script>"), startScriptSrc = stringToPrecomputedChunk('<script src="'), startModuleSrc = stringToPrecomputedChunk('<script type="module" src="'), endAsyncScript = stringToPrecomputedChunk('" async=""></script>');
      function escapeBootstrapScriptContent(scriptText) {
        return checkHtmlStringCoercion(scriptText), ("" + scriptText).replace(scriptRegex, scriptReplacer);
      }
      var scriptRegex = /(<\/|<)(s)(cript)/gi, scriptReplacer = function(match, prefix2, s15, suffix) {
        return "" + prefix2 + (s15 === "s" ? "\\u0073" : "\\u0053") + suffix;
      };
      function createResponseState(identifierPrefix, nonce, bootstrapScriptContent, bootstrapScripts, bootstrapModules) {
        var idPrefix = identifierPrefix === void 0 ? "" : identifierPrefix, inlineScriptWithNonce = nonce === void 0 ? startInlineScript : stringToPrecomputedChunk('<script nonce="' + escapeTextForBrowser(nonce) + '">'), bootstrapChunks = [];
        if (bootstrapScriptContent !== void 0 && bootstrapChunks.push(inlineScriptWithNonce, stringToChunk(escapeBootstrapScriptContent(bootstrapScriptContent)), endInlineScript), bootstrapScripts !== void 0)
          for (var i7 = 0; i7 < bootstrapScripts.length; i7++)
            bootstrapChunks.push(startScriptSrc, stringToChunk(escapeTextForBrowser(bootstrapScripts[i7])), endAsyncScript);
        if (bootstrapModules !== void 0)
          for (var _i = 0; _i < bootstrapModules.length; _i++)
            bootstrapChunks.push(startModuleSrc, stringToChunk(escapeTextForBrowser(bootstrapModules[_i])), endAsyncScript);
        return {
          bootstrapChunks,
          startInlineScript: inlineScriptWithNonce,
          placeholderPrefix: stringToPrecomputedChunk(idPrefix + "P:"),
          segmentPrefix: stringToPrecomputedChunk(idPrefix + "S:"),
          boundaryPrefix: idPrefix + "B:",
          idPrefix,
          nextSuspenseID: 0,
          sentCompleteSegmentFunction: !1,
          sentCompleteBoundaryFunction: !1,
          sentClientRenderFunction: !1
        };
      }
      var ROOT_HTML_MODE = 0, HTML_MODE = 1, SVG_MODE = 2, MATHML_MODE = 3, HTML_TABLE_MODE = 4, HTML_TABLE_BODY_MODE = 5, HTML_TABLE_ROW_MODE = 6, HTML_COLGROUP_MODE = 7;
      function createFormatContext(insertionMode, selectedValue) {
        return {
          insertionMode,
          selectedValue
        };
      }
      function createRootFormatContext(namespaceURI) {
        var insertionMode = namespaceURI === "http://www.w3.org/2000/svg" ? SVG_MODE : namespaceURI === "http://www.w3.org/1998/Math/MathML" ? MATHML_MODE : ROOT_HTML_MODE;
        return createFormatContext(insertionMode, null);
      }
      function getChildFormatContext(parentContext, type, props) {
        switch (type) {
          case "select":
            return createFormatContext(HTML_MODE, props.value != null ? props.value : props.defaultValue);
          case "svg":
            return createFormatContext(SVG_MODE, null);
          case "math":
            return createFormatContext(MATHML_MODE, null);
          case "foreignObject":
            return createFormatContext(HTML_MODE, null);
          case "table":
            return createFormatContext(HTML_TABLE_MODE, null);
          case "thead":
          case "tbody":
          case "tfoot":
            return createFormatContext(HTML_TABLE_BODY_MODE, null);
          case "colgroup":
            return createFormatContext(HTML_COLGROUP_MODE, null);
          case "tr":
            return createFormatContext(HTML_TABLE_ROW_MODE, null);
        }
        return parentContext.insertionMode >= HTML_TABLE_MODE || parentContext.insertionMode === ROOT_HTML_MODE ? createFormatContext(HTML_MODE, null) : parentContext;
      }
      var UNINITIALIZED_SUSPENSE_BOUNDARY_ID = null;
      function assignSuspenseBoundaryID(responseState) {
        var generatedID = responseState.nextSuspenseID++;
        return stringToPrecomputedChunk(responseState.boundaryPrefix + generatedID.toString(16));
      }
      function makeId(responseState, treeId, localId) {
        var idPrefix = responseState.idPrefix, id = ":" + idPrefix + "R" + treeId;
        return localId > 0 && (id += "H" + localId.toString(32)), id + ":";
      }
      function encodeHTMLTextNode(text) {
        return escapeTextForBrowser(text);
      }
      var textSeparator = stringToPrecomputedChunk("<!-- -->");
      function pushTextInstance(target, text, responseState, textEmbedded) {
        return text === "" ? textEmbedded : (textEmbedded && target.push(textSeparator), target.push(stringToChunk(encodeHTMLTextNode(text))), !0);
      }
      function pushSegmentFinale(target, responseState, lastPushedText, textEmbedded) {
        lastPushedText && textEmbedded && target.push(textSeparator);
      }
      var styleNameCache = /* @__PURE__ */ new Map();
      function processStyleName(styleName) {
        var chunk = styleNameCache.get(styleName);
        if (chunk !== void 0)
          return chunk;
        var result = stringToPrecomputedChunk(escapeTextForBrowser(hyphenateStyleName(styleName)));
        return styleNameCache.set(styleName, result), result;
      }
      var styleAttributeStart = stringToPrecomputedChunk(' style="'), styleAssign = stringToPrecomputedChunk(":"), styleSeparator = stringToPrecomputedChunk(";");
      function pushStyle(target, responseState, style2) {
        if (typeof style2 != "object")
          throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
        var isFirst = !0;
        for (var styleName in style2)
          if (hasOwnProperty.call(style2, styleName)) {
            var styleValue = style2[styleName];
            if (!(styleValue == null || typeof styleValue == "boolean" || styleValue === "")) {
              var nameChunk = void 0, valueChunk = void 0, isCustomProperty = styleName.indexOf("--") === 0;
              isCustomProperty ? (nameChunk = stringToChunk(escapeTextForBrowser(styleName)), checkCSSPropertyStringCoercion(styleValue, styleName), valueChunk = stringToChunk(escapeTextForBrowser(("" + styleValue).trim()))) : (warnValidStyle$1(styleName, styleValue), nameChunk = processStyleName(styleName), typeof styleValue == "number" ? styleValue !== 0 && !hasOwnProperty.call(isUnitlessNumber, styleName) ? valueChunk = stringToChunk(styleValue + "px") : valueChunk = stringToChunk("" + styleValue) : (checkCSSPropertyStringCoercion(styleValue, styleName), valueChunk = stringToChunk(escapeTextForBrowser(("" + styleValue).trim())))), isFirst ? (isFirst = !1, target.push(styleAttributeStart, nameChunk, styleAssign, valueChunk)) : target.push(styleSeparator, nameChunk, styleAssign, valueChunk);
            }
          }
        isFirst || target.push(attributeEnd);
      }
      var attributeSeparator = stringToPrecomputedChunk(" "), attributeAssign = stringToPrecomputedChunk('="'), attributeEnd = stringToPrecomputedChunk('"'), attributeEmptyString = stringToPrecomputedChunk('=""');
      function pushAttribute(target, responseState, name, value) {
        switch (name) {
          case "style": {
            pushStyle(target, responseState, value);
            return;
          }
          case "defaultValue":
          case "defaultChecked":
          case "innerHTML":
          case "suppressContentEditableWarning":
          case "suppressHydrationWarning":
            return;
        }
        if (
          // shouldIgnoreAttribute
          // We have already filtered out null/undefined and reserved words.
          !(name.length > 2 && (name[0] === "o" || name[0] === "O") && (name[1] === "n" || name[1] === "N"))
        ) {
          var propertyInfo = getPropertyInfo(name);
          if (propertyInfo !== null) {
            switch (typeof value) {
              case "function":
              case "symbol":
                return;
              case "boolean":
                if (!propertyInfo.acceptsBooleans)
                  return;
            }
            var attributeName = propertyInfo.attributeName, attributeNameChunk = stringToChunk(attributeName);
            switch (propertyInfo.type) {
              case BOOLEAN:
                value && target.push(attributeSeparator, attributeNameChunk, attributeEmptyString);
                return;
              case OVERLOADED_BOOLEAN:
                value === !0 ? target.push(attributeSeparator, attributeNameChunk, attributeEmptyString) : value === !1 || target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                return;
              case NUMERIC:
                isNaN(value) || target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                break;
              case POSITIVE_NUMERIC:
                !isNaN(value) && value >= 1 && target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                break;
              default:
                propertyInfo.sanitizeURL && (checkAttributeStringCoercion(value, attributeName), value = "" + value, sanitizeURL(value)), target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
            }
          } else if (isAttributeNameSafe(name)) {
            switch (typeof value) {
              case "function":
              case "symbol":
                return;
              case "boolean": {
                var prefix2 = name.toLowerCase().slice(0, 5);
                if (prefix2 !== "data-" && prefix2 !== "aria-")
                  return;
              }
            }
            target.push(attributeSeparator, stringToChunk(name), attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
          }
        }
      }
      var endOfStartTag = stringToPrecomputedChunk(">"), endOfStartTagSelfClosing = stringToPrecomputedChunk("/>");
      function pushInnerHTML(target, innerHTML, children) {
        if (innerHTML != null) {
          if (children != null)
            throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
          if (typeof innerHTML != "object" || !("__html" in innerHTML))
            throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
          var html = innerHTML.__html;
          html != null && (checkHtmlStringCoercion(html), target.push(stringToChunk("" + html)));
        }
      }
      var didWarnDefaultInputValue = !1, didWarnDefaultChecked = !1, didWarnDefaultSelectValue = !1, didWarnDefaultTextareaValue = !1, didWarnInvalidOptionChildren = !1, didWarnInvalidOptionInnerHTML = !1, didWarnSelectedSetOnOption = !1;
      function checkSelectProp(props, propName) {
        {
          var value = props[propName];
          if (value != null) {
            var array = isArray(value);
            props.multiple && !array ? error("The `%s` prop supplied to <select> must be an array if `multiple` is true.", propName) : !props.multiple && array && error("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.", propName);
          }
        }
      }
      function pushStartSelect(target, props, responseState) {
        checkControlledValueProps("select", props), checkSelectProp(props, "value"), checkSelectProp(props, "defaultValue"), props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultSelectValue && (error("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components"), didWarnDefaultSelectValue = !0), target.push(startChunkForTag("select"));
        var children = null, innerHTML = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              case "defaultValue":
              case "value":
                break;
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        return target.push(endOfStartTag), pushInnerHTML(target, innerHTML, children), children;
      }
      function flattenOptionChildren(children) {
        var content = "";
        return React26.Children.forEach(children, function(child) {
          child != null && (content += child, !didWarnInvalidOptionChildren && typeof child != "string" && typeof child != "number" && (didWarnInvalidOptionChildren = !0, error("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.")));
        }), content;
      }
      var selectedMarkerAttribute = stringToPrecomputedChunk(' selected=""');
      function pushStartOption(target, props, responseState, formatContext) {
        var selectedValue = formatContext.selectedValue;
        target.push(startChunkForTag("option"));
        var children = null, value = null, selected = null, innerHTML = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "selected":
                selected = propValue, didWarnSelectedSetOnOption || (error("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>."), didWarnSelectedSetOnOption = !0);
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              case "value":
                value = propValue;
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        if (selectedValue != null) {
          var stringValue;
          if (value !== null ? (checkAttributeStringCoercion(value, "value"), stringValue = "" + value) : (innerHTML !== null && (didWarnInvalidOptionInnerHTML || (didWarnInvalidOptionInnerHTML = !0, error("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected."))), stringValue = flattenOptionChildren(children)), isArray(selectedValue))
            for (var i7 = 0; i7 < selectedValue.length; i7++) {
              checkAttributeStringCoercion(selectedValue[i7], "value");
              var v4 = "" + selectedValue[i7];
              if (v4 === stringValue) {
                target.push(selectedMarkerAttribute);
                break;
              }
            }
          else
            checkAttributeStringCoercion(selectedValue, "select.value"), "" + selectedValue === stringValue && target.push(selectedMarkerAttribute);
        } else
          selected && target.push(selectedMarkerAttribute);
        return target.push(endOfStartTag), pushInnerHTML(target, innerHTML, children), children;
      }
      function pushInput(target, props, responseState) {
        checkControlledValueProps("input", props), props.checked !== void 0 && props.defaultChecked !== void 0 && !didWarnDefaultChecked && (error("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", "A component", props.type), didWarnDefaultChecked = !0), props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultInputValue && (error("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", "A component", props.type), didWarnDefaultInputValue = !0), target.push(startChunkForTag("input"));
        var value = null, defaultValue = null, checked = null, defaultChecked = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
              case "dangerouslySetInnerHTML":
                throw new Error("input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
              case "defaultChecked":
                defaultChecked = propValue;
                break;
              case "defaultValue":
                defaultValue = propValue;
                break;
              case "checked":
                checked = propValue;
                break;
              case "value":
                value = propValue;
                break;
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        return checked !== null ? pushAttribute(target, responseState, "checked", checked) : defaultChecked !== null && pushAttribute(target, responseState, "checked", defaultChecked), value !== null ? pushAttribute(target, responseState, "value", value) : defaultValue !== null && pushAttribute(target, responseState, "value", defaultValue), target.push(endOfStartTagSelfClosing), null;
      }
      function pushStartTextArea(target, props, responseState) {
        checkControlledValueProps("textarea", props), props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultTextareaValue && (error("Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components"), didWarnDefaultTextareaValue = !0), target.push(startChunkForTag("textarea"));
        var value = null, defaultValue = null, children = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "value":
                value = propValue;
                break;
              case "defaultValue":
                defaultValue = propValue;
                break;
              case "dangerouslySetInnerHTML":
                throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        if (value === null && defaultValue !== null && (value = defaultValue), target.push(endOfStartTag), children != null) {
          if (error("Use the `defaultValue` or `value` props instead of setting children on <textarea>."), value != null)
            throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
          if (isArray(children)) {
            if (children.length > 1)
              throw new Error("<textarea> can only have at most one child.");
            checkHtmlStringCoercion(children[0]), value = "" + children[0];
          }
          checkHtmlStringCoercion(children), value = "" + children;
        }
        return typeof value == "string" && value[0] === `
` && target.push(leadingNewline), value !== null && (checkAttributeStringCoercion(value, "value"), target.push(stringToChunk(encodeHTMLTextNode("" + value)))), null;
      }
      function pushSelfClosing(target, props, tag, responseState) {
        target.push(startChunkForTag(tag));
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
              case "dangerouslySetInnerHTML":
                throw new Error(tag + " is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        return target.push(endOfStartTagSelfClosing), null;
      }
      function pushStartMenuItem(target, props, responseState) {
        target.push(startChunkForTag("menuitem"));
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
              case "dangerouslySetInnerHTML":
                throw new Error("menuitems cannot have `children` nor `dangerouslySetInnerHTML`.");
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        return target.push(endOfStartTag), null;
      }
      function pushStartTitle(target, props, responseState) {
        target.push(startChunkForTag("title"));
        var children = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                throw new Error("`dangerouslySetInnerHTML` does not make sense on <title>.");
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        target.push(endOfStartTag);
        {
          var child = Array.isArray(children) && children.length < 2 ? children[0] || null : children;
          Array.isArray(children) && children.length > 1 ? error("A title element received an array with more than 1 element as children. In browsers title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering") : child != null && child.$$typeof != null ? error("A title element received a React element for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering") : child != null && typeof child != "string" && typeof child != "number" && error("A title element received a value that was not a string or number for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering");
        }
        return children;
      }
      function pushStartGenericElement(target, props, tag, responseState) {
        target.push(startChunkForTag(tag));
        var children = null, innerHTML = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        return target.push(endOfStartTag), pushInnerHTML(target, innerHTML, children), typeof children == "string" ? (target.push(stringToChunk(encodeHTMLTextNode(children))), null) : children;
      }
      function pushStartCustomElement(target, props, tag, responseState) {
        target.push(startChunkForTag(tag));
        var children = null, innerHTML = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              case "style":
                pushStyle(target, responseState, propValue);
                break;
              case "suppressContentEditableWarning":
              case "suppressHydrationWarning":
                break;
              default:
                isAttributeNameSafe(propKey) && typeof propValue != "function" && typeof propValue != "symbol" && target.push(attributeSeparator, stringToChunk(propKey), attributeAssign, stringToChunk(escapeTextForBrowser(propValue)), attributeEnd);
                break;
            }
          }
        return target.push(endOfStartTag), pushInnerHTML(target, innerHTML, children), children;
      }
      var leadingNewline = stringToPrecomputedChunk(`
`);
      function pushStartPreformattedElement(target, props, tag, responseState) {
        target.push(startChunkForTag(tag));
        var children = null, innerHTML = null;
        for (var propKey in props)
          if (hasOwnProperty.call(props, propKey)) {
            var propValue = props[propKey];
            if (propValue == null)
              continue;
            switch (propKey) {
              case "children":
                children = propValue;
                break;
              case "dangerouslySetInnerHTML":
                innerHTML = propValue;
                break;
              default:
                pushAttribute(target, responseState, propKey, propValue);
                break;
            }
          }
        if (target.push(endOfStartTag), innerHTML != null) {
          if (children != null)
            throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
          if (typeof innerHTML != "object" || !("__html" in innerHTML))
            throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
          var html = innerHTML.__html;
          html != null && (typeof html == "string" && html.length > 0 && html[0] === `
` ? target.push(leadingNewline, stringToChunk(html)) : (checkHtmlStringCoercion(html), target.push(stringToChunk("" + html))));
        }
        return typeof children == "string" && children[0] === `
` && target.push(leadingNewline), children;
      }
      var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/, validatedTagCache = /* @__PURE__ */ new Map();
      function startChunkForTag(tag) {
        var tagStartChunk = validatedTagCache.get(tag);
        if (tagStartChunk === void 0) {
          if (!VALID_TAG_REGEX.test(tag))
            throw new Error("Invalid tag: " + tag);
          tagStartChunk = stringToPrecomputedChunk("<" + tag), validatedTagCache.set(tag, tagStartChunk);
        }
        return tagStartChunk;
      }
      var DOCTYPE = stringToPrecomputedChunk("<!DOCTYPE html>");
      function pushStartInstance(target, type, props, responseState, formatContext) {
        switch (validateProperties(type, props), validateProperties$1(type, props), validateProperties$2(type, props, null), !props.suppressContentEditableWarning && props.contentEditable && props.children != null && error("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional."), formatContext.insertionMode !== SVG_MODE && formatContext.insertionMode !== MATHML_MODE && type.indexOf("-") === -1 && typeof props.is != "string" && type.toLowerCase() !== type && error("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type), type) {
          case "select":
            return pushStartSelect(target, props, responseState);
          case "option":
            return pushStartOption(target, props, responseState, formatContext);
          case "textarea":
            return pushStartTextArea(target, props, responseState);
          case "input":
            return pushInput(target, props, responseState);
          case "menuitem":
            return pushStartMenuItem(target, props, responseState);
          case "title":
            return pushStartTitle(target, props, responseState);
          case "listing":
          case "pre":
            return pushStartPreformattedElement(target, props, type, responseState);
          case "area":
          case "base":
          case "br":
          case "col":
          case "embed":
          case "hr":
          case "img":
          case "keygen":
          case "link":
          case "meta":
          case "param":
          case "source":
          case "track":
          case "wbr":
            return pushSelfClosing(target, props, type, responseState);
          case "annotation-xml":
          case "color-profile":
          case "font-face":
          case "font-face-src":
          case "font-face-uri":
          case "font-face-format":
          case "font-face-name":
          case "missing-glyph":
            return pushStartGenericElement(target, props, type, responseState);
          case "html":
            return formatContext.insertionMode === ROOT_HTML_MODE && target.push(DOCTYPE), pushStartGenericElement(target, props, type, responseState);
          default:
            return type.indexOf("-") === -1 && typeof props.is != "string" ? pushStartGenericElement(target, props, type, responseState) : pushStartCustomElement(target, props, type, responseState);
        }
      }
      var endTag1 = stringToPrecomputedChunk("</"), endTag2 = stringToPrecomputedChunk(">");
      function pushEndInstance(target, type, props) {
        switch (type) {
          case "area":
          case "base":
          case "br":
          case "col":
          case "embed":
          case "hr":
          case "img":
          case "input":
          case "keygen":
          case "link":
          case "meta":
          case "param":
          case "source":
          case "track":
          case "wbr":
            break;
          default:
            target.push(endTag1, stringToChunk(type), endTag2);
        }
      }
      function writeCompletedRoot(destination, responseState) {
        for (var bootstrapChunks = responseState.bootstrapChunks, i7 = 0; i7 < bootstrapChunks.length - 1; i7++)
          writeChunk(destination, bootstrapChunks[i7]);
        return i7 < bootstrapChunks.length ? writeChunkAndReturn(destination, bootstrapChunks[i7]) : !0;
      }
      var placeholder1 = stringToPrecomputedChunk('<template id="'), placeholder2 = stringToPrecomputedChunk('"></template>');
      function writePlaceholder(destination, responseState, id) {
        writeChunk(destination, placeholder1), writeChunk(destination, responseState.placeholderPrefix);
        var formattedID = stringToChunk(id.toString(16));
        return writeChunk(destination, formattedID), writeChunkAndReturn(destination, placeholder2);
      }
      var startCompletedSuspenseBoundary = stringToPrecomputedChunk("<!--$-->"), startPendingSuspenseBoundary1 = stringToPrecomputedChunk('<!--$?--><template id="'), startPendingSuspenseBoundary2 = stringToPrecomputedChunk('"></template>'), startClientRenderedSuspenseBoundary = stringToPrecomputedChunk("<!--$!-->"), endSuspenseBoundary = stringToPrecomputedChunk("<!--/$-->"), clientRenderedSuspenseBoundaryError1 = stringToPrecomputedChunk("<template"), clientRenderedSuspenseBoundaryErrorAttrInterstitial = stringToPrecomputedChunk('"'), clientRenderedSuspenseBoundaryError1A = stringToPrecomputedChunk(' data-dgst="'), clientRenderedSuspenseBoundaryError1B = stringToPrecomputedChunk(' data-msg="'), clientRenderedSuspenseBoundaryError1C = stringToPrecomputedChunk(' data-stck="'), clientRenderedSuspenseBoundaryError2 = stringToPrecomputedChunk("></template>");
      function writeStartCompletedSuspenseBoundary(destination, responseState) {
        return writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
      }
      function writeStartPendingSuspenseBoundary(destination, responseState, id) {
        if (writeChunk(destination, startPendingSuspenseBoundary1), id === null)
          throw new Error("An ID must have been assigned before we can complete the boundary.");
        return writeChunk(destination, id), writeChunkAndReturn(destination, startPendingSuspenseBoundary2);
      }
      function writeStartClientRenderedSuspenseBoundary(destination, responseState, errorDigest, errorMesssage, errorComponentStack) {
        var result;
        return result = writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary), writeChunk(destination, clientRenderedSuspenseBoundaryError1), errorDigest && (writeChunk(destination, clientRenderedSuspenseBoundaryError1A), writeChunk(destination, stringToChunk(escapeTextForBrowser(errorDigest))), writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial)), errorMesssage && (writeChunk(destination, clientRenderedSuspenseBoundaryError1B), writeChunk(destination, stringToChunk(escapeTextForBrowser(errorMesssage))), writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial)), errorComponentStack && (writeChunk(destination, clientRenderedSuspenseBoundaryError1C), writeChunk(destination, stringToChunk(escapeTextForBrowser(errorComponentStack))), writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial)), result = writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2), result;
      }
      function writeEndCompletedSuspenseBoundary(destination, responseState) {
        return writeChunkAndReturn(destination, endSuspenseBoundary);
      }
      function writeEndPendingSuspenseBoundary(destination, responseState) {
        return writeChunkAndReturn(destination, endSuspenseBoundary);
      }
      function writeEndClientRenderedSuspenseBoundary(destination, responseState) {
        return writeChunkAndReturn(destination, endSuspenseBoundary);
      }
      var startSegmentHTML = stringToPrecomputedChunk('<div hidden id="'), startSegmentHTML2 = stringToPrecomputedChunk('">'), endSegmentHTML = stringToPrecomputedChunk("</div>"), startSegmentSVG = stringToPrecomputedChunk('<svg aria-hidden="true" style="display:none" id="'), startSegmentSVG2 = stringToPrecomputedChunk('">'), endSegmentSVG = stringToPrecomputedChunk("</svg>"), startSegmentMathML = stringToPrecomputedChunk('<math aria-hidden="true" style="display:none" id="'), startSegmentMathML2 = stringToPrecomputedChunk('">'), endSegmentMathML = stringToPrecomputedChunk("</math>"), startSegmentTable = stringToPrecomputedChunk('<table hidden id="'), startSegmentTable2 = stringToPrecomputedChunk('">'), endSegmentTable = stringToPrecomputedChunk("</table>"), startSegmentTableBody = stringToPrecomputedChunk('<table hidden><tbody id="'), startSegmentTableBody2 = stringToPrecomputedChunk('">'), endSegmentTableBody = stringToPrecomputedChunk("</tbody></table>"), startSegmentTableRow = stringToPrecomputedChunk('<table hidden><tr id="'), startSegmentTableRow2 = stringToPrecomputedChunk('">'), endSegmentTableRow = stringToPrecomputedChunk("</tr></table>"), startSegmentColGroup = stringToPrecomputedChunk('<table hidden><colgroup id="'), startSegmentColGroup2 = stringToPrecomputedChunk('">'), endSegmentColGroup = stringToPrecomputedChunk("</colgroup></table>");
      function writeStartSegment(destination, responseState, formatContext, id) {
        switch (formatContext.insertionMode) {
          case ROOT_HTML_MODE:
          case HTML_MODE:
            return writeChunk(destination, startSegmentHTML), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, stringToChunk(id.toString(16))), writeChunkAndReturn(destination, startSegmentHTML2);
          case SVG_MODE:
            return writeChunk(destination, startSegmentSVG), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, stringToChunk(id.toString(16))), writeChunkAndReturn(destination, startSegmentSVG2);
          case MATHML_MODE:
            return writeChunk(destination, startSegmentMathML), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, stringToChunk(id.toString(16))), writeChunkAndReturn(destination, startSegmentMathML2);
          case HTML_TABLE_MODE:
            return writeChunk(destination, startSegmentTable), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, stringToChunk(id.toString(16))), writeChunkAndReturn(destination, startSegmentTable2);
          case HTML_TABLE_BODY_MODE:
            return writeChunk(destination, startSegmentTableBody), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, stringToChunk(id.toString(16))), writeChunkAndReturn(destination, startSegmentTableBody2);
          case HTML_TABLE_ROW_MODE:
            return writeChunk(destination, startSegmentTableRow), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, stringToChunk(id.toString(16))), writeChunkAndReturn(destination, startSegmentTableRow2);
          case HTML_COLGROUP_MODE:
            return writeChunk(destination, startSegmentColGroup), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, stringToChunk(id.toString(16))), writeChunkAndReturn(destination, startSegmentColGroup2);
          default:
            throw new Error("Unknown insertion mode. This is a bug in React.");
        }
      }
      function writeEndSegment(destination, formatContext) {
        switch (formatContext.insertionMode) {
          case ROOT_HTML_MODE:
          case HTML_MODE:
            return writeChunkAndReturn(destination, endSegmentHTML);
          case SVG_MODE:
            return writeChunkAndReturn(destination, endSegmentSVG);
          case MATHML_MODE:
            return writeChunkAndReturn(destination, endSegmentMathML);
          case HTML_TABLE_MODE:
            return writeChunkAndReturn(destination, endSegmentTable);
          case HTML_TABLE_BODY_MODE:
            return writeChunkAndReturn(destination, endSegmentTableBody);
          case HTML_TABLE_ROW_MODE:
            return writeChunkAndReturn(destination, endSegmentTableRow);
          case HTML_COLGROUP_MODE:
            return writeChunkAndReturn(destination, endSegmentColGroup);
          default:
            throw new Error("Unknown insertion mode. This is a bug in React.");
        }
      }
      var completeSegmentFunction = "function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)}", completeBoundaryFunction = 'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}}', clientRenderFunction = 'function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())}', completeSegmentScript1Full = stringToPrecomputedChunk(completeSegmentFunction + ';$RS("'), completeSegmentScript1Partial = stringToPrecomputedChunk('$RS("'), completeSegmentScript2 = stringToPrecomputedChunk('","'), completeSegmentScript3 = stringToPrecomputedChunk('")</script>');
      function writeCompletedSegmentInstruction(destination, responseState, contentSegmentID) {
        writeChunk(destination, responseState.startInlineScript), responseState.sentCompleteSegmentFunction ? writeChunk(destination, completeSegmentScript1Partial) : (responseState.sentCompleteSegmentFunction = !0, writeChunk(destination, completeSegmentScript1Full)), writeChunk(destination, responseState.segmentPrefix);
        var formattedID = stringToChunk(contentSegmentID.toString(16));
        return writeChunk(destination, formattedID), writeChunk(destination, completeSegmentScript2), writeChunk(destination, responseState.placeholderPrefix), writeChunk(destination, formattedID), writeChunkAndReturn(destination, completeSegmentScript3);
      }
      var completeBoundaryScript1Full = stringToPrecomputedChunk(completeBoundaryFunction + ';$RC("'), completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC("'), completeBoundaryScript2 = stringToPrecomputedChunk('","'), completeBoundaryScript3 = stringToPrecomputedChunk('")</script>');
      function writeCompletedBoundaryInstruction(destination, responseState, boundaryID, contentSegmentID) {
        if (writeChunk(destination, responseState.startInlineScript), responseState.sentCompleteBoundaryFunction ? writeChunk(destination, completeBoundaryScript1Partial) : (responseState.sentCompleteBoundaryFunction = !0, writeChunk(destination, completeBoundaryScript1Full)), boundaryID === null)
          throw new Error("An ID must have been assigned before we can complete the boundary.");
        var formattedContentID = stringToChunk(contentSegmentID.toString(16));
        return writeChunk(destination, boundaryID), writeChunk(destination, completeBoundaryScript2), writeChunk(destination, responseState.segmentPrefix), writeChunk(destination, formattedContentID), writeChunkAndReturn(destination, completeBoundaryScript3);
      }
      var clientRenderScript1Full = stringToPrecomputedChunk(clientRenderFunction + ';$RX("'), clientRenderScript1Partial = stringToPrecomputedChunk('$RX("'), clientRenderScript1A = stringToPrecomputedChunk('"'), clientRenderScript2 = stringToPrecomputedChunk(")</script>"), clientRenderErrorScriptArgInterstitial = stringToPrecomputedChunk(",");
      function writeClientRenderBoundaryInstruction(destination, responseState, boundaryID, errorDigest, errorMessage, errorComponentStack) {
        if (writeChunk(destination, responseState.startInlineScript), responseState.sentClientRenderFunction ? writeChunk(destination, clientRenderScript1Partial) : (responseState.sentClientRenderFunction = !0, writeChunk(destination, clientRenderScript1Full)), boundaryID === null)
          throw new Error("An ID must have been assigned before we can complete the boundary.");
        return writeChunk(destination, boundaryID), writeChunk(destination, clientRenderScript1A), (errorDigest || errorMessage || errorComponentStack) && (writeChunk(destination, clientRenderErrorScriptArgInterstitial), writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorDigest || "")))), (errorMessage || errorComponentStack) && (writeChunk(destination, clientRenderErrorScriptArgInterstitial), writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorMessage || "")))), errorComponentStack && (writeChunk(destination, clientRenderErrorScriptArgInterstitial), writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorComponentStack)))), writeChunkAndReturn(destination, clientRenderScript2);
      }
      var regexForJSStringsInScripts = /[<\u2028\u2029]/g;
      function escapeJSStringsForInstructionScripts(input) {
        var escaped = JSON.stringify(input);
        return escaped.replace(regexForJSStringsInScripts, function(match) {
          switch (match) {
            case "<":
              return "\\u003c";
            case "\u2028":
              return "\\u2028";
            case "\u2029":
              return "\\u2029";
            default:
              throw new Error("escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");
          }
        });
      }
      var assign = Object.assign, REACT_ELEMENT_TYPE = Symbol.for("react.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler"), REACT_PROVIDER_TYPE = Symbol.for("react.provider"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_SCOPE_TYPE = Symbol.for("react.scope"), REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for("react.debug_trace_mode"), REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden"), REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for("react.default_value"), MAYBE_ITERATOR_SYMBOL = Symbol.iterator, FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable != "object")
          return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        return typeof maybeIterator == "function" ? maybeIterator : null;
      }
      function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName)
          return displayName;
        var functionName = innerType.displayName || innerType.name || "";
        return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
      }
      function getContextName(type) {
        return type.displayName || "Context";
      }
      function getComponentNameFromType(type) {
        if (type == null)
          return null;
        if (typeof type.tag == "number" && error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof type == "function")
          return type.displayName || type.name || null;
        if (typeof type == "string")
          return type;
        switch (type) {
          case REACT_FRAGMENT_TYPE:
            return "Fragment";
          case REACT_PORTAL_TYPE:
            return "Portal";
          case REACT_PROFILER_TYPE:
            return "Profiler";
          case REACT_STRICT_MODE_TYPE:
            return "StrictMode";
          case REACT_SUSPENSE_TYPE:
            return "Suspense";
          case REACT_SUSPENSE_LIST_TYPE:
            return "SuspenseList";
        }
        if (typeof type == "object")
          switch (type.$$typeof) {
            case REACT_CONTEXT_TYPE:
              var context = type;
              return getContextName(context) + ".Consumer";
            case REACT_PROVIDER_TYPE:
              var provider = type;
              return getContextName(provider._context) + ".Provider";
            case REACT_FORWARD_REF_TYPE:
              return getWrappedName(type, type.render, "ForwardRef");
            case REACT_MEMO_TYPE:
              var outerName = type.displayName || null;
              return outerName !== null ? outerName : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE: {
              var lazyComponent = type, payload = lazyComponent._payload, init = lazyComponent._init;
              try {
                return getComponentNameFromType(init(payload));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var disabledDepth = 0, prevLog, prevInfo, prevWarn, prevError, prevGroup, prevGroupCollapsed, prevGroupEnd;
      function disabledLog() {
      }
      disabledLog.__reactDisabledLog = !0;
      function disableLogs() {
        {
          if (disabledDepth === 0) {
            prevLog = console.log, prevInfo = console.info, prevWarn = console.warn, prevError = console.error, prevGroup = console.group, prevGroupCollapsed = console.groupCollapsed, prevGroupEnd = console.groupEnd;
            var props = {
              configurable: !0,
              enumerable: !0,
              value: disabledLog,
              writable: !0
            };
            Object.defineProperties(console, {
              info: props,
              log: props,
              warn: props,
              error: props,
              group: props,
              groupCollapsed: props,
              groupEnd: props
            });
          }
          disabledDepth++;
        }
      }
      function reenableLogs() {
        {
          if (disabledDepth--, disabledDepth === 0) {
            var props = {
              configurable: !0,
              enumerable: !0,
              writable: !0
            };
            Object.defineProperties(console, {
              log: assign({}, props, {
                value: prevLog
              }),
              info: assign({}, props, {
                value: prevInfo
              }),
              warn: assign({}, props, {
                value: prevWarn
              }),
              error: assign({}, props, {
                value: prevError
              }),
              group: assign({}, props, {
                value: prevGroup
              }),
              groupCollapsed: assign({}, props, {
                value: prevGroupCollapsed
              }),
              groupEnd: assign({}, props, {
                value: prevGroupEnd
              })
            });
          }
          disabledDepth < 0 && error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }
      }
      var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher, prefix;
      function describeBuiltInComponentFrame(name, source, ownerFn) {
        {
          if (prefix === void 0)
            try {
              throw Error();
            } catch (x5) {
              var match = x5.stack.trim().match(/\n( *(at )?)/);
              prefix = match && match[1] || "";
            }
          return `
` + prefix + name;
        }
      }
      var reentry = !1, componentFrameCache;
      {
        var PossiblyWeakMap = typeof WeakMap == "function" ? WeakMap : Map;
        componentFrameCache = new PossiblyWeakMap();
      }
      function describeNativeComponentFrame(fn, construct) {
        if (!fn || reentry)
          return "";
        {
          var frame = componentFrameCache.get(fn);
          if (frame !== void 0)
            return frame;
        }
        var control;
        reentry = !0;
        var previousPrepareStackTrace = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher.current, ReactCurrentDispatcher.current = null, disableLogs();
        try {
          if (construct) {
            var Fake = function() {
              throw Error();
            };
            if (Object.defineProperty(Fake.prototype, "props", {
              set: function() {
                throw Error();
              }
            }), typeof Reflect == "object" && Reflect.construct) {
              try {
                Reflect.construct(Fake, []);
              } catch (x5) {
                control = x5;
              }
              Reflect.construct(fn, [], Fake);
            } else {
              try {
                Fake.call();
              } catch (x5) {
                control = x5;
              }
              fn.call(Fake.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (x5) {
              control = x5;
            }
            fn();
          }
        } catch (sample) {
          if (sample && control && typeof sample.stack == "string") {
            for (var sampleLines = sample.stack.split(`
`), controlLines = control.stack.split(`
`), s15 = sampleLines.length - 1, c13 = controlLines.length - 1; s15 >= 1 && c13 >= 0 && sampleLines[s15] !== controlLines[c13]; )
              c13--;
            for (; s15 >= 1 && c13 >= 0; s15--, c13--)
              if (sampleLines[s15] !== controlLines[c13]) {
                if (s15 !== 1 || c13 !== 1)
                  do
                    if (s15--, c13--, c13 < 0 || sampleLines[s15] !== controlLines[c13]) {
                      var _frame = `
` + sampleLines[s15].replace(" at new ", " at ");
                      return fn.displayName && _frame.includes("<anonymous>") && (_frame = _frame.replace("<anonymous>", fn.displayName)), typeof fn == "function" && componentFrameCache.set(fn, _frame), _frame;
                    }
                  while (s15 >= 1 && c13 >= 0);
                break;
              }
          }
        } finally {
          reentry = !1, ReactCurrentDispatcher.current = previousDispatcher, reenableLogs(), Error.prepareStackTrace = previousPrepareStackTrace;
        }
        var name = fn ? fn.displayName || fn.name : "", syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
        return typeof fn == "function" && componentFrameCache.set(fn, syntheticFrame), syntheticFrame;
      }
      function describeClassComponentFrame(ctor, source, ownerFn) {
        return describeNativeComponentFrame(ctor, !0);
      }
      function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, !1);
      }
      function shouldConstruct(Component2) {
        var prototype = Component2.prototype;
        return !!(prototype && prototype.isReactComponent);
      }
      function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null)
          return "";
        if (typeof type == "function")
          return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type == "string")
          return describeBuiltInComponentFrame(type);
        switch (type) {
          case REACT_SUSPENSE_TYPE:
            return describeBuiltInComponentFrame("Suspense");
          case REACT_SUSPENSE_LIST_TYPE:
            return describeBuiltInComponentFrame("SuspenseList");
        }
        if (typeof type == "object")
          switch (type.$$typeof) {
            case REACT_FORWARD_REF_TYPE:
              return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
              return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE: {
              var lazyComponent = type, payload = lazyComponent._payload, init = lazyComponent._init;
              try {
                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
              } catch {
              }
            }
          }
        return "";
      }
      var loggedTypeFailures = {}, ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
      function setCurrentlyValidatingElement(element) {
        if (element) {
          var owner = element._owner, stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
          ReactDebugCurrentFrame.setExtraStackFrame(stack);
        } else
          ReactDebugCurrentFrame.setExtraStackFrame(null);
      }
      function checkPropTypes(typeSpecs, values, location, componentName, element) {
        {
          var has = Function.call.bind(hasOwnProperty);
          for (var typeSpecName in typeSpecs)
            if (has(typeSpecs, typeSpecName)) {
              var error$1 = void 0;
              try {
                if (typeof typeSpecs[typeSpecName] != "function") {
                  var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw err.name = "Invariant Violation", err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (ex) {
                error$1 = ex;
              }
              error$1 && !(error$1 instanceof Error) && (setCurrentlyValidatingElement(element), error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1), setCurrentlyValidatingElement(null)), error$1 instanceof Error && !(error$1.message in loggedTypeFailures) && (loggedTypeFailures[error$1.message] = !0, setCurrentlyValidatingElement(element), error("Failed %s type: %s", location, error$1.message), setCurrentlyValidatingElement(null));
            }
        }
      }
      var warnedAboutMissingGetChildContext;
      warnedAboutMissingGetChildContext = {};
      var emptyContextObject = {};
      Object.freeze(emptyContextObject);
      function getMaskedContext(type, unmaskedContext) {
        {
          var contextTypes = type.contextTypes;
          if (!contextTypes)
            return emptyContextObject;
          var context = {};
          for (var key in contextTypes)
            context[key] = unmaskedContext[key];
          {
            var name = getComponentNameFromType(type) || "Unknown";
            checkPropTypes(contextTypes, context, "context", name);
          }
          return context;
        }
      }
      function processChildContext(instance, type, parentContext, childContextTypes) {
        {
          if (typeof instance.getChildContext != "function") {
            {
              var componentName = getComponentNameFromType(type) || "Unknown";
              warnedAboutMissingGetChildContext[componentName] || (warnedAboutMissingGetChildContext[componentName] = !0, error("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName));
            }
            return parentContext;
          }
          var childContext = instance.getChildContext();
          for (var contextKey in childContext)
            if (!(contextKey in childContextTypes))
              throw new Error((getComponentNameFromType(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
          {
            var name = getComponentNameFromType(type) || "Unknown";
            checkPropTypes(childContextTypes, childContext, "child context", name);
          }
          return assign({}, parentContext, childContext);
        }
      }
      var rendererSigil;
      rendererSigil = {};
      var rootContextSnapshot = null, currentActiveSnapshot = null;
      function popNode(prev) {
        prev.context._currentValue = prev.parentValue;
      }
      function pushNode(next) {
        next.context._currentValue = next.value;
      }
      function popToNearestCommonAncestor(prev, next) {
        if (prev !== next) {
          popNode(prev);
          var parentPrev = prev.parent, parentNext = next.parent;
          if (parentPrev === null) {
            if (parentNext !== null)
              throw new Error("The stacks must reach the root at the same time. This is a bug in React.");
          } else {
            if (parentNext === null)
              throw new Error("The stacks must reach the root at the same time. This is a bug in React.");
            popToNearestCommonAncestor(parentPrev, parentNext);
          }
          pushNode(next);
        }
      }
      function popAllPrevious(prev) {
        popNode(prev);
        var parentPrev = prev.parent;
        parentPrev !== null && popAllPrevious(parentPrev);
      }
      function pushAllNext(next) {
        var parentNext = next.parent;
        parentNext !== null && pushAllNext(parentNext), pushNode(next);
      }
      function popPreviousToCommonLevel(prev, next) {
        popNode(prev);
        var parentPrev = prev.parent;
        if (parentPrev === null)
          throw new Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
        parentPrev.depth === next.depth ? popToNearestCommonAncestor(parentPrev, next) : popPreviousToCommonLevel(parentPrev, next);
      }
      function popNextToCommonLevel(prev, next) {
        var parentNext = next.parent;
        if (parentNext === null)
          throw new Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
        prev.depth === parentNext.depth ? popToNearestCommonAncestor(prev, parentNext) : popNextToCommonLevel(prev, parentNext), pushNode(next);
      }
      function switchContext(newSnapshot) {
        var prev = currentActiveSnapshot, next = newSnapshot;
        prev !== next && (prev === null ? pushAllNext(next) : next === null ? popAllPrevious(prev) : prev.depth === next.depth ? popToNearestCommonAncestor(prev, next) : prev.depth > next.depth ? popPreviousToCommonLevel(prev, next) : popNextToCommonLevel(prev, next), currentActiveSnapshot = next);
      }
      function pushProvider(context, nextValue) {
        var prevValue;
        prevValue = context._currentValue, context._currentValue = nextValue, context._currentRenderer !== void 0 && context._currentRenderer !== null && context._currentRenderer !== rendererSigil && error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported."), context._currentRenderer = rendererSigil;
        var prevNode = currentActiveSnapshot, newNode = {
          parent: prevNode,
          depth: prevNode === null ? 0 : prevNode.depth + 1,
          context,
          parentValue: prevValue,
          value: nextValue
        };
        return currentActiveSnapshot = newNode, newNode;
      }
      function popProvider(context) {
        var prevSnapshot = currentActiveSnapshot;
        if (prevSnapshot === null)
          throw new Error("Tried to pop a Context at the root of the app. This is a bug in React.");
        prevSnapshot.context !== context && error("The parent context is not the expected context. This is probably a bug in React.");
        {
          var value = prevSnapshot.parentValue;
          value === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED ? prevSnapshot.context._currentValue = prevSnapshot.context._defaultValue : prevSnapshot.context._currentValue = value, context._currentRenderer !== void 0 && context._currentRenderer !== null && context._currentRenderer !== rendererSigil && error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported."), context._currentRenderer = rendererSigil;
        }
        return currentActiveSnapshot = prevSnapshot.parent;
      }
      function getActiveContext() {
        return currentActiveSnapshot;
      }
      function readContext(context) {
        var value = context._currentValue;
        return value;
      }
      function get(key) {
        return key._reactInternals;
      }
      function set(key, value) {
        key._reactInternals = value;
      }
      var didWarnAboutNoopUpdateForComponent = {}, didWarnAboutDeprecatedWillMount = {}, didWarnAboutUninitializedState, didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate, didWarnAboutLegacyLifecyclesAndDerivedState, didWarnAboutUndefinedDerivedState, warnOnUndefinedDerivedState, warnOnInvalidCallback, didWarnAboutDirectlyAssigningPropsToState, didWarnAboutContextTypeAndContextTypes, didWarnAboutInvalidateContextType;
      {
        didWarnAboutUninitializedState = /* @__PURE__ */ new Set(), didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = /* @__PURE__ */ new Set(), didWarnAboutLegacyLifecyclesAndDerivedState = /* @__PURE__ */ new Set(), didWarnAboutDirectlyAssigningPropsToState = /* @__PURE__ */ new Set(), didWarnAboutUndefinedDerivedState = /* @__PURE__ */ new Set(), didWarnAboutContextTypeAndContextTypes = /* @__PURE__ */ new Set(), didWarnAboutInvalidateContextType = /* @__PURE__ */ new Set();
        var didWarnOnInvalidCallback = /* @__PURE__ */ new Set();
        warnOnInvalidCallback = function(callback, callerName) {
          if (!(callback === null || typeof callback == "function")) {
            var key = callerName + "_" + callback;
            didWarnOnInvalidCallback.has(key) || (didWarnOnInvalidCallback.add(key), error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback));
          }
        }, warnOnUndefinedDerivedState = function(type, partialState) {
          if (partialState === void 0) {
            var componentName = getComponentNameFromType(type) || "Component";
            didWarnAboutUndefinedDerivedState.has(componentName) || (didWarnAboutUndefinedDerivedState.add(componentName), error("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName));
          }
        };
      }
      function warnNoop(publicInstance, callerName) {
        {
          var _constructor = publicInstance.constructor, componentName = _constructor && getComponentNameFromType(_constructor) || "ReactClass", warningKey = componentName + "." + callerName;
          if (didWarnAboutNoopUpdateForComponent[warningKey])
            return;
          error(`%s(...): Can only update a mounting component. This usually means you called %s() outside componentWillMount() on the server. This is a no-op.

Please check the code for the %s component.`, callerName, callerName, componentName), didWarnAboutNoopUpdateForComponent[warningKey] = !0;
        }
      }
      var classComponentUpdater = {
        isMounted: function(inst) {
          return !1;
        },
        enqueueSetState: function(inst, payload, callback) {
          var internals = get(inst);
          internals.queue === null ? warnNoop(inst, "setState") : (internals.queue.push(payload), callback != null && warnOnInvalidCallback(callback, "setState"));
        },
        enqueueReplaceState: function(inst, payload, callback) {
          var internals = get(inst);
          internals.replace = !0, internals.queue = [payload], callback != null && warnOnInvalidCallback(callback, "setState");
        },
        enqueueForceUpdate: function(inst, callback) {
          var internals = get(inst);
          internals.queue === null ? warnNoop(inst, "forceUpdate") : callback != null && warnOnInvalidCallback(callback, "setState");
        }
      };
      function applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, prevState, nextProps) {
        var partialState = getDerivedStateFromProps(nextProps, prevState);
        warnOnUndefinedDerivedState(ctor, partialState);
        var newState = partialState == null ? prevState : assign({}, prevState, partialState);
        return newState;
      }
      function constructClassInstance(ctor, props, maskedLegacyContext) {
        var context = emptyContextObject, contextType = ctor.contextType;
        if ("contextType" in ctor) {
          var isValid = (
            // Allow null for conditional declaration
            contextType === null || contextType !== void 0 && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === void 0
          );
          if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
            didWarnAboutInvalidateContextType.add(ctor);
            var addendum = "";
            contextType === void 0 ? addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file." : typeof contextType != "object" ? addendum = " However, it is set to a " + typeof contextType + "." : contextType.$$typeof === REACT_PROVIDER_TYPE ? addendum = " Did you accidentally pass the Context.Provider instead?" : contextType._context !== void 0 ? addendum = " Did you accidentally pass the Context.Consumer instead?" : addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.", error("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(ctor) || "Component", addendum);
          }
        }
        typeof contextType == "object" && contextType !== null ? context = readContext(contextType) : context = maskedLegacyContext;
        var instance = new ctor(props, context);
        {
          if (typeof ctor.getDerivedStateFromProps == "function" && (instance.state === null || instance.state === void 0)) {
            var componentName = getComponentNameFromType(ctor) || "Component";
            didWarnAboutUninitializedState.has(componentName) || (didWarnAboutUninitializedState.add(componentName), error("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? "null" : "undefined", componentName));
          }
          if (typeof ctor.getDerivedStateFromProps == "function" || typeof instance.getSnapshotBeforeUpdate == "function") {
            var foundWillMountName = null, foundWillReceivePropsName = null, foundWillUpdateName = null;
            if (typeof instance.componentWillMount == "function" && instance.componentWillMount.__suppressDeprecationWarning !== !0 ? foundWillMountName = "componentWillMount" : typeof instance.UNSAFE_componentWillMount == "function" && (foundWillMountName = "UNSAFE_componentWillMount"), typeof instance.componentWillReceiveProps == "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== !0 ? foundWillReceivePropsName = "componentWillReceiveProps" : typeof instance.UNSAFE_componentWillReceiveProps == "function" && (foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps"), typeof instance.componentWillUpdate == "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== !0 ? foundWillUpdateName = "componentWillUpdate" : typeof instance.UNSAFE_componentWillUpdate == "function" && (foundWillUpdateName = "UNSAFE_componentWillUpdate"), foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
              var _componentName = getComponentNameFromType(ctor) || "Component", newApiName = typeof ctor.getDerivedStateFromProps == "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
              didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName) || (didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName), error(`Unsafe legacy lifecycles will not be called for components using new component APIs.

%s uses %s but also contains the following legacy lifecycles:%s%s%s

The above lifecycles should be removed. Learn more about this warning here:
https://reactjs.org/link/unsafe-component-lifecycles`, _componentName, newApiName, foundWillMountName !== null ? `
  ` + foundWillMountName : "", foundWillReceivePropsName !== null ? `
  ` + foundWillReceivePropsName : "", foundWillUpdateName !== null ? `
  ` + foundWillUpdateName : ""));
            }
          }
        }
        return instance;
      }
      function checkClassInstance(instance, ctor, newProps) {
        {
          var name = getComponentNameFromType(ctor) || "Component", renderPresent = instance.render;
          renderPresent || (ctor.prototype && typeof ctor.prototype.render == "function" ? error("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name) : error("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name)), instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state && error("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name), instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved && error("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name), instance.propTypes && error("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name), instance.contextType && error("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name), instance.contextTypes && error("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name), ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor) && (didWarnAboutContextTypeAndContextTypes.add(ctor), error("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name)), typeof instance.componentShouldUpdate == "function" && error("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name), ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate < "u" && error("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(ctor) || "A pure component"), typeof instance.componentDidUnmount == "function" && error("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name), typeof instance.componentDidReceiveProps == "function" && error("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name), typeof instance.componentWillRecieveProps == "function" && error("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name), typeof instance.UNSAFE_componentWillRecieveProps == "function" && error("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
          var hasMutatedProps = instance.props !== newProps;
          instance.props !== void 0 && hasMutatedProps && error("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name), instance.defaultProps && error("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name), typeof instance.getSnapshotBeforeUpdate == "function" && typeof instance.componentDidUpdate != "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor) && (didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor), error("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(ctor))), typeof instance.getDerivedStateFromProps == "function" && error("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name), typeof instance.getDerivedStateFromError == "function" && error("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name), typeof ctor.getSnapshotBeforeUpdate == "function" && error("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
          var _state = instance.state;
          _state && (typeof _state != "object" || isArray(_state)) && error("%s.state: must be set to an object or null", name), typeof instance.getChildContext == "function" && typeof ctor.childContextTypes != "object" && error("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
        }
      }
      function callComponentWillMount(type, instance) {
        var oldState = instance.state;
        if (typeof instance.componentWillMount == "function") {
          if (instance.componentWillMount.__suppressDeprecationWarning !== !0) {
            var componentName = getComponentNameFromType(type) || "Unknown";
            didWarnAboutDeprecatedWillMount[componentName] || (warn(
              // keep this warning in sync with ReactStrictModeWarning.js
              `componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code from componentWillMount to componentDidMount (preferred in most cases) or the constructor.

Please update the following components: %s`,
              componentName
            ), didWarnAboutDeprecatedWillMount[componentName] = !0);
          }
          instance.componentWillMount();
        }
        typeof instance.UNSAFE_componentWillMount == "function" && instance.UNSAFE_componentWillMount(), oldState !== instance.state && (error("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromType(type) || "Component"), classComponentUpdater.enqueueReplaceState(instance, instance.state, null));
      }
      function processUpdateQueue(internalInstance, inst, props, maskedLegacyContext) {
        if (internalInstance.queue !== null && internalInstance.queue.length > 0) {
          var oldQueue = internalInstance.queue, oldReplace = internalInstance.replace;
          if (internalInstance.queue = null, internalInstance.replace = !1, oldReplace && oldQueue.length === 1)
            inst.state = oldQueue[0];
          else {
            for (var nextState = oldReplace ? oldQueue[0] : inst.state, dontMutate = !0, i7 = oldReplace ? 1 : 0; i7 < oldQueue.length; i7++) {
              var partial = oldQueue[i7], partialState = typeof partial == "function" ? partial.call(inst, nextState, props, maskedLegacyContext) : partial;
              partialState != null && (dontMutate ? (dontMutate = !1, nextState = assign({}, nextState, partialState)) : assign(nextState, partialState));
            }
            inst.state = nextState;
          }
        } else
          internalInstance.queue = null;
      }
      function mountClassInstance(instance, ctor, newProps, maskedLegacyContext) {
        checkClassInstance(instance, ctor, newProps);
        var initialState = instance.state !== void 0 ? instance.state : null;
        instance.updater = classComponentUpdater, instance.props = newProps, instance.state = initialState;
        var internalInstance = {
          queue: [],
          replace: !1
        };
        set(instance, internalInstance);
        var contextType = ctor.contextType;
        if (typeof contextType == "object" && contextType !== null ? instance.context = readContext(contextType) : instance.context = maskedLegacyContext, instance.state === newProps) {
          var componentName = getComponentNameFromType(ctor) || "Component";
          didWarnAboutDirectlyAssigningPropsToState.has(componentName) || (didWarnAboutDirectlyAssigningPropsToState.add(componentName), error("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName));
        }
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        typeof getDerivedStateFromProps == "function" && (instance.state = applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, initialState, newProps)), typeof ctor.getDerivedStateFromProps != "function" && typeof instance.getSnapshotBeforeUpdate != "function" && (typeof instance.UNSAFE_componentWillMount == "function" || typeof instance.componentWillMount == "function") && (callComponentWillMount(ctor, instance), processUpdateQueue(internalInstance, instance, newProps, maskedLegacyContext));
      }
      var emptyTreeContext = {
        id: 1,
        overflow: ""
      };
      function getTreeId(context) {
        var overflow = context.overflow, idWithLeadingBit = context.id, id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
        return id.toString(32) + overflow;
      }
      function pushTreeContext(baseContext, totalChildren, index3) {
        var baseIdWithLeadingBit = baseContext.id, baseOverflow = baseContext.overflow, baseLength = getBitLength(baseIdWithLeadingBit) - 1, baseId = baseIdWithLeadingBit & ~(1 << baseLength), slot = index3 + 1, length2 = getBitLength(totalChildren) + baseLength;
        if (length2 > 30) {
          var numberOfOverflowBits = baseLength - baseLength % 5, newOverflowBits = (1 << numberOfOverflowBits) - 1, newOverflow = (baseId & newOverflowBits).toString(32), restOfBaseId = baseId >> numberOfOverflowBits, restOfBaseLength = baseLength - numberOfOverflowBits, restOfLength = getBitLength(totalChildren) + restOfBaseLength, restOfNewBits = slot << restOfBaseLength, id = restOfNewBits | restOfBaseId, overflow = newOverflow + baseOverflow;
          return {
            id: 1 << restOfLength | id,
            overflow
          };
        } else {
          var newBits = slot << baseLength, _id = newBits | baseId, _overflow = baseOverflow;
          return {
            id: 1 << length2 | _id,
            overflow: _overflow
          };
        }
      }
      function getBitLength(number) {
        return 32 - clz32(number);
      }
      function getLeadingBit(id) {
        return 1 << getBitLength(id) - 1;
      }
      var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback, log = Math.log, LN2 = Math.LN2;
      function clz32Fallback(x5) {
        var asUint = x5 >>> 0;
        return asUint === 0 ? 32 : 31 - (log(asUint) / LN2 | 0) | 0;
      }
      function is(x5, y6) {
        return x5 === y6 && (x5 !== 0 || 1 / x5 === 1 / y6) || x5 !== x5 && y6 !== y6;
      }
      var objectIs = typeof Object.is == "function" ? Object.is : is, currentlyRenderingComponent = null, currentlyRenderingTask = null, firstWorkInProgressHook = null, workInProgressHook = null, isReRender = !1, didScheduleRenderPhaseUpdate = !1, localIdCounter = 0, renderPhaseUpdates = null, numberOfReRenders = 0, RE_RENDER_LIMIT = 25, isInHookUserCodeInDev = !1, currentHookNameInDev;
      function resolveCurrentlyRenderingComponent() {
        if (currentlyRenderingComponent === null)
          throw new Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
        return isInHookUserCodeInDev && error("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks"), currentlyRenderingComponent;
      }
      function areHookInputsEqual(nextDeps, prevDeps) {
        if (prevDeps === null)
          return error("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev), !1;
        nextDeps.length !== prevDeps.length && error(`The final argument passed to %s changed size between renders. The order and size of this array must remain constant.

Previous: %s
Incoming: %s`, currentHookNameInDev, "[" + nextDeps.join(", ") + "]", "[" + prevDeps.join(", ") + "]");
        for (var i7 = 0; i7 < prevDeps.length && i7 < nextDeps.length; i7++)
          if (!objectIs(nextDeps[i7], prevDeps[i7]))
            return !1;
        return !0;
      }
      function createHook() {
        if (numberOfReRenders > 0)
          throw new Error("Rendered more hooks than during the previous render");
        return {
          memoizedState: null,
          queue: null,
          next: null
        };
      }
      function createWorkInProgressHook() {
        return workInProgressHook === null ? firstWorkInProgressHook === null ? (isReRender = !1, firstWorkInProgressHook = workInProgressHook = createHook()) : (isReRender = !0, workInProgressHook = firstWorkInProgressHook) : workInProgressHook.next === null ? (isReRender = !1, workInProgressHook = workInProgressHook.next = createHook()) : (isReRender = !0, workInProgressHook = workInProgressHook.next), workInProgressHook;
      }
      function prepareToUseHooks(task, componentIdentity) {
        currentlyRenderingComponent = componentIdentity, currentlyRenderingTask = task, isInHookUserCodeInDev = !1, localIdCounter = 0;
      }
      function finishHooks(Component2, props, children, refOrContext) {
        for (; didScheduleRenderPhaseUpdate; )
          didScheduleRenderPhaseUpdate = !1, localIdCounter = 0, numberOfReRenders += 1, workInProgressHook = null, children = Component2(props, refOrContext);
        return resetHooksState(), children;
      }
      function checkDidRenderIdHook() {
        var didRenderIdHook = localIdCounter !== 0;
        return didRenderIdHook;
      }
      function resetHooksState() {
        isInHookUserCodeInDev = !1, currentlyRenderingComponent = null, currentlyRenderingTask = null, didScheduleRenderPhaseUpdate = !1, firstWorkInProgressHook = null, numberOfReRenders = 0, renderPhaseUpdates = null, workInProgressHook = null;
      }
      function readContext$1(context) {
        return isInHookUserCodeInDev && error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."), readContext(context);
      }
      function useContext7(context) {
        return currentHookNameInDev = "useContext", resolveCurrentlyRenderingComponent(), readContext(context);
      }
      function basicStateReducer(state, action12) {
        return typeof action12 == "function" ? action12(state) : action12;
      }
      function useState22(initialState) {
        return currentHookNameInDev = "useState", useReducer(
          basicStateReducer,
          // useReducer has a special case to support lazy useState initializers
          initialState
        );
      }
      function useReducer(reducer, initialArg, init) {
        if (reducer !== basicStateReducer && (currentHookNameInDev = "useReducer"), currentlyRenderingComponent = resolveCurrentlyRenderingComponent(), workInProgressHook = createWorkInProgressHook(), isReRender) {
          var queue = workInProgressHook.queue, dispatch = queue.dispatch;
          if (renderPhaseUpdates !== null) {
            var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
            if (firstRenderPhaseUpdate !== void 0) {
              renderPhaseUpdates.delete(queue);
              var newState = workInProgressHook.memoizedState, update = firstRenderPhaseUpdate;
              do {
                var action12 = update.action;
                isInHookUserCodeInDev = !0, newState = reducer(newState, action12), isInHookUserCodeInDev = !1, update = update.next;
              } while (update !== null);
              return workInProgressHook.memoizedState = newState, [newState, dispatch];
            }
          }
          return [workInProgressHook.memoizedState, dispatch];
        } else {
          isInHookUserCodeInDev = !0;
          var initialState;
          reducer === basicStateReducer ? initialState = typeof initialArg == "function" ? initialArg() : initialArg : initialState = init !== void 0 ? init(initialArg) : initialArg, isInHookUserCodeInDev = !1, workInProgressHook.memoizedState = initialState;
          var _queue = workInProgressHook.queue = {
            last: null,
            dispatch: null
          }, _dispatch = _queue.dispatch = dispatchAction.bind(null, currentlyRenderingComponent, _queue);
          return [workInProgressHook.memoizedState, _dispatch];
        }
      }
      function useMemo10(nextCreate, deps) {
        currentlyRenderingComponent = resolveCurrentlyRenderingComponent(), workInProgressHook = createWorkInProgressHook();
        var nextDeps = deps === void 0 ? null : deps;
        if (workInProgressHook !== null) {
          var prevState = workInProgressHook.memoizedState;
          if (prevState !== null && nextDeps !== null) {
            var prevDeps = prevState[1];
            if (areHookInputsEqual(nextDeps, prevDeps))
              return prevState[0];
          }
        }
        isInHookUserCodeInDev = !0;
        var nextValue = nextCreate();
        return isInHookUserCodeInDev = !1, workInProgressHook.memoizedState = [nextValue, nextDeps], nextValue;
      }
      function useRef9(initialValue) {
        currentlyRenderingComponent = resolveCurrentlyRenderingComponent(), workInProgressHook = createWorkInProgressHook();
        var previousRef = workInProgressHook.memoizedState;
        if (previousRef === null) {
          var ref = {
            current: initialValue
          };
          return Object.seal(ref), workInProgressHook.memoizedState = ref, ref;
        } else
          return previousRef;
      }
      function useLayoutEffect3(create, inputs) {
        currentHookNameInDev = "useLayoutEffect", error("useLayoutEffect does nothing on the server, because its effect cannot be encoded into the server renderer's output format. This will lead to a mismatch between the initial, non-hydrated UI and the intended UI. To avoid this, useLayoutEffect should only be used in components that render exclusively on the client. See https://reactjs.org/link/uselayouteffect-ssr for common fixes.");
      }
      function dispatchAction(componentIdentity, queue, action12) {
        if (numberOfReRenders >= RE_RENDER_LIMIT)
          throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
        if (componentIdentity === currentlyRenderingComponent) {
          didScheduleRenderPhaseUpdate = !0;
          var update = {
            action: action12,
            next: null
          };
          renderPhaseUpdates === null && (renderPhaseUpdates = /* @__PURE__ */ new Map());
          var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
          if (firstRenderPhaseUpdate === void 0)
            renderPhaseUpdates.set(queue, update);
          else {
            for (var lastRenderPhaseUpdate = firstRenderPhaseUpdate; lastRenderPhaseUpdate.next !== null; )
              lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
            lastRenderPhaseUpdate.next = update;
          }
        }
      }
      function useCallback4(callback, deps) {
        return useMemo10(function() {
          return callback;
        }, deps);
      }
      function useMutableSource(source, getSnapshot, subscribe) {
        return resolveCurrentlyRenderingComponent(), getSnapshot(source._source);
      }
      function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        if (getServerSnapshot === void 0)
          throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
        return getServerSnapshot();
      }
      function useDeferredValue(value) {
        return resolveCurrentlyRenderingComponent(), value;
      }
      function unsupportedStartTransition() {
        throw new Error("startTransition cannot be called during server rendering.");
      }
      function useTransition2() {
        return resolveCurrentlyRenderingComponent(), [!1, unsupportedStartTransition];
      }
      function useId() {
        var task = currentlyRenderingTask, treeId = getTreeId(task.treeContext), responseState = currentResponseState;
        if (responseState === null)
          throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component.");
        var localId = localIdCounter++;
        return makeId(responseState, treeId, localId);
      }
      function noop2() {
      }
      var Dispatcher = {
        readContext: readContext$1,
        useContext: useContext7,
        useMemo: useMemo10,
        useReducer,
        useRef: useRef9,
        useState: useState22,
        useInsertionEffect: noop2,
        useLayoutEffect: useLayoutEffect3,
        useCallback: useCallback4,
        // useImperativeHandle is not run in the server environment
        useImperativeHandle: noop2,
        // Effects are not run in the server environment.
        useEffect: noop2,
        // Debugging effect
        useDebugValue: noop2,
        useDeferredValue,
        useTransition: useTransition2,
        useId,
        // Subscriptions are not setup in a server environment.
        useMutableSource,
        useSyncExternalStore
      }, currentResponseState = null;
      function setCurrentResponseState(responseState) {
        currentResponseState = responseState;
      }
      function getStackByComponentStackNode(componentStack) {
        try {
          var info = "", node = componentStack;
          do {
            switch (node.tag) {
              case 0:
                info += describeBuiltInComponentFrame(node.type, null, null);
                break;
              case 1:
                info += describeFunctionComponentFrame(node.type, null, null);
                break;
              case 2:
                info += describeClassComponentFrame(node.type, null, null);
                break;
            }
            node = node.parent;
          } while (node);
          return info;
        } catch (x5) {
          return `
Error generating stack: ` + x5.message + `
` + x5.stack;
        }
      }
      var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame, PENDING = 0, COMPLETED = 1, FLUSHED = 2, ABORTED = 3, ERRORED = 4, OPEN = 0, CLOSING = 1, CLOSED = 2, DEFAULT_PROGRESSIVE_CHUNK_SIZE = 12800;
      function defaultErrorHandler(error2) {
        return console.error(error2), null;
      }
      function noop$1() {
      }
      function createRequest(children, responseState, rootFormatContext, progressiveChunkSize, onError, onAllReady, onShellReady, onShellError, onFatalError) {
        var pingedTasks = [], abortSet = /* @__PURE__ */ new Set(), request = {
          destination: null,
          responseState,
          progressiveChunkSize: progressiveChunkSize === void 0 ? DEFAULT_PROGRESSIVE_CHUNK_SIZE : progressiveChunkSize,
          status: OPEN,
          fatalError: null,
          nextSegmentId: 0,
          allPendingTasks: 0,
          pendingRootTasks: 0,
          completedRootSegment: null,
          abortableTasks: abortSet,
          pingedTasks,
          clientRenderedBoundaries: [],
          completedBoundaries: [],
          partialBoundaries: [],
          onError: onError === void 0 ? defaultErrorHandler : onError,
          onAllReady: onAllReady === void 0 ? noop$1 : onAllReady,
          onShellReady: onShellReady === void 0 ? noop$1 : onShellReady,
          onShellError: onShellError === void 0 ? noop$1 : onShellError,
          onFatalError: onFatalError === void 0 ? noop$1 : onFatalError
        }, rootSegment = createPendingSegment(
          request,
          0,
          null,
          rootFormatContext,
          // Root segments are never embedded in Text on either edge
          !1,
          !1
        );
        rootSegment.parentFlushed = !0;
        var rootTask = createTask(request, children, null, rootSegment, abortSet, emptyContextObject, rootContextSnapshot, emptyTreeContext);
        return pingedTasks.push(rootTask), request;
      }
      function pingTask(request, task) {
        var pingedTasks = request.pingedTasks;
        pingedTasks.push(task), pingedTasks.length === 1 && scheduleWork(function() {
          return performWork(request);
        });
      }
      function createSuspenseBoundary(request, fallbackAbortableTasks) {
        return {
          id: UNINITIALIZED_SUSPENSE_BOUNDARY_ID,
          rootSegmentID: -1,
          parentFlushed: !1,
          pendingTasks: 0,
          forceClientRender: !1,
          completedSegments: [],
          byteSize: 0,
          fallbackAbortableTasks,
          errorDigest: null
        };
      }
      function createTask(request, node, blockedBoundary, blockedSegment, abortSet, legacyContext, context, treeContext) {
        request.allPendingTasks++, blockedBoundary === null ? request.pendingRootTasks++ : blockedBoundary.pendingTasks++;
        var task = {
          node,
          ping: function() {
            return pingTask(request, task);
          },
          blockedBoundary,
          blockedSegment,
          abortSet,
          legacyContext,
          context,
          treeContext
        };
        return task.componentStack = null, abortSet.add(task), task;
      }
      function createPendingSegment(request, index3, boundary, formatContext, lastPushedText, textEmbedded) {
        return {
          status: PENDING,
          id: -1,
          // lazily assigned later
          index: index3,
          parentFlushed: !1,
          chunks: [],
          children: [],
          formatContext,
          boundary,
          lastPushedText,
          textEmbedded
        };
      }
      var currentTaskInDEV = null;
      function getCurrentStackInDEV() {
        return currentTaskInDEV === null || currentTaskInDEV.componentStack === null ? "" : getStackByComponentStackNode(currentTaskInDEV.componentStack);
      }
      function pushBuiltInComponentStackInDEV(task, type) {
        task.componentStack = {
          tag: 0,
          parent: task.componentStack,
          type
        };
      }
      function pushFunctionComponentStackInDEV(task, type) {
        task.componentStack = {
          tag: 1,
          parent: task.componentStack,
          type
        };
      }
      function pushClassComponentStackInDEV(task, type) {
        task.componentStack = {
          tag: 2,
          parent: task.componentStack,
          type
        };
      }
      function popComponentStackInDEV(task) {
        task.componentStack === null ? error("Unexpectedly popped too many stack frames. This is a bug in React.") : task.componentStack = task.componentStack.parent;
      }
      var lastBoundaryErrorComponentStackDev = null;
      function captureBoundaryErrorDetailsDev(boundary, error2) {
        {
          var errorMessage;
          typeof error2 == "string" ? errorMessage = error2 : error2 && typeof error2.message == "string" ? errorMessage = error2.message : errorMessage = String(error2);
          var errorComponentStack = lastBoundaryErrorComponentStackDev || getCurrentStackInDEV();
          lastBoundaryErrorComponentStackDev = null, boundary.errorMessage = errorMessage, boundary.errorComponentStack = errorComponentStack;
        }
      }
      function logRecoverableError(request, error2) {
        var errorDigest = request.onError(error2);
        if (errorDigest != null && typeof errorDigest != "string")
          throw new Error('onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' + typeof errorDigest + '" instead');
        return errorDigest;
      }
      function fatalError(request, error2) {
        var onShellError = request.onShellError;
        onShellError(error2);
        var onFatalError = request.onFatalError;
        onFatalError(error2), request.destination !== null ? (request.status = CLOSED, closeWithError(request.destination, error2)) : (request.status = CLOSING, request.fatalError = error2);
      }
      function renderSuspenseBoundary(request, task, props) {
        pushBuiltInComponentStackInDEV(task, "Suspense");
        var parentBoundary = task.blockedBoundary, parentSegment = task.blockedSegment, fallback = props.fallback, content = props.children, fallbackAbortSet = /* @__PURE__ */ new Set(), newBoundary = createSuspenseBoundary(request, fallbackAbortSet), insertionIndex = parentSegment.chunks.length, boundarySegment = createPendingSegment(
          request,
          insertionIndex,
          newBoundary,
          parentSegment.formatContext,
          // boundaries never require text embedding at their edges because comment nodes bound them
          !1,
          !1
        );
        parentSegment.children.push(boundarySegment), parentSegment.lastPushedText = !1;
        var contentRootSegment = createPendingSegment(
          request,
          0,
          null,
          parentSegment.formatContext,
          // boundaries never require text embedding at their edges because comment nodes bound them
          !1,
          !1
        );
        contentRootSegment.parentFlushed = !0, task.blockedBoundary = newBoundary, task.blockedSegment = contentRootSegment;
        try {
          if (renderNode(request, task, content), pushSegmentFinale(contentRootSegment.chunks, request.responseState, contentRootSegment.lastPushedText, contentRootSegment.textEmbedded), contentRootSegment.status = COMPLETED, queueCompletedSegment(newBoundary, contentRootSegment), newBoundary.pendingTasks === 0) {
            popComponentStackInDEV(task);
            return;
          }
        } catch (error2) {
          contentRootSegment.status = ERRORED, newBoundary.forceClientRender = !0, newBoundary.errorDigest = logRecoverableError(request, error2), captureBoundaryErrorDetailsDev(newBoundary, error2);
        } finally {
          task.blockedBoundary = parentBoundary, task.blockedSegment = parentSegment;
        }
        var suspendedFallbackTask = createTask(request, fallback, parentBoundary, boundarySegment, fallbackAbortSet, task.legacyContext, task.context, task.treeContext);
        suspendedFallbackTask.componentStack = task.componentStack, request.pingedTasks.push(suspendedFallbackTask), popComponentStackInDEV(task);
      }
      function renderHostElement(request, task, type, props) {
        pushBuiltInComponentStackInDEV(task, type);
        var segment = task.blockedSegment, children = pushStartInstance(segment.chunks, type, props, request.responseState, segment.formatContext);
        segment.lastPushedText = !1;
        var prevContext = segment.formatContext;
        segment.formatContext = getChildFormatContext(prevContext, type, props), renderNode(request, task, children), segment.formatContext = prevContext, pushEndInstance(segment.chunks, type), segment.lastPushedText = !1, popComponentStackInDEV(task);
      }
      function shouldConstruct$1(Component2) {
        return Component2.prototype && Component2.prototype.isReactComponent;
      }
      function renderWithHooks(request, task, Component2, props, secondArg) {
        var componentIdentity = {};
        prepareToUseHooks(task, componentIdentity);
        var result = Component2(props, secondArg);
        return finishHooks(Component2, props, result, secondArg);
      }
      function finishClassComponent(request, task, instance, Component2, props) {
        var nextChildren = instance.render();
        instance.props !== props && (didWarnAboutReassigningProps || error("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromType(Component2) || "a component"), didWarnAboutReassigningProps = !0);
        {
          var childContextTypes = Component2.childContextTypes;
          if (childContextTypes != null) {
            var previousContext = task.legacyContext, mergedContext = processChildContext(instance, Component2, previousContext, childContextTypes);
            task.legacyContext = mergedContext, renderNodeDestructive(request, task, nextChildren), task.legacyContext = previousContext;
            return;
          }
        }
        renderNodeDestructive(request, task, nextChildren);
      }
      function renderClassComponent(request, task, Component2, props) {
        pushClassComponentStackInDEV(task, Component2);
        var maskedContext = getMaskedContext(Component2, task.legacyContext), instance = constructClassInstance(Component2, props, maskedContext);
        mountClassInstance(instance, Component2, props, maskedContext), finishClassComponent(request, task, instance, Component2, props), popComponentStackInDEV(task);
      }
      var didWarnAboutBadClass = {}, didWarnAboutModulePatternComponent = {}, didWarnAboutContextTypeOnFunctionComponent = {}, didWarnAboutGetDerivedStateOnFunctionComponent = {}, didWarnAboutReassigningProps = !1, didWarnAboutGenerators = !1, didWarnAboutMaps = !1, hasWarnedAboutUsingContextAsConsumer = !1;
      function renderIndeterminateComponent(request, task, Component2, props) {
        var legacyContext;
        if (legacyContext = getMaskedContext(Component2, task.legacyContext), pushFunctionComponentStackInDEV(task, Component2), Component2.prototype && typeof Component2.prototype.render == "function") {
          var componentName = getComponentNameFromType(Component2) || "Unknown";
          didWarnAboutBadClass[componentName] || (error("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName), didWarnAboutBadClass[componentName] = !0);
        }
        var value = renderWithHooks(request, task, Component2, props, legacyContext), hasId = checkDidRenderIdHook();
        if (typeof value == "object" && value !== null && typeof value.render == "function" && value.$$typeof === void 0) {
          var _componentName = getComponentNameFromType(Component2) || "Unknown";
          didWarnAboutModulePatternComponent[_componentName] || (error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName), didWarnAboutModulePatternComponent[_componentName] = !0);
        }
        if (
          // Run these checks in production only if the flag is off.
          // Eventually we'll delete this branch altogether.
          typeof value == "object" && value !== null && typeof value.render == "function" && value.$$typeof === void 0
        ) {
          {
            var _componentName2 = getComponentNameFromType(Component2) || "Unknown";
            didWarnAboutModulePatternComponent[_componentName2] || (error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2), didWarnAboutModulePatternComponent[_componentName2] = !0);
          }
          mountClassInstance(value, Component2, props, legacyContext), finishClassComponent(request, task, value, Component2, props);
        } else if (validateFunctionComponentInDev(Component2), hasId) {
          var prevTreeContext = task.treeContext, totalChildren = 1, index3 = 0;
          task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index3);
          try {
            renderNodeDestructive(request, task, value);
          } finally {
            task.treeContext = prevTreeContext;
          }
        } else
          renderNodeDestructive(request, task, value);
        popComponentStackInDEV(task);
      }
      function validateFunctionComponentInDev(Component2) {
        {
          if (Component2 && Component2.childContextTypes && error("%s(...): childContextTypes cannot be defined on a function component.", Component2.displayName || Component2.name || "Component"), typeof Component2.getDerivedStateFromProps == "function") {
            var _componentName3 = getComponentNameFromType(Component2) || "Unknown";
            didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] || (error("%s: Function components do not support getDerivedStateFromProps.", _componentName3), didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = !0);
          }
          if (typeof Component2.contextType == "object" && Component2.contextType !== null) {
            var _componentName4 = getComponentNameFromType(Component2) || "Unknown";
            didWarnAboutContextTypeOnFunctionComponent[_componentName4] || (error("%s: Function components do not support contextType.", _componentName4), didWarnAboutContextTypeOnFunctionComponent[_componentName4] = !0);
          }
        }
      }
      function resolveDefaultProps(Component2, baseProps) {
        if (Component2 && Component2.defaultProps) {
          var props = assign({}, baseProps), defaultProps = Component2.defaultProps;
          for (var propName in defaultProps)
            props[propName] === void 0 && (props[propName] = defaultProps[propName]);
          return props;
        }
        return baseProps;
      }
      function renderForwardRef(request, task, type, props, ref) {
        pushFunctionComponentStackInDEV(task, type.render);
        var children = renderWithHooks(request, task, type.render, props, ref), hasId = checkDidRenderIdHook();
        if (hasId) {
          var prevTreeContext = task.treeContext, totalChildren = 1, index3 = 0;
          task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index3);
          try {
            renderNodeDestructive(request, task, children);
          } finally {
            task.treeContext = prevTreeContext;
          }
        } else
          renderNodeDestructive(request, task, children);
        popComponentStackInDEV(task);
      }
      function renderMemo(request, task, type, props, ref) {
        var innerType = type.type, resolvedProps = resolveDefaultProps(innerType, props);
        renderElement(request, task, innerType, resolvedProps, ref);
      }
      function renderContextConsumer(request, task, context, props) {
        context._context === void 0 ? context !== context.Consumer && (hasWarnedAboutUsingContextAsConsumer || (hasWarnedAboutUsingContextAsConsumer = !0, error("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?"))) : context = context._context;
        var render = props.children;
        typeof render != "function" && error("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
        var newValue = readContext(context), newChildren = render(newValue);
        renderNodeDestructive(request, task, newChildren);
      }
      function renderContextProvider(request, task, type, props) {
        var context = type._context, value = props.value, children = props.children, prevSnapshot;
        prevSnapshot = task.context, task.context = pushProvider(context, value), renderNodeDestructive(request, task, children), task.context = popProvider(context), prevSnapshot !== task.context && error("Popping the context provider did not return back to the original snapshot. This is a bug in React.");
      }
      function renderLazyComponent(request, task, lazyComponent, props, ref) {
        pushBuiltInComponentStackInDEV(task, "Lazy");
        var payload = lazyComponent._payload, init = lazyComponent._init, Component2 = init(payload), resolvedProps = resolveDefaultProps(Component2, props);
        renderElement(request, task, Component2, resolvedProps, ref), popComponentStackInDEV(task);
      }
      function renderElement(request, task, type, props, ref) {
        if (typeof type == "function")
          if (shouldConstruct$1(type)) {
            renderClassComponent(request, task, type, props);
            return;
          } else {
            renderIndeterminateComponent(request, task, type, props);
            return;
          }
        if (typeof type == "string") {
          renderHostElement(request, task, type, props);
          return;
        }
        switch (type) {
          case REACT_LEGACY_HIDDEN_TYPE:
          case REACT_DEBUG_TRACING_MODE_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_FRAGMENT_TYPE: {
            renderNodeDestructive(request, task, props.children);
            return;
          }
          case REACT_SUSPENSE_LIST_TYPE: {
            pushBuiltInComponentStackInDEV(task, "SuspenseList"), renderNodeDestructive(request, task, props.children), popComponentStackInDEV(task);
            return;
          }
          case REACT_SCOPE_TYPE:
            throw new Error("ReactDOMServer does not yet support scope components.");
          case REACT_SUSPENSE_TYPE: {
            renderSuspenseBoundary(request, task, props);
            return;
          }
        }
        if (typeof type == "object" && type !== null)
          switch (type.$$typeof) {
            case REACT_FORWARD_REF_TYPE: {
              renderForwardRef(request, task, type, props, ref);
              return;
            }
            case REACT_MEMO_TYPE: {
              renderMemo(request, task, type, props, ref);
              return;
            }
            case REACT_PROVIDER_TYPE: {
              renderContextProvider(request, task, type, props);
              return;
            }
            case REACT_CONTEXT_TYPE: {
              renderContextConsumer(request, task, type, props);
              return;
            }
            case REACT_LAZY_TYPE: {
              renderLazyComponent(request, task, type, props);
              return;
            }
          }
        var info = "";
        throw (type === void 0 || typeof type == "object" && type !== null && Object.keys(type).length === 0) && (info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports."), new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (type == null ? type : typeof type) + "." + info));
      }
      function validateIterable(iterable, iteratorFn) {
        typeof Symbol == "function" && // $FlowFixMe Flow doesn't know about toStringTag
        iterable[Symbol.toStringTag] === "Generator" && (didWarnAboutGenerators || error("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers."), didWarnAboutGenerators = !0), iterable.entries === iteratorFn && (didWarnAboutMaps || error("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), didWarnAboutMaps = !0);
      }
      function renderNodeDestructive(request, task, node) {
        try {
          return renderNodeDestructiveImpl(request, task, node);
        } catch (x5) {
          throw typeof x5 == "object" && x5 !== null && typeof x5.then == "function" || (lastBoundaryErrorComponentStackDev = lastBoundaryErrorComponentStackDev !== null ? lastBoundaryErrorComponentStackDev : getCurrentStackInDEV()), x5;
        }
      }
      function renderNodeDestructiveImpl(request, task, node) {
        if (task.node = node, typeof node == "object" && node !== null) {
          switch (node.$$typeof) {
            case REACT_ELEMENT_TYPE: {
              var element = node, type = element.type, props = element.props, ref = element.ref;
              renderElement(request, task, type, props, ref);
              return;
            }
            case REACT_PORTAL_TYPE:
              throw new Error("Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.");
            case REACT_LAZY_TYPE: {
              var lazyNode = node, payload = lazyNode._payload, init = lazyNode._init, resolvedNode;
              try {
                resolvedNode = init(payload);
              } catch (x5) {
                throw typeof x5 == "object" && x5 !== null && typeof x5.then == "function" && pushBuiltInComponentStackInDEV(task, "Lazy"), x5;
              }
              renderNodeDestructive(request, task, resolvedNode);
              return;
            }
          }
          if (isArray(node)) {
            renderChildrenArray(request, task, node);
            return;
          }
          var iteratorFn = getIteratorFn(node);
          if (iteratorFn) {
            validateIterable(node, iteratorFn);
            var iterator = iteratorFn.call(node);
            if (iterator) {
              var step = iterator.next();
              if (!step.done) {
                var children = [];
                do
                  children.push(step.value), step = iterator.next();
                while (!step.done);
                renderChildrenArray(request, task, children);
                return;
              }
              return;
            }
          }
          var childString = Object.prototype.toString.call(node);
          throw new Error("Objects are not valid as a React child (found: " + (childString === "[object Object]" ? "object with keys {" + Object.keys(node).join(", ") + "}" : childString) + "). If you meant to render a collection of children, use an array instead.");
        }
        if (typeof node == "string") {
          var segment = task.blockedSegment;
          segment.lastPushedText = pushTextInstance(task.blockedSegment.chunks, node, request.responseState, segment.lastPushedText);
          return;
        }
        if (typeof node == "number") {
          var _segment = task.blockedSegment;
          _segment.lastPushedText = pushTextInstance(task.blockedSegment.chunks, "" + node, request.responseState, _segment.lastPushedText);
          return;
        }
        typeof node == "function" && error("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
      }
      function renderChildrenArray(request, task, children) {
        for (var totalChildren = children.length, i7 = 0; i7 < totalChildren; i7++) {
          var prevTreeContext = task.treeContext;
          task.treeContext = pushTreeContext(prevTreeContext, totalChildren, i7);
          try {
            renderNode(request, task, children[i7]);
          } finally {
            task.treeContext = prevTreeContext;
          }
        }
      }
      function spawnNewSuspendedTask(request, task, x5) {
        var segment = task.blockedSegment, insertionIndex = segment.chunks.length, newSegment = createPendingSegment(
          request,
          insertionIndex,
          null,
          segment.formatContext,
          // Adopt the parent segment's leading text embed
          segment.lastPushedText,
          // Assume we are text embedded at the trailing edge
          !0
        );
        segment.children.push(newSegment), segment.lastPushedText = !1;
        var newTask = createTask(request, task.node, task.blockedBoundary, newSegment, task.abortSet, task.legacyContext, task.context, task.treeContext);
        task.componentStack !== null && (newTask.componentStack = task.componentStack.parent);
        var ping = newTask.ping;
        x5.then(ping, ping);
      }
      function renderNode(request, task, node) {
        var previousFormatContext = task.blockedSegment.formatContext, previousLegacyContext = task.legacyContext, previousContext = task.context, previousComponentStack = null;
        previousComponentStack = task.componentStack;
        try {
          return renderNodeDestructive(request, task, node);
        } catch (x5) {
          if (resetHooksState(), typeof x5 == "object" && x5 !== null && typeof x5.then == "function") {
            spawnNewSuspendedTask(request, task, x5), task.blockedSegment.formatContext = previousFormatContext, task.legacyContext = previousLegacyContext, task.context = previousContext, switchContext(previousContext), task.componentStack = previousComponentStack;
            return;
          } else
            throw task.blockedSegment.formatContext = previousFormatContext, task.legacyContext = previousLegacyContext, task.context = previousContext, switchContext(previousContext), task.componentStack = previousComponentStack, x5;
        }
      }
      function erroredTask(request, boundary, segment, error2) {
        var errorDigest = logRecoverableError(request, error2);
        if (boundary === null ? fatalError(request, error2) : (boundary.pendingTasks--, boundary.forceClientRender || (boundary.forceClientRender = !0, boundary.errorDigest = errorDigest, captureBoundaryErrorDetailsDev(boundary, error2), boundary.parentFlushed && request.clientRenderedBoundaries.push(boundary))), request.allPendingTasks--, request.allPendingTasks === 0) {
          var onAllReady = request.onAllReady;
          onAllReady();
        }
      }
      function abortTaskSoft(task) {
        var request = this, boundary = task.blockedBoundary, segment = task.blockedSegment;
        segment.status = ABORTED, finishedTask(request, boundary, segment);
      }
      function abortTask(task, request, reason) {
        var boundary = task.blockedBoundary, segment = task.blockedSegment;
        if (segment.status = ABORTED, boundary === null)
          request.allPendingTasks--, request.status !== CLOSED && (request.status = CLOSED, request.destination !== null && close(request.destination));
        else {
          if (boundary.pendingTasks--, !boundary.forceClientRender) {
            boundary.forceClientRender = !0;
            var _error = reason === void 0 ? new Error("The render was aborted by the server without a reason.") : reason;
            boundary.errorDigest = request.onError(_error);
            {
              var errorPrefix = "The server did not finish this Suspense boundary: ";
              _error && typeof _error.message == "string" ? _error = errorPrefix + _error.message : _error = errorPrefix + String(_error);
              var previousTaskInDev = currentTaskInDEV;
              currentTaskInDEV = task;
              try {
                captureBoundaryErrorDetailsDev(boundary, _error);
              } finally {
                currentTaskInDEV = previousTaskInDev;
              }
            }
            boundary.parentFlushed && request.clientRenderedBoundaries.push(boundary);
          }
          if (boundary.fallbackAbortableTasks.forEach(function(fallbackTask) {
            return abortTask(fallbackTask, request, reason);
          }), boundary.fallbackAbortableTasks.clear(), request.allPendingTasks--, request.allPendingTasks === 0) {
            var onAllReady = request.onAllReady;
            onAllReady();
          }
        }
      }
      function queueCompletedSegment(boundary, segment) {
        if (segment.chunks.length === 0 && segment.children.length === 1 && segment.children[0].boundary === null) {
          var childSegment = segment.children[0];
          childSegment.id = segment.id, childSegment.parentFlushed = !0, childSegment.status === COMPLETED && queueCompletedSegment(boundary, childSegment);
        } else {
          var completedSegments = boundary.completedSegments;
          completedSegments.push(segment);
        }
      }
      function finishedTask(request, boundary, segment) {
        if (boundary === null) {
          if (segment.parentFlushed) {
            if (request.completedRootSegment !== null)
              throw new Error("There can only be one root segment. This is a bug in React.");
            request.completedRootSegment = segment;
          }
          if (request.pendingRootTasks--, request.pendingRootTasks === 0) {
            request.onShellError = noop$1;
            var onShellReady = request.onShellReady;
            onShellReady();
          }
        } else if (boundary.pendingTasks--, !boundary.forceClientRender) {
          if (boundary.pendingTasks === 0)
            segment.parentFlushed && segment.status === COMPLETED && queueCompletedSegment(boundary, segment), boundary.parentFlushed && request.completedBoundaries.push(boundary), boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request), boundary.fallbackAbortableTasks.clear();
          else if (segment.parentFlushed && segment.status === COMPLETED) {
            queueCompletedSegment(boundary, segment);
            var completedSegments = boundary.completedSegments;
            completedSegments.length === 1 && boundary.parentFlushed && request.partialBoundaries.push(boundary);
          }
        }
        if (request.allPendingTasks--, request.allPendingTasks === 0) {
          var onAllReady = request.onAllReady;
          onAllReady();
        }
      }
      function retryTask(request, task) {
        var segment = task.blockedSegment;
        if (segment.status === PENDING) {
          switchContext(task.context);
          var prevTaskInDEV = null;
          prevTaskInDEV = currentTaskInDEV, currentTaskInDEV = task;
          try {
            renderNodeDestructive(request, task, task.node), pushSegmentFinale(segment.chunks, request.responseState, segment.lastPushedText, segment.textEmbedded), task.abortSet.delete(task), segment.status = COMPLETED, finishedTask(request, task.blockedBoundary, segment);
          } catch (x5) {
            if (resetHooksState(), typeof x5 == "object" && x5 !== null && typeof x5.then == "function") {
              var ping = task.ping;
              x5.then(ping, ping);
            } else
              task.abortSet.delete(task), segment.status = ERRORED, erroredTask(request, task.blockedBoundary, segment, x5);
          } finally {
            currentTaskInDEV = prevTaskInDEV;
          }
        }
      }
      function performWork(request) {
        if (request.status !== CLOSED) {
          var prevContext = getActiveContext(), prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = Dispatcher;
          var prevGetCurrentStackImpl;
          prevGetCurrentStackImpl = ReactDebugCurrentFrame$1.getCurrentStack, ReactDebugCurrentFrame$1.getCurrentStack = getCurrentStackInDEV;
          var prevResponseState = currentResponseState;
          setCurrentResponseState(request.responseState);
          try {
            var pingedTasks = request.pingedTasks, i7;
            for (i7 = 0; i7 < pingedTasks.length; i7++) {
              var task = pingedTasks[i7];
              retryTask(request, task);
            }
            pingedTasks.splice(0, i7), request.destination !== null && flushCompletedQueues(request, request.destination);
          } catch (error2) {
            logRecoverableError(request, error2), fatalError(request, error2);
          } finally {
            setCurrentResponseState(prevResponseState), ReactCurrentDispatcher$1.current = prevDispatcher, ReactDebugCurrentFrame$1.getCurrentStack = prevGetCurrentStackImpl, prevDispatcher === Dispatcher && switchContext(prevContext);
          }
        }
      }
      function flushSubtree(request, destination, segment) {
        switch (segment.parentFlushed = !0, segment.status) {
          case PENDING: {
            var segmentID = segment.id = request.nextSegmentId++;
            return segment.lastPushedText = !1, segment.textEmbedded = !1, writePlaceholder(destination, request.responseState, segmentID);
          }
          case COMPLETED: {
            segment.status = FLUSHED;
            for (var r9 = !0, chunks = segment.chunks, chunkIdx = 0, children = segment.children, childIdx = 0; childIdx < children.length; childIdx++) {
              for (var nextChild = children[childIdx]; chunkIdx < nextChild.index; chunkIdx++)
                writeChunk(destination, chunks[chunkIdx]);
              r9 = flushSegment(request, destination, nextChild);
            }
            for (; chunkIdx < chunks.length - 1; chunkIdx++)
              writeChunk(destination, chunks[chunkIdx]);
            return chunkIdx < chunks.length && (r9 = writeChunkAndReturn(destination, chunks[chunkIdx])), r9;
          }
          default:
            throw new Error("Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.");
        }
      }
      function flushSegment(request, destination, segment) {
        var boundary = segment.boundary;
        if (boundary === null)
          return flushSubtree(request, destination, segment);
        if (boundary.parentFlushed = !0, boundary.forceClientRender)
          return writeStartClientRenderedSuspenseBoundary(destination, request.responseState, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack), flushSubtree(request, destination, segment), writeEndClientRenderedSuspenseBoundary(destination, request.responseState);
        if (boundary.pendingTasks > 0) {
          boundary.rootSegmentID = request.nextSegmentId++, boundary.completedSegments.length > 0 && request.partialBoundaries.push(boundary);
          var id = boundary.id = assignSuspenseBoundaryID(request.responseState);
          return writeStartPendingSuspenseBoundary(destination, request.responseState, id), flushSubtree(request, destination, segment), writeEndPendingSuspenseBoundary(destination, request.responseState);
        } else {
          if (boundary.byteSize > request.progressiveChunkSize)
            return boundary.rootSegmentID = request.nextSegmentId++, request.completedBoundaries.push(boundary), writeStartPendingSuspenseBoundary(destination, request.responseState, boundary.id), flushSubtree(request, destination, segment), writeEndPendingSuspenseBoundary(destination, request.responseState);
          writeStartCompletedSuspenseBoundary(destination, request.responseState);
          var completedSegments = boundary.completedSegments;
          if (completedSegments.length !== 1)
            throw new Error("A previously unvisited boundary must have exactly one root segment. This is a bug in React.");
          var contentSegment = completedSegments[0];
          return flushSegment(request, destination, contentSegment), writeEndCompletedSuspenseBoundary(destination, request.responseState);
        }
      }
      function flushClientRenderedBoundary(request, destination, boundary) {
        return writeClientRenderBoundaryInstruction(destination, request.responseState, boundary.id, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack);
      }
      function flushSegmentContainer(request, destination, segment) {
        return writeStartSegment(destination, request.responseState, segment.formatContext, segment.id), flushSegment(request, destination, segment), writeEndSegment(destination, segment.formatContext);
      }
      function flushCompletedBoundary(request, destination, boundary) {
        for (var completedSegments = boundary.completedSegments, i7 = 0; i7 < completedSegments.length; i7++) {
          var segment = completedSegments[i7];
          flushPartiallyCompletedSegment(request, destination, boundary, segment);
        }
        return completedSegments.length = 0, writeCompletedBoundaryInstruction(destination, request.responseState, boundary.id, boundary.rootSegmentID);
      }
      function flushPartialBoundary(request, destination, boundary) {
        for (var completedSegments = boundary.completedSegments, i7 = 0; i7 < completedSegments.length; i7++) {
          var segment = completedSegments[i7];
          if (!flushPartiallyCompletedSegment(request, destination, boundary, segment))
            return i7++, completedSegments.splice(0, i7), !1;
        }
        return completedSegments.splice(0, i7), !0;
      }
      function flushPartiallyCompletedSegment(request, destination, boundary, segment) {
        if (segment.status === FLUSHED)
          return !0;
        var segmentID = segment.id;
        if (segmentID === -1) {
          var rootSegmentID = segment.id = boundary.rootSegmentID;
          if (rootSegmentID === -1)
            throw new Error("A root segment ID must have been assigned by now. This is a bug in React.");
          return flushSegmentContainer(request, destination, segment);
        } else
          return flushSegmentContainer(request, destination, segment), writeCompletedSegmentInstruction(destination, request.responseState, segmentID);
      }
      function flushCompletedQueues(request, destination) {
        beginWriting();
        try {
          var completedRootSegment = request.completedRootSegment;
          completedRootSegment !== null && request.pendingRootTasks === 0 && (flushSegment(request, destination, completedRootSegment), request.completedRootSegment = null, writeCompletedRoot(destination, request.responseState));
          var clientRenderedBoundaries = request.clientRenderedBoundaries, i7;
          for (i7 = 0; i7 < clientRenderedBoundaries.length; i7++) {
            var boundary = clientRenderedBoundaries[i7];
            if (!flushClientRenderedBoundary(request, destination, boundary)) {
              request.destination = null, i7++, clientRenderedBoundaries.splice(0, i7);
              return;
            }
          }
          clientRenderedBoundaries.splice(0, i7);
          var completedBoundaries = request.completedBoundaries;
          for (i7 = 0; i7 < completedBoundaries.length; i7++) {
            var _boundary = completedBoundaries[i7];
            if (!flushCompletedBoundary(request, destination, _boundary)) {
              request.destination = null, i7++, completedBoundaries.splice(0, i7);
              return;
            }
          }
          completedBoundaries.splice(0, i7), completeWriting(destination), beginWriting(destination);
          var partialBoundaries = request.partialBoundaries;
          for (i7 = 0; i7 < partialBoundaries.length; i7++) {
            var _boundary2 = partialBoundaries[i7];
            if (!flushPartialBoundary(request, destination, _boundary2)) {
              request.destination = null, i7++, partialBoundaries.splice(0, i7);
              return;
            }
          }
          partialBoundaries.splice(0, i7);
          var largeBoundaries = request.completedBoundaries;
          for (i7 = 0; i7 < largeBoundaries.length; i7++) {
            var _boundary3 = largeBoundaries[i7];
            if (!flushCompletedBoundary(request, destination, _boundary3)) {
              request.destination = null, i7++, largeBoundaries.splice(0, i7);
              return;
            }
          }
          largeBoundaries.splice(0, i7);
        } finally {
          completeWriting(destination), request.allPendingTasks === 0 && request.pingedTasks.length === 0 && request.clientRenderedBoundaries.length === 0 && request.completedBoundaries.length === 0 && (request.abortableTasks.size !== 0 && error("There was still abortable task at the root when we closed. This is a bug in React."), close(destination));
        }
      }
      function startWork(request) {
        scheduleWork(function() {
          return performWork(request);
        });
      }
      function startFlowing(request, destination) {
        if (request.status === CLOSING) {
          request.status = CLOSED, closeWithError(destination, request.fatalError);
          return;
        }
        if (request.status !== CLOSED && request.destination === null) {
          request.destination = destination;
          try {
            flushCompletedQueues(request, destination);
          } catch (error2) {
            logRecoverableError(request, error2), fatalError(request, error2);
          }
        }
      }
      function abort(request, reason) {
        try {
          var abortableTasks = request.abortableTasks;
          abortableTasks.forEach(function(task) {
            return abortTask(task, request, reason);
          }), abortableTasks.clear(), request.destination !== null && flushCompletedQueues(request, request.destination);
        } catch (error2) {
          logRecoverableError(request, error2), fatalError(request, error2);
        }
      }
      function renderToReadableStream2(children, options) {
        return new Promise(function(resolve, reject) {
          var onFatalError, onAllReady, allReady = new Promise(function(res, rej) {
            onAllReady = res, onFatalError = rej;
          });
          function onShellReady() {
            var stream = new ReadableStream(
              {
                type: "bytes",
                pull: function(controller) {
                  startFlowing(request, controller);
                },
                cancel: function(reason) {
                  abort(request);
                }
              },
              // $FlowFixMe size() methods are not allowed on byte streams.
              {
                highWaterMark: 0
              }
            );
            stream.allReady = allReady, resolve(stream);
          }
          function onShellError(error2) {
            allReady.catch(function() {
            }), reject(error2);
          }
          var request = createRequest(children, createResponseState(options ? options.identifierPrefix : void 0, options ? options.nonce : void 0, options ? options.bootstrapScriptContent : void 0, options ? options.bootstrapScripts : void 0, options ? options.bootstrapModules : void 0), createRootFormatContext(options ? options.namespaceURI : void 0), options ? options.progressiveChunkSize : void 0, options ? options.onError : void 0, onAllReady, onShellReady, onShellError, onFatalError);
          if (options && options.signal) {
            var signal = options.signal, listener = function() {
              abort(request, signal.reason), signal.removeEventListener("abort", listener);
            };
            signal.addEventListener("abort", listener);
          }
          startWork(request);
        });
      }
      exports.renderToReadableStream = renderToReadableStream2, exports.version = ReactVersion;
    })();
  }
});

// node_modules/react-dom/server.browser.js
var require_server_browser = __commonJS({
  "node_modules/react-dom/server.browser.js"(exports) {
    "use strict";
    var l13, s15;
    l13 = require_react_dom_server_legacy_browser_development(), s15 = require_react_dom_server_browser_development();
    exports.version = l13.version;
    exports.renderToString = l13.renderToString;
    exports.renderToStaticMarkup = l13.renderToStaticMarkup;
    exports.renderToNodeStream = l13.renderToNodeStream;
    exports.renderToStaticNodeStream = l13.renderToStaticNodeStream;
    exports.renderToReadableStream = s15.renderToReadableStream;
  }
});

// node_modules/react/cjs/react-jsx-dev-runtime.development.js
var require_react_jsx_dev_runtime_development = __commonJS({
  "node_modules/react/cjs/react-jsx-dev-runtime.development.js"(exports) {
    "use strict";
    (function() {
      "use strict";
      var React26 = require_react(), REACT_ELEMENT_TYPE = Symbol.for("react.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler"), REACT_PROVIDER_TYPE = Symbol.for("react.provider"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"), MAYBE_ITERATOR_SYMBOL = Symbol.iterator, FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable != "object")
          return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        return typeof maybeIterator == "function" ? maybeIterator : null;
      }
      var ReactSharedInternals = React26.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
      function error(format) {
        {
          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)
            args[_key2 - 1] = arguments[_key2];
          printWarning("error", format, args);
        }
      }
      function printWarning(level, format, args) {
        {
          var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame, stack = ReactDebugCurrentFrame2.getStackAddendum();
          stack !== "" && (format += "%s", args = args.concat([stack]));
          var argsWithFormat = args.map(function(item) {
            return String(item);
          });
          argsWithFormat.unshift("Warning: " + format), Function.prototype.apply.call(console[level], console, argsWithFormat);
        }
      }
      var enableScopeAPI = !1, enableCacheElement = !1, enableTransitionTracing = !1, enableLegacyHidden = !1, enableDebugTracing = !1, REACT_MODULE_REFERENCE;
      REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
      function isValidElementType(type) {
        return !!(typeof type == "string" || typeof type == "function" || type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing || typeof type == "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
        // types supported by any Flight configuration anywhere since
        // we don't know which Flight build this will end up being used
        // with.
        type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0));
      }
      function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName)
          return displayName;
        var functionName = innerType.displayName || innerType.name || "";
        return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
      }
      function getContextName(type) {
        return type.displayName || "Context";
      }
      function getComponentNameFromType(type) {
        if (type == null)
          return null;
        if (typeof type.tag == "number" && error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof type == "function")
          return type.displayName || type.name || null;
        if (typeof type == "string")
          return type;
        switch (type) {
          case REACT_FRAGMENT_TYPE:
            return "Fragment";
          case REACT_PORTAL_TYPE:
            return "Portal";
          case REACT_PROFILER_TYPE:
            return "Profiler";
          case REACT_STRICT_MODE_TYPE:
            return "StrictMode";
          case REACT_SUSPENSE_TYPE:
            return "Suspense";
          case REACT_SUSPENSE_LIST_TYPE:
            return "SuspenseList";
        }
        if (typeof type == "object")
          switch (type.$$typeof) {
            case REACT_CONTEXT_TYPE:
              var context = type;
              return getContextName(context) + ".Consumer";
            case REACT_PROVIDER_TYPE:
              var provider = type;
              return getContextName(provider._context) + ".Provider";
            case REACT_FORWARD_REF_TYPE:
              return getWrappedName(type, type.render, "ForwardRef");
            case REACT_MEMO_TYPE:
              var outerName = type.displayName || null;
              return outerName !== null ? outerName : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE: {
              var lazyComponent = type, payload = lazyComponent._payload, init = lazyComponent._init;
              try {
                return getComponentNameFromType(init(payload));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var assign = Object.assign, disabledDepth = 0, prevLog, prevInfo, prevWarn, prevError, prevGroup, prevGroupCollapsed, prevGroupEnd;
      function disabledLog() {
      }
      disabledLog.__reactDisabledLog = !0;
      function disableLogs() {
        {
          if (disabledDepth === 0) {
            prevLog = console.log, prevInfo = console.info, prevWarn = console.warn, prevError = console.error, prevGroup = console.group, prevGroupCollapsed = console.groupCollapsed, prevGroupEnd = console.groupEnd;
            var props = {
              configurable: !0,
              enumerable: !0,
              value: disabledLog,
              writable: !0
            };
            Object.defineProperties(console, {
              info: props,
              log: props,
              warn: props,
              error: props,
              group: props,
              groupCollapsed: props,
              groupEnd: props
            });
          }
          disabledDepth++;
        }
      }
      function reenableLogs() {
        {
          if (disabledDepth--, disabledDepth === 0) {
            var props = {
              configurable: !0,
              enumerable: !0,
              writable: !0
            };
            Object.defineProperties(console, {
              log: assign({}, props, {
                value: prevLog
              }),
              info: assign({}, props, {
                value: prevInfo
              }),
              warn: assign({}, props, {
                value: prevWarn
              }),
              error: assign({}, props, {
                value: prevError
              }),
              group: assign({}, props, {
                value: prevGroup
              }),
              groupCollapsed: assign({}, props, {
                value: prevGroupCollapsed
              }),
              groupEnd: assign({}, props, {
                value: prevGroupEnd
              })
            });
          }
          disabledDepth < 0 && error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }
      }
      var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher, prefix;
      function describeBuiltInComponentFrame(name, source, ownerFn) {
        {
          if (prefix === void 0)
            try {
              throw Error();
            } catch (x5) {
              var match = x5.stack.trim().match(/\n( *(at )?)/);
              prefix = match && match[1] || "";
            }
          return `
` + prefix + name;
        }
      }
      var reentry = !1, componentFrameCache;
      {
        var PossiblyWeakMap = typeof WeakMap == "function" ? WeakMap : Map;
        componentFrameCache = new PossiblyWeakMap();
      }
      function describeNativeComponentFrame(fn, construct) {
        if (!fn || reentry)
          return "";
        {
          var frame = componentFrameCache.get(fn);
          if (frame !== void 0)
            return frame;
        }
        var control;
        reentry = !0;
        var previousPrepareStackTrace = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher.current, ReactCurrentDispatcher.current = null, disableLogs();
        try {
          if (construct) {
            var Fake = function() {
              throw Error();
            };
            if (Object.defineProperty(Fake.prototype, "props", {
              set: function() {
                throw Error();
              }
            }), typeof Reflect == "object" && Reflect.construct) {
              try {
                Reflect.construct(Fake, []);
              } catch (x5) {
                control = x5;
              }
              Reflect.construct(fn, [], Fake);
            } else {
              try {
                Fake.call();
              } catch (x5) {
                control = x5;
              }
              fn.call(Fake.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (x5) {
              control = x5;
            }
            fn();
          }
        } catch (sample) {
          if (sample && control && typeof sample.stack == "string") {
            for (var sampleLines = sample.stack.split(`
`), controlLines = control.stack.split(`
`), s15 = sampleLines.length - 1, c13 = controlLines.length - 1; s15 >= 1 && c13 >= 0 && sampleLines[s15] !== controlLines[c13]; )
              c13--;
            for (; s15 >= 1 && c13 >= 0; s15--, c13--)
              if (sampleLines[s15] !== controlLines[c13]) {
                if (s15 !== 1 || c13 !== 1)
                  do
                    if (s15--, c13--, c13 < 0 || sampleLines[s15] !== controlLines[c13]) {
                      var _frame = `
` + sampleLines[s15].replace(" at new ", " at ");
                      return fn.displayName && _frame.includes("<anonymous>") && (_frame = _frame.replace("<anonymous>", fn.displayName)), typeof fn == "function" && componentFrameCache.set(fn, _frame), _frame;
                    }
                  while (s15 >= 1 && c13 >= 0);
                break;
              }
          }
        } finally {
          reentry = !1, ReactCurrentDispatcher.current = previousDispatcher, reenableLogs(), Error.prepareStackTrace = previousPrepareStackTrace;
        }
        var name = fn ? fn.displayName || fn.name : "", syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
        return typeof fn == "function" && componentFrameCache.set(fn, syntheticFrame), syntheticFrame;
      }
      function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, !1);
      }
      function shouldConstruct(Component2) {
        var prototype = Component2.prototype;
        return !!(prototype && prototype.isReactComponent);
      }
      function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null)
          return "";
        if (typeof type == "function")
          return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type == "string")
          return describeBuiltInComponentFrame(type);
        switch (type) {
          case REACT_SUSPENSE_TYPE:
            return describeBuiltInComponentFrame("Suspense");
          case REACT_SUSPENSE_LIST_TYPE:
            return describeBuiltInComponentFrame("SuspenseList");
        }
        if (typeof type == "object")
          switch (type.$$typeof) {
            case REACT_FORWARD_REF_TYPE:
              return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
              return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE: {
              var lazyComponent = type, payload = lazyComponent._payload, init = lazyComponent._init;
              try {
                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
              } catch {
              }
            }
          }
        return "";
      }
      var hasOwnProperty = Object.prototype.hasOwnProperty, loggedTypeFailures = {}, ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
      function setCurrentlyValidatingElement(element) {
        if (element) {
          var owner = element._owner, stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
          ReactDebugCurrentFrame.setExtraStackFrame(stack);
        } else
          ReactDebugCurrentFrame.setExtraStackFrame(null);
      }
      function checkPropTypes(typeSpecs, values, location, componentName, element) {
        {
          var has = Function.call.bind(hasOwnProperty);
          for (var typeSpecName in typeSpecs)
            if (has(typeSpecs, typeSpecName)) {
              var error$1 = void 0;
              try {
                if (typeof typeSpecs[typeSpecName] != "function") {
                  var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw err.name = "Invariant Violation", err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (ex) {
                error$1 = ex;
              }
              error$1 && !(error$1 instanceof Error) && (setCurrentlyValidatingElement(element), error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1), setCurrentlyValidatingElement(null)), error$1 instanceof Error && !(error$1.message in loggedTypeFailures) && (loggedTypeFailures[error$1.message] = !0, setCurrentlyValidatingElement(element), error("Failed %s type: %s", location, error$1.message), setCurrentlyValidatingElement(null));
            }
        }
      }
      var isArrayImpl = Array.isArray;
      function isArray(a13) {
        return isArrayImpl(a13);
      }
      function typeName(value) {
        {
          var hasToStringTag = typeof Symbol == "function" && Symbol.toStringTag, type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
          return type;
        }
      }
      function willCoercionThrow(value) {
        try {
          return testStringCoercion(value), !1;
        } catch {
          return !0;
        }
      }
      function testStringCoercion(value) {
        return "" + value;
      }
      function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value))
          return error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value)), testStringCoercion(value);
      }
      var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner, RESERVED_PROPS = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
      }, specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
      didWarnAboutStringRefs = {};
      function hasValidRef(config) {
        if (hasOwnProperty.call(config, "ref")) {
          var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
          if (getter && getter.isReactWarning)
            return !1;
        }
        return config.ref !== void 0;
      }
      function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
          var getter = Object.getOwnPropertyDescriptor(config, "key").get;
          if (getter && getter.isReactWarning)
            return !1;
        }
        return config.key !== void 0;
      }
      function warnIfStringRefCannotBeAutoConverted(config, self2) {
        if (typeof config.ref == "string" && ReactCurrentOwner.current && self2 && ReactCurrentOwner.current.stateNode !== self2) {
          var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
          didWarnAboutStringRefs[componentName] || (error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref), didWarnAboutStringRefs[componentName] = !0);
        }
      }
      function defineKeyPropWarningGetter(props, displayName) {
        {
          var warnAboutAccessingKey = function() {
            specialPropKeyWarningShown || (specialPropKeyWarningShown = !0, error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName));
          };
          warnAboutAccessingKey.isReactWarning = !0, Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: !0
          });
        }
      }
      function defineRefPropWarningGetter(props, displayName) {
        {
          var warnAboutAccessingRef = function() {
            specialPropRefWarningShown || (specialPropRefWarningShown = !0, error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName));
          };
          warnAboutAccessingRef.isReactWarning = !0, Object.defineProperty(props, "ref", {
            get: warnAboutAccessingRef,
            configurable: !0
          });
        }
      }
      var ReactElement = function(type, key, ref, self2, source, owner, props) {
        var element = {
          // This tag allows us to uniquely identify this as a React Element
          $$typeof: REACT_ELEMENT_TYPE,
          // Built-in properties that belong on the element
          type,
          key,
          ref,
          props,
          // Record the component responsible for creating this element.
          _owner: owner
        };
        return element._store = {}, Object.defineProperty(element._store, "validated", {
          configurable: !1,
          enumerable: !1,
          writable: !0,
          value: !1
        }), Object.defineProperty(element, "_self", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: self2
        }), Object.defineProperty(element, "_source", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: source
        }), Object.freeze && (Object.freeze(element.props), Object.freeze(element)), element;
      };
      function jsxDEV57(type, config, maybeKey, source, self2) {
        {
          var propName, props = {}, key = null, ref = null;
          maybeKey !== void 0 && (checkKeyStringCoercion(maybeKey), key = "" + maybeKey), hasValidKey(config) && (checkKeyStringCoercion(config.key), key = "" + config.key), hasValidRef(config) && (ref = config.ref, warnIfStringRefCannotBeAutoConverted(config, self2));
          for (propName in config)
            hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName) && (props[propName] = config[propName]);
          if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for (propName in defaultProps)
              props[propName] === void 0 && (props[propName] = defaultProps[propName]);
          }
          if (key || ref) {
            var displayName = typeof type == "function" ? type.displayName || type.name || "Unknown" : type;
            key && defineKeyPropWarningGetter(props, displayName), ref && defineRefPropWarningGetter(props, displayName);
          }
          return ReactElement(type, key, ref, self2, source, ReactCurrentOwner.current, props);
        }
      }
      var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner, ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
      function setCurrentlyValidatingElement$1(element) {
        if (element) {
          var owner = element._owner, stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
          ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else
          ReactDebugCurrentFrame$1.setExtraStackFrame(null);
      }
      var propTypesMisspellWarningShown;
      propTypesMisspellWarningShown = !1;
      function isValidElement2(object) {
        return typeof object == "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
      }
      function getDeclarationErrorAddendum() {
        {
          if (ReactCurrentOwner$1.current) {
            var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);
            if (name)
              return `

Check the render method of \`` + name + "`.";
          }
          return "";
        }
      }
      function getSourceInfoErrorAddendum(source) {
        {
          if (source !== void 0) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, ""), lineNumber = source.lineNumber;
            return `

Check your code at ` + fileName + ":" + lineNumber + ".";
          }
          return "";
        }
      }
      var ownerHasKeyUseWarning = {};
      function getCurrentComponentErrorInfo(parentType) {
        {
          var info = getDeclarationErrorAddendum();
          if (!info) {
            var parentName = typeof parentType == "string" ? parentType : parentType.displayName || parentType.name;
            parentName && (info = `

Check the top-level render call using <` + parentName + ">.");
          }
          return info;
        }
      }
      function validateExplicitKey(element, parentType) {
        {
          if (!element._store || element._store.validated || element.key != null)
            return;
          element._store.validated = !0;
          var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
          if (ownerHasKeyUseWarning[currentComponentErrorInfo])
            return;
          ownerHasKeyUseWarning[currentComponentErrorInfo] = !0;
          var childOwner = "";
          element && element._owner && element._owner !== ReactCurrentOwner$1.current && (childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + "."), setCurrentlyValidatingElement$1(element), error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner), setCurrentlyValidatingElement$1(null);
        }
      }
      function validateChildKeys(node, parentType) {
        {
          if (typeof node != "object")
            return;
          if (isArray(node))
            for (var i7 = 0; i7 < node.length; i7++) {
              var child = node[i7];
              isValidElement2(child) && validateExplicitKey(child, parentType);
            }
          else if (isValidElement2(node))
            node._store && (node._store.validated = !0);
          else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn == "function" && iteratorFn !== node.entries)
              for (var iterator = iteratorFn.call(node), step; !(step = iterator.next()).done; )
                isValidElement2(step.value) && validateExplicitKey(step.value, parentType);
          }
        }
      }
      function validatePropTypes(element) {
        {
          var type = element.type;
          if (type == null || typeof type == "string")
            return;
          var propTypes;
          if (typeof type == "function")
            propTypes = type.propTypes;
          else if (typeof type == "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
          // Inner props are checked in the reconciler.
          type.$$typeof === REACT_MEMO_TYPE))
            propTypes = type.propTypes;
          else
            return;
          if (propTypes) {
            var name = getComponentNameFromType(type);
            checkPropTypes(propTypes, element.props, "prop", name, element);
          } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = !0;
            var _name = getComponentNameFromType(type);
            error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
          }
          typeof type.getDefaultProps == "function" && !type.getDefaultProps.isReactClassApproved && error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
        }
      }
      function validateFragmentProps(fragment) {
        {
          for (var keys2 = Object.keys(fragment.props), i7 = 0; i7 < keys2.length; i7++) {
            var key = keys2[i7];
            if (key !== "children" && key !== "key") {
              setCurrentlyValidatingElement$1(fragment), error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key), setCurrentlyValidatingElement$1(null);
              break;
            }
          }
          fragment.ref !== null && (setCurrentlyValidatingElement$1(fragment), error("Invalid attribute `ref` supplied to `React.Fragment`."), setCurrentlyValidatingElement$1(null));
        }
      }
      function jsxWithValidation(type, props, key, isStaticChildren, source, self2) {
        {
          var validType = isValidElementType(type);
          if (!validType) {
            var info = "";
            (type === void 0 || typeof type == "object" && type !== null && Object.keys(type).length === 0) && (info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
            var sourceInfo = getSourceInfoErrorAddendum(source);
            sourceInfo ? info += sourceInfo : info += getDeclarationErrorAddendum();
            var typeString;
            type === null ? typeString = "null" : isArray(type) ? typeString = "array" : type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE ? (typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />", info = " Did you accidentally export a JSX literal instead of a component?") : typeString = typeof type, error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
          }
          var element = jsxDEV57(type, props, key, source, self2);
          if (element == null)
            return element;
          if (validType) {
            var children = props.children;
            if (children !== void 0)
              if (isStaticChildren)
                if (isArray(children)) {
                  for (var i7 = 0; i7 < children.length; i7++)
                    validateChildKeys(children[i7], type);
                  Object.freeze && Object.freeze(children);
                } else
                  error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
              else
                validateChildKeys(children, type);
          }
          return type === REACT_FRAGMENT_TYPE ? validateFragmentProps(element) : validatePropTypes(element), element;
        }
      }
      var jsxDEV$1 = jsxWithValidation;
      exports.Fragment = REACT_FRAGMENT_TYPE, exports.jsxDEV = jsxDEV$1;
    })();
  }
});

// node_modules/react/jsx-dev-runtime.js
var require_jsx_dev_runtime = __commonJS({
  "node_modules/react/jsx-dev-runtime.js"(exports, module) {
    "use strict";
    module.exports = require_react_jsx_dev_runtime_development();
  }
});

// node_modules/cookie/index.js
var require_cookie = __commonJS({
  "node_modules/cookie/index.js"(exports) {
    "use strict";
    exports.parse = parse2;
    exports.serialize = serialize2;
    var decode = decodeURIComponent, encode = encodeURIComponent, fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
    function parse2(str, options) {
      if (typeof str != "string")
        throw new TypeError("argument str must be a string");
      for (var obj = {}, opt = options || {}, pairs = str.split(";"), dec = opt.decode || decode, i7 = 0; i7 < pairs.length; i7++) {
        var pair = pairs[i7], index3 = pair.indexOf("=");
        if (!(index3 < 0)) {
          var key = pair.substring(0, index3).trim();
          if (obj[key] == null) {
            var val = pair.substring(index3 + 1, pair.length).trim();
            val[0] === '"' && (val = val.slice(1, -1)), obj[key] = tryDecode(val, dec);
          }
        }
      }
      return obj;
    }
    function serialize2(name, val, options) {
      var opt = options || {}, enc = opt.encode || encode;
      if (typeof enc != "function")
        throw new TypeError("option encode is invalid");
      if (!fieldContentRegExp.test(name))
        throw new TypeError("argument name is invalid");
      var value = enc(val);
      if (value && !fieldContentRegExp.test(value))
        throw new TypeError("argument val is invalid");
      var str = name + "=" + value;
      if (opt.maxAge != null) {
        var maxAge = opt.maxAge - 0;
        if (isNaN(maxAge) || !isFinite(maxAge))
          throw new TypeError("option maxAge is invalid");
        str += "; Max-Age=" + Math.floor(maxAge);
      }
      if (opt.domain) {
        if (!fieldContentRegExp.test(opt.domain))
          throw new TypeError("option domain is invalid");
        str += "; Domain=" + opt.domain;
      }
      if (opt.path) {
        if (!fieldContentRegExp.test(opt.path))
          throw new TypeError("option path is invalid");
        str += "; Path=" + opt.path;
      }
      if (opt.expires) {
        if (typeof opt.expires.toUTCString != "function")
          throw new TypeError("option expires is invalid");
        str += "; Expires=" + opt.expires.toUTCString();
      }
      if (opt.httpOnly && (str += "; HttpOnly"), opt.secure && (str += "; Secure"), opt.sameSite) {
        var sameSite = typeof opt.sameSite == "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
        switch (sameSite) {
          case !0:
            str += "; SameSite=Strict";
            break;
          case "lax":
            str += "; SameSite=Lax";
            break;
          case "strict":
            str += "; SameSite=Strict";
            break;
          case "none":
            str += "; SameSite=None";
            break;
          default:
            throw new TypeError("option sameSite is invalid");
        }
      }
      return str;
    }
    function tryDecode(str, decode2) {
      try {
        return decode2(str);
      } catch {
        return str;
      }
    }
  }
});

// node_modules/set-cookie-parser/lib/set-cookie.js
var require_set_cookie = __commonJS({
  "node_modules/set-cookie-parser/lib/set-cookie.js"(exports, module) {
    "use strict";
    var defaultParseOptions = {
      decodeValues: !0,
      map: !1,
      silent: !1
    };
    function isNonEmptyString(str) {
      return typeof str == "string" && !!str.trim();
    }
    function parseString(setCookieValue, options) {
      var parts = setCookieValue.split(";").filter(isNonEmptyString), nameValuePairStr = parts.shift(), parsed = parseNameValuePair(nameValuePairStr), name = parsed.name, value = parsed.value;
      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;
      try {
        value = options.decodeValues ? decodeURIComponent(value) : value;
      } catch (e5) {
        console.error(
          "set-cookie-parser encountered an error while decoding a cookie with value '" + value + "'. Set options.decodeValues to false to disable this feature.",
          e5
        );
      }
      var cookie = {
        name,
        value
      };
      return parts.forEach(function(part) {
        var sides = part.split("="), key = sides.shift().trimLeft().toLowerCase(), value2 = sides.join("=");
        key === "expires" ? cookie.expires = new Date(value2) : key === "max-age" ? cookie.maxAge = parseInt(value2, 10) : key === "secure" ? cookie.secure = !0 : key === "httponly" ? cookie.httpOnly = !0 : key === "samesite" ? cookie.sameSite = value2 : cookie[key] = value2;
      }), cookie;
    }
    function parseNameValuePair(nameValuePairStr) {
      var name = "", value = "", nameValueArr = nameValuePairStr.split("=");
      return nameValueArr.length > 1 ? (name = nameValueArr.shift(), value = nameValueArr.join("=")) : value = nameValuePairStr, { name, value };
    }
    function parse2(input, options) {
      if (options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions, !input)
        return options.map ? {} : [];
      if (input.headers)
        if (typeof input.headers.getSetCookie == "function")
          input = input.headers.getSetCookie();
        else if (input.headers["set-cookie"])
          input = input.headers["set-cookie"];
        else {
          var sch = input.headers[Object.keys(input.headers).find(function(key) {
            return key.toLowerCase() === "set-cookie";
          })];
          !sch && input.headers.cookie && !options.silent && console.warn(
            "Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning."
          ), input = sch;
        }
      if (Array.isArray(input) || (input = [input]), options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions, options.map) {
        var cookies = {};
        return input.filter(isNonEmptyString).reduce(function(cookies2, str) {
          var cookie = parseString(str, options);
          return cookies2[cookie.name] = cookie, cookies2;
        }, cookies);
      } else
        return input.filter(isNonEmptyString).map(function(str) {
          return parseString(str, options);
        });
    }
    function splitCookiesString2(cookiesString) {
      if (Array.isArray(cookiesString))
        return cookiesString;
      if (typeof cookiesString != "string")
        return [];
      var cookiesStrings = [], pos = 0, start, ch, lastComma, nextStart, cookiesSeparatorFound;
      function skipWhitespace() {
        for (; pos < cookiesString.length && /\s/.test(cookiesString.charAt(pos)); )
          pos += 1;
        return pos < cookiesString.length;
      }
      function notSpecialChar() {
        return ch = cookiesString.charAt(pos), ch !== "=" && ch !== ";" && ch !== ",";
      }
      for (; pos < cookiesString.length; ) {
        for (start = pos, cookiesSeparatorFound = !1; skipWhitespace(); )
          if (ch = cookiesString.charAt(pos), ch === ",") {
            for (lastComma = pos, pos += 1, skipWhitespace(), nextStart = pos; pos < cookiesString.length && notSpecialChar(); )
              pos += 1;
            pos < cookiesString.length && cookiesString.charAt(pos) === "=" ? (cookiesSeparatorFound = !0, pos = nextStart, cookiesStrings.push(cookiesString.substring(start, lastComma)), start = pos) : pos = lastComma + 1;
          } else
            pos += 1;
        (!cookiesSeparatorFound || pos >= cookiesString.length) && cookiesStrings.push(cookiesString.substring(start, cookiesString.length));
      }
      return cookiesStrings;
    }
    module.exports = parse2;
    module.exports.parse = parse2;
    module.exports.parseString = parseString;
    module.exports.splitCookiesString = splitCookiesString2;
  }
});

// node_modules/react/cjs/react-jsx-runtime.development.js
var require_react_jsx_runtime_development = __commonJS({
  "node_modules/react/cjs/react-jsx-runtime.development.js"(exports) {
    "use strict";
    (function() {
      "use strict";
      var React26 = require_react(), REACT_ELEMENT_TYPE = Symbol.for("react.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler"), REACT_PROVIDER_TYPE = Symbol.for("react.provider"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"), MAYBE_ITERATOR_SYMBOL = Symbol.iterator, FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable != "object")
          return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        return typeof maybeIterator == "function" ? maybeIterator : null;
      }
      var ReactSharedInternals = React26.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
      function error(format) {
        {
          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)
            args[_key2 - 1] = arguments[_key2];
          printWarning("error", format, args);
        }
      }
      function printWarning(level, format, args) {
        {
          var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame, stack = ReactDebugCurrentFrame2.getStackAddendum();
          stack !== "" && (format += "%s", args = args.concat([stack]));
          var argsWithFormat = args.map(function(item) {
            return String(item);
          });
          argsWithFormat.unshift("Warning: " + format), Function.prototype.apply.call(console[level], console, argsWithFormat);
        }
      }
      var enableScopeAPI = !1, enableCacheElement = !1, enableTransitionTracing = !1, enableLegacyHidden = !1, enableDebugTracing = !1, REACT_MODULE_REFERENCE;
      REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
      function isValidElementType(type) {
        return !!(typeof type == "string" || typeof type == "function" || type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing || typeof type == "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
        // types supported by any Flight configuration anywhere since
        // we don't know which Flight build this will end up being used
        // with.
        type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0));
      }
      function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName)
          return displayName;
        var functionName = innerType.displayName || innerType.name || "";
        return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
      }
      function getContextName(type) {
        return type.displayName || "Context";
      }
      function getComponentNameFromType(type) {
        if (type == null)
          return null;
        if (typeof type.tag == "number" && error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof type == "function")
          return type.displayName || type.name || null;
        if (typeof type == "string")
          return type;
        switch (type) {
          case REACT_FRAGMENT_TYPE:
            return "Fragment";
          case REACT_PORTAL_TYPE:
            return "Portal";
          case REACT_PROFILER_TYPE:
            return "Profiler";
          case REACT_STRICT_MODE_TYPE:
            return "StrictMode";
          case REACT_SUSPENSE_TYPE:
            return "Suspense";
          case REACT_SUSPENSE_LIST_TYPE:
            return "SuspenseList";
        }
        if (typeof type == "object")
          switch (type.$$typeof) {
            case REACT_CONTEXT_TYPE:
              var context = type;
              return getContextName(context) + ".Consumer";
            case REACT_PROVIDER_TYPE:
              var provider = type;
              return getContextName(provider._context) + ".Provider";
            case REACT_FORWARD_REF_TYPE:
              return getWrappedName(type, type.render, "ForwardRef");
            case REACT_MEMO_TYPE:
              var outerName = type.displayName || null;
              return outerName !== null ? outerName : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE: {
              var lazyComponent = type, payload = lazyComponent._payload, init = lazyComponent._init;
              try {
                return getComponentNameFromType(init(payload));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      var assign = Object.assign, disabledDepth = 0, prevLog, prevInfo, prevWarn, prevError, prevGroup, prevGroupCollapsed, prevGroupEnd;
      function disabledLog() {
      }
      disabledLog.__reactDisabledLog = !0;
      function disableLogs() {
        {
          if (disabledDepth === 0) {
            prevLog = console.log, prevInfo = console.info, prevWarn = console.warn, prevError = console.error, prevGroup = console.group, prevGroupCollapsed = console.groupCollapsed, prevGroupEnd = console.groupEnd;
            var props = {
              configurable: !0,
              enumerable: !0,
              value: disabledLog,
              writable: !0
            };
            Object.defineProperties(console, {
              info: props,
              log: props,
              warn: props,
              error: props,
              group: props,
              groupCollapsed: props,
              groupEnd: props
            });
          }
          disabledDepth++;
        }
      }
      function reenableLogs() {
        {
          if (disabledDepth--, disabledDepth === 0) {
            var props = {
              configurable: !0,
              enumerable: !0,
              writable: !0
            };
            Object.defineProperties(console, {
              log: assign({}, props, {
                value: prevLog
              }),
              info: assign({}, props, {
                value: prevInfo
              }),
              warn: assign({}, props, {
                value: prevWarn
              }),
              error: assign({}, props, {
                value: prevError
              }),
              group: assign({}, props, {
                value: prevGroup
              }),
              groupCollapsed: assign({}, props, {
                value: prevGroupCollapsed
              }),
              groupEnd: assign({}, props, {
                value: prevGroupEnd
              })
            });
          }
          disabledDepth < 0 && error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }
      }
      var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher, prefix;
      function describeBuiltInComponentFrame(name, source, ownerFn) {
        {
          if (prefix === void 0)
            try {
              throw Error();
            } catch (x5) {
              var match = x5.stack.trim().match(/\n( *(at )?)/);
              prefix = match && match[1] || "";
            }
          return `
` + prefix + name;
        }
      }
      var reentry = !1, componentFrameCache;
      {
        var PossiblyWeakMap = typeof WeakMap == "function" ? WeakMap : Map;
        componentFrameCache = new PossiblyWeakMap();
      }
      function describeNativeComponentFrame(fn, construct) {
        if (!fn || reentry)
          return "";
        {
          var frame = componentFrameCache.get(fn);
          if (frame !== void 0)
            return frame;
        }
        var control;
        reentry = !0;
        var previousPrepareStackTrace = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher.current, ReactCurrentDispatcher.current = null, disableLogs();
        try {
          if (construct) {
            var Fake = function() {
              throw Error();
            };
            if (Object.defineProperty(Fake.prototype, "props", {
              set: function() {
                throw Error();
              }
            }), typeof Reflect == "object" && Reflect.construct) {
              try {
                Reflect.construct(Fake, []);
              } catch (x5) {
                control = x5;
              }
              Reflect.construct(fn, [], Fake);
            } else {
              try {
                Fake.call();
              } catch (x5) {
                control = x5;
              }
              fn.call(Fake.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (x5) {
              control = x5;
            }
            fn();
          }
        } catch (sample) {
          if (sample && control && typeof sample.stack == "string") {
            for (var sampleLines = sample.stack.split(`
`), controlLines = control.stack.split(`
`), s15 = sampleLines.length - 1, c13 = controlLines.length - 1; s15 >= 1 && c13 >= 0 && sampleLines[s15] !== controlLines[c13]; )
              c13--;
            for (; s15 >= 1 && c13 >= 0; s15--, c13--)
              if (sampleLines[s15] !== controlLines[c13]) {
                if (s15 !== 1 || c13 !== 1)
                  do
                    if (s15--, c13--, c13 < 0 || sampleLines[s15] !== controlLines[c13]) {
                      var _frame = `
` + sampleLines[s15].replace(" at new ", " at ");
                      return fn.displayName && _frame.includes("<anonymous>") && (_frame = _frame.replace("<anonymous>", fn.displayName)), typeof fn == "function" && componentFrameCache.set(fn, _frame), _frame;
                    }
                  while (s15 >= 1 && c13 >= 0);
                break;
              }
          }
        } finally {
          reentry = !1, ReactCurrentDispatcher.current = previousDispatcher, reenableLogs(), Error.prepareStackTrace = previousPrepareStackTrace;
        }
        var name = fn ? fn.displayName || fn.name : "", syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
        return typeof fn == "function" && componentFrameCache.set(fn, syntheticFrame), syntheticFrame;
      }
      function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, !1);
      }
      function shouldConstruct(Component2) {
        var prototype = Component2.prototype;
        return !!(prototype && prototype.isReactComponent);
      }
      function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null)
          return "";
        if (typeof type == "function")
          return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type == "string")
          return describeBuiltInComponentFrame(type);
        switch (type) {
          case REACT_SUSPENSE_TYPE:
            return describeBuiltInComponentFrame("Suspense");
          case REACT_SUSPENSE_LIST_TYPE:
            return describeBuiltInComponentFrame("SuspenseList");
        }
        if (typeof type == "object")
          switch (type.$$typeof) {
            case REACT_FORWARD_REF_TYPE:
              return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
              return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE: {
              var lazyComponent = type, payload = lazyComponent._payload, init = lazyComponent._init;
              try {
                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
              } catch {
              }
            }
          }
        return "";
      }
      var hasOwnProperty = Object.prototype.hasOwnProperty, loggedTypeFailures = {}, ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
      function setCurrentlyValidatingElement(element) {
        if (element) {
          var owner = element._owner, stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
          ReactDebugCurrentFrame.setExtraStackFrame(stack);
        } else
          ReactDebugCurrentFrame.setExtraStackFrame(null);
      }
      function checkPropTypes(typeSpecs, values, location, componentName, element) {
        {
          var has = Function.call.bind(hasOwnProperty);
          for (var typeSpecName in typeSpecs)
            if (has(typeSpecs, typeSpecName)) {
              var error$1 = void 0;
              try {
                if (typeof typeSpecs[typeSpecName] != "function") {
                  var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw err.name = "Invariant Violation", err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (ex) {
                error$1 = ex;
              }
              error$1 && !(error$1 instanceof Error) && (setCurrentlyValidatingElement(element), error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1), setCurrentlyValidatingElement(null)), error$1 instanceof Error && !(error$1.message in loggedTypeFailures) && (loggedTypeFailures[error$1.message] = !0, setCurrentlyValidatingElement(element), error("Failed %s type: %s", location, error$1.message), setCurrentlyValidatingElement(null));
            }
        }
      }
      var isArrayImpl = Array.isArray;
      function isArray(a13) {
        return isArrayImpl(a13);
      }
      function typeName(value) {
        {
          var hasToStringTag = typeof Symbol == "function" && Symbol.toStringTag, type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
          return type;
        }
      }
      function willCoercionThrow(value) {
        try {
          return testStringCoercion(value), !1;
        } catch {
          return !0;
        }
      }
      function testStringCoercion(value) {
        return "" + value;
      }
      function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value))
          return error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value)), testStringCoercion(value);
      }
      var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner, RESERVED_PROPS = {
        key: !0,
        ref: !0,
        __self: !0,
        __source: !0
      }, specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
      didWarnAboutStringRefs = {};
      function hasValidRef(config) {
        if (hasOwnProperty.call(config, "ref")) {
          var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
          if (getter && getter.isReactWarning)
            return !1;
        }
        return config.ref !== void 0;
      }
      function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
          var getter = Object.getOwnPropertyDescriptor(config, "key").get;
          if (getter && getter.isReactWarning)
            return !1;
        }
        return config.key !== void 0;
      }
      function warnIfStringRefCannotBeAutoConverted(config, self2) {
        if (typeof config.ref == "string" && ReactCurrentOwner.current && self2 && ReactCurrentOwner.current.stateNode !== self2) {
          var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
          didWarnAboutStringRefs[componentName] || (error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref), didWarnAboutStringRefs[componentName] = !0);
        }
      }
      function defineKeyPropWarningGetter(props, displayName) {
        {
          var warnAboutAccessingKey = function() {
            specialPropKeyWarningShown || (specialPropKeyWarningShown = !0, error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName));
          };
          warnAboutAccessingKey.isReactWarning = !0, Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: !0
          });
        }
      }
      function defineRefPropWarningGetter(props, displayName) {
        {
          var warnAboutAccessingRef = function() {
            specialPropRefWarningShown || (specialPropRefWarningShown = !0, error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName));
          };
          warnAboutAccessingRef.isReactWarning = !0, Object.defineProperty(props, "ref", {
            get: warnAboutAccessingRef,
            configurable: !0
          });
        }
      }
      var ReactElement = function(type, key, ref, self2, source, owner, props) {
        var element = {
          // This tag allows us to uniquely identify this as a React Element
          $$typeof: REACT_ELEMENT_TYPE,
          // Built-in properties that belong on the element
          type,
          key,
          ref,
          props,
          // Record the component responsible for creating this element.
          _owner: owner
        };
        return element._store = {}, Object.defineProperty(element._store, "validated", {
          configurable: !1,
          enumerable: !1,
          writable: !0,
          value: !1
        }), Object.defineProperty(element, "_self", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: self2
        }), Object.defineProperty(element, "_source", {
          configurable: !1,
          enumerable: !1,
          writable: !1,
          value: source
        }), Object.freeze && (Object.freeze(element.props), Object.freeze(element)), element;
      };
      function jsxDEV57(type, config, maybeKey, source, self2) {
        {
          var propName, props = {}, key = null, ref = null;
          maybeKey !== void 0 && (checkKeyStringCoercion(maybeKey), key = "" + maybeKey), hasValidKey(config) && (checkKeyStringCoercion(config.key), key = "" + config.key), hasValidRef(config) && (ref = config.ref, warnIfStringRefCannotBeAutoConverted(config, self2));
          for (propName in config)
            hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName) && (props[propName] = config[propName]);
          if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for (propName in defaultProps)
              props[propName] === void 0 && (props[propName] = defaultProps[propName]);
          }
          if (key || ref) {
            var displayName = typeof type == "function" ? type.displayName || type.name || "Unknown" : type;
            key && defineKeyPropWarningGetter(props, displayName), ref && defineRefPropWarningGetter(props, displayName);
          }
          return ReactElement(type, key, ref, self2, source, ReactCurrentOwner.current, props);
        }
      }
      var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner, ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
      function setCurrentlyValidatingElement$1(element) {
        if (element) {
          var owner = element._owner, stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
          ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else
          ReactDebugCurrentFrame$1.setExtraStackFrame(null);
      }
      var propTypesMisspellWarningShown;
      propTypesMisspellWarningShown = !1;
      function isValidElement2(object) {
        return typeof object == "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
      }
      function getDeclarationErrorAddendum() {
        {
          if (ReactCurrentOwner$1.current) {
            var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);
            if (name)
              return `

Check the render method of \`` + name + "`.";
          }
          return "";
        }
      }
      function getSourceInfoErrorAddendum(source) {
        {
          if (source !== void 0) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, ""), lineNumber = source.lineNumber;
            return `

Check your code at ` + fileName + ":" + lineNumber + ".";
          }
          return "";
        }
      }
      var ownerHasKeyUseWarning = {};
      function getCurrentComponentErrorInfo(parentType) {
        {
          var info = getDeclarationErrorAddendum();
          if (!info) {
            var parentName = typeof parentType == "string" ? parentType : parentType.displayName || parentType.name;
            parentName && (info = `

Check the top-level render call using <` + parentName + ">.");
          }
          return info;
        }
      }
      function validateExplicitKey(element, parentType) {
        {
          if (!element._store || element._store.validated || element.key != null)
            return;
          element._store.validated = !0;
          var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
          if (ownerHasKeyUseWarning[currentComponentErrorInfo])
            return;
          ownerHasKeyUseWarning[currentComponentErrorInfo] = !0;
          var childOwner = "";
          element && element._owner && element._owner !== ReactCurrentOwner$1.current && (childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + "."), setCurrentlyValidatingElement$1(element), error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner), setCurrentlyValidatingElement$1(null);
        }
      }
      function validateChildKeys(node, parentType) {
        {
          if (typeof node != "object")
            return;
          if (isArray(node))
            for (var i7 = 0; i7 < node.length; i7++) {
              var child = node[i7];
              isValidElement2(child) && validateExplicitKey(child, parentType);
            }
          else if (isValidElement2(node))
            node._store && (node._store.validated = !0);
          else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn == "function" && iteratorFn !== node.entries)
              for (var iterator = iteratorFn.call(node), step; !(step = iterator.next()).done; )
                isValidElement2(step.value) && validateExplicitKey(step.value, parentType);
          }
        }
      }
      function validatePropTypes(element) {
        {
          var type = element.type;
          if (type == null || typeof type == "string")
            return;
          var propTypes;
          if (typeof type == "function")
            propTypes = type.propTypes;
          else if (typeof type == "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
          // Inner props are checked in the reconciler.
          type.$$typeof === REACT_MEMO_TYPE))
            propTypes = type.propTypes;
          else
            return;
          if (propTypes) {
            var name = getComponentNameFromType(type);
            checkPropTypes(propTypes, element.props, "prop", name, element);
          } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
            propTypesMisspellWarningShown = !0;
            var _name = getComponentNameFromType(type);
            error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
          }
          typeof type.getDefaultProps == "function" && !type.getDefaultProps.isReactClassApproved && error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
        }
      }
      function validateFragmentProps(fragment) {
        {
          for (var keys2 = Object.keys(fragment.props), i7 = 0; i7 < keys2.length; i7++) {
            var key = keys2[i7];
            if (key !== "children" && key !== "key") {
              setCurrentlyValidatingElement$1(fragment), error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key), setCurrentlyValidatingElement$1(null);
              break;
            }
          }
          fragment.ref !== null && (setCurrentlyValidatingElement$1(fragment), error("Invalid attribute `ref` supplied to `React.Fragment`."), setCurrentlyValidatingElement$1(null));
        }
      }
      function jsxWithValidation(type, props, key, isStaticChildren, source, self2) {
        {
          var validType = isValidElementType(type);
          if (!validType) {
            var info = "";
            (type === void 0 || typeof type == "object" && type !== null && Object.keys(type).length === 0) && (info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
            var sourceInfo = getSourceInfoErrorAddendum(source);
            sourceInfo ? info += sourceInfo : info += getDeclarationErrorAddendum();
            var typeString;
            type === null ? typeString = "null" : isArray(type) ? typeString = "array" : type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE ? (typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />", info = " Did you accidentally export a JSX literal instead of a component?") : typeString = typeof type, error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
          }
          var element = jsxDEV57(type, props, key, source, self2);
          if (element == null)
            return element;
          if (validType) {
            var children = props.children;
            if (children !== void 0)
              if (isStaticChildren)
                if (isArray(children)) {
                  for (var i7 = 0; i7 < children.length; i7++)
                    validateChildKeys(children[i7], type);
                  Object.freeze && Object.freeze(children);
                } else
                  error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
              else
                validateChildKeys(children, type);
          }
          return type === REACT_FRAGMENT_TYPE ? validateFragmentProps(element) : validatePropTypes(element), element;
        }
      }
      function jsxWithValidationStatic(type, props, key) {
        return jsxWithValidation(type, props, key, !0);
      }
      function jsxWithValidationDynamic(type, props, key) {
        return jsxWithValidation(type, props, key, !1);
      }
      var jsx5 = jsxWithValidationDynamic, jsxs4 = jsxWithValidationStatic;
      exports.Fragment = REACT_FRAGMENT_TYPE, exports.jsx = jsx5, exports.jsxs = jsxs4;
    })();
  }
});

// node_modules/react/jsx-runtime.js
var require_jsx_runtime = __commonJS({
  "node_modules/react/jsx-runtime.js"(exports, module) {
    "use strict";
    module.exports = require_react_jsx_runtime_development();
  }
});

// node_modules/scheduler/cjs/scheduler.development.js
var require_scheduler_development = __commonJS({
  "node_modules/scheduler/cjs/scheduler.development.js"(exports) {
    "use strict";
    (function() {
      "use strict";
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var enableSchedulerDebugging = !1, enableProfiling = !1, frameYieldMs = 5;
      function push(heap, node) {
        var index3 = heap.length;
        heap.push(node), siftUp(heap, node, index3);
      }
      function peek(heap) {
        return heap.length === 0 ? null : heap[0];
      }
      function pop(heap) {
        if (heap.length === 0)
          return null;
        var first = heap[0], last = heap.pop();
        return last !== first && (heap[0] = last, siftDown(heap, last, 0)), first;
      }
      function siftUp(heap, node, i7) {
        for (var index3 = i7; index3 > 0; ) {
          var parentIndex = index3 - 1 >>> 1, parent = heap[parentIndex];
          if (compare(parent, node) > 0)
            heap[parentIndex] = node, heap[index3] = parent, index3 = parentIndex;
          else
            return;
        }
      }
      function siftDown(heap, node, i7) {
        for (var index3 = i7, length2 = heap.length, halfLength = length2 >>> 1; index3 < halfLength; ) {
          var leftIndex = (index3 + 1) * 2 - 1, left = heap[leftIndex], rightIndex = leftIndex + 1, right = heap[rightIndex];
          if (compare(left, node) < 0)
            rightIndex < length2 && compare(right, left) < 0 ? (heap[index3] = right, heap[rightIndex] = node, index3 = rightIndex) : (heap[index3] = left, heap[leftIndex] = node, index3 = leftIndex);
          else if (rightIndex < length2 && compare(right, node) < 0)
            heap[index3] = right, heap[rightIndex] = node, index3 = rightIndex;
          else
            return;
        }
      }
      function compare(a13, b6) {
        var diff = a13.sortIndex - b6.sortIndex;
        return diff !== 0 ? diff : a13.id - b6.id;
      }
      var ImmediatePriority = 1, UserBlockingPriority = 2, NormalPriority = 3, LowPriority = 4, IdlePriority = 5;
      function markTaskErrored(task, ms) {
      }
      var hasPerformanceNow = typeof performance == "object" && typeof performance.now == "function";
      if (hasPerformanceNow) {
        var localPerformance = performance;
        exports.unstable_now = function() {
          return localPerformance.now();
        };
      } else {
        var localDate = Date, initialTime = localDate.now();
        exports.unstable_now = function() {
          return localDate.now() - initialTime;
        };
      }
      var maxSigned31BitInt = 1073741823, IMMEDIATE_PRIORITY_TIMEOUT = -1, USER_BLOCKING_PRIORITY_TIMEOUT = 250, NORMAL_PRIORITY_TIMEOUT = 5e3, LOW_PRIORITY_TIMEOUT = 1e4, IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt, taskQueue = [], timerQueue = [], taskIdCounter = 1, currentTask = null, currentPriorityLevel = NormalPriority, isPerformingWork = !1, isHostCallbackScheduled = !1, isHostTimeoutScheduled = !1, localSetTimeout = typeof setTimeout == "function" ? setTimeout : null, localClearTimeout = typeof clearTimeout == "function" ? clearTimeout : null, localSetImmediate = typeof setImmediate < "u" ? setImmediate : null, isInputPending = typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
      function advanceTimers(currentTime) {
        for (var timer = peek(timerQueue); timer !== null; ) {
          if (timer.callback === null)
            pop(timerQueue);
          else if (timer.startTime <= currentTime)
            pop(timerQueue), timer.sortIndex = timer.expirationTime, push(taskQueue, timer);
          else
            return;
          timer = peek(timerQueue);
        }
      }
      function handleTimeout(currentTime) {
        if (isHostTimeoutScheduled = !1, advanceTimers(currentTime), !isHostCallbackScheduled)
          if (peek(taskQueue) !== null)
            isHostCallbackScheduled = !0, requestHostCallback(flushWork);
          else {
            var firstTimer = peek(timerQueue);
            firstTimer !== null && requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
          }
      }
      function flushWork(hasTimeRemaining, initialTime2) {
        isHostCallbackScheduled = !1, isHostTimeoutScheduled && (isHostTimeoutScheduled = !1, cancelHostTimeout()), isPerformingWork = !0;
        var previousPriorityLevel = currentPriorityLevel;
        try {
          if (enableProfiling)
            try {
              return workLoop(hasTimeRemaining, initialTime2);
            } catch (error) {
              if (currentTask !== null) {
                var currentTime = exports.unstable_now();
                currentTask.isQueued = !1;
              }
              throw error;
            }
          else
            return workLoop(hasTimeRemaining, initialTime2);
        } finally {
          currentTask = null, currentPriorityLevel = previousPriorityLevel, isPerformingWork = !1;
        }
      }
      function workLoop(hasTimeRemaining, initialTime2) {
        var currentTime = initialTime2;
        for (advanceTimers(currentTime), currentTask = peek(taskQueue); currentTask !== null && !enableSchedulerDebugging && !(currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())); ) {
          var callback = currentTask.callback;
          if (typeof callback == "function") {
            currentTask.callback = null, currentPriorityLevel = currentTask.priorityLevel;
            var didUserCallbackTimeout = currentTask.expirationTime <= currentTime, continuationCallback = callback(didUserCallbackTimeout);
            currentTime = exports.unstable_now(), typeof continuationCallback == "function" ? currentTask.callback = continuationCallback : currentTask === peek(taskQueue) && pop(taskQueue), advanceTimers(currentTime);
          } else
            pop(taskQueue);
          currentTask = peek(taskQueue);
        }
        if (currentTask !== null)
          return !0;
        var firstTimer = peek(timerQueue);
        return firstTimer !== null && requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime), !1;
      }
      function unstable_runWithPriority(priorityLevel, eventHandler) {
        switch (priorityLevel) {
          case ImmediatePriority:
          case UserBlockingPriority:
          case NormalPriority:
          case LowPriority:
          case IdlePriority:
            break;
          default:
            priorityLevel = NormalPriority;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
          return eventHandler();
        } finally {
          currentPriorityLevel = previousPriorityLevel;
        }
      }
      function unstable_next(eventHandler) {
        var priorityLevel;
        switch (currentPriorityLevel) {
          case ImmediatePriority:
          case UserBlockingPriority:
          case NormalPriority:
            priorityLevel = NormalPriority;
            break;
          default:
            priorityLevel = currentPriorityLevel;
            break;
        }
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = priorityLevel;
        try {
          return eventHandler();
        } finally {
          currentPriorityLevel = previousPriorityLevel;
        }
      }
      function unstable_wrapCallback(callback) {
        var parentPriorityLevel = currentPriorityLevel;
        return function() {
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = parentPriorityLevel;
          try {
            return callback.apply(this, arguments);
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        };
      }
      function unstable_scheduleCallback(priorityLevel, callback, options) {
        var currentTime = exports.unstable_now(), startTime2;
        if (typeof options == "object" && options !== null) {
          var delay = options.delay;
          typeof delay == "number" && delay > 0 ? startTime2 = currentTime + delay : startTime2 = currentTime;
        } else
          startTime2 = currentTime;
        var timeout;
        switch (priorityLevel) {
          case ImmediatePriority:
            timeout = IMMEDIATE_PRIORITY_TIMEOUT;
            break;
          case UserBlockingPriority:
            timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
            break;
          case IdlePriority:
            timeout = IDLE_PRIORITY_TIMEOUT;
            break;
          case LowPriority:
            timeout = LOW_PRIORITY_TIMEOUT;
            break;
          case NormalPriority:
          default:
            timeout = NORMAL_PRIORITY_TIMEOUT;
            break;
        }
        var expirationTime = startTime2 + timeout, newTask = {
          id: taskIdCounter++,
          callback,
          priorityLevel,
          startTime: startTime2,
          expirationTime,
          sortIndex: -1
        };
        return startTime2 > currentTime ? (newTask.sortIndex = startTime2, push(timerQueue, newTask), peek(taskQueue) === null && newTask === peek(timerQueue) && (isHostTimeoutScheduled ? cancelHostTimeout() : isHostTimeoutScheduled = !0, requestHostTimeout(handleTimeout, startTime2 - currentTime))) : (newTask.sortIndex = expirationTime, push(taskQueue, newTask), !isHostCallbackScheduled && !isPerformingWork && (isHostCallbackScheduled = !0, requestHostCallback(flushWork))), newTask;
      }
      function unstable_pauseExecution() {
      }
      function unstable_continueExecution() {
        !isHostCallbackScheduled && !isPerformingWork && (isHostCallbackScheduled = !0, requestHostCallback(flushWork));
      }
      function unstable_getFirstCallbackNode() {
        return peek(taskQueue);
      }
      function unstable_cancelCallback(task) {
        task.callback = null;
      }
      function unstable_getCurrentPriorityLevel() {
        return currentPriorityLevel;
      }
      var isMessageLoopRunning = !1, scheduledHostCallback = null, taskTimeoutID = -1, frameInterval = frameYieldMs, startTime = -1;
      function shouldYieldToHost() {
        var timeElapsed = exports.unstable_now() - startTime;
        return !(timeElapsed < frameInterval);
      }
      function requestPaint() {
      }
      function forceFrameRate(fps) {
        if (fps < 0 || fps > 125) {
          console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
          return;
        }
        fps > 0 ? frameInterval = Math.floor(1e3 / fps) : frameInterval = frameYieldMs;
      }
      var performWorkUntilDeadline = function() {
        if (scheduledHostCallback !== null) {
          var currentTime = exports.unstable_now();
          startTime = currentTime;
          var hasTimeRemaining = !0, hasMoreWork = !0;
          try {
            hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
          } finally {
            hasMoreWork ? schedulePerformWorkUntilDeadline() : (isMessageLoopRunning = !1, scheduledHostCallback = null);
          }
        } else
          isMessageLoopRunning = !1;
      }, schedulePerformWorkUntilDeadline;
      if (typeof localSetImmediate == "function")
        schedulePerformWorkUntilDeadline = function() {
          localSetImmediate(performWorkUntilDeadline);
        };
      else if (typeof MessageChannel < "u") {
        var channel = new MessageChannel(), port = channel.port2;
        channel.port1.onmessage = performWorkUntilDeadline, schedulePerformWorkUntilDeadline = function() {
          port.postMessage(null);
        };
      } else
        schedulePerformWorkUntilDeadline = function() {
          localSetTimeout(performWorkUntilDeadline, 0);
        };
      function requestHostCallback(callback) {
        scheduledHostCallback = callback, isMessageLoopRunning || (isMessageLoopRunning = !0, schedulePerformWorkUntilDeadline());
      }
      function requestHostTimeout(callback, ms) {
        taskTimeoutID = localSetTimeout(function() {
          callback(exports.unstable_now());
        }, ms);
      }
      function cancelHostTimeout() {
        localClearTimeout(taskTimeoutID), taskTimeoutID = -1;
      }
      var unstable_requestPaint = requestPaint, unstable_Profiling = null;
      exports.unstable_IdlePriority = IdlePriority, exports.unstable_ImmediatePriority = ImmediatePriority, exports.unstable_LowPriority = LowPriority, exports.unstable_NormalPriority = NormalPriority, exports.unstable_Profiling = unstable_Profiling, exports.unstable_UserBlockingPriority = UserBlockingPriority, exports.unstable_cancelCallback = unstable_cancelCallback, exports.unstable_continueExecution = unstable_continueExecution, exports.unstable_forceFrameRate = forceFrameRate, exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel, exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode, exports.unstable_next = unstable_next, exports.unstable_pauseExecution = unstable_pauseExecution, exports.unstable_requestPaint = unstable_requestPaint, exports.unstable_runWithPriority = unstable_runWithPriority, exports.unstable_scheduleCallback = unstable_scheduleCallback, exports.unstable_shouldYield = shouldYieldToHost, exports.unstable_wrapCallback = unstable_wrapCallback, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
    })();
  }
});

// node_modules/scheduler/index.js
var require_scheduler = __commonJS({
  "node_modules/scheduler/index.js"(exports, module) {
    "use strict";
    module.exports = require_scheduler_development();
  }
});

// node_modules/react-dom/cjs/react-dom.development.js
var require_react_dom_development = __commonJS({
  "node_modules/react-dom/cjs/react-dom.development.js"(exports) {
    "use strict";
    (function() {
      "use strict";
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
      var React26 = require_react(), Scheduler = require_scheduler(), ReactSharedInternals = React26.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, suppressWarning = !1;
      function setSuppressWarning(newSuppressWarning) {
        suppressWarning = newSuppressWarning;
      }
      function warn(format) {
        if (!suppressWarning) {
          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)
            args[_key - 1] = arguments[_key];
          printWarning("warn", format, args);
        }
      }
      function error(format) {
        if (!suppressWarning) {
          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++)
            args[_key2 - 1] = arguments[_key2];
          printWarning("error", format, args);
        }
      }
      function printWarning(level, format, args) {
        {
          var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame, stack = ReactDebugCurrentFrame2.getStackAddendum();
          stack !== "" && (format += "%s", args = args.concat([stack]));
          var argsWithFormat = args.map(function(item) {
            return String(item);
          });
          argsWithFormat.unshift("Warning: " + format), Function.prototype.apply.call(console[level], console, argsWithFormat);
        }
      }
      var FunctionComponent = 0, ClassComponent = 1, IndeterminateComponent = 2, HostRoot = 3, HostPortal = 4, HostComponent = 5, HostText = 6, Fragment30 = 7, Mode = 8, ContextConsumer = 9, ContextProvider = 10, ForwardRef10 = 11, Profiler = 12, SuspenseComponent = 13, MemoComponent = 14, SimpleMemoComponent = 15, LazyComponent = 16, IncompleteClassComponent = 17, DehydratedFragment = 18, SuspenseListComponent = 19, ScopeComponent = 21, OffscreenComponent = 22, LegacyHiddenComponent = 23, CacheComponent = 24, TracingMarkerComponent = 25, enableClientRenderFallbackOnTextMismatch = !0, enableNewReconciler = !1, enableLazyContextPropagation = !1, enableLegacyHidden = !1, enableSuspenseAvoidThisFallback = !1, disableCommentsAsDOMContainers = !0, enableCustomElementPropertySupport = !1, warnAboutStringRefs = !1, enableSchedulingProfiler = !0, enableProfilerTimer = !0, enableProfilerCommitHooks = !0, allNativeEvents = /* @__PURE__ */ new Set(), registrationNameDependencies = {}, possibleRegistrationNames = {};
      function registerTwoPhaseEvent(registrationName, dependencies) {
        registerDirectEvent(registrationName, dependencies), registerDirectEvent(registrationName + "Capture", dependencies);
      }
      function registerDirectEvent(registrationName, dependencies) {
        registrationNameDependencies[registrationName] && error("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", registrationName), registrationNameDependencies[registrationName] = dependencies;
        {
          var lowerCasedName = registrationName.toLowerCase();
          possibleRegistrationNames[lowerCasedName] = registrationName, registrationName === "onDoubleClick" && (possibleRegistrationNames.ondblclick = registrationName);
        }
        for (var i7 = 0; i7 < dependencies.length; i7++)
          allNativeEvents.add(dependencies[i7]);
      }
      var canUseDOM = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", hasOwnProperty = Object.prototype.hasOwnProperty;
      function typeName(value) {
        {
          var hasToStringTag = typeof Symbol == "function" && Symbol.toStringTag, type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
          return type;
        }
      }
      function willCoercionThrow(value) {
        try {
          return testStringCoercion(value), !1;
        } catch {
          return !0;
        }
      }
      function testStringCoercion(value) {
        return "" + value;
      }
      function checkAttributeStringCoercion(value, attributeName) {
        if (willCoercionThrow(value))
          return error("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", attributeName, typeName(value)), testStringCoercion(value);
      }
      function checkKeyStringCoercion(value) {
        if (willCoercionThrow(value))
          return error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value)), testStringCoercion(value);
      }
      function checkPropStringCoercion(value, propName) {
        if (willCoercionThrow(value))
          return error("The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value)), testStringCoercion(value);
      }
      function checkCSSPropertyStringCoercion(value, propName) {
        if (willCoercionThrow(value))
          return error("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value)), testStringCoercion(value);
      }
      function checkHtmlStringCoercion(value) {
        if (willCoercionThrow(value))
          return error("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value)), testStringCoercion(value);
      }
      function checkFormFieldValueStringCoercion(value) {
        if (willCoercionThrow(value))
          return error("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before before using it here.", typeName(value)), testStringCoercion(value);
      }
      var RESERVED = 0, STRING = 1, BOOLEANISH_STRING = 2, BOOLEAN = 3, OVERLOADED_BOOLEAN = 4, NUMERIC = 5, POSITIVE_NUMERIC = 6, ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD", ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040", VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$"), illegalAttributeNameCache = {}, validatedAttributeNameCache = {};
      function isAttributeNameSafe(attributeName) {
        return hasOwnProperty.call(validatedAttributeNameCache, attributeName) ? !0 : hasOwnProperty.call(illegalAttributeNameCache, attributeName) ? !1 : VALID_ATTRIBUTE_NAME_REGEX.test(attributeName) ? (validatedAttributeNameCache[attributeName] = !0, !0) : (illegalAttributeNameCache[attributeName] = !0, error("Invalid attribute name: `%s`", attributeName), !1);
      }
      function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
        return propertyInfo !== null ? propertyInfo.type === RESERVED : isCustomComponentTag ? !1 : name.length > 2 && (name[0] === "o" || name[0] === "O") && (name[1] === "n" || name[1] === "N");
      }
      function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
        if (propertyInfo !== null && propertyInfo.type === RESERVED)
          return !1;
        switch (typeof value) {
          case "function":
          case "symbol":
            return !0;
          case "boolean": {
            if (isCustomComponentTag)
              return !1;
            if (propertyInfo !== null)
              return !propertyInfo.acceptsBooleans;
            var prefix2 = name.toLowerCase().slice(0, 5);
            return prefix2 !== "data-" && prefix2 !== "aria-";
          }
          default:
            return !1;
        }
      }
      function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
        if (value === null || typeof value > "u" || shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag))
          return !0;
        if (isCustomComponentTag)
          return !1;
        if (propertyInfo !== null)
          switch (propertyInfo.type) {
            case BOOLEAN:
              return !value;
            case OVERLOADED_BOOLEAN:
              return value === !1;
            case NUMERIC:
              return isNaN(value);
            case POSITIVE_NUMERIC:
              return isNaN(value) || value < 1;
          }
        return !1;
      }
      function getPropertyInfo(name) {
        return properties.hasOwnProperty(name) ? properties[name] : null;
      }
      function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL2, removeEmptyString) {
        this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN, this.attributeName = attributeName, this.attributeNamespace = attributeNamespace, this.mustUseProperty = mustUseProperty, this.propertyName = name, this.type = type, this.sanitizeURL = sanitizeURL2, this.removeEmptyString = removeEmptyString;
      }
      var properties = {}, reservedProps = [
        "children",
        "dangerouslySetInnerHTML",
        // TODO: This prevents the assignment of defaultValue to regular
        // elements (not just inputs). Now that ReactDOMInput assigns to the
        // defaultValue property -- do we need this?
        "defaultValue",
        "defaultChecked",
        "innerHTML",
        "suppressContentEditableWarning",
        "suppressHydrationWarning",
        "style"
      ];
      reservedProps.forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          RESERVED,
          !1,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(_ref) {
        var name = _ref[0], attributeName = _ref[1];
        properties[name] = new PropertyInfoRecord(
          name,
          STRING,
          !1,
          // mustUseProperty
          attributeName,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          BOOLEANISH_STRING,
          !1,
          // mustUseProperty
          name.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          BOOLEANISH_STRING,
          !1,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "allowFullScreen",
        "async",
        // Note: there is a special case that prevents it from being written to the DOM
        // on the client side because the browsers are inconsistent. Instead we call focus().
        "autoFocus",
        "autoPlay",
        "controls",
        "default",
        "defer",
        "disabled",
        "disablePictureInPicture",
        "disableRemotePlayback",
        "formNoValidate",
        "hidden",
        "loop",
        "noModule",
        "noValidate",
        "open",
        "playsInline",
        "readOnly",
        "required",
        "reversed",
        "scoped",
        "seamless",
        // Microdata
        "itemScope"
      ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          BOOLEAN,
          !1,
          // mustUseProperty
          name.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "checked",
        // Note: `option.selected` is not updated if `select.multiple` is
        // disabled with `removeAttribute`. We have special logic for handling this.
        "multiple",
        "muted",
        "selected"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          BOOLEAN,
          !0,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "capture",
        "download"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          OVERLOADED_BOOLEAN,
          !1,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "cols",
        "rows",
        "size",
        "span"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          POSITIVE_NUMERIC,
          !1,
          // mustUseProperty
          name,
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), ["rowSpan", "start"].forEach(function(name) {
        properties[name] = new PropertyInfoRecord(
          name,
          NUMERIC,
          !1,
          // mustUseProperty
          name.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      });
      var CAMELIZE = /[\-\:]([a-z])/g, capitalize = function(token) {
        return token[1].toUpperCase();
      };
      [
        "accent-height",
        "alignment-baseline",
        "arabic-form",
        "baseline-shift",
        "cap-height",
        "clip-path",
        "clip-rule",
        "color-interpolation",
        "color-interpolation-filters",
        "color-profile",
        "color-rendering",
        "dominant-baseline",
        "enable-background",
        "fill-opacity",
        "fill-rule",
        "flood-color",
        "flood-opacity",
        "font-family",
        "font-size",
        "font-size-adjust",
        "font-stretch",
        "font-style",
        "font-variant",
        "font-weight",
        "glyph-name",
        "glyph-orientation-horizontal",
        "glyph-orientation-vertical",
        "horiz-adv-x",
        "horiz-origin-x",
        "image-rendering",
        "letter-spacing",
        "lighting-color",
        "marker-end",
        "marker-mid",
        "marker-start",
        "overline-position",
        "overline-thickness",
        "paint-order",
        "panose-1",
        "pointer-events",
        "rendering-intent",
        "shape-rendering",
        "stop-color",
        "stop-opacity",
        "strikethrough-position",
        "strikethrough-thickness",
        "stroke-dasharray",
        "stroke-dashoffset",
        "stroke-linecap",
        "stroke-linejoin",
        "stroke-miterlimit",
        "stroke-opacity",
        "stroke-width",
        "text-anchor",
        "text-decoration",
        "text-rendering",
        "underline-position",
        "underline-thickness",
        "unicode-bidi",
        "unicode-range",
        "units-per-em",
        "v-alphabetic",
        "v-hanging",
        "v-ideographic",
        "v-mathematical",
        "vector-effect",
        "vert-adv-y",
        "vert-origin-x",
        "vert-origin-y",
        "word-spacing",
        "writing-mode",
        "xmlns:xlink",
        "x-height"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(
          name,
          STRING,
          !1,
          // mustUseProperty
          attributeName,
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "xlink:actuate",
        "xlink:arcrole",
        "xlink:role",
        "xlink:show",
        "xlink:title",
        "xlink:type"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(
          name,
          STRING,
          !1,
          // mustUseProperty
          attributeName,
          "http://www.w3.org/1999/xlink",
          !1,
          // sanitizeURL
          !1
        );
      }), [
        "xml:base",
        "xml:lang",
        "xml:space"
        // NOTE: if you add a camelCased prop to this list,
        // you'll need to set attributeName to name.toLowerCase()
        // instead in the assignment below.
      ].forEach(function(attributeName) {
        var name = attributeName.replace(CAMELIZE, capitalize);
        properties[name] = new PropertyInfoRecord(
          name,
          STRING,
          !1,
          // mustUseProperty
          attributeName,
          "http://www.w3.org/XML/1998/namespace",
          !1,
          // sanitizeURL
          !1
        );
      }), ["tabIndex", "crossOrigin"].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(
          attributeName,
          STRING,
          !1,
          // mustUseProperty
          attributeName.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !1,
          // sanitizeURL
          !1
        );
      });
      var xlinkHref = "xlinkHref";
      properties[xlinkHref] = new PropertyInfoRecord(
        "xlinkHref",
        STRING,
        !1,
        // mustUseProperty
        "xlink:href",
        "http://www.w3.org/1999/xlink",
        !0,
        // sanitizeURL
        !1
      ), ["src", "href", "action", "formAction"].forEach(function(attributeName) {
        properties[attributeName] = new PropertyInfoRecord(
          attributeName,
          STRING,
          !1,
          // mustUseProperty
          attributeName.toLowerCase(),
          // attributeName
          null,
          // attributeNamespace
          !0,
          // sanitizeURL
          !0
        );
      });
      var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i, didWarn = !1;
      function sanitizeURL(url) {
        !didWarn && isJavaScriptProtocol.test(url) && (didWarn = !0, error("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url)));
      }
      function getValueForProperty(node, name, expected, propertyInfo) {
        if (propertyInfo.mustUseProperty) {
          var propertyName = propertyInfo.propertyName;
          return node[propertyName];
        } else {
          checkAttributeStringCoercion(expected, name), propertyInfo.sanitizeURL && sanitizeURL("" + expected);
          var attributeName = propertyInfo.attributeName, stringValue = null;
          if (propertyInfo.type === OVERLOADED_BOOLEAN) {
            if (node.hasAttribute(attributeName)) {
              var value = node.getAttribute(attributeName);
              return value === "" ? !0 : shouldRemoveAttribute(name, expected, propertyInfo, !1) ? value : value === "" + expected ? expected : value;
            }
          } else if (node.hasAttribute(attributeName)) {
            if (shouldRemoveAttribute(name, expected, propertyInfo, !1))
              return node.getAttribute(attributeName);
            if (propertyInfo.type === BOOLEAN)
              return expected;
            stringValue = node.getAttribute(attributeName);
          }
          return shouldRemoveAttribute(name, expected, propertyInfo, !1) ? stringValue === null ? expected : stringValue : stringValue === "" + expected ? expected : stringValue;
        }
      }
      function getValueForAttribute(node, name, expected, isCustomComponentTag) {
        {
          if (!isAttributeNameSafe(name))
            return;
          if (!node.hasAttribute(name))
            return expected === void 0 ? void 0 : null;
          var value = node.getAttribute(name);
          return checkAttributeStringCoercion(expected, name), value === "" + expected ? expected : value;
        }
      }
      function setValueForProperty(node, name, value, isCustomComponentTag) {
        var propertyInfo = getPropertyInfo(name);
        if (!shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
          if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) && (value = null), isCustomComponentTag || propertyInfo === null) {
            if (isAttributeNameSafe(name)) {
              var _attributeName = name;
              value === null ? node.removeAttribute(_attributeName) : (checkAttributeStringCoercion(value, name), node.setAttribute(_attributeName, "" + value));
            }
            return;
          }
          var mustUseProperty = propertyInfo.mustUseProperty;
          if (mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            if (value === null) {
              var type = propertyInfo.type;
              node[propertyName] = type === BOOLEAN ? !1 : "";
            } else
              node[propertyName] = value;
            return;
          }
          var attributeName = propertyInfo.attributeName, attributeNamespace = propertyInfo.attributeNamespace;
          if (value === null)
            node.removeAttribute(attributeName);
          else {
            var _type = propertyInfo.type, attributeValue;
            _type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === !0 ? attributeValue = "" : (checkAttributeStringCoercion(value, attributeName), attributeValue = "" + value, propertyInfo.sanitizeURL && sanitizeURL(attributeValue.toString())), attributeNamespace ? node.setAttributeNS(attributeNamespace, attributeName, attributeValue) : node.setAttribute(attributeName, attributeValue);
          }
        }
      }
      var REACT_ELEMENT_TYPE = Symbol.for("react.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler"), REACT_PROVIDER_TYPE = Symbol.for("react.provider"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_SCOPE_TYPE = Symbol.for("react.scope"), REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for("react.debug_trace_mode"), REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"), REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden"), REACT_CACHE_TYPE = Symbol.for("react.cache"), REACT_TRACING_MARKER_TYPE = Symbol.for("react.tracing_marker"), MAYBE_ITERATOR_SYMBOL = Symbol.iterator, FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        if (maybeIterable === null || typeof maybeIterable != "object")
          return null;
        var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
        return typeof maybeIterator == "function" ? maybeIterator : null;
      }
      var assign = Object.assign, disabledDepth = 0, prevLog, prevInfo, prevWarn, prevError, prevGroup, prevGroupCollapsed, prevGroupEnd;
      function disabledLog() {
      }
      disabledLog.__reactDisabledLog = !0;
      function disableLogs() {
        {
          if (disabledDepth === 0) {
            prevLog = console.log, prevInfo = console.info, prevWarn = console.warn, prevError = console.error, prevGroup = console.group, prevGroupCollapsed = console.groupCollapsed, prevGroupEnd = console.groupEnd;
            var props = {
              configurable: !0,
              enumerable: !0,
              value: disabledLog,
              writable: !0
            };
            Object.defineProperties(console, {
              info: props,
              log: props,
              warn: props,
              error: props,
              group: props,
              groupCollapsed: props,
              groupEnd: props
            });
          }
          disabledDepth++;
        }
      }
      function reenableLogs() {
        {
          if (disabledDepth--, disabledDepth === 0) {
            var props = {
              configurable: !0,
              enumerable: !0,
              writable: !0
            };
            Object.defineProperties(console, {
              log: assign({}, props, {
                value: prevLog
              }),
              info: assign({}, props, {
                value: prevInfo
              }),
              warn: assign({}, props, {
                value: prevWarn
              }),
              error: assign({}, props, {
                value: prevError
              }),
              group: assign({}, props, {
                value: prevGroup
              }),
              groupCollapsed: assign({}, props, {
                value: prevGroupCollapsed
              }),
              groupEnd: assign({}, props, {
                value: prevGroupEnd
              })
            });
          }
          disabledDepth < 0 && error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
        }
      }
      var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher, prefix;
      function describeBuiltInComponentFrame(name, source, ownerFn) {
        {
          if (prefix === void 0)
            try {
              throw Error();
            } catch (x5) {
              var match = x5.stack.trim().match(/\n( *(at )?)/);
              prefix = match && match[1] || "";
            }
          return `
` + prefix + name;
        }
      }
      var reentry = !1, componentFrameCache;
      {
        var PossiblyWeakMap = typeof WeakMap == "function" ? WeakMap : Map;
        componentFrameCache = new PossiblyWeakMap();
      }
      function describeNativeComponentFrame(fn, construct) {
        if (!fn || reentry)
          return "";
        {
          var frame = componentFrameCache.get(fn);
          if (frame !== void 0)
            return frame;
        }
        var control;
        reentry = !0;
        var previousPrepareStackTrace = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        var previousDispatcher;
        previousDispatcher = ReactCurrentDispatcher.current, ReactCurrentDispatcher.current = null, disableLogs();
        try {
          if (construct) {
            var Fake = function() {
              throw Error();
            };
            if (Object.defineProperty(Fake.prototype, "props", {
              set: function() {
                throw Error();
              }
            }), typeof Reflect == "object" && Reflect.construct) {
              try {
                Reflect.construct(Fake, []);
              } catch (x5) {
                control = x5;
              }
              Reflect.construct(fn, [], Fake);
            } else {
              try {
                Fake.call();
              } catch (x5) {
                control = x5;
              }
              fn.call(Fake.prototype);
            }
          } else {
            try {
              throw Error();
            } catch (x5) {
              control = x5;
            }
            fn();
          }
        } catch (sample) {
          if (sample && control && typeof sample.stack == "string") {
            for (var sampleLines = sample.stack.split(`
`), controlLines = control.stack.split(`
`), s15 = sampleLines.length - 1, c13 = controlLines.length - 1; s15 >= 1 && c13 >= 0 && sampleLines[s15] !== controlLines[c13]; )
              c13--;
            for (; s15 >= 1 && c13 >= 0; s15--, c13--)
              if (sampleLines[s15] !== controlLines[c13]) {
                if (s15 !== 1 || c13 !== 1)
                  do
                    if (s15--, c13--, c13 < 0 || sampleLines[s15] !== controlLines[c13]) {
                      var _frame = `
` + sampleLines[s15].replace(" at new ", " at ");
                      return fn.displayName && _frame.includes("<anonymous>") && (_frame = _frame.replace("<anonymous>", fn.displayName)), typeof fn == "function" && componentFrameCache.set(fn, _frame), _frame;
                    }
                  while (s15 >= 1 && c13 >= 0);
                break;
              }
          }
        } finally {
          reentry = !1, ReactCurrentDispatcher.current = previousDispatcher, reenableLogs(), Error.prepareStackTrace = previousPrepareStackTrace;
        }
        var name = fn ? fn.displayName || fn.name : "", syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
        return typeof fn == "function" && componentFrameCache.set(fn, syntheticFrame), syntheticFrame;
      }
      function describeClassComponentFrame(ctor, source, ownerFn) {
        return describeNativeComponentFrame(ctor, !0);
      }
      function describeFunctionComponentFrame(fn, source, ownerFn) {
        return describeNativeComponentFrame(fn, !1);
      }
      function shouldConstruct(Component2) {
        var prototype = Component2.prototype;
        return !!(prototype && prototype.isReactComponent);
      }
      function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
        if (type == null)
          return "";
        if (typeof type == "function")
          return describeNativeComponentFrame(type, shouldConstruct(type));
        if (typeof type == "string")
          return describeBuiltInComponentFrame(type);
        switch (type) {
          case REACT_SUSPENSE_TYPE:
            return describeBuiltInComponentFrame("Suspense");
          case REACT_SUSPENSE_LIST_TYPE:
            return describeBuiltInComponentFrame("SuspenseList");
        }
        if (typeof type == "object")
          switch (type.$$typeof) {
            case REACT_FORWARD_REF_TYPE:
              return describeFunctionComponentFrame(type.render);
            case REACT_MEMO_TYPE:
              return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
            case REACT_LAZY_TYPE: {
              var lazyComponent = type, payload = lazyComponent._payload, init = lazyComponent._init;
              try {
                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
              } catch {
              }
            }
          }
        return "";
      }
      function describeFiber(fiber) {
        var owner = fiber._debugOwner ? fiber._debugOwner.type : null, source = fiber._debugSource;
        switch (fiber.tag) {
          case HostComponent:
            return describeBuiltInComponentFrame(fiber.type);
          case LazyComponent:
            return describeBuiltInComponentFrame("Lazy");
          case SuspenseComponent:
            return describeBuiltInComponentFrame("Suspense");
          case SuspenseListComponent:
            return describeBuiltInComponentFrame("SuspenseList");
          case FunctionComponent:
          case IndeterminateComponent:
          case SimpleMemoComponent:
            return describeFunctionComponentFrame(fiber.type);
          case ForwardRef10:
            return describeFunctionComponentFrame(fiber.type.render);
          case ClassComponent:
            return describeClassComponentFrame(fiber.type);
          default:
            return "";
        }
      }
      function getStackByFiberInDevAndProd(workInProgress2) {
        try {
          var info = "", node = workInProgress2;
          do
            info += describeFiber(node), node = node.return;
          while (node);
          return info;
        } catch (x5) {
          return `
Error generating stack: ` + x5.message + `
` + x5.stack;
        }
      }
      function getWrappedName(outerType, innerType, wrapperName) {
        var displayName = outerType.displayName;
        if (displayName)
          return displayName;
        var functionName = innerType.displayName || innerType.name || "";
        return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
      }
      function getContextName(type) {
        return type.displayName || "Context";
      }
      function getComponentNameFromType(type) {
        if (type == null)
          return null;
        if (typeof type.tag == "number" && error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof type == "function")
          return type.displayName || type.name || null;
        if (typeof type == "string")
          return type;
        switch (type) {
          case REACT_FRAGMENT_TYPE:
            return "Fragment";
          case REACT_PORTAL_TYPE:
            return "Portal";
          case REACT_PROFILER_TYPE:
            return "Profiler";
          case REACT_STRICT_MODE_TYPE:
            return "StrictMode";
          case REACT_SUSPENSE_TYPE:
            return "Suspense";
          case REACT_SUSPENSE_LIST_TYPE:
            return "SuspenseList";
        }
        if (typeof type == "object")
          switch (type.$$typeof) {
            case REACT_CONTEXT_TYPE:
              var context = type;
              return getContextName(context) + ".Consumer";
            case REACT_PROVIDER_TYPE:
              var provider = type;
              return getContextName(provider._context) + ".Provider";
            case REACT_FORWARD_REF_TYPE:
              return getWrappedName(type, type.render, "ForwardRef");
            case REACT_MEMO_TYPE:
              var outerName = type.displayName || null;
              return outerName !== null ? outerName : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE: {
              var lazyComponent = type, payload = lazyComponent._payload, init = lazyComponent._init;
              try {
                return getComponentNameFromType(init(payload));
              } catch {
                return null;
              }
            }
          }
        return null;
      }
      function getWrappedName$1(outerType, innerType, wrapperName) {
        var functionName = innerType.displayName || innerType.name || "";
        return outerType.displayName || (functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName);
      }
      function getContextName$1(type) {
        return type.displayName || "Context";
      }
      function getComponentNameFromFiber(fiber) {
        var tag = fiber.tag, type = fiber.type;
        switch (tag) {
          case CacheComponent:
            return "Cache";
          case ContextConsumer:
            var context = type;
            return getContextName$1(context) + ".Consumer";
          case ContextProvider:
            var provider = type;
            return getContextName$1(provider._context) + ".Provider";
          case DehydratedFragment:
            return "DehydratedFragment";
          case ForwardRef10:
            return getWrappedName$1(type, type.render, "ForwardRef");
          case Fragment30:
            return "Fragment";
          case HostComponent:
            return type;
          case HostPortal:
            return "Portal";
          case HostRoot:
            return "Root";
          case HostText:
            return "Text";
          case LazyComponent:
            return getComponentNameFromType(type);
          case Mode:
            return type === REACT_STRICT_MODE_TYPE ? "StrictMode" : "Mode";
          case OffscreenComponent:
            return "Offscreen";
          case Profiler:
            return "Profiler";
          case ScopeComponent:
            return "Scope";
          case SuspenseComponent:
            return "Suspense";
          case SuspenseListComponent:
            return "SuspenseList";
          case TracingMarkerComponent:
            return "TracingMarker";
          case ClassComponent:
          case FunctionComponent:
          case IncompleteClassComponent:
          case IndeterminateComponent:
          case MemoComponent:
          case SimpleMemoComponent:
            if (typeof type == "function")
              return type.displayName || type.name || null;
            if (typeof type == "string")
              return type;
            break;
        }
        return null;
      }
      var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame, current = null, isRendering = !1;
      function getCurrentFiberOwnerNameInDevOrNull() {
        {
          if (current === null)
            return null;
          var owner = current._debugOwner;
          if (owner !== null && typeof owner < "u")
            return getComponentNameFromFiber(owner);
        }
        return null;
      }
      function getCurrentFiberStackInDev() {
        return current === null ? "" : getStackByFiberInDevAndProd(current);
      }
      function resetCurrentFiber() {
        ReactDebugCurrentFrame.getCurrentStack = null, current = null, isRendering = !1;
      }
      function setCurrentFiber(fiber) {
        ReactDebugCurrentFrame.getCurrentStack = fiber === null ? null : getCurrentFiberStackInDev, current = fiber, isRendering = !1;
      }
      function getCurrentFiber() {
        return current;
      }
      function setIsRendering(rendering) {
        isRendering = rendering;
      }
      function toString(value) {
        return "" + value;
      }
      function getToStringValue(value) {
        switch (typeof value) {
          case "boolean":
          case "number":
          case "string":
          case "undefined":
            return value;
          case "object":
            return checkFormFieldValueStringCoercion(value), value;
          default:
            return "";
        }
      }
      var hasReadOnlyValue = {
        button: !0,
        checkbox: !0,
        image: !0,
        hidden: !0,
        radio: !0,
        reset: !0,
        submit: !0
      };
      function checkControlledValueProps(tagName, props) {
        hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null || error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`."), props.onChange || props.readOnly || props.disabled || props.checked == null || error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
      }
      function isCheckable(elem) {
        var type = elem.type, nodeName = elem.nodeName;
        return nodeName && nodeName.toLowerCase() === "input" && (type === "checkbox" || type === "radio");
      }
      function getTracker(node) {
        return node._valueTracker;
      }
      function detachTracker(node) {
        node._valueTracker = null;
      }
      function getValueFromNode(node) {
        var value = "";
        return node && (isCheckable(node) ? value = node.checked ? "true" : "false" : value = node.value), value;
      }
      function trackValueOnNode(node) {
        var valueField = isCheckable(node) ? "checked" : "value", descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
        checkFormFieldValueStringCoercion(node[valueField]);
        var currentValue = "" + node[valueField];
        if (!(node.hasOwnProperty(valueField) || typeof descriptor > "u" || typeof descriptor.get != "function" || typeof descriptor.set != "function")) {
          var get2 = descriptor.get, set2 = descriptor.set;
          Object.defineProperty(node, valueField, {
            configurable: !0,
            get: function() {
              return get2.call(this);
            },
            set: function(value) {
              checkFormFieldValueStringCoercion(value), currentValue = "" + value, set2.call(this, value);
            }
          }), Object.defineProperty(node, valueField, {
            enumerable: descriptor.enumerable
          });
          var tracker = {
            getValue: function() {
              return currentValue;
            },
            setValue: function(value) {
              checkFormFieldValueStringCoercion(value), currentValue = "" + value;
            },
            stopTracking: function() {
              detachTracker(node), delete node[valueField];
            }
          };
          return tracker;
        }
      }
      function track(node) {
        getTracker(node) || (node._valueTracker = trackValueOnNode(node));
      }
      function updateValueIfChanged(node) {
        if (!node)
          return !1;
        var tracker = getTracker(node);
        if (!tracker)
          return !0;
        var lastValue = tracker.getValue(), nextValue = getValueFromNode(node);
        return nextValue !== lastValue ? (tracker.setValue(nextValue), !0) : !1;
      }
      function getActiveElement(doc) {
        if (doc = doc || (typeof document < "u" ? document : void 0), typeof doc > "u")
          return null;
        try {
          return doc.activeElement || doc.body;
        } catch {
          return doc.body;
        }
      }
      var didWarnValueDefaultValue = !1, didWarnCheckedDefaultChecked = !1, didWarnControlledToUncontrolled = !1, didWarnUncontrolledToControlled = !1;
      function isControlled(props) {
        var usesChecked = props.type === "checkbox" || props.type === "radio";
        return usesChecked ? props.checked != null : props.value != null;
      }
      function getHostProps(element, props) {
        var node = element, checked = props.checked, hostProps = assign({}, props, {
          defaultChecked: void 0,
          defaultValue: void 0,
          value: void 0,
          checked: checked ?? node._wrapperState.initialChecked
        });
        return hostProps;
      }
      function initWrapperState(element, props) {
        checkControlledValueProps("input", props), props.checked !== void 0 && props.defaultChecked !== void 0 && !didWarnCheckedDefaultChecked && (error("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type), didWarnCheckedDefaultChecked = !0), props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValueDefaultValue && (error("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type), didWarnValueDefaultValue = !0);
        var node = element, defaultValue = props.defaultValue == null ? "" : props.defaultValue;
        node._wrapperState = {
          initialChecked: props.checked != null ? props.checked : props.defaultChecked,
          initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
          controlled: isControlled(props)
        };
      }
      function updateChecked(element, props) {
        var node = element, checked = props.checked;
        checked != null && setValueForProperty(node, "checked", checked, !1);
      }
      function updateWrapper(element, props) {
        var node = element;
        {
          var controlled = isControlled(props);
          !node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled && (error("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components"), didWarnUncontrolledToControlled = !0), node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled && (error("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components"), didWarnControlledToUncontrolled = !0);
        }
        updateChecked(element, props);
        var value = getToStringValue(props.value), type = props.type;
        if (value != null)
          type === "number" ? (value === 0 && node.value === "" || // We explicitly want to coerce to number here if possible.
          // eslint-disable-next-line
          node.value != value) && (node.value = toString(value)) : node.value !== toString(value) && (node.value = toString(value));
        else if (type === "submit" || type === "reset") {
          node.removeAttribute("value");
          return;
        }
        props.hasOwnProperty("value") ? setDefaultValue(node, props.type, value) : props.hasOwnProperty("defaultValue") && setDefaultValue(node, props.type, getToStringValue(props.defaultValue)), props.checked == null && props.defaultChecked != null && (node.defaultChecked = !!props.defaultChecked);
      }
      function postMountWrapper(element, props, isHydrating2) {
        var node = element;
        if (props.hasOwnProperty("value") || props.hasOwnProperty("defaultValue")) {
          var type = props.type, isButton = type === "submit" || type === "reset";
          if (isButton && (props.value === void 0 || props.value === null))
            return;
          var initialValue = toString(node._wrapperState.initialValue);
          isHydrating2 || initialValue !== node.value && (node.value = initialValue), node.defaultValue = initialValue;
        }
        var name = node.name;
        name !== "" && (node.name = ""), node.defaultChecked = !node.defaultChecked, node.defaultChecked = !!node._wrapperState.initialChecked, name !== "" && (node.name = name);
      }
      function restoreControlledState(element, props) {
        var node = element;
        updateWrapper(node, props), updateNamedCousins(node, props);
      }
      function updateNamedCousins(rootNode, props) {
        var name = props.name;
        if (props.type === "radio" && name != null) {
          for (var queryRoot = rootNode; queryRoot.parentNode; )
            queryRoot = queryRoot.parentNode;
          checkAttributeStringCoercion(name, "name");
          for (var group = queryRoot.querySelectorAll("input[name=" + JSON.stringify("" + name) + '][type="radio"]'), i7 = 0; i7 < group.length; i7++) {
            var otherNode = group[i7];
            if (!(otherNode === rootNode || otherNode.form !== rootNode.form)) {
              var otherProps = getFiberCurrentPropsFromNode(otherNode);
              if (!otherProps)
                throw new Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
              updateValueIfChanged(otherNode), updateWrapper(otherNode, otherProps);
            }
          }
        }
      }
      function setDefaultValue(node, type, value) {
        // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
        (type !== "number" || getActiveElement(node.ownerDocument) !== node) && (value == null ? node.defaultValue = toString(node._wrapperState.initialValue) : node.defaultValue !== toString(value) && (node.defaultValue = toString(value)));
      }
      var didWarnSelectedSetOnOption = !1, didWarnInvalidChild = !1, didWarnInvalidInnerHTML = !1;
      function validateProps(element, props) {
        props.value == null && (typeof props.children == "object" && props.children !== null ? React26.Children.forEach(props.children, function(child) {
          child != null && (typeof child == "string" || typeof child == "number" || didWarnInvalidChild || (didWarnInvalidChild = !0, error("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.")));
        }) : props.dangerouslySetInnerHTML != null && (didWarnInvalidInnerHTML || (didWarnInvalidInnerHTML = !0, error("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.")))), props.selected != null && !didWarnSelectedSetOnOption && (error("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>."), didWarnSelectedSetOnOption = !0);
      }
      function postMountWrapper$1(element, props) {
        props.value != null && element.setAttribute("value", toString(getToStringValue(props.value)));
      }
      var isArrayImpl = Array.isArray;
      function isArray(a13) {
        return isArrayImpl(a13);
      }
      var didWarnValueDefaultValue$1;
      didWarnValueDefaultValue$1 = !1;
      function getDeclarationErrorAddendum() {
        var ownerName = getCurrentFiberOwnerNameInDevOrNull();
        return ownerName ? `

Check the render method of \`` + ownerName + "`." : "";
      }
      var valuePropNames = ["value", "defaultValue"];
      function checkSelectPropTypes(props) {
        {
          checkControlledValueProps("select", props);
          for (var i7 = 0; i7 < valuePropNames.length; i7++) {
            var propName = valuePropNames[i7];
            if (props[propName] != null) {
              var propNameIsArray = isArray(props[propName]);
              props.multiple && !propNameIsArray ? error("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", propName, getDeclarationErrorAddendum()) : !props.multiple && propNameIsArray && error("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", propName, getDeclarationErrorAddendum());
            }
          }
        }
      }
      function updateOptions(node, multiple, propValue, setDefaultSelected) {
        var options2 = node.options;
        if (multiple) {
          for (var selectedValues = propValue, selectedValue = {}, i7 = 0; i7 < selectedValues.length; i7++)
            selectedValue["$" + selectedValues[i7]] = !0;
          for (var _i = 0; _i < options2.length; _i++) {
            var selected = selectedValue.hasOwnProperty("$" + options2[_i].value);
            options2[_i].selected !== selected && (options2[_i].selected = selected), selected && setDefaultSelected && (options2[_i].defaultSelected = !0);
          }
        } else {
          for (var _selectedValue = toString(getToStringValue(propValue)), defaultSelected = null, _i2 = 0; _i2 < options2.length; _i2++) {
            if (options2[_i2].value === _selectedValue) {
              options2[_i2].selected = !0, setDefaultSelected && (options2[_i2].defaultSelected = !0);
              return;
            }
            defaultSelected === null && !options2[_i2].disabled && (defaultSelected = options2[_i2]);
          }
          defaultSelected !== null && (defaultSelected.selected = !0);
        }
      }
      function getHostProps$1(element, props) {
        return assign({}, props, {
          value: void 0
        });
      }
      function initWrapperState$1(element, props) {
        var node = element;
        checkSelectPropTypes(props), node._wrapperState = {
          wasMultiple: !!props.multiple
        }, props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValueDefaultValue$1 && (error("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components"), didWarnValueDefaultValue$1 = !0);
      }
      function postMountWrapper$2(element, props) {
        var node = element;
        node.multiple = !!props.multiple;
        var value = props.value;
        value != null ? updateOptions(node, !!props.multiple, value, !1) : props.defaultValue != null && updateOptions(node, !!props.multiple, props.defaultValue, !0);
      }
      function postUpdateWrapper(element, props) {
        var node = element, wasMultiple = node._wrapperState.wasMultiple;
        node._wrapperState.wasMultiple = !!props.multiple;
        var value = props.value;
        value != null ? updateOptions(node, !!props.multiple, value, !1) : wasMultiple !== !!props.multiple && (props.defaultValue != null ? updateOptions(node, !!props.multiple, props.defaultValue, !0) : updateOptions(node, !!props.multiple, props.multiple ? [] : "", !1));
      }
      function restoreControlledState$1(element, props) {
        var node = element, value = props.value;
        value != null && updateOptions(node, !!props.multiple, value, !1);
      }
      var didWarnValDefaultVal = !1;
      function getHostProps$2(element, props) {
        var node = element;
        if (props.dangerouslySetInnerHTML != null)
          throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
        var hostProps = assign({}, props, {
          value: void 0,
          defaultValue: void 0,
          children: toString(node._wrapperState.initialValue)
        });
        return hostProps;
      }
      function initWrapperState$2(element, props) {
        var node = element;
        checkControlledValueProps("textarea", props), props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValDefaultVal && (error("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component"), didWarnValDefaultVal = !0);
        var initialValue = props.value;
        if (initialValue == null) {
          var children = props.children, defaultValue = props.defaultValue;
          if (children != null) {
            error("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
            {
              if (defaultValue != null)
                throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
              if (isArray(children)) {
                if (children.length > 1)
                  throw new Error("<textarea> can only have at most one child.");
                children = children[0];
              }
              defaultValue = children;
            }
          }
          defaultValue == null && (defaultValue = ""), initialValue = defaultValue;
        }
        node._wrapperState = {
          initialValue: getToStringValue(initialValue)
        };
      }
      function updateWrapper$1(element, props) {
        var node = element, value = getToStringValue(props.value), defaultValue = getToStringValue(props.defaultValue);
        if (value != null) {
          var newValue = toString(value);
          newValue !== node.value && (node.value = newValue), props.defaultValue == null && node.defaultValue !== newValue && (node.defaultValue = newValue);
        }
        defaultValue != null && (node.defaultValue = toString(defaultValue));
      }
      function postMountWrapper$3(element, props) {
        var node = element, textContent = node.textContent;
        textContent === node._wrapperState.initialValue && textContent !== "" && textContent !== null && (node.value = textContent);
      }
      function restoreControlledState$2(element, props) {
        updateWrapper$1(element, props);
      }
      var HTML_NAMESPACE = "http://www.w3.org/1999/xhtml", MATH_NAMESPACE = "http://www.w3.org/1998/Math/MathML", SVG_NAMESPACE = "http://www.w3.org/2000/svg";
      function getIntrinsicNamespace(type) {
        switch (type) {
          case "svg":
            return SVG_NAMESPACE;
          case "math":
            return MATH_NAMESPACE;
          default:
            return HTML_NAMESPACE;
        }
      }
      function getChildNamespace(parentNamespace, type) {
        return parentNamespace == null || parentNamespace === HTML_NAMESPACE ? getIntrinsicNamespace(type) : parentNamespace === SVG_NAMESPACE && type === "foreignObject" ? HTML_NAMESPACE : parentNamespace;
      }
      var createMicrosoftUnsafeLocalFunction = function(func) {
        return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(arg0, arg1, arg2, arg3) {
          MSApp.execUnsafeLocalFunction(function() {
            return func(arg0, arg1, arg2, arg3);
          });
        } : func;
      }, reusableSVGContainer, setInnerHTML = createMicrosoftUnsafeLocalFunction(function(node, html) {
        if (node.namespaceURI === SVG_NAMESPACE && !("innerHTML" in node)) {
          reusableSVGContainer = reusableSVGContainer || document.createElement("div"), reusableSVGContainer.innerHTML = "<svg>" + html.valueOf().toString() + "</svg>";
          for (var svgNode = reusableSVGContainer.firstChild; node.firstChild; )
            node.removeChild(node.firstChild);
          for (; svgNode.firstChild; )
            node.appendChild(svgNode.firstChild);
          return;
        }
        node.innerHTML = html;
      }), ELEMENT_NODE = 1, TEXT_NODE = 3, COMMENT_NODE = 8, DOCUMENT_NODE = 9, DOCUMENT_FRAGMENT_NODE = 11, setTextContent = function(node, text) {
        if (text) {
          var firstChild = node.firstChild;
          if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
            firstChild.nodeValue = text;
            return;
          }
        }
        node.textContent = text;
      }, shorthandToLonghand = {
        animation: ["animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationPlayState", "animationTimingFunction"],
        background: ["backgroundAttachment", "backgroundClip", "backgroundColor", "backgroundImage", "backgroundOrigin", "backgroundPositionX", "backgroundPositionY", "backgroundRepeat", "backgroundSize"],
        backgroundPosition: ["backgroundPositionX", "backgroundPositionY"],
        border: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth", "borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderTopColor", "borderTopStyle", "borderTopWidth"],
        borderBlockEnd: ["borderBlockEndColor", "borderBlockEndStyle", "borderBlockEndWidth"],
        borderBlockStart: ["borderBlockStartColor", "borderBlockStartStyle", "borderBlockStartWidth"],
        borderBottom: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth"],
        borderColor: ["borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor"],
        borderImage: ["borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth"],
        borderInlineEnd: ["borderInlineEndColor", "borderInlineEndStyle", "borderInlineEndWidth"],
        borderInlineStart: ["borderInlineStartColor", "borderInlineStartStyle", "borderInlineStartWidth"],
        borderLeft: ["borderLeftColor", "borderLeftStyle", "borderLeftWidth"],
        borderRadius: ["borderBottomLeftRadius", "borderBottomRightRadius", "borderTopLeftRadius", "borderTopRightRadius"],
        borderRight: ["borderRightColor", "borderRightStyle", "borderRightWidth"],
        borderStyle: ["borderBottomStyle", "borderLeftStyle", "borderRightStyle", "borderTopStyle"],
        borderTop: ["borderTopColor", "borderTopStyle", "borderTopWidth"],
        borderWidth: ["borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderTopWidth"],
        columnRule: ["columnRuleColor", "columnRuleStyle", "columnRuleWidth"],
        columns: ["columnCount", "columnWidth"],
        flex: ["flexBasis", "flexGrow", "flexShrink"],
        flexFlow: ["flexDirection", "flexWrap"],
        font: ["fontFamily", "fontFeatureSettings", "fontKerning", "fontLanguageOverride", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition", "fontWeight", "lineHeight"],
        fontVariant: ["fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition"],
        gap: ["columnGap", "rowGap"],
        grid: ["gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
        gridArea: ["gridColumnEnd", "gridColumnStart", "gridRowEnd", "gridRowStart"],
        gridColumn: ["gridColumnEnd", "gridColumnStart"],
        gridColumnGap: ["columnGap"],
        gridGap: ["columnGap", "rowGap"],
        gridRow: ["gridRowEnd", "gridRowStart"],
        gridRowGap: ["rowGap"],
        gridTemplate: ["gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
        listStyle: ["listStyleImage", "listStylePosition", "listStyleType"],
        margin: ["marginBottom", "marginLeft", "marginRight", "marginTop"],
        marker: ["markerEnd", "markerMid", "markerStart"],
        mask: ["maskClip", "maskComposite", "maskImage", "maskMode", "maskOrigin", "maskPositionX", "maskPositionY", "maskRepeat", "maskSize"],
        maskPosition: ["maskPositionX", "maskPositionY"],
        outline: ["outlineColor", "outlineStyle", "outlineWidth"],
        overflow: ["overflowX", "overflowY"],
        padding: ["paddingBottom", "paddingLeft", "paddingRight", "paddingTop"],
        placeContent: ["alignContent", "justifyContent"],
        placeItems: ["alignItems", "justifyItems"],
        placeSelf: ["alignSelf", "justifySelf"],
        textDecoration: ["textDecorationColor", "textDecorationLine", "textDecorationStyle"],
        textEmphasis: ["textEmphasisColor", "textEmphasisStyle"],
        transition: ["transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction"],
        wordWrap: ["overflowWrap"]
      }, isUnitlessNumber = {
        animationIterationCount: !0,
        aspectRatio: !0,
        borderImageOutset: !0,
        borderImageSlice: !0,
        borderImageWidth: !0,
        boxFlex: !0,
        boxFlexGroup: !0,
        boxOrdinalGroup: !0,
        columnCount: !0,
        columns: !0,
        flex: !0,
        flexGrow: !0,
        flexPositive: !0,
        flexShrink: !0,
        flexNegative: !0,
        flexOrder: !0,
        gridArea: !0,
        gridRow: !0,
        gridRowEnd: !0,
        gridRowSpan: !0,
        gridRowStart: !0,
        gridColumn: !0,
        gridColumnEnd: !0,
        gridColumnSpan: !0,
        gridColumnStart: !0,
        fontWeight: !0,
        lineClamp: !0,
        lineHeight: !0,
        opacity: !0,
        order: !0,
        orphans: !0,
        tabSize: !0,
        widows: !0,
        zIndex: !0,
        zoom: !0,
        // SVG-related properties
        fillOpacity: !0,
        floodOpacity: !0,
        stopOpacity: !0,
        strokeDasharray: !0,
        strokeDashoffset: !0,
        strokeMiterlimit: !0,
        strokeOpacity: !0,
        strokeWidth: !0
      };
      function prefixKey(prefix2, key) {
        return prefix2 + key.charAt(0).toUpperCase() + key.substring(1);
      }
      var prefixes = ["Webkit", "ms", "Moz", "O"];
      Object.keys(isUnitlessNumber).forEach(function(prop) {
        prefixes.forEach(function(prefix2) {
          isUnitlessNumber[prefixKey(prefix2, prop)] = isUnitlessNumber[prop];
        });
      });
      function dangerousStyleValue(name, value, isCustomProperty) {
        var isEmpty = value == null || typeof value == "boolean" || value === "";
        return isEmpty ? "" : !isCustomProperty && typeof value == "number" && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) ? value + "px" : (checkCSSPropertyStringCoercion(value, name), ("" + value).trim());
      }
      var uppercasePattern = /([A-Z])/g, msPattern = /^ms-/;
      function hyphenateStyleName(name) {
        return name.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern, "-ms-");
      }
      var warnValidStyle = function() {
      };
      {
        var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/, msPattern$1 = /^-ms-/, hyphenPattern = /-(.)/g, badStyleValueWithSemicolonPattern = /;\s*$/, warnedStyleNames = {}, warnedStyleValues = {}, warnedForNaNValue = !1, warnedForInfinityValue = !1, camelize = function(string) {
          return string.replace(hyphenPattern, function(_3, character) {
            return character.toUpperCase();
          });
        }, warnHyphenatedStyleName = function(name) {
          warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name] || (warnedStyleNames[name] = !0, error(
            "Unsupported style property %s. Did you mean %s?",
            name,
            // As Andi Smith suggests
            // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
            // is converted to lowercase `ms`.
            camelize(name.replace(msPattern$1, "ms-"))
          ));
        }, warnBadVendoredStyleName = function(name) {
          warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name] || (warnedStyleNames[name] = !0, error("Unsupported vendor-prefixed style property %s. Did you mean %s?", name, name.charAt(0).toUpperCase() + name.slice(1)));
        }, warnStyleValueWithSemicolon = function(name, value) {
          warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value] || (warnedStyleValues[value] = !0, error(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, "")));
        }, warnStyleValueIsNaN = function(name, value) {
          warnedForNaNValue || (warnedForNaNValue = !0, error("`NaN` is an invalid value for the `%s` css style property.", name));
        }, warnStyleValueIsInfinity = function(name, value) {
          warnedForInfinityValue || (warnedForInfinityValue = !0, error("`Infinity` is an invalid value for the `%s` css style property.", name));
        };
        warnValidStyle = function(name, value) {
          name.indexOf("-") > -1 ? warnHyphenatedStyleName(name) : badVendoredStyleNamePattern.test(name) ? warnBadVendoredStyleName(name) : badStyleValueWithSemicolonPattern.test(value) && warnStyleValueWithSemicolon(name, value), typeof value == "number" && (isNaN(value) ? warnStyleValueIsNaN(name, value) : isFinite(value) || warnStyleValueIsInfinity(name, value));
        };
      }
      var warnValidStyle$1 = warnValidStyle;
      function createDangerousStringForStyles(styles) {
        {
          var serialized = "", delimiter = "";
          for (var styleName in styles)
            if (styles.hasOwnProperty(styleName)) {
              var styleValue = styles[styleName];
              if (styleValue != null) {
                var isCustomProperty = styleName.indexOf("--") === 0;
                serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ":", serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty), delimiter = ";";
              }
            }
          return serialized || null;
        }
      }
      function setValueForStyles(node, styles) {
        var style3 = node.style;
        for (var styleName in styles)
          if (styles.hasOwnProperty(styleName)) {
            var isCustomProperty = styleName.indexOf("--") === 0;
            isCustomProperty || warnValidStyle$1(styleName, styles[styleName]);
            var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
            styleName === "float" && (styleName = "cssFloat"), isCustomProperty ? style3.setProperty(styleName, styleValue) : style3[styleName] = styleValue;
          }
      }
      function isValueEmpty(value) {
        return value == null || typeof value == "boolean" || value === "";
      }
      function expandShorthandMap(styles) {
        var expanded = {};
        for (var key in styles)
          for (var longhands = shorthandToLonghand[key] || [key], i7 = 0; i7 < longhands.length; i7++)
            expanded[longhands[i7]] = key;
        return expanded;
      }
      function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
        {
          if (!nextStyles)
            return;
          var expandedUpdates = expandShorthandMap(styleUpdates), expandedStyles = expandShorthandMap(nextStyles), warnedAbout = {};
          for (var key in expandedUpdates) {
            var originalKey = expandedUpdates[key], correctOriginalKey = expandedStyles[key];
            if (correctOriginalKey && originalKey !== correctOriginalKey) {
              var warningKey = originalKey + "," + correctOriginalKey;
              if (warnedAbout[warningKey])
                continue;
              warnedAbout[warningKey] = !0, error("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", isValueEmpty(styleUpdates[originalKey]) ? "Removing" : "Updating", originalKey, correctOriginalKey);
            }
          }
        }
      }
      var omittedCloseTags = {
        area: !0,
        base: !0,
        br: !0,
        col: !0,
        embed: !0,
        hr: !0,
        img: !0,
        input: !0,
        keygen: !0,
        link: !0,
        meta: !0,
        param: !0,
        source: !0,
        track: !0,
        wbr: !0
        // NOTE: menuitem's close tag should be omitted, but that causes problems.
      }, voidElementTags = assign({
        menuitem: !0
      }, omittedCloseTags), HTML = "__html";
      function assertValidProps(tag, props) {
        if (props) {
          if (voidElementTags[tag] && (props.children != null || props.dangerouslySetInnerHTML != null))
            throw new Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
          if (props.dangerouslySetInnerHTML != null) {
            if (props.children != null)
              throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            if (typeof props.dangerouslySetInnerHTML != "object" || !(HTML in props.dangerouslySetInnerHTML))
              throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
          }
          if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null && error("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional."), props.style != null && typeof props.style != "object")
            throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
        }
      }
      function isCustomComponent(tagName, props) {
        if (tagName.indexOf("-") === -1)
          return typeof props.is == "string";
        switch (tagName) {
          case "annotation-xml":
          case "color-profile":
          case "font-face":
          case "font-face-src":
          case "font-face-uri":
          case "font-face-format":
          case "font-face-name":
          case "missing-glyph":
            return !1;
          default:
            return !0;
        }
      }
      var possibleStandardNames = {
        // HTML
        accept: "accept",
        acceptcharset: "acceptCharset",
        "accept-charset": "acceptCharset",
        accesskey: "accessKey",
        action: "action",
        allowfullscreen: "allowFullScreen",
        alt: "alt",
        as: "as",
        async: "async",
        autocapitalize: "autoCapitalize",
        autocomplete: "autoComplete",
        autocorrect: "autoCorrect",
        autofocus: "autoFocus",
        autoplay: "autoPlay",
        autosave: "autoSave",
        capture: "capture",
        cellpadding: "cellPadding",
        cellspacing: "cellSpacing",
        challenge: "challenge",
        charset: "charSet",
        checked: "checked",
        children: "children",
        cite: "cite",
        class: "className",
        classid: "classID",
        classname: "className",
        cols: "cols",
        colspan: "colSpan",
        content: "content",
        contenteditable: "contentEditable",
        contextmenu: "contextMenu",
        controls: "controls",
        controlslist: "controlsList",
        coords: "coords",
        crossorigin: "crossOrigin",
        dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
        data: "data",
        datetime: "dateTime",
        default: "default",
        defaultchecked: "defaultChecked",
        defaultvalue: "defaultValue",
        defer: "defer",
        dir: "dir",
        disabled: "disabled",
        disablepictureinpicture: "disablePictureInPicture",
        disableremoteplayback: "disableRemotePlayback",
        download: "download",
        draggable: "draggable",
        enctype: "encType",
        enterkeyhint: "enterKeyHint",
        for: "htmlFor",
        form: "form",
        formmethod: "formMethod",
        formaction: "formAction",
        formenctype: "formEncType",
        formnovalidate: "formNoValidate",
        formtarget: "formTarget",
        frameborder: "frameBorder",
        headers: "headers",
        height: "height",
        hidden: "hidden",
        high: "high",
        href: "href",
        hreflang: "hrefLang",
        htmlfor: "htmlFor",
        httpequiv: "httpEquiv",
        "http-equiv": "httpEquiv",
        icon: "icon",
        id: "id",
        imagesizes: "imageSizes",
        imagesrcset: "imageSrcSet",
        innerhtml: "innerHTML",
        inputmode: "inputMode",
        integrity: "integrity",
        is: "is",
        itemid: "itemID",
        itemprop: "itemProp",
        itemref: "itemRef",
        itemscope: "itemScope",
        itemtype: "itemType",
        keyparams: "keyParams",
        keytype: "keyType",
        kind: "kind",
        label: "label",
        lang: "lang",
        list: "list",
        loop: "loop",
        low: "low",
        manifest: "manifest",
        marginwidth: "marginWidth",
        marginheight: "marginHeight",
        max: "max",
        maxlength: "maxLength",
        media: "media",
        mediagroup: "mediaGroup",
        method: "method",
        min: "min",
        minlength: "minLength",
        multiple: "multiple",
        muted: "muted",
        name: "name",
        nomodule: "noModule",
        nonce: "nonce",
        novalidate: "noValidate",
        open: "open",
        optimum: "optimum",
        pattern: "pattern",
        placeholder: "placeholder",
        playsinline: "playsInline",
        poster: "poster",
        preload: "preload",
        profile: "profile",
        radiogroup: "radioGroup",
        readonly: "readOnly",
        referrerpolicy: "referrerPolicy",
        rel: "rel",
        required: "required",
        reversed: "reversed",
        role: "role",
        rows: "rows",
        rowspan: "rowSpan",
        sandbox: "sandbox",
        scope: "scope",
        scoped: "scoped",
        scrolling: "scrolling",
        seamless: "seamless",
        selected: "selected",
        shape: "shape",
        size: "size",
        sizes: "sizes",
        span: "span",
        spellcheck: "spellCheck",
        src: "src",
        srcdoc: "srcDoc",
        srclang: "srcLang",
        srcset: "srcSet",
        start: "start",
        step: "step",
        style: "style",
        summary: "summary",
        tabindex: "tabIndex",
        target: "target",
        title: "title",
        type: "type",
        usemap: "useMap",
        value: "value",
        width: "width",
        wmode: "wmode",
        wrap: "wrap",
        // SVG
        about: "about",
        accentheight: "accentHeight",
        "accent-height": "accentHeight",
        accumulate: "accumulate",
        additive: "additive",
        alignmentbaseline: "alignmentBaseline",
        "alignment-baseline": "alignmentBaseline",
        allowreorder: "allowReorder",
        alphabetic: "alphabetic",
        amplitude: "amplitude",
        arabicform: "arabicForm",
        "arabic-form": "arabicForm",
        ascent: "ascent",
        attributename: "attributeName",
        attributetype: "attributeType",
        autoreverse: "autoReverse",
        azimuth: "azimuth",
        basefrequency: "baseFrequency",
        baselineshift: "baselineShift",
        "baseline-shift": "baselineShift",
        baseprofile: "baseProfile",
        bbox: "bbox",
        begin: "begin",
        bias: "bias",
        by: "by",
        calcmode: "calcMode",
        capheight: "capHeight",
        "cap-height": "capHeight",
        clip: "clip",
        clippath: "clipPath",
        "clip-path": "clipPath",
        clippathunits: "clipPathUnits",
        cliprule: "clipRule",
        "clip-rule": "clipRule",
        color: "color",
        colorinterpolation: "colorInterpolation",
        "color-interpolation": "colorInterpolation",
        colorinterpolationfilters: "colorInterpolationFilters",
        "color-interpolation-filters": "colorInterpolationFilters",
        colorprofile: "colorProfile",
        "color-profile": "colorProfile",
        colorrendering: "colorRendering",
        "color-rendering": "colorRendering",
        contentscripttype: "contentScriptType",
        contentstyletype: "contentStyleType",
        cursor: "cursor",
        cx: "cx",
        cy: "cy",
        d: "d",
        datatype: "datatype",
        decelerate: "decelerate",
        descent: "descent",
        diffuseconstant: "diffuseConstant",
        direction: "direction",
        display: "display",
        divisor: "divisor",
        dominantbaseline: "dominantBaseline",
        "dominant-baseline": "dominantBaseline",
        dur: "dur",
        dx: "dx",
        dy: "dy",
        edgemode: "edgeMode",
        elevation: "elevation",
        enablebackground: "enableBackground",
        "enable-background": "enableBackground",
        end: "end",
        exponent: "exponent",
        externalresourcesrequired: "externalResourcesRequired",
        fill: "fill",
        fillopacity: "fillOpacity",
        "fill-opacity": "fillOpacity",
        fillrule: "fillRule",
        "fill-rule": "fillRule",
        filter: "filter",
        filterres: "filterRes",
        filterunits: "filterUnits",
        floodopacity: "floodOpacity",
        "flood-opacity": "floodOpacity",
        floodcolor: "floodColor",
        "flood-color": "floodColor",
        focusable: "focusable",
        fontfamily: "fontFamily",
        "font-family": "fontFamily",
        fontsize: "fontSize",
        "font-size": "fontSize",
        fontsizeadjust: "fontSizeAdjust",
        "font-size-adjust": "fontSizeAdjust",
        fontstretch: "fontStretch",
        "font-stretch": "fontStretch",
        fontstyle: "fontStyle",
        "font-style": "fontStyle",
        fontvariant: "fontVariant",
        "font-variant": "fontVariant",
        fontweight: "fontWeight",
        "font-weight": "fontWeight",
        format: "format",
        from: "from",
        fx: "fx",
        fy: "fy",
        g1: "g1",
        g2: "g2",
        glyphname: "glyphName",
        "glyph-name": "glyphName",
        glyphorientationhorizontal: "glyphOrientationHorizontal",
        "glyph-orientation-horizontal": "glyphOrientationHorizontal",
        glyphorientationvertical: "glyphOrientationVertical",
        "glyph-orientation-vertical": "glyphOrientationVertical",
        glyphref: "glyphRef",
        gradienttransform: "gradientTransform",
        gradientunits: "gradientUnits",
        hanging: "hanging",
        horizadvx: "horizAdvX",
        "horiz-adv-x": "horizAdvX",
        horizoriginx: "horizOriginX",
        "horiz-origin-x": "horizOriginX",
        ideographic: "ideographic",
        imagerendering: "imageRendering",
        "image-rendering": "imageRendering",
        in2: "in2",
        in: "in",
        inlist: "inlist",
        intercept: "intercept",
        k1: "k1",
        k2: "k2",
        k3: "k3",
        k4: "k4",
        k: "k",
        kernelmatrix: "kernelMatrix",
        kernelunitlength: "kernelUnitLength",
        kerning: "kerning",
        keypoints: "keyPoints",
        keysplines: "keySplines",
        keytimes: "keyTimes",
        lengthadjust: "lengthAdjust",
        letterspacing: "letterSpacing",
        "letter-spacing": "letterSpacing",
        lightingcolor: "lightingColor",
        "lighting-color": "lightingColor",
        limitingconeangle: "limitingConeAngle",
        local: "local",
        markerend: "markerEnd",
        "marker-end": "markerEnd",
        markerheight: "markerHeight",
        markermid: "markerMid",
        "marker-mid": "markerMid",
        markerstart: "markerStart",
        "marker-start": "markerStart",
        markerunits: "markerUnits",
        markerwidth: "markerWidth",
        mask: "mask",
        maskcontentunits: "maskContentUnits",
        maskunits: "maskUnits",
        mathematical: "mathematical",
        mode: "mode",
        numoctaves: "numOctaves",
        offset: "offset",
        opacity: "opacity",
        operator: "operator",
        order: "order",
        orient: "orient",
        orientation: "orientation",
        origin: "origin",
        overflow: "overflow",
        overlineposition: "overlinePosition",
        "overline-position": "overlinePosition",
        overlinethickness: "overlineThickness",
        "overline-thickness": "overlineThickness",
        paintorder: "paintOrder",
        "paint-order": "paintOrder",
        panose1: "panose1",
        "panose-1": "panose1",
        pathlength: "pathLength",
        patterncontentunits: "patternContentUnits",
        patterntransform: "patternTransform",
        patternunits: "patternUnits",
        pointerevents: "pointerEvents",
        "pointer-events": "pointerEvents",
        points: "points",
        pointsatx: "pointsAtX",
        pointsaty: "pointsAtY",
        pointsatz: "pointsAtZ",
        prefix: "prefix",
        preservealpha: "preserveAlpha",
        preserveaspectratio: "preserveAspectRatio",
        primitiveunits: "primitiveUnits",
        property: "property",
        r: "r",
        radius: "radius",
        refx: "refX",
        refy: "refY",
        renderingintent: "renderingIntent",
        "rendering-intent": "renderingIntent",
        repeatcount: "repeatCount",
        repeatdur: "repeatDur",
        requiredextensions: "requiredExtensions",
        requiredfeatures: "requiredFeatures",
        resource: "resource",
        restart: "restart",
        result: "result",
        results: "results",
        rotate: "rotate",
        rx: "rx",
        ry: "ry",
        scale: "scale",
        security: "security",
        seed: "seed",
        shaperendering: "shapeRendering",
        "shape-rendering": "shapeRendering",
        slope: "slope",
        spacing: "spacing",
        specularconstant: "specularConstant",
        specularexponent: "specularExponent",
        speed: "speed",
        spreadmethod: "spreadMethod",
        startoffset: "startOffset",
        stddeviation: "stdDeviation",
        stemh: "stemh",
        stemv: "stemv",
        stitchtiles: "stitchTiles",
        stopcolor: "stopColor",
        "stop-color": "stopColor",
        stopopacity: "stopOpacity",
        "stop-opacity": "stopOpacity",
        strikethroughposition: "strikethroughPosition",
        "strikethrough-position": "strikethroughPosition",
        strikethroughthickness: "strikethroughThickness",
        "strikethrough-thickness": "strikethroughThickness",
        string: "string",
        stroke: "stroke",
        strokedasharray: "strokeDasharray",
        "stroke-dasharray": "strokeDasharray",
        strokedashoffset: "strokeDashoffset",
        "stroke-dashoffset": "strokeDashoffset",
        strokelinecap: "strokeLinecap",
        "stroke-linecap": "strokeLinecap",
        strokelinejoin: "strokeLinejoin",
        "stroke-linejoin": "strokeLinejoin",
        strokemiterlimit: "strokeMiterlimit",
        "stroke-miterlimit": "strokeMiterlimit",
        strokewidth: "strokeWidth",
        "stroke-width": "strokeWidth",
        strokeopacity: "strokeOpacity",
        "stroke-opacity": "strokeOpacity",
        suppresscontenteditablewarning: "suppressContentEditableWarning",
        suppresshydrationwarning: "suppressHydrationWarning",
        surfacescale: "surfaceScale",
        systemlanguage: "systemLanguage",
        tablevalues: "tableValues",
        targetx: "targetX",
        targety: "targetY",
        textanchor: "textAnchor",
        "text-anchor": "textAnchor",
        textdecoration: "textDecoration",
        "text-decoration": "textDecoration",
        textlength: "textLength",
        textrendering: "textRendering",
        "text-rendering": "textRendering",
        to: "to",
        transform: "transform",
        typeof: "typeof",
        u1: "u1",
        u2: "u2",
        underlineposition: "underlinePosition",
        "underline-position": "underlinePosition",
        underlinethickness: "underlineThickness",
        "underline-thickness": "underlineThickness",
        unicode: "unicode",
        unicodebidi: "unicodeBidi",
        "unicode-bidi": "unicodeBidi",
        unicoderange: "unicodeRange",
        "unicode-range": "unicodeRange",
        unitsperem: "unitsPerEm",
        "units-per-em": "unitsPerEm",
        unselectable: "unselectable",
        valphabetic: "vAlphabetic",
        "v-alphabetic": "vAlphabetic",
        values: "values",
        vectoreffect: "vectorEffect",
        "vector-effect": "vectorEffect",
        version: "version",
        vertadvy: "vertAdvY",
        "vert-adv-y": "vertAdvY",
        vertoriginx: "vertOriginX",
        "vert-origin-x": "vertOriginX",
        vertoriginy: "vertOriginY",
        "vert-origin-y": "vertOriginY",
        vhanging: "vHanging",
        "v-hanging": "vHanging",
        videographic: "vIdeographic",
        "v-ideographic": "vIdeographic",
        viewbox: "viewBox",
        viewtarget: "viewTarget",
        visibility: "visibility",
        vmathematical: "vMathematical",
        "v-mathematical": "vMathematical",
        vocab: "vocab",
        widths: "widths",
        wordspacing: "wordSpacing",
        "word-spacing": "wordSpacing",
        writingmode: "writingMode",
        "writing-mode": "writingMode",
        x1: "x1",
        x2: "x2",
        x: "x",
        xchannelselector: "xChannelSelector",
        xheight: "xHeight",
        "x-height": "xHeight",
        xlinkactuate: "xlinkActuate",
        "xlink:actuate": "xlinkActuate",
        xlinkarcrole: "xlinkArcrole",
        "xlink:arcrole": "xlinkArcrole",
        xlinkhref: "xlinkHref",
        "xlink:href": "xlinkHref",
        xlinkrole: "xlinkRole",
        "xlink:role": "xlinkRole",
        xlinkshow: "xlinkShow",
        "xlink:show": "xlinkShow",
        xlinktitle: "xlinkTitle",
        "xlink:title": "xlinkTitle",
        xlinktype: "xlinkType",
        "xlink:type": "xlinkType",
        xmlbase: "xmlBase",
        "xml:base": "xmlBase",
        xmllang: "xmlLang",
        "xml:lang": "xmlLang",
        xmlns: "xmlns",
        "xml:space": "xmlSpace",
        xmlnsxlink: "xmlnsXlink",
        "xmlns:xlink": "xmlnsXlink",
        xmlspace: "xmlSpace",
        y1: "y1",
        y2: "y2",
        y: "y",
        ychannelselector: "yChannelSelector",
        z: "z",
        zoomandpan: "zoomAndPan"
      }, ariaProperties = {
        "aria-current": 0,
        // state
        "aria-description": 0,
        "aria-details": 0,
        "aria-disabled": 0,
        // state
        "aria-hidden": 0,
        // state
        "aria-invalid": 0,
        // state
        "aria-keyshortcuts": 0,
        "aria-label": 0,
        "aria-roledescription": 0,
        // Widget Attributes
        "aria-autocomplete": 0,
        "aria-checked": 0,
        "aria-expanded": 0,
        "aria-haspopup": 0,
        "aria-level": 0,
        "aria-modal": 0,
        "aria-multiline": 0,
        "aria-multiselectable": 0,
        "aria-orientation": 0,
        "aria-placeholder": 0,
        "aria-pressed": 0,
        "aria-readonly": 0,
        "aria-required": 0,
        "aria-selected": 0,
        "aria-sort": 0,
        "aria-valuemax": 0,
        "aria-valuemin": 0,
        "aria-valuenow": 0,
        "aria-valuetext": 0,
        // Live Region Attributes
        "aria-atomic": 0,
        "aria-busy": 0,
        "aria-live": 0,
        "aria-relevant": 0,
        // Drag-and-Drop Attributes
        "aria-dropeffect": 0,
        "aria-grabbed": 0,
        // Relationship Attributes
        "aria-activedescendant": 0,
        "aria-colcount": 0,
        "aria-colindex": 0,
        "aria-colspan": 0,
        "aria-controls": 0,
        "aria-describedby": 0,
        "aria-errormessage": 0,
        "aria-flowto": 0,
        "aria-labelledby": 0,
        "aria-owns": 0,
        "aria-posinset": 0,
        "aria-rowcount": 0,
        "aria-rowindex": 0,
        "aria-rowspan": 0,
        "aria-setsize": 0
      }, warnedProperties = {}, rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$"), rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
      function validateProperty(tagName, name) {
        {
          if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name])
            return !0;
          if (rARIACamel.test(name)) {
            var ariaName = "aria-" + name.slice(4).toLowerCase(), correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;
            if (correctName == null)
              return error("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name), warnedProperties[name] = !0, !0;
            if (name !== correctName)
              return error("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, correctName), warnedProperties[name] = !0, !0;
          }
          if (rARIA.test(name)) {
            var lowerCasedName = name.toLowerCase(), standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;
            if (standardName == null)
              return warnedProperties[name] = !0, !1;
            if (name !== standardName)
              return error("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, standardName), warnedProperties[name] = !0, !0;
          }
        }
        return !0;
      }
      function warnInvalidARIAProps(type, props) {
        {
          var invalidProps = [];
          for (var key in props) {
            var isValid = validateProperty(type, key);
            isValid || invalidProps.push(key);
          }
          var unknownPropString = invalidProps.map(function(prop) {
            return "`" + prop + "`";
          }).join(", ");
          invalidProps.length === 1 ? error("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type) : invalidProps.length > 1 && error("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
        }
      }
      function validateProperties(type, props) {
        isCustomComponent(type, props) || warnInvalidARIAProps(type, props);
      }
      var didWarnValueNull = !1;
      function validateProperties$1(type, props) {
        {
          if (type !== "input" && type !== "textarea" && type !== "select")
            return;
          props != null && props.value === null && !didWarnValueNull && (didWarnValueNull = !0, type === "select" && props.multiple ? error("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type) : error("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type));
        }
      }
      var validateProperty$1 = function() {
      };
      {
        var warnedProperties$1 = {}, EVENT_NAME_REGEX = /^on./, INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/, rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$"), rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
        validateProperty$1 = function(tagName, name, value, eventRegistry) {
          if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name])
            return !0;
          var lowerCasedName = name.toLowerCase();
          if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout")
            return error("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React."), warnedProperties$1[name] = !0, !0;
          if (eventRegistry != null) {
            var registrationNameDependencies2 = eventRegistry.registrationNameDependencies, possibleRegistrationNames2 = eventRegistry.possibleRegistrationNames;
            if (registrationNameDependencies2.hasOwnProperty(name))
              return !0;
            var registrationName = possibleRegistrationNames2.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames2[lowerCasedName] : null;
            if (registrationName != null)
              return error("Invalid event handler property `%s`. Did you mean `%s`?", name, registrationName), warnedProperties$1[name] = !0, !0;
            if (EVENT_NAME_REGEX.test(name))
              return error("Unknown event handler property `%s`. It will be ignored.", name), warnedProperties$1[name] = !0, !0;
          } else if (EVENT_NAME_REGEX.test(name))
            return INVALID_EVENT_NAME_REGEX.test(name) && error("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name), warnedProperties$1[name] = !0, !0;
          if (rARIA$1.test(name) || rARIACamel$1.test(name))
            return !0;
          if (lowerCasedName === "innerhtml")
            return error("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`."), warnedProperties$1[name] = !0, !0;
          if (lowerCasedName === "aria")
            return error("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead."), warnedProperties$1[name] = !0, !0;
          if (lowerCasedName === "is" && value !== null && value !== void 0 && typeof value != "string")
            return error("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value), warnedProperties$1[name] = !0, !0;
          if (typeof value == "number" && isNaN(value))
            return error("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name), warnedProperties$1[name] = !0, !0;
          var propertyInfo = getPropertyInfo(name), isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;
          if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
            var standardName = possibleStandardNames[lowerCasedName];
            if (standardName !== name)
              return error("Invalid DOM property `%s`. Did you mean `%s`?", name, standardName), warnedProperties$1[name] = !0, !0;
          } else if (!isReserved && name !== lowerCasedName)
            return error("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName), warnedProperties$1[name] = !0, !0;
          return typeof value == "boolean" && shouldRemoveAttributeWithWarning(name, value, propertyInfo, !1) ? (value ? error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name) : error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name), warnedProperties$1[name] = !0, !0) : isReserved ? !0 : shouldRemoveAttributeWithWarning(name, value, propertyInfo, !1) ? (warnedProperties$1[name] = !0, !1) : ((value === "false" || value === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN && (error("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value), warnedProperties$1[name] = !0), !0);
        };
      }
      var warnUnknownProperties = function(type, props, eventRegistry) {
        {
          var unknownProps = [];
          for (var key in props) {
            var isValid = validateProperty$1(type, key, props[key], eventRegistry);
            isValid || unknownProps.push(key);
          }
          var unknownPropString = unknownProps.map(function(prop) {
            return "`" + prop + "`";
          }).join(", ");
          unknownProps.length === 1 ? error("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type) : unknownProps.length > 1 && error("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
        }
      };
      function validateProperties$2(type, props, eventRegistry) {
        isCustomComponent(type, props) || warnUnknownProperties(type, props, eventRegistry);
      }
      var IS_EVENT_HANDLE_NON_MANAGED_NODE = 1, IS_NON_DELEGATED = 1 << 1, IS_CAPTURE_PHASE = 1 << 2, SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE, currentReplayingEvent = null;
      function setReplayingEvent(event) {
        currentReplayingEvent !== null && error("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue."), currentReplayingEvent = event;
      }
      function resetReplayingEvent() {
        currentReplayingEvent === null && error("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue."), currentReplayingEvent = null;
      }
      function isReplayingEvent(event) {
        return event === currentReplayingEvent;
      }
      function getEventTarget2(nativeEvent) {
        var target = nativeEvent.target || nativeEvent.srcElement || window;
        return target.correspondingUseElement && (target = target.correspondingUseElement), target.nodeType === TEXT_NODE ? target.parentNode : target;
      }
      var restoreImpl = null, restoreTarget = null, restoreQueue = null;
      function restoreStateOfTarget(target) {
        var internalInstance = getInstanceFromNode(target);
        if (internalInstance) {
          if (typeof restoreImpl != "function")
            throw new Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
          var stateNode = internalInstance.stateNode;
          if (stateNode) {
            var _props = getFiberCurrentPropsFromNode(stateNode);
            restoreImpl(internalInstance.stateNode, internalInstance.type, _props);
          }
        }
      }
      function setRestoreImplementation(impl) {
        restoreImpl = impl;
      }
      function enqueueStateRestore(target) {
        restoreTarget ? restoreQueue ? restoreQueue.push(target) : restoreQueue = [target] : restoreTarget = target;
      }
      function needsStateRestore() {
        return restoreTarget !== null || restoreQueue !== null;
      }
      function restoreStateIfNeeded() {
        if (restoreTarget) {
          var target = restoreTarget, queuedTargets = restoreQueue;
          if (restoreTarget = null, restoreQueue = null, restoreStateOfTarget(target), queuedTargets)
            for (var i7 = 0; i7 < queuedTargets.length; i7++)
              restoreStateOfTarget(queuedTargets[i7]);
        }
      }
      var batchedUpdatesImpl = function(fn, bookkeeping) {
        return fn(bookkeeping);
      }, flushSyncImpl = function() {
      }, isInsideEventHandler = !1;
      function finishEventHandler() {
        var controlledComponentsHavePendingUpdates = needsStateRestore();
        controlledComponentsHavePendingUpdates && (flushSyncImpl(), restoreStateIfNeeded());
      }
      function batchedUpdates(fn, a13, b6) {
        if (isInsideEventHandler)
          return fn(a13, b6);
        isInsideEventHandler = !0;
        try {
          return batchedUpdatesImpl(fn, a13, b6);
        } finally {
          isInsideEventHandler = !1, finishEventHandler();
        }
      }
      function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushSyncImpl) {
        batchedUpdatesImpl = _batchedUpdatesImpl, flushSyncImpl = _flushSyncImpl;
      }
      function isInteractive(tag) {
        return tag === "button" || tag === "input" || tag === "select" || tag === "textarea";
      }
      function shouldPreventMouseEvent(name, type, props) {
        switch (name) {
          case "onClick":
          case "onClickCapture":
          case "onDoubleClick":
          case "onDoubleClickCapture":
          case "onMouseDown":
          case "onMouseDownCapture":
          case "onMouseMove":
          case "onMouseMoveCapture":
          case "onMouseUp":
          case "onMouseUpCapture":
          case "onMouseEnter":
            return !!(props.disabled && isInteractive(type));
          default:
            return !1;
        }
      }
      function getListener(inst, registrationName) {
        var stateNode = inst.stateNode;
        if (stateNode === null)
          return null;
        var props = getFiberCurrentPropsFromNode(stateNode);
        if (props === null)
          return null;
        var listener = props[registrationName];
        if (shouldPreventMouseEvent(registrationName, inst.type, props))
          return null;
        if (listener && typeof listener != "function")
          throw new Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
        return listener;
      }
      var passiveBrowserEventsSupported = !1;
      if (canUseDOM)
        try {
          var options = {};
          Object.defineProperty(options, "passive", {
            get: function() {
              passiveBrowserEventsSupported = !0;
            }
          }), window.addEventListener("test", options, options), window.removeEventListener("test", options, options);
        } catch {
          passiveBrowserEventsSupported = !1;
        }
      function invokeGuardedCallbackProd(name, func, context, a13, b6, c13, d12, e5, f10) {
        var funcArgs = Array.prototype.slice.call(arguments, 3);
        try {
          func.apply(context, funcArgs);
        } catch (error2) {
          this.onError(error2);
        }
      }
      var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;
      if (typeof window < "u" && typeof window.dispatchEvent == "function" && typeof document < "u" && typeof document.createEvent == "function") {
        var fakeNode = document.createElement("react");
        invokeGuardedCallbackImpl = function(name, func, context, a13, b6, c13, d12, e5, f10) {
          if (typeof document > "u" || document === null)
            throw new Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
          var evt = document.createEvent("Event"), didCall = !1, didError = !0, windowEvent = window.event, windowEventDescriptor = Object.getOwnPropertyDescriptor(window, "event");
          function restoreAfterDispatch() {
            fakeNode.removeEventListener(evtType, callCallback2, !1), typeof window.event < "u" && window.hasOwnProperty("event") && (window.event = windowEvent);
          }
          var funcArgs = Array.prototype.slice.call(arguments, 3);
          function callCallback2() {
            didCall = !0, restoreAfterDispatch(), func.apply(context, funcArgs), didError = !1;
          }
          var error2, didSetError = !1, isCrossOriginError = !1;
          function handleWindowError(event) {
            if (error2 = event.error, didSetError = !0, error2 === null && event.colno === 0 && event.lineno === 0 && (isCrossOriginError = !0), event.defaultPrevented && error2 != null && typeof error2 == "object")
              try {
                error2._suppressLogging = !0;
              } catch {
              }
          }
          var evtType = "react-" + (name || "invokeguardedcallback");
          if (window.addEventListener("error", handleWindowError), fakeNode.addEventListener(evtType, callCallback2, !1), evt.initEvent(evtType, !1, !1), fakeNode.dispatchEvent(evt), windowEventDescriptor && Object.defineProperty(window, "event", windowEventDescriptor), didCall && didError && (didSetError ? isCrossOriginError && (error2 = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.")) : error2 = new Error(`An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the "Pause on exceptions" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.`), this.onError(error2)), window.removeEventListener("error", handleWindowError), !didCall)
            return restoreAfterDispatch(), invokeGuardedCallbackProd.apply(this, arguments);
        };
      }
      var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl, hasError = !1, caughtError = null, hasRethrowError = !1, rethrowError = null, reporter = {
        onError: function(error2) {
          hasError = !0, caughtError = error2;
        }
      };
      function invokeGuardedCallback(name, func, context, a13, b6, c13, d12, e5, f10) {
        hasError = !1, caughtError = null, invokeGuardedCallbackImpl$1.apply(reporter, arguments);
      }
      function invokeGuardedCallbackAndCatchFirstError(name, func, context, a13, b6, c13, d12, e5, f10) {
        if (invokeGuardedCallback.apply(this, arguments), hasError) {
          var error2 = clearCaughtError();
          hasRethrowError || (hasRethrowError = !0, rethrowError = error2);
        }
      }
      function rethrowCaughtError() {
        if (hasRethrowError) {
          var error2 = rethrowError;
          throw hasRethrowError = !1, rethrowError = null, error2;
        }
      }
      function hasCaughtError() {
        return hasError;
      }
      function clearCaughtError() {
        if (hasError) {
          var error2 = caughtError;
          return hasError = !1, caughtError = null, error2;
        } else
          throw new Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
      }
      function get(key) {
        return key._reactInternals;
      }
      function has(key) {
        return key._reactInternals !== void 0;
      }
      function set(key, value) {
        key._reactInternals = value;
      }
      var NoFlags = (
        /*                      */
        0
      ), PerformedWork = (
        /*                */
        1
      ), Placement = (
        /*                    */
        2
      ), Update = (
        /*                       */
        4
      ), ChildDeletion = (
        /*                */
        16
      ), ContentReset = (
        /*                 */
        32
      ), Callback = (
        /*                     */
        64
      ), DidCapture = (
        /*                   */
        128
      ), ForceClientRender = (
        /*            */
        256
      ), Ref = (
        /*                          */
        512
      ), Snapshot = (
        /*                     */
        1024
      ), Passive = (
        /*                      */
        2048
      ), Hydrating = (
        /*                    */
        4096
      ), Visibility = (
        /*                   */
        8192
      ), StoreConsistency = (
        /*             */
        16384
      ), LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot | StoreConsistency, HostEffectMask = (
        /*               */
        32767
      ), Incomplete = (
        /*                   */
        32768
      ), ShouldCapture = (
        /*                */
        65536
      ), ForceUpdateForLegacySuspense = (
        /* */
        131072
      ), Forked = (
        /*                       */
        1048576
      ), RefStatic = (
        /*                    */
        2097152
      ), LayoutStatic = (
        /*                 */
        4194304
      ), PassiveStatic = (
        /*                */
        8388608
      ), MountLayoutDev = (
        /*               */
        16777216
      ), MountPassiveDev = (
        /*              */
        33554432
      ), BeforeMutationMask = (
        // TODO: Remove Update flag from before mutation phase by re-landing Visibility
        // flag logic (see #20043)
        Update | Snapshot | 0
      ), MutationMask = Placement | Update | ChildDeletion | ContentReset | Ref | Hydrating | Visibility, LayoutMask = Update | Callback | Ref | Visibility, PassiveMask = Passive | ChildDeletion, StaticMask = LayoutStatic | PassiveStatic | RefStatic, ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
      function getNearestMountedFiber(fiber) {
        var node = fiber, nearestMounted = fiber;
        if (fiber.alternate)
          for (; node.return; )
            node = node.return;
        else {
          var nextNode = node;
          do
            node = nextNode, (node.flags & (Placement | Hydrating)) !== NoFlags && (nearestMounted = node.return), nextNode = node.return;
          while (nextNode);
        }
        return node.tag === HostRoot ? nearestMounted : null;
      }
      function getSuspenseInstanceFromFiber(fiber) {
        if (fiber.tag === SuspenseComponent) {
          var suspenseState = fiber.memoizedState;
          if (suspenseState === null) {
            var current2 = fiber.alternate;
            current2 !== null && (suspenseState = current2.memoizedState);
          }
          if (suspenseState !== null)
            return suspenseState.dehydrated;
        }
        return null;
      }
      function getContainerFromFiber(fiber) {
        return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
      }
      function isFiberMounted(fiber) {
        return getNearestMountedFiber(fiber) === fiber;
      }
      function isMounted(component) {
        {
          var owner = ReactCurrentOwner.current;
          if (owner !== null && owner.tag === ClassComponent) {
            var ownerFiber = owner, instance = ownerFiber.stateNode;
            instance._warnedAboutRefsInRender || error("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromFiber(ownerFiber) || "A component"), instance._warnedAboutRefsInRender = !0;
          }
        }
        var fiber = get(component);
        return fiber ? getNearestMountedFiber(fiber) === fiber : !1;
      }
      function assertIsMounted(fiber) {
        if (getNearestMountedFiber(fiber) !== fiber)
          throw new Error("Unable to find node on an unmounted component.");
      }
      function findCurrentFiberUsingSlowPath(fiber) {
        var alternate = fiber.alternate;
        if (!alternate) {
          var nearestMounted = getNearestMountedFiber(fiber);
          if (nearestMounted === null)
            throw new Error("Unable to find node on an unmounted component.");
          return nearestMounted !== fiber ? null : fiber;
        }
        for (var a13 = fiber, b6 = alternate; ; ) {
          var parentA = a13.return;
          if (parentA === null)
            break;
          var parentB = parentA.alternate;
          if (parentB === null) {
            var nextParent = parentA.return;
            if (nextParent !== null) {
              a13 = b6 = nextParent;
              continue;
            }
            break;
          }
          if (parentA.child === parentB.child) {
            for (var child = parentA.child; child; ) {
              if (child === a13)
                return assertIsMounted(parentA), fiber;
              if (child === b6)
                return assertIsMounted(parentA), alternate;
              child = child.sibling;
            }
            throw new Error("Unable to find node on an unmounted component.");
          }
          if (a13.return !== b6.return)
            a13 = parentA, b6 = parentB;
          else {
            for (var didFindChild = !1, _child = parentA.child; _child; ) {
              if (_child === a13) {
                didFindChild = !0, a13 = parentA, b6 = parentB;
                break;
              }
              if (_child === b6) {
                didFindChild = !0, b6 = parentA, a13 = parentB;
                break;
              }
              _child = _child.sibling;
            }
            if (!didFindChild) {
              for (_child = parentB.child; _child; ) {
                if (_child === a13) {
                  didFindChild = !0, a13 = parentB, b6 = parentA;
                  break;
                }
                if (_child === b6) {
                  didFindChild = !0, b6 = parentB, a13 = parentA;
                  break;
                }
                _child = _child.sibling;
              }
              if (!didFindChild)
                throw new Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
            }
          }
          if (a13.alternate !== b6)
            throw new Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
        }
        if (a13.tag !== HostRoot)
          throw new Error("Unable to find node on an unmounted component.");
        return a13.stateNode.current === a13 ? fiber : alternate;
      }
      function findCurrentHostFiber(parent) {
        var currentParent = findCurrentFiberUsingSlowPath(parent);
        return currentParent !== null ? findCurrentHostFiberImpl(currentParent) : null;
      }
      function findCurrentHostFiberImpl(node) {
        if (node.tag === HostComponent || node.tag === HostText)
          return node;
        for (var child = node.child; child !== null; ) {
          var match = findCurrentHostFiberImpl(child);
          if (match !== null)
            return match;
          child = child.sibling;
        }
        return null;
      }
      function findCurrentHostFiberWithNoPortals(parent) {
        var currentParent = findCurrentFiberUsingSlowPath(parent);
        return currentParent !== null ? findCurrentHostFiberWithNoPortalsImpl(currentParent) : null;
      }
      function findCurrentHostFiberWithNoPortalsImpl(node) {
        if (node.tag === HostComponent || node.tag === HostText)
          return node;
        for (var child = node.child; child !== null; ) {
          if (child.tag !== HostPortal) {
            var match = findCurrentHostFiberWithNoPortalsImpl(child);
            if (match !== null)
              return match;
          }
          child = child.sibling;
        }
        return null;
      }
      var scheduleCallback = Scheduler.unstable_scheduleCallback, cancelCallback = Scheduler.unstable_cancelCallback, shouldYield = Scheduler.unstable_shouldYield, requestPaint = Scheduler.unstable_requestPaint, now = Scheduler.unstable_now, getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel, ImmediatePriority = Scheduler.unstable_ImmediatePriority, UserBlockingPriority = Scheduler.unstable_UserBlockingPriority, NormalPriority = Scheduler.unstable_NormalPriority, LowPriority = Scheduler.unstable_LowPriority, IdlePriority = Scheduler.unstable_IdlePriority, unstable_yieldValue = Scheduler.unstable_yieldValue, unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue, rendererID = null, injectedHook = null, injectedProfilingHooks = null, hasLoggedError = !1, isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u";
      function injectInternals(internals) {
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u")
          return !1;
        var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (hook.isDisabled)
          return !0;
        if (!hook.supportsFiber)
          return error("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools"), !0;
        try {
          enableSchedulingProfiler && (internals = assign({}, internals, {
            getLaneLabelMap,
            injectProfilingHooks
          })), rendererID = hook.inject(internals), injectedHook = hook;
        } catch (err) {
          error("React instrumentation encountered an error: %s.", err);
        }
        return !!hook.checkDCE;
      }
      function onScheduleRoot(root2, children) {
        if (injectedHook && typeof injectedHook.onScheduleFiberRoot == "function")
          try {
            injectedHook.onScheduleFiberRoot(rendererID, root2, children);
          } catch (err) {
            hasLoggedError || (hasLoggedError = !0, error("React instrumentation encountered an error: %s", err));
          }
      }
      function onCommitRoot(root2, eventPriority) {
        if (injectedHook && typeof injectedHook.onCommitFiberRoot == "function")
          try {
            var didError = (root2.current.flags & DidCapture) === DidCapture;
            if (enableProfilerTimer) {
              var schedulerPriority;
              switch (eventPriority) {
                case DiscreteEventPriority:
                  schedulerPriority = ImmediatePriority;
                  break;
                case ContinuousEventPriority:
                  schedulerPriority = UserBlockingPriority;
                  break;
                case DefaultEventPriority:
                  schedulerPriority = NormalPriority;
                  break;
                case IdleEventPriority:
                  schedulerPriority = IdlePriority;
                  break;
                default:
                  schedulerPriority = NormalPriority;
                  break;
              }
              injectedHook.onCommitFiberRoot(rendererID, root2, schedulerPriority, didError);
            } else
              injectedHook.onCommitFiberRoot(rendererID, root2, void 0, didError);
          } catch (err) {
            hasLoggedError || (hasLoggedError = !0, error("React instrumentation encountered an error: %s", err));
          }
      }
      function onPostCommitRoot(root2) {
        if (injectedHook && typeof injectedHook.onPostCommitFiberRoot == "function")
          try {
            injectedHook.onPostCommitFiberRoot(rendererID, root2);
          } catch (err) {
            hasLoggedError || (hasLoggedError = !0, error("React instrumentation encountered an error: %s", err));
          }
      }
      function onCommitUnmount(fiber) {
        if (injectedHook && typeof injectedHook.onCommitFiberUnmount == "function")
          try {
            injectedHook.onCommitFiberUnmount(rendererID, fiber);
          } catch (err) {
            hasLoggedError || (hasLoggedError = !0, error("React instrumentation encountered an error: %s", err));
          }
      }
      function setIsStrictModeForDevtools(newIsStrictMode) {
        if (typeof unstable_yieldValue == "function" && (unstable_setDisableYieldValue(newIsStrictMode), setSuppressWarning(newIsStrictMode)), injectedHook && typeof injectedHook.setStrictMode == "function")
          try {
            injectedHook.setStrictMode(rendererID, newIsStrictMode);
          } catch (err) {
            hasLoggedError || (hasLoggedError = !0, error("React instrumentation encountered an error: %s", err));
          }
      }
      function injectProfilingHooks(profilingHooks) {
        injectedProfilingHooks = profilingHooks;
      }
      function getLaneLabelMap() {
        {
          for (var map = /* @__PURE__ */ new Map(), lane = 1, index4 = 0; index4 < TotalLanes; index4++) {
            var label = getLabelForLane(lane);
            map.set(lane, label), lane *= 2;
          }
          return map;
        }
      }
      function markCommitStarted(lanes) {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStarted == "function" && injectedProfilingHooks.markCommitStarted(lanes);
      }
      function markCommitStopped() {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStopped == "function" && injectedProfilingHooks.markCommitStopped();
      }
      function markComponentRenderStarted(fiber) {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStarted == "function" && injectedProfilingHooks.markComponentRenderStarted(fiber);
      }
      function markComponentRenderStopped() {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStopped == "function" && injectedProfilingHooks.markComponentRenderStopped();
      }
      function markComponentPassiveEffectMountStarted(fiber) {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted == "function" && injectedProfilingHooks.markComponentPassiveEffectMountStarted(fiber);
      }
      function markComponentPassiveEffectMountStopped() {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped == "function" && injectedProfilingHooks.markComponentPassiveEffectMountStopped();
      }
      function markComponentPassiveEffectUnmountStarted(fiber) {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted == "function" && injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(fiber);
      }
      function markComponentPassiveEffectUnmountStopped() {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped == "function" && injectedProfilingHooks.markComponentPassiveEffectUnmountStopped();
      }
      function markComponentLayoutEffectMountStarted(fiber) {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted == "function" && injectedProfilingHooks.markComponentLayoutEffectMountStarted(fiber);
      }
      function markComponentLayoutEffectMountStopped() {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped == "function" && injectedProfilingHooks.markComponentLayoutEffectMountStopped();
      }
      function markComponentLayoutEffectUnmountStarted(fiber) {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted == "function" && injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(fiber);
      }
      function markComponentLayoutEffectUnmountStopped() {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped == "function" && injectedProfilingHooks.markComponentLayoutEffectUnmountStopped();
      }
      function markComponentErrored(fiber, thrownValue, lanes) {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentErrored == "function" && injectedProfilingHooks.markComponentErrored(fiber, thrownValue, lanes);
      }
      function markComponentSuspended(fiber, wakeable, lanes) {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentSuspended == "function" && injectedProfilingHooks.markComponentSuspended(fiber, wakeable, lanes);
      }
      function markLayoutEffectsStarted(lanes) {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStarted == "function" && injectedProfilingHooks.markLayoutEffectsStarted(lanes);
      }
      function markLayoutEffectsStopped() {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStopped == "function" && injectedProfilingHooks.markLayoutEffectsStopped();
      }
      function markPassiveEffectsStarted(lanes) {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStarted == "function" && injectedProfilingHooks.markPassiveEffectsStarted(lanes);
      }
      function markPassiveEffectsStopped() {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStopped == "function" && injectedProfilingHooks.markPassiveEffectsStopped();
      }
      function markRenderStarted(lanes) {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStarted == "function" && injectedProfilingHooks.markRenderStarted(lanes);
      }
      function markRenderYielded() {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderYielded == "function" && injectedProfilingHooks.markRenderYielded();
      }
      function markRenderStopped() {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStopped == "function" && injectedProfilingHooks.markRenderStopped();
      }
      function markRenderScheduled(lane) {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderScheduled == "function" && injectedProfilingHooks.markRenderScheduled(lane);
      }
      function markForceUpdateScheduled(fiber, lane) {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markForceUpdateScheduled == "function" && injectedProfilingHooks.markForceUpdateScheduled(fiber, lane);
      }
      function markStateUpdateScheduled(fiber, lane) {
        injectedProfilingHooks !== null && typeof injectedProfilingHooks.markStateUpdateScheduled == "function" && injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);
      }
      var NoMode = (
        /*                         */
        0
      ), ConcurrentMode = (
        /*                 */
        1
      ), ProfileMode = (
        /*                    */
        2
      ), StrictLegacyMode = (
        /*               */
        8
      ), StrictEffectsMode = (
        /*              */
        16
      ), clz32 = Math.clz32 ? Math.clz32 : clz32Fallback, log = Math.log, LN2 = Math.LN2;
      function clz32Fallback(x5) {
        var asUint = x5 >>> 0;
        return asUint === 0 ? 32 : 31 - (log(asUint) / LN2 | 0) | 0;
      }
      var TotalLanes = 31, NoLanes = (
        /*                        */
        0
      ), NoLane = (
        /*                          */
        0
      ), SyncLane = (
        /*                        */
        1
      ), InputContinuousHydrationLane = (
        /*    */
        2
      ), InputContinuousLane = (
        /*             */
        4
      ), DefaultHydrationLane = (
        /*            */
        8
      ), DefaultLane = (
        /*                     */
        16
      ), TransitionHydrationLane = (
        /*                */
        32
      ), TransitionLanes = (
        /*                       */
        4194240
      ), TransitionLane1 = (
        /*                        */
        64
      ), TransitionLane2 = (
        /*                        */
        128
      ), TransitionLane3 = (
        /*                        */
        256
      ), TransitionLane4 = (
        /*                        */
        512
      ), TransitionLane5 = (
        /*                        */
        1024
      ), TransitionLane6 = (
        /*                        */
        2048
      ), TransitionLane7 = (
        /*                        */
        4096
      ), TransitionLane8 = (
        /*                        */
        8192
      ), TransitionLane9 = (
        /*                        */
        16384
      ), TransitionLane10 = (
        /*                       */
        32768
      ), TransitionLane11 = (
        /*                       */
        65536
      ), TransitionLane12 = (
        /*                       */
        131072
      ), TransitionLane13 = (
        /*                       */
        262144
      ), TransitionLane14 = (
        /*                       */
        524288
      ), TransitionLane15 = (
        /*                       */
        1048576
      ), TransitionLane16 = (
        /*                       */
        2097152
      ), RetryLanes = (
        /*                            */
        130023424
      ), RetryLane1 = (
        /*                             */
        4194304
      ), RetryLane2 = (
        /*                             */
        8388608
      ), RetryLane3 = (
        /*                             */
        16777216
      ), RetryLane4 = (
        /*                             */
        33554432
      ), RetryLane5 = (
        /*                             */
        67108864
      ), SomeRetryLane = RetryLane1, SelectiveHydrationLane = (
        /*          */
        134217728
      ), NonIdleLanes = (
        /*                          */
        268435455
      ), IdleHydrationLane = (
        /*               */
        268435456
      ), IdleLane = (
        /*                        */
        536870912
      ), OffscreenLane = (
        /*                   */
        1073741824
      );
      function getLabelForLane(lane) {
        {
          if (lane & SyncLane)
            return "Sync";
          if (lane & InputContinuousHydrationLane)
            return "InputContinuousHydration";
          if (lane & InputContinuousLane)
            return "InputContinuous";
          if (lane & DefaultHydrationLane)
            return "DefaultHydration";
          if (lane & DefaultLane)
            return "Default";
          if (lane & TransitionHydrationLane)
            return "TransitionHydration";
          if (lane & TransitionLanes)
            return "Transition";
          if (lane & RetryLanes)
            return "Retry";
          if (lane & SelectiveHydrationLane)
            return "SelectiveHydration";
          if (lane & IdleHydrationLane)
            return "IdleHydration";
          if (lane & IdleLane)
            return "Idle";
          if (lane & OffscreenLane)
            return "Offscreen";
        }
      }
      var NoTimestamp = -1, nextTransitionLane = TransitionLane1, nextRetryLane = RetryLane1;
      function getHighestPriorityLanes(lanes) {
        switch (getHighestPriorityLane(lanes)) {
          case SyncLane:
            return SyncLane;
          case InputContinuousHydrationLane:
            return InputContinuousHydrationLane;
          case InputContinuousLane:
            return InputContinuousLane;
          case DefaultHydrationLane:
            return DefaultHydrationLane;
          case DefaultLane:
            return DefaultLane;
          case TransitionHydrationLane:
            return TransitionHydrationLane;
          case TransitionLane1:
          case TransitionLane2:
          case TransitionLane3:
          case TransitionLane4:
          case TransitionLane5:
          case TransitionLane6:
          case TransitionLane7:
          case TransitionLane8:
          case TransitionLane9:
          case TransitionLane10:
          case TransitionLane11:
          case TransitionLane12:
          case TransitionLane13:
          case TransitionLane14:
          case TransitionLane15:
          case TransitionLane16:
            return lanes & TransitionLanes;
          case RetryLane1:
          case RetryLane2:
          case RetryLane3:
          case RetryLane4:
          case RetryLane5:
            return lanes & RetryLanes;
          case SelectiveHydrationLane:
            return SelectiveHydrationLane;
          case IdleHydrationLane:
            return IdleHydrationLane;
          case IdleLane:
            return IdleLane;
          case OffscreenLane:
            return OffscreenLane;
          default:
            return error("Should have found matching lanes. This is a bug in React."), lanes;
        }
      }
      function getNextLanes(root2, wipLanes) {
        var pendingLanes = root2.pendingLanes;
        if (pendingLanes === NoLanes)
          return NoLanes;
        var nextLanes = NoLanes, suspendedLanes = root2.suspendedLanes, pingedLanes = root2.pingedLanes, nonIdlePendingLanes = pendingLanes & NonIdleLanes;
        if (nonIdlePendingLanes !== NoLanes) {
          var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;
          if (nonIdleUnblockedLanes !== NoLanes)
            nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);
          else {
            var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;
            nonIdlePingedLanes !== NoLanes && (nextLanes = getHighestPriorityLanes(nonIdlePingedLanes));
          }
        } else {
          var unblockedLanes = pendingLanes & ~suspendedLanes;
          unblockedLanes !== NoLanes ? nextLanes = getHighestPriorityLanes(unblockedLanes) : pingedLanes !== NoLanes && (nextLanes = getHighestPriorityLanes(pingedLanes));
        }
        if (nextLanes === NoLanes)
          return NoLanes;
        if (wipLanes !== NoLanes && wipLanes !== nextLanes && // If we already suspended with a delay, then interrupting is fine. Don't
        // bother waiting until the root is complete.
        (wipLanes & suspendedLanes) === NoLanes) {
          var nextLane = getHighestPriorityLane(nextLanes), wipLane = getHighestPriorityLane(wipLanes);
          if (
            // Tests whether the next lane is equal or lower priority than the wip
            // one. This works because the bits decrease in priority as you go left.
            nextLane >= wipLane || // Default priority updates should not interrupt transition updates. The
            // only difference between default updates and transition updates is that
            // default updates do not support refresh transitions.
            nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes
          )
            return wipLanes;
        }
        (nextLanes & InputContinuousLane) !== NoLanes && (nextLanes |= pendingLanes & DefaultLane);
        var entangledLanes = root2.entangledLanes;
        if (entangledLanes !== NoLanes)
          for (var entanglements = root2.entanglements, lanes = nextLanes & entangledLanes; lanes > 0; ) {
            var index4 = pickArbitraryLaneIndex(lanes), lane = 1 << index4;
            nextLanes |= entanglements[index4], lanes &= ~lane;
          }
        return nextLanes;
      }
      function getMostRecentEventTime(root2, lanes) {
        for (var eventTimes = root2.eventTimes, mostRecentEventTime = NoTimestamp; lanes > 0; ) {
          var index4 = pickArbitraryLaneIndex(lanes), lane = 1 << index4, eventTime = eventTimes[index4];
          eventTime > mostRecentEventTime && (mostRecentEventTime = eventTime), lanes &= ~lane;
        }
        return mostRecentEventTime;
      }
      function computeExpirationTime(lane, currentTime) {
        switch (lane) {
          case SyncLane:
          case InputContinuousHydrationLane:
          case InputContinuousLane:
            return currentTime + 250;
          case DefaultHydrationLane:
          case DefaultLane:
          case TransitionHydrationLane:
          case TransitionLane1:
          case TransitionLane2:
          case TransitionLane3:
          case TransitionLane4:
          case TransitionLane5:
          case TransitionLane6:
          case TransitionLane7:
          case TransitionLane8:
          case TransitionLane9:
          case TransitionLane10:
          case TransitionLane11:
          case TransitionLane12:
          case TransitionLane13:
          case TransitionLane14:
          case TransitionLane15:
          case TransitionLane16:
            return currentTime + 5e3;
          case RetryLane1:
          case RetryLane2:
          case RetryLane3:
          case RetryLane4:
          case RetryLane5:
            return NoTimestamp;
          case SelectiveHydrationLane:
          case IdleHydrationLane:
          case IdleLane:
          case OffscreenLane:
            return NoTimestamp;
          default:
            return error("Should have found matching lanes. This is a bug in React."), NoTimestamp;
        }
      }
      function markStarvedLanesAsExpired(root2, currentTime) {
        for (var pendingLanes = root2.pendingLanes, suspendedLanes = root2.suspendedLanes, pingedLanes = root2.pingedLanes, expirationTimes = root2.expirationTimes, lanes = pendingLanes; lanes > 0; ) {
          var index4 = pickArbitraryLaneIndex(lanes), lane = 1 << index4, expirationTime = expirationTimes[index4];
          expirationTime === NoTimestamp ? ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) && (expirationTimes[index4] = computeExpirationTime(lane, currentTime)) : expirationTime <= currentTime && (root2.expiredLanes |= lane), lanes &= ~lane;
        }
      }
      function getHighestPriorityPendingLanes(root2) {
        return getHighestPriorityLanes(root2.pendingLanes);
      }
      function getLanesToRetrySynchronouslyOnError(root2) {
        var everythingButOffscreen = root2.pendingLanes & ~OffscreenLane;
        return everythingButOffscreen !== NoLanes ? everythingButOffscreen : everythingButOffscreen & OffscreenLane ? OffscreenLane : NoLanes;
      }
      function includesSyncLane(lanes) {
        return (lanes & SyncLane) !== NoLanes;
      }
      function includesNonIdleWork(lanes) {
        return (lanes & NonIdleLanes) !== NoLanes;
      }
      function includesOnlyRetries(lanes) {
        return (lanes & RetryLanes) === lanes;
      }
      function includesOnlyNonUrgentLanes(lanes) {
        var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;
        return (lanes & UrgentLanes) === NoLanes;
      }
      function includesOnlyTransitions(lanes) {
        return (lanes & TransitionLanes) === lanes;
      }
      function includesBlockingLane(root2, lanes) {
        var SyncDefaultLanes = InputContinuousHydrationLane | InputContinuousLane | DefaultHydrationLane | DefaultLane;
        return (lanes & SyncDefaultLanes) !== NoLanes;
      }
      function includesExpiredLane(root2, lanes) {
        return (lanes & root2.expiredLanes) !== NoLanes;
      }
      function isTransitionLane(lane) {
        return (lane & TransitionLanes) !== NoLanes;
      }
      function claimNextTransitionLane() {
        var lane = nextTransitionLane;
        return nextTransitionLane <<= 1, (nextTransitionLane & TransitionLanes) === NoLanes && (nextTransitionLane = TransitionLane1), lane;
      }
      function claimNextRetryLane() {
        var lane = nextRetryLane;
        return nextRetryLane <<= 1, (nextRetryLane & RetryLanes) === NoLanes && (nextRetryLane = RetryLane1), lane;
      }
      function getHighestPriorityLane(lanes) {
        return lanes & -lanes;
      }
      function pickArbitraryLane(lanes) {
        return getHighestPriorityLane(lanes);
      }
      function pickArbitraryLaneIndex(lanes) {
        return 31 - clz32(lanes);
      }
      function laneToIndex(lane) {
        return pickArbitraryLaneIndex(lane);
      }
      function includesSomeLane(a13, b6) {
        return (a13 & b6) !== NoLanes;
      }
      function isSubsetOfLanes(set2, subset) {
        return (set2 & subset) === subset;
      }
      function mergeLanes(a13, b6) {
        return a13 | b6;
      }
      function removeLanes(set2, subset) {
        return set2 & ~subset;
      }
      function intersectLanes(a13, b6) {
        return a13 & b6;
      }
      function laneToLanes(lane) {
        return lane;
      }
      function higherPriorityLane(a13, b6) {
        return a13 !== NoLane && a13 < b6 ? a13 : b6;
      }
      function createLaneMap(initial) {
        for (var laneMap = [], i7 = 0; i7 < TotalLanes; i7++)
          laneMap.push(initial);
        return laneMap;
      }
      function markRootUpdated(root2, updateLane, eventTime) {
        root2.pendingLanes |= updateLane, updateLane !== IdleLane && (root2.suspendedLanes = NoLanes, root2.pingedLanes = NoLanes);
        var eventTimes = root2.eventTimes, index4 = laneToIndex(updateLane);
        eventTimes[index4] = eventTime;
      }
      function markRootSuspended(root2, suspendedLanes) {
        root2.suspendedLanes |= suspendedLanes, root2.pingedLanes &= ~suspendedLanes;
        for (var expirationTimes = root2.expirationTimes, lanes = suspendedLanes; lanes > 0; ) {
          var index4 = pickArbitraryLaneIndex(lanes), lane = 1 << index4;
          expirationTimes[index4] = NoTimestamp, lanes &= ~lane;
        }
      }
      function markRootPinged(root2, pingedLanes, eventTime) {
        root2.pingedLanes |= root2.suspendedLanes & pingedLanes;
      }
      function markRootFinished(root2, remainingLanes) {
        var noLongerPendingLanes = root2.pendingLanes & ~remainingLanes;
        root2.pendingLanes = remainingLanes, root2.suspendedLanes = NoLanes, root2.pingedLanes = NoLanes, root2.expiredLanes &= remainingLanes, root2.mutableReadLanes &= remainingLanes, root2.entangledLanes &= remainingLanes;
        for (var entanglements = root2.entanglements, eventTimes = root2.eventTimes, expirationTimes = root2.expirationTimes, lanes = noLongerPendingLanes; lanes > 0; ) {
          var index4 = pickArbitraryLaneIndex(lanes), lane = 1 << index4;
          entanglements[index4] = NoLanes, eventTimes[index4] = NoTimestamp, expirationTimes[index4] = NoTimestamp, lanes &= ~lane;
        }
      }
      function markRootEntangled(root2, entangledLanes) {
        for (var rootEntangledLanes = root2.entangledLanes |= entangledLanes, entanglements = root2.entanglements, lanes = rootEntangledLanes; lanes; ) {
          var index4 = pickArbitraryLaneIndex(lanes), lane = 1 << index4;
          // Is this one of the newly entangled lanes?
          lane & entangledLanes | // Is this lane transitively entangled with the newly entangled lanes?
          entanglements[index4] & entangledLanes && (entanglements[index4] |= entangledLanes), lanes &= ~lane;
        }
      }
      function getBumpedLaneForHydration(root2, renderLanes2) {
        var renderLane = getHighestPriorityLane(renderLanes2), lane;
        switch (renderLane) {
          case InputContinuousLane:
            lane = InputContinuousHydrationLane;
            break;
          case DefaultLane:
            lane = DefaultHydrationLane;
            break;
          case TransitionLane1:
          case TransitionLane2:
          case TransitionLane3:
          case TransitionLane4:
          case TransitionLane5:
          case TransitionLane6:
          case TransitionLane7:
          case TransitionLane8:
          case TransitionLane9:
          case TransitionLane10:
          case TransitionLane11:
          case TransitionLane12:
          case TransitionLane13:
          case TransitionLane14:
          case TransitionLane15:
          case TransitionLane16:
          case RetryLane1:
          case RetryLane2:
          case RetryLane3:
          case RetryLane4:
          case RetryLane5:
            lane = TransitionHydrationLane;
            break;
          case IdleLane:
            lane = IdleHydrationLane;
            break;
          default:
            lane = NoLane;
            break;
        }
        return (lane & (root2.suspendedLanes | renderLanes2)) !== NoLane ? NoLane : lane;
      }
      function addFiberToLanesMap(root2, fiber, lanes) {
        if (isDevToolsPresent)
          for (var pendingUpdatersLaneMap = root2.pendingUpdatersLaneMap; lanes > 0; ) {
            var index4 = laneToIndex(lanes), lane = 1 << index4, updaters = pendingUpdatersLaneMap[index4];
            updaters.add(fiber), lanes &= ~lane;
          }
      }
      function movePendingFibersToMemoized(root2, lanes) {
        if (isDevToolsPresent)
          for (var pendingUpdatersLaneMap = root2.pendingUpdatersLaneMap, memoizedUpdaters = root2.memoizedUpdaters; lanes > 0; ) {
            var index4 = laneToIndex(lanes), lane = 1 << index4, updaters = pendingUpdatersLaneMap[index4];
            updaters.size > 0 && (updaters.forEach(function(fiber) {
              var alternate = fiber.alternate;
              (alternate === null || !memoizedUpdaters.has(alternate)) && memoizedUpdaters.add(fiber);
            }), updaters.clear()), lanes &= ~lane;
          }
      }
      function getTransitionsForLanes(root2, lanes) {
        return null;
      }
      var DiscreteEventPriority = SyncLane, ContinuousEventPriority = InputContinuousLane, DefaultEventPriority = DefaultLane, IdleEventPriority = IdleLane, currentUpdatePriority = NoLane;
      function getCurrentUpdatePriority() {
        return currentUpdatePriority;
      }
      function setCurrentUpdatePriority(newPriority) {
        currentUpdatePriority = newPriority;
      }
      function runWithPriority(priority, fn) {
        var previousPriority = currentUpdatePriority;
        try {
          return currentUpdatePriority = priority, fn();
        } finally {
          currentUpdatePriority = previousPriority;
        }
      }
      function higherEventPriority(a13, b6) {
        return a13 !== 0 && a13 < b6 ? a13 : b6;
      }
      function lowerEventPriority(a13, b6) {
        return a13 === 0 || a13 > b6 ? a13 : b6;
      }
      function isHigherEventPriority(a13, b6) {
        return a13 !== 0 && a13 < b6;
      }
      function lanesToEventPriority(lanes) {
        var lane = getHighestPriorityLane(lanes);
        return isHigherEventPriority(DiscreteEventPriority, lane) ? isHigherEventPriority(ContinuousEventPriority, lane) ? includesNonIdleWork(lane) ? DefaultEventPriority : IdleEventPriority : ContinuousEventPriority : DiscreteEventPriority;
      }
      function isRootDehydrated(root2) {
        var currentState = root2.current.memoizedState;
        return currentState.isDehydrated;
      }
      var _attemptSynchronousHydration;
      function setAttemptSynchronousHydration(fn) {
        _attemptSynchronousHydration = fn;
      }
      function attemptSynchronousHydration(fiber) {
        _attemptSynchronousHydration(fiber);
      }
      var attemptContinuousHydration;
      function setAttemptContinuousHydration(fn) {
        attemptContinuousHydration = fn;
      }
      var attemptHydrationAtCurrentPriority;
      function setAttemptHydrationAtCurrentPriority(fn) {
        attemptHydrationAtCurrentPriority = fn;
      }
      var getCurrentUpdatePriority$1;
      function setGetCurrentUpdatePriority(fn) {
        getCurrentUpdatePriority$1 = fn;
      }
      var attemptHydrationAtPriority;
      function setAttemptHydrationAtPriority(fn) {
        attemptHydrationAtPriority = fn;
      }
      var hasScheduledReplayAttempt = !1, queuedDiscreteEvents = [], queuedFocus = null, queuedDrag = null, queuedMouse = null, queuedPointers = /* @__PURE__ */ new Map(), queuedPointerCaptures = /* @__PURE__ */ new Map(), queuedExplicitHydrationTargets = [], discreteReplayableEvents = [
        "mousedown",
        "mouseup",
        "touchcancel",
        "touchend",
        "touchstart",
        "auxclick",
        "dblclick",
        "pointercancel",
        "pointerdown",
        "pointerup",
        "dragend",
        "dragstart",
        "drop",
        "compositionend",
        "compositionstart",
        "keydown",
        "keypress",
        "keyup",
        "input",
        "textInput",
        // Intentionally camelCase
        "copy",
        "cut",
        "paste",
        "click",
        "change",
        "contextmenu",
        "reset",
        "submit"
      ];
      function isDiscreteEventThatRequiresHydration(eventType) {
        return discreteReplayableEvents.indexOf(eventType) > -1;
      }
      function createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        return {
          blockedOn,
          domEventName,
          eventSystemFlags,
          nativeEvent,
          targetContainers: [targetContainer]
        };
      }
      function clearIfContinuousEvent(domEventName, nativeEvent) {
        switch (domEventName) {
          case "focusin":
          case "focusout":
            queuedFocus = null;
            break;
          case "dragenter":
          case "dragleave":
            queuedDrag = null;
            break;
          case "mouseover":
          case "mouseout":
            queuedMouse = null;
            break;
          case "pointerover":
          case "pointerout": {
            var pointerId = nativeEvent.pointerId;
            queuedPointers.delete(pointerId);
            break;
          }
          case "gotpointercapture":
          case "lostpointercapture": {
            var _pointerId = nativeEvent.pointerId;
            queuedPointerCaptures.delete(_pointerId);
            break;
          }
        }
      }
      function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
          var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
          if (blockedOn !== null) {
            var _fiber2 = getInstanceFromNode(blockedOn);
            _fiber2 !== null && attemptContinuousHydration(_fiber2);
          }
          return queuedEvent;
        }
        existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
        var targetContainers = existingQueuedEvent.targetContainers;
        return targetContainer !== null && targetContainers.indexOf(targetContainer) === -1 && targetContainers.push(targetContainer), existingQueuedEvent;
      }
      function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        switch (domEventName) {
          case "focusin": {
            var focusEvent = nativeEvent;
            return queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent), !0;
          }
          case "dragenter": {
            var dragEvent = nativeEvent;
            return queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent), !0;
          }
          case "mouseover": {
            var mouseEvent2 = nativeEvent;
            return queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent2), !0;
          }
          case "pointerover": {
            var pointerEvent = nativeEvent, pointerId = pointerEvent.pointerId;
            return queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent)), !0;
          }
          case "gotpointercapture": {
            var _pointerEvent = nativeEvent, _pointerId2 = _pointerEvent.pointerId;
            return queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent)), !0;
          }
        }
        return !1;
      }
      function attemptExplicitHydrationTarget(queuedTarget) {
        var targetInst = getClosestInstanceFromNode(queuedTarget.target);
        if (targetInst !== null) {
          var nearestMounted = getNearestMountedFiber(targetInst);
          if (nearestMounted !== null) {
            var tag = nearestMounted.tag;
            if (tag === SuspenseComponent) {
              var instance = getSuspenseInstanceFromFiber(nearestMounted);
              if (instance !== null) {
                queuedTarget.blockedOn = instance, attemptHydrationAtPriority(queuedTarget.priority, function() {
                  attemptHydrationAtCurrentPriority(nearestMounted);
                });
                return;
              }
            } else if (tag === HostRoot) {
              var root2 = nearestMounted.stateNode;
              if (isRootDehydrated(root2)) {
                queuedTarget.blockedOn = getContainerFromFiber(nearestMounted);
                return;
              }
            }
          }
        }
        queuedTarget.blockedOn = null;
      }
      function queueExplicitHydrationTarget(target) {
        for (var updatePriority = getCurrentUpdatePriority$1(), queuedTarget = {
          blockedOn: null,
          target,
          priority: updatePriority
        }, i7 = 0; i7 < queuedExplicitHydrationTargets.length && isHigherEventPriority(updatePriority, queuedExplicitHydrationTargets[i7].priority); i7++)
          ;
        queuedExplicitHydrationTargets.splice(i7, 0, queuedTarget), i7 === 0 && attemptExplicitHydrationTarget(queuedTarget);
      }
      function attemptReplayContinuousQueuedEvent(queuedEvent) {
        if (queuedEvent.blockedOn !== null)
          return !1;
        for (var targetContainers = queuedEvent.targetContainers; targetContainers.length > 0; ) {
          var targetContainer = targetContainers[0], nextBlockedOn = findInstanceBlockingEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);
          if (nextBlockedOn === null) {
            var nativeEvent = queuedEvent.nativeEvent, nativeEventClone = new nativeEvent.constructor(nativeEvent.type, nativeEvent);
            setReplayingEvent(nativeEventClone), nativeEvent.target.dispatchEvent(nativeEventClone), resetReplayingEvent();
          } else {
            var _fiber3 = getInstanceFromNode(nextBlockedOn);
            return _fiber3 !== null && attemptContinuousHydration(_fiber3), queuedEvent.blockedOn = nextBlockedOn, !1;
          }
          targetContainers.shift();
        }
        return !0;
      }
      function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
        attemptReplayContinuousQueuedEvent(queuedEvent) && map.delete(key);
      }
      function replayUnblockedEvents() {
        hasScheduledReplayAttempt = !1, queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus) && (queuedFocus = null), queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag) && (queuedDrag = null), queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse) && (queuedMouse = null), queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap), queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
      }
      function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
        queuedEvent.blockedOn === unblocked && (queuedEvent.blockedOn = null, hasScheduledReplayAttempt || (hasScheduledReplayAttempt = !0, Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents)));
      }
      function retryIfBlockedOn(unblocked) {
        if (queuedDiscreteEvents.length > 0) {
          scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked);
          for (var i7 = 1; i7 < queuedDiscreteEvents.length; i7++) {
            var queuedEvent = queuedDiscreteEvents[i7];
            queuedEvent.blockedOn === unblocked && (queuedEvent.blockedOn = null);
          }
        }
        queuedFocus !== null && scheduleCallbackIfUnblocked(queuedFocus, unblocked), queuedDrag !== null && scheduleCallbackIfUnblocked(queuedDrag, unblocked), queuedMouse !== null && scheduleCallbackIfUnblocked(queuedMouse, unblocked);
        var unblock = function(queuedEvent2) {
          return scheduleCallbackIfUnblocked(queuedEvent2, unblocked);
        };
        queuedPointers.forEach(unblock), queuedPointerCaptures.forEach(unblock);
        for (var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++) {
          var queuedTarget = queuedExplicitHydrationTargets[_i];
          queuedTarget.blockedOn === unblocked && (queuedTarget.blockedOn = null);
        }
        for (; queuedExplicitHydrationTargets.length > 0; ) {
          var nextExplicitTarget = queuedExplicitHydrationTargets[0];
          if (nextExplicitTarget.blockedOn !== null)
            break;
          attemptExplicitHydrationTarget(nextExplicitTarget), nextExplicitTarget.blockedOn === null && queuedExplicitHydrationTargets.shift();
        }
      }
      var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig, _enabled = !0;
      function setEnabled(enabled) {
        _enabled = !!enabled;
      }
      function isEnabled() {
        return _enabled;
      }
      function createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {
        var eventPriority = getEventPriority(domEventName), listenerWrapper;
        switch (eventPriority) {
          case DiscreteEventPriority:
            listenerWrapper = dispatchDiscreteEvent;
            break;
          case ContinuousEventPriority:
            listenerWrapper = dispatchContinuousEvent;
            break;
          case DefaultEventPriority:
          default:
            listenerWrapper = dispatchEvent;
            break;
        }
        return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
      }
      function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        var previousPriority = getCurrentUpdatePriority(), prevTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition = null;
        try {
          setCurrentUpdatePriority(DiscreteEventPriority), dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
        } finally {
          setCurrentUpdatePriority(previousPriority), ReactCurrentBatchConfig.transition = prevTransition;
        }
      }
      function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {
        var previousPriority = getCurrentUpdatePriority(), prevTransition = ReactCurrentBatchConfig.transition;
        ReactCurrentBatchConfig.transition = null;
        try {
          setCurrentUpdatePriority(ContinuousEventPriority), dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
        } finally {
          setCurrentUpdatePriority(previousPriority), ReactCurrentBatchConfig.transition = prevTransition;
        }
      }
      function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        _enabled && dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);
      }
      function dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        var blockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
        if (blockedOn === null) {
          dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer), clearIfContinuousEvent(domEventName, nativeEvent);
          return;
        }
        if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) {
          nativeEvent.stopPropagation();
          return;
        }
        if (clearIfContinuousEvent(domEventName, nativeEvent), eventSystemFlags & IS_CAPTURE_PHASE && isDiscreteEventThatRequiresHydration(domEventName)) {
          for (; blockedOn !== null; ) {
            var fiber = getInstanceFromNode(blockedOn);
            fiber !== null && attemptSynchronousHydration(fiber);
            var nextBlockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
            if (nextBlockedOn === null && dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer), nextBlockedOn === blockedOn)
              break;
            blockedOn = nextBlockedOn;
          }
          blockedOn !== null && nativeEvent.stopPropagation();
          return;
        }
        dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
      }
      var return_targetInst = null;
      function findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
        return_targetInst = null;
        var nativeEventTarget = getEventTarget2(nativeEvent), targetInst = getClosestInstanceFromNode(nativeEventTarget);
        if (targetInst !== null) {
          var nearestMounted = getNearestMountedFiber(targetInst);
          if (nearestMounted === null)
            targetInst = null;
          else {
            var tag = nearestMounted.tag;
            if (tag === SuspenseComponent) {
              var instance = getSuspenseInstanceFromFiber(nearestMounted);
              if (instance !== null)
                return instance;
              targetInst = null;
            } else if (tag === HostRoot) {
              var root2 = nearestMounted.stateNode;
              if (isRootDehydrated(root2))
                return getContainerFromFiber(nearestMounted);
              targetInst = null;
            } else
              nearestMounted !== targetInst && (targetInst = null);
          }
        }
        return return_targetInst = targetInst, null;
      }
      function getEventPriority(domEventName) {
        switch (domEventName) {
          case "cancel":
          case "click":
          case "close":
          case "contextmenu":
          case "copy":
          case "cut":
          case "auxclick":
          case "dblclick":
          case "dragend":
          case "dragstart":
          case "drop":
          case "focusin":
          case "focusout":
          case "input":
          case "invalid":
          case "keydown":
          case "keypress":
          case "keyup":
          case "mousedown":
          case "mouseup":
          case "paste":
          case "pause":
          case "play":
          case "pointercancel":
          case "pointerdown":
          case "pointerup":
          case "ratechange":
          case "reset":
          case "resize":
          case "seeked":
          case "submit":
          case "touchcancel":
          case "touchend":
          case "touchstart":
          case "volumechange":
          case "change":
          case "selectionchange":
          case "textInput":
          case "compositionstart":
          case "compositionend":
          case "compositionupdate":
          case "beforeblur":
          case "afterblur":
          case "beforeinput":
          case "blur":
          case "fullscreenchange":
          case "focus":
          case "hashchange":
          case "popstate":
          case "select":
          case "selectstart":
            return DiscreteEventPriority;
          case "drag":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "mousemove":
          case "mouseout":
          case "mouseover":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "scroll":
          case "toggle":
          case "touchmove":
          case "wheel":
          case "mouseenter":
          case "mouseleave":
          case "pointerenter":
          case "pointerleave":
            return ContinuousEventPriority;
          case "message": {
            var schedulerPriority = getCurrentPriorityLevel();
            switch (schedulerPriority) {
              case ImmediatePriority:
                return DiscreteEventPriority;
              case UserBlockingPriority:
                return ContinuousEventPriority;
              case NormalPriority:
              case LowPriority:
                return DefaultEventPriority;
              case IdlePriority:
                return IdleEventPriority;
              default:
                return DefaultEventPriority;
            }
          }
          default:
            return DefaultEventPriority;
        }
      }
      function addEventBubbleListener(target, eventType, listener) {
        return target.addEventListener(eventType, listener, !1), listener;
      }
      function addEventCaptureListener(target, eventType, listener) {
        return target.addEventListener(eventType, listener, !0), listener;
      }
      function addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {
        return target.addEventListener(eventType, listener, {
          capture: !0,
          passive
        }), listener;
      }
      function addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {
        return target.addEventListener(eventType, listener, {
          passive
        }), listener;
      }
      var root = null, startText = null, fallbackText = null;
      function initialize(nativeEventTarget) {
        return root = nativeEventTarget, startText = getText(), !0;
      }
      function reset() {
        root = null, startText = null, fallbackText = null;
      }
      function getData() {
        if (fallbackText)
          return fallbackText;
        var start, startValue = startText, startLength = startValue.length, end, endValue = getText(), endLength = endValue.length;
        for (start = 0; start < startLength && startValue[start] === endValue[start]; start++)
          ;
        var minEnd = startLength - start;
        for (end = 1; end <= minEnd && startValue[startLength - end] === endValue[endLength - end]; end++)
          ;
        var sliceTail = end > 1 ? 1 - end : void 0;
        return fallbackText = endValue.slice(start, sliceTail), fallbackText;
      }
      function getText() {
        return "value" in root ? root.value : root.textContent;
      }
      function getEventCharCode(nativeEvent) {
        var charCode, keyCode = nativeEvent.keyCode;
        return "charCode" in nativeEvent ? (charCode = nativeEvent.charCode, charCode === 0 && keyCode === 13 && (charCode = 13)) : charCode = keyCode, charCode === 10 && (charCode = 13), charCode >= 32 || charCode === 13 ? charCode : 0;
      }
      function functionThatReturnsTrue() {
        return !0;
      }
      function functionThatReturnsFalse() {
        return !1;
      }
      function createSyntheticEvent(Interface) {
        function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
          this._reactName = reactName, this._targetInst = targetInst, this.type = reactEventType, this.nativeEvent = nativeEvent, this.target = nativeEventTarget, this.currentTarget = null;
          for (var _propName in Interface)
            if (Interface.hasOwnProperty(_propName)) {
              var normalize = Interface[_propName];
              normalize ? this[_propName] = normalize(nativeEvent) : this[_propName] = nativeEvent[_propName];
            }
          var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === !1;
          return defaultPrevented ? this.isDefaultPrevented = functionThatReturnsTrue : this.isDefaultPrevented = functionThatReturnsFalse, this.isPropagationStopped = functionThatReturnsFalse, this;
        }
        return assign(SyntheticBaseEvent.prototype, {
          preventDefault: function() {
            this.defaultPrevented = !0;
            var event = this.nativeEvent;
            event && (event.preventDefault ? event.preventDefault() : typeof event.returnValue != "unknown" && (event.returnValue = !1), this.isDefaultPrevented = functionThatReturnsTrue);
          },
          stopPropagation: function() {
            var event = this.nativeEvent;
            event && (event.stopPropagation ? event.stopPropagation() : typeof event.cancelBubble != "unknown" && (event.cancelBubble = !0), this.isPropagationStopped = functionThatReturnsTrue);
          },
          /**
           * We release all dispatched `SyntheticEvent`s after each event loop, adding
           * them back into the pool. This allows a way to hold onto a reference that
           * won't be added back into the pool.
           */
          persist: function() {
          },
          /**
           * Checks if this event should be released back into the pool.
           *
           * @return {boolean} True if this should not be released, false otherwise.
           */
          isPersistent: functionThatReturnsTrue
        }), SyntheticBaseEvent;
      }
      var EventInterface = {
        eventPhase: 0,
        bubbles: 0,
        cancelable: 0,
        timeStamp: function(event) {
          return event.timeStamp || Date.now();
        },
        defaultPrevented: 0,
        isTrusted: 0
      }, SyntheticEvent = createSyntheticEvent(EventInterface), UIEventInterface = assign({}, EventInterface, {
        view: 0,
        detail: 0
      }), SyntheticUIEvent = createSyntheticEvent(UIEventInterface), lastMovementX, lastMovementY, lastMouseEvent;
      function updateMouseMovementPolyfillState(event) {
        event !== lastMouseEvent && (lastMouseEvent && event.type === "mousemove" ? (lastMovementX = event.screenX - lastMouseEvent.screenX, lastMovementY = event.screenY - lastMouseEvent.screenY) : (lastMovementX = 0, lastMovementY = 0), lastMouseEvent = event);
      }
      var MouseEventInterface = assign({}, UIEventInterface, {
        screenX: 0,
        screenY: 0,
        clientX: 0,
        clientY: 0,
        pageX: 0,
        pageY: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        getModifierState: getEventModifierState,
        button: 0,
        buttons: 0,
        relatedTarget: function(event) {
          return event.relatedTarget === void 0 ? event.fromElement === event.srcElement ? event.toElement : event.fromElement : event.relatedTarget;
        },
        movementX: function(event) {
          return "movementX" in event ? event.movementX : (updateMouseMovementPolyfillState(event), lastMovementX);
        },
        movementY: function(event) {
          return "movementY" in event ? event.movementY : lastMovementY;
        }
      }), SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface), DragEventInterface = assign({}, MouseEventInterface, {
        dataTransfer: 0
      }), SyntheticDragEvent = createSyntheticEvent(DragEventInterface), FocusEventInterface = assign({}, UIEventInterface, {
        relatedTarget: 0
      }), SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface), AnimationEventInterface = assign({}, EventInterface, {
        animationName: 0,
        elapsedTime: 0,
        pseudoElement: 0
      }), SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface), ClipboardEventInterface = assign({}, EventInterface, {
        clipboardData: function(event) {
          return "clipboardData" in event ? event.clipboardData : window.clipboardData;
        }
      }), SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface), CompositionEventInterface = assign({}, EventInterface, {
        data: 0
      }), SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface), SyntheticInputEvent = SyntheticCompositionEvent, normalizeKey = {
        Esc: "Escape",
        Spacebar: " ",
        Left: "ArrowLeft",
        Up: "ArrowUp",
        Right: "ArrowRight",
        Down: "ArrowDown",
        Del: "Delete",
        Win: "OS",
        Menu: "ContextMenu",
        Apps: "ContextMenu",
        Scroll: "ScrollLock",
        MozPrintableKey: "Unidentified"
      }, translateToKey = {
        8: "Backspace",
        9: "Tab",
        12: "Clear",
        13: "Enter",
        16: "Shift",
        17: "Control",
        18: "Alt",
        19: "Pause",
        20: "CapsLock",
        27: "Escape",
        32: " ",
        33: "PageUp",
        34: "PageDown",
        35: "End",
        36: "Home",
        37: "ArrowLeft",
        38: "ArrowUp",
        39: "ArrowRight",
        40: "ArrowDown",
        45: "Insert",
        46: "Delete",
        112: "F1",
        113: "F2",
        114: "F3",
        115: "F4",
        116: "F5",
        117: "F6",
        118: "F7",
        119: "F8",
        120: "F9",
        121: "F10",
        122: "F11",
        123: "F12",
        144: "NumLock",
        145: "ScrollLock",
        224: "Meta"
      };
      function getEventKey(nativeEvent) {
        if (nativeEvent.key) {
          var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
          if (key !== "Unidentified")
            return key;
        }
        if (nativeEvent.type === "keypress") {
          var charCode = getEventCharCode(nativeEvent);
          return charCode === 13 ? "Enter" : String.fromCharCode(charCode);
        }
        return nativeEvent.type === "keydown" || nativeEvent.type === "keyup" ? translateToKey[nativeEvent.keyCode] || "Unidentified" : "";
      }
      var modifierKeyToProp = {
        Alt: "altKey",
        Control: "ctrlKey",
        Meta: "metaKey",
        Shift: "shiftKey"
      };
      function modifierStateGetter(keyArg) {
        var syntheticEvent = this, nativeEvent = syntheticEvent.nativeEvent;
        if (nativeEvent.getModifierState)
          return nativeEvent.getModifierState(keyArg);
        var keyProp = modifierKeyToProp[keyArg];
        return keyProp ? !!nativeEvent[keyProp] : !1;
      }
      function getEventModifierState(nativeEvent) {
        return modifierStateGetter;
      }
      var KeyboardEventInterface = assign({}, UIEventInterface, {
        key: getEventKey,
        code: 0,
        location: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        repeat: 0,
        locale: 0,
        getModifierState: getEventModifierState,
        // Legacy Interface
        charCode: function(event) {
          return event.type === "keypress" ? getEventCharCode(event) : 0;
        },
        keyCode: function(event) {
          return event.type === "keydown" || event.type === "keyup" ? event.keyCode : 0;
        },
        which: function(event) {
          return event.type === "keypress" ? getEventCharCode(event) : event.type === "keydown" || event.type === "keyup" ? event.keyCode : 0;
        }
      }), SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface), PointerEventInterface = assign({}, MouseEventInterface, {
        pointerId: 0,
        width: 0,
        height: 0,
        pressure: 0,
        tangentialPressure: 0,
        tiltX: 0,
        tiltY: 0,
        twist: 0,
        pointerType: 0,
        isPrimary: 0
      }), SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface), TouchEventInterface = assign({}, UIEventInterface, {
        touches: 0,
        targetTouches: 0,
        changedTouches: 0,
        altKey: 0,
        metaKey: 0,
        ctrlKey: 0,
        shiftKey: 0,
        getModifierState: getEventModifierState
      }), SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface), TransitionEventInterface = assign({}, EventInterface, {
        propertyName: 0,
        elapsedTime: 0,
        pseudoElement: 0
      }), SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface), WheelEventInterface = assign({}, MouseEventInterface, {
        deltaX: function(event) {
          return "deltaX" in event ? event.deltaX : (
            // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
            "wheelDeltaX" in event ? -event.wheelDeltaX : 0
          );
        },
        deltaY: function(event) {
          return "deltaY" in event ? event.deltaY : (
            // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
            "wheelDeltaY" in event ? -event.wheelDeltaY : (
              // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
              "wheelDelta" in event ? -event.wheelDelta : 0
            )
          );
        },
        deltaZ: 0,
        // Browsers without "deltaMode" is reporting in raw wheel delta where one
        // notch on the scroll is always +/- 120, roughly equivalent to pixels.
        // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
        // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
        deltaMode: 0
      }), SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface), END_KEYCODES = [9, 13, 27, 32], START_KEYCODE = 229, canUseCompositionEvent = canUseDOM && "CompositionEvent" in window, documentMode = null;
      canUseDOM && "documentMode" in document && (documentMode = document.documentMode);
      var canUseTextInputEvent = canUseDOM && "TextEvent" in window && !documentMode, useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11), SPACEBAR_CODE = 32, SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
      function registerEvents() {
        registerTwoPhaseEvent("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]), registerTwoPhaseEvent("onCompositionEnd", ["compositionend", "focusout", "keydown", "keypress", "keyup", "mousedown"]), registerTwoPhaseEvent("onCompositionStart", ["compositionstart", "focusout", "keydown", "keypress", "keyup", "mousedown"]), registerTwoPhaseEvent("onCompositionUpdate", ["compositionupdate", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
      }
      var hasSpaceKeypress = !1;
      function isKeypressCommand(nativeEvent) {
        return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
        !(nativeEvent.ctrlKey && nativeEvent.altKey);
      }
      function getCompositionEventType(domEventName) {
        switch (domEventName) {
          case "compositionstart":
            return "onCompositionStart";
          case "compositionend":
            return "onCompositionEnd";
          case "compositionupdate":
            return "onCompositionUpdate";
        }
      }
      function isFallbackCompositionStart(domEventName, nativeEvent) {
        return domEventName === "keydown" && nativeEvent.keyCode === START_KEYCODE;
      }
      function isFallbackCompositionEnd(domEventName, nativeEvent) {
        switch (domEventName) {
          case "keyup":
            return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
          case "keydown":
            return nativeEvent.keyCode !== START_KEYCODE;
          case "keypress":
          case "mousedown":
          case "focusout":
            return !0;
          default:
            return !1;
        }
      }
      function getDataFromCustomEvent(nativeEvent) {
        var detail = nativeEvent.detail;
        return typeof detail == "object" && "data" in detail ? detail.data : null;
      }
      function isUsingKoreanIME(nativeEvent) {
        return nativeEvent.locale === "ko";
      }
      var isComposing = !1;
      function extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
        var eventType, fallbackData;
        if (canUseCompositionEvent ? eventType = getCompositionEventType(domEventName) : isComposing ? isFallbackCompositionEnd(domEventName, nativeEvent) && (eventType = "onCompositionEnd") : isFallbackCompositionStart(domEventName, nativeEvent) && (eventType = "onCompositionStart"), !eventType)
          return null;
        useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) && (!isComposing && eventType === "onCompositionStart" ? isComposing = initialize(nativeEventTarget) : eventType === "onCompositionEnd" && isComposing && (fallbackData = getData()));
        var listeners = accumulateTwoPhaseListeners(targetInst, eventType);
        if (listeners.length > 0) {
          var event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);
          if (dispatchQueue.push({
            event,
            listeners
          }), fallbackData)
            event.data = fallbackData;
          else {
            var customData = getDataFromCustomEvent(nativeEvent);
            customData !== null && (event.data = customData);
          }
        }
      }
      function getNativeBeforeInputChars(domEventName, nativeEvent) {
        switch (domEventName) {
          case "compositionend":
            return getDataFromCustomEvent(nativeEvent);
          case "keypress":
            var which = nativeEvent.which;
            return which !== SPACEBAR_CODE ? null : (hasSpaceKeypress = !0, SPACEBAR_CHAR);
          case "textInput":
            var chars = nativeEvent.data;
            return chars === SPACEBAR_CHAR && hasSpaceKeypress ? null : chars;
          default:
            return null;
        }
      }
      function getFallbackBeforeInputChars(domEventName, nativeEvent) {
        if (isComposing) {
          if (domEventName === "compositionend" || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {
            var chars = getData();
            return reset(), isComposing = !1, chars;
          }
          return null;
        }
        switch (domEventName) {
          case "paste":
            return null;
          case "keypress":
            if (!isKeypressCommand(nativeEvent)) {
              if (nativeEvent.char && nativeEvent.char.length > 1)
                return nativeEvent.char;
              if (nativeEvent.which)
                return String.fromCharCode(nativeEvent.which);
            }
            return null;
          case "compositionend":
            return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;
          default:
            return null;
        }
      }
      function extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
        var chars;
        if (canUseTextInputEvent ? chars = getNativeBeforeInputChars(domEventName, nativeEvent) : chars = getFallbackBeforeInputChars(domEventName, nativeEvent), !chars)
          return null;
        var listeners = accumulateTwoPhaseListeners(targetInst, "onBeforeInput");
        if (listeners.length > 0) {
          var event = new SyntheticInputEvent("onBeforeInput", "beforeinput", null, nativeEvent, nativeEventTarget);
          dispatchQueue.push({
            event,
            listeners
          }), event.data = chars;
        }
      }
      function extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
      }
      var supportedInputTypes = {
        color: !0,
        date: !0,
        datetime: !0,
        "datetime-local": !0,
        email: !0,
        month: !0,
        number: !0,
        password: !0,
        range: !0,
        search: !0,
        tel: !0,
        text: !0,
        time: !0,
        url: !0,
        week: !0
      };
      function isTextInputElement(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName === "input" ? !!supportedInputTypes[elem.type] : nodeName === "textarea";
      }
      function isEventSupported(eventNameSuffix) {
        if (!canUseDOM)
          return !1;
        var eventName = "on" + eventNameSuffix, isSupported = eventName in document;
        if (!isSupported) {
          var element = document.createElement("div");
          element.setAttribute(eventName, "return;"), isSupported = typeof element[eventName] == "function";
        }
        return isSupported;
      }
      function registerEvents$1() {
        registerTwoPhaseEvent("onChange", ["change", "click", "focusin", "focusout", "input", "keydown", "keyup", "selectionchange"]);
      }
      function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
        enqueueStateRestore(target);
        var listeners = accumulateTwoPhaseListeners(inst, "onChange");
        if (listeners.length > 0) {
          var event = new SyntheticEvent("onChange", "change", null, nativeEvent, target);
          dispatchQueue.push({
            event,
            listeners
          });
        }
      }
      var activeElement = null, activeElementInst = null;
      function shouldUseChangeEvent(elem) {
        var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName === "select" || nodeName === "input" && elem.type === "file";
      }
      function manualDispatchChangeEvent(nativeEvent) {
        var dispatchQueue = [];
        createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget2(nativeEvent)), batchedUpdates(runEventInBatch, dispatchQueue);
      }
      function runEventInBatch(dispatchQueue) {
        processDispatchQueue(dispatchQueue, 0);
      }
      function getInstIfValueChanged(targetInst) {
        var targetNode = getNodeFromInstance(targetInst);
        if (updateValueIfChanged(targetNode))
          return targetInst;
      }
      function getTargetInstForChangeEvent(domEventName, targetInst) {
        if (domEventName === "change")
          return targetInst;
      }
      var isInputEventSupported = !1;
      canUseDOM && (isInputEventSupported = isEventSupported("input") && (!document.documentMode || document.documentMode > 9));
      function startWatchingForValueChange(target, targetInst) {
        activeElement = target, activeElementInst = targetInst, activeElement.attachEvent("onpropertychange", handlePropertyChange);
      }
      function stopWatchingForValueChange() {
        activeElement && (activeElement.detachEvent("onpropertychange", handlePropertyChange), activeElement = null, activeElementInst = null);
      }
      function handlePropertyChange(nativeEvent) {
        nativeEvent.propertyName === "value" && getInstIfValueChanged(activeElementInst) && manualDispatchChangeEvent(nativeEvent);
      }
      function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
        domEventName === "focusin" ? (stopWatchingForValueChange(), startWatchingForValueChange(target, targetInst)) : domEventName === "focusout" && stopWatchingForValueChange();
      }
      function getTargetInstForInputEventPolyfill(domEventName, targetInst) {
        if (domEventName === "selectionchange" || domEventName === "keyup" || domEventName === "keydown")
          return getInstIfValueChanged(activeElementInst);
      }
      function shouldUseClickEvent(elem) {
        var nodeName = elem.nodeName;
        return nodeName && nodeName.toLowerCase() === "input" && (elem.type === "checkbox" || elem.type === "radio");
      }
      function getTargetInstForClickEvent(domEventName, targetInst) {
        if (domEventName === "click")
          return getInstIfValueChanged(targetInst);
      }
      function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
        if (domEventName === "input" || domEventName === "change")
          return getInstIfValueChanged(targetInst);
      }
      function handleControlledInputBlur(node) {
        var state = node._wrapperState;
        !state || !state.controlled || node.type !== "number" || setDefaultValue(node, "number", node.value);
      }
      function extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var targetNode = targetInst ? getNodeFromInstance(targetInst) : window, getTargetInstFunc, handleEventFunc;
        if (shouldUseChangeEvent(targetNode) ? getTargetInstFunc = getTargetInstForChangeEvent : isTextInputElement(targetNode) ? isInputEventSupported ? getTargetInstFunc = getTargetInstForInputOrChangeEvent : (getTargetInstFunc = getTargetInstForInputEventPolyfill, handleEventFunc = handleEventsForInputEventPolyfill) : shouldUseClickEvent(targetNode) && (getTargetInstFunc = getTargetInstForClickEvent), getTargetInstFunc) {
          var inst = getTargetInstFunc(domEventName, targetInst);
          if (inst) {
            createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);
            return;
          }
        }
        handleEventFunc && handleEventFunc(domEventName, targetNode, targetInst), domEventName === "focusout" && handleControlledInputBlur(targetNode);
      }
      function registerEvents$2() {
        registerDirectEvent("onMouseEnter", ["mouseout", "mouseover"]), registerDirectEvent("onMouseLeave", ["mouseout", "mouseover"]), registerDirectEvent("onPointerEnter", ["pointerout", "pointerover"]), registerDirectEvent("onPointerLeave", ["pointerout", "pointerover"]);
      }
      function extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var isOverEvent = domEventName === "mouseover" || domEventName === "pointerover", isOutEvent = domEventName === "mouseout" || domEventName === "pointerout";
        if (isOverEvent && !isReplayingEvent(nativeEvent)) {
          var related = nativeEvent.relatedTarget || nativeEvent.fromElement;
          if (related && (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)))
            return;
        }
        if (!(!isOutEvent && !isOverEvent)) {
          var win;
          if (nativeEventTarget.window === nativeEventTarget)
            win = nativeEventTarget;
          else {
            var doc = nativeEventTarget.ownerDocument;
            doc ? win = doc.defaultView || doc.parentWindow : win = window;
          }
          var from, to;
          if (isOutEvent) {
            var _related = nativeEvent.relatedTarget || nativeEvent.toElement;
            if (from = targetInst, to = _related ? getClosestInstanceFromNode(_related) : null, to !== null) {
              var nearestMounted = getNearestMountedFiber(to);
              (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) && (to = null);
            }
          } else
            from = null, to = targetInst;
          if (from !== to) {
            var SyntheticEventCtor = SyntheticMouseEvent, leaveEventType = "onMouseLeave", enterEventType = "onMouseEnter", eventTypePrefix = "mouse";
            (domEventName === "pointerout" || domEventName === "pointerover") && (SyntheticEventCtor = SyntheticPointerEvent, leaveEventType = "onPointerLeave", enterEventType = "onPointerEnter", eventTypePrefix = "pointer");
            var fromNode = from == null ? win : getNodeFromInstance(from), toNode = to == null ? win : getNodeFromInstance(to), leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + "leave", from, nativeEvent, nativeEventTarget);
            leave.target = fromNode, leave.relatedTarget = toNode;
            var enter = null, nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);
            if (nativeTargetInst === targetInst) {
              var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + "enter", to, nativeEvent, nativeEventTarget);
              enterEvent.target = toNode, enterEvent.relatedTarget = fromNode, enter = enterEvent;
            }
            accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to);
          }
        }
      }
      function is(x5, y6) {
        return x5 === y6 && (x5 !== 0 || 1 / x5 === 1 / y6) || x5 !== x5 && y6 !== y6;
      }
      var objectIs = typeof Object.is == "function" ? Object.is : is;
      function shallowEqual(objA, objB) {
        if (objectIs(objA, objB))
          return !0;
        if (typeof objA != "object" || objA === null || typeof objB != "object" || objB === null)
          return !1;
        var keysA = Object.keys(objA), keysB = Object.keys(objB);
        if (keysA.length !== keysB.length)
          return !1;
        for (var i7 = 0; i7 < keysA.length; i7++) {
          var currentKey = keysA[i7];
          if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey]))
            return !1;
        }
        return !0;
      }
      function getLeafNode(node) {
        for (; node && node.firstChild; )
          node = node.firstChild;
        return node;
      }
      function getSiblingNode(node) {
        for (; node; ) {
          if (node.nextSibling)
            return node.nextSibling;
          node = node.parentNode;
        }
      }
      function getNodeForCharacterOffset(root2, offset) {
        for (var node = getLeafNode(root2), nodeStart = 0, nodeEnd = 0; node; ) {
          if (node.nodeType === TEXT_NODE) {
            if (nodeEnd = nodeStart + node.textContent.length, nodeStart <= offset && nodeEnd >= offset)
              return {
                node,
                offset: offset - nodeStart
              };
            nodeStart = nodeEnd;
          }
          node = getLeafNode(getSiblingNode(node));
        }
      }
      function getOffsets(outerNode) {
        var ownerDocument = outerNode.ownerDocument, win = ownerDocument && ownerDocument.defaultView || window, selection = win.getSelection && win.getSelection();
        if (!selection || selection.rangeCount === 0)
          return null;
        var anchorNode = selection.anchorNode, anchorOffset = selection.anchorOffset, focusNode = selection.focusNode, focusOffset = selection.focusOffset;
        try {
          anchorNode.nodeType, focusNode.nodeType;
        } catch {
          return null;
        }
        return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
      }
      function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
        var length2 = 0, start = -1, end = -1, indexWithinAnchor = 0, indexWithinFocus = 0, node = outerNode, parentNode = null;
        outer:
          for (; ; ) {
            for (var next = null; node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE) && (start = length2 + anchorOffset), node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE) && (end = length2 + focusOffset), node.nodeType === TEXT_NODE && (length2 += node.nodeValue.length), (next = node.firstChild) !== null; )
              parentNode = node, node = next;
            for (; ; ) {
              if (node === outerNode)
                break outer;
              if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset && (start = length2), parentNode === focusNode && ++indexWithinFocus === focusOffset && (end = length2), (next = node.nextSibling) !== null)
                break;
              node = parentNode, parentNode = node.parentNode;
            }
            node = next;
          }
        return start === -1 || end === -1 ? null : {
          start,
          end
        };
      }
      function setOffsets(node, offsets) {
        var doc = node.ownerDocument || document, win = doc && doc.defaultView || window;
        if (win.getSelection) {
          var selection = win.getSelection(), length2 = node.textContent.length, start = Math.min(offsets.start, length2), end = offsets.end === void 0 ? start : Math.min(offsets.end, length2);
          if (!selection.extend && start > end) {
            var temp = end;
            end = start, start = temp;
          }
          var startMarker = getNodeForCharacterOffset(node, start), endMarker = getNodeForCharacterOffset(node, end);
          if (startMarker && endMarker) {
            if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset)
              return;
            var range = doc.createRange();
            range.setStart(startMarker.node, startMarker.offset), selection.removeAllRanges(), start > end ? (selection.addRange(range), selection.extend(endMarker.node, endMarker.offset)) : (range.setEnd(endMarker.node, endMarker.offset), selection.addRange(range));
          }
        }
      }
      function isTextNode(node) {
        return node && node.nodeType === TEXT_NODE;
      }
      function containsNode(outerNode, innerNode) {
        return !outerNode || !innerNode ? !1 : outerNode === innerNode ? !0 : isTextNode(outerNode) ? !1 : isTextNode(innerNode) ? containsNode(outerNode, innerNode.parentNode) : "contains" in outerNode ? outerNode.contains(innerNode) : outerNode.compareDocumentPosition ? !!(outerNode.compareDocumentPosition(innerNode) & 16) : !1;
      }
      function isInDocument(node) {
        return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
      }
      function isSameOriginFrame(iframe) {
        try {
          return typeof iframe.contentWindow.location.href == "string";
        } catch {
          return !1;
        }
      }
      function getActiveElementDeep() {
        for (var win = window, element = getActiveElement(); element instanceof win.HTMLIFrameElement; ) {
          if (isSameOriginFrame(element))
            win = element.contentWindow;
          else
            return element;
          element = getActiveElement(win.document);
        }
        return element;
      }
      function hasSelectionCapabilities(elem) {
        var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
        return nodeName && (nodeName === "input" && (elem.type === "text" || elem.type === "search" || elem.type === "tel" || elem.type === "url" || elem.type === "password") || nodeName === "textarea" || elem.contentEditable === "true");
      }
      function getSelectionInformation() {
        var focusedElem = getActiveElementDeep();
        return {
          focusedElem,
          selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
        };
      }
      function restoreSelection(priorSelectionInformation) {
        var curFocusedElem = getActiveElementDeep(), priorFocusedElem = priorSelectionInformation.focusedElem, priorSelectionRange = priorSelectionInformation.selectionRange;
        if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
          priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem) && setSelection(priorFocusedElem, priorSelectionRange);
          for (var ancestors = [], ancestor = priorFocusedElem; ancestor = ancestor.parentNode; )
            ancestor.nodeType === ELEMENT_NODE && ancestors.push({
              element: ancestor,
              left: ancestor.scrollLeft,
              top: ancestor.scrollTop
            });
          typeof priorFocusedElem.focus == "function" && priorFocusedElem.focus();
          for (var i7 = 0; i7 < ancestors.length; i7++) {
            var info = ancestors[i7];
            info.element.scrollLeft = info.left, info.element.scrollTop = info.top;
          }
        }
      }
      function getSelection(input) {
        var selection;
        return "selectionStart" in input ? selection = {
          start: input.selectionStart,
          end: input.selectionEnd
        } : selection = getOffsets(input), selection || {
          start: 0,
          end: 0
        };
      }
      function setSelection(input, offsets) {
        var start = offsets.start, end = offsets.end;
        end === void 0 && (end = start), "selectionStart" in input ? (input.selectionStart = start, input.selectionEnd = Math.min(end, input.value.length)) : setOffsets(input, offsets);
      }
      var skipSelectionChangeEvent = canUseDOM && "documentMode" in document && document.documentMode <= 11;
      function registerEvents$3() {
        registerTwoPhaseEvent("onSelect", ["focusout", "contextmenu", "dragend", "focusin", "keydown", "keyup", "mousedown", "mouseup", "selectionchange"]);
      }
      var activeElement$1 = null, activeElementInst$1 = null, lastSelection = null, mouseDown = !1;
      function getSelection$1(node) {
        if ("selectionStart" in node && hasSelectionCapabilities(node))
          return {
            start: node.selectionStart,
            end: node.selectionEnd
          };
        var win = node.ownerDocument && node.ownerDocument.defaultView || window, selection = win.getSelection();
        return {
          anchorNode: selection.anchorNode,
          anchorOffset: selection.anchorOffset,
          focusNode: selection.focusNode,
          focusOffset: selection.focusOffset
        };
      }
      function getEventTargetDocument(eventTarget) {
        return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
      }
      function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
        var doc = getEventTargetDocument(nativeEventTarget);
        if (!(mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc))) {
          var currentSelection = getSelection$1(activeElement$1);
          if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
            lastSelection = currentSelection;
            var listeners = accumulateTwoPhaseListeners(activeElementInst$1, "onSelect");
            if (listeners.length > 0) {
              var event = new SyntheticEvent("onSelect", "select", null, nativeEvent, nativeEventTarget);
              dispatchQueue.push({
                event,
                listeners
              }), event.target = activeElement$1;
            }
          }
        }
      }
      function extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
        switch (domEventName) {
          case "focusin":
            (isTextInputElement(targetNode) || targetNode.contentEditable === "true") && (activeElement$1 = targetNode, activeElementInst$1 = targetInst, lastSelection = null);
            break;
          case "focusout":
            activeElement$1 = null, activeElementInst$1 = null, lastSelection = null;
            break;
          case "mousedown":
            mouseDown = !0;
            break;
          case "contextmenu":
          case "mouseup":
          case "dragend":
            mouseDown = !1, constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
            break;
          case "selectionchange":
            if (skipSelectionChangeEvent)
              break;
          case "keydown":
          case "keyup":
            constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
        }
      }
      function makePrefixMap(styleProp, eventName) {
        var prefixes2 = {};
        return prefixes2[styleProp.toLowerCase()] = eventName.toLowerCase(), prefixes2["Webkit" + styleProp] = "webkit" + eventName, prefixes2["Moz" + styleProp] = "moz" + eventName, prefixes2;
      }
      var vendorPrefixes = {
        animationend: makePrefixMap("Animation", "AnimationEnd"),
        animationiteration: makePrefixMap("Animation", "AnimationIteration"),
        animationstart: makePrefixMap("Animation", "AnimationStart"),
        transitionend: makePrefixMap("Transition", "TransitionEnd")
      }, prefixedEventNames = {}, style2 = {};
      canUseDOM && (style2 = document.createElement("div").style, "AnimationEvent" in window || (delete vendorPrefixes.animationend.animation, delete vendorPrefixes.animationiteration.animation, delete vendorPrefixes.animationstart.animation), "TransitionEvent" in window || delete vendorPrefixes.transitionend.transition);
      function getVendorPrefixedEventName(eventName) {
        if (prefixedEventNames[eventName])
          return prefixedEventNames[eventName];
        if (!vendorPrefixes[eventName])
          return eventName;
        var prefixMap = vendorPrefixes[eventName];
        for (var styleProp in prefixMap)
          if (prefixMap.hasOwnProperty(styleProp) && styleProp in style2)
            return prefixedEventNames[eventName] = prefixMap[styleProp];
        return eventName;
      }
      var ANIMATION_END = getVendorPrefixedEventName("animationend"), ANIMATION_ITERATION = getVendorPrefixedEventName("animationiteration"), ANIMATION_START = getVendorPrefixedEventName("animationstart"), TRANSITION_END = getVendorPrefixedEventName("transitionend"), topLevelEventsToReactNames = /* @__PURE__ */ new Map(), simpleEventPluginEvents = ["abort", "auxClick", "cancel", "canPlay", "canPlayThrough", "click", "close", "contextMenu", "copy", "cut", "drag", "dragEnd", "dragEnter", "dragExit", "dragLeave", "dragOver", "dragStart", "drop", "durationChange", "emptied", "encrypted", "ended", "error", "gotPointerCapture", "input", "invalid", "keyDown", "keyPress", "keyUp", "load", "loadedData", "loadedMetadata", "loadStart", "lostPointerCapture", "mouseDown", "mouseMove", "mouseOut", "mouseOver", "mouseUp", "paste", "pause", "play", "playing", "pointerCancel", "pointerDown", "pointerMove", "pointerOut", "pointerOver", "pointerUp", "progress", "rateChange", "reset", "resize", "seeked", "seeking", "stalled", "submit", "suspend", "timeUpdate", "touchCancel", "touchEnd", "touchStart", "volumeChange", "scroll", "toggle", "touchMove", "waiting", "wheel"];
      function registerSimpleEvent(domEventName, reactName) {
        topLevelEventsToReactNames.set(domEventName, reactName), registerTwoPhaseEvent(reactName, [domEventName]);
      }
      function registerSimpleEvents() {
        for (var i7 = 0; i7 < simpleEventPluginEvents.length; i7++) {
          var eventName = simpleEventPluginEvents[i7], domEventName = eventName.toLowerCase(), capitalizedEvent = eventName[0].toUpperCase() + eventName.slice(1);
          registerSimpleEvent(domEventName, "on" + capitalizedEvent);
        }
        registerSimpleEvent(ANIMATION_END, "onAnimationEnd"), registerSimpleEvent(ANIMATION_ITERATION, "onAnimationIteration"), registerSimpleEvent(ANIMATION_START, "onAnimationStart"), registerSimpleEvent("dblclick", "onDoubleClick"), registerSimpleEvent("focusin", "onFocus"), registerSimpleEvent("focusout", "onBlur"), registerSimpleEvent(TRANSITION_END, "onTransitionEnd");
      }
      function extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        var reactName = topLevelEventsToReactNames.get(domEventName);
        if (reactName !== void 0) {
          var SyntheticEventCtor = SyntheticEvent, reactEventType = domEventName;
          switch (domEventName) {
            case "keypress":
              if (getEventCharCode(nativeEvent) === 0)
                return;
            case "keydown":
            case "keyup":
              SyntheticEventCtor = SyntheticKeyboardEvent;
              break;
            case "focusin":
              reactEventType = "focus", SyntheticEventCtor = SyntheticFocusEvent;
              break;
            case "focusout":
              reactEventType = "blur", SyntheticEventCtor = SyntheticFocusEvent;
              break;
            case "beforeblur":
            case "afterblur":
              SyntheticEventCtor = SyntheticFocusEvent;
              break;
            case "click":
              if (nativeEvent.button === 2)
                return;
            case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            case "mouseout":
            case "mouseover":
            case "contextmenu":
              SyntheticEventCtor = SyntheticMouseEvent;
              break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
              SyntheticEventCtor = SyntheticDragEvent;
              break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
              SyntheticEventCtor = SyntheticTouchEvent;
              break;
            case ANIMATION_END:
            case ANIMATION_ITERATION:
            case ANIMATION_START:
              SyntheticEventCtor = SyntheticAnimationEvent;
              break;
            case TRANSITION_END:
              SyntheticEventCtor = SyntheticTransitionEvent;
              break;
            case "scroll":
              SyntheticEventCtor = SyntheticUIEvent;
              break;
            case "wheel":
              SyntheticEventCtor = SyntheticWheelEvent;
              break;
            case "copy":
            case "cut":
            case "paste":
              SyntheticEventCtor = SyntheticClipboardEvent;
              break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
              SyntheticEventCtor = SyntheticPointerEvent;
              break;
          }
          var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
          {
            var accumulateTargetOnly = !inCapturePhase && // TODO: ideally, we'd eventually add all events from
            // nonDelegatedEvents list in DOMPluginEventSystem.
            // Then we can remove this special list.
            // This is a breaking change that can wait until React 18.
            domEventName === "scroll", _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);
            if (_listeners.length > 0) {
              var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);
              dispatchQueue.push({
                event: _event,
                listeners: _listeners
              });
            }
          }
        }
      }
      registerSimpleEvents(), registerEvents$2(), registerEvents$1(), registerEvents$3(), registerEvents();
      function extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
        extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
        var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0;
        shouldProcessPolyfillPlugins && (extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget), extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget), extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget), extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget));
      }
      var mediaEventTypes = ["abort", "canplay", "canplaythrough", "durationchange", "emptied", "encrypted", "ended", "error", "loadeddata", "loadedmetadata", "loadstart", "pause", "play", "playing", "progress", "ratechange", "resize", "seeked", "seeking", "stalled", "suspend", "timeupdate", "volumechange", "waiting"], nonDelegatedEvents = new Set(["cancel", "close", "invalid", "load", "scroll", "toggle"].concat(mediaEventTypes));
      function executeDispatch(event, listener, currentTarget) {
        var type = event.type || "unknown-event";
        event.currentTarget = currentTarget, invokeGuardedCallbackAndCatchFirstError(type, listener, void 0, event), event.currentTarget = null;
      }
      function processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {
        var previousInstance;
        if (inCapturePhase)
          for (var i7 = dispatchListeners.length - 1; i7 >= 0; i7--) {
            var _dispatchListeners$i = dispatchListeners[i7], instance = _dispatchListeners$i.instance, currentTarget = _dispatchListeners$i.currentTarget, listener = _dispatchListeners$i.listener;
            if (instance !== previousInstance && event.isPropagationStopped())
              return;
            executeDispatch(event, listener, currentTarget), previousInstance = instance;
          }
        else
          for (var _i = 0; _i < dispatchListeners.length; _i++) {
            var _dispatchListeners$_i = dispatchListeners[_i], _instance = _dispatchListeners$_i.instance, _currentTarget = _dispatchListeners$_i.currentTarget, _listener = _dispatchListeners$_i.listener;
            if (_instance !== previousInstance && event.isPropagationStopped())
              return;
            executeDispatch(event, _listener, _currentTarget), previousInstance = _instance;
          }
      }
      function processDispatchQueue(dispatchQueue, eventSystemFlags) {
        for (var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0, i7 = 0; i7 < dispatchQueue.length; i7++) {
          var _dispatchQueue$i = dispatchQueue[i7], event = _dispatchQueue$i.event, listeners = _dispatchQueue$i.listeners;
          processDispatchQueueItemsInOrder(event, listeners, inCapturePhase);
        }
        rethrowCaughtError();
      }
      function dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
        var nativeEventTarget = getEventTarget2(nativeEvent), dispatchQueue = [];
        extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags), processDispatchQueue(dispatchQueue, eventSystemFlags);
      }
      function listenToNonDelegatedEvent(domEventName, targetElement) {
        nonDelegatedEvents.has(domEventName) || error('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', domEventName);
        var isCapturePhaseListener = !1, listenerSet = getEventListenerSet(targetElement), listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);
        listenerSet.has(listenerSetKey) || (addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener), listenerSet.add(listenerSetKey));
      }
      function listenToNativeEvent(domEventName, isCapturePhaseListener, target) {
        nonDelegatedEvents.has(domEventName) && !isCapturePhaseListener && error('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', domEventName);
        var eventSystemFlags = 0;
        isCapturePhaseListener && (eventSystemFlags |= IS_CAPTURE_PHASE), addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
      }
      var listeningMarker = "_reactListening" + Math.random().toString(36).slice(2);
      function listenToAllSupportedEvents(rootContainerElement) {
        if (!rootContainerElement[listeningMarker]) {
          rootContainerElement[listeningMarker] = !0, allNativeEvents.forEach(function(domEventName) {
            domEventName !== "selectionchange" && (nonDelegatedEvents.has(domEventName) || listenToNativeEvent(domEventName, !1, rootContainerElement), listenToNativeEvent(domEventName, !0, rootContainerElement));
          });
          var ownerDocument = rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
          ownerDocument !== null && (ownerDocument[listeningMarker] || (ownerDocument[listeningMarker] = !0, listenToNativeEvent("selectionchange", !1, ownerDocument)));
        }
      }
      function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {
        var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags), isPassiveListener = void 0;
        passiveBrowserEventsSupported && (domEventName === "touchstart" || domEventName === "touchmove" || domEventName === "wheel") && (isPassiveListener = !0), targetContainer = targetContainer;
        var unsubscribeListener;
        isCapturePhaseListener ? isPassiveListener !== void 0 ? unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener) : unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener) : isPassiveListener !== void 0 ? unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener) : unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);
      }
      function isMatchingRootContainer(grandContainer, targetContainer) {
        return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;
      }
      function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
        var ancestorInst = targetInst;
        if (!(eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) && !(eventSystemFlags & IS_NON_DELEGATED)) {
          var targetContainerNode = targetContainer;
          if (targetInst !== null) {
            var node = targetInst;
            mainLoop:
              for (; ; ) {
                if (node === null)
                  return;
                var nodeTag = node.tag;
                if (nodeTag === HostRoot || nodeTag === HostPortal) {
                  var container = node.stateNode.containerInfo;
                  if (isMatchingRootContainer(container, targetContainerNode))
                    break;
                  if (nodeTag === HostPortal)
                    for (var grandNode = node.return; grandNode !== null; ) {
                      var grandTag = grandNode.tag;
                      if (grandTag === HostRoot || grandTag === HostPortal) {
                        var grandContainer = grandNode.stateNode.containerInfo;
                        if (isMatchingRootContainer(grandContainer, targetContainerNode))
                          return;
                      }
                      grandNode = grandNode.return;
                    }
                  for (; container !== null; ) {
                    var parentNode = getClosestInstanceFromNode(container);
                    if (parentNode === null)
                      return;
                    var parentTag = parentNode.tag;
                    if (parentTag === HostComponent || parentTag === HostText) {
                      node = ancestorInst = parentNode;
                      continue mainLoop;
                    }
                    container = container.parentNode;
                  }
                }
                node = node.return;
              }
          }
        }
        batchedUpdates(function() {
          return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);
        });
      }
      function createDispatchListener(instance, listener, currentTarget) {
        return {
          instance,
          listener,
          currentTarget
        };
      }
      function accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly, nativeEvent) {
        for (var captureName = reactName !== null ? reactName + "Capture" : null, reactEventName = inCapturePhase ? captureName : reactName, listeners = [], instance = targetFiber, lastHostComponent = null; instance !== null; ) {
          var _instance2 = instance, stateNode = _instance2.stateNode, tag = _instance2.tag;
          if (tag === HostComponent && stateNode !== null && (lastHostComponent = stateNode, reactEventName !== null)) {
            var listener = getListener(instance, reactEventName);
            listener != null && listeners.push(createDispatchListener(instance, listener, lastHostComponent));
          }
          if (accumulateTargetOnly)
            break;
          instance = instance.return;
        }
        return listeners;
      }
      function accumulateTwoPhaseListeners(targetFiber, reactName) {
        for (var captureName = reactName + "Capture", listeners = [], instance = targetFiber; instance !== null; ) {
          var _instance3 = instance, stateNode = _instance3.stateNode, tag = _instance3.tag;
          if (tag === HostComponent && stateNode !== null) {
            var currentTarget = stateNode, captureListener = getListener(instance, captureName);
            captureListener != null && listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
            var bubbleListener = getListener(instance, reactName);
            bubbleListener != null && listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
          }
          instance = instance.return;
        }
        return listeners;
      }
      function getParent(inst) {
        if (inst === null)
          return null;
        do
          inst = inst.return;
        while (inst && inst.tag !== HostComponent);
        return inst || null;
      }
      function getLowestCommonAncestor(instA, instB) {
        for (var nodeA = instA, nodeB = instB, depthA = 0, tempA = nodeA; tempA; tempA = getParent(tempA))
          depthA++;
        for (var depthB = 0, tempB = nodeB; tempB; tempB = getParent(tempB))
          depthB++;
        for (; depthA - depthB > 0; )
          nodeA = getParent(nodeA), depthA--;
        for (; depthB - depthA > 0; )
          nodeB = getParent(nodeB), depthB--;
        for (var depth = depthA; depth--; ) {
          if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate)
            return nodeA;
          nodeA = getParent(nodeA), nodeB = getParent(nodeB);
        }
        return null;
      }
      function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
        for (var registrationName = event._reactName, listeners = [], instance = target; instance !== null && instance !== common; ) {
          var _instance4 = instance, alternate = _instance4.alternate, stateNode = _instance4.stateNode, tag = _instance4.tag;
          if (alternate !== null && alternate === common)
            break;
          if (tag === HostComponent && stateNode !== null) {
            var currentTarget = stateNode;
            if (inCapturePhase) {
              var captureListener = getListener(instance, registrationName);
              captureListener != null && listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
            } else if (!inCapturePhase) {
              var bubbleListener = getListener(instance, registrationName);
              bubbleListener != null && listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
            }
          }
          instance = instance.return;
        }
        listeners.length !== 0 && dispatchQueue.push({
          event,
          listeners
        });
      }
      function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to) {
        var common = from && to ? getLowestCommonAncestor(from, to) : null;
        from !== null && accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, !1), to !== null && enterEvent !== null && accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to, common, !0);
      }
      function getListenerSetKey(domEventName, capture) {
        return domEventName + "__" + (capture ? "capture" : "bubble");
      }
      var didWarnInvalidHydration = !1, DANGEROUSLY_SET_INNER_HTML = "dangerouslySetInnerHTML", SUPPRESS_CONTENT_EDITABLE_WARNING = "suppressContentEditableWarning", SUPPRESS_HYDRATION_WARNING = "suppressHydrationWarning", AUTOFOCUS = "autoFocus", CHILDREN = "children", STYLE = "style", HTML$1 = "__html", warnedUnknownTags, validatePropertiesInDevelopment, warnForPropDifference, warnForExtraAttributes, warnForInvalidEventListener, canDiffStyleForHydrationWarning, normalizeHTML;
      warnedUnknownTags = {
        // There are working polyfills for <dialog>. Let people use it.
        dialog: !0,
        // Electron ships a custom <webview> tag to display external web content in
        // an isolated frame and process.
        // This tag is not present in non Electron environments such as JSDom which
        // is often used for testing purposes.
        // @see https://electronjs.org/docs/api/webview-tag
        webview: !0
      }, validatePropertiesInDevelopment = function(type, props) {
        validateProperties(type, props), validateProperties$1(type, props), validateProperties$2(type, props, {
          registrationNameDependencies,
          possibleRegistrationNames
        });
      }, canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode, warnForPropDifference = function(propName, serverValue, clientValue) {
        if (!didWarnInvalidHydration) {
          var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue), normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
          normalizedServerValue !== normalizedClientValue && (didWarnInvalidHydration = !0, error("Prop `%s` did not match. Server: %s Client: %s", propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue)));
        }
      }, warnForExtraAttributes = function(attributeNames) {
        if (!didWarnInvalidHydration) {
          didWarnInvalidHydration = !0;
          var names = [];
          attributeNames.forEach(function(name) {
            names.push(name);
          }), error("Extra attributes from the server: %s", names);
        }
      }, warnForInvalidEventListener = function(registrationName, listener) {
        listener === !1 ? error("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", registrationName, registrationName, registrationName) : error("Expected `%s` listener to be a function, instead got a value of `%s` type.", registrationName, typeof listener);
      }, normalizeHTML = function(parent, html) {
        var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
        return testElement.innerHTML = html, testElement.innerHTML;
      };
      var NORMALIZE_NEWLINES_REGEX = /\r\n?/g, NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;
      function normalizeMarkupForTextOrAttribute(markup) {
        checkHtmlStringCoercion(markup);
        var markupString = typeof markup == "string" ? markup : "" + markup;
        return markupString.replace(NORMALIZE_NEWLINES_REGEX, `
`).replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, "");
      }
      function checkForUnmatchedText(serverText, clientText, isConcurrentMode, shouldWarnDev) {
        var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText), normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
        if (normalizedServerText !== normalizedClientText && (shouldWarnDev && (didWarnInvalidHydration || (didWarnInvalidHydration = !0, error('Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText))), isConcurrentMode && enableClientRenderFallbackOnTextMismatch))
          throw new Error("Text content does not match server-rendered HTML.");
      }
      function getOwnerDocumentFromRootContainer(rootContainerElement) {
        return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
      }
      function noop2() {
      }
      function trapClickOnNonInteractiveElement(node) {
        node.onclick = noop2;
      }
      function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
        for (var propKey in nextProps)
          if (nextProps.hasOwnProperty(propKey)) {
            var nextProp = nextProps[propKey];
            if (propKey === STYLE)
              nextProp && Object.freeze(nextProp), setValueForStyles(domElement, nextProp);
            else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
              var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
              nextHtml != null && setInnerHTML(domElement, nextHtml);
            } else if (propKey === CHILDREN)
              if (typeof nextProp == "string") {
                var canSetTextContent = tag !== "textarea" || nextProp !== "";
                canSetTextContent && setTextContent(domElement, nextProp);
              } else
                typeof nextProp == "number" && setTextContent(domElement, "" + nextProp);
            else
              propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || propKey === AUTOFOCUS || (registrationNameDependencies.hasOwnProperty(propKey) ? nextProp != null && (typeof nextProp != "function" && warnForInvalidEventListener(propKey, nextProp), propKey === "onScroll" && listenToNonDelegatedEvent("scroll", domElement)) : nextProp != null && setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag));
          }
      }
      function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
        for (var i7 = 0; i7 < updatePayload.length; i7 += 2) {
          var propKey = updatePayload[i7], propValue = updatePayload[i7 + 1];
          propKey === STYLE ? setValueForStyles(domElement, propValue) : propKey === DANGEROUSLY_SET_INNER_HTML ? setInnerHTML(domElement, propValue) : propKey === CHILDREN ? setTextContent(domElement, propValue) : setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
        }
      }
      function createElement17(type, props, rootContainerElement, parentNamespace) {
        var isCustomComponentTag, ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement), domElement, namespaceURI = parentNamespace;
        if (namespaceURI === HTML_NAMESPACE && (namespaceURI = getIntrinsicNamespace(type)), namespaceURI === HTML_NAMESPACE) {
          if (isCustomComponentTag = isCustomComponent(type, props), !isCustomComponentTag && type !== type.toLowerCase() && error("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type), type === "script") {
            var div = ownerDocument.createElement("div");
            div.innerHTML = "<script></script>";
            var firstChild = div.firstChild;
            domElement = div.removeChild(firstChild);
          } else if (typeof props.is == "string")
            domElement = ownerDocument.createElement(type, {
              is: props.is
            });
          else if (domElement = ownerDocument.createElement(type), type === "select") {
            var node = domElement;
            props.multiple ? node.multiple = !0 : props.size && (node.size = props.size);
          }
        } else
          domElement = ownerDocument.createElementNS(namespaceURI, type);
        return namespaceURI === HTML_NAMESPACE && !isCustomComponentTag && Object.prototype.toString.call(domElement) === "[object HTMLUnknownElement]" && !hasOwnProperty.call(warnedUnknownTags, type) && (warnedUnknownTags[type] = !0, error("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", type)), domElement;
      }
      function createTextNode(text, rootContainerElement) {
        return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
      }
      function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
        var isCustomComponentTag = isCustomComponent(tag, rawProps);
        validatePropertiesInDevelopment(tag, rawProps);
        var props;
        switch (tag) {
          case "dialog":
            listenToNonDelegatedEvent("cancel", domElement), listenToNonDelegatedEvent("close", domElement), props = rawProps;
            break;
          case "iframe":
          case "object":
          case "embed":
            listenToNonDelegatedEvent("load", domElement), props = rawProps;
            break;
          case "video":
          case "audio":
            for (var i7 = 0; i7 < mediaEventTypes.length; i7++)
              listenToNonDelegatedEvent(mediaEventTypes[i7], domElement);
            props = rawProps;
            break;
          case "source":
            listenToNonDelegatedEvent("error", domElement), props = rawProps;
            break;
          case "img":
          case "image":
          case "link":
            listenToNonDelegatedEvent("error", domElement), listenToNonDelegatedEvent("load", domElement), props = rawProps;
            break;
          case "details":
            listenToNonDelegatedEvent("toggle", domElement), props = rawProps;
            break;
          case "input":
            initWrapperState(domElement, rawProps), props = getHostProps(domElement, rawProps), listenToNonDelegatedEvent("invalid", domElement);
            break;
          case "option":
            validateProps(domElement, rawProps), props = rawProps;
            break;
          case "select":
            initWrapperState$1(domElement, rawProps), props = getHostProps$1(domElement, rawProps), listenToNonDelegatedEvent("invalid", domElement);
            break;
          case "textarea":
            initWrapperState$2(domElement, rawProps), props = getHostProps$2(domElement, rawProps), listenToNonDelegatedEvent("invalid", domElement);
            break;
          default:
            props = rawProps;
        }
        switch (assertValidProps(tag, props), setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag), tag) {
          case "input":
            track(domElement), postMountWrapper(domElement, rawProps, !1);
            break;
          case "textarea":
            track(domElement), postMountWrapper$3(domElement);
            break;
          case "option":
            postMountWrapper$1(domElement, rawProps);
            break;
          case "select":
            postMountWrapper$2(domElement, rawProps);
            break;
          default:
            typeof props.onClick == "function" && trapClickOnNonInteractiveElement(domElement);
            break;
        }
      }
      function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
        validatePropertiesInDevelopment(tag, nextRawProps);
        var updatePayload = null, lastProps, nextProps;
        switch (tag) {
          case "input":
            lastProps = getHostProps(domElement, lastRawProps), nextProps = getHostProps(domElement, nextRawProps), updatePayload = [];
            break;
          case "select":
            lastProps = getHostProps$1(domElement, lastRawProps), nextProps = getHostProps$1(domElement, nextRawProps), updatePayload = [];
            break;
          case "textarea":
            lastProps = getHostProps$2(domElement, lastRawProps), nextProps = getHostProps$2(domElement, nextRawProps), updatePayload = [];
            break;
          default:
            lastProps = lastRawProps, nextProps = nextRawProps, typeof lastProps.onClick != "function" && typeof nextProps.onClick == "function" && trapClickOnNonInteractiveElement(domElement);
            break;
        }
        assertValidProps(tag, nextProps);
        var propKey, styleName, styleUpdates = null;
        for (propKey in lastProps)
          if (!(nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null))
            if (propKey === STYLE) {
              var lastStyle = lastProps[propKey];
              for (styleName in lastStyle)
                lastStyle.hasOwnProperty(styleName) && (styleUpdates || (styleUpdates = {}), styleUpdates[styleName] = "");
            } else
              propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || propKey === AUTOFOCUS || (registrationNameDependencies.hasOwnProperty(propKey) ? updatePayload || (updatePayload = []) : (updatePayload = updatePayload || []).push(propKey, null));
        for (propKey in nextProps) {
          var nextProp = nextProps[propKey], lastProp = lastProps != null ? lastProps[propKey] : void 0;
          if (!(!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null))
            if (propKey === STYLE)
              if (nextProp && Object.freeze(nextProp), lastProp) {
                for (styleName in lastProp)
                  lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName)) && (styleUpdates || (styleUpdates = {}), styleUpdates[styleName] = "");
                for (styleName in nextProp)
                  nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName] && (styleUpdates || (styleUpdates = {}), styleUpdates[styleName] = nextProp[styleName]);
              } else
                styleUpdates || (updatePayload || (updatePayload = []), updatePayload.push(propKey, styleUpdates)), styleUpdates = nextProp;
            else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
              var nextHtml = nextProp ? nextProp[HTML$1] : void 0, lastHtml = lastProp ? lastProp[HTML$1] : void 0;
              nextHtml != null && lastHtml !== nextHtml && (updatePayload = updatePayload || []).push(propKey, nextHtml);
            } else
              propKey === CHILDREN ? (typeof nextProp == "string" || typeof nextProp == "number") && (updatePayload = updatePayload || []).push(propKey, "" + nextProp) : propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || (registrationNameDependencies.hasOwnProperty(propKey) ? (nextProp != null && (typeof nextProp != "function" && warnForInvalidEventListener(propKey, nextProp), propKey === "onScroll" && listenToNonDelegatedEvent("scroll", domElement)), !updatePayload && lastProp !== nextProp && (updatePayload = [])) : (updatePayload = updatePayload || []).push(propKey, nextProp));
        }
        return styleUpdates && (validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]), (updatePayload = updatePayload || []).push(STYLE, styleUpdates)), updatePayload;
      }
      function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
        tag === "input" && nextRawProps.type === "radio" && nextRawProps.name != null && updateChecked(domElement, nextRawProps);
        var wasCustomComponentTag = isCustomComponent(tag, lastRawProps), isCustomComponentTag = isCustomComponent(tag, nextRawProps);
        switch (updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag), tag) {
          case "input":
            updateWrapper(domElement, nextRawProps);
            break;
          case "textarea":
            updateWrapper$1(domElement, nextRawProps);
            break;
          case "select":
            postUpdateWrapper(domElement, nextRawProps);
            break;
        }
      }
      function getPossibleStandardName(propName) {
        {
          var lowerCasedName = propName.toLowerCase();
          return possibleStandardNames.hasOwnProperty(lowerCasedName) && possibleStandardNames[lowerCasedName] || null;
        }
      }
      function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement, isConcurrentMode, shouldWarnDev) {
        var isCustomComponentTag, extraAttributeNames;
        switch (isCustomComponentTag = isCustomComponent(tag, rawProps), validatePropertiesInDevelopment(tag, rawProps), tag) {
          case "dialog":
            listenToNonDelegatedEvent("cancel", domElement), listenToNonDelegatedEvent("close", domElement);
            break;
          case "iframe":
          case "object":
          case "embed":
            listenToNonDelegatedEvent("load", domElement);
            break;
          case "video":
          case "audio":
            for (var i7 = 0; i7 < mediaEventTypes.length; i7++)
              listenToNonDelegatedEvent(mediaEventTypes[i7], domElement);
            break;
          case "source":
            listenToNonDelegatedEvent("error", domElement);
            break;
          case "img":
          case "image":
          case "link":
            listenToNonDelegatedEvent("error", domElement), listenToNonDelegatedEvent("load", domElement);
            break;
          case "details":
            listenToNonDelegatedEvent("toggle", domElement);
            break;
          case "input":
            initWrapperState(domElement, rawProps), listenToNonDelegatedEvent("invalid", domElement);
            break;
          case "option":
            validateProps(domElement, rawProps);
            break;
          case "select":
            initWrapperState$1(domElement, rawProps), listenToNonDelegatedEvent("invalid", domElement);
            break;
          case "textarea":
            initWrapperState$2(domElement, rawProps), listenToNonDelegatedEvent("invalid", domElement);
            break;
        }
        assertValidProps(tag, rawProps);
        {
          extraAttributeNames = /* @__PURE__ */ new Set();
          for (var attributes = domElement.attributes, _i = 0; _i < attributes.length; _i++) {
            var name = attributes[_i].name.toLowerCase();
            switch (name) {
              case "value":
                break;
              case "checked":
                break;
              case "selected":
                break;
              default:
                extraAttributeNames.add(attributes[_i].name);
            }
          }
        }
        var updatePayload = null;
        for (var propKey in rawProps)
          if (rawProps.hasOwnProperty(propKey)) {
            var nextProp = rawProps[propKey];
            if (propKey === CHILDREN)
              typeof nextProp == "string" ? domElement.textContent !== nextProp && (rawProps[SUPPRESS_HYDRATION_WARNING] !== !0 && checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev), updatePayload = [CHILDREN, nextProp]) : typeof nextProp == "number" && domElement.textContent !== "" + nextProp && (rawProps[SUPPRESS_HYDRATION_WARNING] !== !0 && checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev), updatePayload = [CHILDREN, "" + nextProp]);
            else if (registrationNameDependencies.hasOwnProperty(propKey))
              nextProp != null && (typeof nextProp != "function" && warnForInvalidEventListener(propKey, nextProp), propKey === "onScroll" && listenToNonDelegatedEvent("scroll", domElement));
            else if (shouldWarnDev && // Convince Flow we've calculated it (it's DEV-only in this method.)
            typeof isCustomComponentTag == "boolean") {
              var serverValue = void 0, propertyInfo = isCustomComponentTag && enableCustomElementPropertySupport ? null : getPropertyInfo(propKey);
              if (rawProps[SUPPRESS_HYDRATION_WARNING] !== !0) {
                if (!(propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || // Controlled attributes are not validated
                // TODO: Only ignore them on controlled tags.
                propKey === "value" || propKey === "checked" || propKey === "selected")) {
                  if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                    var serverHTML = domElement.innerHTML, nextHtml = nextProp ? nextProp[HTML$1] : void 0;
                    if (nextHtml != null) {
                      var expectedHTML = normalizeHTML(domElement, nextHtml);
                      expectedHTML !== serverHTML && warnForPropDifference(propKey, serverHTML, expectedHTML);
                    }
                  } else if (propKey === STYLE) {
                    if (extraAttributeNames.delete(propKey), canDiffStyleForHydrationWarning) {
                      var expectedStyle = createDangerousStringForStyles(nextProp);
                      serverValue = domElement.getAttribute("style"), expectedStyle !== serverValue && warnForPropDifference(propKey, serverValue, expectedStyle);
                    }
                  } else if (isCustomComponentTag && !enableCustomElementPropertySupport)
                    extraAttributeNames.delete(propKey.toLowerCase()), serverValue = getValueForAttribute(domElement, propKey, nextProp), nextProp !== serverValue && warnForPropDifference(propKey, serverValue, nextProp);
                  else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
                    var isMismatchDueToBadCasing = !1;
                    if (propertyInfo !== null)
                      extraAttributeNames.delete(propertyInfo.attributeName), serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
                    else {
                      var ownNamespace = parentNamespace;
                      if (ownNamespace === HTML_NAMESPACE && (ownNamespace = getIntrinsicNamespace(tag)), ownNamespace === HTML_NAMESPACE)
                        extraAttributeNames.delete(propKey.toLowerCase());
                      else {
                        var standardName = getPossibleStandardName(propKey);
                        standardName !== null && standardName !== propKey && (isMismatchDueToBadCasing = !0, extraAttributeNames.delete(standardName)), extraAttributeNames.delete(propKey);
                      }
                      serverValue = getValueForAttribute(domElement, propKey, nextProp);
                    }
                    var dontWarnCustomElement = enableCustomElementPropertySupport;
                    !dontWarnCustomElement && nextProp !== serverValue && !isMismatchDueToBadCasing && warnForPropDifference(propKey, serverValue, nextProp);
                  }
                }
              }
            }
          }
        switch (shouldWarnDev && // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.size > 0 && rawProps[SUPPRESS_HYDRATION_WARNING] !== !0 && warnForExtraAttributes(extraAttributeNames), tag) {
          case "input":
            track(domElement), postMountWrapper(domElement, rawProps, !0);
            break;
          case "textarea":
            track(domElement), postMountWrapper$3(domElement);
            break;
          case "select":
          case "option":
            break;
          default:
            typeof rawProps.onClick == "function" && trapClickOnNonInteractiveElement(domElement);
            break;
        }
        return updatePayload;
      }
      function diffHydratedText(textNode, text, isConcurrentMode) {
        var isDifferent = textNode.nodeValue !== text;
        return isDifferent;
      }
      function warnForDeletedHydratableElement(parentNode, child) {
        {
          if (didWarnInvalidHydration)
            return;
          didWarnInvalidHydration = !0, error("Did not expect server HTML to contain a <%s> in <%s>.", child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
        }
      }
      function warnForDeletedHydratableText(parentNode, child) {
        {
          if (didWarnInvalidHydration)
            return;
          didWarnInvalidHydration = !0, error('Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
        }
      }
      function warnForInsertedHydratedElement(parentNode, tag, props) {
        {
          if (didWarnInvalidHydration)
            return;
          didWarnInvalidHydration = !0, error("Expected server HTML to contain a matching <%s> in <%s>.", tag, parentNode.nodeName.toLowerCase());
        }
      }
      function warnForInsertedHydratedText(parentNode, text) {
        {
          if (text === "" || didWarnInvalidHydration)
            return;
          didWarnInvalidHydration = !0, error('Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
        }
      }
      function restoreControlledState$3(domElement, tag, props) {
        switch (tag) {
          case "input":
            restoreControlledState(domElement, props);
            return;
          case "textarea":
            restoreControlledState$2(domElement, props);
            return;
          case "select":
            restoreControlledState$1(domElement, props);
            return;
        }
      }
      var validateDOMNesting = function() {
      }, updatedAncestorInfo = function() {
      };
      {
        var specialTags = ["address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "main", "marquee", "menu", "menuitem", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "source", "style", "summary", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "title", "tr", "track", "ul", "wbr", "xmp"], inScopeTags = [
          "applet",
          "caption",
          "html",
          "table",
          "td",
          "th",
          "marquee",
          "object",
          "template",
          // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
          // TODO: Distinguish by namespace here -- for <title>, including it here
          // errs on the side of fewer warnings
          "foreignObject",
          "desc",
          "title"
        ], buttonScopeTags = inScopeTags.concat(["button"]), impliedEndTags = ["dd", "dt", "li", "option", "optgroup", "p", "rp", "rt"], emptyAncestorInfo = {
          current: null,
          formTag: null,
          aTagInScope: null,
          buttonTagInScope: null,
          nobrTagInScope: null,
          pTagInButtonScope: null,
          listItemTagAutoclosing: null,
          dlItemTagAutoclosing: null
        };
        updatedAncestorInfo = function(oldInfo, tag) {
          var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo), info = {
            tag
          };
          return inScopeTags.indexOf(tag) !== -1 && (ancestorInfo.aTagInScope = null, ancestorInfo.buttonTagInScope = null, ancestorInfo.nobrTagInScope = null), buttonScopeTags.indexOf(tag) !== -1 && (ancestorInfo.pTagInButtonScope = null), specialTags.indexOf(tag) !== -1 && tag !== "address" && tag !== "div" && tag !== "p" && (ancestorInfo.listItemTagAutoclosing = null, ancestorInfo.dlItemTagAutoclosing = null), ancestorInfo.current = info, tag === "form" && (ancestorInfo.formTag = info), tag === "a" && (ancestorInfo.aTagInScope = info), tag === "button" && (ancestorInfo.buttonTagInScope = info), tag === "nobr" && (ancestorInfo.nobrTagInScope = info), tag === "p" && (ancestorInfo.pTagInButtonScope = info), tag === "li" && (ancestorInfo.listItemTagAutoclosing = info), (tag === "dd" || tag === "dt") && (ancestorInfo.dlItemTagAutoclosing = info), ancestorInfo;
        };
        var isTagValidWithParent = function(tag, parentTag) {
          switch (parentTag) {
            case "select":
              return tag === "option" || tag === "optgroup" || tag === "#text";
            case "optgroup":
              return tag === "option" || tag === "#text";
            case "option":
              return tag === "#text";
            case "tr":
              return tag === "th" || tag === "td" || tag === "style" || tag === "script" || tag === "template";
            case "tbody":
            case "thead":
            case "tfoot":
              return tag === "tr" || tag === "style" || tag === "script" || tag === "template";
            case "colgroup":
              return tag === "col" || tag === "template";
            case "table":
              return tag === "caption" || tag === "colgroup" || tag === "tbody" || tag === "tfoot" || tag === "thead" || tag === "style" || tag === "script" || tag === "template";
            case "head":
              return tag === "base" || tag === "basefont" || tag === "bgsound" || tag === "link" || tag === "meta" || tag === "title" || tag === "noscript" || tag === "noframes" || tag === "style" || tag === "script" || tag === "template";
            case "html":
              return tag === "head" || tag === "body" || tag === "frameset";
            case "frameset":
              return tag === "frame";
            case "#document":
              return tag === "html";
          }
          switch (tag) {
            case "h1":
            case "h2":
            case "h3":
            case "h4":
            case "h5":
            case "h6":
              return parentTag !== "h1" && parentTag !== "h2" && parentTag !== "h3" && parentTag !== "h4" && parentTag !== "h5" && parentTag !== "h6";
            case "rp":
            case "rt":
              return impliedEndTags.indexOf(parentTag) === -1;
            case "body":
            case "caption":
            case "col":
            case "colgroup":
            case "frameset":
            case "frame":
            case "head":
            case "html":
            case "tbody":
            case "td":
            case "tfoot":
            case "th":
            case "thead":
            case "tr":
              return parentTag == null;
          }
          return !0;
        }, findInvalidAncestorForTag = function(tag, ancestorInfo) {
          switch (tag) {
            case "address":
            case "article":
            case "aside":
            case "blockquote":
            case "center":
            case "details":
            case "dialog":
            case "dir":
            case "div":
            case "dl":
            case "fieldset":
            case "figcaption":
            case "figure":
            case "footer":
            case "header":
            case "hgroup":
            case "main":
            case "menu":
            case "nav":
            case "ol":
            case "p":
            case "section":
            case "summary":
            case "ul":
            case "pre":
            case "listing":
            case "table":
            case "hr":
            case "xmp":
            case "h1":
            case "h2":
            case "h3":
            case "h4":
            case "h5":
            case "h6":
              return ancestorInfo.pTagInButtonScope;
            case "form":
              return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
            case "li":
              return ancestorInfo.listItemTagAutoclosing;
            case "dd":
            case "dt":
              return ancestorInfo.dlItemTagAutoclosing;
            case "button":
              return ancestorInfo.buttonTagInScope;
            case "a":
              return ancestorInfo.aTagInScope;
            case "nobr":
              return ancestorInfo.nobrTagInScope;
          }
          return null;
        }, didWarn$1 = {};
        validateDOMNesting = function(childTag, childText, ancestorInfo) {
          ancestorInfo = ancestorInfo || emptyAncestorInfo;
          var parentInfo = ancestorInfo.current, parentTag = parentInfo && parentInfo.tag;
          childText != null && (childTag != null && error("validateDOMNesting: when childText is passed, childTag should be null"), childTag = "#text");
          var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo, invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo), invalidParentOrAncestor = invalidParent || invalidAncestor;
          if (invalidParentOrAncestor) {
            var ancestorTag = invalidParentOrAncestor.tag, warnKey = !!invalidParent + "|" + childTag + "|" + ancestorTag;
            if (!didWarn$1[warnKey]) {
              didWarn$1[warnKey] = !0;
              var tagDisplayName = childTag, whitespaceInfo = "";
              if (childTag === "#text" ? /\S/.test(childText) ? tagDisplayName = "Text nodes" : (tagDisplayName = "Whitespace text nodes", whitespaceInfo = " Make sure you don't have any extra whitespace between tags on each line of your source code.") : tagDisplayName = "<" + childTag + ">", invalidParent) {
                var info = "";
                ancestorTag === "table" && childTag === "tr" && (info += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser."), error("validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s", tagDisplayName, ancestorTag, whitespaceInfo, info);
              } else
                error("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", tagDisplayName, ancestorTag);
            }
          }
        };
      }
      var SUPPRESS_HYDRATION_WARNING$1 = "suppressHydrationWarning", SUSPENSE_START_DATA = "$", SUSPENSE_END_DATA = "/$", SUSPENSE_PENDING_START_DATA = "$?", SUSPENSE_FALLBACK_START_DATA = "$!", STYLE$1 = "style", eventsEnabled = null, selectionInformation = null;
      function getRootHostContext(rootContainerInstance) {
        var type, namespace, nodeType = rootContainerInstance.nodeType;
        switch (nodeType) {
          case DOCUMENT_NODE:
          case DOCUMENT_FRAGMENT_NODE: {
            type = nodeType === DOCUMENT_NODE ? "#document" : "#fragment";
            var root2 = rootContainerInstance.documentElement;
            namespace = root2 ? root2.namespaceURI : getChildNamespace(null, "");
            break;
          }
          default: {
            var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance, ownNamespace = container.namespaceURI || null;
            type = container.tagName, namespace = getChildNamespace(ownNamespace, type);
            break;
          }
        }
        {
          var validatedTag = type.toLowerCase(), ancestorInfo = updatedAncestorInfo(null, validatedTag);
          return {
            namespace,
            ancestorInfo
          };
        }
      }
      function getChildHostContext(parentHostContext, type, rootContainerInstance) {
        {
          var parentHostContextDev = parentHostContext, namespace = getChildNamespace(parentHostContextDev.namespace, type), ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
          return {
            namespace,
            ancestorInfo
          };
        }
      }
      function getPublicInstance(instance) {
        return instance;
      }
      function prepareForCommit(containerInfo) {
        eventsEnabled = isEnabled(), selectionInformation = getSelectionInformation();
        var activeInstance = null;
        return setEnabled(!1), activeInstance;
      }
      function resetAfterCommit(containerInfo) {
        restoreSelection(selectionInformation), setEnabled(eventsEnabled), eventsEnabled = null, selectionInformation = null;
      }
      function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
        var parentNamespace;
        {
          var hostContextDev = hostContext;
          if (validateDOMNesting(type, null, hostContextDev.ancestorInfo), typeof props.children == "string" || typeof props.children == "number") {
            var string = "" + props.children, ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
            validateDOMNesting(null, string, ownAncestorInfo);
          }
          parentNamespace = hostContextDev.namespace;
        }
        var domElement = createElement17(type, props, rootContainerInstance, parentNamespace);
        return precacheFiberNode(internalInstanceHandle, domElement), updateFiberProps(domElement, props), domElement;
      }
      function appendInitialChild(parentInstance, child) {
        parentInstance.appendChild(child);
      }
      function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
        switch (setInitialProperties(domElement, type, props, rootContainerInstance), type) {
          case "button":
          case "input":
          case "select":
          case "textarea":
            return !!props.autoFocus;
          case "img":
            return !0;
          default:
            return !1;
        }
      }
      function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
        {
          var hostContextDev = hostContext;
          if (typeof newProps.children != typeof oldProps.children && (typeof newProps.children == "string" || typeof newProps.children == "number")) {
            var string = "" + newProps.children, ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
            validateDOMNesting(null, string, ownAncestorInfo);
          }
        }
        return diffProperties(domElement, type, oldProps, newProps);
      }
      function shouldSetTextContent(type, props) {
        return type === "textarea" || type === "noscript" || typeof props.children == "string" || typeof props.children == "number" || typeof props.dangerouslySetInnerHTML == "object" && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
      }
      function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
        {
          var hostContextDev = hostContext;
          validateDOMNesting(null, text, hostContextDev.ancestorInfo);
        }
        var textNode = createTextNode(text, rootContainerInstance);
        return precacheFiberNode(internalInstanceHandle, textNode), textNode;
      }
      function getCurrentEventPriority() {
        var currentEvent = window.event;
        return currentEvent === void 0 ? DefaultEventPriority : getEventPriority(currentEvent.type);
      }
      var scheduleTimeout = typeof setTimeout == "function" ? setTimeout : void 0, cancelTimeout = typeof clearTimeout == "function" ? clearTimeout : void 0, noTimeout = -1, localPromise = typeof Promise == "function" ? Promise : void 0, scheduleMicrotask = typeof queueMicrotask == "function" ? queueMicrotask : typeof localPromise < "u" ? function(callback) {
        return localPromise.resolve(null).then(callback).catch(handleErrorInNextTick);
      } : scheduleTimeout;
      function handleErrorInNextTick(error2) {
        setTimeout(function() {
          throw error2;
        });
      }
      function commitMount(domElement, type, newProps, internalInstanceHandle) {
        switch (type) {
          case "button":
          case "input":
          case "select":
          case "textarea":
            newProps.autoFocus && domElement.focus();
            return;
          case "img": {
            newProps.src && (domElement.src = newProps.src);
            return;
          }
        }
      }
      function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
        updateProperties(domElement, updatePayload, type, oldProps, newProps), updateFiberProps(domElement, newProps);
      }
      function resetTextContent(domElement) {
        setTextContent(domElement, "");
      }
      function commitTextUpdate(textInstance, oldText, newText) {
        textInstance.nodeValue = newText;
      }
      function appendChild(parentInstance, child) {
        parentInstance.appendChild(child);
      }
      function appendChildToContainer(container, child) {
        var parentNode;
        container.nodeType === COMMENT_NODE ? (parentNode = container.parentNode, parentNode.insertBefore(child, container)) : (parentNode = container, parentNode.appendChild(child));
        var reactRootContainer = container._reactRootContainer;
        reactRootContainer == null && parentNode.onclick === null && trapClickOnNonInteractiveElement(parentNode);
      }
      function insertBefore(parentInstance, child, beforeChild) {
        parentInstance.insertBefore(child, beforeChild);
      }
      function insertInContainerBefore(container, child, beforeChild) {
        container.nodeType === COMMENT_NODE ? container.parentNode.insertBefore(child, beforeChild) : container.insertBefore(child, beforeChild);
      }
      function removeChild(parentInstance, child) {
        parentInstance.removeChild(child);
      }
      function removeChildFromContainer(container, child) {
        container.nodeType === COMMENT_NODE ? container.parentNode.removeChild(child) : container.removeChild(child);
      }
      function clearSuspenseBoundary(parentInstance, suspenseInstance) {
        var node = suspenseInstance, depth = 0;
        do {
          var nextNode = node.nextSibling;
          if (parentInstance.removeChild(node), nextNode && nextNode.nodeType === COMMENT_NODE) {
            var data2 = nextNode.data;
            if (data2 === SUSPENSE_END_DATA)
              if (depth === 0) {
                parentInstance.removeChild(nextNode), retryIfBlockedOn(suspenseInstance);
                return;
              } else
                depth--;
            else
              (data2 === SUSPENSE_START_DATA || data2 === SUSPENSE_PENDING_START_DATA || data2 === SUSPENSE_FALLBACK_START_DATA) && depth++;
          }
          node = nextNode;
        } while (node);
        retryIfBlockedOn(suspenseInstance);
      }
      function clearSuspenseBoundaryFromContainer(container, suspenseInstance) {
        container.nodeType === COMMENT_NODE ? clearSuspenseBoundary(container.parentNode, suspenseInstance) : container.nodeType === ELEMENT_NODE && clearSuspenseBoundary(container, suspenseInstance), retryIfBlockedOn(container);
      }
      function hideInstance(instance) {
        instance = instance;
        var style3 = instance.style;
        typeof style3.setProperty == "function" ? style3.setProperty("display", "none", "important") : style3.display = "none";
      }
      function hideTextInstance(textInstance) {
        textInstance.nodeValue = "";
      }
      function unhideInstance(instance, props) {
        instance = instance;
        var styleProp = props[STYLE$1], display = styleProp != null && styleProp.hasOwnProperty("display") ? styleProp.display : null;
        instance.style.display = dangerousStyleValue("display", display);
      }
      function unhideTextInstance(textInstance, text) {
        textInstance.nodeValue = text;
      }
      function clearContainer(container) {
        container.nodeType === ELEMENT_NODE ? container.textContent = "" : container.nodeType === DOCUMENT_NODE && container.documentElement && container.removeChild(container.documentElement);
      }
      function canHydrateInstance(instance, type, props) {
        return instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase() ? null : instance;
      }
      function canHydrateTextInstance(instance, text) {
        return text === "" || instance.nodeType !== TEXT_NODE ? null : instance;
      }
      function canHydrateSuspenseInstance(instance) {
        return instance.nodeType !== COMMENT_NODE ? null : instance;
      }
      function isSuspenseInstancePending(instance) {
        return instance.data === SUSPENSE_PENDING_START_DATA;
      }
      function isSuspenseInstanceFallback(instance) {
        return instance.data === SUSPENSE_FALLBACK_START_DATA;
      }
      function getSuspenseInstanceFallbackErrorDetails(instance) {
        var dataset = instance.nextSibling && instance.nextSibling.dataset, digest, message, stack;
        return dataset && (digest = dataset.dgst, message = dataset.msg, stack = dataset.stck), {
          message,
          digest,
          stack
        };
      }
      function registerSuspenseInstanceRetry(instance, callback) {
        instance._reactRetry = callback;
      }
      function getNextHydratable(node) {
        for (; node != null; node = node.nextSibling) {
          var nodeType = node.nodeType;
          if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE)
            break;
          if (nodeType === COMMENT_NODE) {
            var nodeData = node.data;
            if (nodeData === SUSPENSE_START_DATA || nodeData === SUSPENSE_FALLBACK_START_DATA || nodeData === SUSPENSE_PENDING_START_DATA)
              break;
            if (nodeData === SUSPENSE_END_DATA)
              return null;
          }
        }
        return node;
      }
      function getNextHydratableSibling(instance) {
        return getNextHydratable(instance.nextSibling);
      }
      function getFirstHydratableChild(parentInstance) {
        return getNextHydratable(parentInstance.firstChild);
      }
      function getFirstHydratableChildWithinContainer(parentContainer) {
        return getNextHydratable(parentContainer.firstChild);
      }
      function getFirstHydratableChildWithinSuspenseInstance(parentInstance) {
        return getNextHydratable(parentInstance.nextSibling);
      }
      function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle, shouldWarnDev) {
        precacheFiberNode(internalInstanceHandle, instance), updateFiberProps(instance, props);
        var parentNamespace;
        {
          var hostContextDev = hostContext;
          parentNamespace = hostContextDev.namespace;
        }
        var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
        return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance, isConcurrentMode, shouldWarnDev);
      }
      function hydrateTextInstance(textInstance, text, internalInstanceHandle, shouldWarnDev) {
        precacheFiberNode(internalInstanceHandle, textInstance);
        var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
        return diffHydratedText(textInstance, text);
      }
      function hydrateSuspenseInstance(suspenseInstance, internalInstanceHandle) {
        precacheFiberNode(internalInstanceHandle, suspenseInstance);
      }
      function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
        for (var node = suspenseInstance.nextSibling, depth = 0; node; ) {
          if (node.nodeType === COMMENT_NODE) {
            var data2 = node.data;
            if (data2 === SUSPENSE_END_DATA) {
              if (depth === 0)
                return getNextHydratableSibling(node);
              depth--;
            } else
              (data2 === SUSPENSE_START_DATA || data2 === SUSPENSE_FALLBACK_START_DATA || data2 === SUSPENSE_PENDING_START_DATA) && depth++;
          }
          node = node.nextSibling;
        }
        return null;
      }
      function getParentSuspenseInstance(targetInstance) {
        for (var node = targetInstance.previousSibling, depth = 0; node; ) {
          if (node.nodeType === COMMENT_NODE) {
            var data2 = node.data;
            if (data2 === SUSPENSE_START_DATA || data2 === SUSPENSE_FALLBACK_START_DATA || data2 === SUSPENSE_PENDING_START_DATA) {
              if (depth === 0)
                return node;
              depth--;
            } else
              data2 === SUSPENSE_END_DATA && depth++;
          }
          node = node.previousSibling;
        }
        return null;
      }
      function commitHydratedContainer(container) {
        retryIfBlockedOn(container);
      }
      function commitHydratedSuspenseInstance(suspenseInstance) {
        retryIfBlockedOn(suspenseInstance);
      }
      function shouldDeleteUnhydratedTailInstances(parentType) {
        return parentType !== "head" && parentType !== "body";
      }
      function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text, isConcurrentMode) {
        var shouldWarnDev = !0;
        checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
      }
      function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text, isConcurrentMode) {
        if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== !0) {
          var shouldWarnDev = !0;
          checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
        }
      }
      function didNotHydrateInstanceWithinContainer(parentContainer, instance) {
        instance.nodeType === ELEMENT_NODE ? warnForDeletedHydratableElement(parentContainer, instance) : instance.nodeType === COMMENT_NODE || warnForDeletedHydratableText(parentContainer, instance);
      }
      function didNotHydrateInstanceWithinSuspenseInstance(parentInstance, instance) {
        {
          var parentNode = parentInstance.parentNode;
          parentNode !== null && (instance.nodeType === ELEMENT_NODE ? warnForDeletedHydratableElement(parentNode, instance) : instance.nodeType === COMMENT_NODE || warnForDeletedHydratableText(parentNode, instance));
        }
      }
      function didNotHydrateInstance(parentType, parentProps, parentInstance, instance, isConcurrentMode) {
        (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== !0) && (instance.nodeType === ELEMENT_NODE ? warnForDeletedHydratableElement(parentInstance, instance) : instance.nodeType === COMMENT_NODE || warnForDeletedHydratableText(parentInstance, instance));
      }
      function didNotFindHydratableInstanceWithinContainer(parentContainer, type, props) {
        warnForInsertedHydratedElement(parentContainer, type);
      }
      function didNotFindHydratableTextInstanceWithinContainer(parentContainer, text) {
        warnForInsertedHydratedText(parentContainer, text);
      }
      function didNotFindHydratableInstanceWithinSuspenseInstance(parentInstance, type, props) {
        {
          var parentNode = parentInstance.parentNode;
          parentNode !== null && warnForInsertedHydratedElement(parentNode, type);
        }
      }
      function didNotFindHydratableTextInstanceWithinSuspenseInstance(parentInstance, text) {
        {
          var parentNode = parentInstance.parentNode;
          parentNode !== null && warnForInsertedHydratedText(parentNode, text);
        }
      }
      function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props, isConcurrentMode) {
        (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== !0) && warnForInsertedHydratedElement(parentInstance, type);
      }
      function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text, isConcurrentMode) {
        (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== !0) && warnForInsertedHydratedText(parentInstance, text);
      }
      function errorHydratingContainer(parentContainer) {
        error("An error occurred during hydration. The server HTML was replaced with client content in <%s>.", parentContainer.nodeName.toLowerCase());
      }
      function preparePortalMount(portalInstance) {
        listenToAllSupportedEvents(portalInstance);
      }
      var randomKey = Math.random().toString(36).slice(2), internalInstanceKey = "__reactFiber$" + randomKey, internalPropsKey = "__reactProps$" + randomKey, internalContainerInstanceKey = "__reactContainer$" + randomKey, internalEventHandlersKey = "__reactEvents$" + randomKey, internalEventHandlerListenersKey = "__reactListeners$" + randomKey, internalEventHandlesSetKey = "__reactHandles$" + randomKey;
      function detachDeletedInstance(node) {
        delete node[internalInstanceKey], delete node[internalPropsKey], delete node[internalEventHandlersKey], delete node[internalEventHandlerListenersKey], delete node[internalEventHandlesSetKey];
      }
      function precacheFiberNode(hostInst, node) {
        node[internalInstanceKey] = hostInst;
      }
      function markContainerAsRoot(hostRoot, node) {
        node[internalContainerInstanceKey] = hostRoot;
      }
      function unmarkContainerAsRoot(node) {
        node[internalContainerInstanceKey] = null;
      }
      function isContainerMarkedAsRoot(node) {
        return !!node[internalContainerInstanceKey];
      }
      function getClosestInstanceFromNode(targetNode) {
        var targetInst = targetNode[internalInstanceKey];
        if (targetInst)
          return targetInst;
        for (var parentNode = targetNode.parentNode; parentNode; ) {
          if (targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey], targetInst) {
            var alternate = targetInst.alternate;
            if (targetInst.child !== null || alternate !== null && alternate.child !== null)
              for (var suspenseInstance = getParentSuspenseInstance(targetNode); suspenseInstance !== null; ) {
                var targetSuspenseInst = suspenseInstance[internalInstanceKey];
                if (targetSuspenseInst)
                  return targetSuspenseInst;
                suspenseInstance = getParentSuspenseInstance(suspenseInstance);
              }
            return targetInst;
          }
          targetNode = parentNode, parentNode = targetNode.parentNode;
        }
        return null;
      }
      function getInstanceFromNode(node) {
        var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];
        return inst && (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) ? inst : null;
      }
      function getNodeFromInstance(inst) {
        if (inst.tag === HostComponent || inst.tag === HostText)
          return inst.stateNode;
        throw new Error("getNodeFromInstance: Invalid argument.");
      }
      function getFiberCurrentPropsFromNode(node) {
        return node[internalPropsKey] || null;
      }
      function updateFiberProps(node, props) {
        node[internalPropsKey] = props;
      }
      function getEventListenerSet(node) {
        var elementListenerSet = node[internalEventHandlersKey];
        return elementListenerSet === void 0 && (elementListenerSet = node[internalEventHandlersKey] = /* @__PURE__ */ new Set()), elementListenerSet;
      }
      var loggedTypeFailures = {}, ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
      function setCurrentlyValidatingElement(element) {
        if (element) {
          var owner = element._owner, stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
          ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else
          ReactDebugCurrentFrame$1.setExtraStackFrame(null);
      }
      function checkPropTypes(typeSpecs, values, location, componentName, element) {
        {
          var has2 = Function.call.bind(hasOwnProperty);
          for (var typeSpecName in typeSpecs)
            if (has2(typeSpecs, typeSpecName)) {
              var error$1 = void 0;
              try {
                if (typeof typeSpecs[typeSpecName] != "function") {
                  var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw err.name = "Invariant Violation", err;
                }
                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
              } catch (ex) {
                error$1 = ex;
              }
              error$1 && !(error$1 instanceof Error) && (setCurrentlyValidatingElement(element), error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1), setCurrentlyValidatingElement(null)), error$1 instanceof Error && !(error$1.message in loggedTypeFailures) && (loggedTypeFailures[error$1.message] = !0, setCurrentlyValidatingElement(element), error("Failed %s type: %s", location, error$1.message), setCurrentlyValidatingElement(null));
            }
        }
      }
      var valueStack = [], fiberStack;
      fiberStack = [];
      var index3 = -1;
      function createCursor(defaultValue) {
        return {
          current: defaultValue
        };
      }
      function pop(cursor, fiber) {
        if (index3 < 0) {
          error("Unexpected pop.");
          return;
        }
        fiber !== fiberStack[index3] && error("Unexpected Fiber popped."), cursor.current = valueStack[index3], valueStack[index3] = null, fiberStack[index3] = null, index3--;
      }
      function push(cursor, value, fiber) {
        index3++, valueStack[index3] = cursor.current, fiberStack[index3] = fiber, cursor.current = value;
      }
      var warnedAboutMissingGetChildContext;
      warnedAboutMissingGetChildContext = {};
      var emptyContextObject = {};
      Object.freeze(emptyContextObject);
      var contextStackCursor = createCursor(emptyContextObject), didPerformWorkStackCursor = createCursor(!1), previousContext = emptyContextObject;
      function getUnmaskedContext(workInProgress2, Component2, didPushOwnContextIfProvider) {
        return didPushOwnContextIfProvider && isContextProvider(Component2) ? previousContext : contextStackCursor.current;
      }
      function cacheContext(workInProgress2, unmaskedContext, maskedContext) {
        {
          var instance = workInProgress2.stateNode;
          instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext, instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
        }
      }
      function getMaskedContext(workInProgress2, unmaskedContext) {
        {
          var type = workInProgress2.type, contextTypes = type.contextTypes;
          if (!contextTypes)
            return emptyContextObject;
          var instance = workInProgress2.stateNode;
          if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext)
            return instance.__reactInternalMemoizedMaskedChildContext;
          var context = {};
          for (var key in contextTypes)
            context[key] = unmaskedContext[key];
          {
            var name = getComponentNameFromFiber(workInProgress2) || "Unknown";
            checkPropTypes(contextTypes, context, "context", name);
          }
          return instance && cacheContext(workInProgress2, unmaskedContext, context), context;
        }
      }
      function hasContextChanged() {
        return didPerformWorkStackCursor.current;
      }
      function isContextProvider(type) {
        {
          var childContextTypes = type.childContextTypes;
          return childContextTypes != null;
        }
      }
      function popContext(fiber) {
        pop(didPerformWorkStackCursor, fiber), pop(contextStackCursor, fiber);
      }
      function popTopLevelContextObject(fiber) {
        pop(didPerformWorkStackCursor, fiber), pop(contextStackCursor, fiber);
      }
      function pushTopLevelContextObject(fiber, context, didChange) {
        {
          if (contextStackCursor.current !== emptyContextObject)
            throw new Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
          push(contextStackCursor, context, fiber), push(didPerformWorkStackCursor, didChange, fiber);
        }
      }
      function processChildContext(fiber, type, parentContext) {
        {
          var instance = fiber.stateNode, childContextTypes = type.childContextTypes;
          if (typeof instance.getChildContext != "function") {
            {
              var componentName = getComponentNameFromFiber(fiber) || "Unknown";
              warnedAboutMissingGetChildContext[componentName] || (warnedAboutMissingGetChildContext[componentName] = !0, error("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName));
            }
            return parentContext;
          }
          var childContext = instance.getChildContext();
          for (var contextKey in childContext)
            if (!(contextKey in childContextTypes))
              throw new Error((getComponentNameFromFiber(fiber) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
          {
            var name = getComponentNameFromFiber(fiber) || "Unknown";
            checkPropTypes(childContextTypes, childContext, "child context", name);
          }
          return assign({}, parentContext, childContext);
        }
      }
      function pushContextProvider(workInProgress2) {
        {
          var instance = workInProgress2.stateNode, memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;
          return previousContext = contextStackCursor.current, push(contextStackCursor, memoizedMergedChildContext, workInProgress2), push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress2), !0;
        }
      }
      function invalidateContextProvider(workInProgress2, type, didChange) {
        {
          var instance = workInProgress2.stateNode;
          if (!instance)
            throw new Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
          if (didChange) {
            var mergedContext = processChildContext(workInProgress2, type, previousContext);
            instance.__reactInternalMemoizedMergedChildContext = mergedContext, pop(didPerformWorkStackCursor, workInProgress2), pop(contextStackCursor, workInProgress2), push(contextStackCursor, mergedContext, workInProgress2), push(didPerformWorkStackCursor, didChange, workInProgress2);
          } else
            pop(didPerformWorkStackCursor, workInProgress2), push(didPerformWorkStackCursor, didChange, workInProgress2);
        }
      }
      function findCurrentUnmaskedContext(fiber) {
        {
          if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent)
            throw new Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
          var node = fiber;
          do {
            switch (node.tag) {
              case HostRoot:
                return node.stateNode.context;
              case ClassComponent: {
                var Component2 = node.type;
                if (isContextProvider(Component2))
                  return node.stateNode.__reactInternalMemoizedMergedChildContext;
                break;
              }
            }
            node = node.return;
          } while (node !== null);
          throw new Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
        }
      }
      var LegacyRoot = 0, ConcurrentRoot = 1, syncQueue = null, includesLegacySyncCallbacks = !1, isFlushingSyncQueue = !1;
      function scheduleSyncCallback(callback) {
        syncQueue === null ? syncQueue = [callback] : syncQueue.push(callback);
      }
      function scheduleLegacySyncCallback(callback) {
        includesLegacySyncCallbacks = !0, scheduleSyncCallback(callback);
      }
      function flushSyncCallbacksOnlyInLegacyMode() {
        includesLegacySyncCallbacks && flushSyncCallbacks();
      }
      function flushSyncCallbacks() {
        if (!isFlushingSyncQueue && syncQueue !== null) {
          isFlushingSyncQueue = !0;
          var i7 = 0, previousUpdatePriority = getCurrentUpdatePriority();
          try {
            var isSync = !0, queue = syncQueue;
            for (setCurrentUpdatePriority(DiscreteEventPriority); i7 < queue.length; i7++) {
              var callback = queue[i7];
              do
                callback = callback(isSync);
              while (callback !== null);
            }
            syncQueue = null, includesLegacySyncCallbacks = !1;
          } catch (error2) {
            throw syncQueue !== null && (syncQueue = syncQueue.slice(i7 + 1)), scheduleCallback(ImmediatePriority, flushSyncCallbacks), error2;
          } finally {
            setCurrentUpdatePriority(previousUpdatePriority), isFlushingSyncQueue = !1;
          }
        }
        return null;
      }
      var forkStack = [], forkStackIndex = 0, treeForkProvider = null, treeForkCount = 0, idStack = [], idStackIndex = 0, treeContextProvider = null, treeContextId = 1, treeContextOverflow = "";
      function isForkedChild(workInProgress2) {
        return warnIfNotHydrating(), (workInProgress2.flags & Forked) !== NoFlags;
      }
      function getForksAtLevel(workInProgress2) {
        return warnIfNotHydrating(), treeForkCount;
      }
      function getTreeId() {
        var overflow = treeContextOverflow, idWithLeadingBit = treeContextId, id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
        return id.toString(32) + overflow;
      }
      function pushTreeFork(workInProgress2, totalChildren) {
        warnIfNotHydrating(), forkStack[forkStackIndex++] = treeForkCount, forkStack[forkStackIndex++] = treeForkProvider, treeForkProvider = workInProgress2, treeForkCount = totalChildren;
      }
      function pushTreeId(workInProgress2, totalChildren, index4) {
        warnIfNotHydrating(), idStack[idStackIndex++] = treeContextId, idStack[idStackIndex++] = treeContextOverflow, idStack[idStackIndex++] = treeContextProvider, treeContextProvider = workInProgress2;
        var baseIdWithLeadingBit = treeContextId, baseOverflow = treeContextOverflow, baseLength = getBitLength(baseIdWithLeadingBit) - 1, baseId = baseIdWithLeadingBit & ~(1 << baseLength), slot = index4 + 1, length2 = getBitLength(totalChildren) + baseLength;
        if (length2 > 30) {
          var numberOfOverflowBits = baseLength - baseLength % 5, newOverflowBits = (1 << numberOfOverflowBits) - 1, newOverflow = (baseId & newOverflowBits).toString(32), restOfBaseId = baseId >> numberOfOverflowBits, restOfBaseLength = baseLength - numberOfOverflowBits, restOfLength = getBitLength(totalChildren) + restOfBaseLength, restOfNewBits = slot << restOfBaseLength, id = restOfNewBits | restOfBaseId, overflow = newOverflow + baseOverflow;
          treeContextId = 1 << restOfLength | id, treeContextOverflow = overflow;
        } else {
          var newBits = slot << baseLength, _id = newBits | baseId, _overflow = baseOverflow;
          treeContextId = 1 << length2 | _id, treeContextOverflow = _overflow;
        }
      }
      function pushMaterializedTreeId(workInProgress2) {
        warnIfNotHydrating();
        var returnFiber = workInProgress2.return;
        if (returnFiber !== null) {
          var numberOfForks = 1, slotIndex = 0;
          pushTreeFork(workInProgress2, numberOfForks), pushTreeId(workInProgress2, numberOfForks, slotIndex);
        }
      }
      function getBitLength(number) {
        return 32 - clz32(number);
      }
      function getLeadingBit(id) {
        return 1 << getBitLength(id) - 1;
      }
      function popTreeContext(workInProgress2) {
        for (; workInProgress2 === treeForkProvider; )
          treeForkProvider = forkStack[--forkStackIndex], forkStack[forkStackIndex] = null, treeForkCount = forkStack[--forkStackIndex], forkStack[forkStackIndex] = null;
        for (; workInProgress2 === treeContextProvider; )
          treeContextProvider = idStack[--idStackIndex], idStack[idStackIndex] = null, treeContextOverflow = idStack[--idStackIndex], idStack[idStackIndex] = null, treeContextId = idStack[--idStackIndex], idStack[idStackIndex] = null;
      }
      function getSuspendedTreeContext() {
        return warnIfNotHydrating(), treeContextProvider !== null ? {
          id: treeContextId,
          overflow: treeContextOverflow
        } : null;
      }
      function restoreSuspendedTreeContext(workInProgress2, suspendedContext) {
        warnIfNotHydrating(), idStack[idStackIndex++] = treeContextId, idStack[idStackIndex++] = treeContextOverflow, idStack[idStackIndex++] = treeContextProvider, treeContextId = suspendedContext.id, treeContextOverflow = suspendedContext.overflow, treeContextProvider = workInProgress2;
      }
      function warnIfNotHydrating() {
        getIsHydrating() || error("Expected to be hydrating. This is a bug in React. Please file an issue.");
      }
      var hydrationParentFiber = null, nextHydratableInstance = null, isHydrating = !1, didSuspendOrErrorDEV = !1, hydrationErrors = null;
      function warnIfHydrating() {
        isHydrating && error("We should not be hydrating here. This is a bug in React. Please file a bug.");
      }
      function markDidThrowWhileHydratingDEV() {
        didSuspendOrErrorDEV = !0;
      }
      function didSuspendOrErrorWhileHydratingDEV() {
        return didSuspendOrErrorDEV;
      }
      function enterHydrationState(fiber) {
        var parentInstance = fiber.stateNode.containerInfo;
        return nextHydratableInstance = getFirstHydratableChildWithinContainer(parentInstance), hydrationParentFiber = fiber, isHydrating = !0, hydrationErrors = null, didSuspendOrErrorDEV = !1, !0;
      }
      function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance, treeContext) {
        return nextHydratableInstance = getFirstHydratableChildWithinSuspenseInstance(suspenseInstance), hydrationParentFiber = fiber, isHydrating = !0, hydrationErrors = null, didSuspendOrErrorDEV = !1, treeContext !== null && restoreSuspendedTreeContext(fiber, treeContext), !0;
      }
      function warnUnhydratedInstance(returnFiber, instance) {
        switch (returnFiber.tag) {
          case HostRoot: {
            didNotHydrateInstanceWithinContainer(returnFiber.stateNode.containerInfo, instance);
            break;
          }
          case HostComponent: {
            var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
            didNotHydrateInstance(
              returnFiber.type,
              returnFiber.memoizedProps,
              returnFiber.stateNode,
              instance,
              // TODO: Delete this argument when we remove the legacy root API.
              isConcurrentMode
            );
            break;
          }
          case SuspenseComponent: {
            var suspenseState = returnFiber.memoizedState;
            suspenseState.dehydrated !== null && didNotHydrateInstanceWithinSuspenseInstance(suspenseState.dehydrated, instance);
            break;
          }
        }
      }
      function deleteHydratableInstance(returnFiber, instance) {
        warnUnhydratedInstance(returnFiber, instance);
        var childToDelete = createFiberFromHostInstanceForDeletion();
        childToDelete.stateNode = instance, childToDelete.return = returnFiber;
        var deletions = returnFiber.deletions;
        deletions === null ? (returnFiber.deletions = [childToDelete], returnFiber.flags |= ChildDeletion) : deletions.push(childToDelete);
      }
      function warnNonhydratedInstance(returnFiber, fiber) {
        {
          if (didSuspendOrErrorDEV)
            return;
          switch (returnFiber.tag) {
            case HostRoot: {
              var parentContainer = returnFiber.stateNode.containerInfo;
              switch (fiber.tag) {
                case HostComponent:
                  var type = fiber.type, props = fiber.pendingProps;
                  didNotFindHydratableInstanceWithinContainer(parentContainer, type);
                  break;
                case HostText:
                  var text = fiber.pendingProps;
                  didNotFindHydratableTextInstanceWithinContainer(parentContainer, text);
                  break;
              }
              break;
            }
            case HostComponent: {
              var parentType = returnFiber.type, parentProps = returnFiber.memoizedProps, parentInstance = returnFiber.stateNode;
              switch (fiber.tag) {
                case HostComponent: {
                  var _type = fiber.type, _props = fiber.pendingProps, isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                  didNotFindHydratableInstance(
                    parentType,
                    parentProps,
                    parentInstance,
                    _type,
                    _props,
                    // TODO: Delete this argument when we remove the legacy root API.
                    isConcurrentMode
                  );
                  break;
                }
                case HostText: {
                  var _text = fiber.pendingProps, _isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                  didNotFindHydratableTextInstance(
                    parentType,
                    parentProps,
                    parentInstance,
                    _text,
                    // TODO: Delete this argument when we remove the legacy root API.
                    _isConcurrentMode
                  );
                  break;
                }
              }
              break;
            }
            case SuspenseComponent: {
              var suspenseState = returnFiber.memoizedState, _parentInstance = suspenseState.dehydrated;
              if (_parentInstance !== null)
                switch (fiber.tag) {
                  case HostComponent:
                    var _type2 = fiber.type, _props2 = fiber.pendingProps;
                    didNotFindHydratableInstanceWithinSuspenseInstance(_parentInstance, _type2);
                    break;
                  case HostText:
                    var _text2 = fiber.pendingProps;
                    didNotFindHydratableTextInstanceWithinSuspenseInstance(_parentInstance, _text2);
                    break;
                }
              break;
            }
            default:
              return;
          }
        }
      }
      function insertNonHydratedInstance(returnFiber, fiber) {
        fiber.flags = fiber.flags & ~Hydrating | Placement, warnNonhydratedInstance(returnFiber, fiber);
      }
      function tryHydrate(fiber, nextInstance) {
        switch (fiber.tag) {
          case HostComponent: {
            var type = fiber.type, props = fiber.pendingProps, instance = canHydrateInstance(nextInstance, type);
            return instance !== null ? (fiber.stateNode = instance, hydrationParentFiber = fiber, nextHydratableInstance = getFirstHydratableChild(instance), !0) : !1;
          }
          case HostText: {
            var text = fiber.pendingProps, textInstance = canHydrateTextInstance(nextInstance, text);
            return textInstance !== null ? (fiber.stateNode = textInstance, hydrationParentFiber = fiber, nextHydratableInstance = null, !0) : !1;
          }
          case SuspenseComponent: {
            var suspenseInstance = canHydrateSuspenseInstance(nextInstance);
            if (suspenseInstance !== null) {
              var suspenseState = {
                dehydrated: suspenseInstance,
                treeContext: getSuspendedTreeContext(),
                retryLane: OffscreenLane
              };
              fiber.memoizedState = suspenseState;
              var dehydratedFragment = createFiberFromDehydratedFragment(suspenseInstance);
              return dehydratedFragment.return = fiber, fiber.child = dehydratedFragment, hydrationParentFiber = fiber, nextHydratableInstance = null, !0;
            }
            return !1;
          }
          default:
            return !1;
        }
      }
      function shouldClientRenderOnMismatch(fiber) {
        return (fiber.mode & ConcurrentMode) !== NoMode && (fiber.flags & DidCapture) === NoFlags;
      }
      function throwOnHydrationMismatch(fiber) {
        throw new Error("Hydration failed because the initial UI does not match what was rendered on the server.");
      }
      function tryToClaimNextHydratableInstance(fiber) {
        if (isHydrating) {
          var nextInstance = nextHydratableInstance;
          if (!nextInstance) {
            shouldClientRenderOnMismatch(fiber) && (warnNonhydratedInstance(hydrationParentFiber, fiber), throwOnHydrationMismatch()), insertNonHydratedInstance(hydrationParentFiber, fiber), isHydrating = !1, hydrationParentFiber = fiber;
            return;
          }
          var firstAttemptedInstance = nextInstance;
          if (!tryHydrate(fiber, nextInstance)) {
            shouldClientRenderOnMismatch(fiber) && (warnNonhydratedInstance(hydrationParentFiber, fiber), throwOnHydrationMismatch()), nextInstance = getNextHydratableSibling(firstAttemptedInstance);
            var prevHydrationParentFiber = hydrationParentFiber;
            if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
              insertNonHydratedInstance(hydrationParentFiber, fiber), isHydrating = !1, hydrationParentFiber = fiber;
              return;
            }
            deleteHydratableInstance(prevHydrationParentFiber, firstAttemptedInstance);
          }
        }
      }
      function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
        var instance = fiber.stateNode, shouldWarnIfMismatchDev = !didSuspendOrErrorDEV, updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber, shouldWarnIfMismatchDev);
        return fiber.updateQueue = updatePayload, updatePayload !== null;
      }
      function prepareToHydrateHostTextInstance(fiber) {
        var textInstance = fiber.stateNode, textContent = fiber.memoizedProps, shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
        if (shouldUpdate) {
          var returnFiber = hydrationParentFiber;
          if (returnFiber !== null)
            switch (returnFiber.tag) {
              case HostRoot: {
                var parentContainer = returnFiber.stateNode.containerInfo, isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                didNotMatchHydratedContainerTextInstance(
                  parentContainer,
                  textInstance,
                  textContent,
                  // TODO: Delete this argument when we remove the legacy root API.
                  isConcurrentMode
                );
                break;
              }
              case HostComponent: {
                var parentType = returnFiber.type, parentProps = returnFiber.memoizedProps, parentInstance = returnFiber.stateNode, _isConcurrentMode2 = (returnFiber.mode & ConcurrentMode) !== NoMode;
                didNotMatchHydratedTextInstance(
                  parentType,
                  parentProps,
                  parentInstance,
                  textInstance,
                  textContent,
                  // TODO: Delete this argument when we remove the legacy root API.
                  _isConcurrentMode2
                );
                break;
              }
            }
        }
        return shouldUpdate;
      }
      function prepareToHydrateHostSuspenseInstance(fiber) {
        var suspenseState = fiber.memoizedState, suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
        if (!suspenseInstance)
          throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
        hydrateSuspenseInstance(suspenseInstance, fiber);
      }
      function skipPastDehydratedSuspenseInstance(fiber) {
        var suspenseState = fiber.memoizedState, suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
        if (!suspenseInstance)
          throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
        return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
      }
      function popToNextHostParent(fiber) {
        for (var parent = fiber.return; parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent; )
          parent = parent.return;
        hydrationParentFiber = parent;
      }
      function popHydrationState(fiber) {
        if (fiber !== hydrationParentFiber)
          return !1;
        if (!isHydrating)
          return popToNextHostParent(fiber), isHydrating = !0, !1;
        if (fiber.tag !== HostRoot && (fiber.tag !== HostComponent || shouldDeleteUnhydratedTailInstances(fiber.type) && !shouldSetTextContent(fiber.type, fiber.memoizedProps))) {
          var nextInstance = nextHydratableInstance;
          if (nextInstance)
            if (shouldClientRenderOnMismatch(fiber))
              warnIfUnhydratedTailNodes(fiber), throwOnHydrationMismatch();
            else
              for (; nextInstance; )
                deleteHydratableInstance(fiber, nextInstance), nextInstance = getNextHydratableSibling(nextInstance);
        }
        return popToNextHostParent(fiber), fiber.tag === SuspenseComponent ? nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber) : nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null, !0;
      }
      function hasUnhydratedTailNodes() {
        return isHydrating && nextHydratableInstance !== null;
      }
      function warnIfUnhydratedTailNodes(fiber) {
        for (var nextInstance = nextHydratableInstance; nextInstance; )
          warnUnhydratedInstance(fiber, nextInstance), nextInstance = getNextHydratableSibling(nextInstance);
      }
      function resetHydrationState() {
        hydrationParentFiber = null, nextHydratableInstance = null, isHydrating = !1, didSuspendOrErrorDEV = !1;
      }
      function upgradeHydrationErrorsToRecoverable() {
        hydrationErrors !== null && (queueRecoverableErrors(hydrationErrors), hydrationErrors = null);
      }
      function getIsHydrating() {
        return isHydrating;
      }
      function queueHydrationError(error2) {
        hydrationErrors === null ? hydrationErrors = [error2] : hydrationErrors.push(error2);
      }
      var ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig, NoTransition = null;
      function requestCurrentTransition() {
        return ReactCurrentBatchConfig$1.transition;
      }
      var ReactStrictModeWarnings = {
        recordUnsafeLifecycleWarnings: function(fiber, instance) {
        },
        flushPendingUnsafeLifecycleWarnings: function() {
        },
        recordLegacyContextWarning: function(fiber, instance) {
        },
        flushLegacyContextWarning: function() {
        },
        discardPendingWarnings: function() {
        }
      };
      {
        var findStrictRoot = function(fiber) {
          for (var maybeStrictRoot = null, node = fiber; node !== null; )
            node.mode & StrictLegacyMode && (maybeStrictRoot = node), node = node.return;
          return maybeStrictRoot;
        }, setToSortedString = function(set2) {
          var array = [];
          return set2.forEach(function(value) {
            array.push(value);
          }), array.sort().join(", ");
        }, pendingComponentWillMountWarnings = [], pendingUNSAFE_ComponentWillMountWarnings = [], pendingComponentWillReceivePropsWarnings = [], pendingUNSAFE_ComponentWillReceivePropsWarnings = [], pendingComponentWillUpdateWarnings = [], pendingUNSAFE_ComponentWillUpdateWarnings = [], didWarnAboutUnsafeLifecycles = /* @__PURE__ */ new Set();
        ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(fiber, instance) {
          didWarnAboutUnsafeLifecycles.has(fiber.type) || (typeof instance.componentWillMount == "function" && // Don't warn about react-lifecycles-compat polyfilled components.
          instance.componentWillMount.__suppressDeprecationWarning !== !0 && pendingComponentWillMountWarnings.push(fiber), fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillMount == "function" && pendingUNSAFE_ComponentWillMountWarnings.push(fiber), typeof instance.componentWillReceiveProps == "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== !0 && pendingComponentWillReceivePropsWarnings.push(fiber), fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillReceiveProps == "function" && pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber), typeof instance.componentWillUpdate == "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== !0 && pendingComponentWillUpdateWarnings.push(fiber), fiber.mode & StrictLegacyMode && typeof instance.UNSAFE_componentWillUpdate == "function" && pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber));
        }, ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
          var componentWillMountUniqueNames = /* @__PURE__ */ new Set();
          pendingComponentWillMountWarnings.length > 0 && (pendingComponentWillMountWarnings.forEach(function(fiber) {
            componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component"), didWarnAboutUnsafeLifecycles.add(fiber.type);
          }), pendingComponentWillMountWarnings = []);
          var UNSAFE_componentWillMountUniqueNames = /* @__PURE__ */ new Set();
          pendingUNSAFE_ComponentWillMountWarnings.length > 0 && (pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {
            UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component"), didWarnAboutUnsafeLifecycles.add(fiber.type);
          }), pendingUNSAFE_ComponentWillMountWarnings = []);
          var componentWillReceivePropsUniqueNames = /* @__PURE__ */ new Set();
          pendingComponentWillReceivePropsWarnings.length > 0 && (pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {
            componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component"), didWarnAboutUnsafeLifecycles.add(fiber.type);
          }), pendingComponentWillReceivePropsWarnings = []);
          var UNSAFE_componentWillReceivePropsUniqueNames = /* @__PURE__ */ new Set();
          pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0 && (pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {
            UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component"), didWarnAboutUnsafeLifecycles.add(fiber.type);
          }), pendingUNSAFE_ComponentWillReceivePropsWarnings = []);
          var componentWillUpdateUniqueNames = /* @__PURE__ */ new Set();
          pendingComponentWillUpdateWarnings.length > 0 && (pendingComponentWillUpdateWarnings.forEach(function(fiber) {
            componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component"), didWarnAboutUnsafeLifecycles.add(fiber.type);
          }), pendingComponentWillUpdateWarnings = []);
          var UNSAFE_componentWillUpdateUniqueNames = /* @__PURE__ */ new Set();
          if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0 && (pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {
            UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component"), didWarnAboutUnsafeLifecycles.add(fiber.type);
          }), pendingUNSAFE_ComponentWillUpdateWarnings = []), UNSAFE_componentWillMountUniqueNames.size > 0) {
            var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
            error(`Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.

Please update the following components: %s`, sortedNames);
          }
          if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
            var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);
            error(`Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state

Please update the following components: %s`, _sortedNames);
          }
          if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
            var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);
            error(`Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.

Please update the following components: %s`, _sortedNames2);
          }
          if (componentWillMountUniqueNames.size > 0) {
            var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);
            warn(`componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.
* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, _sortedNames3);
          }
          if (componentWillReceivePropsUniqueNames.size > 0) {
            var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);
            warn(`componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state
* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, _sortedNames4);
          }
          if (componentWillUpdateUniqueNames.size > 0) {
            var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);
            warn(`componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run \`npx react-codemod rename-unsafe-lifecycles\` in your project source folder.

Please update the following components: %s`, _sortedNames5);
          }
        };
        var pendingLegacyContextWarning = /* @__PURE__ */ new Map(), didWarnAboutLegacyContext = /* @__PURE__ */ new Set();
        ReactStrictModeWarnings.recordLegacyContextWarning = function(fiber, instance) {
          var strictRoot = findStrictRoot(fiber);
          if (strictRoot === null) {
            error("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
            return;
          }
          if (!didWarnAboutLegacyContext.has(fiber.type)) {
            var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);
            (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext == "function") && (warningsForRoot === void 0 && (warningsForRoot = [], pendingLegacyContextWarning.set(strictRoot, warningsForRoot)), warningsForRoot.push(fiber));
          }
        }, ReactStrictModeWarnings.flushLegacyContextWarning = function() {
          pendingLegacyContextWarning.forEach(function(fiberArray, strictRoot) {
            if (fiberArray.length !== 0) {
              var firstFiber = fiberArray[0], uniqueNames = /* @__PURE__ */ new Set();
              fiberArray.forEach(function(fiber) {
                uniqueNames.add(getComponentNameFromFiber(fiber) || "Component"), didWarnAboutLegacyContext.add(fiber.type);
              });
              var sortedNames = setToSortedString(uniqueNames);
              try {
                setCurrentFiber(firstFiber), error(`Legacy context API has been detected within a strict-mode tree.

The old API will be supported in all 16.x releases, but applications using it should migrate to the new version.

Please update the following components: %s

Learn more about this warning here: https://reactjs.org/link/legacy-context`, sortedNames);
              } finally {
                resetCurrentFiber();
              }
            }
          });
        }, ReactStrictModeWarnings.discardPendingWarnings = function() {
          pendingComponentWillMountWarnings = [], pendingUNSAFE_ComponentWillMountWarnings = [], pendingComponentWillReceivePropsWarnings = [], pendingUNSAFE_ComponentWillReceivePropsWarnings = [], pendingComponentWillUpdateWarnings = [], pendingUNSAFE_ComponentWillUpdateWarnings = [], pendingLegacyContextWarning = /* @__PURE__ */ new Map();
        };
      }
      function resolveDefaultProps(Component2, baseProps) {
        if (Component2 && Component2.defaultProps) {
          var props = assign({}, baseProps), defaultProps = Component2.defaultProps;
          for (var propName in defaultProps)
            props[propName] === void 0 && (props[propName] = defaultProps[propName]);
          return props;
        }
        return baseProps;
      }
      var valueCursor = createCursor(null), rendererSigil;
      rendererSigil = {};
      var currentlyRenderingFiber = null, lastContextDependency = null, lastFullyObservedContext = null, isDisallowedContextReadInDEV = !1;
      function resetContextDependencies() {
        currentlyRenderingFiber = null, lastContextDependency = null, lastFullyObservedContext = null, isDisallowedContextReadInDEV = !1;
      }
      function enterDisallowedContextReadInDEV() {
        isDisallowedContextReadInDEV = !0;
      }
      function exitDisallowedContextReadInDEV() {
        isDisallowedContextReadInDEV = !1;
      }
      function pushProvider(providerFiber, context, nextValue) {
        push(valueCursor, context._currentValue, providerFiber), context._currentValue = nextValue, context._currentRenderer !== void 0 && context._currentRenderer !== null && context._currentRenderer !== rendererSigil && error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported."), context._currentRenderer = rendererSigil;
      }
      function popProvider(context, providerFiber) {
        var currentValue = valueCursor.current;
        pop(valueCursor, providerFiber), context._currentValue = currentValue;
      }
      function scheduleContextWorkOnParentPath(parent, renderLanes2, propagationRoot) {
        for (var node = parent; node !== null; ) {
          var alternate = node.alternate;
          if (isSubsetOfLanes(node.childLanes, renderLanes2) ? alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes2) && (alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes2)) : (node.childLanes = mergeLanes(node.childLanes, renderLanes2), alternate !== null && (alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes2))), node === propagationRoot)
            break;
          node = node.return;
        }
        node !== propagationRoot && error("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
      }
      function propagateContextChange(workInProgress2, context, renderLanes2) {
        propagateContextChange_eager(workInProgress2, context, renderLanes2);
      }
      function propagateContextChange_eager(workInProgress2, context, renderLanes2) {
        var fiber = workInProgress2.child;
        for (fiber !== null && (fiber.return = workInProgress2); fiber !== null; ) {
          var nextFiber = void 0, list2 = fiber.dependencies;
          if (list2 !== null) {
            nextFiber = fiber.child;
            for (var dependency = list2.firstContext; dependency !== null; ) {
              if (dependency.context === context) {
                if (fiber.tag === ClassComponent) {
                  var lane = pickArbitraryLane(renderLanes2), update = createUpdate(NoTimestamp, lane);
                  update.tag = ForceUpdate;
                  var updateQueue = fiber.updateQueue;
                  if (updateQueue !== null) {
                    var sharedQueue = updateQueue.shared, pending = sharedQueue.pending;
                    pending === null ? update.next = update : (update.next = pending.next, pending.next = update), sharedQueue.pending = update;
                  }
                }
                fiber.lanes = mergeLanes(fiber.lanes, renderLanes2);
                var alternate = fiber.alternate;
                alternate !== null && (alternate.lanes = mergeLanes(alternate.lanes, renderLanes2)), scheduleContextWorkOnParentPath(fiber.return, renderLanes2, workInProgress2), list2.lanes = mergeLanes(list2.lanes, renderLanes2);
                break;
              }
              dependency = dependency.next;
            }
          } else if (fiber.tag === ContextProvider)
            nextFiber = fiber.type === workInProgress2.type ? null : fiber.child;
          else if (fiber.tag === DehydratedFragment) {
            var parentSuspense = fiber.return;
            if (parentSuspense === null)
              throw new Error("We just came from a parent so we must have had a parent. This is a bug in React.");
            parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes2);
            var _alternate = parentSuspense.alternate;
            _alternate !== null && (_alternate.lanes = mergeLanes(_alternate.lanes, renderLanes2)), scheduleContextWorkOnParentPath(parentSuspense, renderLanes2, workInProgress2), nextFiber = fiber.sibling;
          } else
            nextFiber = fiber.child;
          if (nextFiber !== null)
            nextFiber.return = fiber;
          else
            for (nextFiber = fiber; nextFiber !== null; ) {
              if (nextFiber === workInProgress2) {
                nextFiber = null;
                break;
              }
              var sibling = nextFiber.sibling;
              if (sibling !== null) {
                sibling.return = nextFiber.return, nextFiber = sibling;
                break;
              }
              nextFiber = nextFiber.return;
            }
          fiber = nextFiber;
        }
      }
      function prepareToReadContext(workInProgress2, renderLanes2) {
        currentlyRenderingFiber = workInProgress2, lastContextDependency = null, lastFullyObservedContext = null;
        var dependencies = workInProgress2.dependencies;
        if (dependencies !== null) {
          var firstContext = dependencies.firstContext;
          firstContext !== null && (includesSomeLane(dependencies.lanes, renderLanes2) && markWorkInProgressReceivedUpdate(), dependencies.firstContext = null);
        }
      }
      function readContext(context) {
        isDisallowedContextReadInDEV && error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
        var value = context._currentValue;
        if (lastFullyObservedContext !== context) {
          var contextItem = {
            context,
            memoizedValue: value,
            next: null
          };
          if (lastContextDependency === null) {
            if (currentlyRenderingFiber === null)
              throw new Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            lastContextDependency = contextItem, currentlyRenderingFiber.dependencies = {
              lanes: NoLanes,
              firstContext: contextItem
            };
          } else
            lastContextDependency = lastContextDependency.next = contextItem;
        }
        return value;
      }
      var concurrentQueues = null;
      function pushConcurrentUpdateQueue(queue) {
        concurrentQueues === null ? concurrentQueues = [queue] : concurrentQueues.push(queue);
      }
      function finishQueueingConcurrentUpdates() {
        if (concurrentQueues !== null) {
          for (var i7 = 0; i7 < concurrentQueues.length; i7++) {
            var queue = concurrentQueues[i7], lastInterleavedUpdate = queue.interleaved;
            if (lastInterleavedUpdate !== null) {
              queue.interleaved = null;
              var firstInterleavedUpdate = lastInterleavedUpdate.next, lastPendingUpdate = queue.pending;
              if (lastPendingUpdate !== null) {
                var firstPendingUpdate = lastPendingUpdate.next;
                lastPendingUpdate.next = firstInterleavedUpdate, lastInterleavedUpdate.next = firstPendingUpdate;
              }
              queue.pending = lastInterleavedUpdate;
            }
          }
          concurrentQueues = null;
        }
      }
      function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {
        var interleaved = queue.interleaved;
        return interleaved === null ? (update.next = update, pushConcurrentUpdateQueue(queue)) : (update.next = interleaved.next, interleaved.next = update), queue.interleaved = update, markUpdateLaneFromFiberToRoot(fiber, lane);
      }
      function enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane) {
        var interleaved = queue.interleaved;
        interleaved === null ? (update.next = update, pushConcurrentUpdateQueue(queue)) : (update.next = interleaved.next, interleaved.next = update), queue.interleaved = update;
      }
      function enqueueConcurrentClassUpdate(fiber, queue, update, lane) {
        var interleaved = queue.interleaved;
        return interleaved === null ? (update.next = update, pushConcurrentUpdateQueue(queue)) : (update.next = interleaved.next, interleaved.next = update), queue.interleaved = update, markUpdateLaneFromFiberToRoot(fiber, lane);
      }
      function enqueueConcurrentRenderForLane(fiber, lane) {
        return markUpdateLaneFromFiberToRoot(fiber, lane);
      }
      var unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;
      function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {
        sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);
        var alternate = sourceFiber.alternate;
        alternate !== null && (alternate.lanes = mergeLanes(alternate.lanes, lane)), alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags && warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
        for (var node = sourceFiber, parent = sourceFiber.return; parent !== null; )
          parent.childLanes = mergeLanes(parent.childLanes, lane), alternate = parent.alternate, alternate !== null ? alternate.childLanes = mergeLanes(alternate.childLanes, lane) : (parent.flags & (Placement | Hydrating)) !== NoFlags && warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber), node = parent, parent = parent.return;
        if (node.tag === HostRoot) {
          var root2 = node.stateNode;
          return root2;
        } else
          return null;
      }
      var UpdateState = 0, ReplaceState = 1, ForceUpdate = 2, CaptureUpdate = 3, hasForceUpdate = !1, didWarnUpdateInsideUpdate, currentlyProcessingQueue;
      didWarnUpdateInsideUpdate = !1, currentlyProcessingQueue = null;
      function initializeUpdateQueue(fiber) {
        var queue = {
          baseState: fiber.memoizedState,
          firstBaseUpdate: null,
          lastBaseUpdate: null,
          shared: {
            pending: null,
            interleaved: null,
            lanes: NoLanes
          },
          effects: null
        };
        fiber.updateQueue = queue;
      }
      function cloneUpdateQueue(current2, workInProgress2) {
        var queue = workInProgress2.updateQueue, currentQueue = current2.updateQueue;
        if (queue === currentQueue) {
          var clone = {
            baseState: currentQueue.baseState,
            firstBaseUpdate: currentQueue.firstBaseUpdate,
            lastBaseUpdate: currentQueue.lastBaseUpdate,
            shared: currentQueue.shared,
            effects: currentQueue.effects
          };
          workInProgress2.updateQueue = clone;
        }
      }
      function createUpdate(eventTime, lane) {
        var update = {
          eventTime,
          lane,
          tag: UpdateState,
          payload: null,
          callback: null,
          next: null
        };
        return update;
      }
      function enqueueUpdate(fiber, update, lane) {
        var updateQueue = fiber.updateQueue;
        if (updateQueue === null)
          return null;
        var sharedQueue = updateQueue.shared;
        if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate && (error("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback."), didWarnUpdateInsideUpdate = !0), isUnsafeClassRenderPhaseUpdate()) {
          var pending = sharedQueue.pending;
          return pending === null ? update.next = update : (update.next = pending.next, pending.next = update), sharedQueue.pending = update, unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);
        } else
          return enqueueConcurrentClassUpdate(fiber, sharedQueue, update, lane);
      }
      function entangleTransitions(root2, fiber, lane) {
        var updateQueue = fiber.updateQueue;
        if (updateQueue !== null) {
          var sharedQueue = updateQueue.shared;
          if (isTransitionLane(lane)) {
            var queueLanes = sharedQueue.lanes;
            queueLanes = intersectLanes(queueLanes, root2.pendingLanes);
            var newQueueLanes = mergeLanes(queueLanes, lane);
            sharedQueue.lanes = newQueueLanes, markRootEntangled(root2, newQueueLanes);
          }
        }
      }
      function enqueueCapturedUpdate(workInProgress2, capturedUpdate) {
        var queue = workInProgress2.updateQueue, current2 = workInProgress2.alternate;
        if (current2 !== null) {
          var currentQueue = current2.updateQueue;
          if (queue === currentQueue) {
            var newFirst = null, newLast = null, firstBaseUpdate = queue.firstBaseUpdate;
            if (firstBaseUpdate !== null) {
              var update = firstBaseUpdate;
              do {
                var clone = {
                  eventTime: update.eventTime,
                  lane: update.lane,
                  tag: update.tag,
                  payload: update.payload,
                  callback: update.callback,
                  next: null
                };
                newLast === null ? newFirst = newLast = clone : (newLast.next = clone, newLast = clone), update = update.next;
              } while (update !== null);
              newLast === null ? newFirst = newLast = capturedUpdate : (newLast.next = capturedUpdate, newLast = capturedUpdate);
            } else
              newFirst = newLast = capturedUpdate;
            queue = {
              baseState: currentQueue.baseState,
              firstBaseUpdate: newFirst,
              lastBaseUpdate: newLast,
              shared: currentQueue.shared,
              effects: currentQueue.effects
            }, workInProgress2.updateQueue = queue;
            return;
          }
        }
        var lastBaseUpdate = queue.lastBaseUpdate;
        lastBaseUpdate === null ? queue.firstBaseUpdate = capturedUpdate : lastBaseUpdate.next = capturedUpdate, queue.lastBaseUpdate = capturedUpdate;
      }
      function getStateFromUpdate(workInProgress2, queue, update, prevState, nextProps, instance) {
        switch (update.tag) {
          case ReplaceState: {
            var payload = update.payload;
            if (typeof payload == "function") {
              enterDisallowedContextReadInDEV();
              var nextState = payload.call(instance, prevState, nextProps);
              {
                if (workInProgress2.mode & StrictLegacyMode) {
                  setIsStrictModeForDevtools(!0);
                  try {
                    payload.call(instance, prevState, nextProps);
                  } finally {
                    setIsStrictModeForDevtools(!1);
                  }
                }
                exitDisallowedContextReadInDEV();
              }
              return nextState;
            }
            return payload;
          }
          case CaptureUpdate:
            workInProgress2.flags = workInProgress2.flags & ~ShouldCapture | DidCapture;
          case UpdateState: {
            var _payload = update.payload, partialState;
            if (typeof _payload == "function") {
              enterDisallowedContextReadInDEV(), partialState = _payload.call(instance, prevState, nextProps);
              {
                if (workInProgress2.mode & StrictLegacyMode) {
                  setIsStrictModeForDevtools(!0);
                  try {
                    _payload.call(instance, prevState, nextProps);
                  } finally {
                    setIsStrictModeForDevtools(!1);
                  }
                }
                exitDisallowedContextReadInDEV();
              }
            } else
              partialState = _payload;
            return partialState == null ? prevState : assign({}, prevState, partialState);
          }
          case ForceUpdate:
            return hasForceUpdate = !0, prevState;
        }
        return prevState;
      }
      function processUpdateQueue(workInProgress2, props, instance, renderLanes2) {
        var queue = workInProgress2.updateQueue;
        hasForceUpdate = !1, currentlyProcessingQueue = queue.shared;
        var firstBaseUpdate = queue.firstBaseUpdate, lastBaseUpdate = queue.lastBaseUpdate, pendingQueue = queue.shared.pending;
        if (pendingQueue !== null) {
          queue.shared.pending = null;
          var lastPendingUpdate = pendingQueue, firstPendingUpdate = lastPendingUpdate.next;
          lastPendingUpdate.next = null, lastBaseUpdate === null ? firstBaseUpdate = firstPendingUpdate : lastBaseUpdate.next = firstPendingUpdate, lastBaseUpdate = lastPendingUpdate;
          var current2 = workInProgress2.alternate;
          if (current2 !== null) {
            var currentQueue = current2.updateQueue, currentLastBaseUpdate = currentQueue.lastBaseUpdate;
            currentLastBaseUpdate !== lastBaseUpdate && (currentLastBaseUpdate === null ? currentQueue.firstBaseUpdate = firstPendingUpdate : currentLastBaseUpdate.next = firstPendingUpdate, currentQueue.lastBaseUpdate = lastPendingUpdate);
          }
        }
        if (firstBaseUpdate !== null) {
          var newState = queue.baseState, newLanes = NoLanes, newBaseState = null, newFirstBaseUpdate = null, newLastBaseUpdate = null, update = firstBaseUpdate;
          do {
            var updateLane = update.lane, updateEventTime = update.eventTime;
            if (isSubsetOfLanes(renderLanes2, updateLane)) {
              if (newLastBaseUpdate !== null) {
                var _clone = {
                  eventTime: updateEventTime,
                  // This update is going to be committed so we never want uncommit
                  // it. Using NoLane works because 0 is a subset of all bitmasks, so
                  // this will never be skipped by the check above.
                  lane: NoLane,
                  tag: update.tag,
                  payload: update.payload,
                  callback: update.callback,
                  next: null
                };
                newLastBaseUpdate = newLastBaseUpdate.next = _clone;
              }
              newState = getStateFromUpdate(workInProgress2, queue, update, newState, props, instance);
              var callback = update.callback;
              if (callback !== null && // If the update was already committed, we should not queue its
              // callback again.
              update.lane !== NoLane) {
                workInProgress2.flags |= Callback;
                var effects = queue.effects;
                effects === null ? queue.effects = [update] : effects.push(update);
              }
            } else {
              var clone = {
                eventTime: updateEventTime,
                lane: updateLane,
                tag: update.tag,
                payload: update.payload,
                callback: update.callback,
                next: null
              };
              newLastBaseUpdate === null ? (newFirstBaseUpdate = newLastBaseUpdate = clone, newBaseState = newState) : newLastBaseUpdate = newLastBaseUpdate.next = clone, newLanes = mergeLanes(newLanes, updateLane);
            }
            if (update = update.next, update === null) {
              if (pendingQueue = queue.shared.pending, pendingQueue === null)
                break;
              var _lastPendingUpdate = pendingQueue, _firstPendingUpdate = _lastPendingUpdate.next;
              _lastPendingUpdate.next = null, update = _firstPendingUpdate, queue.lastBaseUpdate = _lastPendingUpdate, queue.shared.pending = null;
            }
          } while (!0);
          newLastBaseUpdate === null && (newBaseState = newState), queue.baseState = newBaseState, queue.firstBaseUpdate = newFirstBaseUpdate, queue.lastBaseUpdate = newLastBaseUpdate;
          var lastInterleaved = queue.shared.interleaved;
          if (lastInterleaved !== null) {
            var interleaved = lastInterleaved;
            do
              newLanes = mergeLanes(newLanes, interleaved.lane), interleaved = interleaved.next;
            while (interleaved !== lastInterleaved);
          } else
            firstBaseUpdate === null && (queue.shared.lanes = NoLanes);
          markSkippedUpdateLanes(newLanes), workInProgress2.lanes = newLanes, workInProgress2.memoizedState = newState;
        }
        currentlyProcessingQueue = null;
      }
      function callCallback(callback, context) {
        if (typeof callback != "function")
          throw new Error("Invalid argument passed as callback. Expected a function. Instead " + ("received: " + callback));
        callback.call(context);
      }
      function resetHasForceUpdateBeforeProcessing() {
        hasForceUpdate = !1;
      }
      function checkHasForceUpdateAfterProcessing() {
        return hasForceUpdate;
      }
      function commitUpdateQueue(finishedWork, finishedQueue, instance) {
        var effects = finishedQueue.effects;
        if (finishedQueue.effects = null, effects !== null)
          for (var i7 = 0; i7 < effects.length; i7++) {
            var effect = effects[i7], callback = effect.callback;
            callback !== null && (effect.callback = null, callCallback(callback, instance));
          }
      }
      var fakeInternalInstance = {}, emptyRefsObject = new React26.Component().refs, didWarnAboutStateAssignmentForComponent, didWarnAboutUninitializedState, didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate, didWarnAboutLegacyLifecyclesAndDerivedState, didWarnAboutUndefinedDerivedState, warnOnUndefinedDerivedState, warnOnInvalidCallback, didWarnAboutDirectlyAssigningPropsToState, didWarnAboutContextTypeAndContextTypes, didWarnAboutInvalidateContextType;
      {
        didWarnAboutStateAssignmentForComponent = /* @__PURE__ */ new Set(), didWarnAboutUninitializedState = /* @__PURE__ */ new Set(), didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = /* @__PURE__ */ new Set(), didWarnAboutLegacyLifecyclesAndDerivedState = /* @__PURE__ */ new Set(), didWarnAboutDirectlyAssigningPropsToState = /* @__PURE__ */ new Set(), didWarnAboutUndefinedDerivedState = /* @__PURE__ */ new Set(), didWarnAboutContextTypeAndContextTypes = /* @__PURE__ */ new Set(), didWarnAboutInvalidateContextType = /* @__PURE__ */ new Set();
        var didWarnOnInvalidCallback = /* @__PURE__ */ new Set();
        warnOnInvalidCallback = function(callback, callerName) {
          if (!(callback === null || typeof callback == "function")) {
            var key = callerName + "_" + callback;
            didWarnOnInvalidCallback.has(key) || (didWarnOnInvalidCallback.add(key), error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback));
          }
        }, warnOnUndefinedDerivedState = function(type, partialState) {
          if (partialState === void 0) {
            var componentName = getComponentNameFromType(type) || "Component";
            didWarnAboutUndefinedDerivedState.has(componentName) || (didWarnAboutUndefinedDerivedState.add(componentName), error("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName));
          }
        }, Object.defineProperty(fakeInternalInstance, "_processChildContext", {
          enumerable: !1,
          value: function() {
            throw new Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
          }
        }), Object.freeze(fakeInternalInstance);
      }
      function applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, nextProps) {
        var prevState = workInProgress2.memoizedState, partialState = getDerivedStateFromProps(nextProps, prevState);
        {
          if (workInProgress2.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(!0);
            try {
              partialState = getDerivedStateFromProps(nextProps, prevState);
            } finally {
              setIsStrictModeForDevtools(!1);
            }
          }
          warnOnUndefinedDerivedState(ctor, partialState);
        }
        var memoizedState = partialState == null ? prevState : assign({}, prevState, partialState);
        if (workInProgress2.memoizedState = memoizedState, workInProgress2.lanes === NoLanes) {
          var updateQueue = workInProgress2.updateQueue;
          updateQueue.baseState = memoizedState;
        }
      }
      var classComponentUpdater = {
        isMounted,
        enqueueSetState: function(inst, payload, callback) {
          var fiber = get(inst), eventTime = requestEventTime(), lane = requestUpdateLane(fiber), update = createUpdate(eventTime, lane);
          update.payload = payload, callback != null && (warnOnInvalidCallback(callback, "setState"), update.callback = callback);
          var root2 = enqueueUpdate(fiber, update, lane);
          root2 !== null && (scheduleUpdateOnFiber(root2, fiber, lane, eventTime), entangleTransitions(root2, fiber, lane)), markStateUpdateScheduled(fiber, lane);
        },
        enqueueReplaceState: function(inst, payload, callback) {
          var fiber = get(inst), eventTime = requestEventTime(), lane = requestUpdateLane(fiber), update = createUpdate(eventTime, lane);
          update.tag = ReplaceState, update.payload = payload, callback != null && (warnOnInvalidCallback(callback, "replaceState"), update.callback = callback);
          var root2 = enqueueUpdate(fiber, update, lane);
          root2 !== null && (scheduleUpdateOnFiber(root2, fiber, lane, eventTime), entangleTransitions(root2, fiber, lane)), markStateUpdateScheduled(fiber, lane);
        },
        enqueueForceUpdate: function(inst, callback) {
          var fiber = get(inst), eventTime = requestEventTime(), lane = requestUpdateLane(fiber), update = createUpdate(eventTime, lane);
          update.tag = ForceUpdate, callback != null && (warnOnInvalidCallback(callback, "forceUpdate"), update.callback = callback);
          var root2 = enqueueUpdate(fiber, update, lane);
          root2 !== null && (scheduleUpdateOnFiber(root2, fiber, lane, eventTime), entangleTransitions(root2, fiber, lane)), markForceUpdateScheduled(fiber, lane);
        }
      };
      function checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext) {
        var instance = workInProgress2.stateNode;
        if (typeof instance.shouldComponentUpdate == "function") {
          var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
          {
            if (workInProgress2.mode & StrictLegacyMode) {
              setIsStrictModeForDevtools(!0);
              try {
                shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
              } finally {
                setIsStrictModeForDevtools(!1);
              }
            }
            shouldUpdate === void 0 && error("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", getComponentNameFromType(ctor) || "Component");
          }
          return shouldUpdate;
        }
        return ctor.prototype && ctor.prototype.isPureReactComponent ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState) : !0;
      }
      function checkClassInstance(workInProgress2, ctor, newProps) {
        var instance = workInProgress2.stateNode;
        {
          var name = getComponentNameFromType(ctor) || "Component", renderPresent = instance.render;
          renderPresent || (ctor.prototype && typeof ctor.prototype.render == "function" ? error("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name) : error("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name)), instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state && error("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name), instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved && error("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name), instance.propTypes && error("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name), instance.contextType && error("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name), instance.contextTypes && error("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name), ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor) && (didWarnAboutContextTypeAndContextTypes.add(ctor), error("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name)), typeof instance.componentShouldUpdate == "function" && error("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name), ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate < "u" && error("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(ctor) || "A pure component"), typeof instance.componentDidUnmount == "function" && error("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name), typeof instance.componentDidReceiveProps == "function" && error("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name), typeof instance.componentWillRecieveProps == "function" && error("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name), typeof instance.UNSAFE_componentWillRecieveProps == "function" && error("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
          var hasMutatedProps = instance.props !== newProps;
          instance.props !== void 0 && hasMutatedProps && error("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name), instance.defaultProps && error("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name), typeof instance.getSnapshotBeforeUpdate == "function" && typeof instance.componentDidUpdate != "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor) && (didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor), error("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(ctor))), typeof instance.getDerivedStateFromProps == "function" && error("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name), typeof instance.getDerivedStateFromError == "function" && error("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name), typeof ctor.getSnapshotBeforeUpdate == "function" && error("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
          var _state = instance.state;
          _state && (typeof _state != "object" || isArray(_state)) && error("%s.state: must be set to an object or null", name), typeof instance.getChildContext == "function" && typeof ctor.childContextTypes != "object" && error("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
        }
      }
      function adoptClassInstance(workInProgress2, instance) {
        instance.updater = classComponentUpdater, workInProgress2.stateNode = instance, set(instance, workInProgress2), instance._reactInternalInstance = fakeInternalInstance;
      }
      function constructClassInstance(workInProgress2, ctor, props) {
        var isLegacyContextConsumer = !1, unmaskedContext = emptyContextObject, context = emptyContextObject, contextType = ctor.contextType;
        if ("contextType" in ctor) {
          var isValid = (
            // Allow null for conditional declaration
            contextType === null || contextType !== void 0 && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === void 0
          );
          if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
            didWarnAboutInvalidateContextType.add(ctor);
            var addendum = "";
            contextType === void 0 ? addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file." : typeof contextType != "object" ? addendum = " However, it is set to a " + typeof contextType + "." : contextType.$$typeof === REACT_PROVIDER_TYPE ? addendum = " Did you accidentally pass the Context.Provider instead?" : contextType._context !== void 0 ? addendum = " Did you accidentally pass the Context.Consumer instead?" : addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.", error("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(ctor) || "Component", addendum);
          }
        }
        if (typeof contextType == "object" && contextType !== null)
          context = readContext(contextType);
        else {
          unmaskedContext = getUnmaskedContext(workInProgress2, ctor, !0);
          var contextTypes = ctor.contextTypes;
          isLegacyContextConsumer = contextTypes != null, context = isLegacyContextConsumer ? getMaskedContext(workInProgress2, unmaskedContext) : emptyContextObject;
        }
        var instance = new ctor(props, context);
        if (workInProgress2.mode & StrictLegacyMode) {
          setIsStrictModeForDevtools(!0);
          try {
            instance = new ctor(props, context);
          } finally {
            setIsStrictModeForDevtools(!1);
          }
        }
        var state = workInProgress2.memoizedState = instance.state !== null && instance.state !== void 0 ? instance.state : null;
        adoptClassInstance(workInProgress2, instance);
        {
          if (typeof ctor.getDerivedStateFromProps == "function" && state === null) {
            var componentName = getComponentNameFromType(ctor) || "Component";
            didWarnAboutUninitializedState.has(componentName) || (didWarnAboutUninitializedState.add(componentName), error("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? "null" : "undefined", componentName));
          }
          if (typeof ctor.getDerivedStateFromProps == "function" || typeof instance.getSnapshotBeforeUpdate == "function") {
            var foundWillMountName = null, foundWillReceivePropsName = null, foundWillUpdateName = null;
            if (typeof instance.componentWillMount == "function" && instance.componentWillMount.__suppressDeprecationWarning !== !0 ? foundWillMountName = "componentWillMount" : typeof instance.UNSAFE_componentWillMount == "function" && (foundWillMountName = "UNSAFE_componentWillMount"), typeof instance.componentWillReceiveProps == "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== !0 ? foundWillReceivePropsName = "componentWillReceiveProps" : typeof instance.UNSAFE_componentWillReceiveProps == "function" && (foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps"), typeof instance.componentWillUpdate == "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== !0 ? foundWillUpdateName = "componentWillUpdate" : typeof instance.UNSAFE_componentWillUpdate == "function" && (foundWillUpdateName = "UNSAFE_componentWillUpdate"), foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
              var _componentName = getComponentNameFromType(ctor) || "Component", newApiName = typeof ctor.getDerivedStateFromProps == "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
              didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName) || (didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName), error(`Unsafe legacy lifecycles will not be called for components using new component APIs.

%s uses %s but also contains the following legacy lifecycles:%s%s%s

The above lifecycles should be removed. Learn more about this warning here:
https://reactjs.org/link/unsafe-component-lifecycles`, _componentName, newApiName, foundWillMountName !== null ? `
  ` + foundWillMountName : "", foundWillReceivePropsName !== null ? `
  ` + foundWillReceivePropsName : "", foundWillUpdateName !== null ? `
  ` + foundWillUpdateName : ""));
            }
          }
        }
        return isLegacyContextConsumer && cacheContext(workInProgress2, unmaskedContext, context), instance;
      }
      function callComponentWillMount(workInProgress2, instance) {
        var oldState = instance.state;
        typeof instance.componentWillMount == "function" && instance.componentWillMount(), typeof instance.UNSAFE_componentWillMount == "function" && instance.UNSAFE_componentWillMount(), oldState !== instance.state && (error("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromFiber(workInProgress2) || "Component"), classComponentUpdater.enqueueReplaceState(instance, instance.state, null));
      }
      function callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext) {
        var oldState = instance.state;
        if (typeof instance.componentWillReceiveProps == "function" && instance.componentWillReceiveProps(newProps, nextContext), typeof instance.UNSAFE_componentWillReceiveProps == "function" && instance.UNSAFE_componentWillReceiveProps(newProps, nextContext), instance.state !== oldState) {
          {
            var componentName = getComponentNameFromFiber(workInProgress2) || "Component";
            didWarnAboutStateAssignmentForComponent.has(componentName) || (didWarnAboutStateAssignmentForComponent.add(componentName), error("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", componentName));
          }
          classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
        }
      }
      function mountClassInstance(workInProgress2, ctor, newProps, renderLanes2) {
        checkClassInstance(workInProgress2, ctor, newProps);
        var instance = workInProgress2.stateNode;
        instance.props = newProps, instance.state = workInProgress2.memoizedState, instance.refs = emptyRefsObject, initializeUpdateQueue(workInProgress2);
        var contextType = ctor.contextType;
        if (typeof contextType == "object" && contextType !== null)
          instance.context = readContext(contextType);
        else {
          var unmaskedContext = getUnmaskedContext(workInProgress2, ctor, !0);
          instance.context = getMaskedContext(workInProgress2, unmaskedContext);
        }
        {
          if (instance.state === newProps) {
            var componentName = getComponentNameFromType(ctor) || "Component";
            didWarnAboutDirectlyAssigningPropsToState.has(componentName) || (didWarnAboutDirectlyAssigningPropsToState.add(componentName), error("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName));
          }
          workInProgress2.mode & StrictLegacyMode && ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress2, instance), ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress2, instance);
        }
        instance.state = workInProgress2.memoizedState;
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
        if (typeof getDerivedStateFromProps == "function" && (applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps), instance.state = workInProgress2.memoizedState), typeof ctor.getDerivedStateFromProps != "function" && typeof instance.getSnapshotBeforeUpdate != "function" && (typeof instance.UNSAFE_componentWillMount == "function" || typeof instance.componentWillMount == "function") && (callComponentWillMount(workInProgress2, instance), processUpdateQueue(workInProgress2, newProps, instance, renderLanes2), instance.state = workInProgress2.memoizedState), typeof instance.componentDidMount == "function") {
          var fiberFlags = Update;
          fiberFlags |= LayoutStatic, (workInProgress2.mode & StrictEffectsMode) !== NoMode && (fiberFlags |= MountLayoutDev), workInProgress2.flags |= fiberFlags;
        }
      }
      function resumeMountClassInstance(workInProgress2, ctor, newProps, renderLanes2) {
        var instance = workInProgress2.stateNode, oldProps = workInProgress2.memoizedProps;
        instance.props = oldProps;
        var oldContext = instance.context, contextType = ctor.contextType, nextContext = emptyContextObject;
        if (typeof contextType == "object" && contextType !== null)
          nextContext = readContext(contextType);
        else {
          var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress2, ctor, !0);
          nextContext = getMaskedContext(workInProgress2, nextLegacyUnmaskedContext);
        }
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps, hasNewLifecycles = typeof getDerivedStateFromProps == "function" || typeof instance.getSnapshotBeforeUpdate == "function";
        !hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps == "function" || typeof instance.componentWillReceiveProps == "function") && (oldProps !== newProps || oldContext !== nextContext) && callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext), resetHasForceUpdateBeforeProcessing();
        var oldState = workInProgress2.memoizedState, newState = instance.state = oldState;
        if (processUpdateQueue(workInProgress2, newProps, instance, renderLanes2), newState = workInProgress2.memoizedState, oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
          if (typeof instance.componentDidMount == "function") {
            var fiberFlags = Update;
            fiberFlags |= LayoutStatic, (workInProgress2.mode & StrictEffectsMode) !== NoMode && (fiberFlags |= MountLayoutDev), workInProgress2.flags |= fiberFlags;
          }
          return !1;
        }
        typeof getDerivedStateFromProps == "function" && (applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps), newState = workInProgress2.memoizedState);
        var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext);
        if (shouldUpdate) {
          if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount == "function" || typeof instance.componentWillMount == "function") && (typeof instance.componentWillMount == "function" && instance.componentWillMount(), typeof instance.UNSAFE_componentWillMount == "function" && instance.UNSAFE_componentWillMount()), typeof instance.componentDidMount == "function") {
            var _fiberFlags = Update;
            _fiberFlags |= LayoutStatic, (workInProgress2.mode & StrictEffectsMode) !== NoMode && (_fiberFlags |= MountLayoutDev), workInProgress2.flags |= _fiberFlags;
          }
        } else {
          if (typeof instance.componentDidMount == "function") {
            var _fiberFlags2 = Update;
            _fiberFlags2 |= LayoutStatic, (workInProgress2.mode & StrictEffectsMode) !== NoMode && (_fiberFlags2 |= MountLayoutDev), workInProgress2.flags |= _fiberFlags2;
          }
          workInProgress2.memoizedProps = newProps, workInProgress2.memoizedState = newState;
        }
        return instance.props = newProps, instance.state = newState, instance.context = nextContext, shouldUpdate;
      }
      function updateClassInstance(current2, workInProgress2, ctor, newProps, renderLanes2) {
        var instance = workInProgress2.stateNode;
        cloneUpdateQueue(current2, workInProgress2);
        var unresolvedOldProps = workInProgress2.memoizedProps, oldProps = workInProgress2.type === workInProgress2.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress2.type, unresolvedOldProps);
        instance.props = oldProps;
        var unresolvedNewProps = workInProgress2.pendingProps, oldContext = instance.context, contextType = ctor.contextType, nextContext = emptyContextObject;
        if (typeof contextType == "object" && contextType !== null)
          nextContext = readContext(contextType);
        else {
          var nextUnmaskedContext = getUnmaskedContext(workInProgress2, ctor, !0);
          nextContext = getMaskedContext(workInProgress2, nextUnmaskedContext);
        }
        var getDerivedStateFromProps = ctor.getDerivedStateFromProps, hasNewLifecycles = typeof getDerivedStateFromProps == "function" || typeof instance.getSnapshotBeforeUpdate == "function";
        !hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps == "function" || typeof instance.componentWillReceiveProps == "function") && (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) && callComponentWillReceiveProps(workInProgress2, instance, newProps, nextContext), resetHasForceUpdateBeforeProcessing();
        var oldState = workInProgress2.memoizedState, newState = instance.state = oldState;
        if (processUpdateQueue(workInProgress2, newProps, instance, renderLanes2), newState = workInProgress2.memoizedState, unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing() && !enableLazyContextPropagation)
          return typeof instance.componentDidUpdate == "function" && (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) && (workInProgress2.flags |= Update), typeof instance.getSnapshotBeforeUpdate == "function" && (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) && (workInProgress2.flags |= Snapshot), !1;
        typeof getDerivedStateFromProps == "function" && (applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps), newState = workInProgress2.memoizedState);
        var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext) || // TODO: In some cases, we'll end up checking if context has changed twice,
        // both before and after `shouldComponentUpdate` has been called. Not ideal,
        // but I'm loath to refactor this function. This only happens for memoized
        // components so it's not that common.
        enableLazyContextPropagation;
        return shouldUpdate ? (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate == "function" || typeof instance.componentWillUpdate == "function") && (typeof instance.componentWillUpdate == "function" && instance.componentWillUpdate(newProps, newState, nextContext), typeof instance.UNSAFE_componentWillUpdate == "function" && instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext)), typeof instance.componentDidUpdate == "function" && (workInProgress2.flags |= Update), typeof instance.getSnapshotBeforeUpdate == "function" && (workInProgress2.flags |= Snapshot)) : (typeof instance.componentDidUpdate == "function" && (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) && (workInProgress2.flags |= Update), typeof instance.getSnapshotBeforeUpdate == "function" && (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) && (workInProgress2.flags |= Snapshot), workInProgress2.memoizedProps = newProps, workInProgress2.memoizedState = newState), instance.props = newProps, instance.state = newState, instance.context = nextContext, shouldUpdate;
      }
      var didWarnAboutMaps, didWarnAboutGenerators, didWarnAboutStringRefs, ownerHasKeyUseWarning, ownerHasFunctionTypeWarning, warnForMissingKey = function(child, returnFiber) {
      };
      didWarnAboutMaps = !1, didWarnAboutGenerators = !1, didWarnAboutStringRefs = {}, ownerHasKeyUseWarning = {}, ownerHasFunctionTypeWarning = {}, warnForMissingKey = function(child, returnFiber) {
        if (!(child === null || typeof child != "object") && !(!child._store || child._store.validated || child.key != null)) {
          if (typeof child._store != "object")
            throw new Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
          child._store.validated = !0;
          var componentName = getComponentNameFromFiber(returnFiber) || "Component";
          ownerHasKeyUseWarning[componentName] || (ownerHasKeyUseWarning[componentName] = !0, error('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.'));
        }
      };
      function coerceRef(returnFiber, current2, element) {
        var mixedRef = element.ref;
        if (mixedRef !== null && typeof mixedRef != "function" && typeof mixedRef != "object") {
          if ((returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && // We warn in ReactElement.js if owner and self are equal for string refs
          // because these cannot be automatically converted to an arrow function
          // using a codemod. Therefore, we don't have to warn about string refs again.
          !(element._owner && element._self && element._owner.stateNode !== element._self)) {
            var componentName = getComponentNameFromFiber(returnFiber) || "Component";
            didWarnAboutStringRefs[componentName] || (error('A string ref, "%s", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', mixedRef), didWarnAboutStringRefs[componentName] = !0);
          }
          if (element._owner) {
            var owner = element._owner, inst;
            if (owner) {
              var ownerFiber = owner;
              if (ownerFiber.tag !== ClassComponent)
                throw new Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
              inst = ownerFiber.stateNode;
            }
            if (!inst)
              throw new Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a bug in React. Please file an issue.");
            var resolvedInst = inst;
            checkPropStringCoercion(mixedRef, "ref");
            var stringRef = "" + mixedRef;
            if (current2 !== null && current2.ref !== null && typeof current2.ref == "function" && current2.ref._stringRef === stringRef)
              return current2.ref;
            var ref = function(value) {
              var refs = resolvedInst.refs;
              refs === emptyRefsObject && (refs = resolvedInst.refs = {}), value === null ? delete refs[stringRef] : refs[stringRef] = value;
            };
            return ref._stringRef = stringRef, ref;
          } else {
            if (typeof mixedRef != "string")
              throw new Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
            if (!element._owner)
              throw new Error("Element ref was specified as a string (" + mixedRef + `) but no owner was set. This could happen for one of the following reasons:
1. You may be adding a ref to a function component
2. You may be adding a ref to a component that was not created inside a component's render method
3. You have multiple copies of React loaded
See https://reactjs.org/link/refs-must-have-owner for more information.`);
          }
        }
        return mixedRef;
      }
      function throwOnInvalidObjectType(returnFiber, newChild) {
        var childString = Object.prototype.toString.call(newChild);
        throw new Error("Objects are not valid as a React child (found: " + (childString === "[object Object]" ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : childString) + "). If you meant to render a collection of children, use an array instead.");
      }
      function warnOnFunctionType(returnFiber) {
        {
          var componentName = getComponentNameFromFiber(returnFiber) || "Component";
          if (ownerHasFunctionTypeWarning[componentName])
            return;
          ownerHasFunctionTypeWarning[componentName] = !0, error("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
        }
      }
      function resolveLazy(lazyType) {
        var payload = lazyType._payload, init = lazyType._init;
        return init(payload);
      }
      function ChildReconciler(shouldTrackSideEffects) {
        function deleteChild(returnFiber, childToDelete) {
          if (shouldTrackSideEffects) {
            var deletions = returnFiber.deletions;
            deletions === null ? (returnFiber.deletions = [childToDelete], returnFiber.flags |= ChildDeletion) : deletions.push(childToDelete);
          }
        }
        function deleteRemainingChildren(returnFiber, currentFirstChild) {
          if (!shouldTrackSideEffects)
            return null;
          for (var childToDelete = currentFirstChild; childToDelete !== null; )
            deleteChild(returnFiber, childToDelete), childToDelete = childToDelete.sibling;
          return null;
        }
        function mapRemainingChildren(returnFiber, currentFirstChild) {
          for (var existingChildren = /* @__PURE__ */ new Map(), existingChild = currentFirstChild; existingChild !== null; )
            existingChild.key !== null ? existingChildren.set(existingChild.key, existingChild) : existingChildren.set(existingChild.index, existingChild), existingChild = existingChild.sibling;
          return existingChildren;
        }
        function useFiber(fiber, pendingProps) {
          var clone = createWorkInProgress(fiber, pendingProps);
          return clone.index = 0, clone.sibling = null, clone;
        }
        function placeChild(newFiber, lastPlacedIndex, newIndex) {
          if (newFiber.index = newIndex, !shouldTrackSideEffects)
            return newFiber.flags |= Forked, lastPlacedIndex;
          var current2 = newFiber.alternate;
          if (current2 !== null) {
            var oldIndex = current2.index;
            return oldIndex < lastPlacedIndex ? (newFiber.flags |= Placement, lastPlacedIndex) : oldIndex;
          } else
            return newFiber.flags |= Placement, lastPlacedIndex;
        }
        function placeSingleChild(newFiber) {
          return shouldTrackSideEffects && newFiber.alternate === null && (newFiber.flags |= Placement), newFiber;
        }
        function updateTextNode(returnFiber, current2, textContent, lanes) {
          if (current2 === null || current2.tag !== HostText) {
            var created = createFiberFromText(textContent, returnFiber.mode, lanes);
            return created.return = returnFiber, created;
          } else {
            var existing = useFiber(current2, textContent);
            return existing.return = returnFiber, existing;
          }
        }
        function updateElement(returnFiber, current2, element, lanes) {
          var elementType = element.type;
          if (elementType === REACT_FRAGMENT_TYPE)
            return updateFragment2(returnFiber, current2, element.props.children, lanes, element.key);
          if (current2 !== null && (current2.elementType === elementType || // Keep this check inline so it only runs on the false path:
          isCompatibleFamilyForHotReloading(current2, element) || // Lazy types should reconcile their resolved type.
          // We need to do this after the Hot Reloading check above,
          // because hot reloading has different semantics than prod because
          // it doesn't resuspend. So we can't let the call below suspend.
          typeof elementType == "object" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current2.type)) {
            var existing = useFiber(current2, element.props);
            return existing.ref = coerceRef(returnFiber, current2, element), existing.return = returnFiber, existing._debugSource = element._source, existing._debugOwner = element._owner, existing;
          }
          var created = createFiberFromElement(element, returnFiber.mode, lanes);
          return created.ref = coerceRef(returnFiber, current2, element), created.return = returnFiber, created;
        }
        function updatePortal(returnFiber, current2, portal, lanes) {
          if (current2 === null || current2.tag !== HostPortal || current2.stateNode.containerInfo !== portal.containerInfo || current2.stateNode.implementation !== portal.implementation) {
            var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
            return created.return = returnFiber, created;
          } else {
            var existing = useFiber(current2, portal.children || []);
            return existing.return = returnFiber, existing;
          }
        }
        function updateFragment2(returnFiber, current2, fragment, lanes, key) {
          if (current2 === null || current2.tag !== Fragment30) {
            var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);
            return created.return = returnFiber, created;
          } else {
            var existing = useFiber(current2, fragment);
            return existing.return = returnFiber, existing;
          }
        }
        function createChild(returnFiber, newChild, lanes) {
          if (typeof newChild == "string" && newChild !== "" || typeof newChild == "number") {
            var created = createFiberFromText("" + newChild, returnFiber.mode, lanes);
            return created.return = returnFiber, created;
          }
          if (typeof newChild == "object" && newChild !== null) {
            switch (newChild.$$typeof) {
              case REACT_ELEMENT_TYPE: {
                var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);
                return _created.ref = coerceRef(returnFiber, null, newChild), _created.return = returnFiber, _created;
              }
              case REACT_PORTAL_TYPE: {
                var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);
                return _created2.return = returnFiber, _created2;
              }
              case REACT_LAZY_TYPE: {
                var payload = newChild._payload, init = newChild._init;
                return createChild(returnFiber, init(payload), lanes);
              }
            }
            if (isArray(newChild) || getIteratorFn(newChild)) {
              var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);
              return _created3.return = returnFiber, _created3;
            }
            throwOnInvalidObjectType(returnFiber, newChild);
          }
          return typeof newChild == "function" && warnOnFunctionType(returnFiber), null;
        }
        function updateSlot(returnFiber, oldFiber, newChild, lanes) {
          var key = oldFiber !== null ? oldFiber.key : null;
          if (typeof newChild == "string" && newChild !== "" || typeof newChild == "number")
            return key !== null ? null : updateTextNode(returnFiber, oldFiber, "" + newChild, lanes);
          if (typeof newChild == "object" && newChild !== null) {
            switch (newChild.$$typeof) {
              case REACT_ELEMENT_TYPE:
                return newChild.key === key ? updateElement(returnFiber, oldFiber, newChild, lanes) : null;
              case REACT_PORTAL_TYPE:
                return newChild.key === key ? updatePortal(returnFiber, oldFiber, newChild, lanes) : null;
              case REACT_LAZY_TYPE: {
                var payload = newChild._payload, init = newChild._init;
                return updateSlot(returnFiber, oldFiber, init(payload), lanes);
              }
            }
            if (isArray(newChild) || getIteratorFn(newChild))
              return key !== null ? null : updateFragment2(returnFiber, oldFiber, newChild, lanes, null);
            throwOnInvalidObjectType(returnFiber, newChild);
          }
          return typeof newChild == "function" && warnOnFunctionType(returnFiber), null;
        }
        function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
          if (typeof newChild == "string" && newChild !== "" || typeof newChild == "number") {
            var matchedFiber = existingChildren.get(newIdx) || null;
            return updateTextNode(returnFiber, matchedFiber, "" + newChild, lanes);
          }
          if (typeof newChild == "object" && newChild !== null) {
            switch (newChild.$$typeof) {
              case REACT_ELEMENT_TYPE: {
                var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                return updateElement(returnFiber, _matchedFiber, newChild, lanes);
              }
              case REACT_PORTAL_TYPE: {
                var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);
              }
              case REACT_LAZY_TYPE:
                var payload = newChild._payload, init = newChild._init;
                return updateFromMap(existingChildren, returnFiber, newIdx, init(payload), lanes);
            }
            if (isArray(newChild) || getIteratorFn(newChild)) {
              var _matchedFiber3 = existingChildren.get(newIdx) || null;
              return updateFragment2(returnFiber, _matchedFiber3, newChild, lanes, null);
            }
            throwOnInvalidObjectType(returnFiber, newChild);
          }
          return typeof newChild == "function" && warnOnFunctionType(returnFiber), null;
        }
        function warnOnInvalidKey(child, knownKeys, returnFiber) {
          {
            if (typeof child != "object" || child === null)
              return knownKeys;
            switch (child.$$typeof) {
              case REACT_ELEMENT_TYPE:
              case REACT_PORTAL_TYPE:
                warnForMissingKey(child, returnFiber);
                var key = child.key;
                if (typeof key != "string")
                  break;
                if (knownKeys === null) {
                  knownKeys = /* @__PURE__ */ new Set(), knownKeys.add(key);
                  break;
                }
                if (!knownKeys.has(key)) {
                  knownKeys.add(key);
                  break;
                }
                error("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.", key);
                break;
              case REACT_LAZY_TYPE:
                var payload = child._payload, init = child._init;
                warnOnInvalidKey(init(payload), knownKeys, returnFiber);
                break;
            }
          }
          return knownKeys;
        }
        function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
          for (var knownKeys = null, i7 = 0; i7 < newChildren.length; i7++) {
            var child = newChildren[i7];
            knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
          }
          for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, lastPlacedIndex = 0, newIdx = 0, nextOldFiber = null; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
            oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
            var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
            if (newFiber === null) {
              oldFiber === null && (oldFiber = nextOldFiber);
              break;
            }
            shouldTrackSideEffects && oldFiber && newFiber.alternate === null && deleteChild(returnFiber, oldFiber), lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx), previousNewFiber === null ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber, previousNewFiber = newFiber, oldFiber = nextOldFiber;
          }
          if (newIdx === newChildren.length) {
            if (deleteRemainingChildren(returnFiber, oldFiber), getIsHydrating()) {
              var numberOfForks = newIdx;
              pushTreeFork(returnFiber, numberOfForks);
            }
            return resultingFirstChild;
          }
          if (oldFiber === null) {
            for (; newIdx < newChildren.length; newIdx++) {
              var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);
              _newFiber !== null && (lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx), previousNewFiber === null ? resultingFirstChild = _newFiber : previousNewFiber.sibling = _newFiber, previousNewFiber = _newFiber);
            }
            if (getIsHydrating()) {
              var _numberOfForks = newIdx;
              pushTreeFork(returnFiber, _numberOfForks);
            }
            return resultingFirstChild;
          }
          for (var existingChildren = mapRemainingChildren(returnFiber, oldFiber); newIdx < newChildren.length; newIdx++) {
            var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);
            _newFiber2 !== null && (shouldTrackSideEffects && _newFiber2.alternate !== null && existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key), lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx), previousNewFiber === null ? resultingFirstChild = _newFiber2 : previousNewFiber.sibling = _newFiber2, previousNewFiber = _newFiber2);
          }
          if (shouldTrackSideEffects && existingChildren.forEach(function(child2) {
            return deleteChild(returnFiber, child2);
          }), getIsHydrating()) {
            var _numberOfForks2 = newIdx;
            pushTreeFork(returnFiber, _numberOfForks2);
          }
          return resultingFirstChild;
        }
        function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {
          var iteratorFn = getIteratorFn(newChildrenIterable);
          if (typeof iteratorFn != "function")
            throw new Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
          {
            typeof Symbol == "function" && // $FlowFixMe Flow doesn't know about toStringTag
            newChildrenIterable[Symbol.toStringTag] === "Generator" && (didWarnAboutGenerators || error("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers."), didWarnAboutGenerators = !0), newChildrenIterable.entries === iteratorFn && (didWarnAboutMaps || error("Using Maps as children is not supported. Use an array of keyed ReactElements instead."), didWarnAboutMaps = !0);
            var _newChildren = iteratorFn.call(newChildrenIterable);
            if (_newChildren)
              for (var knownKeys = null, _step = _newChildren.next(); !_step.done; _step = _newChildren.next()) {
                var child = _step.value;
                knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
              }
          }
          var newChildren = iteratorFn.call(newChildrenIterable);
          if (newChildren == null)
            throw new Error("An iterable object provided no iterator.");
          for (var resultingFirstChild = null, previousNewFiber = null, oldFiber = currentFirstChild, lastPlacedIndex = 0, newIdx = 0, nextOldFiber = null, step = newChildren.next(); oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
            oldFiber.index > newIdx ? (nextOldFiber = oldFiber, oldFiber = null) : nextOldFiber = oldFiber.sibling;
            var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
            if (newFiber === null) {
              oldFiber === null && (oldFiber = nextOldFiber);
              break;
            }
            shouldTrackSideEffects && oldFiber && newFiber.alternate === null && deleteChild(returnFiber, oldFiber), lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx), previousNewFiber === null ? resultingFirstChild = newFiber : previousNewFiber.sibling = newFiber, previousNewFiber = newFiber, oldFiber = nextOldFiber;
          }
          if (step.done) {
            if (deleteRemainingChildren(returnFiber, oldFiber), getIsHydrating()) {
              var numberOfForks = newIdx;
              pushTreeFork(returnFiber, numberOfForks);
            }
            return resultingFirstChild;
          }
          if (oldFiber === null) {
            for (; !step.done; newIdx++, step = newChildren.next()) {
              var _newFiber3 = createChild(returnFiber, step.value, lanes);
              _newFiber3 !== null && (lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx), previousNewFiber === null ? resultingFirstChild = _newFiber3 : previousNewFiber.sibling = _newFiber3, previousNewFiber = _newFiber3);
            }
            if (getIsHydrating()) {
              var _numberOfForks3 = newIdx;
              pushTreeFork(returnFiber, _numberOfForks3);
            }
            return resultingFirstChild;
          }
          for (var existingChildren = mapRemainingChildren(returnFiber, oldFiber); !step.done; newIdx++, step = newChildren.next()) {
            var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);
            _newFiber4 !== null && (shouldTrackSideEffects && _newFiber4.alternate !== null && existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key), lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx), previousNewFiber === null ? resultingFirstChild = _newFiber4 : previousNewFiber.sibling = _newFiber4, previousNewFiber = _newFiber4);
          }
          if (shouldTrackSideEffects && existingChildren.forEach(function(child2) {
            return deleteChild(returnFiber, child2);
          }), getIsHydrating()) {
            var _numberOfForks4 = newIdx;
            pushTreeFork(returnFiber, _numberOfForks4);
          }
          return resultingFirstChild;
        }
        function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {
          if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
            deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
            var existing = useFiber(currentFirstChild, textContent);
            return existing.return = returnFiber, existing;
          }
          deleteRemainingChildren(returnFiber, currentFirstChild);
          var created = createFiberFromText(textContent, returnFiber.mode, lanes);
          return created.return = returnFiber, created;
        }
        function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {
          for (var key = element.key, child = currentFirstChild; child !== null; ) {
            if (child.key === key) {
              var elementType = element.type;
              if (elementType === REACT_FRAGMENT_TYPE) {
                if (child.tag === Fragment30) {
                  deleteRemainingChildren(returnFiber, child.sibling);
                  var existing = useFiber(child, element.props.children);
                  return existing.return = returnFiber, existing._debugSource = element._source, existing._debugOwner = element._owner, existing;
                }
              } else if (child.elementType === elementType || // Keep this check inline so it only runs on the false path:
              isCompatibleFamilyForHotReloading(child, element) || // Lazy types should reconcile their resolved type.
              // We need to do this after the Hot Reloading check above,
              // because hot reloading has different semantics than prod because
              // it doesn't resuspend. So we can't let the call below suspend.
              typeof elementType == "object" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === child.type) {
                deleteRemainingChildren(returnFiber, child.sibling);
                var _existing = useFiber(child, element.props);
                return _existing.ref = coerceRef(returnFiber, child, element), _existing.return = returnFiber, _existing._debugSource = element._source, _existing._debugOwner = element._owner, _existing;
              }
              deleteRemainingChildren(returnFiber, child);
              break;
            } else
              deleteChild(returnFiber, child);
            child = child.sibling;
          }
          if (element.type === REACT_FRAGMENT_TYPE) {
            var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);
            return created.return = returnFiber, created;
          } else {
            var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);
            return _created4.ref = coerceRef(returnFiber, currentFirstChild, element), _created4.return = returnFiber, _created4;
          }
        }
        function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {
          for (var key = portal.key, child = currentFirstChild; child !== null; ) {
            if (child.key === key)
              if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                deleteRemainingChildren(returnFiber, child.sibling);
                var existing = useFiber(child, portal.children || []);
                return existing.return = returnFiber, existing;
              } else {
                deleteRemainingChildren(returnFiber, child);
                break;
              }
            else
              deleteChild(returnFiber, child);
            child = child.sibling;
          }
          var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
          return created.return = returnFiber, created;
        }
        function reconcileChildFibers2(returnFiber, currentFirstChild, newChild, lanes) {
          var isUnkeyedTopLevelFragment = typeof newChild == "object" && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
          if (isUnkeyedTopLevelFragment && (newChild = newChild.props.children), typeof newChild == "object" && newChild !== null) {
            switch (newChild.$$typeof) {
              case REACT_ELEMENT_TYPE:
                return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));
              case REACT_PORTAL_TYPE:
                return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));
              case REACT_LAZY_TYPE:
                var payload = newChild._payload, init = newChild._init;
                return reconcileChildFibers2(returnFiber, currentFirstChild, init(payload), lanes);
            }
            if (isArray(newChild))
              return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
            if (getIteratorFn(newChild))
              return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
            throwOnInvalidObjectType(returnFiber, newChild);
          }
          return typeof newChild == "string" && newChild !== "" || typeof newChild == "number" ? placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, "" + newChild, lanes)) : (typeof newChild == "function" && warnOnFunctionType(returnFiber), deleteRemainingChildren(returnFiber, currentFirstChild));
        }
        return reconcileChildFibers2;
      }
      var reconcileChildFibers = ChildReconciler(!0), mountChildFibers = ChildReconciler(!1);
      function cloneChildFibers(current2, workInProgress2) {
        if (current2 !== null && workInProgress2.child !== current2.child)
          throw new Error("Resuming work not yet implemented.");
        if (workInProgress2.child !== null) {
          var currentChild = workInProgress2.child, newChild = createWorkInProgress(currentChild, currentChild.pendingProps);
          for (workInProgress2.child = newChild, newChild.return = workInProgress2; currentChild.sibling !== null; )
            currentChild = currentChild.sibling, newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps), newChild.return = workInProgress2;
          newChild.sibling = null;
        }
      }
      function resetChildFibers(workInProgress2, lanes) {
        for (var child = workInProgress2.child; child !== null; )
          resetWorkInProgress(child, lanes), child = child.sibling;
      }
      var NO_CONTEXT = {}, contextStackCursor$1 = createCursor(NO_CONTEXT), contextFiberStackCursor = createCursor(NO_CONTEXT), rootInstanceStackCursor = createCursor(NO_CONTEXT);
      function requiredContext(c13) {
        if (c13 === NO_CONTEXT)
          throw new Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
        return c13;
      }
      function getRootHostContainer() {
        var rootInstance = requiredContext(rootInstanceStackCursor.current);
        return rootInstance;
      }
      function pushHostContainer(fiber, nextRootInstance) {
        push(rootInstanceStackCursor, nextRootInstance, fiber), push(contextFiberStackCursor, fiber, fiber), push(contextStackCursor$1, NO_CONTEXT, fiber);
        var nextRootContext = getRootHostContext(nextRootInstance);
        pop(contextStackCursor$1, fiber), push(contextStackCursor$1, nextRootContext, fiber);
      }
      function popHostContainer(fiber) {
        pop(contextStackCursor$1, fiber), pop(contextFiberStackCursor, fiber), pop(rootInstanceStackCursor, fiber);
      }
      function getHostContext() {
        var context = requiredContext(contextStackCursor$1.current);
        return context;
      }
      function pushHostContext(fiber) {
        var rootInstance = requiredContext(rootInstanceStackCursor.current), context = requiredContext(contextStackCursor$1.current), nextContext = getChildHostContext(context, fiber.type);
        context !== nextContext && (push(contextFiberStackCursor, fiber, fiber), push(contextStackCursor$1, nextContext, fiber));
      }
      function popHostContext(fiber) {
        contextFiberStackCursor.current === fiber && (pop(contextStackCursor$1, fiber), pop(contextFiberStackCursor, fiber));
      }
      var DefaultSuspenseContext = 0, SubtreeSuspenseContextMask = 1, InvisibleParentSuspenseContext = 1, ForceSuspenseFallback = 2, suspenseStackCursor = createCursor(DefaultSuspenseContext);
      function hasSuspenseContext(parentContext, flag) {
        return (parentContext & flag) !== 0;
      }
      function setDefaultShallowSuspenseContext(parentContext) {
        return parentContext & SubtreeSuspenseContextMask;
      }
      function setShallowSuspenseContext(parentContext, shallowContext) {
        return parentContext & SubtreeSuspenseContextMask | shallowContext;
      }
      function addSubtreeSuspenseContext(parentContext, subtreeContext) {
        return parentContext | subtreeContext;
      }
      function pushSuspenseContext(fiber, newContext) {
        push(suspenseStackCursor, newContext, fiber);
      }
      function popSuspenseContext(fiber) {
        pop(suspenseStackCursor, fiber);
      }
      function shouldCaptureSuspense(workInProgress2, hasInvisibleParent) {
        var nextState = workInProgress2.memoizedState;
        if (nextState !== null)
          return nextState.dehydrated !== null;
        var props = workInProgress2.memoizedProps;
        return !0;
      }
      function findFirstSuspended(row) {
        for (var node = row; node !== null; ) {
          if (node.tag === SuspenseComponent) {
            var state = node.memoizedState;
            if (state !== null) {
              var dehydrated = state.dehydrated;
              if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated))
                return node;
            }
          } else if (node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't
          // keep track of whether it suspended or not.
          node.memoizedProps.revealOrder !== void 0) {
            var didSuspend = (node.flags & DidCapture) !== NoFlags;
            if (didSuspend)
              return node;
          } else if (node.child !== null) {
            node.child.return = node, node = node.child;
            continue;
          }
          if (node === row)
            return null;
          for (; node.sibling === null; ) {
            if (node.return === null || node.return === row)
              return null;
            node = node.return;
          }
          node.sibling.return = node.return, node = node.sibling;
        }
        return null;
      }
      var NoFlags$1 = (
        /*   */
        0
      ), HasEffect = (
        /* */
        1
      ), Insertion = (
        /*  */
        2
      ), Layout4 = (
        /*    */
        4
      ), Passive$1 = (
        /*   */
        8
      ), workInProgressSources = [];
      function resetWorkInProgressVersions() {
        for (var i7 = 0; i7 < workInProgressSources.length; i7++) {
          var mutableSource = workInProgressSources[i7];
          mutableSource._workInProgressVersionPrimary = null;
        }
        workInProgressSources.length = 0;
      }
      function registerMutableSourceForHydration(root2, mutableSource) {
        var getVersion = mutableSource._getVersion, version = getVersion(mutableSource._source);
        root2.mutableSourceEagerHydrationData == null ? root2.mutableSourceEagerHydrationData = [mutableSource, version] : root2.mutableSourceEagerHydrationData.push(mutableSource, version);
      }
      var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig, didWarnAboutMismatchedHooksForComponent, didWarnUncachedGetSnapshot;
      didWarnAboutMismatchedHooksForComponent = /* @__PURE__ */ new Set();
      var renderLanes = NoLanes, currentlyRenderingFiber$1 = null, currentHook = null, workInProgressHook = null, didScheduleRenderPhaseUpdate = !1, didScheduleRenderPhaseUpdateDuringThisPass = !1, localIdCounter = 0, globalClientIdCounter = 0, RE_RENDER_LIMIT = 25, currentHookNameInDev = null, hookTypesDev = null, hookTypesUpdateIndexDev = -1, ignorePreviousDependencies = !1;
      function mountHookTypesDev() {
        {
          var hookName = currentHookNameInDev;
          hookTypesDev === null ? hookTypesDev = [hookName] : hookTypesDev.push(hookName);
        }
      }
      function updateHookTypesDev() {
        {
          var hookName = currentHookNameInDev;
          hookTypesDev !== null && (hookTypesUpdateIndexDev++, hookTypesDev[hookTypesUpdateIndexDev] !== hookName && warnOnHookMismatchInDev(hookName));
        }
      }
      function checkDepsAreArrayDev(deps) {
        deps != null && !isArray(deps) && error("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", currentHookNameInDev, typeof deps);
      }
      function warnOnHookMismatchInDev(currentHookName) {
        {
          var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);
          if (!didWarnAboutMismatchedHooksForComponent.has(componentName) && (didWarnAboutMismatchedHooksForComponent.add(componentName), hookTypesDev !== null)) {
            for (var table = "", secondColumnStart = 30, i7 = 0; i7 <= hookTypesUpdateIndexDev; i7++) {
              for (var oldHookName = hookTypesDev[i7], newHookName = i7 === hookTypesUpdateIndexDev ? currentHookName : oldHookName, row = i7 + 1 + ". " + oldHookName; row.length < secondColumnStart; )
                row += " ";
              row += newHookName + `
`, table += row;
            }
            error(`React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks

   Previous render            Next render
   ------------------------------------------------------
%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
`, componentName, table);
          }
        }
      }
      function throwInvalidHookError() {
        throw new Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);
      }
      function areHookInputsEqual(nextDeps, prevDeps) {
        if (ignorePreviousDependencies)
          return !1;
        if (prevDeps === null)
          return error("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev), !1;
        nextDeps.length !== prevDeps.length && error(`The final argument passed to %s changed size between renders. The order and size of this array must remain constant.

Previous: %s
Incoming: %s`, currentHookNameInDev, "[" + prevDeps.join(", ") + "]", "[" + nextDeps.join(", ") + "]");
        for (var i7 = 0; i7 < prevDeps.length && i7 < nextDeps.length; i7++)
          if (!objectIs(nextDeps[i7], prevDeps[i7]))
            return !1;
        return !0;
      }
      function renderWithHooks(current2, workInProgress2, Component2, props, secondArg, nextRenderLanes) {
        renderLanes = nextRenderLanes, currentlyRenderingFiber$1 = workInProgress2, hookTypesDev = current2 !== null ? current2._debugHookTypes : null, hookTypesUpdateIndexDev = -1, ignorePreviousDependencies = current2 !== null && current2.type !== workInProgress2.type, workInProgress2.memoizedState = null, workInProgress2.updateQueue = null, workInProgress2.lanes = NoLanes, current2 !== null && current2.memoizedState !== null ? ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV : hookTypesDev !== null ? ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV : ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
        var children = Component2(props, secondArg);
        if (didScheduleRenderPhaseUpdateDuringThisPass) {
          var numberOfReRenders = 0;
          do {
            if (didScheduleRenderPhaseUpdateDuringThisPass = !1, localIdCounter = 0, numberOfReRenders >= RE_RENDER_LIMIT)
              throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
            numberOfReRenders += 1, ignorePreviousDependencies = !1, currentHook = null, workInProgressHook = null, workInProgress2.updateQueue = null, hookTypesUpdateIndexDev = -1, ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV, children = Component2(props, secondArg);
          } while (didScheduleRenderPhaseUpdateDuringThisPass);
        }
        ReactCurrentDispatcher$1.current = ContextOnlyDispatcher, workInProgress2._debugHookTypes = hookTypesDev;
        var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
        if (renderLanes = NoLanes, currentlyRenderingFiber$1 = null, currentHook = null, workInProgressHook = null, currentHookNameInDev = null, hookTypesDev = null, hookTypesUpdateIndexDev = -1, current2 !== null && (current2.flags & StaticMask) !== (workInProgress2.flags & StaticMask) && // Disable this warning in legacy mode, because legacy Suspense is weird
        // and creates false positives. To make this work in legacy mode, we'd
        // need to mark fibers that commit in an incomplete state, somehow. For
        // now I'll disable the warning that most of the bugs that would trigger
        // it are either exclusive to concurrent mode or exist in both.
        (current2.mode & ConcurrentMode) !== NoMode && error("Internal React error: Expected static flag was missing. Please notify the React team."), didScheduleRenderPhaseUpdate = !1, didRenderTooFewHooks)
          throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
        return children;
      }
      function checkDidRenderIdHook() {
        var didRenderIdHook = localIdCounter !== 0;
        return localIdCounter = 0, didRenderIdHook;
      }
      function bailoutHooks(current2, workInProgress2, lanes) {
        workInProgress2.updateQueue = current2.updateQueue, (workInProgress2.mode & StrictEffectsMode) !== NoMode ? workInProgress2.flags &= ~(MountPassiveDev | MountLayoutDev | Passive | Update) : workInProgress2.flags &= ~(Passive | Update), current2.lanes = removeLanes(current2.lanes, lanes);
      }
      function resetHooksAfterThrow() {
        if (ReactCurrentDispatcher$1.current = ContextOnlyDispatcher, didScheduleRenderPhaseUpdate) {
          for (var hook = currentlyRenderingFiber$1.memoizedState; hook !== null; ) {
            var queue = hook.queue;
            queue !== null && (queue.pending = null), hook = hook.next;
          }
          didScheduleRenderPhaseUpdate = !1;
        }
        renderLanes = NoLanes, currentlyRenderingFiber$1 = null, currentHook = null, workInProgressHook = null, hookTypesDev = null, hookTypesUpdateIndexDev = -1, currentHookNameInDev = null, isUpdatingOpaqueValueInRenderPhase = !1, didScheduleRenderPhaseUpdateDuringThisPass = !1, localIdCounter = 0;
      }
      function mountWorkInProgressHook() {
        var hook = {
          memoizedState: null,
          baseState: null,
          baseQueue: null,
          queue: null,
          next: null
        };
        return workInProgressHook === null ? currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook : workInProgressHook = workInProgressHook.next = hook, workInProgressHook;
      }
      function updateWorkInProgressHook() {
        var nextCurrentHook;
        if (currentHook === null) {
          var current2 = currentlyRenderingFiber$1.alternate;
          current2 !== null ? nextCurrentHook = current2.memoizedState : nextCurrentHook = null;
        } else
          nextCurrentHook = currentHook.next;
        var nextWorkInProgressHook;
        if (workInProgressHook === null ? nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState : nextWorkInProgressHook = workInProgressHook.next, nextWorkInProgressHook !== null)
          workInProgressHook = nextWorkInProgressHook, nextWorkInProgressHook = workInProgressHook.next, currentHook = nextCurrentHook;
        else {
          if (nextCurrentHook === null)
            throw new Error("Rendered more hooks than during the previous render.");
          currentHook = nextCurrentHook;
          var newHook = {
            memoizedState: currentHook.memoizedState,
            baseState: currentHook.baseState,
            baseQueue: currentHook.baseQueue,
            queue: currentHook.queue,
            next: null
          };
          workInProgressHook === null ? currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook : workInProgressHook = workInProgressHook.next = newHook;
        }
        return workInProgressHook;
      }
      function createFunctionComponentUpdateQueue() {
        return {
          lastEffect: null,
          stores: null
        };
      }
      function basicStateReducer(state, action12) {
        return typeof action12 == "function" ? action12(state) : action12;
      }
      function mountReducer(reducer, initialArg, init) {
        var hook = mountWorkInProgressHook(), initialState;
        init !== void 0 ? initialState = init(initialArg) : initialState = initialArg, hook.memoizedState = hook.baseState = initialState;
        var queue = {
          pending: null,
          interleaved: null,
          lanes: NoLanes,
          dispatch: null,
          lastRenderedReducer: reducer,
          lastRenderedState: initialState
        };
        hook.queue = queue;
        var dispatch = queue.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, queue);
        return [hook.memoizedState, dispatch];
      }
      function updateReducer(reducer, initialArg, init) {
        var hook = updateWorkInProgressHook(), queue = hook.queue;
        if (queue === null)
          throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
        queue.lastRenderedReducer = reducer;
        var current2 = currentHook, baseQueue = current2.baseQueue, pendingQueue = queue.pending;
        if (pendingQueue !== null) {
          if (baseQueue !== null) {
            var baseFirst = baseQueue.next, pendingFirst = pendingQueue.next;
            baseQueue.next = pendingFirst, pendingQueue.next = baseFirst;
          }
          current2.baseQueue !== baseQueue && error("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React."), current2.baseQueue = baseQueue = pendingQueue, queue.pending = null;
        }
        if (baseQueue !== null) {
          var first = baseQueue.next, newState = current2.baseState, newBaseState = null, newBaseQueueFirst = null, newBaseQueueLast = null, update = first;
          do {
            var updateLane = update.lane;
            if (isSubsetOfLanes(renderLanes, updateLane)) {
              if (newBaseQueueLast !== null) {
                var _clone = {
                  // This update is going to be committed so we never want uncommit
                  // it. Using NoLane works because 0 is a subset of all bitmasks, so
                  // this will never be skipped by the check above.
                  lane: NoLane,
                  action: update.action,
                  hasEagerState: update.hasEagerState,
                  eagerState: update.eagerState,
                  next: null
                };
                newBaseQueueLast = newBaseQueueLast.next = _clone;
              }
              if (update.hasEagerState)
                newState = update.eagerState;
              else {
                var action12 = update.action;
                newState = reducer(newState, action12);
              }
            } else {
              var clone = {
                lane: updateLane,
                action: update.action,
                hasEagerState: update.hasEagerState,
                eagerState: update.eagerState,
                next: null
              };
              newBaseQueueLast === null ? (newBaseQueueFirst = newBaseQueueLast = clone, newBaseState = newState) : newBaseQueueLast = newBaseQueueLast.next = clone, currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane), markSkippedUpdateLanes(updateLane);
            }
            update = update.next;
          } while (update !== null && update !== first);
          newBaseQueueLast === null ? newBaseState = newState : newBaseQueueLast.next = newBaseQueueFirst, objectIs(newState, hook.memoizedState) || markWorkInProgressReceivedUpdate(), hook.memoizedState = newState, hook.baseState = newBaseState, hook.baseQueue = newBaseQueueLast, queue.lastRenderedState = newState;
        }
        var lastInterleaved = queue.interleaved;
        if (lastInterleaved !== null) {
          var interleaved = lastInterleaved;
          do {
            var interleavedLane = interleaved.lane;
            currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, interleavedLane), markSkippedUpdateLanes(interleavedLane), interleaved = interleaved.next;
          } while (interleaved !== lastInterleaved);
        } else
          baseQueue === null && (queue.lanes = NoLanes);
        var dispatch = queue.dispatch;
        return [hook.memoizedState, dispatch];
      }
      function rerenderReducer(reducer, initialArg, init) {
        var hook = updateWorkInProgressHook(), queue = hook.queue;
        if (queue === null)
          throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
        queue.lastRenderedReducer = reducer;
        var dispatch = queue.dispatch, lastRenderPhaseUpdate = queue.pending, newState = hook.memoizedState;
        if (lastRenderPhaseUpdate !== null) {
          queue.pending = null;
          var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next, update = firstRenderPhaseUpdate;
          do {
            var action12 = update.action;
            newState = reducer(newState, action12), update = update.next;
          } while (update !== firstRenderPhaseUpdate);
          objectIs(newState, hook.memoizedState) || markWorkInProgressReceivedUpdate(), hook.memoizedState = newState, hook.baseQueue === null && (hook.baseState = newState), queue.lastRenderedState = newState;
        }
        return [newState, dispatch];
      }
      function mountMutableSource(source, getSnapshot, subscribe) {
      }
      function updateMutableSource(source, getSnapshot, subscribe) {
      }
      function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var fiber = currentlyRenderingFiber$1, hook = mountWorkInProgressHook(), nextSnapshot, isHydrating2 = getIsHydrating();
        if (isHydrating2) {
          if (getServerSnapshot === void 0)
            throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
          nextSnapshot = getServerSnapshot(), didWarnUncachedGetSnapshot || nextSnapshot !== getServerSnapshot() && (error("The result of getServerSnapshot should be cached to avoid an infinite loop"), didWarnUncachedGetSnapshot = !0);
        } else {
          if (nextSnapshot = getSnapshot(), !didWarnUncachedGetSnapshot) {
            var cachedSnapshot = getSnapshot();
            objectIs(nextSnapshot, cachedSnapshot) || (error("The result of getSnapshot should be cached to avoid an infinite loop"), didWarnUncachedGetSnapshot = !0);
          }
          var root2 = getWorkInProgressRoot();
          if (root2 === null)
            throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
          includesBlockingLane(root2, renderLanes) || pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
        }
        hook.memoizedState = nextSnapshot;
        var inst = {
          value: nextSnapshot,
          getSnapshot
        };
        return hook.queue = inst, mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]), fiber.flags |= Passive, pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), void 0, null), nextSnapshot;
      }
      function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
        var fiber = currentlyRenderingFiber$1, hook = updateWorkInProgressHook(), nextSnapshot = getSnapshot();
        if (!didWarnUncachedGetSnapshot) {
          var cachedSnapshot = getSnapshot();
          objectIs(nextSnapshot, cachedSnapshot) || (error("The result of getSnapshot should be cached to avoid an infinite loop"), didWarnUncachedGetSnapshot = !0);
        }
        var prevSnapshot = hook.memoizedState, snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);
        snapshotChanged && (hook.memoizedState = nextSnapshot, markWorkInProgressReceivedUpdate());
        var inst = hook.queue;
        if (updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]), inst.getSnapshot !== getSnapshot || snapshotChanged || // Check if the susbcribe function changed. We can save some memory by
        // checking whether we scheduled a subscription effect above.
        workInProgressHook !== null && workInProgressHook.memoizedState.tag & HasEffect) {
          fiber.flags |= Passive, pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), void 0, null);
          var root2 = getWorkInProgressRoot();
          if (root2 === null)
            throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
          includesBlockingLane(root2, renderLanes) || pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
        }
        return nextSnapshot;
      }
      function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {
        fiber.flags |= StoreConsistency;
        var check = {
          getSnapshot,
          value: renderedSnapshot
        }, componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
        if (componentUpdateQueue === null)
          componentUpdateQueue = createFunctionComponentUpdateQueue(), currentlyRenderingFiber$1.updateQueue = componentUpdateQueue, componentUpdateQueue.stores = [check];
        else {
          var stores = componentUpdateQueue.stores;
          stores === null ? componentUpdateQueue.stores = [check] : stores.push(check);
        }
      }
      function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {
        inst.value = nextSnapshot, inst.getSnapshot = getSnapshot, checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);
      }
      function subscribeToStore(fiber, inst, subscribe) {
        var handleStoreChange = function() {
          checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);
        };
        return subscribe(handleStoreChange);
      }
      function checkIfSnapshotChanged(inst) {
        var latestGetSnapshot = inst.getSnapshot, prevValue = inst.value;
        try {
          var nextValue = latestGetSnapshot();
          return !objectIs(prevValue, nextValue);
        } catch {
          return !0;
        }
      }
      function forceStoreRerender(fiber) {
        var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
        root2 !== null && scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
      }
      function mountState(initialState) {
        var hook = mountWorkInProgressHook();
        typeof initialState == "function" && (initialState = initialState()), hook.memoizedState = hook.baseState = initialState;
        var queue = {
          pending: null,
          interleaved: null,
          lanes: NoLanes,
          dispatch: null,
          lastRenderedReducer: basicStateReducer,
          lastRenderedState: initialState
        };
        hook.queue = queue;
        var dispatch = queue.dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);
        return [hook.memoizedState, dispatch];
      }
      function updateState(initialState) {
        return updateReducer(basicStateReducer);
      }
      function rerenderState(initialState) {
        return rerenderReducer(basicStateReducer);
      }
      function pushEffect(tag, create, destroy, deps) {
        var effect = {
          tag,
          create,
          destroy,
          deps,
          // Circular
          next: null
        }, componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
        if (componentUpdateQueue === null)
          componentUpdateQueue = createFunctionComponentUpdateQueue(), currentlyRenderingFiber$1.updateQueue = componentUpdateQueue, componentUpdateQueue.lastEffect = effect.next = effect;
        else {
          var lastEffect = componentUpdateQueue.lastEffect;
          if (lastEffect === null)
            componentUpdateQueue.lastEffect = effect.next = effect;
          else {
            var firstEffect = lastEffect.next;
            lastEffect.next = effect, effect.next = firstEffect, componentUpdateQueue.lastEffect = effect;
          }
        }
        return effect;
      }
      function mountRef(initialValue) {
        var hook = mountWorkInProgressHook();
        {
          var _ref2 = {
            current: initialValue
          };
          return hook.memoizedState = _ref2, _ref2;
        }
      }
      function updateRef(initialValue) {
        var hook = updateWorkInProgressHook();
        return hook.memoizedState;
      }
      function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = mountWorkInProgressHook(), nextDeps = deps === void 0 ? null : deps;
        currentlyRenderingFiber$1.flags |= fiberFlags, hook.memoizedState = pushEffect(HasEffect | hookFlags, create, void 0, nextDeps);
      }
      function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
        var hook = updateWorkInProgressHook(), nextDeps = deps === void 0 ? null : deps, destroy = void 0;
        if (currentHook !== null) {
          var prevEffect = currentHook.memoizedState;
          if (destroy = prevEffect.destroy, nextDeps !== null) {
            var prevDeps = prevEffect.deps;
            if (areHookInputsEqual(nextDeps, prevDeps)) {
              hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);
              return;
            }
          }
        }
        currentlyRenderingFiber$1.flags |= fiberFlags, hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);
      }
      function mountEffect(create, deps) {
        return (currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode ? mountEffectImpl(MountPassiveDev | Passive | PassiveStatic, Passive$1, create, deps) : mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);
      }
      function updateEffect(create, deps) {
        return updateEffectImpl(Passive, Passive$1, create, deps);
      }
      function mountInsertionEffect(create, deps) {
        return mountEffectImpl(Update, Insertion, create, deps);
      }
      function updateInsertionEffect(create, deps) {
        return updateEffectImpl(Update, Insertion, create, deps);
      }
      function mountLayoutEffect(create, deps) {
        var fiberFlags = Update;
        return fiberFlags |= LayoutStatic, (currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode && (fiberFlags |= MountLayoutDev), mountEffectImpl(fiberFlags, Layout4, create, deps);
      }
      function updateLayoutEffect(create, deps) {
        return updateEffectImpl(Update, Layout4, create, deps);
      }
      function imperativeHandleEffect(create, ref) {
        if (typeof ref == "function") {
          var refCallback = ref, _inst = create();
          return refCallback(_inst), function() {
            refCallback(null);
          };
        } else if (ref != null) {
          var refObject = ref;
          refObject.hasOwnProperty("current") || error("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(refObject).join(", ") + "}");
          var _inst2 = create();
          return refObject.current = _inst2, function() {
            refObject.current = null;
          };
        }
      }
      function mountImperativeHandle(ref, create, deps) {
        typeof create != "function" && error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
        var effectDeps = deps != null ? deps.concat([ref]) : null, fiberFlags = Update;
        return fiberFlags |= LayoutStatic, (currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode && (fiberFlags |= MountLayoutDev), mountEffectImpl(fiberFlags, Layout4, imperativeHandleEffect.bind(null, create, ref), effectDeps);
      }
      function updateImperativeHandle(ref, create, deps) {
        typeof create != "function" && error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
        var effectDeps = deps != null ? deps.concat([ref]) : null;
        return updateEffectImpl(Update, Layout4, imperativeHandleEffect.bind(null, create, ref), effectDeps);
      }
      function mountDebugValue(value, formatterFn) {
      }
      var updateDebugValue = mountDebugValue;
      function mountCallback(callback, deps) {
        var hook = mountWorkInProgressHook(), nextDeps = deps === void 0 ? null : deps;
        return hook.memoizedState = [callback, nextDeps], callback;
      }
      function updateCallback(callback, deps) {
        var hook = updateWorkInProgressHook(), nextDeps = deps === void 0 ? null : deps, prevState = hook.memoizedState;
        if (prevState !== null && nextDeps !== null) {
          var prevDeps = prevState[1];
          if (areHookInputsEqual(nextDeps, prevDeps))
            return prevState[0];
        }
        return hook.memoizedState = [callback, nextDeps], callback;
      }
      function mountMemo(nextCreate, deps) {
        var hook = mountWorkInProgressHook(), nextDeps = deps === void 0 ? null : deps, nextValue = nextCreate();
        return hook.memoizedState = [nextValue, nextDeps], nextValue;
      }
      function updateMemo(nextCreate, deps) {
        var hook = updateWorkInProgressHook(), nextDeps = deps === void 0 ? null : deps, prevState = hook.memoizedState;
        if (prevState !== null && nextDeps !== null) {
          var prevDeps = prevState[1];
          if (areHookInputsEqual(nextDeps, prevDeps))
            return prevState[0];
        }
        var nextValue = nextCreate();
        return hook.memoizedState = [nextValue, nextDeps], nextValue;
      }
      function mountDeferredValue(value) {
        var hook = mountWorkInProgressHook();
        return hook.memoizedState = value, value;
      }
      function updateDeferredValue(value) {
        var hook = updateWorkInProgressHook(), resolvedCurrentHook = currentHook, prevValue = resolvedCurrentHook.memoizedState;
        return updateDeferredValueImpl(hook, prevValue, value);
      }
      function rerenderDeferredValue(value) {
        var hook = updateWorkInProgressHook();
        if (currentHook === null)
          return hook.memoizedState = value, value;
        var prevValue = currentHook.memoizedState;
        return updateDeferredValueImpl(hook, prevValue, value);
      }
      function updateDeferredValueImpl(hook, prevValue, value) {
        var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);
        if (shouldDeferValue) {
          if (!objectIs(value, prevValue)) {
            var deferredLane = claimNextTransitionLane();
            currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, deferredLane), markSkippedUpdateLanes(deferredLane), hook.baseState = !0;
          }
          return prevValue;
        } else
          return hook.baseState && (hook.baseState = !1, markWorkInProgressReceivedUpdate()), hook.memoizedState = value, value;
      }
      function startTransition(setPending, callback, options2) {
        var previousPriority = getCurrentUpdatePriority();
        setCurrentUpdatePriority(higherEventPriority(previousPriority, ContinuousEventPriority)), setPending(!0);
        var prevTransition = ReactCurrentBatchConfig$2.transition;
        ReactCurrentBatchConfig$2.transition = {};
        var currentTransition = ReactCurrentBatchConfig$2.transition;
        ReactCurrentBatchConfig$2.transition._updatedFibers = /* @__PURE__ */ new Set();
        try {
          setPending(!1), callback();
        } finally {
          if (setCurrentUpdatePriority(previousPriority), ReactCurrentBatchConfig$2.transition = prevTransition, prevTransition === null && currentTransition._updatedFibers) {
            var updatedFibersCount = currentTransition._updatedFibers.size;
            updatedFibersCount > 10 && warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."), currentTransition._updatedFibers.clear();
          }
        }
      }
      function mountTransition() {
        var _mountState = mountState(!1), isPending = _mountState[0], setPending = _mountState[1], start = startTransition.bind(null, setPending), hook = mountWorkInProgressHook();
        return hook.memoizedState = start, [isPending, start];
      }
      function updateTransition() {
        var _updateState = updateState(), isPending = _updateState[0], hook = updateWorkInProgressHook(), start = hook.memoizedState;
        return [isPending, start];
      }
      function rerenderTransition() {
        var _rerenderState = rerenderState(), isPending = _rerenderState[0], hook = updateWorkInProgressHook(), start = hook.memoizedState;
        return [isPending, start];
      }
      var isUpdatingOpaqueValueInRenderPhase = !1;
      function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {
        return isUpdatingOpaqueValueInRenderPhase;
      }
      function mountId() {
        var hook = mountWorkInProgressHook(), root2 = getWorkInProgressRoot(), identifierPrefix = root2.identifierPrefix, id;
        if (getIsHydrating()) {
          var treeId = getTreeId();
          id = ":" + identifierPrefix + "R" + treeId;
          var localId = localIdCounter++;
          localId > 0 && (id += "H" + localId.toString(32)), id += ":";
        } else {
          var globalClientId = globalClientIdCounter++;
          id = ":" + identifierPrefix + "r" + globalClientId.toString(32) + ":";
        }
        return hook.memoizedState = id, id;
      }
      function updateId() {
        var hook = updateWorkInProgressHook(), id = hook.memoizedState;
        return id;
      }
      function dispatchReducerAction(fiber, queue, action12) {
        typeof arguments[3] == "function" && error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        var lane = requestUpdateLane(fiber), update = {
          lane,
          action: action12,
          hasEagerState: !1,
          eagerState: null,
          next: null
        };
        if (isRenderPhaseUpdate(fiber))
          enqueueRenderPhaseUpdate(queue, update);
        else {
          var root2 = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
          if (root2 !== null) {
            var eventTime = requestEventTime();
            scheduleUpdateOnFiber(root2, fiber, lane, eventTime), entangleTransitionUpdate(root2, queue, lane);
          }
        }
        markUpdateInDevTools(fiber, lane);
      }
      function dispatchSetState(fiber, queue, action12) {
        typeof arguments[3] == "function" && error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
        var lane = requestUpdateLane(fiber), update = {
          lane,
          action: action12,
          hasEagerState: !1,
          eagerState: null,
          next: null
        };
        if (isRenderPhaseUpdate(fiber))
          enqueueRenderPhaseUpdate(queue, update);
        else {
          var alternate = fiber.alternate;
          if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {
            var lastRenderedReducer = queue.lastRenderedReducer;
            if (lastRenderedReducer !== null) {
              var prevDispatcher;
              prevDispatcher = ReactCurrentDispatcher$1.current, ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                var currentState = queue.lastRenderedState, eagerState = lastRenderedReducer(currentState, action12);
                if (update.hasEagerState = !0, update.eagerState = eagerState, objectIs(eagerState, currentState)) {
                  enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane);
                  return;
                }
              } catch {
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            }
          }
          var root2 = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
          if (root2 !== null) {
            var eventTime = requestEventTime();
            scheduleUpdateOnFiber(root2, fiber, lane, eventTime), entangleTransitionUpdate(root2, queue, lane);
          }
        }
        markUpdateInDevTools(fiber, lane);
      }
      function isRenderPhaseUpdate(fiber) {
        var alternate = fiber.alternate;
        return fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1;
      }
      function enqueueRenderPhaseUpdate(queue, update) {
        didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = !0;
        var pending = queue.pending;
        pending === null ? update.next = update : (update.next = pending.next, pending.next = update), queue.pending = update;
      }
      function entangleTransitionUpdate(root2, queue, lane) {
        if (isTransitionLane(lane)) {
          var queueLanes = queue.lanes;
          queueLanes = intersectLanes(queueLanes, root2.pendingLanes);
          var newQueueLanes = mergeLanes(queueLanes, lane);
          queue.lanes = newQueueLanes, markRootEntangled(root2, newQueueLanes);
        }
      }
      function markUpdateInDevTools(fiber, lane, action12) {
        markStateUpdateScheduled(fiber, lane);
      }
      var ContextOnlyDispatcher = {
        readContext,
        useCallback: throwInvalidHookError,
        useContext: throwInvalidHookError,
        useEffect: throwInvalidHookError,
        useImperativeHandle: throwInvalidHookError,
        useInsertionEffect: throwInvalidHookError,
        useLayoutEffect: throwInvalidHookError,
        useMemo: throwInvalidHookError,
        useReducer: throwInvalidHookError,
        useRef: throwInvalidHookError,
        useState: throwInvalidHookError,
        useDebugValue: throwInvalidHookError,
        useDeferredValue: throwInvalidHookError,
        useTransition: throwInvalidHookError,
        useMutableSource: throwInvalidHookError,
        useSyncExternalStore: throwInvalidHookError,
        useId: throwInvalidHookError,
        unstable_isNewReconciler: enableNewReconciler
      }, HooksDispatcherOnMountInDEV = null, HooksDispatcherOnMountWithHookTypesInDEV = null, HooksDispatcherOnUpdateInDEV = null, HooksDispatcherOnRerenderInDEV = null, InvalidNestedHooksDispatcherOnMountInDEV = null, InvalidNestedHooksDispatcherOnUpdateInDEV = null, InvalidNestedHooksDispatcherOnRerenderInDEV = null;
      {
        var warnInvalidContextAccess = function() {
          error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
        }, warnInvalidHookAccess = function() {
          error("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
        };
        HooksDispatcherOnMountInDEV = {
          readContext: function(context) {
            return readContext(context);
          },
          useCallback: function(callback, deps) {
            return currentHookNameInDev = "useCallback", mountHookTypesDev(), checkDepsAreArrayDev(deps), mountCallback(callback, deps);
          },
          useContext: function(context) {
            return currentHookNameInDev = "useContext", mountHookTypesDev(), readContext(context);
          },
          useEffect: function(create, deps) {
            return currentHookNameInDev = "useEffect", mountHookTypesDev(), checkDepsAreArrayDev(deps), mountEffect(create, deps);
          },
          useImperativeHandle: function(ref, create, deps) {
            return currentHookNameInDev = "useImperativeHandle", mountHookTypesDev(), checkDepsAreArrayDev(deps), mountImperativeHandle(ref, create, deps);
          },
          useInsertionEffect: function(create, deps) {
            return currentHookNameInDev = "useInsertionEffect", mountHookTypesDev(), checkDepsAreArrayDev(deps), mountInsertionEffect(create, deps);
          },
          useLayoutEffect: function(create, deps) {
            return currentHookNameInDev = "useLayoutEffect", mountHookTypesDev(), checkDepsAreArrayDev(deps), mountLayoutEffect(create, deps);
          },
          useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo", mountHookTypesDev(), checkDepsAreArrayDev(deps);
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
              return mountMemo(create, deps);
            } finally {
              ReactCurrentDispatcher$1.current = prevDispatcher;
            }
          },
          useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer", mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
              return mountReducer(reducer, initialArg, init);
            } finally {
              ReactCurrentDispatcher$1.current = prevDispatcher;
            }
          },
          useRef: function(initialValue) {
            return currentHookNameInDev = "useRef", mountHookTypesDev(), mountRef(initialValue);
          },
          useState: function(initialState) {
            currentHookNameInDev = "useState", mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
              return mountState(initialState);
            } finally {
              ReactCurrentDispatcher$1.current = prevDispatcher;
            }
          },
          useDebugValue: function(value, formatterFn) {
            return currentHookNameInDev = "useDebugValue", mountHookTypesDev(), void 0;
          },
          useDeferredValue: function(value) {
            return currentHookNameInDev = "useDeferredValue", mountHookTypesDev(), mountDeferredValue(value);
          },
          useTransition: function() {
            return currentHookNameInDev = "useTransition", mountHookTypesDev(), mountTransition();
          },
          useMutableSource: function(source, getSnapshot, subscribe) {
            return currentHookNameInDev = "useMutableSource", mountHookTypesDev(), void 0;
          },
          useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            return currentHookNameInDev = "useSyncExternalStore", mountHookTypesDev(), mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
          },
          useId: function() {
            return currentHookNameInDev = "useId", mountHookTypesDev(), mountId();
          },
          unstable_isNewReconciler: enableNewReconciler
        }, HooksDispatcherOnMountWithHookTypesInDEV = {
          readContext: function(context) {
            return readContext(context);
          },
          useCallback: function(callback, deps) {
            return currentHookNameInDev = "useCallback", updateHookTypesDev(), mountCallback(callback, deps);
          },
          useContext: function(context) {
            return currentHookNameInDev = "useContext", updateHookTypesDev(), readContext(context);
          },
          useEffect: function(create, deps) {
            return currentHookNameInDev = "useEffect", updateHookTypesDev(), mountEffect(create, deps);
          },
          useImperativeHandle: function(ref, create, deps) {
            return currentHookNameInDev = "useImperativeHandle", updateHookTypesDev(), mountImperativeHandle(ref, create, deps);
          },
          useInsertionEffect: function(create, deps) {
            return currentHookNameInDev = "useInsertionEffect", updateHookTypesDev(), mountInsertionEffect(create, deps);
          },
          useLayoutEffect: function(create, deps) {
            return currentHookNameInDev = "useLayoutEffect", updateHookTypesDev(), mountLayoutEffect(create, deps);
          },
          useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo", updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
              return mountMemo(create, deps);
            } finally {
              ReactCurrentDispatcher$1.current = prevDispatcher;
            }
          },
          useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer", updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
              return mountReducer(reducer, initialArg, init);
            } finally {
              ReactCurrentDispatcher$1.current = prevDispatcher;
            }
          },
          useRef: function(initialValue) {
            return currentHookNameInDev = "useRef", updateHookTypesDev(), mountRef(initialValue);
          },
          useState: function(initialState) {
            currentHookNameInDev = "useState", updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
              return mountState(initialState);
            } finally {
              ReactCurrentDispatcher$1.current = prevDispatcher;
            }
          },
          useDebugValue: function(value, formatterFn) {
            return currentHookNameInDev = "useDebugValue", updateHookTypesDev(), void 0;
          },
          useDeferredValue: function(value) {
            return currentHookNameInDev = "useDeferredValue", updateHookTypesDev(), mountDeferredValue(value);
          },
          useTransition: function() {
            return currentHookNameInDev = "useTransition", updateHookTypesDev(), mountTransition();
          },
          useMutableSource: function(source, getSnapshot, subscribe) {
            return currentHookNameInDev = "useMutableSource", updateHookTypesDev(), void 0;
          },
          useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            return currentHookNameInDev = "useSyncExternalStore", updateHookTypesDev(), mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
          },
          useId: function() {
            return currentHookNameInDev = "useId", updateHookTypesDev(), mountId();
          },
          unstable_isNewReconciler: enableNewReconciler
        }, HooksDispatcherOnUpdateInDEV = {
          readContext: function(context) {
            return readContext(context);
          },
          useCallback: function(callback, deps) {
            return currentHookNameInDev = "useCallback", updateHookTypesDev(), updateCallback(callback, deps);
          },
          useContext: function(context) {
            return currentHookNameInDev = "useContext", updateHookTypesDev(), readContext(context);
          },
          useEffect: function(create, deps) {
            return currentHookNameInDev = "useEffect", updateHookTypesDev(), updateEffect(create, deps);
          },
          useImperativeHandle: function(ref, create, deps) {
            return currentHookNameInDev = "useImperativeHandle", updateHookTypesDev(), updateImperativeHandle(ref, create, deps);
          },
          useInsertionEffect: function(create, deps) {
            return currentHookNameInDev = "useInsertionEffect", updateHookTypesDev(), updateInsertionEffect(create, deps);
          },
          useLayoutEffect: function(create, deps) {
            return currentHookNameInDev = "useLayoutEffect", updateHookTypesDev(), updateLayoutEffect(create, deps);
          },
          useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo", updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
              return updateMemo(create, deps);
            } finally {
              ReactCurrentDispatcher$1.current = prevDispatcher;
            }
          },
          useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer", updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
              return updateReducer(reducer, initialArg, init);
            } finally {
              ReactCurrentDispatcher$1.current = prevDispatcher;
            }
          },
          useRef: function(initialValue) {
            return currentHookNameInDev = "useRef", updateHookTypesDev(), updateRef();
          },
          useState: function(initialState) {
            currentHookNameInDev = "useState", updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
              return updateState(initialState);
            } finally {
              ReactCurrentDispatcher$1.current = prevDispatcher;
            }
          },
          useDebugValue: function(value, formatterFn) {
            return currentHookNameInDev = "useDebugValue", updateHookTypesDev(), updateDebugValue();
          },
          useDeferredValue: function(value) {
            return currentHookNameInDev = "useDeferredValue", updateHookTypesDev(), updateDeferredValue(value);
          },
          useTransition: function() {
            return currentHookNameInDev = "useTransition", updateHookTypesDev(), updateTransition();
          },
          useMutableSource: function(source, getSnapshot, subscribe) {
            return currentHookNameInDev = "useMutableSource", updateHookTypesDev(), void 0;
          },
          useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            return currentHookNameInDev = "useSyncExternalStore", updateHookTypesDev(), updateSyncExternalStore(subscribe, getSnapshot);
          },
          useId: function() {
            return currentHookNameInDev = "useId", updateHookTypesDev(), updateId();
          },
          unstable_isNewReconciler: enableNewReconciler
        }, HooksDispatcherOnRerenderInDEV = {
          readContext: function(context) {
            return readContext(context);
          },
          useCallback: function(callback, deps) {
            return currentHookNameInDev = "useCallback", updateHookTypesDev(), updateCallback(callback, deps);
          },
          useContext: function(context) {
            return currentHookNameInDev = "useContext", updateHookTypesDev(), readContext(context);
          },
          useEffect: function(create, deps) {
            return currentHookNameInDev = "useEffect", updateHookTypesDev(), updateEffect(create, deps);
          },
          useImperativeHandle: function(ref, create, deps) {
            return currentHookNameInDev = "useImperativeHandle", updateHookTypesDev(), updateImperativeHandle(ref, create, deps);
          },
          useInsertionEffect: function(create, deps) {
            return currentHookNameInDev = "useInsertionEffect", updateHookTypesDev(), updateInsertionEffect(create, deps);
          },
          useLayoutEffect: function(create, deps) {
            return currentHookNameInDev = "useLayoutEffect", updateHookTypesDev(), updateLayoutEffect(create, deps);
          },
          useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo", updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
              return updateMemo(create, deps);
            } finally {
              ReactCurrentDispatcher$1.current = prevDispatcher;
            }
          },
          useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer", updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
              return rerenderReducer(reducer, initialArg, init);
            } finally {
              ReactCurrentDispatcher$1.current = prevDispatcher;
            }
          },
          useRef: function(initialValue) {
            return currentHookNameInDev = "useRef", updateHookTypesDev(), updateRef();
          },
          useState: function(initialState) {
            currentHookNameInDev = "useState", updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
            try {
              return rerenderState(initialState);
            } finally {
              ReactCurrentDispatcher$1.current = prevDispatcher;
            }
          },
          useDebugValue: function(value, formatterFn) {
            return currentHookNameInDev = "useDebugValue", updateHookTypesDev(), updateDebugValue();
          },
          useDeferredValue: function(value) {
            return currentHookNameInDev = "useDeferredValue", updateHookTypesDev(), rerenderDeferredValue(value);
          },
          useTransition: function() {
            return currentHookNameInDev = "useTransition", updateHookTypesDev(), rerenderTransition();
          },
          useMutableSource: function(source, getSnapshot, subscribe) {
            return currentHookNameInDev = "useMutableSource", updateHookTypesDev(), void 0;
          },
          useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            return currentHookNameInDev = "useSyncExternalStore", updateHookTypesDev(), updateSyncExternalStore(subscribe, getSnapshot);
          },
          useId: function() {
            return currentHookNameInDev = "useId", updateHookTypesDev(), updateId();
          },
          unstable_isNewReconciler: enableNewReconciler
        }, InvalidNestedHooksDispatcherOnMountInDEV = {
          readContext: function(context) {
            return warnInvalidContextAccess(), readContext(context);
          },
          useCallback: function(callback, deps) {
            return currentHookNameInDev = "useCallback", warnInvalidHookAccess(), mountHookTypesDev(), mountCallback(callback, deps);
          },
          useContext: function(context) {
            return currentHookNameInDev = "useContext", warnInvalidHookAccess(), mountHookTypesDev(), readContext(context);
          },
          useEffect: function(create, deps) {
            return currentHookNameInDev = "useEffect", warnInvalidHookAccess(), mountHookTypesDev(), mountEffect(create, deps);
          },
          useImperativeHandle: function(ref, create, deps) {
            return currentHookNameInDev = "useImperativeHandle", warnInvalidHookAccess(), mountHookTypesDev(), mountImperativeHandle(ref, create, deps);
          },
          useInsertionEffect: function(create, deps) {
            return currentHookNameInDev = "useInsertionEffect", warnInvalidHookAccess(), mountHookTypesDev(), mountInsertionEffect(create, deps);
          },
          useLayoutEffect: function(create, deps) {
            return currentHookNameInDev = "useLayoutEffect", warnInvalidHookAccess(), mountHookTypesDev(), mountLayoutEffect(create, deps);
          },
          useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo", warnInvalidHookAccess(), mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
              return mountMemo(create, deps);
            } finally {
              ReactCurrentDispatcher$1.current = prevDispatcher;
            }
          },
          useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer", warnInvalidHookAccess(), mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
              return mountReducer(reducer, initialArg, init);
            } finally {
              ReactCurrentDispatcher$1.current = prevDispatcher;
            }
          },
          useRef: function(initialValue) {
            return currentHookNameInDev = "useRef", warnInvalidHookAccess(), mountHookTypesDev(), mountRef(initialValue);
          },
          useState: function(initialState) {
            currentHookNameInDev = "useState", warnInvalidHookAccess(), mountHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
            try {
              return mountState(initialState);
            } finally {
              ReactCurrentDispatcher$1.current = prevDispatcher;
            }
          },
          useDebugValue: function(value, formatterFn) {
            return currentHookNameInDev = "useDebugValue", warnInvalidHookAccess(), mountHookTypesDev(), void 0;
          },
          useDeferredValue: function(value) {
            return currentHookNameInDev = "useDeferredValue", warnInvalidHookAccess(), mountHookTypesDev(), mountDeferredValue(value);
          },
          useTransition: function() {
            return currentHookNameInDev = "useTransition", warnInvalidHookAccess(), mountHookTypesDev(), mountTransition();
          },
          useMutableSource: function(source, getSnapshot, subscribe) {
            return currentHookNameInDev = "useMutableSource", warnInvalidHookAccess(), mountHookTypesDev(), void 0;
          },
          useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            return currentHookNameInDev = "useSyncExternalStore", warnInvalidHookAccess(), mountHookTypesDev(), mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
          },
          useId: function() {
            return currentHookNameInDev = "useId", warnInvalidHookAccess(), mountHookTypesDev(), mountId();
          },
          unstable_isNewReconciler: enableNewReconciler
        }, InvalidNestedHooksDispatcherOnUpdateInDEV = {
          readContext: function(context) {
            return warnInvalidContextAccess(), readContext(context);
          },
          useCallback: function(callback, deps) {
            return currentHookNameInDev = "useCallback", warnInvalidHookAccess(), updateHookTypesDev(), updateCallback(callback, deps);
          },
          useContext: function(context) {
            return currentHookNameInDev = "useContext", warnInvalidHookAccess(), updateHookTypesDev(), readContext(context);
          },
          useEffect: function(create, deps) {
            return currentHookNameInDev = "useEffect", warnInvalidHookAccess(), updateHookTypesDev(), updateEffect(create, deps);
          },
          useImperativeHandle: function(ref, create, deps) {
            return currentHookNameInDev = "useImperativeHandle", warnInvalidHookAccess(), updateHookTypesDev(), updateImperativeHandle(ref, create, deps);
          },
          useInsertionEffect: function(create, deps) {
            return currentHookNameInDev = "useInsertionEffect", warnInvalidHookAccess(), updateHookTypesDev(), updateInsertionEffect(create, deps);
          },
          useLayoutEffect: function(create, deps) {
            return currentHookNameInDev = "useLayoutEffect", warnInvalidHookAccess(), updateHookTypesDev(), updateLayoutEffect(create, deps);
          },
          useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo", warnInvalidHookAccess(), updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
              return updateMemo(create, deps);
            } finally {
              ReactCurrentDispatcher$1.current = prevDispatcher;
            }
          },
          useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer", warnInvalidHookAccess(), updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
              return updateReducer(reducer, initialArg, init);
            } finally {
              ReactCurrentDispatcher$1.current = prevDispatcher;
            }
          },
          useRef: function(initialValue) {
            return currentHookNameInDev = "useRef", warnInvalidHookAccess(), updateHookTypesDev(), updateRef();
          },
          useState: function(initialState) {
            currentHookNameInDev = "useState", warnInvalidHookAccess(), updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
              return updateState(initialState);
            } finally {
              ReactCurrentDispatcher$1.current = prevDispatcher;
            }
          },
          useDebugValue: function(value, formatterFn) {
            return currentHookNameInDev = "useDebugValue", warnInvalidHookAccess(), updateHookTypesDev(), updateDebugValue();
          },
          useDeferredValue: function(value) {
            return currentHookNameInDev = "useDeferredValue", warnInvalidHookAccess(), updateHookTypesDev(), updateDeferredValue(value);
          },
          useTransition: function() {
            return currentHookNameInDev = "useTransition", warnInvalidHookAccess(), updateHookTypesDev(), updateTransition();
          },
          useMutableSource: function(source, getSnapshot, subscribe) {
            return currentHookNameInDev = "useMutableSource", warnInvalidHookAccess(), updateHookTypesDev(), void 0;
          },
          useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            return currentHookNameInDev = "useSyncExternalStore", warnInvalidHookAccess(), updateHookTypesDev(), updateSyncExternalStore(subscribe, getSnapshot);
          },
          useId: function() {
            return currentHookNameInDev = "useId", warnInvalidHookAccess(), updateHookTypesDev(), updateId();
          },
          unstable_isNewReconciler: enableNewReconciler
        }, InvalidNestedHooksDispatcherOnRerenderInDEV = {
          readContext: function(context) {
            return warnInvalidContextAccess(), readContext(context);
          },
          useCallback: function(callback, deps) {
            return currentHookNameInDev = "useCallback", warnInvalidHookAccess(), updateHookTypesDev(), updateCallback(callback, deps);
          },
          useContext: function(context) {
            return currentHookNameInDev = "useContext", warnInvalidHookAccess(), updateHookTypesDev(), readContext(context);
          },
          useEffect: function(create, deps) {
            return currentHookNameInDev = "useEffect", warnInvalidHookAccess(), updateHookTypesDev(), updateEffect(create, deps);
          },
          useImperativeHandle: function(ref, create, deps) {
            return currentHookNameInDev = "useImperativeHandle", warnInvalidHookAccess(), updateHookTypesDev(), updateImperativeHandle(ref, create, deps);
          },
          useInsertionEffect: function(create, deps) {
            return currentHookNameInDev = "useInsertionEffect", warnInvalidHookAccess(), updateHookTypesDev(), updateInsertionEffect(create, deps);
          },
          useLayoutEffect: function(create, deps) {
            return currentHookNameInDev = "useLayoutEffect", warnInvalidHookAccess(), updateHookTypesDev(), updateLayoutEffect(create, deps);
          },
          useMemo: function(create, deps) {
            currentHookNameInDev = "useMemo", warnInvalidHookAccess(), updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
              return updateMemo(create, deps);
            } finally {
              ReactCurrentDispatcher$1.current = prevDispatcher;
            }
          },
          useReducer: function(reducer, initialArg, init) {
            currentHookNameInDev = "useReducer", warnInvalidHookAccess(), updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
              return rerenderReducer(reducer, initialArg, init);
            } finally {
              ReactCurrentDispatcher$1.current = prevDispatcher;
            }
          },
          useRef: function(initialValue) {
            return currentHookNameInDev = "useRef", warnInvalidHookAccess(), updateHookTypesDev(), updateRef();
          },
          useState: function(initialState) {
            currentHookNameInDev = "useState", warnInvalidHookAccess(), updateHookTypesDev();
            var prevDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            try {
              return rerenderState(initialState);
            } finally {
              ReactCurrentDispatcher$1.current = prevDispatcher;
            }
          },
          useDebugValue: function(value, formatterFn) {
            return currentHookNameInDev = "useDebugValue", warnInvalidHookAccess(), updateHookTypesDev(), updateDebugValue();
          },
          useDeferredValue: function(value) {
            return currentHookNameInDev = "useDeferredValue", warnInvalidHookAccess(), updateHookTypesDev(), rerenderDeferredValue(value);
          },
          useTransition: function() {
            return currentHookNameInDev = "useTransition", warnInvalidHookAccess(), updateHookTypesDev(), rerenderTransition();
          },
          useMutableSource: function(source, getSnapshot, subscribe) {
            return currentHookNameInDev = "useMutableSource", warnInvalidHookAccess(), updateHookTypesDev(), void 0;
          },
          useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
            return currentHookNameInDev = "useSyncExternalStore", warnInvalidHookAccess(), updateHookTypesDev(), updateSyncExternalStore(subscribe, getSnapshot);
          },
          useId: function() {
            return currentHookNameInDev = "useId", warnInvalidHookAccess(), updateHookTypesDev(), updateId();
          },
          unstable_isNewReconciler: enableNewReconciler
        };
      }
      var now$1 = Scheduler.unstable_now, commitTime = 0, layoutEffectStartTime = -1, profilerStartTime = -1, passiveEffectStartTime = -1, currentUpdateIsNested = !1, nestedUpdateScheduled = !1;
      function isCurrentUpdateNested() {
        return currentUpdateIsNested;
      }
      function markNestedUpdateScheduled() {
        nestedUpdateScheduled = !0;
      }
      function resetNestedUpdateFlag() {
        currentUpdateIsNested = !1, nestedUpdateScheduled = !1;
      }
      function syncNestedUpdateFlag() {
        currentUpdateIsNested = nestedUpdateScheduled, nestedUpdateScheduled = !1;
      }
      function getCommitTime() {
        return commitTime;
      }
      function recordCommitTime() {
        commitTime = now$1();
      }
      function startProfilerTimer(fiber) {
        profilerStartTime = now$1(), fiber.actualStartTime < 0 && (fiber.actualStartTime = now$1());
      }
      function stopProfilerTimerIfRunning(fiber) {
        profilerStartTime = -1;
      }
      function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
        if (profilerStartTime >= 0) {
          var elapsedTime = now$1() - profilerStartTime;
          fiber.actualDuration += elapsedTime, overrideBaseTime && (fiber.selfBaseDuration = elapsedTime), profilerStartTime = -1;
        }
      }
      function recordLayoutEffectDuration(fiber) {
        if (layoutEffectStartTime >= 0) {
          var elapsedTime = now$1() - layoutEffectStartTime;
          layoutEffectStartTime = -1;
          for (var parentFiber = fiber.return; parentFiber !== null; ) {
            switch (parentFiber.tag) {
              case HostRoot:
                var root2 = parentFiber.stateNode;
                root2.effectDuration += elapsedTime;
                return;
              case Profiler:
                var parentStateNode = parentFiber.stateNode;
                parentStateNode.effectDuration += elapsedTime;
                return;
            }
            parentFiber = parentFiber.return;
          }
        }
      }
      function recordPassiveEffectDuration(fiber) {
        if (passiveEffectStartTime >= 0) {
          var elapsedTime = now$1() - passiveEffectStartTime;
          passiveEffectStartTime = -1;
          for (var parentFiber = fiber.return; parentFiber !== null; ) {
            switch (parentFiber.tag) {
              case HostRoot:
                var root2 = parentFiber.stateNode;
                root2 !== null && (root2.passiveEffectDuration += elapsedTime);
                return;
              case Profiler:
                var parentStateNode = parentFiber.stateNode;
                parentStateNode !== null && (parentStateNode.passiveEffectDuration += elapsedTime);
                return;
            }
            parentFiber = parentFiber.return;
          }
        }
      }
      function startLayoutEffectTimer() {
        layoutEffectStartTime = now$1();
      }
      function startPassiveEffectTimer() {
        passiveEffectStartTime = now$1();
      }
      function transferActualDuration(fiber) {
        for (var child = fiber.child; child; )
          fiber.actualDuration += child.actualDuration, child = child.sibling;
      }
      function createCapturedValueAtFiber(value, source) {
        return {
          value,
          source,
          stack: getStackByFiberInDevAndProd(source),
          digest: null
        };
      }
      function createCapturedValue(value, digest, stack) {
        return {
          value,
          source: null,
          stack: stack ?? null,
          digest: digest ?? null
        };
      }
      function showErrorDialog(boundary, errorInfo) {
        return !0;
      }
      function logCapturedError(boundary, errorInfo) {
        try {
          var logError = showErrorDialog(boundary, errorInfo);
          if (logError === !1)
            return;
          var error2 = errorInfo.value, source = errorInfo.source, stack = errorInfo.stack, componentStack = stack !== null ? stack : "";
          if (error2 != null && error2._suppressLogging) {
            if (boundary.tag === ClassComponent)
              return;
            console.error(error2);
          }
          var componentName = source ? getComponentNameFromFiber(source) : null, componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : "The above error occurred in one of your React components:", errorBoundaryMessage;
          if (boundary.tag === HostRoot)
            errorBoundaryMessage = `Consider adding an error boundary to your tree to customize error handling behavior.
Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.`;
          else {
            var errorBoundaryName = getComponentNameFromFiber(boundary) || "Anonymous";
            errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
          }
          var combinedMessage = componentNameMessage + `
` + componentStack + `

` + ("" + errorBoundaryMessage);
          console.error(combinedMessage);
        } catch (e5) {
          setTimeout(function() {
            throw e5;
          });
        }
      }
      var PossiblyWeakMap$1 = typeof WeakMap == "function" ? WeakMap : Map;
      function createRootErrorUpdate(fiber, errorInfo, lane) {
        var update = createUpdate(NoTimestamp, lane);
        update.tag = CaptureUpdate, update.payload = {
          element: null
        };
        var error2 = errorInfo.value;
        return update.callback = function() {
          onUncaughtError(error2), logCapturedError(fiber, errorInfo);
        }, update;
      }
      function createClassErrorUpdate(fiber, errorInfo, lane) {
        var update = createUpdate(NoTimestamp, lane);
        update.tag = CaptureUpdate;
        var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
        if (typeof getDerivedStateFromError == "function") {
          var error$1 = errorInfo.value;
          update.payload = function() {
            return getDerivedStateFromError(error$1);
          }, update.callback = function() {
            markFailedErrorBoundaryForHotReloading(fiber), logCapturedError(fiber, errorInfo);
          };
        }
        var inst = fiber.stateNode;
        return inst !== null && typeof inst.componentDidCatch == "function" && (update.callback = function() {
          markFailedErrorBoundaryForHotReloading(fiber), logCapturedError(fiber, errorInfo), typeof getDerivedStateFromError != "function" && markLegacyErrorBoundaryAsFailed(this);
          var error$12 = errorInfo.value, stack = errorInfo.stack;
          this.componentDidCatch(error$12, {
            componentStack: stack !== null ? stack : ""
          }), typeof getDerivedStateFromError != "function" && (includesSomeLane(fiber.lanes, SyncLane) || error("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", getComponentNameFromFiber(fiber) || "Unknown"));
        }), update;
      }
      function attachPingListener(root2, wakeable, lanes) {
        var pingCache = root2.pingCache, threadIDs;
        if (pingCache === null ? (pingCache = root2.pingCache = new PossiblyWeakMap$1(), threadIDs = /* @__PURE__ */ new Set(), pingCache.set(wakeable, threadIDs)) : (threadIDs = pingCache.get(wakeable), threadIDs === void 0 && (threadIDs = /* @__PURE__ */ new Set(), pingCache.set(wakeable, threadIDs))), !threadIDs.has(lanes)) {
          threadIDs.add(lanes);
          var ping = pingSuspendedRoot.bind(null, root2, wakeable, lanes);
          isDevToolsPresent && restorePendingUpdaters(root2, lanes), wakeable.then(ping, ping);
        }
      }
      function attachRetryListener(suspenseBoundary, root2, wakeable, lanes) {
        var wakeables = suspenseBoundary.updateQueue;
        if (wakeables === null) {
          var updateQueue = /* @__PURE__ */ new Set();
          updateQueue.add(wakeable), suspenseBoundary.updateQueue = updateQueue;
        } else
          wakeables.add(wakeable);
      }
      function resetSuspendedComponent(sourceFiber, rootRenderLanes) {
        var tag = sourceFiber.tag;
        if ((sourceFiber.mode & ConcurrentMode) === NoMode && (tag === FunctionComponent || tag === ForwardRef10 || tag === SimpleMemoComponent)) {
          var currentSource = sourceFiber.alternate;
          currentSource ? (sourceFiber.updateQueue = currentSource.updateQueue, sourceFiber.memoizedState = currentSource.memoizedState, sourceFiber.lanes = currentSource.lanes) : (sourceFiber.updateQueue = null, sourceFiber.memoizedState = null);
        }
      }
      function getNearestSuspenseBoundaryToCapture(returnFiber) {
        var node = returnFiber;
        do {
          if (node.tag === SuspenseComponent && shouldCaptureSuspense(node))
            return node;
          node = node.return;
        } while (node !== null);
        return null;
      }
      function markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root2, rootRenderLanes) {
        if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {
          if (suspenseBoundary === returnFiber)
            suspenseBoundary.flags |= ShouldCapture;
          else {
            if (suspenseBoundary.flags |= DidCapture, sourceFiber.flags |= ForceUpdateForLegacySuspense, sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete), sourceFiber.tag === ClassComponent) {
              var currentSourceFiber = sourceFiber.alternate;
              if (currentSourceFiber === null)
                sourceFiber.tag = IncompleteClassComponent;
              else {
                var update = createUpdate(NoTimestamp, SyncLane);
                update.tag = ForceUpdate, enqueueUpdate(sourceFiber, update, SyncLane);
              }
            }
            sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);
          }
          return suspenseBoundary;
        }
        return suspenseBoundary.flags |= ShouldCapture, suspenseBoundary.lanes = rootRenderLanes, suspenseBoundary;
      }
      function throwException(root2, returnFiber, sourceFiber, value, rootRenderLanes) {
        if (sourceFiber.flags |= Incomplete, isDevToolsPresent && restorePendingUpdaters(root2, rootRenderLanes), value !== null && typeof value == "object" && typeof value.then == "function") {
          var wakeable = value;
          resetSuspendedComponent(sourceFiber), getIsHydrating() && sourceFiber.mode & ConcurrentMode && markDidThrowWhileHydratingDEV();
          var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);
          if (suspenseBoundary !== null) {
            suspenseBoundary.flags &= ~ForceClientRender, markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root2, rootRenderLanes), suspenseBoundary.mode & ConcurrentMode && attachPingListener(root2, wakeable, rootRenderLanes), attachRetryListener(suspenseBoundary, root2, wakeable);
            return;
          } else {
            if (!includesSyncLane(rootRenderLanes)) {
              attachPingListener(root2, wakeable, rootRenderLanes), renderDidSuspendDelayIfPossible();
              return;
            }
            var uncaughtSuspenseError = new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
            value = uncaughtSuspenseError;
          }
        } else if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {
          markDidThrowWhileHydratingDEV();
          var _suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);
          if (_suspenseBoundary !== null) {
            (_suspenseBoundary.flags & ShouldCapture) === NoFlags && (_suspenseBoundary.flags |= ForceClientRender), markSuspenseBoundaryShouldCapture(_suspenseBoundary, returnFiber, sourceFiber, root2, rootRenderLanes), queueHydrationError(createCapturedValueAtFiber(value, sourceFiber));
            return;
          }
        }
        value = createCapturedValueAtFiber(value, sourceFiber), renderDidError(value);
        var workInProgress2 = returnFiber;
        do {
          switch (workInProgress2.tag) {
            case HostRoot: {
              var _errorInfo = value;
              workInProgress2.flags |= ShouldCapture;
              var lane = pickArbitraryLane(rootRenderLanes);
              workInProgress2.lanes = mergeLanes(workInProgress2.lanes, lane);
              var update = createRootErrorUpdate(workInProgress2, _errorInfo, lane);
              enqueueCapturedUpdate(workInProgress2, update);
              return;
            }
            case ClassComponent:
              var errorInfo = value, ctor = workInProgress2.type, instance = workInProgress2.stateNode;
              if ((workInProgress2.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError == "function" || instance !== null && typeof instance.componentDidCatch == "function" && !isAlreadyFailedLegacyErrorBoundary(instance))) {
                workInProgress2.flags |= ShouldCapture;
                var _lane = pickArbitraryLane(rootRenderLanes);
                workInProgress2.lanes = mergeLanes(workInProgress2.lanes, _lane);
                var _update3 = createClassErrorUpdate(workInProgress2, errorInfo, _lane);
                enqueueCapturedUpdate(workInProgress2, _update3);
                return;
              }
              break;
          }
          workInProgress2 = workInProgress2.return;
        } while (workInProgress2 !== null);
      }
      function getSuspendedCache() {
        return null;
      }
      var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner, didReceiveUpdate = !1, didWarnAboutBadClass, didWarnAboutModulePatternComponent, didWarnAboutContextTypeOnFunctionComponent, didWarnAboutGetDerivedStateOnFunctionComponent, didWarnAboutFunctionRefs, didWarnAboutReassigningProps, didWarnAboutRevealOrder, didWarnAboutTailOptions;
      didWarnAboutBadClass = {}, didWarnAboutModulePatternComponent = {}, didWarnAboutContextTypeOnFunctionComponent = {}, didWarnAboutGetDerivedStateOnFunctionComponent = {}, didWarnAboutFunctionRefs = {}, didWarnAboutReassigningProps = !1, didWarnAboutRevealOrder = {}, didWarnAboutTailOptions = {};
      function reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2) {
        current2 === null ? workInProgress2.child = mountChildFibers(workInProgress2, null, nextChildren, renderLanes2) : workInProgress2.child = reconcileChildFibers(workInProgress2, current2.child, nextChildren, renderLanes2);
      }
      function forceUnmountCurrentAndReconcile(current2, workInProgress2, nextChildren, renderLanes2) {
        workInProgress2.child = reconcileChildFibers(workInProgress2, current2.child, null, renderLanes2), workInProgress2.child = reconcileChildFibers(workInProgress2, null, nextChildren, renderLanes2);
      }
      function updateForwardRef(current2, workInProgress2, Component2, nextProps, renderLanes2) {
        if (workInProgress2.type !== workInProgress2.elementType) {
          var innerPropTypes = Component2.propTypes;
          innerPropTypes && checkPropTypes(
            innerPropTypes,
            nextProps,
            // Resolved props
            "prop",
            getComponentNameFromType(Component2)
          );
        }
        var render2 = Component2.render, ref = workInProgress2.ref, nextChildren, hasId;
        prepareToReadContext(workInProgress2, renderLanes2), markComponentRenderStarted(workInProgress2);
        {
          if (ReactCurrentOwner$1.current = workInProgress2, setIsRendering(!0), nextChildren = renderWithHooks(current2, workInProgress2, render2, nextProps, ref, renderLanes2), hasId = checkDidRenderIdHook(), workInProgress2.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(!0);
            try {
              nextChildren = renderWithHooks(current2, workInProgress2, render2, nextProps, ref, renderLanes2), hasId = checkDidRenderIdHook();
            } finally {
              setIsStrictModeForDevtools(!1);
            }
          }
          setIsRendering(!1);
        }
        return markComponentRenderStopped(), current2 !== null && !didReceiveUpdate ? (bailoutHooks(current2, workInProgress2, renderLanes2), bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2)) : (getIsHydrating() && hasId && pushMaterializedTreeId(workInProgress2), workInProgress2.flags |= PerformedWork, reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2), workInProgress2.child);
      }
      function updateMemoComponent(current2, workInProgress2, Component2, nextProps, renderLanes2) {
        if (current2 === null) {
          var type = Component2.type;
          if (isSimpleFunctionComponent(type) && Component2.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
          Component2.defaultProps === void 0) {
            var resolvedType = type;
            return resolvedType = resolveFunctionForHotReloading(type), workInProgress2.tag = SimpleMemoComponent, workInProgress2.type = resolvedType, validateFunctionComponentInDev(workInProgress2, type), updateSimpleMemoComponent(current2, workInProgress2, resolvedType, nextProps, renderLanes2);
          }
          {
            var innerPropTypes = type.propTypes;
            innerPropTypes && checkPropTypes(
              innerPropTypes,
              nextProps,
              // Resolved props
              "prop",
              getComponentNameFromType(type)
            );
          }
          var child = createFiberFromTypeAndProps(Component2.type, null, nextProps, workInProgress2, workInProgress2.mode, renderLanes2);
          return child.ref = workInProgress2.ref, child.return = workInProgress2, workInProgress2.child = child, child;
        }
        {
          var _type = Component2.type, _innerPropTypes = _type.propTypes;
          _innerPropTypes && checkPropTypes(
            _innerPropTypes,
            nextProps,
            // Resolved props
            "prop",
            getComponentNameFromType(_type)
          );
        }
        var currentChild = current2.child, hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current2, renderLanes2);
        if (!hasScheduledUpdateOrContext) {
          var prevProps = currentChild.memoizedProps, compare = Component2.compare;
          if (compare = compare !== null ? compare : shallowEqual, compare(prevProps, nextProps) && current2.ref === workInProgress2.ref)
            return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
        }
        workInProgress2.flags |= PerformedWork;
        var newChild = createWorkInProgress(currentChild, nextProps);
        return newChild.ref = workInProgress2.ref, newChild.return = workInProgress2, workInProgress2.child = newChild, newChild;
      }
      function updateSimpleMemoComponent(current2, workInProgress2, Component2, nextProps, renderLanes2) {
        if (workInProgress2.type !== workInProgress2.elementType) {
          var outerMemoType = workInProgress2.elementType;
          if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
            var lazyComponent = outerMemoType, payload = lazyComponent._payload, init = lazyComponent._init;
            try {
              outerMemoType = init(payload);
            } catch {
              outerMemoType = null;
            }
            var outerPropTypes = outerMemoType && outerMemoType.propTypes;
            outerPropTypes && checkPropTypes(
              outerPropTypes,
              nextProps,
              // Resolved (SimpleMemoComponent has no defaultProps)
              "prop",
              getComponentNameFromType(outerMemoType)
            );
          }
        }
        if (current2 !== null) {
          var prevProps = current2.memoizedProps;
          if (shallowEqual(prevProps, nextProps) && current2.ref === workInProgress2.ref && // Prevent bailout if the implementation changed due to hot reload.
          workInProgress2.type === current2.type)
            if (didReceiveUpdate = !1, workInProgress2.pendingProps = nextProps = prevProps, checkScheduledUpdateOrContext(current2, renderLanes2))
              (current2.flags & ForceUpdateForLegacySuspense) !== NoFlags && (didReceiveUpdate = !0);
            else
              return workInProgress2.lanes = current2.lanes, bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
        }
        return updateFunctionComponent(current2, workInProgress2, Component2, nextProps, renderLanes2);
      }
      function updateOffscreenComponent(current2, workInProgress2, renderLanes2) {
        var nextProps = workInProgress2.pendingProps, nextChildren = nextProps.children, prevState = current2 !== null ? current2.memoizedState : null;
        if (nextProps.mode === "hidden" || enableLegacyHidden)
          if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
            var nextState = {
              baseLanes: NoLanes,
              cachePool: null,
              transitions: null
            };
            workInProgress2.memoizedState = nextState, pushRenderLanes(workInProgress2, renderLanes2);
          } else if (includesSomeLane(renderLanes2, OffscreenLane)) {
            var _nextState2 = {
              baseLanes: NoLanes,
              cachePool: null,
              transitions: null
            };
            workInProgress2.memoizedState = _nextState2;
            var subtreeRenderLanes2 = prevState !== null ? prevState.baseLanes : renderLanes2;
            pushRenderLanes(workInProgress2, subtreeRenderLanes2);
          } else {
            var spawnedCachePool = null, nextBaseLanes;
            if (prevState !== null) {
              var prevBaseLanes = prevState.baseLanes;
              nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes2);
            } else
              nextBaseLanes = renderLanes2;
            workInProgress2.lanes = workInProgress2.childLanes = OffscreenLane;
            var _nextState = {
              baseLanes: nextBaseLanes,
              cachePool: spawnedCachePool,
              transitions: null
            };
            return workInProgress2.memoizedState = _nextState, workInProgress2.updateQueue = null, pushRenderLanes(workInProgress2, nextBaseLanes), null;
          }
        else {
          var _subtreeRenderLanes;
          prevState !== null ? (_subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes2), workInProgress2.memoizedState = null) : _subtreeRenderLanes = renderLanes2, pushRenderLanes(workInProgress2, _subtreeRenderLanes);
        }
        return reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2), workInProgress2.child;
      }
      function updateFragment(current2, workInProgress2, renderLanes2) {
        var nextChildren = workInProgress2.pendingProps;
        return reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2), workInProgress2.child;
      }
      function updateMode(current2, workInProgress2, renderLanes2) {
        var nextChildren = workInProgress2.pendingProps.children;
        return reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2), workInProgress2.child;
      }
      function updateProfiler(current2, workInProgress2, renderLanes2) {
        {
          workInProgress2.flags |= Update;
          {
            var stateNode = workInProgress2.stateNode;
            stateNode.effectDuration = 0, stateNode.passiveEffectDuration = 0;
          }
        }
        var nextProps = workInProgress2.pendingProps, nextChildren = nextProps.children;
        return reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2), workInProgress2.child;
      }
      function markRef(current2, workInProgress2) {
        var ref = workInProgress2.ref;
        (current2 === null && ref !== null || current2 !== null && current2.ref !== ref) && (workInProgress2.flags |= Ref, workInProgress2.flags |= RefStatic);
      }
      function updateFunctionComponent(current2, workInProgress2, Component2, nextProps, renderLanes2) {
        if (workInProgress2.type !== workInProgress2.elementType) {
          var innerPropTypes = Component2.propTypes;
          innerPropTypes && checkPropTypes(
            innerPropTypes,
            nextProps,
            // Resolved props
            "prop",
            getComponentNameFromType(Component2)
          );
        }
        var context;
        {
          var unmaskedContext = getUnmaskedContext(workInProgress2, Component2, !0);
          context = getMaskedContext(workInProgress2, unmaskedContext);
        }
        var nextChildren, hasId;
        prepareToReadContext(workInProgress2, renderLanes2), markComponentRenderStarted(workInProgress2);
        {
          if (ReactCurrentOwner$1.current = workInProgress2, setIsRendering(!0), nextChildren = renderWithHooks(current2, workInProgress2, Component2, nextProps, context, renderLanes2), hasId = checkDidRenderIdHook(), workInProgress2.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(!0);
            try {
              nextChildren = renderWithHooks(current2, workInProgress2, Component2, nextProps, context, renderLanes2), hasId = checkDidRenderIdHook();
            } finally {
              setIsStrictModeForDevtools(!1);
            }
          }
          setIsRendering(!1);
        }
        return markComponentRenderStopped(), current2 !== null && !didReceiveUpdate ? (bailoutHooks(current2, workInProgress2, renderLanes2), bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2)) : (getIsHydrating() && hasId && pushMaterializedTreeId(workInProgress2), workInProgress2.flags |= PerformedWork, reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2), workInProgress2.child);
      }
      function updateClassComponent(current2, workInProgress2, Component2, nextProps, renderLanes2) {
        {
          switch (shouldError(workInProgress2)) {
            case !1: {
              var _instance = workInProgress2.stateNode, ctor = workInProgress2.type, tempInstance = new ctor(workInProgress2.memoizedProps, _instance.context), state = tempInstance.state;
              _instance.updater.enqueueSetState(_instance, state, null);
              break;
            }
            case !0: {
              workInProgress2.flags |= DidCapture, workInProgress2.flags |= ShouldCapture;
              var error$1 = new Error("Simulated error coming from DevTools"), lane = pickArbitraryLane(renderLanes2);
              workInProgress2.lanes = mergeLanes(workInProgress2.lanes, lane);
              var update = createClassErrorUpdate(workInProgress2, createCapturedValueAtFiber(error$1, workInProgress2), lane);
              enqueueCapturedUpdate(workInProgress2, update);
              break;
            }
          }
          if (workInProgress2.type !== workInProgress2.elementType) {
            var innerPropTypes = Component2.propTypes;
            innerPropTypes && checkPropTypes(
              innerPropTypes,
              nextProps,
              // Resolved props
              "prop",
              getComponentNameFromType(Component2)
            );
          }
        }
        var hasContext;
        isContextProvider(Component2) ? (hasContext = !0, pushContextProvider(workInProgress2)) : hasContext = !1, prepareToReadContext(workInProgress2, renderLanes2);
        var instance = workInProgress2.stateNode, shouldUpdate;
        instance === null ? (resetSuspendedCurrentOnMountInLegacyMode(current2, workInProgress2), constructClassInstance(workInProgress2, Component2, nextProps), mountClassInstance(workInProgress2, Component2, nextProps, renderLanes2), shouldUpdate = !0) : current2 === null ? shouldUpdate = resumeMountClassInstance(workInProgress2, Component2, nextProps, renderLanes2) : shouldUpdate = updateClassInstance(current2, workInProgress2, Component2, nextProps, renderLanes2);
        var nextUnitOfWork = finishClassComponent(current2, workInProgress2, Component2, shouldUpdate, hasContext, renderLanes2);
        {
          var inst = workInProgress2.stateNode;
          shouldUpdate && inst.props !== nextProps && (didWarnAboutReassigningProps || error("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromFiber(workInProgress2) || "a component"), didWarnAboutReassigningProps = !0);
        }
        return nextUnitOfWork;
      }
      function finishClassComponent(current2, workInProgress2, Component2, shouldUpdate, hasContext, renderLanes2) {
        markRef(current2, workInProgress2);
        var didCaptureError = (workInProgress2.flags & DidCapture) !== NoFlags;
        if (!shouldUpdate && !didCaptureError)
          return hasContext && invalidateContextProvider(workInProgress2, Component2, !1), bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
        var instance = workInProgress2.stateNode;
        ReactCurrentOwner$1.current = workInProgress2;
        var nextChildren;
        if (didCaptureError && typeof Component2.getDerivedStateFromError != "function")
          nextChildren = null, stopProfilerTimerIfRunning();
        else {
          markComponentRenderStarted(workInProgress2);
          {
            if (setIsRendering(!0), nextChildren = instance.render(), workInProgress2.mode & StrictLegacyMode) {
              setIsStrictModeForDevtools(!0);
              try {
                instance.render();
              } finally {
                setIsStrictModeForDevtools(!1);
              }
            }
            setIsRendering(!1);
          }
          markComponentRenderStopped();
        }
        return workInProgress2.flags |= PerformedWork, current2 !== null && didCaptureError ? forceUnmountCurrentAndReconcile(current2, workInProgress2, nextChildren, renderLanes2) : reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2), workInProgress2.memoizedState = instance.state, hasContext && invalidateContextProvider(workInProgress2, Component2, !0), workInProgress2.child;
      }
      function pushHostRootContext(workInProgress2) {
        var root2 = workInProgress2.stateNode;
        root2.pendingContext ? pushTopLevelContextObject(workInProgress2, root2.pendingContext, root2.pendingContext !== root2.context) : root2.context && pushTopLevelContextObject(workInProgress2, root2.context, !1), pushHostContainer(workInProgress2, root2.containerInfo);
      }
      function updateHostRoot(current2, workInProgress2, renderLanes2) {
        if (pushHostRootContext(workInProgress2), current2 === null)
          throw new Error("Should have a current fiber. This is a bug in React.");
        var nextProps = workInProgress2.pendingProps, prevState = workInProgress2.memoizedState, prevChildren = prevState.element;
        cloneUpdateQueue(current2, workInProgress2), processUpdateQueue(workInProgress2, nextProps, null, renderLanes2);
        var nextState = workInProgress2.memoizedState, root2 = workInProgress2.stateNode, nextChildren = nextState.element;
        if (prevState.isDehydrated) {
          var overrideState = {
            element: nextChildren,
            isDehydrated: !1,
            cache: nextState.cache,
            pendingSuspenseBoundaries: nextState.pendingSuspenseBoundaries,
            transitions: nextState.transitions
          }, updateQueue = workInProgress2.updateQueue;
          if (updateQueue.baseState = overrideState, workInProgress2.memoizedState = overrideState, workInProgress2.flags & ForceClientRender) {
            var recoverableError = createCapturedValueAtFiber(new Error("There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering."), workInProgress2);
            return mountHostRootWithoutHydrating(current2, workInProgress2, nextChildren, renderLanes2, recoverableError);
          } else if (nextChildren !== prevChildren) {
            var _recoverableError = createCapturedValueAtFiber(new Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."), workInProgress2);
            return mountHostRootWithoutHydrating(current2, workInProgress2, nextChildren, renderLanes2, _recoverableError);
          } else {
            enterHydrationState(workInProgress2);
            var child = mountChildFibers(workInProgress2, null, nextChildren, renderLanes2);
            workInProgress2.child = child;
            for (var node = child; node; )
              node.flags = node.flags & ~Placement | Hydrating, node = node.sibling;
          }
        } else {
          if (resetHydrationState(), nextChildren === prevChildren)
            return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
        }
        return workInProgress2.child;
      }
      function mountHostRootWithoutHydrating(current2, workInProgress2, nextChildren, renderLanes2, recoverableError) {
        return resetHydrationState(), queueHydrationError(recoverableError), workInProgress2.flags |= ForceClientRender, reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2), workInProgress2.child;
      }
      function updateHostComponent(current2, workInProgress2, renderLanes2) {
        pushHostContext(workInProgress2), current2 === null && tryToClaimNextHydratableInstance(workInProgress2);
        var type = workInProgress2.type, nextProps = workInProgress2.pendingProps, prevProps = current2 !== null ? current2.memoizedProps : null, nextChildren = nextProps.children, isDirectTextChild = shouldSetTextContent(type, nextProps);
        return isDirectTextChild ? nextChildren = null : prevProps !== null && shouldSetTextContent(type, prevProps) && (workInProgress2.flags |= ContentReset), markRef(current2, workInProgress2), reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2), workInProgress2.child;
      }
      function updateHostText(current2, workInProgress2) {
        return current2 === null && tryToClaimNextHydratableInstance(workInProgress2), null;
      }
      function mountLazyComponent(_current, workInProgress2, elementType, renderLanes2) {
        resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress2);
        var props = workInProgress2.pendingProps, lazyComponent = elementType, payload = lazyComponent._payload, init = lazyComponent._init, Component2 = init(payload);
        workInProgress2.type = Component2;
        var resolvedTag = workInProgress2.tag = resolveLazyComponentTag(Component2), resolvedProps = resolveDefaultProps(Component2, props), child;
        switch (resolvedTag) {
          case FunctionComponent:
            return validateFunctionComponentInDev(workInProgress2, Component2), workInProgress2.type = Component2 = resolveFunctionForHotReloading(Component2), child = updateFunctionComponent(null, workInProgress2, Component2, resolvedProps, renderLanes2), child;
          case ClassComponent:
            return workInProgress2.type = Component2 = resolveClassForHotReloading(Component2), child = updateClassComponent(null, workInProgress2, Component2, resolvedProps, renderLanes2), child;
          case ForwardRef10:
            return workInProgress2.type = Component2 = resolveForwardRefForHotReloading(Component2), child = updateForwardRef(null, workInProgress2, Component2, resolvedProps, renderLanes2), child;
          case MemoComponent: {
            if (workInProgress2.type !== workInProgress2.elementType) {
              var outerPropTypes = Component2.propTypes;
              outerPropTypes && checkPropTypes(
                outerPropTypes,
                resolvedProps,
                // Resolved for outer only
                "prop",
                getComponentNameFromType(Component2)
              );
            }
            return child = updateMemoComponent(
              null,
              workInProgress2,
              Component2,
              resolveDefaultProps(Component2.type, resolvedProps),
              // The inner type can have defaults too
              renderLanes2
            ), child;
          }
        }
        var hint = "";
        throw Component2 !== null && typeof Component2 == "object" && Component2.$$typeof === REACT_LAZY_TYPE && (hint = " Did you wrap a component in React.lazy() more than once?"), new Error("Element type is invalid. Received a promise that resolves to: " + Component2 + ". " + ("Lazy element type must resolve to a class or function." + hint));
      }
      function mountIncompleteClassComponent(_current, workInProgress2, Component2, nextProps, renderLanes2) {
        resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress2), workInProgress2.tag = ClassComponent;
        var hasContext;
        return isContextProvider(Component2) ? (hasContext = !0, pushContextProvider(workInProgress2)) : hasContext = !1, prepareToReadContext(workInProgress2, renderLanes2), constructClassInstance(workInProgress2, Component2, nextProps), mountClassInstance(workInProgress2, Component2, nextProps, renderLanes2), finishClassComponent(null, workInProgress2, Component2, !0, hasContext, renderLanes2);
      }
      function mountIndeterminateComponent(_current, workInProgress2, Component2, renderLanes2) {
        resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress2);
        var props = workInProgress2.pendingProps, context;
        {
          var unmaskedContext = getUnmaskedContext(workInProgress2, Component2, !1);
          context = getMaskedContext(workInProgress2, unmaskedContext);
        }
        prepareToReadContext(workInProgress2, renderLanes2);
        var value, hasId;
        markComponentRenderStarted(workInProgress2);
        {
          if (Component2.prototype && typeof Component2.prototype.render == "function") {
            var componentName = getComponentNameFromType(Component2) || "Unknown";
            didWarnAboutBadClass[componentName] || (error("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName), didWarnAboutBadClass[componentName] = !0);
          }
          workInProgress2.mode & StrictLegacyMode && ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress2, null), setIsRendering(!0), ReactCurrentOwner$1.current = workInProgress2, value = renderWithHooks(null, workInProgress2, Component2, props, context, renderLanes2), hasId = checkDidRenderIdHook(), setIsRendering(!1);
        }
        if (markComponentRenderStopped(), workInProgress2.flags |= PerformedWork, typeof value == "object" && value !== null && typeof value.render == "function" && value.$$typeof === void 0) {
          var _componentName = getComponentNameFromType(Component2) || "Unknown";
          didWarnAboutModulePatternComponent[_componentName] || (error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName), didWarnAboutModulePatternComponent[_componentName] = !0);
        }
        if (
          // Run these checks in production only if the flag is off.
          // Eventually we'll delete this branch altogether.
          typeof value == "object" && value !== null && typeof value.render == "function" && value.$$typeof === void 0
        ) {
          {
            var _componentName2 = getComponentNameFromType(Component2) || "Unknown";
            didWarnAboutModulePatternComponent[_componentName2] || (error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2), didWarnAboutModulePatternComponent[_componentName2] = !0);
          }
          workInProgress2.tag = ClassComponent, workInProgress2.memoizedState = null, workInProgress2.updateQueue = null;
          var hasContext = !1;
          return isContextProvider(Component2) ? (hasContext = !0, pushContextProvider(workInProgress2)) : hasContext = !1, workInProgress2.memoizedState = value.state !== null && value.state !== void 0 ? value.state : null, initializeUpdateQueue(workInProgress2), adoptClassInstance(workInProgress2, value), mountClassInstance(workInProgress2, Component2, props, renderLanes2), finishClassComponent(null, workInProgress2, Component2, !0, hasContext, renderLanes2);
        } else {
          if (workInProgress2.tag = FunctionComponent, workInProgress2.mode & StrictLegacyMode) {
            setIsStrictModeForDevtools(!0);
            try {
              value = renderWithHooks(null, workInProgress2, Component2, props, context, renderLanes2), hasId = checkDidRenderIdHook();
            } finally {
              setIsStrictModeForDevtools(!1);
            }
          }
          return getIsHydrating() && hasId && pushMaterializedTreeId(workInProgress2), reconcileChildren(null, workInProgress2, value, renderLanes2), validateFunctionComponentInDev(workInProgress2, Component2), workInProgress2.child;
        }
      }
      function validateFunctionComponentInDev(workInProgress2, Component2) {
        {
          if (Component2 && Component2.childContextTypes && error("%s(...): childContextTypes cannot be defined on a function component.", Component2.displayName || Component2.name || "Component"), workInProgress2.ref !== null) {
            var info = "", ownerName = getCurrentFiberOwnerNameInDevOrNull();
            ownerName && (info += `

Check the render method of \`` + ownerName + "`.");
            var warningKey = ownerName || "", debugSource = workInProgress2._debugSource;
            debugSource && (warningKey = debugSource.fileName + ":" + debugSource.lineNumber), didWarnAboutFunctionRefs[warningKey] || (didWarnAboutFunctionRefs[warningKey] = !0, error("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", info));
          }
          if (typeof Component2.getDerivedStateFromProps == "function") {
            var _componentName3 = getComponentNameFromType(Component2) || "Unknown";
            didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] || (error("%s: Function components do not support getDerivedStateFromProps.", _componentName3), didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = !0);
          }
          if (typeof Component2.contextType == "object" && Component2.contextType !== null) {
            var _componentName4 = getComponentNameFromType(Component2) || "Unknown";
            didWarnAboutContextTypeOnFunctionComponent[_componentName4] || (error("%s: Function components do not support contextType.", _componentName4), didWarnAboutContextTypeOnFunctionComponent[_componentName4] = !0);
          }
        }
      }
      var SUSPENDED_MARKER = {
        dehydrated: null,
        treeContext: null,
        retryLane: NoLane
      };
      function mountSuspenseOffscreenState(renderLanes2) {
        return {
          baseLanes: renderLanes2,
          cachePool: getSuspendedCache(),
          transitions: null
        };
      }
      function updateSuspenseOffscreenState(prevOffscreenState, renderLanes2) {
        var cachePool = null;
        return {
          baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes2),
          cachePool,
          transitions: prevOffscreenState.transitions
        };
      }
      function shouldRemainOnFallback(suspenseContext, current2, workInProgress2, renderLanes2) {
        if (current2 !== null) {
          var suspenseState = current2.memoizedState;
          if (suspenseState === null)
            return !1;
        }
        return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
      }
      function getRemainingWorkInPrimaryTree(current2, renderLanes2) {
        return removeLanes(current2.childLanes, renderLanes2);
      }
      function updateSuspenseComponent(current2, workInProgress2, renderLanes2) {
        var nextProps = workInProgress2.pendingProps;
        shouldSuspend(workInProgress2) && (workInProgress2.flags |= DidCapture);
        var suspenseContext = suspenseStackCursor.current, showFallback = !1, didSuspend = (workInProgress2.flags & DidCapture) !== NoFlags;
        if (didSuspend || shouldRemainOnFallback(suspenseContext, current2) ? (showFallback = !0, workInProgress2.flags &= ~DidCapture) : (current2 === null || current2.memoizedState !== null) && (suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext)), suspenseContext = setDefaultShallowSuspenseContext(suspenseContext), pushSuspenseContext(workInProgress2, suspenseContext), current2 === null) {
          tryToClaimNextHydratableInstance(workInProgress2);
          var suspenseState = workInProgress2.memoizedState;
          if (suspenseState !== null) {
            var dehydrated = suspenseState.dehydrated;
            if (dehydrated !== null)
              return mountDehydratedSuspenseComponent(workInProgress2, dehydrated);
          }
          var nextPrimaryChildren = nextProps.children, nextFallbackChildren = nextProps.fallback;
          if (showFallback) {
            var fallbackFragment = mountSuspenseFallbackChildren(workInProgress2, nextPrimaryChildren, nextFallbackChildren, renderLanes2), primaryChildFragment = workInProgress2.child;
            return primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes2), workInProgress2.memoizedState = SUSPENDED_MARKER, fallbackFragment;
          } else
            return mountSuspensePrimaryChildren(workInProgress2, nextPrimaryChildren);
        } else {
          var prevState = current2.memoizedState;
          if (prevState !== null) {
            var _dehydrated = prevState.dehydrated;
            if (_dehydrated !== null)
              return updateDehydratedSuspenseComponent(current2, workInProgress2, didSuspend, nextProps, _dehydrated, prevState, renderLanes2);
          }
          if (showFallback) {
            var _nextFallbackChildren = nextProps.fallback, _nextPrimaryChildren = nextProps.children, fallbackChildFragment = updateSuspenseFallbackChildren(current2, workInProgress2, _nextPrimaryChildren, _nextFallbackChildren, renderLanes2), _primaryChildFragment2 = workInProgress2.child, prevOffscreenState = current2.child.memoizedState;
            return _primaryChildFragment2.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes2) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes2), _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(current2, renderLanes2), workInProgress2.memoizedState = SUSPENDED_MARKER, fallbackChildFragment;
          } else {
            var _nextPrimaryChildren2 = nextProps.children, _primaryChildFragment3 = updateSuspensePrimaryChildren(current2, workInProgress2, _nextPrimaryChildren2, renderLanes2);
            return workInProgress2.memoizedState = null, _primaryChildFragment3;
          }
        }
      }
      function mountSuspensePrimaryChildren(workInProgress2, primaryChildren, renderLanes2) {
        var mode = workInProgress2.mode, primaryChildProps = {
          mode: "visible",
          children: primaryChildren
        }, primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
        return primaryChildFragment.return = workInProgress2, workInProgress2.child = primaryChildFragment, primaryChildFragment;
      }
      function mountSuspenseFallbackChildren(workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
        var mode = workInProgress2.mode, progressedPrimaryFragment = workInProgress2.child, primaryChildProps = {
          mode: "hidden",
          children: primaryChildren
        }, primaryChildFragment, fallbackChildFragment;
        return (mode & ConcurrentMode) === NoMode && progressedPrimaryFragment !== null ? (primaryChildFragment = progressedPrimaryFragment, primaryChildFragment.childLanes = NoLanes, primaryChildFragment.pendingProps = primaryChildProps, workInProgress2.mode & ProfileMode && (primaryChildFragment.actualDuration = 0, primaryChildFragment.actualStartTime = -1, primaryChildFragment.selfBaseDuration = 0, primaryChildFragment.treeBaseDuration = 0), fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null)) : (primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode), fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null)), primaryChildFragment.return = workInProgress2, fallbackChildFragment.return = workInProgress2, primaryChildFragment.sibling = fallbackChildFragment, workInProgress2.child = primaryChildFragment, fallbackChildFragment;
      }
      function mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes2) {
        return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);
      }
      function updateWorkInProgressOffscreenFiber(current2, offscreenProps) {
        return createWorkInProgress(current2, offscreenProps);
      }
      function updateSuspensePrimaryChildren(current2, workInProgress2, primaryChildren, renderLanes2) {
        var currentPrimaryChildFragment = current2.child, currentFallbackChildFragment = currentPrimaryChildFragment.sibling, primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {
          mode: "visible",
          children: primaryChildren
        });
        if ((workInProgress2.mode & ConcurrentMode) === NoMode && (primaryChildFragment.lanes = renderLanes2), primaryChildFragment.return = workInProgress2, primaryChildFragment.sibling = null, currentFallbackChildFragment !== null) {
          var deletions = workInProgress2.deletions;
          deletions === null ? (workInProgress2.deletions = [currentFallbackChildFragment], workInProgress2.flags |= ChildDeletion) : deletions.push(currentFallbackChildFragment);
        }
        return workInProgress2.child = primaryChildFragment, primaryChildFragment;
      }
      function updateSuspenseFallbackChildren(current2, workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
        var mode = workInProgress2.mode, currentPrimaryChildFragment = current2.child, currentFallbackChildFragment = currentPrimaryChildFragment.sibling, primaryChildProps = {
          mode: "hidden",
          children: primaryChildren
        }, primaryChildFragment;
        if (
          // In legacy mode, we commit the primary tree as if it successfully
          // completed, even though it's in an inconsistent state.
          (mode & ConcurrentMode) === NoMode && // Make sure we're on the second pass, i.e. the primary child fragment was
          // already cloned. In legacy mode, the only case where this isn't true is
          // when DevTools forces us to display a fallback; we skip the first render
          // pass entirely and go straight to rendering the fallback. (In Concurrent
          // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
          // only codepath.)
          workInProgress2.child !== currentPrimaryChildFragment
        ) {
          var progressedPrimaryFragment = workInProgress2.child;
          primaryChildFragment = progressedPrimaryFragment, primaryChildFragment.childLanes = NoLanes, primaryChildFragment.pendingProps = primaryChildProps, workInProgress2.mode & ProfileMode && (primaryChildFragment.actualDuration = 0, primaryChildFragment.actualStartTime = -1, primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration, primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration), workInProgress2.deletions = null;
        } else
          primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps), primaryChildFragment.subtreeFlags = currentPrimaryChildFragment.subtreeFlags & StaticMask;
        var fallbackChildFragment;
        return currentFallbackChildFragment !== null ? fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren) : (fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null), fallbackChildFragment.flags |= Placement), fallbackChildFragment.return = workInProgress2, primaryChildFragment.return = workInProgress2, primaryChildFragment.sibling = fallbackChildFragment, workInProgress2.child = primaryChildFragment, fallbackChildFragment;
      }
      function retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, recoverableError) {
        recoverableError !== null && queueHydrationError(recoverableError), reconcileChildFibers(workInProgress2, current2.child, null, renderLanes2);
        var nextProps = workInProgress2.pendingProps, primaryChildren = nextProps.children, primaryChildFragment = mountSuspensePrimaryChildren(workInProgress2, primaryChildren);
        return primaryChildFragment.flags |= Placement, workInProgress2.memoizedState = null, primaryChildFragment;
      }
      function mountSuspenseFallbackAfterRetryWithoutHydrating(current2, workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
        var fiberMode = workInProgress2.mode, primaryChildProps = {
          mode: "visible",
          children: primaryChildren
        }, primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, fiberMode), fallbackChildFragment = createFiberFromFragment(fallbackChildren, fiberMode, renderLanes2, null);
        return fallbackChildFragment.flags |= Placement, primaryChildFragment.return = workInProgress2, fallbackChildFragment.return = workInProgress2, primaryChildFragment.sibling = fallbackChildFragment, workInProgress2.child = primaryChildFragment, (workInProgress2.mode & ConcurrentMode) !== NoMode && reconcileChildFibers(workInProgress2, current2.child, null, renderLanes2), fallbackChildFragment;
      }
      function mountDehydratedSuspenseComponent(workInProgress2, suspenseInstance, renderLanes2) {
        return (workInProgress2.mode & ConcurrentMode) === NoMode ? (error("Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container) to ReactDOMClient.hydrateRoot(container, <App />).render(element) or remove the Suspense components from the server rendered components."), workInProgress2.lanes = SyncLane) : isSuspenseInstanceFallback(suspenseInstance) ? workInProgress2.lanes = DefaultHydrationLane : workInProgress2.lanes = OffscreenLane, null;
      }
      function updateDehydratedSuspenseComponent(current2, workInProgress2, didSuspend, nextProps, suspenseInstance, suspenseState, renderLanes2) {
        if (didSuspend)
          if (workInProgress2.flags & ForceClientRender) {
            workInProgress2.flags &= ~ForceClientRender;
            var _capturedValue2 = createCapturedValue(new Error("There was an error while hydrating this Suspense boundary. Switched to client rendering."));
            return retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, _capturedValue2);
          } else {
            if (workInProgress2.memoizedState !== null)
              return workInProgress2.child = current2.child, workInProgress2.flags |= DidCapture, null;
            var nextPrimaryChildren = nextProps.children, nextFallbackChildren = nextProps.fallback, fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(current2, workInProgress2, nextPrimaryChildren, nextFallbackChildren, renderLanes2), _primaryChildFragment4 = workInProgress2.child;
            return _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(renderLanes2), workInProgress2.memoizedState = SUSPENDED_MARKER, fallbackChildFragment;
          }
        else {
          if (warnIfHydrating(), (workInProgress2.mode & ConcurrentMode) === NoMode)
            return retrySuspenseComponentWithoutHydrating(
              current2,
              workInProgress2,
              renderLanes2,
              // TODO: When we delete legacy mode, we should make this error argument
              // required — every concurrent mode path that causes hydration to
              // de-opt to client rendering should have an error message.
              null
            );
          if (isSuspenseInstanceFallback(suspenseInstance)) {
            var digest, message, stack;
            {
              var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails(suspenseInstance);
              digest = _getSuspenseInstanceF.digest, message = _getSuspenseInstanceF.message, stack = _getSuspenseInstanceF.stack;
            }
            var error2;
            message ? error2 = new Error(message) : error2 = new Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.");
            var capturedValue = createCapturedValue(error2, digest, stack);
            return retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, capturedValue);
          }
          var hasContextChanged2 = includesSomeLane(renderLanes2, current2.childLanes);
          if (didReceiveUpdate || hasContextChanged2) {
            var root2 = getWorkInProgressRoot();
            if (root2 !== null) {
              var attemptHydrationAtLane = getBumpedLaneForHydration(root2, renderLanes2);
              if (attemptHydrationAtLane !== NoLane && attemptHydrationAtLane !== suspenseState.retryLane) {
                suspenseState.retryLane = attemptHydrationAtLane;
                var eventTime = NoTimestamp;
                enqueueConcurrentRenderForLane(current2, attemptHydrationAtLane), scheduleUpdateOnFiber(root2, current2, attemptHydrationAtLane, eventTime);
              }
            }
            renderDidSuspendDelayIfPossible();
            var _capturedValue = createCapturedValue(new Error("This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition."));
            return retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, _capturedValue);
          } else if (isSuspenseInstancePending(suspenseInstance)) {
            workInProgress2.flags |= DidCapture, workInProgress2.child = current2.child;
            var retry = retryDehydratedSuspenseBoundary.bind(null, current2);
            return registerSuspenseInstanceRetry(suspenseInstance, retry), null;
          } else {
            reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress2, suspenseInstance, suspenseState.treeContext);
            var primaryChildren = nextProps.children, primaryChildFragment = mountSuspensePrimaryChildren(workInProgress2, primaryChildren);
            return primaryChildFragment.flags |= Hydrating, primaryChildFragment;
          }
        }
      }
      function scheduleSuspenseWorkOnFiber(fiber, renderLanes2, propagationRoot) {
        fiber.lanes = mergeLanes(fiber.lanes, renderLanes2);
        var alternate = fiber.alternate;
        alternate !== null && (alternate.lanes = mergeLanes(alternate.lanes, renderLanes2)), scheduleContextWorkOnParentPath(fiber.return, renderLanes2, propagationRoot);
      }
      function propagateSuspenseContextChange(workInProgress2, firstChild, renderLanes2) {
        for (var node = firstChild; node !== null; ) {
          if (node.tag === SuspenseComponent) {
            var state = node.memoizedState;
            state !== null && scheduleSuspenseWorkOnFiber(node, renderLanes2, workInProgress2);
          } else if (node.tag === SuspenseListComponent)
            scheduleSuspenseWorkOnFiber(node, renderLanes2, workInProgress2);
          else if (node.child !== null) {
            node.child.return = node, node = node.child;
            continue;
          }
          if (node === workInProgress2)
            return;
          for (; node.sibling === null; ) {
            if (node.return === null || node.return === workInProgress2)
              return;
            node = node.return;
          }
          node.sibling.return = node.return, node = node.sibling;
        }
      }
      function findLastContentRow(firstChild) {
        for (var row = firstChild, lastContentRow = null; row !== null; ) {
          var currentRow = row.alternate;
          currentRow !== null && findFirstSuspended(currentRow) === null && (lastContentRow = row), row = row.sibling;
        }
        return lastContentRow;
      }
      function validateRevealOrder(revealOrder) {
        if (revealOrder !== void 0 && revealOrder !== "forwards" && revealOrder !== "backwards" && revealOrder !== "together" && !didWarnAboutRevealOrder[revealOrder])
          if (didWarnAboutRevealOrder[revealOrder] = !0, typeof revealOrder == "string")
            switch (revealOrder.toLowerCase()) {
              case "together":
              case "forwards":
              case "backwards": {
                error('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                break;
              }
              case "forward":
              case "backward": {
                error('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                break;
              }
              default:
                error('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
                break;
            }
          else
            error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
      }
      function validateTailOptions(tailMode, revealOrder) {
        tailMode !== void 0 && !didWarnAboutTailOptions[tailMode] && (tailMode !== "collapsed" && tailMode !== "hidden" ? (didWarnAboutTailOptions[tailMode] = !0, error('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', tailMode)) : revealOrder !== "forwards" && revealOrder !== "backwards" && (didWarnAboutTailOptions[tailMode] = !0, error('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', tailMode)));
      }
      function validateSuspenseListNestedChild(childSlot, index4) {
        {
          var isAnArray = isArray(childSlot), isIterable = !isAnArray && typeof getIteratorFn(childSlot) == "function";
          if (isAnArray || isIterable) {
            var type = isAnArray ? "array" : "iterable";
            return error("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", type, index4, type), !1;
          }
        }
        return !0;
      }
      function validateSuspenseListChildren(children, revealOrder) {
        if ((revealOrder === "forwards" || revealOrder === "backwards") && children !== void 0 && children !== null && children !== !1)
          if (isArray(children)) {
            for (var i7 = 0; i7 < children.length; i7++)
              if (!validateSuspenseListNestedChild(children[i7], i7))
                return;
          } else {
            var iteratorFn = getIteratorFn(children);
            if (typeof iteratorFn == "function") {
              var childrenIterator = iteratorFn.call(children);
              if (childrenIterator)
                for (var step = childrenIterator.next(), _i = 0; !step.done; step = childrenIterator.next()) {
                  if (!validateSuspenseListNestedChild(step.value, _i))
                    return;
                  _i++;
                }
            } else
              error('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder);
          }
      }
      function initSuspenseListRenderState(workInProgress2, isBackwards, tail, lastContentRow, tailMode) {
        var renderState = workInProgress2.memoizedState;
        renderState === null ? workInProgress2.memoizedState = {
          isBackwards,
          rendering: null,
          renderingStartTime: 0,
          last: lastContentRow,
          tail,
          tailMode
        } : (renderState.isBackwards = isBackwards, renderState.rendering = null, renderState.renderingStartTime = 0, renderState.last = lastContentRow, renderState.tail = tail, renderState.tailMode = tailMode);
      }
      function updateSuspenseListComponent(current2, workInProgress2, renderLanes2) {
        var nextProps = workInProgress2.pendingProps, revealOrder = nextProps.revealOrder, tailMode = nextProps.tail, newChildren = nextProps.children;
        validateRevealOrder(revealOrder), validateTailOptions(tailMode, revealOrder), validateSuspenseListChildren(newChildren, revealOrder), reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
        var suspenseContext = suspenseStackCursor.current, shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
        if (shouldForceFallback)
          suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback), workInProgress2.flags |= DidCapture;
        else {
          var didSuspendBefore = current2 !== null && (current2.flags & DidCapture) !== NoFlags;
          didSuspendBefore && propagateSuspenseContextChange(workInProgress2, workInProgress2.child, renderLanes2), suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
        }
        if (pushSuspenseContext(workInProgress2, suspenseContext), (workInProgress2.mode & ConcurrentMode) === NoMode)
          workInProgress2.memoizedState = null;
        else
          switch (revealOrder) {
            case "forwards": {
              var lastContentRow = findLastContentRow(workInProgress2.child), tail;
              lastContentRow === null ? (tail = workInProgress2.child, workInProgress2.child = null) : (tail = lastContentRow.sibling, lastContentRow.sibling = null), initSuspenseListRenderState(
                workInProgress2,
                !1,
                // isBackwards
                tail,
                lastContentRow,
                tailMode
              );
              break;
            }
            case "backwards": {
              var _tail = null, row = workInProgress2.child;
              for (workInProgress2.child = null; row !== null; ) {
                var currentRow = row.alternate;
                if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                  workInProgress2.child = row;
                  break;
                }
                var nextRow = row.sibling;
                row.sibling = _tail, _tail = row, row = nextRow;
              }
              initSuspenseListRenderState(
                workInProgress2,
                !0,
                // isBackwards
                _tail,
                null,
                // last
                tailMode
              );
              break;
            }
            case "together": {
              initSuspenseListRenderState(
                workInProgress2,
                !1,
                // isBackwards
                null,
                // tail
                null,
                // last
                void 0
              );
              break;
            }
            default:
              workInProgress2.memoizedState = null;
          }
        return workInProgress2.child;
      }
      function updatePortalComponent(current2, workInProgress2, renderLanes2) {
        pushHostContainer(workInProgress2, workInProgress2.stateNode.containerInfo);
        var nextChildren = workInProgress2.pendingProps;
        return current2 === null ? workInProgress2.child = reconcileChildFibers(workInProgress2, null, nextChildren, renderLanes2) : reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2), workInProgress2.child;
      }
      var hasWarnedAboutUsingNoValuePropOnContextProvider = !1;
      function updateContextProvider(current2, workInProgress2, renderLanes2) {
        var providerType = workInProgress2.type, context = providerType._context, newProps = workInProgress2.pendingProps, oldProps = workInProgress2.memoizedProps, newValue = newProps.value;
        {
          "value" in newProps || hasWarnedAboutUsingNoValuePropOnContextProvider || (hasWarnedAboutUsingNoValuePropOnContextProvider = !0, error("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?"));
          var providerPropTypes = workInProgress2.type.propTypes;
          providerPropTypes && checkPropTypes(providerPropTypes, newProps, "prop", "Context.Provider");
        }
        if (pushProvider(workInProgress2, context, newValue), oldProps !== null) {
          var oldValue = oldProps.value;
          if (objectIs(oldValue, newValue)) {
            if (oldProps.children === newProps.children && !hasContextChanged())
              return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
          } else
            propagateContextChange(workInProgress2, context, renderLanes2);
        }
        var newChildren = newProps.children;
        return reconcileChildren(current2, workInProgress2, newChildren, renderLanes2), workInProgress2.child;
      }
      var hasWarnedAboutUsingContextAsConsumer = !1;
      function updateContextConsumer(current2, workInProgress2, renderLanes2) {
        var context = workInProgress2.type;
        context._context === void 0 ? context !== context.Consumer && (hasWarnedAboutUsingContextAsConsumer || (hasWarnedAboutUsingContextAsConsumer = !0, error("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?"))) : context = context._context;
        var newProps = workInProgress2.pendingProps, render2 = newProps.children;
        typeof render2 != "function" && error("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it."), prepareToReadContext(workInProgress2, renderLanes2);
        var newValue = readContext(context);
        markComponentRenderStarted(workInProgress2);
        var newChildren;
        return ReactCurrentOwner$1.current = workInProgress2, setIsRendering(!0), newChildren = render2(newValue), setIsRendering(!1), markComponentRenderStopped(), workInProgress2.flags |= PerformedWork, reconcileChildren(current2, workInProgress2, newChildren, renderLanes2), workInProgress2.child;
      }
      function markWorkInProgressReceivedUpdate() {
        didReceiveUpdate = !0;
      }
      function resetSuspendedCurrentOnMountInLegacyMode(current2, workInProgress2) {
        (workInProgress2.mode & ConcurrentMode) === NoMode && current2 !== null && (current2.alternate = null, workInProgress2.alternate = null, workInProgress2.flags |= Placement);
      }
      function bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2) {
        return current2 !== null && (workInProgress2.dependencies = current2.dependencies), stopProfilerTimerIfRunning(), markSkippedUpdateLanes(workInProgress2.lanes), includesSomeLane(renderLanes2, workInProgress2.childLanes) ? (cloneChildFibers(current2, workInProgress2), workInProgress2.child) : null;
      }
      function remountFiber(current2, oldWorkInProgress, newWorkInProgress) {
        {
          var returnFiber = oldWorkInProgress.return;
          if (returnFiber === null)
            throw new Error("Cannot swap the root fiber.");
          if (current2.alternate = null, oldWorkInProgress.alternate = null, newWorkInProgress.index = oldWorkInProgress.index, newWorkInProgress.sibling = oldWorkInProgress.sibling, newWorkInProgress.return = oldWorkInProgress.return, newWorkInProgress.ref = oldWorkInProgress.ref, oldWorkInProgress === returnFiber.child)
            returnFiber.child = newWorkInProgress;
          else {
            var prevSibling = returnFiber.child;
            if (prevSibling === null)
              throw new Error("Expected parent to have a child.");
            for (; prevSibling.sibling !== oldWorkInProgress; )
              if (prevSibling = prevSibling.sibling, prevSibling === null)
                throw new Error("Expected to find the previous sibling.");
            prevSibling.sibling = newWorkInProgress;
          }
          var deletions = returnFiber.deletions;
          return deletions === null ? (returnFiber.deletions = [current2], returnFiber.flags |= ChildDeletion) : deletions.push(current2), newWorkInProgress.flags |= Placement, newWorkInProgress;
        }
      }
      function checkScheduledUpdateOrContext(current2, renderLanes2) {
        var updateLanes = current2.lanes;
        return !!includesSomeLane(updateLanes, renderLanes2);
      }
      function attemptEarlyBailoutIfNoScheduledUpdate(current2, workInProgress2, renderLanes2) {
        switch (workInProgress2.tag) {
          case HostRoot:
            pushHostRootContext(workInProgress2);
            var root2 = workInProgress2.stateNode;
            resetHydrationState();
            break;
          case HostComponent:
            pushHostContext(workInProgress2);
            break;
          case ClassComponent: {
            var Component2 = workInProgress2.type;
            isContextProvider(Component2) && pushContextProvider(workInProgress2);
            break;
          }
          case HostPortal:
            pushHostContainer(workInProgress2, workInProgress2.stateNode.containerInfo);
            break;
          case ContextProvider: {
            var newValue = workInProgress2.memoizedProps.value, context = workInProgress2.type._context;
            pushProvider(workInProgress2, context, newValue);
            break;
          }
          case Profiler:
            {
              var hasChildWork = includesSomeLane(renderLanes2, workInProgress2.childLanes);
              hasChildWork && (workInProgress2.flags |= Update);
              {
                var stateNode = workInProgress2.stateNode;
                stateNode.effectDuration = 0, stateNode.passiveEffectDuration = 0;
              }
            }
            break;
          case SuspenseComponent: {
            var state = workInProgress2.memoizedState;
            if (state !== null) {
              if (state.dehydrated !== null)
                return pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current)), workInProgress2.flags |= DidCapture, null;
              var primaryChildFragment = workInProgress2.child, primaryChildLanes = primaryChildFragment.childLanes;
              if (includesSomeLane(renderLanes2, primaryChildLanes))
                return updateSuspenseComponent(current2, workInProgress2, renderLanes2);
              pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
              var child = bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
              return child !== null ? child.sibling : null;
            } else
              pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
            break;
          }
          case SuspenseListComponent: {
            var didSuspendBefore = (current2.flags & DidCapture) !== NoFlags, _hasChildWork = includesSomeLane(renderLanes2, workInProgress2.childLanes);
            if (didSuspendBefore) {
              if (_hasChildWork)
                return updateSuspenseListComponent(current2, workInProgress2, renderLanes2);
              workInProgress2.flags |= DidCapture;
            }
            var renderState = workInProgress2.memoizedState;
            if (renderState !== null && (renderState.rendering = null, renderState.tail = null, renderState.lastEffect = null), pushSuspenseContext(workInProgress2, suspenseStackCursor.current), _hasChildWork)
              break;
            return null;
          }
          case OffscreenComponent:
          case LegacyHiddenComponent:
            return workInProgress2.lanes = NoLanes, updateOffscreenComponent(current2, workInProgress2, renderLanes2);
        }
        return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
      }
      function beginWork(current2, workInProgress2, renderLanes2) {
        if (workInProgress2._debugNeedsRemount && current2 !== null)
          return remountFiber(current2, workInProgress2, createFiberFromTypeAndProps(workInProgress2.type, workInProgress2.key, workInProgress2.pendingProps, workInProgress2._debugOwner || null, workInProgress2.mode, workInProgress2.lanes));
        if (current2 !== null) {
          var oldProps = current2.memoizedProps, newProps = workInProgress2.pendingProps;
          if (oldProps !== newProps || hasContextChanged() || // Force a re-render if the implementation changed due to hot reload:
          workInProgress2.type !== current2.type)
            didReceiveUpdate = !0;
          else {
            var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current2, renderLanes2);
            if (!hasScheduledUpdateOrContext && // If this is the second pass of an error or suspense boundary, there
            // may not be work scheduled on `current`, so we check for this flag.
            (workInProgress2.flags & DidCapture) === NoFlags)
              return didReceiveUpdate = !1, attemptEarlyBailoutIfNoScheduledUpdate(current2, workInProgress2, renderLanes2);
            (current2.flags & ForceUpdateForLegacySuspense) !== NoFlags ? didReceiveUpdate = !0 : didReceiveUpdate = !1;
          }
        } else if (didReceiveUpdate = !1, getIsHydrating() && isForkedChild(workInProgress2)) {
          var slotIndex = workInProgress2.index, numberOfForks = getForksAtLevel();
          pushTreeId(workInProgress2, numberOfForks, slotIndex);
        }
        switch (workInProgress2.lanes = NoLanes, workInProgress2.tag) {
          case IndeterminateComponent:
            return mountIndeterminateComponent(current2, workInProgress2, workInProgress2.type, renderLanes2);
          case LazyComponent: {
            var elementType = workInProgress2.elementType;
            return mountLazyComponent(current2, workInProgress2, elementType, renderLanes2);
          }
          case FunctionComponent: {
            var Component2 = workInProgress2.type, unresolvedProps = workInProgress2.pendingProps, resolvedProps = workInProgress2.elementType === Component2 ? unresolvedProps : resolveDefaultProps(Component2, unresolvedProps);
            return updateFunctionComponent(current2, workInProgress2, Component2, resolvedProps, renderLanes2);
          }
          case ClassComponent: {
            var _Component = workInProgress2.type, _unresolvedProps = workInProgress2.pendingProps, _resolvedProps = workInProgress2.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);
            return updateClassComponent(current2, workInProgress2, _Component, _resolvedProps, renderLanes2);
          }
          case HostRoot:
            return updateHostRoot(current2, workInProgress2, renderLanes2);
          case HostComponent:
            return updateHostComponent(current2, workInProgress2, renderLanes2);
          case HostText:
            return updateHostText(current2, workInProgress2);
          case SuspenseComponent:
            return updateSuspenseComponent(current2, workInProgress2, renderLanes2);
          case HostPortal:
            return updatePortalComponent(current2, workInProgress2, renderLanes2);
          case ForwardRef10: {
            var type = workInProgress2.type, _unresolvedProps2 = workInProgress2.pendingProps, _resolvedProps2 = workInProgress2.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);
            return updateForwardRef(current2, workInProgress2, type, _resolvedProps2, renderLanes2);
          }
          case Fragment30:
            return updateFragment(current2, workInProgress2, renderLanes2);
          case Mode:
            return updateMode(current2, workInProgress2, renderLanes2);
          case Profiler:
            return updateProfiler(current2, workInProgress2, renderLanes2);
          case ContextProvider:
            return updateContextProvider(current2, workInProgress2, renderLanes2);
          case ContextConsumer:
            return updateContextConsumer(current2, workInProgress2, renderLanes2);
          case MemoComponent: {
            var _type2 = workInProgress2.type, _unresolvedProps3 = workInProgress2.pendingProps, _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);
            if (workInProgress2.type !== workInProgress2.elementType) {
              var outerPropTypes = _type2.propTypes;
              outerPropTypes && checkPropTypes(
                outerPropTypes,
                _resolvedProps3,
                // Resolved for outer only
                "prop",
                getComponentNameFromType(_type2)
              );
            }
            return _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3), updateMemoComponent(current2, workInProgress2, _type2, _resolvedProps3, renderLanes2);
          }
          case SimpleMemoComponent:
            return updateSimpleMemoComponent(current2, workInProgress2, workInProgress2.type, workInProgress2.pendingProps, renderLanes2);
          case IncompleteClassComponent: {
            var _Component2 = workInProgress2.type, _unresolvedProps4 = workInProgress2.pendingProps, _resolvedProps4 = workInProgress2.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);
            return mountIncompleteClassComponent(current2, workInProgress2, _Component2, _resolvedProps4, renderLanes2);
          }
          case SuspenseListComponent:
            return updateSuspenseListComponent(current2, workInProgress2, renderLanes2);
          case ScopeComponent:
            break;
          case OffscreenComponent:
            return updateOffscreenComponent(current2, workInProgress2, renderLanes2);
        }
        throw new Error("Unknown unit of work tag (" + workInProgress2.tag + "). This error is likely caused by a bug in React. Please file an issue.");
      }
      function markUpdate(workInProgress2) {
        workInProgress2.flags |= Update;
      }
      function markRef$1(workInProgress2) {
        workInProgress2.flags |= Ref, workInProgress2.flags |= RefStatic;
      }
      var appendAllChildren, updateHostContainer, updateHostComponent$1, updateHostText$1;
      appendAllChildren = function(parent, workInProgress2, needsVisibilityToggle, isHidden) {
        for (var node = workInProgress2.child; node !== null; ) {
          if (node.tag === HostComponent || node.tag === HostText)
            appendInitialChild(parent, node.stateNode);
          else if (node.tag !== HostPortal) {
            if (node.child !== null) {
              node.child.return = node, node = node.child;
              continue;
            }
          }
          if (node === workInProgress2)
            return;
          for (; node.sibling === null; ) {
            if (node.return === null || node.return === workInProgress2)
              return;
            node = node.return;
          }
          node.sibling.return = node.return, node = node.sibling;
        }
      }, updateHostContainer = function(current2, workInProgress2) {
      }, updateHostComponent$1 = function(current2, workInProgress2, type, newProps, rootContainerInstance) {
        var oldProps = current2.memoizedProps;
        if (oldProps !== newProps) {
          var instance = workInProgress2.stateNode, currentHostContext = getHostContext(), updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
          workInProgress2.updateQueue = updatePayload, updatePayload && markUpdate(workInProgress2);
        }
      }, updateHostText$1 = function(current2, workInProgress2, oldText, newText) {
        oldText !== newText && markUpdate(workInProgress2);
      };
      function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
        if (!getIsHydrating())
          switch (renderState.tailMode) {
            case "hidden": {
              for (var tailNode = renderState.tail, lastTailNode = null; tailNode !== null; )
                tailNode.alternate !== null && (lastTailNode = tailNode), tailNode = tailNode.sibling;
              lastTailNode === null ? renderState.tail = null : lastTailNode.sibling = null;
              break;
            }
            case "collapsed": {
              for (var _tailNode = renderState.tail, _lastTailNode = null; _tailNode !== null; )
                _tailNode.alternate !== null && (_lastTailNode = _tailNode), _tailNode = _tailNode.sibling;
              _lastTailNode === null ? !hasRenderedATailFallback && renderState.tail !== null ? renderState.tail.sibling = null : renderState.tail = null : _lastTailNode.sibling = null;
              break;
            }
          }
      }
      function bubbleProperties(completedWork) {
        var didBailout = completedWork.alternate !== null && completedWork.alternate.child === completedWork.child, newChildLanes = NoLanes, subtreeFlags = NoFlags;
        if (didBailout) {
          if ((completedWork.mode & ProfileMode) !== NoMode) {
            for (var _treeBaseDuration = completedWork.selfBaseDuration, _child2 = completedWork.child; _child2 !== null; )
              newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child2.lanes, _child2.childLanes)), subtreeFlags |= _child2.subtreeFlags & StaticMask, subtreeFlags |= _child2.flags & StaticMask, _treeBaseDuration += _child2.treeBaseDuration, _child2 = _child2.sibling;
            completedWork.treeBaseDuration = _treeBaseDuration;
          } else
            for (var _child3 = completedWork.child; _child3 !== null; )
              newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child3.lanes, _child3.childLanes)), subtreeFlags |= _child3.subtreeFlags & StaticMask, subtreeFlags |= _child3.flags & StaticMask, _child3.return = completedWork, _child3 = _child3.sibling;
          completedWork.subtreeFlags |= subtreeFlags;
        } else {
          if ((completedWork.mode & ProfileMode) !== NoMode) {
            for (var actualDuration = completedWork.actualDuration, treeBaseDuration = completedWork.selfBaseDuration, child = completedWork.child; child !== null; )
              newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes)), subtreeFlags |= child.subtreeFlags, subtreeFlags |= child.flags, actualDuration += child.actualDuration, treeBaseDuration += child.treeBaseDuration, child = child.sibling;
            completedWork.actualDuration = actualDuration, completedWork.treeBaseDuration = treeBaseDuration;
          } else
            for (var _child = completedWork.child; _child !== null; )
              newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes)), subtreeFlags |= _child.subtreeFlags, subtreeFlags |= _child.flags, _child.return = completedWork, _child = _child.sibling;
          completedWork.subtreeFlags |= subtreeFlags;
        }
        return completedWork.childLanes = newChildLanes, didBailout;
      }
      function completeDehydratedSuspenseBoundary(current2, workInProgress2, nextState) {
        if (hasUnhydratedTailNodes() && (workInProgress2.mode & ConcurrentMode) !== NoMode && (workInProgress2.flags & DidCapture) === NoFlags)
          return warnIfUnhydratedTailNodes(workInProgress2), resetHydrationState(), workInProgress2.flags |= ForceClientRender | Incomplete | ShouldCapture, !1;
        var wasHydrated = popHydrationState(workInProgress2);
        if (nextState !== null && nextState.dehydrated !== null)
          if (current2 === null) {
            if (!wasHydrated)
              throw new Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
            if (prepareToHydrateHostSuspenseInstance(workInProgress2), bubbleProperties(workInProgress2), (workInProgress2.mode & ProfileMode) !== NoMode) {
              var isTimedOutSuspense = nextState !== null;
              if (isTimedOutSuspense) {
                var primaryChildFragment = workInProgress2.child;
                primaryChildFragment !== null && (workInProgress2.treeBaseDuration -= primaryChildFragment.treeBaseDuration);
              }
            }
            return !1;
          } else {
            if (resetHydrationState(), (workInProgress2.flags & DidCapture) === NoFlags && (workInProgress2.memoizedState = null), workInProgress2.flags |= Update, bubbleProperties(workInProgress2), (workInProgress2.mode & ProfileMode) !== NoMode) {
              var _isTimedOutSuspense = nextState !== null;
              if (_isTimedOutSuspense) {
                var _primaryChildFragment = workInProgress2.child;
                _primaryChildFragment !== null && (workInProgress2.treeBaseDuration -= _primaryChildFragment.treeBaseDuration);
              }
            }
            return !1;
          }
        else
          return upgradeHydrationErrorsToRecoverable(), !0;
      }
      function completeWork(current2, workInProgress2, renderLanes2) {
        var newProps = workInProgress2.pendingProps;
        switch (popTreeContext(workInProgress2), workInProgress2.tag) {
          case IndeterminateComponent:
          case LazyComponent:
          case SimpleMemoComponent:
          case FunctionComponent:
          case ForwardRef10:
          case Fragment30:
          case Mode:
          case Profiler:
          case ContextConsumer:
          case MemoComponent:
            return bubbleProperties(workInProgress2), null;
          case ClassComponent: {
            var Component2 = workInProgress2.type;
            return isContextProvider(Component2) && popContext(workInProgress2), bubbleProperties(workInProgress2), null;
          }
          case HostRoot: {
            var fiberRoot = workInProgress2.stateNode;
            if (popHostContainer(workInProgress2), popTopLevelContextObject(workInProgress2), resetWorkInProgressVersions(), fiberRoot.pendingContext && (fiberRoot.context = fiberRoot.pendingContext, fiberRoot.pendingContext = null), current2 === null || current2.child === null) {
              var wasHydrated = popHydrationState(workInProgress2);
              if (wasHydrated)
                markUpdate(workInProgress2);
              else if (current2 !== null) {
                var prevState = current2.memoizedState;
                // Check if this is a client root
                (!prevState.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)
                (workInProgress2.flags & ForceClientRender) !== NoFlags) && (workInProgress2.flags |= Snapshot, upgradeHydrationErrorsToRecoverable());
              }
            }
            return updateHostContainer(current2, workInProgress2), bubbleProperties(workInProgress2), null;
          }
          case HostComponent: {
            popHostContext(workInProgress2);
            var rootContainerInstance = getRootHostContainer(), type = workInProgress2.type;
            if (current2 !== null && workInProgress2.stateNode != null)
              updateHostComponent$1(current2, workInProgress2, type, newProps, rootContainerInstance), current2.ref !== workInProgress2.ref && markRef$1(workInProgress2);
            else {
              if (!newProps) {
                if (workInProgress2.stateNode === null)
                  throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                return bubbleProperties(workInProgress2), null;
              }
              var currentHostContext = getHostContext(), _wasHydrated = popHydrationState(workInProgress2);
              if (_wasHydrated)
                prepareToHydrateHostInstance(workInProgress2, rootContainerInstance, currentHostContext) && markUpdate(workInProgress2);
              else {
                var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress2);
                appendAllChildren(instance, workInProgress2, !1, !1), workInProgress2.stateNode = instance, finalizeInitialChildren(instance, type, newProps, rootContainerInstance) && markUpdate(workInProgress2);
              }
              workInProgress2.ref !== null && markRef$1(workInProgress2);
            }
            return bubbleProperties(workInProgress2), null;
          }
          case HostText: {
            var newText = newProps;
            if (current2 && workInProgress2.stateNode != null) {
              var oldText = current2.memoizedProps;
              updateHostText$1(current2, workInProgress2, oldText, newText);
            } else {
              if (typeof newText != "string" && workInProgress2.stateNode === null)
                throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
              var _rootContainerInstance = getRootHostContainer(), _currentHostContext = getHostContext(), _wasHydrated2 = popHydrationState(workInProgress2);
              _wasHydrated2 ? prepareToHydrateHostTextInstance(workInProgress2) && markUpdate(workInProgress2) : workInProgress2.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress2);
            }
            return bubbleProperties(workInProgress2), null;
          }
          case SuspenseComponent: {
            popSuspenseContext(workInProgress2);
            var nextState = workInProgress2.memoizedState;
            if (current2 === null || current2.memoizedState !== null && current2.memoizedState.dehydrated !== null) {
              var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(current2, workInProgress2, nextState);
              if (!fallthroughToNormalSuspensePath)
                return workInProgress2.flags & ShouldCapture ? workInProgress2 : null;
            }
            if ((workInProgress2.flags & DidCapture) !== NoFlags)
              return workInProgress2.lanes = renderLanes2, (workInProgress2.mode & ProfileMode) !== NoMode && transferActualDuration(workInProgress2), workInProgress2;
            var nextDidTimeout = nextState !== null, prevDidTimeout = current2 !== null && current2.memoizedState !== null;
            if (nextDidTimeout !== prevDidTimeout && nextDidTimeout) {
              var _offscreenFiber2 = workInProgress2.child;
              if (_offscreenFiber2.flags |= Visibility, (workInProgress2.mode & ConcurrentMode) !== NoMode) {
                var hasInvisibleChildContext = current2 === null && (workInProgress2.memoizedProps.unstable_avoidThisFallback !== !0 || !enableSuspenseAvoidThisFallback);
                hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext) ? renderDidSuspend() : renderDidSuspendDelayIfPossible();
              }
            }
            var wakeables = workInProgress2.updateQueue;
            if (wakeables !== null && (workInProgress2.flags |= Update), bubbleProperties(workInProgress2), (workInProgress2.mode & ProfileMode) !== NoMode && nextDidTimeout) {
              var primaryChildFragment = workInProgress2.child;
              primaryChildFragment !== null && (workInProgress2.treeBaseDuration -= primaryChildFragment.treeBaseDuration);
            }
            return null;
          }
          case HostPortal:
            return popHostContainer(workInProgress2), updateHostContainer(current2, workInProgress2), current2 === null && preparePortalMount(workInProgress2.stateNode.containerInfo), bubbleProperties(workInProgress2), null;
          case ContextProvider:
            var context = workInProgress2.type._context;
            return popProvider(context, workInProgress2), bubbleProperties(workInProgress2), null;
          case IncompleteClassComponent: {
            var _Component = workInProgress2.type;
            return isContextProvider(_Component) && popContext(workInProgress2), bubbleProperties(workInProgress2), null;
          }
          case SuspenseListComponent: {
            popSuspenseContext(workInProgress2);
            var renderState = workInProgress2.memoizedState;
            if (renderState === null)
              return bubbleProperties(workInProgress2), null;
            var didSuspendAlready = (workInProgress2.flags & DidCapture) !== NoFlags, renderedTail = renderState.rendering;
            if (renderedTail === null)
              if (didSuspendAlready)
                cutOffTailIfNeeded(renderState, !1);
              else {
                var cannotBeSuspended = renderHasNotSuspendedYet() && (current2 === null || (current2.flags & DidCapture) === NoFlags);
                if (!cannotBeSuspended)
                  for (var row = workInProgress2.child; row !== null; ) {
                    var suspended = findFirstSuspended(row);
                    if (suspended !== null) {
                      didSuspendAlready = !0, workInProgress2.flags |= DidCapture, cutOffTailIfNeeded(renderState, !1);
                      var newThenables = suspended.updateQueue;
                      return newThenables !== null && (workInProgress2.updateQueue = newThenables, workInProgress2.flags |= Update), workInProgress2.subtreeFlags = NoFlags, resetChildFibers(workInProgress2, renderLanes2), pushSuspenseContext(workInProgress2, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback)), workInProgress2.child;
                    }
                    row = row.sibling;
                  }
                renderState.tail !== null && now() > getRenderTargetTime() && (workInProgress2.flags |= DidCapture, didSuspendAlready = !0, cutOffTailIfNeeded(renderState, !1), workInProgress2.lanes = SomeRetryLane);
              }
            else {
              if (!didSuspendAlready) {
                var _suspended = findFirstSuspended(renderedTail);
                if (_suspended !== null) {
                  workInProgress2.flags |= DidCapture, didSuspendAlready = !0;
                  var _newThenables = _suspended.updateQueue;
                  if (_newThenables !== null && (workInProgress2.updateQueue = _newThenables, workInProgress2.flags |= Update), cutOffTailIfNeeded(renderState, !0), renderState.tail === null && renderState.tailMode === "hidden" && !renderedTail.alternate && !getIsHydrating())
                    return bubbleProperties(workInProgress2), null;
                } else
                  // The time it took to render last row is greater than the remaining
                  // time we have to render. So rendering one more row would likely
                  // exceed it.
                  now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes2 !== OffscreenLane && (workInProgress2.flags |= DidCapture, didSuspendAlready = !0, cutOffTailIfNeeded(renderState, !1), workInProgress2.lanes = SomeRetryLane);
              }
              if (renderState.isBackwards)
                renderedTail.sibling = workInProgress2.child, workInProgress2.child = renderedTail;
              else {
                var previousSibling = renderState.last;
                previousSibling !== null ? previousSibling.sibling = renderedTail : workInProgress2.child = renderedTail, renderState.last = renderedTail;
              }
            }
            if (renderState.tail !== null) {
              var next = renderState.tail;
              renderState.rendering = next, renderState.tail = next.sibling, renderState.renderingStartTime = now(), next.sibling = null;
              var suspenseContext = suspenseStackCursor.current;
              return didSuspendAlready ? suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback) : suspenseContext = setDefaultShallowSuspenseContext(suspenseContext), pushSuspenseContext(workInProgress2, suspenseContext), next;
            }
            return bubbleProperties(workInProgress2), null;
          }
          case ScopeComponent:
            break;
          case OffscreenComponent:
          case LegacyHiddenComponent: {
            popRenderLanes(workInProgress2);
            var _nextState = workInProgress2.memoizedState, nextIsHidden = _nextState !== null;
            if (current2 !== null) {
              var _prevState = current2.memoizedState, prevIsHidden = _prevState !== null;
              prevIsHidden !== nextIsHidden && // LegacyHidden doesn't do any hiding — it only pre-renders.
              !enableLegacyHidden && (workInProgress2.flags |= Visibility);
            }
            return !nextIsHidden || (workInProgress2.mode & ConcurrentMode) === NoMode ? bubbleProperties(workInProgress2) : includesSomeLane(subtreeRenderLanes, OffscreenLane) && (bubbleProperties(workInProgress2), workInProgress2.subtreeFlags & (Placement | Update) && (workInProgress2.flags |= Visibility)), null;
          }
          case CacheComponent:
            return null;
          case TracingMarkerComponent:
            return null;
        }
        throw new Error("Unknown unit of work tag (" + workInProgress2.tag + "). This error is likely caused by a bug in React. Please file an issue.");
      }
      function unwindWork(current2, workInProgress2, renderLanes2) {
        switch (popTreeContext(workInProgress2), workInProgress2.tag) {
          case ClassComponent: {
            var Component2 = workInProgress2.type;
            isContextProvider(Component2) && popContext(workInProgress2);
            var flags2 = workInProgress2.flags;
            return flags2 & ShouldCapture ? (workInProgress2.flags = flags2 & ~ShouldCapture | DidCapture, (workInProgress2.mode & ProfileMode) !== NoMode && transferActualDuration(workInProgress2), workInProgress2) : null;
          }
          case HostRoot: {
            var root2 = workInProgress2.stateNode;
            popHostContainer(workInProgress2), popTopLevelContextObject(workInProgress2), resetWorkInProgressVersions();
            var _flags = workInProgress2.flags;
            return (_flags & ShouldCapture) !== NoFlags && (_flags & DidCapture) === NoFlags ? (workInProgress2.flags = _flags & ~ShouldCapture | DidCapture, workInProgress2) : null;
          }
          case HostComponent:
            return popHostContext(workInProgress2), null;
          case SuspenseComponent: {
            popSuspenseContext(workInProgress2);
            var suspenseState = workInProgress2.memoizedState;
            if (suspenseState !== null && suspenseState.dehydrated !== null) {
              if (workInProgress2.alternate === null)
                throw new Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
              resetHydrationState();
            }
            var _flags2 = workInProgress2.flags;
            return _flags2 & ShouldCapture ? (workInProgress2.flags = _flags2 & ~ShouldCapture | DidCapture, (workInProgress2.mode & ProfileMode) !== NoMode && transferActualDuration(workInProgress2), workInProgress2) : null;
          }
          case SuspenseListComponent:
            return popSuspenseContext(workInProgress2), null;
          case HostPortal:
            return popHostContainer(workInProgress2), null;
          case ContextProvider:
            var context = workInProgress2.type._context;
            return popProvider(context, workInProgress2), null;
          case OffscreenComponent:
          case LegacyHiddenComponent:
            return popRenderLanes(workInProgress2), null;
          case CacheComponent:
            return null;
          default:
            return null;
        }
      }
      function unwindInterruptedWork(current2, interruptedWork, renderLanes2) {
        switch (popTreeContext(interruptedWork), interruptedWork.tag) {
          case ClassComponent: {
            var childContextTypes = interruptedWork.type.childContextTypes;
            childContextTypes != null && popContext(interruptedWork);
            break;
          }
          case HostRoot: {
            var root2 = interruptedWork.stateNode;
            popHostContainer(interruptedWork), popTopLevelContextObject(interruptedWork), resetWorkInProgressVersions();
            break;
          }
          case HostComponent: {
            popHostContext(interruptedWork);
            break;
          }
          case HostPortal:
            popHostContainer(interruptedWork);
            break;
          case SuspenseComponent:
            popSuspenseContext(interruptedWork);
            break;
          case SuspenseListComponent:
            popSuspenseContext(interruptedWork);
            break;
          case ContextProvider:
            var context = interruptedWork.type._context;
            popProvider(context, interruptedWork);
            break;
          case OffscreenComponent:
          case LegacyHiddenComponent:
            popRenderLanes(interruptedWork);
            break;
        }
      }
      var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
      didWarnAboutUndefinedSnapshotBeforeUpdate = /* @__PURE__ */ new Set();
      var offscreenSubtreeIsHidden = !1, offscreenSubtreeWasHidden = !1, PossiblyWeakSet = typeof WeakSet == "function" ? WeakSet : Set, nextEffect = null, inProgressLanes = null, inProgressRoot = null;
      function reportUncaughtErrorInDEV(error2) {
        invokeGuardedCallback(null, function() {
          throw error2;
        }), clearCaughtError();
      }
      var callComponentWillUnmountWithTimer = function(current2, instance) {
        if (instance.props = current2.memoizedProps, instance.state = current2.memoizedState, current2.mode & ProfileMode)
          try {
            startLayoutEffectTimer(), instance.componentWillUnmount();
          } finally {
            recordLayoutEffectDuration(current2);
          }
        else
          instance.componentWillUnmount();
      };
      function safelyCallCommitHookLayoutEffectListMount(current2, nearestMountedAncestor) {
        try {
          commitHookEffectListMount(Layout4, current2);
        } catch (error2) {
          captureCommitPhaseError(current2, nearestMountedAncestor, error2);
        }
      }
      function safelyCallComponentWillUnmount(current2, nearestMountedAncestor, instance) {
        try {
          callComponentWillUnmountWithTimer(current2, instance);
        } catch (error2) {
          captureCommitPhaseError(current2, nearestMountedAncestor, error2);
        }
      }
      function safelyCallComponentDidMount(current2, nearestMountedAncestor, instance) {
        try {
          instance.componentDidMount();
        } catch (error2) {
          captureCommitPhaseError(current2, nearestMountedAncestor, error2);
        }
      }
      function safelyAttachRef(current2, nearestMountedAncestor) {
        try {
          commitAttachRef(current2);
        } catch (error2) {
          captureCommitPhaseError(current2, nearestMountedAncestor, error2);
        }
      }
      function safelyDetachRef(current2, nearestMountedAncestor) {
        var ref = current2.ref;
        if (ref !== null)
          if (typeof ref == "function") {
            var retVal;
            try {
              if (enableProfilerTimer && enableProfilerCommitHooks && current2.mode & ProfileMode)
                try {
                  startLayoutEffectTimer(), retVal = ref(null);
                } finally {
                  recordLayoutEffectDuration(current2);
                }
              else
                retVal = ref(null);
            } catch (error2) {
              captureCommitPhaseError(current2, nearestMountedAncestor, error2);
            }
            typeof retVal == "function" && error("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(current2));
          } else
            ref.current = null;
      }
      function safelyCallDestroy(current2, nearestMountedAncestor, destroy) {
        try {
          destroy();
        } catch (error2) {
          captureCommitPhaseError(current2, nearestMountedAncestor, error2);
        }
      }
      var focusedInstanceHandle = null, shouldFireAfterActiveInstanceBlur = !1;
      function commitBeforeMutationEffects(root2, firstChild) {
        focusedInstanceHandle = prepareForCommit(root2.containerInfo), nextEffect = firstChild, commitBeforeMutationEffects_begin();
        var shouldFire = shouldFireAfterActiveInstanceBlur;
        return shouldFireAfterActiveInstanceBlur = !1, focusedInstanceHandle = null, shouldFire;
      }
      function commitBeforeMutationEffects_begin() {
        for (; nextEffect !== null; ) {
          var fiber = nextEffect, child = fiber.child;
          (fiber.subtreeFlags & BeforeMutationMask) !== NoFlags && child !== null ? (child.return = fiber, nextEffect = child) : commitBeforeMutationEffects_complete();
        }
      }
      function commitBeforeMutationEffects_complete() {
        for (; nextEffect !== null; ) {
          var fiber = nextEffect;
          setCurrentFiber(fiber);
          try {
            commitBeforeMutationEffectsOnFiber(fiber);
          } catch (error2) {
            captureCommitPhaseError(fiber, fiber.return, error2);
          }
          resetCurrentFiber();
          var sibling = fiber.sibling;
          if (sibling !== null) {
            sibling.return = fiber.return, nextEffect = sibling;
            return;
          }
          nextEffect = fiber.return;
        }
      }
      function commitBeforeMutationEffectsOnFiber(finishedWork) {
        var current2 = finishedWork.alternate, flags2 = finishedWork.flags;
        if ((flags2 & Snapshot) !== NoFlags) {
          switch (setCurrentFiber(finishedWork), finishedWork.tag) {
            case FunctionComponent:
            case ForwardRef10:
            case SimpleMemoComponent:
              break;
            case ClassComponent: {
              if (current2 !== null) {
                var prevProps = current2.memoizedProps, prevState = current2.memoizedState, instance = finishedWork.stateNode;
                finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps && (instance.props !== finishedWork.memoizedProps && error("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"), instance.state !== finishedWork.memoizedState && error("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"));
                var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                {
                  var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
                  snapshot === void 0 && !didWarnSet.has(finishedWork.type) && (didWarnSet.add(finishedWork.type), error("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", getComponentNameFromFiber(finishedWork)));
                }
                instance.__reactInternalSnapshotBeforeUpdate = snapshot;
              }
              break;
            }
            case HostRoot: {
              {
                var root2 = finishedWork.stateNode;
                clearContainer(root2.containerInfo);
              }
              break;
            }
            case HostComponent:
            case HostText:
            case HostPortal:
            case IncompleteClassComponent:
              break;
            default:
              throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
          }
          resetCurrentFiber();
        }
      }
      function commitHookEffectListUnmount(flags2, finishedWork, nearestMountedAncestor) {
        var updateQueue = finishedWork.updateQueue, lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
        if (lastEffect !== null) {
          var firstEffect = lastEffect.next, effect = firstEffect;
          do {
            if ((effect.tag & flags2) === flags2) {
              var destroy = effect.destroy;
              effect.destroy = void 0, destroy !== void 0 && ((flags2 & Passive$1) !== NoFlags$1 ? markComponentPassiveEffectUnmountStarted(finishedWork) : (flags2 & Layout4) !== NoFlags$1 && markComponentLayoutEffectUnmountStarted(finishedWork), (flags2 & Insertion) !== NoFlags$1 && setIsRunningInsertionEffect(!0), safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy), (flags2 & Insertion) !== NoFlags$1 && setIsRunningInsertionEffect(!1), (flags2 & Passive$1) !== NoFlags$1 ? markComponentPassiveEffectUnmountStopped() : (flags2 & Layout4) !== NoFlags$1 && markComponentLayoutEffectUnmountStopped());
            }
            effect = effect.next;
          } while (effect !== firstEffect);
        }
      }
      function commitHookEffectListMount(flags2, finishedWork) {
        var updateQueue = finishedWork.updateQueue, lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
        if (lastEffect !== null) {
          var firstEffect = lastEffect.next, effect = firstEffect;
          do {
            if ((effect.tag & flags2) === flags2) {
              (flags2 & Passive$1) !== NoFlags$1 ? markComponentPassiveEffectMountStarted(finishedWork) : (flags2 & Layout4) !== NoFlags$1 && markComponentLayoutEffectMountStarted(finishedWork);
              var create = effect.create;
              (flags2 & Insertion) !== NoFlags$1 && setIsRunningInsertionEffect(!0), effect.destroy = create(), (flags2 & Insertion) !== NoFlags$1 && setIsRunningInsertionEffect(!1), (flags2 & Passive$1) !== NoFlags$1 ? markComponentPassiveEffectMountStopped() : (flags2 & Layout4) !== NoFlags$1 && markComponentLayoutEffectMountStopped();
              {
                var destroy = effect.destroy;
                if (destroy !== void 0 && typeof destroy != "function") {
                  var hookName = void 0;
                  (effect.tag & Layout4) !== NoFlags ? hookName = "useLayoutEffect" : (effect.tag & Insertion) !== NoFlags ? hookName = "useInsertionEffect" : hookName = "useEffect";
                  var addendum = void 0;
                  destroy === null ? addendum = " You returned null. If your effect does not require clean up, return undefined (or nothing)." : typeof destroy.then == "function" ? addendum = `

It looks like you wrote ` + hookName + `(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:

` + hookName + `(() => {
  async function fetchData() {
    // You can await here
    const response = await MyAPI.getData(someId);
    // ...
  }
  fetchData();
}, [someId]); // Or [] if effect doesn't need props or state

Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching` : addendum = " You returned: " + destroy, error("%s must not return anything besides a function, which is used for clean-up.%s", hookName, addendum);
                }
              }
            }
            effect = effect.next;
          } while (effect !== firstEffect);
        }
      }
      function commitPassiveEffectDurations(finishedRoot, finishedWork) {
        if ((finishedWork.flags & Update) !== NoFlags)
          switch (finishedWork.tag) {
            case Profiler: {
              var passiveEffectDuration = finishedWork.stateNode.passiveEffectDuration, _finishedWork$memoize = finishedWork.memoizedProps, id = _finishedWork$memoize.id, onPostCommit = _finishedWork$memoize.onPostCommit, commitTime2 = getCommitTime(), phase = finishedWork.alternate === null ? "mount" : "update";
              isCurrentUpdateNested() && (phase = "nested-update"), typeof onPostCommit == "function" && onPostCommit(id, phase, passiveEffectDuration, commitTime2);
              var parentFiber = finishedWork.return;
              outer:
                for (; parentFiber !== null; ) {
                  switch (parentFiber.tag) {
                    case HostRoot:
                      var root2 = parentFiber.stateNode;
                      root2.passiveEffectDuration += passiveEffectDuration;
                      break outer;
                    case Profiler:
                      var parentStateNode = parentFiber.stateNode;
                      parentStateNode.passiveEffectDuration += passiveEffectDuration;
                      break outer;
                  }
                  parentFiber = parentFiber.return;
                }
              break;
            }
          }
      }
      function commitLayoutEffectOnFiber(finishedRoot, current2, finishedWork, committedLanes) {
        if ((finishedWork.flags & LayoutMask) !== NoFlags)
          switch (finishedWork.tag) {
            case FunctionComponent:
            case ForwardRef10:
            case SimpleMemoComponent: {
              if (!offscreenSubtreeWasHidden)
                if (finishedWork.mode & ProfileMode)
                  try {
                    startLayoutEffectTimer(), commitHookEffectListMount(Layout4 | HasEffect, finishedWork);
                  } finally {
                    recordLayoutEffectDuration(finishedWork);
                  }
                else
                  commitHookEffectListMount(Layout4 | HasEffect, finishedWork);
              break;
            }
            case ClassComponent: {
              var instance = finishedWork.stateNode;
              if (finishedWork.flags & Update && !offscreenSubtreeWasHidden)
                if (current2 === null)
                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps && (instance.props !== finishedWork.memoizedProps && error("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"), instance.state !== finishedWork.memoizedState && error("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance")), finishedWork.mode & ProfileMode)
                    try {
                      startLayoutEffectTimer(), instance.componentDidMount();
                    } finally {
                      recordLayoutEffectDuration(finishedWork);
                    }
                  else
                    instance.componentDidMount();
                else {
                  var prevProps = finishedWork.elementType === finishedWork.type ? current2.memoizedProps : resolveDefaultProps(finishedWork.type, current2.memoizedProps), prevState = current2.memoizedState;
                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps && (instance.props !== finishedWork.memoizedProps && error("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"), instance.state !== finishedWork.memoizedState && error("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance")), finishedWork.mode & ProfileMode)
                    try {
                      startLayoutEffectTimer(), instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                    } finally {
                      recordLayoutEffectDuration(finishedWork);
                    }
                  else
                    instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                }
              var updateQueue = finishedWork.updateQueue;
              updateQueue !== null && (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps && (instance.props !== finishedWork.memoizedProps && error("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance"), instance.state !== finishedWork.memoizedState && error("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance")), commitUpdateQueue(finishedWork, updateQueue, instance));
              break;
            }
            case HostRoot: {
              var _updateQueue = finishedWork.updateQueue;
              if (_updateQueue !== null) {
                var _instance = null;
                if (finishedWork.child !== null)
                  switch (finishedWork.child.tag) {
                    case HostComponent:
                      _instance = finishedWork.child.stateNode;
                      break;
                    case ClassComponent:
                      _instance = finishedWork.child.stateNode;
                      break;
                  }
                commitUpdateQueue(finishedWork, _updateQueue, _instance);
              }
              break;
            }
            case HostComponent: {
              var _instance2 = finishedWork.stateNode;
              if (current2 === null && finishedWork.flags & Update) {
                var type = finishedWork.type, props = finishedWork.memoizedProps;
                commitMount(_instance2, type, props);
              }
              break;
            }
            case HostText:
              break;
            case HostPortal:
              break;
            case Profiler: {
              {
                var _finishedWork$memoize2 = finishedWork.memoizedProps, onCommit = _finishedWork$memoize2.onCommit, onRender = _finishedWork$memoize2.onRender, effectDuration = finishedWork.stateNode.effectDuration, commitTime2 = getCommitTime(), phase = current2 === null ? "mount" : "update";
                isCurrentUpdateNested() && (phase = "nested-update"), typeof onRender == "function" && onRender(finishedWork.memoizedProps.id, phase, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime2);
                {
                  typeof onCommit == "function" && onCommit(finishedWork.memoizedProps.id, phase, effectDuration, commitTime2), enqueuePendingPassiveProfilerEffect(finishedWork);
                  var parentFiber = finishedWork.return;
                  outer:
                    for (; parentFiber !== null; ) {
                      switch (parentFiber.tag) {
                        case HostRoot:
                          var root2 = parentFiber.stateNode;
                          root2.effectDuration += effectDuration;
                          break outer;
                        case Profiler:
                          var parentStateNode = parentFiber.stateNode;
                          parentStateNode.effectDuration += effectDuration;
                          break outer;
                      }
                      parentFiber = parentFiber.return;
                    }
                }
              }
              break;
            }
            case SuspenseComponent: {
              commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
              break;
            }
            case SuspenseListComponent:
            case IncompleteClassComponent:
            case ScopeComponent:
            case OffscreenComponent:
            case LegacyHiddenComponent:
            case TracingMarkerComponent:
              break;
            default:
              throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
          }
        offscreenSubtreeWasHidden || finishedWork.flags & Ref && commitAttachRef(finishedWork);
      }
      function reappearLayoutEffectsOnFiber(node) {
        switch (node.tag) {
          case FunctionComponent:
          case ForwardRef10:
          case SimpleMemoComponent: {
            if (node.mode & ProfileMode)
              try {
                startLayoutEffectTimer(), safelyCallCommitHookLayoutEffectListMount(node, node.return);
              } finally {
                recordLayoutEffectDuration(node);
              }
            else
              safelyCallCommitHookLayoutEffectListMount(node, node.return);
            break;
          }
          case ClassComponent: {
            var instance = node.stateNode;
            typeof instance.componentDidMount == "function" && safelyCallComponentDidMount(node, node.return, instance), safelyAttachRef(node, node.return);
            break;
          }
          case HostComponent: {
            safelyAttachRef(node, node.return);
            break;
          }
        }
      }
      function hideOrUnhideAllChildren(finishedWork, isHidden) {
        for (var hostSubtreeRoot = null, node = finishedWork; ; ) {
          if (node.tag === HostComponent) {
            if (hostSubtreeRoot === null) {
              hostSubtreeRoot = node;
              try {
                var instance = node.stateNode;
                isHidden ? hideInstance(instance) : unhideInstance(node.stateNode, node.memoizedProps);
              } catch (error2) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error2);
              }
            }
          } else if (node.tag === HostText) {
            if (hostSubtreeRoot === null)
              try {
                var _instance3 = node.stateNode;
                isHidden ? hideTextInstance(_instance3) : unhideTextInstance(_instance3, node.memoizedProps);
              } catch (error2) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error2);
              }
          } else if (!((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork)) {
            if (node.child !== null) {
              node.child.return = node, node = node.child;
              continue;
            }
          }
          if (node === finishedWork)
            return;
          for (; node.sibling === null; ) {
            if (node.return === null || node.return === finishedWork)
              return;
            hostSubtreeRoot === node && (hostSubtreeRoot = null), node = node.return;
          }
          hostSubtreeRoot === node && (hostSubtreeRoot = null), node.sibling.return = node.return, node = node.sibling;
        }
      }
      function commitAttachRef(finishedWork) {
        var ref = finishedWork.ref;
        if (ref !== null) {
          var instance = finishedWork.stateNode, instanceToUse;
          switch (finishedWork.tag) {
            case HostComponent:
              instanceToUse = instance;
              break;
            default:
              instanceToUse = instance;
          }
          if (typeof ref == "function") {
            var retVal;
            if (finishedWork.mode & ProfileMode)
              try {
                startLayoutEffectTimer(), retVal = ref(instanceToUse);
              } finally {
                recordLayoutEffectDuration(finishedWork);
              }
            else
              retVal = ref(instanceToUse);
            typeof retVal == "function" && error("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(finishedWork));
          } else
            ref.hasOwnProperty("current") || error("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", getComponentNameFromFiber(finishedWork)), ref.current = instanceToUse;
        }
      }
      function detachFiberMutation(fiber) {
        var alternate = fiber.alternate;
        alternate !== null && (alternate.return = null), fiber.return = null;
      }
      function detachFiberAfterEffects(fiber) {
        var alternate = fiber.alternate;
        alternate !== null && (fiber.alternate = null, detachFiberAfterEffects(alternate));
        {
          if (fiber.child = null, fiber.deletions = null, fiber.sibling = null, fiber.tag === HostComponent) {
            var hostInstance = fiber.stateNode;
            hostInstance !== null && detachDeletedInstance(hostInstance);
          }
          fiber.stateNode = null, fiber._debugOwner = null, fiber.return = null, fiber.dependencies = null, fiber.memoizedProps = null, fiber.memoizedState = null, fiber.pendingProps = null, fiber.stateNode = null, fiber.updateQueue = null;
        }
      }
      function getHostParentFiber(fiber) {
        for (var parent = fiber.return; parent !== null; ) {
          if (isHostParent(parent))
            return parent;
          parent = parent.return;
        }
        throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
      }
      function isHostParent(fiber) {
        return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
      }
      function getHostSibling(fiber) {
        var node = fiber;
        siblings:
          for (; ; ) {
            for (; node.sibling === null; ) {
              if (node.return === null || isHostParent(node.return))
                return null;
              node = node.return;
            }
            for (node.sibling.return = node.return, node = node.sibling; node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment; ) {
              if (node.flags & Placement || node.child === null || node.tag === HostPortal)
                continue siblings;
              node.child.return = node, node = node.child;
            }
            if (!(node.flags & Placement))
              return node.stateNode;
          }
      }
      function commitPlacement(finishedWork) {
        var parentFiber = getHostParentFiber(finishedWork);
        switch (parentFiber.tag) {
          case HostComponent: {
            var parent = parentFiber.stateNode;
            parentFiber.flags & ContentReset && (resetTextContent(parent), parentFiber.flags &= ~ContentReset);
            var before = getHostSibling(finishedWork);
            insertOrAppendPlacementNode(finishedWork, before, parent);
            break;
          }
          case HostRoot:
          case HostPortal: {
            var _parent = parentFiber.stateNode.containerInfo, _before = getHostSibling(finishedWork);
            insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);
            break;
          }
          default:
            throw new Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
        }
      }
      function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
        var tag = node.tag, isHost = tag === HostComponent || tag === HostText;
        if (isHost) {
          var stateNode = node.stateNode;
          before ? insertInContainerBefore(parent, stateNode, before) : appendChildToContainer(parent, stateNode);
        } else if (tag !== HostPortal) {
          var child = node.child;
          if (child !== null) {
            insertOrAppendPlacementNodeIntoContainer(child, before, parent);
            for (var sibling = child.sibling; sibling !== null; )
              insertOrAppendPlacementNodeIntoContainer(sibling, before, parent), sibling = sibling.sibling;
          }
        }
      }
      function insertOrAppendPlacementNode(node, before, parent) {
        var tag = node.tag, isHost = tag === HostComponent || tag === HostText;
        if (isHost) {
          var stateNode = node.stateNode;
          before ? insertBefore(parent, stateNode, before) : appendChild(parent, stateNode);
        } else if (tag !== HostPortal) {
          var child = node.child;
          if (child !== null) {
            insertOrAppendPlacementNode(child, before, parent);
            for (var sibling = child.sibling; sibling !== null; )
              insertOrAppendPlacementNode(sibling, before, parent), sibling = sibling.sibling;
          }
        }
      }
      var hostParent = null, hostParentIsContainer = !1;
      function commitDeletionEffects(root2, returnFiber, deletedFiber) {
        {
          var parent = returnFiber;
          findParent:
            for (; parent !== null; ) {
              switch (parent.tag) {
                case HostComponent: {
                  hostParent = parent.stateNode, hostParentIsContainer = !1;
                  break findParent;
                }
                case HostRoot: {
                  hostParent = parent.stateNode.containerInfo, hostParentIsContainer = !0;
                  break findParent;
                }
                case HostPortal: {
                  hostParent = parent.stateNode.containerInfo, hostParentIsContainer = !0;
                  break findParent;
                }
              }
              parent = parent.return;
            }
          if (hostParent === null)
            throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
          commitDeletionEffectsOnFiber(root2, returnFiber, deletedFiber), hostParent = null, hostParentIsContainer = !1;
        }
        detachFiberMutation(deletedFiber);
      }
      function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {
        for (var child = parent.child; child !== null; )
          commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child), child = child.sibling;
      }
      function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {
        switch (onCommitUnmount(deletedFiber), deletedFiber.tag) {
          case HostComponent:
            offscreenSubtreeWasHidden || safelyDetachRef(deletedFiber, nearestMountedAncestor);
          case HostText: {
            {
              var prevHostParent = hostParent, prevHostParentIsContainer = hostParentIsContainer;
              hostParent = null, recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber), hostParent = prevHostParent, hostParentIsContainer = prevHostParentIsContainer, hostParent !== null && (hostParentIsContainer ? removeChildFromContainer(hostParent, deletedFiber.stateNode) : removeChild(hostParent, deletedFiber.stateNode));
            }
            return;
          }
          case DehydratedFragment: {
            hostParent !== null && (hostParentIsContainer ? clearSuspenseBoundaryFromContainer(hostParent, deletedFiber.stateNode) : clearSuspenseBoundary(hostParent, deletedFiber.stateNode));
            return;
          }
          case HostPortal: {
            {
              var _prevHostParent = hostParent, _prevHostParentIsContainer = hostParentIsContainer;
              hostParent = deletedFiber.stateNode.containerInfo, hostParentIsContainer = !0, recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber), hostParent = _prevHostParent, hostParentIsContainer = _prevHostParentIsContainer;
            }
            return;
          }
          case FunctionComponent:
          case ForwardRef10:
          case MemoComponent:
          case SimpleMemoComponent: {
            if (!offscreenSubtreeWasHidden) {
              var updateQueue = deletedFiber.updateQueue;
              if (updateQueue !== null) {
                var lastEffect = updateQueue.lastEffect;
                if (lastEffect !== null) {
                  var firstEffect = lastEffect.next, effect = firstEffect;
                  do {
                    var _effect = effect, destroy = _effect.destroy, tag = _effect.tag;
                    destroy !== void 0 && ((tag & Insertion) !== NoFlags$1 ? safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy) : (tag & Layout4) !== NoFlags$1 && (markComponentLayoutEffectUnmountStarted(deletedFiber), deletedFiber.mode & ProfileMode ? (startLayoutEffectTimer(), safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy), recordLayoutEffectDuration(deletedFiber)) : safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy), markComponentLayoutEffectUnmountStopped())), effect = effect.next;
                  } while (effect !== firstEffect);
                }
              }
            }
            recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
            return;
          }
          case ClassComponent: {
            if (!offscreenSubtreeWasHidden) {
              safelyDetachRef(deletedFiber, nearestMountedAncestor);
              var instance = deletedFiber.stateNode;
              typeof instance.componentWillUnmount == "function" && safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, instance);
            }
            recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
            return;
          }
          case ScopeComponent: {
            recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
            return;
          }
          case OffscreenComponent: {
            if (
              // TODO: Remove this dead flag
              deletedFiber.mode & ConcurrentMode
            ) {
              var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
              offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || deletedFiber.memoizedState !== null, recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber), offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
            } else
              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
            break;
          }
          default: {
            recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
            return;
          }
        }
      }
      function commitSuspenseCallback(finishedWork) {
        var newState = finishedWork.memoizedState;
      }
      function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
        var newState = finishedWork.memoizedState;
        if (newState === null) {
          var current2 = finishedWork.alternate;
          if (current2 !== null) {
            var prevState = current2.memoizedState;
            if (prevState !== null) {
              var suspenseInstance = prevState.dehydrated;
              suspenseInstance !== null && commitHydratedSuspenseInstance(suspenseInstance);
            }
          }
        }
      }
      function attachSuspenseRetryListeners(finishedWork) {
        var wakeables = finishedWork.updateQueue;
        if (wakeables !== null) {
          finishedWork.updateQueue = null;
          var retryCache = finishedWork.stateNode;
          retryCache === null && (retryCache = finishedWork.stateNode = new PossiblyWeakSet()), wakeables.forEach(function(wakeable) {
            var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
            if (!retryCache.has(wakeable)) {
              if (retryCache.add(wakeable), isDevToolsPresent)
                if (inProgressLanes !== null && inProgressRoot !== null)
                  restorePendingUpdaters(inProgressRoot, inProgressLanes);
                else
                  throw Error("Expected finished root and lanes to be set. This is a bug in React.");
              wakeable.then(retry, retry);
            }
          });
        }
      }
      function commitMutationEffects(root2, finishedWork, committedLanes) {
        inProgressLanes = committedLanes, inProgressRoot = root2, setCurrentFiber(finishedWork), commitMutationEffectsOnFiber(finishedWork, root2), setCurrentFiber(finishedWork), inProgressLanes = null, inProgressRoot = null;
      }
      function recursivelyTraverseMutationEffects(root2, parentFiber, lanes) {
        var deletions = parentFiber.deletions;
        if (deletions !== null)
          for (var i7 = 0; i7 < deletions.length; i7++) {
            var childToDelete = deletions[i7];
            try {
              commitDeletionEffects(root2, parentFiber, childToDelete);
            } catch (error2) {
              captureCommitPhaseError(childToDelete, parentFiber, error2);
            }
          }
        var prevDebugFiber = getCurrentFiber();
        if (parentFiber.subtreeFlags & MutationMask)
          for (var child = parentFiber.child; child !== null; )
            setCurrentFiber(child), commitMutationEffectsOnFiber(child, root2), child = child.sibling;
        setCurrentFiber(prevDebugFiber);
      }
      function commitMutationEffectsOnFiber(finishedWork, root2, lanes) {
        var current2 = finishedWork.alternate, flags2 = finishedWork.flags;
        switch (finishedWork.tag) {
          case FunctionComponent:
          case ForwardRef10:
          case MemoComponent:
          case SimpleMemoComponent: {
            if (recursivelyTraverseMutationEffects(root2, finishedWork), commitReconciliationEffects(finishedWork), flags2 & Update) {
              try {
                commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return), commitHookEffectListMount(Insertion | HasEffect, finishedWork);
              } catch (error2) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error2);
              }
              if (finishedWork.mode & ProfileMode) {
                try {
                  startLayoutEffectTimer(), commitHookEffectListUnmount(Layout4 | HasEffect, finishedWork, finishedWork.return);
                } catch (error2) {
                  captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                }
                recordLayoutEffectDuration(finishedWork);
              } else
                try {
                  commitHookEffectListUnmount(Layout4 | HasEffect, finishedWork, finishedWork.return);
                } catch (error2) {
                  captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                }
            }
            return;
          }
          case ClassComponent: {
            recursivelyTraverseMutationEffects(root2, finishedWork), commitReconciliationEffects(finishedWork), flags2 & Ref && current2 !== null && safelyDetachRef(current2, current2.return);
            return;
          }
          case HostComponent: {
            recursivelyTraverseMutationEffects(root2, finishedWork), commitReconciliationEffects(finishedWork), flags2 & Ref && current2 !== null && safelyDetachRef(current2, current2.return);
            {
              if (finishedWork.flags & ContentReset) {
                var instance = finishedWork.stateNode;
                try {
                  resetTextContent(instance);
                } catch (error2) {
                  captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                }
              }
              if (flags2 & Update) {
                var _instance4 = finishedWork.stateNode;
                if (_instance4 != null) {
                  var newProps = finishedWork.memoizedProps, oldProps = current2 !== null ? current2.memoizedProps : newProps, type = finishedWork.type, updatePayload = finishedWork.updateQueue;
                  if (finishedWork.updateQueue = null, updatePayload !== null)
                    try {
                      commitUpdate(_instance4, updatePayload, type, oldProps, newProps, finishedWork);
                    } catch (error2) {
                      captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                    }
                }
              }
            }
            return;
          }
          case HostText: {
            if (recursivelyTraverseMutationEffects(root2, finishedWork), commitReconciliationEffects(finishedWork), flags2 & Update) {
              if (finishedWork.stateNode === null)
                throw new Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
              var textInstance = finishedWork.stateNode, newText = finishedWork.memoizedProps, oldText = current2 !== null ? current2.memoizedProps : newText;
              try {
                commitTextUpdate(textInstance, oldText, newText);
              } catch (error2) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error2);
              }
            }
            return;
          }
          case HostRoot: {
            if (recursivelyTraverseMutationEffects(root2, finishedWork), commitReconciliationEffects(finishedWork), flags2 & Update && current2 !== null) {
              var prevRootState = current2.memoizedState;
              if (prevRootState.isDehydrated)
                try {
                  commitHydratedContainer(root2.containerInfo);
                } catch (error2) {
                  captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                }
            }
            return;
          }
          case HostPortal: {
            recursivelyTraverseMutationEffects(root2, finishedWork), commitReconciliationEffects(finishedWork);
            return;
          }
          case SuspenseComponent: {
            recursivelyTraverseMutationEffects(root2, finishedWork), commitReconciliationEffects(finishedWork);
            var offscreenFiber = finishedWork.child;
            if (offscreenFiber.flags & Visibility) {
              var offscreenInstance = offscreenFiber.stateNode, newState = offscreenFiber.memoizedState, isHidden = newState !== null;
              if (offscreenInstance.isHidden = isHidden, isHidden) {
                var wasHidden = offscreenFiber.alternate !== null && offscreenFiber.alternate.memoizedState !== null;
                wasHidden || markCommitTimeOfFallback();
              }
            }
            if (flags2 & Update) {
              try {
                commitSuspenseCallback(finishedWork);
              } catch (error2) {
                captureCommitPhaseError(finishedWork, finishedWork.return, error2);
              }
              attachSuspenseRetryListeners(finishedWork);
            }
            return;
          }
          case OffscreenComponent: {
            var _wasHidden = current2 !== null && current2.memoizedState !== null;
            if (
              // TODO: Remove this dead flag
              finishedWork.mode & ConcurrentMode
            ) {
              var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
              offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || _wasHidden, recursivelyTraverseMutationEffects(root2, finishedWork), offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
            } else
              recursivelyTraverseMutationEffects(root2, finishedWork);
            if (commitReconciliationEffects(finishedWork), flags2 & Visibility) {
              var _offscreenInstance = finishedWork.stateNode, _newState = finishedWork.memoizedState, _isHidden = _newState !== null, offscreenBoundary = finishedWork;
              if (_offscreenInstance.isHidden = _isHidden, _isHidden && !_wasHidden && (offscreenBoundary.mode & ConcurrentMode) !== NoMode) {
                nextEffect = offscreenBoundary;
                for (var offscreenChild = offscreenBoundary.child; offscreenChild !== null; )
                  nextEffect = offscreenChild, disappearLayoutEffects_begin(offscreenChild), offscreenChild = offscreenChild.sibling;
              }
              hideOrUnhideAllChildren(offscreenBoundary, _isHidden);
            }
            return;
          }
          case SuspenseListComponent: {
            recursivelyTraverseMutationEffects(root2, finishedWork), commitReconciliationEffects(finishedWork), flags2 & Update && attachSuspenseRetryListeners(finishedWork);
            return;
          }
          case ScopeComponent:
            return;
          default: {
            recursivelyTraverseMutationEffects(root2, finishedWork), commitReconciliationEffects(finishedWork);
            return;
          }
        }
      }
      function commitReconciliationEffects(finishedWork) {
        var flags2 = finishedWork.flags;
        if (flags2 & Placement) {
          try {
            commitPlacement(finishedWork);
          } catch (error2) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error2);
          }
          finishedWork.flags &= ~Placement;
        }
        flags2 & Hydrating && (finishedWork.flags &= ~Hydrating);
      }
      function commitLayoutEffects(finishedWork, root2, committedLanes) {
        inProgressLanes = committedLanes, inProgressRoot = root2, nextEffect = finishedWork, commitLayoutEffects_begin(finishedWork, root2, committedLanes), inProgressLanes = null, inProgressRoot = null;
      }
      function commitLayoutEffects_begin(subtreeRoot, root2, committedLanes) {
        for (var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode; nextEffect !== null; ) {
          var fiber = nextEffect, firstChild = fiber.child;
          if (fiber.tag === OffscreenComponent && isModernRoot) {
            var isHidden = fiber.memoizedState !== null, newOffscreenSubtreeIsHidden = isHidden || offscreenSubtreeIsHidden;
            if (newOffscreenSubtreeIsHidden) {
              commitLayoutMountEffects_complete(subtreeRoot, root2, committedLanes);
              continue;
            } else {
              var current2 = fiber.alternate, wasHidden = current2 !== null && current2.memoizedState !== null, newOffscreenSubtreeWasHidden = wasHidden || offscreenSubtreeWasHidden, prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden, prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
              offscreenSubtreeIsHidden = newOffscreenSubtreeIsHidden, offscreenSubtreeWasHidden = newOffscreenSubtreeWasHidden, offscreenSubtreeWasHidden && !prevOffscreenSubtreeWasHidden && (nextEffect = fiber, reappearLayoutEffects_begin(fiber));
              for (var child = firstChild; child !== null; )
                nextEffect = child, commitLayoutEffects_begin(
                  child,
                  // New root; bubble back up to here and stop.
                  root2,
                  committedLanes
                ), child = child.sibling;
              nextEffect = fiber, offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden, offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden, commitLayoutMountEffects_complete(subtreeRoot, root2, committedLanes);
              continue;
            }
          }
          (fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null ? (firstChild.return = fiber, nextEffect = firstChild) : commitLayoutMountEffects_complete(subtreeRoot, root2, committedLanes);
        }
      }
      function commitLayoutMountEffects_complete(subtreeRoot, root2, committedLanes) {
        for (; nextEffect !== null; ) {
          var fiber = nextEffect;
          if ((fiber.flags & LayoutMask) !== NoFlags) {
            var current2 = fiber.alternate;
            setCurrentFiber(fiber);
            try {
              commitLayoutEffectOnFiber(root2, current2, fiber, committedLanes);
            } catch (error2) {
              captureCommitPhaseError(fiber, fiber.return, error2);
            }
            resetCurrentFiber();
          }
          if (fiber === subtreeRoot) {
            nextEffect = null;
            return;
          }
          var sibling = fiber.sibling;
          if (sibling !== null) {
            sibling.return = fiber.return, nextEffect = sibling;
            return;
          }
          nextEffect = fiber.return;
        }
      }
      function disappearLayoutEffects_begin(subtreeRoot) {
        for (; nextEffect !== null; ) {
          var fiber = nextEffect, firstChild = fiber.child;
          switch (fiber.tag) {
            case FunctionComponent:
            case ForwardRef10:
            case MemoComponent:
            case SimpleMemoComponent: {
              if (fiber.mode & ProfileMode)
                try {
                  startLayoutEffectTimer(), commitHookEffectListUnmount(Layout4, fiber, fiber.return);
                } finally {
                  recordLayoutEffectDuration(fiber);
                }
              else
                commitHookEffectListUnmount(Layout4, fiber, fiber.return);
              break;
            }
            case ClassComponent: {
              safelyDetachRef(fiber, fiber.return);
              var instance = fiber.stateNode;
              typeof instance.componentWillUnmount == "function" && safelyCallComponentWillUnmount(fiber, fiber.return, instance);
              break;
            }
            case HostComponent: {
              safelyDetachRef(fiber, fiber.return);
              break;
            }
            case OffscreenComponent: {
              var isHidden = fiber.memoizedState !== null;
              if (isHidden) {
                disappearLayoutEffects_complete(subtreeRoot);
                continue;
              }
              break;
            }
          }
          firstChild !== null ? (firstChild.return = fiber, nextEffect = firstChild) : disappearLayoutEffects_complete(subtreeRoot);
        }
      }
      function disappearLayoutEffects_complete(subtreeRoot) {
        for (; nextEffect !== null; ) {
          var fiber = nextEffect;
          if (fiber === subtreeRoot) {
            nextEffect = null;
            return;
          }
          var sibling = fiber.sibling;
          if (sibling !== null) {
            sibling.return = fiber.return, nextEffect = sibling;
            return;
          }
          nextEffect = fiber.return;
        }
      }
      function reappearLayoutEffects_begin(subtreeRoot) {
        for (; nextEffect !== null; ) {
          var fiber = nextEffect, firstChild = fiber.child;
          if (fiber.tag === OffscreenComponent) {
            var isHidden = fiber.memoizedState !== null;
            if (isHidden) {
              reappearLayoutEffects_complete(subtreeRoot);
              continue;
            }
          }
          firstChild !== null ? (firstChild.return = fiber, nextEffect = firstChild) : reappearLayoutEffects_complete(subtreeRoot);
        }
      }
      function reappearLayoutEffects_complete(subtreeRoot) {
        for (; nextEffect !== null; ) {
          var fiber = nextEffect;
          setCurrentFiber(fiber);
          try {
            reappearLayoutEffectsOnFiber(fiber);
          } catch (error2) {
            captureCommitPhaseError(fiber, fiber.return, error2);
          }
          if (resetCurrentFiber(), fiber === subtreeRoot) {
            nextEffect = null;
            return;
          }
          var sibling = fiber.sibling;
          if (sibling !== null) {
            sibling.return = fiber.return, nextEffect = sibling;
            return;
          }
          nextEffect = fiber.return;
        }
      }
      function commitPassiveMountEffects(root2, finishedWork, committedLanes, committedTransitions) {
        nextEffect = finishedWork, commitPassiveMountEffects_begin(finishedWork, root2, committedLanes, committedTransitions);
      }
      function commitPassiveMountEffects_begin(subtreeRoot, root2, committedLanes, committedTransitions) {
        for (; nextEffect !== null; ) {
          var fiber = nextEffect, firstChild = fiber.child;
          (fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null ? (firstChild.return = fiber, nextEffect = firstChild) : commitPassiveMountEffects_complete(subtreeRoot, root2, committedLanes, committedTransitions);
        }
      }
      function commitPassiveMountEffects_complete(subtreeRoot, root2, committedLanes, committedTransitions) {
        for (; nextEffect !== null; ) {
          var fiber = nextEffect;
          if ((fiber.flags & Passive) !== NoFlags) {
            setCurrentFiber(fiber);
            try {
              commitPassiveMountOnFiber(root2, fiber, committedLanes, committedTransitions);
            } catch (error2) {
              captureCommitPhaseError(fiber, fiber.return, error2);
            }
            resetCurrentFiber();
          }
          if (fiber === subtreeRoot) {
            nextEffect = null;
            return;
          }
          var sibling = fiber.sibling;
          if (sibling !== null) {
            sibling.return = fiber.return, nextEffect = sibling;
            return;
          }
          nextEffect = fiber.return;
        }
      }
      function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {
        switch (finishedWork.tag) {
          case FunctionComponent:
          case ForwardRef10:
          case SimpleMemoComponent: {
            if (finishedWork.mode & ProfileMode) {
              startPassiveEffectTimer();
              try {
                commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
              } finally {
                recordPassiveEffectDuration(finishedWork);
              }
            } else
              commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
            break;
          }
        }
      }
      function commitPassiveUnmountEffects(firstChild) {
        nextEffect = firstChild, commitPassiveUnmountEffects_begin();
      }
      function commitPassiveUnmountEffects_begin() {
        for (; nextEffect !== null; ) {
          var fiber = nextEffect, child = fiber.child;
          if ((nextEffect.flags & ChildDeletion) !== NoFlags) {
            var deletions = fiber.deletions;
            if (deletions !== null) {
              for (var i7 = 0; i7 < deletions.length; i7++) {
                var fiberToDelete = deletions[i7];
                nextEffect = fiberToDelete, commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete, fiber);
              }
              {
                var previousFiber = fiber.alternate;
                if (previousFiber !== null) {
                  var detachedChild = previousFiber.child;
                  if (detachedChild !== null) {
                    previousFiber.child = null;
                    do {
                      var detachedSibling = detachedChild.sibling;
                      detachedChild.sibling = null, detachedChild = detachedSibling;
                    } while (detachedChild !== null);
                  }
                }
              }
              nextEffect = fiber;
            }
          }
          (fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null ? (child.return = fiber, nextEffect = child) : commitPassiveUnmountEffects_complete();
        }
      }
      function commitPassiveUnmountEffects_complete() {
        for (; nextEffect !== null; ) {
          var fiber = nextEffect;
          (fiber.flags & Passive) !== NoFlags && (setCurrentFiber(fiber), commitPassiveUnmountOnFiber(fiber), resetCurrentFiber());
          var sibling = fiber.sibling;
          if (sibling !== null) {
            sibling.return = fiber.return, nextEffect = sibling;
            return;
          }
          nextEffect = fiber.return;
        }
      }
      function commitPassiveUnmountOnFiber(finishedWork) {
        switch (finishedWork.tag) {
          case FunctionComponent:
          case ForwardRef10:
          case SimpleMemoComponent: {
            finishedWork.mode & ProfileMode ? (startPassiveEffectTimer(), commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return), recordPassiveEffectDuration(finishedWork)) : commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
            break;
          }
        }
      }
      function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {
        for (; nextEffect !== null; ) {
          var fiber = nextEffect;
          setCurrentFiber(fiber), commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor), resetCurrentFiber();
          var child = fiber.child;
          child !== null ? (child.return = fiber, nextEffect = child) : commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);
        }
      }
      function commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot) {
        for (; nextEffect !== null; ) {
          var fiber = nextEffect, sibling = fiber.sibling, returnFiber = fiber.return;
          if (detachFiberAfterEffects(fiber), fiber === deletedSubtreeRoot) {
            nextEffect = null;
            return;
          }
          if (sibling !== null) {
            sibling.return = returnFiber, nextEffect = sibling;
            return;
          }
          nextEffect = returnFiber;
        }
      }
      function commitPassiveUnmountInsideDeletedTreeOnFiber(current2, nearestMountedAncestor) {
        switch (current2.tag) {
          case FunctionComponent:
          case ForwardRef10:
          case SimpleMemoComponent: {
            current2.mode & ProfileMode ? (startPassiveEffectTimer(), commitHookEffectListUnmount(Passive$1, current2, nearestMountedAncestor), recordPassiveEffectDuration(current2)) : commitHookEffectListUnmount(Passive$1, current2, nearestMountedAncestor);
            break;
          }
        }
      }
      function invokeLayoutEffectMountInDEV(fiber) {
        switch (fiber.tag) {
          case FunctionComponent:
          case ForwardRef10:
          case SimpleMemoComponent: {
            try {
              commitHookEffectListMount(Layout4 | HasEffect, fiber);
            } catch (error2) {
              captureCommitPhaseError(fiber, fiber.return, error2);
            }
            break;
          }
          case ClassComponent: {
            var instance = fiber.stateNode;
            try {
              instance.componentDidMount();
            } catch (error2) {
              captureCommitPhaseError(fiber, fiber.return, error2);
            }
            break;
          }
        }
      }
      function invokePassiveEffectMountInDEV(fiber) {
        switch (fiber.tag) {
          case FunctionComponent:
          case ForwardRef10:
          case SimpleMemoComponent: {
            try {
              commitHookEffectListMount(Passive$1 | HasEffect, fiber);
            } catch (error2) {
              captureCommitPhaseError(fiber, fiber.return, error2);
            }
            break;
          }
        }
      }
      function invokeLayoutEffectUnmountInDEV(fiber) {
        switch (fiber.tag) {
          case FunctionComponent:
          case ForwardRef10:
          case SimpleMemoComponent: {
            try {
              commitHookEffectListUnmount(Layout4 | HasEffect, fiber, fiber.return);
            } catch (error2) {
              captureCommitPhaseError(fiber, fiber.return, error2);
            }
            break;
          }
          case ClassComponent: {
            var instance = fiber.stateNode;
            typeof instance.componentWillUnmount == "function" && safelyCallComponentWillUnmount(fiber, fiber.return, instance);
            break;
          }
        }
      }
      function invokePassiveEffectUnmountInDEV(fiber) {
        switch (fiber.tag) {
          case FunctionComponent:
          case ForwardRef10:
          case SimpleMemoComponent:
            try {
              commitHookEffectListUnmount(Passive$1 | HasEffect, fiber, fiber.return);
            } catch (error2) {
              captureCommitPhaseError(fiber, fiber.return, error2);
            }
        }
      }
      var COMPONENT_TYPE = 0, HAS_PSEUDO_CLASS_TYPE = 1, ROLE_TYPE = 2, TEST_NAME_TYPE = 3, TEXT_TYPE = 4;
      if (typeof Symbol == "function" && Symbol.for) {
        var symbolFor = Symbol.for;
        COMPONENT_TYPE = symbolFor("selector.component"), HAS_PSEUDO_CLASS_TYPE = symbolFor("selector.has_pseudo_class"), ROLE_TYPE = symbolFor("selector.role"), TEST_NAME_TYPE = symbolFor("selector.test_id"), TEXT_TYPE = symbolFor("selector.text");
      }
      var commitHooks = [];
      function onCommitRoot$1() {
        commitHooks.forEach(function(commitHook) {
          return commitHook();
        });
      }
      var ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;
      function isLegacyActEnvironment(fiber) {
        {
          var isReactActEnvironmentGlobal = (
            // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
            typeof IS_REACT_ACT_ENVIRONMENT < "u" ? IS_REACT_ACT_ENVIRONMENT : void 0
          ), jestIsDefined = typeof jest < "u";
          return jestIsDefined && isReactActEnvironmentGlobal !== !1;
        }
      }
      function isConcurrentActEnvironment() {
        {
          var isReactActEnvironmentGlobal = (
            // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
            typeof IS_REACT_ACT_ENVIRONMENT < "u" ? IS_REACT_ACT_ENVIRONMENT : void 0
          );
          return !isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null && error("The current testing environment is not configured to support act(...)"), isReactActEnvironmentGlobal;
        }
      }
      var ceil = Math.ceil, ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner, ReactCurrentBatchConfig$3 = ReactSharedInternals.ReactCurrentBatchConfig, ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue, NoContext = (
        /*             */
        0
      ), BatchedContext = (
        /*               */
        1
      ), RenderContext = (
        /*                */
        2
      ), CommitContext = (
        /*                */
        4
      ), RootInProgress = 0, RootFatalErrored = 1, RootErrored = 2, RootSuspended = 3, RootSuspendedWithDelay = 4, RootCompleted = 5, RootDidNotComplete = 6, executionContext = NoContext, workInProgressRoot = null, workInProgress = null, workInProgressRootRenderLanes = NoLanes, subtreeRenderLanes = NoLanes, subtreeRenderLanesCursor = createCursor(NoLanes), workInProgressRootExitStatus = RootInProgress, workInProgressRootFatalError = null, workInProgressRootIncludedLanes = NoLanes, workInProgressRootSkippedLanes = NoLanes, workInProgressRootInterleavedUpdatedLanes = NoLanes, workInProgressRootPingedLanes = NoLanes, workInProgressRootConcurrentErrors = null, workInProgressRootRecoverableErrors = null, globalMostRecentFallbackTime = 0, FALLBACK_THROTTLE_MS = 500, workInProgressRootRenderTargetTime = 1 / 0, RENDER_TIMEOUT_MS = 500, workInProgressTransitions = null;
      function resetRenderTimer() {
        workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;
      }
      function getRenderTargetTime() {
        return workInProgressRootRenderTargetTime;
      }
      var hasUncaughtError = !1, firstUncaughtError = null, legacyErrorBoundariesThatAlreadyFailed = null, rootDoesHavePassiveEffects = !1, rootWithPendingPassiveEffects = null, pendingPassiveEffectsLanes = NoLanes, pendingPassiveProfilerEffects = [], pendingPassiveTransitions = null, NESTED_UPDATE_LIMIT = 50, nestedUpdateCount = 0, rootWithNestedUpdates = null, isFlushingPassiveEffects = !1, didScheduleUpdateDuringPassiveEffects = !1, NESTED_PASSIVE_UPDATE_LIMIT = 50, nestedPassiveUpdateCount = 0, rootWithPassiveNestedUpdates = null, currentEventTime = NoTimestamp, currentEventTransitionLane = NoLanes, isRunningInsertionEffect = !1;
      function getWorkInProgressRoot() {
        return workInProgressRoot;
      }
      function requestEventTime() {
        return (executionContext & (RenderContext | CommitContext)) !== NoContext ? now() : (currentEventTime !== NoTimestamp || (currentEventTime = now()), currentEventTime);
      }
      function requestUpdateLane(fiber) {
        var mode = fiber.mode;
        if ((mode & ConcurrentMode) === NoMode)
          return SyncLane;
        if ((executionContext & RenderContext) !== NoContext && workInProgressRootRenderLanes !== NoLanes)
          return pickArbitraryLane(workInProgressRootRenderLanes);
        var isTransition = requestCurrentTransition() !== NoTransition;
        if (isTransition) {
          if (ReactCurrentBatchConfig$3.transition !== null) {
            var transition = ReactCurrentBatchConfig$3.transition;
            transition._updatedFibers || (transition._updatedFibers = /* @__PURE__ */ new Set()), transition._updatedFibers.add(fiber);
          }
          return currentEventTransitionLane === NoLane && (currentEventTransitionLane = claimNextTransitionLane()), currentEventTransitionLane;
        }
        var updateLane = getCurrentUpdatePriority();
        if (updateLane !== NoLane)
          return updateLane;
        var eventLane = getCurrentEventPriority();
        return eventLane;
      }
      function requestRetryLane(fiber) {
        var mode = fiber.mode;
        return (mode & ConcurrentMode) === NoMode ? SyncLane : claimNextRetryLane();
      }
      function scheduleUpdateOnFiber(root2, fiber, lane, eventTime) {
        checkForNestedUpdates(), isRunningInsertionEffect && error("useInsertionEffect must not schedule updates."), isFlushingPassiveEffects && (didScheduleUpdateDuringPassiveEffects = !0), markRootUpdated(root2, lane, eventTime), (executionContext & RenderContext) !== NoLanes && root2 === workInProgressRoot ? warnAboutRenderPhaseUpdatesInDEV(fiber) : (isDevToolsPresent && addFiberToLanesMap(root2, fiber, lane), warnIfUpdatesNotWrappedWithActDEV(fiber), root2 === workInProgressRoot && ((executionContext & RenderContext) === NoContext && (workInProgressRootInterleavedUpdatedLanes = mergeLanes(workInProgressRootInterleavedUpdatedLanes, lane)), workInProgressRootExitStatus === RootSuspendedWithDelay && markRootSuspended$1(root2, workInProgressRootRenderLanes)), ensureRootIsScheduled(root2, eventTime), lane === SyncLane && executionContext === NoContext && (fiber.mode & ConcurrentMode) === NoMode && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
        !ReactCurrentActQueue$1.isBatchingLegacy && (resetRenderTimer(), flushSyncCallbacksOnlyInLegacyMode()));
      }
      function scheduleInitialHydrationOnRoot(root2, lane, eventTime) {
        var current2 = root2.current;
        current2.lanes = lane, markRootUpdated(root2, lane, eventTime), ensureRootIsScheduled(root2, eventTime);
      }
      function isUnsafeClassRenderPhaseUpdate(fiber) {
        return (
          // TODO: Remove outdated deferRenderPhaseUpdateToNextBatch experiment. We
          // decided not to enable it.
          (executionContext & RenderContext) !== NoContext
        );
      }
      function ensureRootIsScheduled(root2, currentTime) {
        var existingCallbackNode = root2.callbackNode;
        markStarvedLanesAsExpired(root2, currentTime);
        var nextLanes = getNextLanes(root2, root2 === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
        if (nextLanes === NoLanes) {
          existingCallbackNode !== null && cancelCallback$1(existingCallbackNode), root2.callbackNode = null, root2.callbackPriority = NoLane;
          return;
        }
        var newCallbackPriority = getHighestPriorityLane(nextLanes), existingCallbackPriority = root2.callbackPriority;
        if (existingCallbackPriority === newCallbackPriority && // Special case related to `act`. If the currently scheduled task is a
        // Scheduler task, rather than an `act` task, cancel it and re-scheduled
        // on the `act` queue.
        !(ReactCurrentActQueue$1.current !== null && existingCallbackNode !== fakeActCallbackNode)) {
          existingCallbackNode == null && existingCallbackPriority !== SyncLane && error("Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.");
          return;
        }
        existingCallbackNode != null && cancelCallback$1(existingCallbackNode);
        var newCallbackNode;
        if (newCallbackPriority === SyncLane)
          root2.tag === LegacyRoot ? (ReactCurrentActQueue$1.isBatchingLegacy !== null && (ReactCurrentActQueue$1.didScheduleLegacyUpdate = !0), scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root2))) : scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root2)), ReactCurrentActQueue$1.current !== null ? ReactCurrentActQueue$1.current.push(flushSyncCallbacks) : scheduleMicrotask(function() {
            (executionContext & (RenderContext | CommitContext)) === NoContext && flushSyncCallbacks();
          }), newCallbackNode = null;
        else {
          var schedulerPriorityLevel;
          switch (lanesToEventPriority(nextLanes)) {
            case DiscreteEventPriority:
              schedulerPriorityLevel = ImmediatePriority;
              break;
            case ContinuousEventPriority:
              schedulerPriorityLevel = UserBlockingPriority;
              break;
            case DefaultEventPriority:
              schedulerPriorityLevel = NormalPriority;
              break;
            case IdleEventPriority:
              schedulerPriorityLevel = IdlePriority;
              break;
            default:
              schedulerPriorityLevel = NormalPriority;
              break;
          }
          newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root2));
        }
        root2.callbackPriority = newCallbackPriority, root2.callbackNode = newCallbackNode;
      }
      function performConcurrentWorkOnRoot(root2, didTimeout) {
        if (resetNestedUpdateFlag(), currentEventTime = NoTimestamp, currentEventTransitionLane = NoLanes, (executionContext & (RenderContext | CommitContext)) !== NoContext)
          throw new Error("Should not already be working.");
        var originalCallbackNode = root2.callbackNode, didFlushPassiveEffects = flushPassiveEffects();
        if (didFlushPassiveEffects && root2.callbackNode !== originalCallbackNode)
          return null;
        var lanes = getNextLanes(root2, root2 === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
        if (lanes === NoLanes)
          return null;
        var shouldTimeSlice = !includesBlockingLane(root2, lanes) && !includesExpiredLane(root2, lanes) && !didTimeout, exitStatus = shouldTimeSlice ? renderRootConcurrent(root2, lanes) : renderRootSync(root2, lanes);
        if (exitStatus !== RootInProgress) {
          if (exitStatus === RootErrored) {
            var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root2);
            errorRetryLanes !== NoLanes && (lanes = errorRetryLanes, exitStatus = recoverFromConcurrentError(root2, errorRetryLanes));
          }
          if (exitStatus === RootFatalErrored) {
            var fatalError = workInProgressRootFatalError;
            throw prepareFreshStack(root2, NoLanes), markRootSuspended$1(root2, lanes), ensureRootIsScheduled(root2, now()), fatalError;
          }
          if (exitStatus === RootDidNotComplete)
            markRootSuspended$1(root2, lanes);
          else {
            var renderWasConcurrent = !includesBlockingLane(root2, lanes), finishedWork = root2.current.alternate;
            if (renderWasConcurrent && !isRenderConsistentWithExternalStores(finishedWork)) {
              if (exitStatus = renderRootSync(root2, lanes), exitStatus === RootErrored) {
                var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root2);
                _errorRetryLanes !== NoLanes && (lanes = _errorRetryLanes, exitStatus = recoverFromConcurrentError(root2, _errorRetryLanes));
              }
              if (exitStatus === RootFatalErrored) {
                var _fatalError = workInProgressRootFatalError;
                throw prepareFreshStack(root2, NoLanes), markRootSuspended$1(root2, lanes), ensureRootIsScheduled(root2, now()), _fatalError;
              }
            }
            root2.finishedWork = finishedWork, root2.finishedLanes = lanes, finishConcurrentRender(root2, exitStatus, lanes);
          }
        }
        return ensureRootIsScheduled(root2, now()), root2.callbackNode === originalCallbackNode ? performConcurrentWorkOnRoot.bind(null, root2) : null;
      }
      function recoverFromConcurrentError(root2, errorRetryLanes) {
        var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;
        if (isRootDehydrated(root2)) {
          var rootWorkInProgress = prepareFreshStack(root2, errorRetryLanes);
          rootWorkInProgress.flags |= ForceClientRender, errorHydratingContainer(root2.containerInfo);
        }
        var exitStatus = renderRootSync(root2, errorRetryLanes);
        if (exitStatus !== RootErrored) {
          var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;
          workInProgressRootRecoverableErrors = errorsFromFirstAttempt, errorsFromSecondAttempt !== null && queueRecoverableErrors(errorsFromSecondAttempt);
        }
        return exitStatus;
      }
      function queueRecoverableErrors(errors) {
        workInProgressRootRecoverableErrors === null ? workInProgressRootRecoverableErrors = errors : workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);
      }
      function finishConcurrentRender(root2, exitStatus, lanes) {
        switch (exitStatus) {
          case RootInProgress:
          case RootFatalErrored:
            throw new Error("Root did not complete. This is a bug in React.");
          case RootErrored: {
            commitRoot(root2, workInProgressRootRecoverableErrors, workInProgressTransitions);
            break;
          }
          case RootSuspended: {
            if (markRootSuspended$1(root2, lanes), includesOnlyRetries(lanes) && // do not delay if we're inside an act() scope
            !shouldForceFlushFallbacksInDEV()) {
              var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now();
              if (msUntilTimeout > 10) {
                var nextLanes = getNextLanes(root2, NoLanes);
                if (nextLanes !== NoLanes)
                  break;
                var suspendedLanes = root2.suspendedLanes;
                if (!isSubsetOfLanes(suspendedLanes, lanes)) {
                  var eventTime = requestEventTime();
                  markRootPinged(root2, suspendedLanes);
                  break;
                }
                root2.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root2, workInProgressRootRecoverableErrors, workInProgressTransitions), msUntilTimeout);
                break;
              }
            }
            commitRoot(root2, workInProgressRootRecoverableErrors, workInProgressTransitions);
            break;
          }
          case RootSuspendedWithDelay: {
            if (markRootSuspended$1(root2, lanes), includesOnlyTransitions(lanes))
              break;
            if (!shouldForceFlushFallbacksInDEV()) {
              var mostRecentEventTime = getMostRecentEventTime(root2, lanes), eventTimeMs = mostRecentEventTime, timeElapsedMs = now() - eventTimeMs, _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs;
              if (_msUntilTimeout > 10) {
                root2.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root2, workInProgressRootRecoverableErrors, workInProgressTransitions), _msUntilTimeout);
                break;
              }
            }
            commitRoot(root2, workInProgressRootRecoverableErrors, workInProgressTransitions);
            break;
          }
          case RootCompleted: {
            commitRoot(root2, workInProgressRootRecoverableErrors, workInProgressTransitions);
            break;
          }
          default:
            throw new Error("Unknown root exit status.");
        }
      }
      function isRenderConsistentWithExternalStores(finishedWork) {
        for (var node = finishedWork; ; ) {
          if (node.flags & StoreConsistency) {
            var updateQueue = node.updateQueue;
            if (updateQueue !== null) {
              var checks = updateQueue.stores;
              if (checks !== null)
                for (var i7 = 0; i7 < checks.length; i7++) {
                  var check = checks[i7], getSnapshot = check.getSnapshot, renderedValue = check.value;
                  try {
                    if (!objectIs(getSnapshot(), renderedValue))
                      return !1;
                  } catch {
                    return !1;
                  }
                }
            }
          }
          var child = node.child;
          if (node.subtreeFlags & StoreConsistency && child !== null) {
            child.return = node, node = child;
            continue;
          }
          if (node === finishedWork)
            return !0;
          for (; node.sibling === null; ) {
            if (node.return === null || node.return === finishedWork)
              return !0;
            node = node.return;
          }
          node.sibling.return = node.return, node = node.sibling;
        }
        return !0;
      }
      function markRootSuspended$1(root2, suspendedLanes) {
        suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes), suspendedLanes = removeLanes(suspendedLanes, workInProgressRootInterleavedUpdatedLanes), markRootSuspended(root2, suspendedLanes);
      }
      function performSyncWorkOnRoot(root2) {
        if (syncNestedUpdateFlag(), (executionContext & (RenderContext | CommitContext)) !== NoContext)
          throw new Error("Should not already be working.");
        flushPassiveEffects();
        var lanes = getNextLanes(root2, NoLanes);
        if (!includesSomeLane(lanes, SyncLane))
          return ensureRootIsScheduled(root2, now()), null;
        var exitStatus = renderRootSync(root2, lanes);
        if (root2.tag !== LegacyRoot && exitStatus === RootErrored) {
          var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root2);
          errorRetryLanes !== NoLanes && (lanes = errorRetryLanes, exitStatus = recoverFromConcurrentError(root2, errorRetryLanes));
        }
        if (exitStatus === RootFatalErrored) {
          var fatalError = workInProgressRootFatalError;
          throw prepareFreshStack(root2, NoLanes), markRootSuspended$1(root2, lanes), ensureRootIsScheduled(root2, now()), fatalError;
        }
        if (exitStatus === RootDidNotComplete)
          throw new Error("Root did not complete. This is a bug in React.");
        var finishedWork = root2.current.alternate;
        return root2.finishedWork = finishedWork, root2.finishedLanes = lanes, commitRoot(root2, workInProgressRootRecoverableErrors, workInProgressTransitions), ensureRootIsScheduled(root2, now()), null;
      }
      function flushRoot(root2, lanes) {
        lanes !== NoLanes && (markRootEntangled(root2, mergeLanes(lanes, SyncLane)), ensureRootIsScheduled(root2, now()), (executionContext & (RenderContext | CommitContext)) === NoContext && (resetRenderTimer(), flushSyncCallbacks()));
      }
      function batchedUpdates$1(fn, a13) {
        var prevExecutionContext = executionContext;
        executionContext |= BatchedContext;
        try {
          return fn(a13);
        } finally {
          executionContext = prevExecutionContext, executionContext === NoContext && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
          !ReactCurrentActQueue$1.isBatchingLegacy && (resetRenderTimer(), flushSyncCallbacksOnlyInLegacyMode());
        }
      }
      function discreteUpdates(fn, a13, b6, c13, d12) {
        var previousPriority = getCurrentUpdatePriority(), prevTransition = ReactCurrentBatchConfig$3.transition;
        try {
          return ReactCurrentBatchConfig$3.transition = null, setCurrentUpdatePriority(DiscreteEventPriority), fn(a13, b6, c13, d12);
        } finally {
          setCurrentUpdatePriority(previousPriority), ReactCurrentBatchConfig$3.transition = prevTransition, executionContext === NoContext && resetRenderTimer();
        }
      }
      function flushSync(fn) {
        rootWithPendingPassiveEffects !== null && rootWithPendingPassiveEffects.tag === LegacyRoot && (executionContext & (RenderContext | CommitContext)) === NoContext && flushPassiveEffects();
        var prevExecutionContext = executionContext;
        executionContext |= BatchedContext;
        var prevTransition = ReactCurrentBatchConfig$3.transition, previousPriority = getCurrentUpdatePriority();
        try {
          return ReactCurrentBatchConfig$3.transition = null, setCurrentUpdatePriority(DiscreteEventPriority), fn ? fn() : void 0;
        } finally {
          setCurrentUpdatePriority(previousPriority), ReactCurrentBatchConfig$3.transition = prevTransition, executionContext = prevExecutionContext, (executionContext & (RenderContext | CommitContext)) === NoContext && flushSyncCallbacks();
        }
      }
      function isAlreadyRendering() {
        return (executionContext & (RenderContext | CommitContext)) !== NoContext;
      }
      function pushRenderLanes(fiber, lanes) {
        push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber), subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes), workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);
      }
      function popRenderLanes(fiber) {
        subtreeRenderLanes = subtreeRenderLanesCursor.current, pop(subtreeRenderLanesCursor, fiber);
      }
      function prepareFreshStack(root2, lanes) {
        root2.finishedWork = null, root2.finishedLanes = NoLanes;
        var timeoutHandle = root2.timeoutHandle;
        if (timeoutHandle !== noTimeout && (root2.timeoutHandle = noTimeout, cancelTimeout(timeoutHandle)), workInProgress !== null)
          for (var interruptedWork = workInProgress.return; interruptedWork !== null; ) {
            var current2 = interruptedWork.alternate;
            unwindInterruptedWork(current2, interruptedWork), interruptedWork = interruptedWork.return;
          }
        workInProgressRoot = root2;
        var rootWorkInProgress = createWorkInProgress(root2.current, null);
        return workInProgress = rootWorkInProgress, workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes, workInProgressRootExitStatus = RootInProgress, workInProgressRootFatalError = null, workInProgressRootSkippedLanes = NoLanes, workInProgressRootInterleavedUpdatedLanes = NoLanes, workInProgressRootPingedLanes = NoLanes, workInProgressRootConcurrentErrors = null, workInProgressRootRecoverableErrors = null, finishQueueingConcurrentUpdates(), ReactStrictModeWarnings.discardPendingWarnings(), rootWorkInProgress;
      }
      function handleError(root2, thrownValue) {
        do {
          var erroredWork = workInProgress;
          try {
            if (resetContextDependencies(), resetHooksAfterThrow(), resetCurrentFiber(), ReactCurrentOwner$2.current = null, erroredWork === null || erroredWork.return === null) {
              workInProgressRootExitStatus = RootFatalErrored, workInProgressRootFatalError = thrownValue, workInProgress = null;
              return;
            }
            if (enableProfilerTimer && erroredWork.mode & ProfileMode && stopProfilerTimerIfRunningAndRecordDelta(erroredWork, !0), enableSchedulingProfiler)
              if (markComponentRenderStopped(), thrownValue !== null && typeof thrownValue == "object" && typeof thrownValue.then == "function") {
                var wakeable = thrownValue;
                markComponentSuspended(erroredWork, wakeable, workInProgressRootRenderLanes);
              } else
                markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);
            throwException(root2, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes), completeUnitOfWork(erroredWork);
          } catch (yetAnotherThrownValue) {
            thrownValue = yetAnotherThrownValue, workInProgress === erroredWork && erroredWork !== null ? (erroredWork = erroredWork.return, workInProgress = erroredWork) : erroredWork = workInProgress;
            continue;
          }
          return;
        } while (!0);
      }
      function pushDispatcher() {
        var prevDispatcher = ReactCurrentDispatcher$2.current;
        return ReactCurrentDispatcher$2.current = ContextOnlyDispatcher, prevDispatcher === null ? ContextOnlyDispatcher : prevDispatcher;
      }
      function popDispatcher(prevDispatcher) {
        ReactCurrentDispatcher$2.current = prevDispatcher;
      }
      function markCommitTimeOfFallback() {
        globalMostRecentFallbackTime = now();
      }
      function markSkippedUpdateLanes(lane) {
        workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);
      }
      function renderDidSuspend() {
        workInProgressRootExitStatus === RootInProgress && (workInProgressRootExitStatus = RootSuspended);
      }
      function renderDidSuspendDelayIfPossible() {
        (workInProgressRootExitStatus === RootInProgress || workInProgressRootExitStatus === RootSuspended || workInProgressRootExitStatus === RootErrored) && (workInProgressRootExitStatus = RootSuspendedWithDelay), workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes)) && markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);
      }
      function renderDidError(error2) {
        workInProgressRootExitStatus !== RootSuspendedWithDelay && (workInProgressRootExitStatus = RootErrored), workInProgressRootConcurrentErrors === null ? workInProgressRootConcurrentErrors = [error2] : workInProgressRootConcurrentErrors.push(error2);
      }
      function renderHasNotSuspendedYet() {
        return workInProgressRootExitStatus === RootInProgress;
      }
      function renderRootSync(root2, lanes) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher();
        if (workInProgressRoot !== root2 || workInProgressRootRenderLanes !== lanes) {
          if (isDevToolsPresent) {
            var memoizedUpdaters = root2.memoizedUpdaters;
            memoizedUpdaters.size > 0 && (restorePendingUpdaters(root2, workInProgressRootRenderLanes), memoizedUpdaters.clear()), movePendingFibersToMemoized(root2, lanes);
          }
          workInProgressTransitions = getTransitionsForLanes(), prepareFreshStack(root2, lanes);
        }
        markRenderStarted(lanes);
        do
          try {
            workLoopSync();
            break;
          } catch (thrownValue) {
            handleError(root2, thrownValue);
          }
        while (!0);
        if (resetContextDependencies(), executionContext = prevExecutionContext, popDispatcher(prevDispatcher), workInProgress !== null)
          throw new Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
        return markRenderStopped(), workInProgressRoot = null, workInProgressRootRenderLanes = NoLanes, workInProgressRootExitStatus;
      }
      function workLoopSync() {
        for (; workInProgress !== null; )
          performUnitOfWork(workInProgress);
      }
      function renderRootConcurrent(root2, lanes) {
        var prevExecutionContext = executionContext;
        executionContext |= RenderContext;
        var prevDispatcher = pushDispatcher();
        if (workInProgressRoot !== root2 || workInProgressRootRenderLanes !== lanes) {
          if (isDevToolsPresent) {
            var memoizedUpdaters = root2.memoizedUpdaters;
            memoizedUpdaters.size > 0 && (restorePendingUpdaters(root2, workInProgressRootRenderLanes), memoizedUpdaters.clear()), movePendingFibersToMemoized(root2, lanes);
          }
          workInProgressTransitions = getTransitionsForLanes(), resetRenderTimer(), prepareFreshStack(root2, lanes);
        }
        markRenderStarted(lanes);
        do
          try {
            workLoopConcurrent();
            break;
          } catch (thrownValue) {
            handleError(root2, thrownValue);
          }
        while (!0);
        return resetContextDependencies(), popDispatcher(prevDispatcher), executionContext = prevExecutionContext, workInProgress !== null ? (markRenderYielded(), RootInProgress) : (markRenderStopped(), workInProgressRoot = null, workInProgressRootRenderLanes = NoLanes, workInProgressRootExitStatus);
      }
      function workLoopConcurrent() {
        for (; workInProgress !== null && !shouldYield(); )
          performUnitOfWork(workInProgress);
      }
      function performUnitOfWork(unitOfWork) {
        var current2 = unitOfWork.alternate;
        setCurrentFiber(unitOfWork);
        var next;
        (unitOfWork.mode & ProfileMode) !== NoMode ? (startProfilerTimer(unitOfWork), next = beginWork$1(current2, unitOfWork, subtreeRenderLanes), stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, !0)) : next = beginWork$1(current2, unitOfWork, subtreeRenderLanes), resetCurrentFiber(), unitOfWork.memoizedProps = unitOfWork.pendingProps, next === null ? completeUnitOfWork(unitOfWork) : workInProgress = next, ReactCurrentOwner$2.current = null;
      }
      function completeUnitOfWork(unitOfWork) {
        var completedWork = unitOfWork;
        do {
          var current2 = completedWork.alternate, returnFiber = completedWork.return;
          if ((completedWork.flags & Incomplete) === NoFlags) {
            setCurrentFiber(completedWork);
            var next = void 0;
            if ((completedWork.mode & ProfileMode) === NoMode ? next = completeWork(current2, completedWork, subtreeRenderLanes) : (startProfilerTimer(completedWork), next = completeWork(current2, completedWork, subtreeRenderLanes), stopProfilerTimerIfRunningAndRecordDelta(completedWork, !1)), resetCurrentFiber(), next !== null) {
              workInProgress = next;
              return;
            }
          } else {
            var _next = unwindWork(current2, completedWork);
            if (_next !== null) {
              _next.flags &= HostEffectMask, workInProgress = _next;
              return;
            }
            if ((completedWork.mode & ProfileMode) !== NoMode) {
              stopProfilerTimerIfRunningAndRecordDelta(completedWork, !1);
              for (var actualDuration = completedWork.actualDuration, child = completedWork.child; child !== null; )
                actualDuration += child.actualDuration, child = child.sibling;
              completedWork.actualDuration = actualDuration;
            }
            if (returnFiber !== null)
              returnFiber.flags |= Incomplete, returnFiber.subtreeFlags = NoFlags, returnFiber.deletions = null;
            else {
              workInProgressRootExitStatus = RootDidNotComplete, workInProgress = null;
              return;
            }
          }
          var siblingFiber = completedWork.sibling;
          if (siblingFiber !== null) {
            workInProgress = siblingFiber;
            return;
          }
          completedWork = returnFiber, workInProgress = completedWork;
        } while (completedWork !== null);
        workInProgressRootExitStatus === RootInProgress && (workInProgressRootExitStatus = RootCompleted);
      }
      function commitRoot(root2, recoverableErrors, transitions) {
        var previousUpdateLanePriority = getCurrentUpdatePriority(), prevTransition = ReactCurrentBatchConfig$3.transition;
        try {
          ReactCurrentBatchConfig$3.transition = null, setCurrentUpdatePriority(DiscreteEventPriority), commitRootImpl(root2, recoverableErrors, transitions, previousUpdateLanePriority);
        } finally {
          ReactCurrentBatchConfig$3.transition = prevTransition, setCurrentUpdatePriority(previousUpdateLanePriority);
        }
        return null;
      }
      function commitRootImpl(root2, recoverableErrors, transitions, renderPriorityLevel) {
        do
          flushPassiveEffects();
        while (rootWithPendingPassiveEffects !== null);
        if (flushRenderPhaseStrictModeWarningsInDEV(), (executionContext & (RenderContext | CommitContext)) !== NoContext)
          throw new Error("Should not already be working.");
        var finishedWork = root2.finishedWork, lanes = root2.finishedLanes;
        if (markCommitStarted(lanes), finishedWork === null)
          return markCommitStopped(), null;
        if (lanes === NoLanes && error("root.finishedLanes should not be empty during a commit. This is a bug in React."), root2.finishedWork = null, root2.finishedLanes = NoLanes, finishedWork === root2.current)
          throw new Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
        root2.callbackNode = null, root2.callbackPriority = NoLane;
        var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);
        markRootFinished(root2, remainingLanes), root2 === workInProgressRoot && (workInProgressRoot = null, workInProgress = null, workInProgressRootRenderLanes = NoLanes), ((finishedWork.subtreeFlags & PassiveMask) !== NoFlags || (finishedWork.flags & PassiveMask) !== NoFlags) && (rootDoesHavePassiveEffects || (rootDoesHavePassiveEffects = !0, pendingPassiveTransitions = transitions, scheduleCallback$1(NormalPriority, function() {
          return flushPassiveEffects(), null;
        })));
        var subtreeHasEffects = (finishedWork.subtreeFlags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags, rootHasEffect = (finishedWork.flags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
        if (subtreeHasEffects || rootHasEffect) {
          var prevTransition = ReactCurrentBatchConfig$3.transition;
          ReactCurrentBatchConfig$3.transition = null;
          var previousPriority = getCurrentUpdatePriority();
          setCurrentUpdatePriority(DiscreteEventPriority);
          var prevExecutionContext = executionContext;
          executionContext |= CommitContext, ReactCurrentOwner$2.current = null;
          var shouldFireAfterActiveInstanceBlur2 = commitBeforeMutationEffects(root2, finishedWork);
          recordCommitTime(), commitMutationEffects(root2, finishedWork, lanes), resetAfterCommit(root2.containerInfo), root2.current = finishedWork, markLayoutEffectsStarted(lanes), commitLayoutEffects(finishedWork, root2, lanes), markLayoutEffectsStopped(), requestPaint(), executionContext = prevExecutionContext, setCurrentUpdatePriority(previousPriority), ReactCurrentBatchConfig$3.transition = prevTransition;
        } else
          root2.current = finishedWork, recordCommitTime();
        var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;
        if (rootDoesHavePassiveEffects ? (rootDoesHavePassiveEffects = !1, rootWithPendingPassiveEffects = root2, pendingPassiveEffectsLanes = lanes) : (nestedPassiveUpdateCount = 0, rootWithPassiveNestedUpdates = null), remainingLanes = root2.pendingLanes, remainingLanes === NoLanes && (legacyErrorBoundariesThatAlreadyFailed = null), rootDidHavePassiveEffects || commitDoubleInvokeEffectsInDEV(root2.current, !1), onCommitRoot(finishedWork.stateNode, renderPriorityLevel), isDevToolsPresent && root2.memoizedUpdaters.clear(), onCommitRoot$1(), ensureRootIsScheduled(root2, now()), recoverableErrors !== null)
          for (var onRecoverableError = root2.onRecoverableError, i7 = 0; i7 < recoverableErrors.length; i7++) {
            var recoverableError = recoverableErrors[i7], componentStack = recoverableError.stack, digest = recoverableError.digest;
            onRecoverableError(recoverableError.value, {
              componentStack,
              digest
            });
          }
        if (hasUncaughtError) {
          hasUncaughtError = !1;
          var error$1 = firstUncaughtError;
          throw firstUncaughtError = null, error$1;
        }
        return includesSomeLane(pendingPassiveEffectsLanes, SyncLane) && root2.tag !== LegacyRoot && flushPassiveEffects(), remainingLanes = root2.pendingLanes, includesSomeLane(remainingLanes, SyncLane) ? (markNestedUpdateScheduled(), root2 === rootWithNestedUpdates ? nestedUpdateCount++ : (nestedUpdateCount = 0, rootWithNestedUpdates = root2)) : nestedUpdateCount = 0, flushSyncCallbacks(), markCommitStopped(), null;
      }
      function flushPassiveEffects() {
        if (rootWithPendingPassiveEffects !== null) {
          var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes), priority = lowerEventPriority(DefaultEventPriority, renderPriority), prevTransition = ReactCurrentBatchConfig$3.transition, previousPriority = getCurrentUpdatePriority();
          try {
            return ReactCurrentBatchConfig$3.transition = null, setCurrentUpdatePriority(priority), flushPassiveEffectsImpl();
          } finally {
            setCurrentUpdatePriority(previousPriority), ReactCurrentBatchConfig$3.transition = prevTransition;
          }
        }
        return !1;
      }
      function enqueuePendingPassiveProfilerEffect(fiber) {
        pendingPassiveProfilerEffects.push(fiber), rootDoesHavePassiveEffects || (rootDoesHavePassiveEffects = !0, scheduleCallback$1(NormalPriority, function() {
          return flushPassiveEffects(), null;
        }));
      }
      function flushPassiveEffectsImpl() {
        if (rootWithPendingPassiveEffects === null)
          return !1;
        var transitions = pendingPassiveTransitions;
        pendingPassiveTransitions = null;
        var root2 = rootWithPendingPassiveEffects, lanes = pendingPassiveEffectsLanes;
        if (rootWithPendingPassiveEffects = null, pendingPassiveEffectsLanes = NoLanes, (executionContext & (RenderContext | CommitContext)) !== NoContext)
          throw new Error("Cannot flush passive effects while already rendering.");
        isFlushingPassiveEffects = !0, didScheduleUpdateDuringPassiveEffects = !1, markPassiveEffectsStarted(lanes);
        var prevExecutionContext = executionContext;
        executionContext |= CommitContext, commitPassiveUnmountEffects(root2.current), commitPassiveMountEffects(root2, root2.current, lanes, transitions);
        {
          var profilerEffects = pendingPassiveProfilerEffects;
          pendingPassiveProfilerEffects = [];
          for (var i7 = 0; i7 < profilerEffects.length; i7++) {
            var _fiber = profilerEffects[i7];
            commitPassiveEffectDurations(root2, _fiber);
          }
        }
        markPassiveEffectsStopped(), commitDoubleInvokeEffectsInDEV(root2.current, !0), executionContext = prevExecutionContext, flushSyncCallbacks(), didScheduleUpdateDuringPassiveEffects ? root2 === rootWithPassiveNestedUpdates ? nestedPassiveUpdateCount++ : (nestedPassiveUpdateCount = 0, rootWithPassiveNestedUpdates = root2) : nestedPassiveUpdateCount = 0, isFlushingPassiveEffects = !1, didScheduleUpdateDuringPassiveEffects = !1, onPostCommitRoot(root2);
        {
          var stateNode = root2.current.stateNode;
          stateNode.effectDuration = 0, stateNode.passiveEffectDuration = 0;
        }
        return !0;
      }
      function isAlreadyFailedLegacyErrorBoundary(instance) {
        return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
      }
      function markLegacyErrorBoundaryAsFailed(instance) {
        legacyErrorBoundariesThatAlreadyFailed === null ? legacyErrorBoundariesThatAlreadyFailed = /* @__PURE__ */ new Set([instance]) : legacyErrorBoundariesThatAlreadyFailed.add(instance);
      }
      function prepareToThrowUncaughtError(error2) {
        hasUncaughtError || (hasUncaughtError = !0, firstUncaughtError = error2);
      }
      var onUncaughtError = prepareToThrowUncaughtError;
      function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error2) {
        var errorInfo = createCapturedValueAtFiber(error2, sourceFiber), update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane), root2 = enqueueUpdate(rootFiber, update, SyncLane), eventTime = requestEventTime();
        root2 !== null && (markRootUpdated(root2, SyncLane, eventTime), ensureRootIsScheduled(root2, eventTime));
      }
      function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {
        if (reportUncaughtErrorInDEV(error$1), setIsRunningInsertionEffect(!1), sourceFiber.tag === HostRoot) {
          captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);
          return;
        }
        var fiber = null;
        for (fiber = nearestMountedAncestor; fiber !== null; ) {
          if (fiber.tag === HostRoot) {
            captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);
            return;
          } else if (fiber.tag === ClassComponent) {
            var ctor = fiber.type, instance = fiber.stateNode;
            if (typeof ctor.getDerivedStateFromError == "function" || typeof instance.componentDidCatch == "function" && !isAlreadyFailedLegacyErrorBoundary(instance)) {
              var errorInfo = createCapturedValueAtFiber(error$1, sourceFiber), update = createClassErrorUpdate(fiber, errorInfo, SyncLane), root2 = enqueueUpdate(fiber, update, SyncLane), eventTime = requestEventTime();
              root2 !== null && (markRootUpdated(root2, SyncLane, eventTime), ensureRootIsScheduled(root2, eventTime));
              return;
            }
          }
          fiber = fiber.return;
        }
        error(`Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.

Error message:

%s`, error$1);
      }
      function pingSuspendedRoot(root2, wakeable, pingedLanes) {
        var pingCache = root2.pingCache;
        pingCache !== null && pingCache.delete(wakeable);
        var eventTime = requestEventTime();
        markRootPinged(root2, pingedLanes), warnIfSuspenseResolutionNotWrappedWithActDEV(root2), workInProgressRoot === root2 && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes) && (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS ? prepareFreshStack(root2, NoLanes) : workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes)), ensureRootIsScheduled(root2, eventTime);
      }
      function retryTimedOutBoundary(boundaryFiber, retryLane) {
        retryLane === NoLane && (retryLane = requestRetryLane(boundaryFiber));
        var eventTime = requestEventTime(), root2 = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);
        root2 !== null && (markRootUpdated(root2, retryLane, eventTime), ensureRootIsScheduled(root2, eventTime));
      }
      function retryDehydratedSuspenseBoundary(boundaryFiber) {
        var suspenseState = boundaryFiber.memoizedState, retryLane = NoLane;
        suspenseState !== null && (retryLane = suspenseState.retryLane), retryTimedOutBoundary(boundaryFiber, retryLane);
      }
      function resolveRetryWakeable(boundaryFiber, wakeable) {
        var retryLane = NoLane, retryCache;
        switch (boundaryFiber.tag) {
          case SuspenseComponent:
            retryCache = boundaryFiber.stateNode;
            var suspenseState = boundaryFiber.memoizedState;
            suspenseState !== null && (retryLane = suspenseState.retryLane);
            break;
          case SuspenseListComponent:
            retryCache = boundaryFiber.stateNode;
            break;
          default:
            throw new Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
        }
        retryCache !== null && retryCache.delete(wakeable), retryTimedOutBoundary(boundaryFiber, retryLane);
      }
      function jnd(timeElapsed) {
        return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3e3 ? 3e3 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
      }
      function checkForNestedUpdates() {
        if (nestedUpdateCount > NESTED_UPDATE_LIMIT)
          throw nestedUpdateCount = 0, rootWithNestedUpdates = null, new Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
        nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT && (nestedPassiveUpdateCount = 0, rootWithPassiveNestedUpdates = null, error("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render."));
      }
      function flushRenderPhaseStrictModeWarningsInDEV() {
        ReactStrictModeWarnings.flushLegacyContextWarning(), ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
      }
      function commitDoubleInvokeEffectsInDEV(fiber, hasPassiveEffects) {
        setCurrentFiber(fiber), invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectUnmountInDEV), hasPassiveEffects && invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectUnmountInDEV), invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectMountInDEV), hasPassiveEffects && invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectMountInDEV), resetCurrentFiber();
      }
      function invokeEffectsInDev(firstChild, fiberFlags, invokeEffectFn) {
        for (var current2 = firstChild, subtreeRoot = null; current2 !== null; ) {
          var primarySubtreeFlag = current2.subtreeFlags & fiberFlags;
          current2 !== subtreeRoot && current2.child !== null && primarySubtreeFlag !== NoFlags ? current2 = current2.child : ((current2.flags & fiberFlags) !== NoFlags && invokeEffectFn(current2), current2.sibling !== null ? current2 = current2.sibling : current2 = subtreeRoot = current2.return);
        }
      }
      var didWarnStateUpdateForNotYetMountedComponent = null;
      function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
        {
          if ((executionContext & RenderContext) !== NoContext || !(fiber.mode & ConcurrentMode))
            return;
          var tag = fiber.tag;
          if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef10 && tag !== MemoComponent && tag !== SimpleMemoComponent)
            return;
          var componentName = getComponentNameFromFiber(fiber) || "ReactComponent";
          if (didWarnStateUpdateForNotYetMountedComponent !== null) {
            if (didWarnStateUpdateForNotYetMountedComponent.has(componentName))
              return;
            didWarnStateUpdateForNotYetMountedComponent.add(componentName);
          } else
            didWarnStateUpdateForNotYetMountedComponent = /* @__PURE__ */ new Set([componentName]);
          var previousFiber = current;
          try {
            setCurrentFiber(fiber), error("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
          } finally {
            previousFiber ? setCurrentFiber(fiber) : resetCurrentFiber();
          }
        }
      }
      var beginWork$1;
      {
        var dummyFiber = null;
        beginWork$1 = function(current2, unitOfWork, lanes) {
          var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);
          try {
            return beginWork(current2, unitOfWork, lanes);
          } catch (originalError) {
            if (didSuspendOrErrorWhileHydratingDEV() || originalError !== null && typeof originalError == "object" && typeof originalError.then == "function")
              throw originalError;
            if (resetContextDependencies(), resetHooksAfterThrow(), unwindInterruptedWork(current2, unitOfWork), assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy), unitOfWork.mode & ProfileMode && startProfilerTimer(unitOfWork), invokeGuardedCallback(null, beginWork, null, current2, unitOfWork, lanes), hasCaughtError()) {
              var replayError = clearCaughtError();
              typeof replayError == "object" && replayError !== null && replayError._suppressLogging && typeof originalError == "object" && originalError !== null && !originalError._suppressLogging && (originalError._suppressLogging = !0);
            }
            throw originalError;
          }
        };
      }
      var didWarnAboutUpdateInRender = !1, didWarnAboutUpdateInRenderForAnotherComponent;
      didWarnAboutUpdateInRenderForAnotherComponent = /* @__PURE__ */ new Set();
      function warnAboutRenderPhaseUpdatesInDEV(fiber) {
        if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV())
          switch (fiber.tag) {
            case FunctionComponent:
            case ForwardRef10:
            case SimpleMemoComponent: {
              var renderingComponentName = workInProgress && getComponentNameFromFiber(workInProgress) || "Unknown", dedupeKey = renderingComponentName;
              if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {
                didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);
                var setStateComponentName = getComponentNameFromFiber(fiber) || "Unknown";
                error("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", setStateComponentName, renderingComponentName, renderingComponentName);
              }
              break;
            }
            case ClassComponent: {
              didWarnAboutUpdateInRender || (error("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state."), didWarnAboutUpdateInRender = !0);
              break;
            }
          }
      }
      function restorePendingUpdaters(root2, lanes) {
        if (isDevToolsPresent) {
          var memoizedUpdaters = root2.memoizedUpdaters;
          memoizedUpdaters.forEach(function(schedulingFiber) {
            addFiberToLanesMap(root2, schedulingFiber, lanes);
          });
        }
      }
      var fakeActCallbackNode = {};
      function scheduleCallback$1(priorityLevel, callback) {
        {
          var actQueue = ReactCurrentActQueue$1.current;
          return actQueue !== null ? (actQueue.push(callback), fakeActCallbackNode) : scheduleCallback(priorityLevel, callback);
        }
      }
      function cancelCallback$1(callbackNode) {
        if (callbackNode !== fakeActCallbackNode)
          return cancelCallback(callbackNode);
      }
      function shouldForceFlushFallbacksInDEV() {
        return ReactCurrentActQueue$1.current !== null;
      }
      function warnIfUpdatesNotWrappedWithActDEV(fiber) {
        {
          if (fiber.mode & ConcurrentMode) {
            if (!isConcurrentActEnvironment())
              return;
          } else if (!isLegacyActEnvironment() || executionContext !== NoContext || fiber.tag !== FunctionComponent && fiber.tag !== ForwardRef10 && fiber.tag !== SimpleMemoComponent)
            return;
          if (ReactCurrentActQueue$1.current === null) {
            var previousFiber = current;
            try {
              setCurrentFiber(fiber), error(`An update to %s inside a test was not wrapped in act(...).

When testing, code that causes React state updates should be wrapped into act(...):

act(() => {
  /* fire events that update state */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act`, getComponentNameFromFiber(fiber));
            } finally {
              previousFiber ? setCurrentFiber(fiber) : resetCurrentFiber();
            }
          }
        }
      }
      function warnIfSuspenseResolutionNotWrappedWithActDEV(root2) {
        root2.tag !== LegacyRoot && isConcurrentActEnvironment() && ReactCurrentActQueue$1.current === null && error(`A suspended resource finished loading inside a test, but the event was not wrapped in act(...).

When testing, code that resolves suspended data should be wrapped into act(...):

act(() => {
  /* finish loading suspended data */
});
/* assert on the output */

This ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act`);
      }
      function setIsRunningInsertionEffect(isRunning) {
        isRunningInsertionEffect = isRunning;
      }
      var resolveFamily = null, failedBoundaries = null, setRefreshHandler = function(handler) {
        resolveFamily = handler;
      };
      function resolveFunctionForHotReloading(type) {
        {
          if (resolveFamily === null)
            return type;
          var family = resolveFamily(type);
          return family === void 0 ? type : family.current;
        }
      }
      function resolveClassForHotReloading(type) {
        return resolveFunctionForHotReloading(type);
      }
      function resolveForwardRefForHotReloading(type) {
        {
          if (resolveFamily === null)
            return type;
          var family = resolveFamily(type);
          if (family === void 0) {
            if (type != null && typeof type.render == "function") {
              var currentRender = resolveFunctionForHotReloading(type.render);
              if (type.render !== currentRender) {
                var syntheticType = {
                  $$typeof: REACT_FORWARD_REF_TYPE,
                  render: currentRender
                };
                return type.displayName !== void 0 && (syntheticType.displayName = type.displayName), syntheticType;
              }
            }
            return type;
          }
          return family.current;
        }
      }
      function isCompatibleFamilyForHotReloading(fiber, element) {
        {
          if (resolveFamily === null)
            return !1;
          var prevType = fiber.elementType, nextType = element.type, needsCompareFamilies = !1, $$typeofNextType = typeof nextType == "object" && nextType !== null ? nextType.$$typeof : null;
          switch (fiber.tag) {
            case ClassComponent: {
              typeof nextType == "function" && (needsCompareFamilies = !0);
              break;
            }
            case FunctionComponent: {
              (typeof nextType == "function" || $$typeofNextType === REACT_LAZY_TYPE) && (needsCompareFamilies = !0);
              break;
            }
            case ForwardRef10: {
              ($$typeofNextType === REACT_FORWARD_REF_TYPE || $$typeofNextType === REACT_LAZY_TYPE) && (needsCompareFamilies = !0);
              break;
            }
            case MemoComponent:
            case SimpleMemoComponent: {
              ($$typeofNextType === REACT_MEMO_TYPE || $$typeofNextType === REACT_LAZY_TYPE) && (needsCompareFamilies = !0);
              break;
            }
            default:
              return !1;
          }
          if (needsCompareFamilies) {
            var prevFamily = resolveFamily(prevType);
            if (prevFamily !== void 0 && prevFamily === resolveFamily(nextType))
              return !0;
          }
          return !1;
        }
      }
      function markFailedErrorBoundaryForHotReloading(fiber) {
        {
          if (resolveFamily === null || typeof WeakSet != "function")
            return;
          failedBoundaries === null && (failedBoundaries = /* @__PURE__ */ new WeakSet()), failedBoundaries.add(fiber);
        }
      }
      var scheduleRefresh = function(root2, update) {
        {
          if (resolveFamily === null)
            return;
          var staleFamilies = update.staleFamilies, updatedFamilies = update.updatedFamilies;
          flushPassiveEffects(), flushSync(function() {
            scheduleFibersWithFamiliesRecursively(root2.current, updatedFamilies, staleFamilies);
          });
        }
      }, scheduleRoot = function(root2, element) {
        {
          if (root2.context !== emptyContextObject)
            return;
          flushPassiveEffects(), flushSync(function() {
            updateContainer(element, root2, null, null);
          });
        }
      };
      function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
        {
          var alternate = fiber.alternate, child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type, candidateType = null;
          switch (tag) {
            case FunctionComponent:
            case SimpleMemoComponent:
            case ClassComponent:
              candidateType = type;
              break;
            case ForwardRef10:
              candidateType = type.render;
              break;
          }
          if (resolveFamily === null)
            throw new Error("Expected resolveFamily to be set during hot reload.");
          var needsRender = !1, needsRemount = !1;
          if (candidateType !== null) {
            var family = resolveFamily(candidateType);
            family !== void 0 && (staleFamilies.has(family) ? needsRemount = !0 : updatedFamilies.has(family) && (tag === ClassComponent ? needsRemount = !0 : needsRender = !0));
          }
          if (failedBoundaries !== null && (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) && (needsRemount = !0), needsRemount && (fiber._debugNeedsRemount = !0), needsRemount || needsRender) {
            var _root = enqueueConcurrentRenderForLane(fiber, SyncLane);
            _root !== null && scheduleUpdateOnFiber(_root, fiber, SyncLane, NoTimestamp);
          }
          child !== null && !needsRemount && scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies), sibling !== null && scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
        }
      }
      var findHostInstancesForRefresh = function(root2, families) {
        {
          var hostInstances = /* @__PURE__ */ new Set(), types = new Set(families.map(function(family) {
            return family.current;
          }));
          return findHostInstancesForMatchingFibersRecursively(root2.current, types, hostInstances), hostInstances;
        }
      };
      function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
        {
          var child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type, candidateType = null;
          switch (tag) {
            case FunctionComponent:
            case SimpleMemoComponent:
            case ClassComponent:
              candidateType = type;
              break;
            case ForwardRef10:
              candidateType = type.render;
              break;
          }
          var didMatch = !1;
          candidateType !== null && types.has(candidateType) && (didMatch = !0), didMatch ? findHostInstancesForFiberShallowly(fiber, hostInstances) : child !== null && findHostInstancesForMatchingFibersRecursively(child, types, hostInstances), sibling !== null && findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
        }
      }
      function findHostInstancesForFiberShallowly(fiber, hostInstances) {
        {
          var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);
          if (foundHostInstances)
            return;
          for (var node = fiber; ; ) {
            switch (node.tag) {
              case HostComponent:
                hostInstances.add(node.stateNode);
                return;
              case HostPortal:
                hostInstances.add(node.stateNode.containerInfo);
                return;
              case HostRoot:
                hostInstances.add(node.stateNode.containerInfo);
                return;
            }
            if (node.return === null)
              throw new Error("Expected to reach root first.");
            node = node.return;
          }
        }
      }
      function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
        for (var node = fiber, foundHostInstances = !1; ; ) {
          if (node.tag === HostComponent)
            foundHostInstances = !0, hostInstances.add(node.stateNode);
          else if (node.child !== null) {
            node.child.return = node, node = node.child;
            continue;
          }
          if (node === fiber)
            return foundHostInstances;
          for (; node.sibling === null; ) {
            if (node.return === null || node.return === fiber)
              return foundHostInstances;
            node = node.return;
          }
          node.sibling.return = node.return, node = node.sibling;
        }
        return !1;
      }
      var hasBadMapPolyfill;
      {
        hasBadMapPolyfill = !1;
        try {
          var nonExtensibleObject = Object.preventExtensions({});
        } catch {
          hasBadMapPolyfill = !0;
        }
      }
      function FiberNode(tag, pendingProps, key, mode) {
        this.tag = tag, this.key = key, this.elementType = null, this.type = null, this.stateNode = null, this.return = null, this.child = null, this.sibling = null, this.index = 0, this.ref = null, this.pendingProps = pendingProps, this.memoizedProps = null, this.updateQueue = null, this.memoizedState = null, this.dependencies = null, this.mode = mode, this.flags = NoFlags, this.subtreeFlags = NoFlags, this.deletions = null, this.lanes = NoLanes, this.childLanes = NoLanes, this.alternate = null, this.actualDuration = Number.NaN, this.actualStartTime = Number.NaN, this.selfBaseDuration = Number.NaN, this.treeBaseDuration = Number.NaN, this.actualDuration = 0, this.actualStartTime = -1, this.selfBaseDuration = 0, this.treeBaseDuration = 0, this._debugSource = null, this._debugOwner = null, this._debugNeedsRemount = !1, this._debugHookTypes = null, !hasBadMapPolyfill && typeof Object.preventExtensions == "function" && Object.preventExtensions(this);
      }
      var createFiber = function(tag, pendingProps, key, mode) {
        return new FiberNode(tag, pendingProps, key, mode);
      };
      function shouldConstruct$1(Component2) {
        var prototype = Component2.prototype;
        return !!(prototype && prototype.isReactComponent);
      }
      function isSimpleFunctionComponent(type) {
        return typeof type == "function" && !shouldConstruct$1(type) && type.defaultProps === void 0;
      }
      function resolveLazyComponentTag(Component2) {
        if (typeof Component2 == "function")
          return shouldConstruct$1(Component2) ? ClassComponent : FunctionComponent;
        if (Component2 != null) {
          var $$typeof = Component2.$$typeof;
          if ($$typeof === REACT_FORWARD_REF_TYPE)
            return ForwardRef10;
          if ($$typeof === REACT_MEMO_TYPE)
            return MemoComponent;
        }
        return IndeterminateComponent;
      }
      function createWorkInProgress(current2, pendingProps) {
        var workInProgress2 = current2.alternate;
        workInProgress2 === null ? (workInProgress2 = createFiber(current2.tag, pendingProps, current2.key, current2.mode), workInProgress2.elementType = current2.elementType, workInProgress2.type = current2.type, workInProgress2.stateNode = current2.stateNode, workInProgress2._debugSource = current2._debugSource, workInProgress2._debugOwner = current2._debugOwner, workInProgress2._debugHookTypes = current2._debugHookTypes, workInProgress2.alternate = current2, current2.alternate = workInProgress2) : (workInProgress2.pendingProps = pendingProps, workInProgress2.type = current2.type, workInProgress2.flags = NoFlags, workInProgress2.subtreeFlags = NoFlags, workInProgress2.deletions = null, workInProgress2.actualDuration = 0, workInProgress2.actualStartTime = -1), workInProgress2.flags = current2.flags & StaticMask, workInProgress2.childLanes = current2.childLanes, workInProgress2.lanes = current2.lanes, workInProgress2.child = current2.child, workInProgress2.memoizedProps = current2.memoizedProps, workInProgress2.memoizedState = current2.memoizedState, workInProgress2.updateQueue = current2.updateQueue;
        var currentDependencies = current2.dependencies;
        switch (workInProgress2.dependencies = currentDependencies === null ? null : {
          lanes: currentDependencies.lanes,
          firstContext: currentDependencies.firstContext
        }, workInProgress2.sibling = current2.sibling, workInProgress2.index = current2.index, workInProgress2.ref = current2.ref, workInProgress2.selfBaseDuration = current2.selfBaseDuration, workInProgress2.treeBaseDuration = current2.treeBaseDuration, workInProgress2._debugNeedsRemount = current2._debugNeedsRemount, workInProgress2.tag) {
          case IndeterminateComponent:
          case FunctionComponent:
          case SimpleMemoComponent:
            workInProgress2.type = resolveFunctionForHotReloading(current2.type);
            break;
          case ClassComponent:
            workInProgress2.type = resolveClassForHotReloading(current2.type);
            break;
          case ForwardRef10:
            workInProgress2.type = resolveForwardRefForHotReloading(current2.type);
            break;
        }
        return workInProgress2;
      }
      function resetWorkInProgress(workInProgress2, renderLanes2) {
        workInProgress2.flags &= StaticMask | Placement;
        var current2 = workInProgress2.alternate;
        if (current2 === null)
          workInProgress2.childLanes = NoLanes, workInProgress2.lanes = renderLanes2, workInProgress2.child = null, workInProgress2.subtreeFlags = NoFlags, workInProgress2.memoizedProps = null, workInProgress2.memoizedState = null, workInProgress2.updateQueue = null, workInProgress2.dependencies = null, workInProgress2.stateNode = null, workInProgress2.selfBaseDuration = 0, workInProgress2.treeBaseDuration = 0;
        else {
          workInProgress2.childLanes = current2.childLanes, workInProgress2.lanes = current2.lanes, workInProgress2.child = current2.child, workInProgress2.subtreeFlags = NoFlags, workInProgress2.deletions = null, workInProgress2.memoizedProps = current2.memoizedProps, workInProgress2.memoizedState = current2.memoizedState, workInProgress2.updateQueue = current2.updateQueue, workInProgress2.type = current2.type;
          var currentDependencies = current2.dependencies;
          workInProgress2.dependencies = currentDependencies === null ? null : {
            lanes: currentDependencies.lanes,
            firstContext: currentDependencies.firstContext
          }, workInProgress2.selfBaseDuration = current2.selfBaseDuration, workInProgress2.treeBaseDuration = current2.treeBaseDuration;
        }
        return workInProgress2;
      }
      function createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride) {
        var mode;
        return tag === ConcurrentRoot ? (mode = ConcurrentMode, isStrictMode === !0 && (mode |= StrictLegacyMode, mode |= StrictEffectsMode)) : mode = NoMode, isDevToolsPresent && (mode |= ProfileMode), createFiber(HostRoot, null, null, mode);
      }
      function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {
        var fiberTag = IndeterminateComponent, resolvedType = type;
        if (typeof type == "function")
          shouldConstruct$1(type) ? (fiberTag = ClassComponent, resolvedType = resolveClassForHotReloading(resolvedType)) : resolvedType = resolveFunctionForHotReloading(resolvedType);
        else if (typeof type == "string")
          fiberTag = HostComponent;
        else
          getTag:
            switch (type) {
              case REACT_FRAGMENT_TYPE:
                return createFiberFromFragment(pendingProps.children, mode, lanes, key);
              case REACT_STRICT_MODE_TYPE:
                fiberTag = Mode, mode |= StrictLegacyMode, (mode & ConcurrentMode) !== NoMode && (mode |= StrictEffectsMode);
                break;
              case REACT_PROFILER_TYPE:
                return createFiberFromProfiler(pendingProps, mode, lanes, key);
              case REACT_SUSPENSE_TYPE:
                return createFiberFromSuspense(pendingProps, mode, lanes, key);
              case REACT_SUSPENSE_LIST_TYPE:
                return createFiberFromSuspenseList(pendingProps, mode, lanes, key);
              case REACT_OFFSCREEN_TYPE:
                return createFiberFromOffscreen(pendingProps, mode, lanes, key);
              case REACT_LEGACY_HIDDEN_TYPE:
              case REACT_SCOPE_TYPE:
              case REACT_CACHE_TYPE:
              case REACT_TRACING_MARKER_TYPE:
              case REACT_DEBUG_TRACING_MODE_TYPE:
              default: {
                if (typeof type == "object" && type !== null)
                  switch (type.$$typeof) {
                    case REACT_PROVIDER_TYPE:
                      fiberTag = ContextProvider;
                      break getTag;
                    case REACT_CONTEXT_TYPE:
                      fiberTag = ContextConsumer;
                      break getTag;
                    case REACT_FORWARD_REF_TYPE:
                      fiberTag = ForwardRef10, resolvedType = resolveForwardRefForHotReloading(resolvedType);
                      break getTag;
                    case REACT_MEMO_TYPE:
                      fiberTag = MemoComponent;
                      break getTag;
                    case REACT_LAZY_TYPE:
                      fiberTag = LazyComponent, resolvedType = null;
                      break getTag;
                  }
                var info = "";
                {
                  (type === void 0 || typeof type == "object" && type !== null && Object.keys(type).length === 0) && (info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
                  var ownerName = owner ? getComponentNameFromFiber(owner) : null;
                  ownerName && (info += `

Check the render method of \`` + ownerName + "`.");
                }
                throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (type == null ? type : typeof type) + "." + info));
              }
            }
        var fiber = createFiber(fiberTag, pendingProps, key, mode);
        return fiber.elementType = type, fiber.type = resolvedType, fiber.lanes = lanes, fiber._debugOwner = owner, fiber;
      }
      function createFiberFromElement(element, mode, lanes) {
        var owner = null;
        owner = element._owner;
        var type = element.type, key = element.key, pendingProps = element.props, fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);
        return fiber._debugSource = element._source, fiber._debugOwner = element._owner, fiber;
      }
      function createFiberFromFragment(elements, mode, lanes, key) {
        var fiber = createFiber(Fragment30, elements, key, mode);
        return fiber.lanes = lanes, fiber;
      }
      function createFiberFromProfiler(pendingProps, mode, lanes, key) {
        typeof pendingProps.id != "string" && error('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id);
        var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
        return fiber.elementType = REACT_PROFILER_TYPE, fiber.lanes = lanes, fiber.stateNode = {
          effectDuration: 0,
          passiveEffectDuration: 0
        }, fiber;
      }
      function createFiberFromSuspense(pendingProps, mode, lanes, key) {
        var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);
        return fiber.elementType = REACT_SUSPENSE_TYPE, fiber.lanes = lanes, fiber;
      }
      function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {
        var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
        return fiber.elementType = REACT_SUSPENSE_LIST_TYPE, fiber.lanes = lanes, fiber;
      }
      function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
        var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);
        fiber.elementType = REACT_OFFSCREEN_TYPE, fiber.lanes = lanes;
        var primaryChildInstance = {
          isHidden: !1
        };
        return fiber.stateNode = primaryChildInstance, fiber;
      }
      function createFiberFromText(content, mode, lanes) {
        var fiber = createFiber(HostText, content, null, mode);
        return fiber.lanes = lanes, fiber;
      }
      function createFiberFromHostInstanceForDeletion() {
        var fiber = createFiber(HostComponent, null, null, NoMode);
        return fiber.elementType = "DELETED", fiber;
      }
      function createFiberFromDehydratedFragment(dehydratedNode) {
        var fiber = createFiber(DehydratedFragment, null, null, NoMode);
        return fiber.stateNode = dehydratedNode, fiber;
      }
      function createFiberFromPortal(portal, mode, lanes) {
        var pendingProps = portal.children !== null ? portal.children : [], fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
        return fiber.lanes = lanes, fiber.stateNode = {
          containerInfo: portal.containerInfo,
          pendingChildren: null,
          // Used by persistent updates
          implementation: portal.implementation
        }, fiber;
      }
      function assignFiberPropertiesInDEV(target, source) {
        return target === null && (target = createFiber(IndeterminateComponent, null, null, NoMode)), target.tag = source.tag, target.key = source.key, target.elementType = source.elementType, target.type = source.type, target.stateNode = source.stateNode, target.return = source.return, target.child = source.child, target.sibling = source.sibling, target.index = source.index, target.ref = source.ref, target.pendingProps = source.pendingProps, target.memoizedProps = source.memoizedProps, target.updateQueue = source.updateQueue, target.memoizedState = source.memoizedState, target.dependencies = source.dependencies, target.mode = source.mode, target.flags = source.flags, target.subtreeFlags = source.subtreeFlags, target.deletions = source.deletions, target.lanes = source.lanes, target.childLanes = source.childLanes, target.alternate = source.alternate, target.actualDuration = source.actualDuration, target.actualStartTime = source.actualStartTime, target.selfBaseDuration = source.selfBaseDuration, target.treeBaseDuration = source.treeBaseDuration, target._debugSource = source._debugSource, target._debugOwner = source._debugOwner, target._debugNeedsRemount = source._debugNeedsRemount, target._debugHookTypes = source._debugHookTypes, target;
      }
      function FiberRootNode(containerInfo, tag, hydrate2, identifierPrefix, onRecoverableError) {
        this.tag = tag, this.containerInfo = containerInfo, this.pendingChildren = null, this.current = null, this.pingCache = null, this.finishedWork = null, this.timeoutHandle = noTimeout, this.context = null, this.pendingContext = null, this.callbackNode = null, this.callbackPriority = NoLane, this.eventTimes = createLaneMap(NoLanes), this.expirationTimes = createLaneMap(NoTimestamp), this.pendingLanes = NoLanes, this.suspendedLanes = NoLanes, this.pingedLanes = NoLanes, this.expiredLanes = NoLanes, this.mutableReadLanes = NoLanes, this.finishedLanes = NoLanes, this.entangledLanes = NoLanes, this.entanglements = createLaneMap(NoLanes), this.identifierPrefix = identifierPrefix, this.onRecoverableError = onRecoverableError, this.mutableSourceEagerHydrationData = null, this.effectDuration = 0, this.passiveEffectDuration = 0;
        {
          this.memoizedUpdaters = /* @__PURE__ */ new Set();
          for (var pendingUpdatersLaneMap = this.pendingUpdatersLaneMap = [], _i = 0; _i < TotalLanes; _i++)
            pendingUpdatersLaneMap.push(/* @__PURE__ */ new Set());
        }
        switch (tag) {
          case ConcurrentRoot:
            this._debugRootType = hydrate2 ? "hydrateRoot()" : "createRoot()";
            break;
          case LegacyRoot:
            this._debugRootType = hydrate2 ? "hydrate()" : "render()";
            break;
        }
      }
      function createFiberRoot(containerInfo, tag, hydrate2, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
        var root2 = new FiberRootNode(containerInfo, tag, hydrate2, identifierPrefix, onRecoverableError), uninitializedFiber = createHostRootFiber(tag, isStrictMode);
        root2.current = uninitializedFiber, uninitializedFiber.stateNode = root2;
        {
          var _initialState = {
            element: initialChildren,
            isDehydrated: hydrate2,
            cache: null,
            // not enabled yet
            transitions: null,
            pendingSuspenseBoundaries: null
          };
          uninitializedFiber.memoizedState = _initialState;
        }
        return initializeUpdateQueue(uninitializedFiber), root2;
      }
      var ReactVersion = "18.2.0";
      function createPortal(children, containerInfo, implementation) {
        var key = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
        return checkKeyStringCoercion(key), {
          // This tag allow us to uniquely identify this as a React Portal
          $$typeof: REACT_PORTAL_TYPE,
          key: key == null ? null : "" + key,
          children,
          containerInfo,
          implementation
        };
      }
      var didWarnAboutNestedUpdates, didWarnAboutFindNodeInStrictMode;
      didWarnAboutNestedUpdates = !1, didWarnAboutFindNodeInStrictMode = {};
      function getContextForSubtree(parentComponent) {
        if (!parentComponent)
          return emptyContextObject;
        var fiber = get(parentComponent), parentContext = findCurrentUnmaskedContext(fiber);
        if (fiber.tag === ClassComponent) {
          var Component2 = fiber.type;
          if (isContextProvider(Component2))
            return processChildContext(fiber, Component2, parentContext);
        }
        return parentContext;
      }
      function findHostInstanceWithWarning(component, methodName) {
        {
          var fiber = get(component);
          if (fiber === void 0) {
            if (typeof component.render == "function")
              throw new Error("Unable to find node on an unmounted component.");
            var keys2 = Object.keys(component).join(",");
            throw new Error("Argument appears to not be a ReactComponent. Keys: " + keys2);
          }
          var hostFiber = findCurrentHostFiber(fiber);
          if (hostFiber === null)
            return null;
          if (hostFiber.mode & StrictLegacyMode) {
            var componentName = getComponentNameFromFiber(fiber) || "Component";
            if (!didWarnAboutFindNodeInStrictMode[componentName]) {
              didWarnAboutFindNodeInStrictMode[componentName] = !0;
              var previousFiber = current;
              try {
                setCurrentFiber(hostFiber), fiber.mode & StrictLegacyMode ? error("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName) : error("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
              } finally {
                previousFiber ? setCurrentFiber(previousFiber) : resetCurrentFiber();
              }
            }
          }
          return hostFiber.stateNode;
        }
      }
      function createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
        var hydrate2 = !1, initialChildren = null;
        return createFiberRoot(containerInfo, tag, hydrate2, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
      }
      function createHydrationContainer(initialChildren, callback, containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
        var hydrate2 = !0, root2 = createFiberRoot(containerInfo, tag, hydrate2, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
        root2.context = getContextForSubtree(null);
        var current2 = root2.current, eventTime = requestEventTime(), lane = requestUpdateLane(current2), update = createUpdate(eventTime, lane);
        return update.callback = callback ?? null, enqueueUpdate(current2, update, lane), scheduleInitialHydrationOnRoot(root2, lane, eventTime), root2;
      }
      function updateContainer(element, container, parentComponent, callback) {
        onScheduleRoot(container, element);
        var current$1 = container.current, eventTime = requestEventTime(), lane = requestUpdateLane(current$1);
        markRenderScheduled(lane);
        var context = getContextForSubtree(parentComponent);
        container.context === null ? container.context = context : container.pendingContext = context, isRendering && current !== null && !didWarnAboutNestedUpdates && (didWarnAboutNestedUpdates = !0, error(`Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.

Check the render method of %s.`, getComponentNameFromFiber(current) || "Unknown"));
        var update = createUpdate(eventTime, lane);
        update.payload = {
          element
        }, callback = callback === void 0 ? null : callback, callback !== null && (typeof callback != "function" && error("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callback), update.callback = callback);
        var root2 = enqueueUpdate(current$1, update, lane);
        return root2 !== null && (scheduleUpdateOnFiber(root2, current$1, lane, eventTime), entangleTransitions(root2, current$1, lane)), lane;
      }
      function getPublicRootInstance(container) {
        var containerFiber = container.current;
        if (!containerFiber.child)
          return null;
        switch (containerFiber.child.tag) {
          case HostComponent:
            return containerFiber.child.stateNode;
          default:
            return containerFiber.child.stateNode;
        }
      }
      function attemptSynchronousHydration$1(fiber) {
        switch (fiber.tag) {
          case HostRoot: {
            var root2 = fiber.stateNode;
            if (isRootDehydrated(root2)) {
              var lanes = getHighestPriorityPendingLanes(root2);
              flushRoot(root2, lanes);
            }
            break;
          }
          case SuspenseComponent: {
            flushSync(function() {
              var root3 = enqueueConcurrentRenderForLane(fiber, SyncLane);
              if (root3 !== null) {
                var eventTime = requestEventTime();
                scheduleUpdateOnFiber(root3, fiber, SyncLane, eventTime);
              }
            });
            var retryLane = SyncLane;
            markRetryLaneIfNotHydrated(fiber, retryLane);
            break;
          }
        }
      }
      function markRetryLaneImpl(fiber, retryLane) {
        var suspenseState = fiber.memoizedState;
        suspenseState !== null && suspenseState.dehydrated !== null && (suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane));
      }
      function markRetryLaneIfNotHydrated(fiber, retryLane) {
        markRetryLaneImpl(fiber, retryLane);
        var alternate = fiber.alternate;
        alternate && markRetryLaneImpl(alternate, retryLane);
      }
      function attemptContinuousHydration$1(fiber) {
        if (fiber.tag === SuspenseComponent) {
          var lane = SelectiveHydrationLane, root2 = enqueueConcurrentRenderForLane(fiber, lane);
          if (root2 !== null) {
            var eventTime = requestEventTime();
            scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
          }
          markRetryLaneIfNotHydrated(fiber, lane);
        }
      }
      function attemptHydrationAtCurrentPriority$1(fiber) {
        if (fiber.tag === SuspenseComponent) {
          var lane = requestUpdateLane(fiber), root2 = enqueueConcurrentRenderForLane(fiber, lane);
          if (root2 !== null) {
            var eventTime = requestEventTime();
            scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
          }
          markRetryLaneIfNotHydrated(fiber, lane);
        }
      }
      function findHostInstanceWithNoPortals(fiber) {
        var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
        return hostFiber === null ? null : hostFiber.stateNode;
      }
      var shouldErrorImpl = function(fiber) {
        return null;
      };
      function shouldError(fiber) {
        return shouldErrorImpl(fiber);
      }
      var shouldSuspendImpl = function(fiber) {
        return !1;
      };
      function shouldSuspend(fiber) {
        return shouldSuspendImpl(fiber);
      }
      var overrideHookState = null, overrideHookStateDeletePath = null, overrideHookStateRenamePath = null, overrideProps = null, overridePropsDeletePath = null, overridePropsRenamePath = null, scheduleUpdate = null, setErrorHandler = null, setSuspenseHandler = null;
      {
        var copyWithDeleteImpl = function(obj, path, index4) {
          var key = path[index4], updated = isArray(obj) ? obj.slice() : assign({}, obj);
          return index4 + 1 === path.length ? (isArray(updated) ? updated.splice(key, 1) : delete updated[key], updated) : (updated[key] = copyWithDeleteImpl(obj[key], path, index4 + 1), updated);
        }, copyWithDelete = function(obj, path) {
          return copyWithDeleteImpl(obj, path, 0);
        }, copyWithRenameImpl = function(obj, oldPath, newPath, index4) {
          var oldKey = oldPath[index4], updated = isArray(obj) ? obj.slice() : assign({}, obj);
          if (index4 + 1 === oldPath.length) {
            var newKey = newPath[index4];
            updated[newKey] = updated[oldKey], isArray(updated) ? updated.splice(oldKey, 1) : delete updated[oldKey];
          } else
            updated[oldKey] = copyWithRenameImpl(
              // $FlowFixMe number or string is fine here
              obj[oldKey],
              oldPath,
              newPath,
              index4 + 1
            );
          return updated;
        }, copyWithRename = function(obj, oldPath, newPath) {
          if (oldPath.length !== newPath.length) {
            warn("copyWithRename() expects paths of the same length");
            return;
          } else
            for (var i7 = 0; i7 < newPath.length - 1; i7++)
              if (oldPath[i7] !== newPath[i7]) {
                warn("copyWithRename() expects paths to be the same except for the deepest key");
                return;
              }
          return copyWithRenameImpl(obj, oldPath, newPath, 0);
        }, copyWithSetImpl = function(obj, path, index4, value) {
          if (index4 >= path.length)
            return value;
          var key = path[index4], updated = isArray(obj) ? obj.slice() : assign({}, obj);
          return updated[key] = copyWithSetImpl(obj[key], path, index4 + 1, value), updated;
        }, copyWithSet = function(obj, path, value) {
          return copyWithSetImpl(obj, path, 0, value);
        }, findHook = function(fiber, id) {
          for (var currentHook2 = fiber.memoizedState; currentHook2 !== null && id > 0; )
            currentHook2 = currentHook2.next, id--;
          return currentHook2;
        };
        overrideHookState = function(fiber, id, path, value) {
          var hook = findHook(fiber, id);
          if (hook !== null) {
            var newState = copyWithSet(hook.memoizedState, path, value);
            hook.memoizedState = newState, hook.baseState = newState, fiber.memoizedProps = assign({}, fiber.memoizedProps);
            var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
            root2 !== null && scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
          }
        }, overrideHookStateDeletePath = function(fiber, id, path) {
          var hook = findHook(fiber, id);
          if (hook !== null) {
            var newState = copyWithDelete(hook.memoizedState, path);
            hook.memoizedState = newState, hook.baseState = newState, fiber.memoizedProps = assign({}, fiber.memoizedProps);
            var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
            root2 !== null && scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
          }
        }, overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {
          var hook = findHook(fiber, id);
          if (hook !== null) {
            var newState = copyWithRename(hook.memoizedState, oldPath, newPath);
            hook.memoizedState = newState, hook.baseState = newState, fiber.memoizedProps = assign({}, fiber.memoizedProps);
            var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
            root2 !== null && scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
          }
        }, overrideProps = function(fiber, path, value) {
          fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value), fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);
          var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
          root2 !== null && scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
        }, overridePropsDeletePath = function(fiber, path) {
          fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path), fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);
          var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
          root2 !== null && scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
        }, overridePropsRenamePath = function(fiber, oldPath, newPath) {
          fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath), fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);
          var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
          root2 !== null && scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
        }, scheduleUpdate = function(fiber) {
          var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
          root2 !== null && scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
        }, setErrorHandler = function(newShouldErrorImpl) {
          shouldErrorImpl = newShouldErrorImpl;
        }, setSuspenseHandler = function(newShouldSuspendImpl) {
          shouldSuspendImpl = newShouldSuspendImpl;
        };
      }
      function findHostInstanceByFiber(fiber) {
        var hostFiber = findCurrentHostFiber(fiber);
        return hostFiber === null ? null : hostFiber.stateNode;
      }
      function emptyFindFiberByHostInstance(instance) {
        return null;
      }
      function getCurrentFiberForDevTools() {
        return current;
      }
      function injectIntoDevTools(devToolsConfig) {
        var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance, ReactCurrentDispatcher2 = ReactSharedInternals.ReactCurrentDispatcher;
        return injectInternals({
          bundleType: devToolsConfig.bundleType,
          version: devToolsConfig.version,
          rendererPackageName: devToolsConfig.rendererPackageName,
          rendererConfig: devToolsConfig.rendererConfig,
          overrideHookState,
          overrideHookStateDeletePath,
          overrideHookStateRenamePath,
          overrideProps,
          overridePropsDeletePath,
          overridePropsRenamePath,
          setErrorHandler,
          setSuspenseHandler,
          scheduleUpdate,
          currentDispatcherRef: ReactCurrentDispatcher2,
          findHostInstanceByFiber,
          findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,
          // React Refresh
          findHostInstancesForRefresh,
          scheduleRefresh,
          scheduleRoot,
          setRefreshHandler,
          // Enables DevTools to append owner stacks to error messages in DEV mode.
          getCurrentFiber: getCurrentFiberForDevTools,
          // Enables DevTools to detect reconciler version rather than renderer version
          // which may not match for third party renderers.
          reconcilerVersion: ReactVersion
        });
      }
      var defaultOnRecoverableError = typeof reportError == "function" ? (
        // In modern browsers, reportError will dispatch an error event,
        // emulating an uncaught JavaScript error.
        reportError
      ) : function(error2) {
        console.error(error2);
      };
      function ReactDOMRoot(internalRoot) {
        this._internalRoot = internalRoot;
      }
      ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function(children) {
        var root2 = this._internalRoot;
        if (root2 === null)
          throw new Error("Cannot update an unmounted root.");
        {
          typeof arguments[1] == "function" ? error("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().") : isValidContainer(arguments[1]) ? error("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.") : typeof arguments[1] < "u" && error("You passed a second argument to root.render(...) but it only accepts one argument.");
          var container = root2.containerInfo;
          if (container.nodeType !== COMMENT_NODE) {
            var hostInstance = findHostInstanceWithNoPortals(root2.current);
            hostInstance && hostInstance.parentNode !== container && error("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
          }
        }
        updateContainer(children, root2, null, null);
      }, ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function() {
        typeof arguments[0] == "function" && error("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
        var root2 = this._internalRoot;
        if (root2 !== null) {
          this._internalRoot = null;
          var container = root2.containerInfo;
          isAlreadyRendering() && error("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition."), flushSync(function() {
            updateContainer(null, root2, null, null);
          }), unmarkContainerAsRoot(container);
        }
      };
      function createRoot(container, options2) {
        if (!isValidContainer(container))
          throw new Error("createRoot(...): Target container is not a DOM element.");
        warnIfReactDOMContainerInDEV(container);
        var isStrictMode = !1, concurrentUpdatesByDefaultOverride = !1, identifierPrefix = "", onRecoverableError = defaultOnRecoverableError, transitionCallbacks = null;
        options2 != null && (options2.hydrate ? warn("hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.") : typeof options2 == "object" && options2 !== null && options2.$$typeof === REACT_ELEMENT_TYPE && error(`You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:

  let root = createRoot(domContainer);
  root.render(<App />);`), options2.unstable_strictMode === !0 && (isStrictMode = !0), options2.identifierPrefix !== void 0 && (identifierPrefix = options2.identifierPrefix), options2.onRecoverableError !== void 0 && (onRecoverableError = options2.onRecoverableError), options2.transitionCallbacks !== void 0 && (transitionCallbacks = options2.transitionCallbacks));
        var root2 = createContainer(container, ConcurrentRoot, null, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
        markContainerAsRoot(root2.current, container);
        var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
        return listenToAllSupportedEvents(rootContainerElement), new ReactDOMRoot(root2);
      }
      function ReactDOMHydrationRoot(internalRoot) {
        this._internalRoot = internalRoot;
      }
      function scheduleHydration(target) {
        target && queueExplicitHydrationTarget(target);
      }
      ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = scheduleHydration;
      function hydrateRoot(container, initialChildren, options2) {
        if (!isValidContainer(container))
          throw new Error("hydrateRoot(...): Target container is not a DOM element.");
        warnIfReactDOMContainerInDEV(container), initialChildren === void 0 && error("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
        var hydrationCallbacks = options2 ?? null, mutableSources = options2 != null && options2.hydratedSources || null, isStrictMode = !1, concurrentUpdatesByDefaultOverride = !1, identifierPrefix = "", onRecoverableError = defaultOnRecoverableError;
        options2 != null && (options2.unstable_strictMode === !0 && (isStrictMode = !0), options2.identifierPrefix !== void 0 && (identifierPrefix = options2.identifierPrefix), options2.onRecoverableError !== void 0 && (onRecoverableError = options2.onRecoverableError));
        var root2 = createHydrationContainer(initialChildren, null, container, ConcurrentRoot, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
        if (markContainerAsRoot(root2.current, container), listenToAllSupportedEvents(container), mutableSources)
          for (var i7 = 0; i7 < mutableSources.length; i7++) {
            var mutableSource = mutableSources[i7];
            registerMutableSourceForHydration(root2, mutableSource);
          }
        return new ReactDOMHydrationRoot(root2);
      }
      function isValidContainer(node) {
        return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || !disableCommentsAsDOMContainers));
      }
      function isValidContainerLegacy(node) {
        return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === " react-mount-point-unstable "));
      }
      function warnIfReactDOMContainerInDEV(container) {
        container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === "BODY" && error("createRoot(): Creating roots directly with document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try using a container element created for your app."), isContainerMarkedAsRoot(container) && (container._reactRootContainer ? error("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.") : error("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it."));
      }
      var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner, topLevelUpdateWarnings;
      topLevelUpdateWarnings = function(container) {
        if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
          var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer.current);
          hostInstance && hostInstance.parentNode !== container && error("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
        }
        var isRootRenderedBySomeReact = !!container._reactRootContainer, rootEl = getReactRootElementInContainer(container), hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));
        hasNonRootReactChild && !isRootRenderedBySomeReact && error("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render."), container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === "BODY" && error("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
      };
      function getReactRootElementInContainer(container) {
        return container ? container.nodeType === DOCUMENT_NODE ? container.documentElement : container.firstChild : null;
      }
      function noopOnRecoverableError() {
      }
      function legacyCreateRootFromDOMContainer(container, initialChildren, parentComponent, callback, isHydrationContainer) {
        if (isHydrationContainer) {
          if (typeof callback == "function") {
            var originalCallback = callback;
            callback = function() {
              var instance = getPublicRootInstance(root2);
              originalCallback.call(instance);
            };
          }
          var root2 = createHydrationContainer(
            initialChildren,
            callback,
            container,
            LegacyRoot,
            null,
            // hydrationCallbacks
            !1,
            // isStrictMode
            !1,
            // concurrentUpdatesByDefaultOverride,
            "",
            // identifierPrefix
            noopOnRecoverableError
          );
          container._reactRootContainer = root2, markContainerAsRoot(root2.current, container);
          var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
          return listenToAllSupportedEvents(rootContainerElement), flushSync(), root2;
        } else {
          for (var rootSibling; rootSibling = container.lastChild; )
            container.removeChild(rootSibling);
          if (typeof callback == "function") {
            var _originalCallback = callback;
            callback = function() {
              var instance = getPublicRootInstance(_root);
              _originalCallback.call(instance);
            };
          }
          var _root = createContainer(
            container,
            LegacyRoot,
            null,
            // hydrationCallbacks
            !1,
            // isStrictMode
            !1,
            // concurrentUpdatesByDefaultOverride,
            "",
            // identifierPrefix
            noopOnRecoverableError
          );
          container._reactRootContainer = _root, markContainerAsRoot(_root.current, container);
          var _rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
          return listenToAllSupportedEvents(_rootContainerElement), flushSync(function() {
            updateContainer(initialChildren, _root, parentComponent, callback);
          }), _root;
        }
      }
      function warnOnInvalidCallback$1(callback, callerName) {
        callback !== null && typeof callback != "function" && error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
      }
      function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
        topLevelUpdateWarnings(container), warnOnInvalidCallback$1(callback === void 0 ? null : callback, "render");
        var maybeRoot = container._reactRootContainer, root2;
        if (!maybeRoot)
          root2 = legacyCreateRootFromDOMContainer(container, children, parentComponent, callback, forceHydrate);
        else {
          if (root2 = maybeRoot, typeof callback == "function") {
            var originalCallback = callback;
            callback = function() {
              var instance = getPublicRootInstance(root2);
              originalCallback.call(instance);
            };
          }
          updateContainer(children, root2, parentComponent, callback);
        }
        return getPublicRootInstance(root2);
      }
      function findDOMNode(componentOrElement) {
        {
          var owner = ReactCurrentOwner$3.current;
          if (owner !== null && owner.stateNode !== null) {
            var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
            warnedAboutRefsInRender || error("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromType(owner.type) || "A component"), owner.stateNode._warnedAboutRefsInRender = !0;
          }
        }
        return componentOrElement == null ? null : componentOrElement.nodeType === ELEMENT_NODE ? componentOrElement : findHostInstanceWithWarning(componentOrElement, "findDOMNode");
      }
      function hydrate(element, container, callback) {
        if (error("ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !isValidContainerLegacy(container))
          throw new Error("Target container is not a DOM element.");
        {
          var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === void 0;
          isModernRoot && error("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call hydrateRoot(container, element)?");
        }
        return legacyRenderSubtreeIntoContainer(null, element, container, !0, callback);
      }
      function render(element, container, callback) {
        if (error("ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !isValidContainerLegacy(container))
          throw new Error("Target container is not a DOM element.");
        {
          var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === void 0;
          isModernRoot && error("You are calling ReactDOM.render() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.render(element)?");
        }
        return legacyRenderSubtreeIntoContainer(null, element, container, !1, callback);
      }
      function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
        if (error("ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported in React 18. Consider using a portal instead. Until you switch to the createRoot API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot"), !isValidContainerLegacy(containerNode))
          throw new Error("Target container is not a DOM element.");
        if (parentComponent == null || !has(parentComponent))
          throw new Error("parentComponent must be a valid React Component");
        return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, !1, callback);
      }
      function unmountComponentAtNode(container) {
        if (!isValidContainerLegacy(container))
          throw new Error("unmountComponentAtNode(...): Target container is not a DOM element.");
        {
          var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === void 0;
          isModernRoot && error("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?");
        }
        if (container._reactRootContainer) {
          {
            var rootEl = getReactRootElementInContainer(container), renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);
            renderedByDifferentReact && error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
          }
          return flushSync(function() {
            legacyRenderSubtreeIntoContainer(null, null, container, !1, function() {
              container._reactRootContainer = null, unmarkContainerAsRoot(container);
            });
          }), !0;
        } else {
          {
            var _rootEl = getReactRootElementInContainer(container), hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl)), isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainerLegacy(container.parentNode) && !!container.parentNode._reactRootContainer;
            hasNonRootReactChild && error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", isContainerReactRoot ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
          }
          return !1;
        }
      }
      setAttemptSynchronousHydration(attemptSynchronousHydration$1), setAttemptContinuousHydration(attemptContinuousHydration$1), setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1), setGetCurrentUpdatePriority(getCurrentUpdatePriority), setAttemptHydrationAtPriority(runWithPriority), (typeof Map != "function" || // $FlowIssue Flow incorrectly thinks Map has no prototype
      Map.prototype == null || typeof Map.prototype.forEach != "function" || typeof Set != "function" || // $FlowIssue Flow incorrectly thinks Set has no prototype
      Set.prototype == null || typeof Set.prototype.clear != "function" || typeof Set.prototype.forEach != "function") && error("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"), setRestoreImplementation(restoreControlledState$3), setBatchingImplementation(batchedUpdates$1, discreteUpdates, flushSync);
      function createPortal$1(children, container) {
        var key = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
        if (!isValidContainer(container))
          throw new Error("Target container is not a DOM element.");
        return createPortal(children, container, null, key);
      }
      function renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
        return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);
      }
      var Internals = {
        usingClientEntryPoint: !1,
        // Keep in sync with ReactTestUtils.js.
        // This is an array for better minification.
        Events: [getInstanceFromNode, getNodeFromInstance, getFiberCurrentPropsFromNode, enqueueStateRestore, restoreStateIfNeeded, batchedUpdates$1]
      };
      function createRoot$1(container, options2) {
        return Internals.usingClientEntryPoint || error('You are importing createRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".'), createRoot(container, options2);
      }
      function hydrateRoot$1(container, initialChildren, options2) {
        return Internals.usingClientEntryPoint || error('You are importing hydrateRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".'), hydrateRoot(container, initialChildren, options2);
      }
      function flushSync$1(fn) {
        return isAlreadyRendering() && error("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task."), flushSync(fn);
      }
      var foundDevTools = injectIntoDevTools({
        findFiberByHostInstance: getClosestInstanceFromNode,
        bundleType: 1,
        version: ReactVersion,
        rendererPackageName: "react-dom"
      });
      if (!foundDevTools && canUseDOM && window.top === window.self && (navigator.userAgent.indexOf("Chrome") > -1 && navigator.userAgent.indexOf("Edge") === -1 || navigator.userAgent.indexOf("Firefox") > -1)) {
        var protocol = window.location.protocol;
        /^(https?|file):$/.test(protocol) && console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (protocol === "file:" ? `
You might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq` : ""), "font-weight:bold");
      }
      exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals, exports.createPortal = createPortal$1, exports.createRoot = createRoot$1, exports.findDOMNode = findDOMNode, exports.flushSync = flushSync$1, exports.hydrate = hydrate, exports.hydrateRoot = hydrateRoot$1, exports.render = render, exports.unmountComponentAtNode = unmountComponentAtNode, exports.unstable_batchedUpdates = batchedUpdates$1, exports.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer, exports.version = ReactVersion, typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop == "function" && __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
    })();
  }
});

// node_modules/react-dom/index.js
var require_react_dom = __commonJS({
  "node_modules/react-dom/index.js"(exports, module) {
    "use strict";
    module.exports = require_react_dom_development();
  }
});

// node_modules/react-responsive/dist/react-responsive.js
var require_react_responsive = __commonJS({
  "node_modules/react-responsive/dist/react-responsive.js"(exports, module) {
    (function(root, factory) {
      typeof exports == "object" && typeof module == "object" ? module.exports = factory(require_react()) : typeof define == "function" && define.amd ? define(["react"], factory) : typeof exports == "object" ? exports.MediaQuery = factory(require_react()) : root.MediaQuery = factory(root.React);
    })(exports, (__WEBPACK_EXTERNAL_MODULE_react__) => (
      /******/
      (() => {
        var __webpack_modules__ = {
          /***/
          "./node_modules/css-mediaquery/index.js": (
            /*!**********************************************!*\
              !*** ./node_modules/css-mediaquery/index.js ***!
              \**********************************************/
            /***/
            (__unused_webpack_module, exports2) => {
              "use strict";
              exports2.match = matchQuery, exports2.parse = parseQuery;
              var RE_MEDIA_QUERY = /(?:(only|not)?\s*([^\s\(\)]+)(?:\s*and)?\s*)?(.+)?/i, RE_MQ_EXPRESSION = /\(\s*([^\s\:\)]+)\s*(?:\:\s*([^\s\)]+))?\s*\)/, RE_MQ_FEATURE = /^(?:(min|max)-)?(.+)/, RE_LENGTH_UNIT = /(em|rem|px|cm|mm|in|pt|pc)?$/, RE_RESOLUTION_UNIT = /(dpi|dpcm|dppx)?$/;
              function matchQuery(mediaQuery, values) {
                return parseQuery(mediaQuery).some(function(query) {
                  var inverse = query.inverse, typeMatch = query.type === "all" || values.type === query.type;
                  if (typeMatch && inverse || !(typeMatch || inverse))
                    return !1;
                  var expressionsMatch = query.expressions.every(function(expression) {
                    var feature = expression.feature, modifier = expression.modifier, expValue = expression.value, value = values[feature];
                    if (!value)
                      return !1;
                    switch (feature) {
                      case "orientation":
                      case "scan":
                        return value.toLowerCase() === expValue.toLowerCase();
                      case "width":
                      case "height":
                      case "device-width":
                      case "device-height":
                        expValue = toPx(expValue), value = toPx(value);
                        break;
                      case "resolution":
                        expValue = toDpi(expValue), value = toDpi(value);
                        break;
                      case "aspect-ratio":
                      case "device-aspect-ratio":
                      case /* Deprecated */
                      "device-pixel-ratio":
                        expValue = toDecimal(expValue), value = toDecimal(value);
                        break;
                      case "grid":
                      case "color":
                      case "color-index":
                      case "monochrome":
                        expValue = parseInt(expValue, 10) || 1, value = parseInt(value, 10) || 0;
                        break;
                    }
                    switch (modifier) {
                      case "min":
                        return value >= expValue;
                      case "max":
                        return value <= expValue;
                      default:
                        return value === expValue;
                    }
                  });
                  return expressionsMatch && !inverse || !expressionsMatch && inverse;
                });
              }
              function parseQuery(mediaQuery) {
                return mediaQuery.split(",").map(function(query) {
                  query = query.trim();
                  var captures = query.match(RE_MEDIA_QUERY), modifier = captures[1], type = captures[2], expressions = captures[3] || "", parsed = {};
                  return parsed.inverse = !!modifier && modifier.toLowerCase() === "not", parsed.type = type ? type.toLowerCase() : "all", expressions = expressions.match(/\([^\)]+\)/g) || [], parsed.expressions = expressions.map(function(expression) {
                    var captures2 = expression.match(RE_MQ_EXPRESSION), feature = captures2[1].toLowerCase().match(RE_MQ_FEATURE);
                    return {
                      modifier: feature[1],
                      feature: feature[2],
                      value: captures2[2]
                    };
                  }), parsed;
                });
              }
              function toDecimal(ratio) {
                var decimal = Number(ratio), numbers;
                return decimal || (numbers = ratio.match(/^(\d+)\s*\/\s*(\d+)$/), decimal = numbers[1] / numbers[2]), decimal;
              }
              function toDpi(resolution) {
                var value = parseFloat(resolution), units = String(resolution).match(RE_RESOLUTION_UNIT)[1];
                switch (units) {
                  case "dpcm":
                    return value / 2.54;
                  case "dppx":
                    return value * 96;
                  default:
                    return value;
                }
              }
              function toPx(length2) {
                var value = parseFloat(length2), units = String(length2).match(RE_LENGTH_UNIT)[1];
                switch (units) {
                  case "em":
                    return value * 16;
                  case "rem":
                    return value * 16;
                  case "cm":
                    return value * 96 / 2.54;
                  case "mm":
                    return value * 96 / 2.54 / 10;
                  case "in":
                    return value * 96;
                  case "pt":
                    return value * 72;
                  case "pc":
                    return value * 72 / 12;
                  default:
                    return value;
                }
              }
            }
          ),
          /***/
          "./node_modules/hyphenate-style-name/index.js": (
            /*!****************************************************!*\
              !*** ./node_modules/hyphenate-style-name/index.js ***!
              \****************************************************/
            /***/
            (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
              "use strict";
              __webpack_require__2.r(__webpack_exports__2), __webpack_require__2.d(__webpack_exports__2, {
                /* harmony export */
                default: () => __WEBPACK_DEFAULT_EXPORT__
                /* harmony export */
              });
              var uppercasePattern = /[A-Z]/g, msPattern = /^ms-/, cache = {};
              function toHyphenLower(match) {
                return "-" + match.toLowerCase();
              }
              function hyphenateStyleName(name) {
                if (cache.hasOwnProperty(name))
                  return cache[name];
                var hName = name.replace(uppercasePattern, toHyphenLower);
                return cache[name] = msPattern.test(hName) ? "-" + hName : hName;
              }
              let __WEBPACK_DEFAULT_EXPORT__ = hyphenateStyleName;
            }
          ),
          /***/
          "./node_modules/matchmediaquery/index.js": (
            /*!***********************************************!*\
              !*** ./node_modules/matchmediaquery/index.js ***!
              \***********************************************/
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              "use strict";
              var staticMatch = __webpack_require__2(
                /*! css-mediaquery */
                "./node_modules/css-mediaquery/index.js"
              ).match, dynamicMatch = typeof window < "u" ? window.matchMedia : null;
              function Mql(query, values, forceStatic) {
                var self2 = this;
                if (dynamicMatch && !forceStatic) {
                  var mql = dynamicMatch.call(window, query);
                  this.matches = mql.matches, this.media = mql.media, mql.addListener(update);
                } else
                  this.matches = staticMatch(query, values), this.media = query;
                this.addListener = addListener, this.removeListener = removeListener, this.dispose = dispose;
                function addListener(listener) {
                  mql && mql.addListener(listener);
                }
                function removeListener(listener) {
                  mql && mql.removeListener(listener);
                }
                function update(evt) {
                  self2.matches = evt.matches, self2.media = evt.media;
                }
                function dispose() {
                  mql && mql.removeListener(update);
                }
              }
              function matchMedia(query, values, forceStatic) {
                return new Mql(query, values, forceStatic);
              }
              module2.exports = matchMedia;
            }
          ),
          /***/
          "./node_modules/object-assign/index.js": (
            /*!*********************************************!*\
              !*** ./node_modules/object-assign/index.js ***!
              \*********************************************/
            /***/
            (module2) => {
              "use strict";
              var getOwnPropertySymbols = Object.getOwnPropertySymbols, hasOwnProperty = Object.prototype.hasOwnProperty, propIsEnumerable = Object.prototype.propertyIsEnumerable;
              function toObject(val) {
                if (val == null)
                  throw new TypeError("Object.assign cannot be called with null or undefined");
                return Object(val);
              }
              function shouldUseNative() {
                try {
                  if (!Object.assign)
                    return !1;
                  var test1 = new String("abc");
                  if (test1[5] = "de", Object.getOwnPropertyNames(test1)[0] === "5")
                    return !1;
                  for (var test2 = {}, i7 = 0; i7 < 10; i7++)
                    test2["_" + String.fromCharCode(i7)] = i7;
                  var order2 = Object.getOwnPropertyNames(test2).map(function(n7) {
                    return test2[n7];
                  });
                  if (order2.join("") !== "0123456789")
                    return !1;
                  var test3 = {};
                  return "abcdefghijklmnopqrst".split("").forEach(function(letter) {
                    test3[letter] = letter;
                  }), Object.keys(Object.assign({}, test3)).join("") === "abcdefghijklmnopqrst";
                } catch {
                  return !1;
                }
              }
              module2.exports = shouldUseNative() ? Object.assign : function(target, source) {
                for (var from, to = toObject(target), symbols, s15 = 1; s15 < arguments.length; s15++) {
                  from = Object(arguments[s15]);
                  for (var key in from)
                    hasOwnProperty.call(from, key) && (to[key] = from[key]);
                  if (getOwnPropertySymbols) {
                    symbols = getOwnPropertySymbols(from);
                    for (var i7 = 0; i7 < symbols.length; i7++)
                      propIsEnumerable.call(from, symbols[i7]) && (to[symbols[i7]] = from[symbols[i7]]);
                  }
                }
                return to;
              };
            }
          ),
          /***/
          "./node_modules/prop-types/checkPropTypes.js": (
            /*!***************************************************!*\
              !*** ./node_modules/prop-types/checkPropTypes.js ***!
              \***************************************************/
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              "use strict";
              var printWarning = function() {
              }, ReactPropTypesSecret = __webpack_require__2(
                /*! ./lib/ReactPropTypesSecret */
                "./node_modules/prop-types/lib/ReactPropTypesSecret.js"
              ), loggedTypeFailures = {}, has = __webpack_require__2(
                /*! ./lib/has */
                "./node_modules/prop-types/lib/has.js"
              );
              printWarning = function(text) {
                var message = "Warning: " + text;
                typeof console < "u" && console.error(message);
                try {
                  throw new Error(message);
                } catch {
                }
              };
              function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
                for (var typeSpecName in typeSpecs)
                  if (has(typeSpecs, typeSpecName)) {
                    var error;
                    try {
                      if (typeof typeSpecs[typeSpecName] != "function") {
                        var err = Error(
                          (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
                        );
                        throw err.name = "Invariant Violation", err;
                      }
                      error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
                    } catch (ex) {
                      error = ex;
                    }
                    if (error && !(error instanceof Error) && printWarning(
                      (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
                    ), error instanceof Error && !(error.message in loggedTypeFailures)) {
                      loggedTypeFailures[error.message] = !0;
                      var stack = getStack ? getStack() : "";
                      printWarning(
                        "Failed " + location + " type: " + error.message + (stack ?? "")
                      );
                    }
                  }
              }
              checkPropTypes.resetWarningCache = function() {
                loggedTypeFailures = {};
              }, module2.exports = checkPropTypes;
            }
          ),
          /***/
          "./node_modules/prop-types/factoryWithTypeCheckers.js": (
            /*!************************************************************!*\
              !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
              \************************************************************/
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              "use strict";
              var ReactIs = __webpack_require__2(
                /*! react-is */
                "./node_modules/react-is/index.js"
              ), assign = __webpack_require__2(
                /*! object-assign */
                "./node_modules/object-assign/index.js"
              ), ReactPropTypesSecret = __webpack_require__2(
                /*! ./lib/ReactPropTypesSecret */
                "./node_modules/prop-types/lib/ReactPropTypesSecret.js"
              ), has = __webpack_require__2(
                /*! ./lib/has */
                "./node_modules/prop-types/lib/has.js"
              ), checkPropTypes = __webpack_require__2(
                /*! ./checkPropTypes */
                "./node_modules/prop-types/checkPropTypes.js"
              ), printWarning = function() {
              };
              printWarning = function(text) {
                var message = "Warning: " + text;
                typeof console < "u" && console.error(message);
                try {
                  throw new Error(message);
                } catch {
                }
              };
              function emptyFunctionThatReturnsNull() {
                return null;
              }
              module2.exports = function(isValidElement2, throwOnDirectAccess) {
                var ITERATOR_SYMBOL = typeof Symbol == "function" && Symbol.iterator, FAUX_ITERATOR_SYMBOL = "@@iterator";
                function getIteratorFn(maybeIterable) {
                  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
                  if (typeof iteratorFn == "function")
                    return iteratorFn;
                }
                var ANONYMOUS = "<<anonymous>>", ReactPropTypes = {
                  array: createPrimitiveTypeChecker("array"),
                  bigint: createPrimitiveTypeChecker("bigint"),
                  bool: createPrimitiveTypeChecker("boolean"),
                  func: createPrimitiveTypeChecker("function"),
                  number: createPrimitiveTypeChecker("number"),
                  object: createPrimitiveTypeChecker("object"),
                  string: createPrimitiveTypeChecker("string"),
                  symbol: createPrimitiveTypeChecker("symbol"),
                  any: createAnyTypeChecker(),
                  arrayOf: createArrayOfTypeChecker,
                  element: createElementTypeChecker(),
                  elementType: createElementTypeTypeChecker(),
                  instanceOf: createInstanceTypeChecker,
                  node: createNodeChecker(),
                  objectOf: createObjectOfTypeChecker,
                  oneOf: createEnumTypeChecker,
                  oneOfType: createUnionTypeChecker,
                  shape: createShapeTypeChecker,
                  exact: createStrictShapeTypeChecker
                };
                function is(x5, y6) {
                  return x5 === y6 ? x5 !== 0 || 1 / x5 === 1 / y6 : x5 !== x5 && y6 !== y6;
                }
                function PropTypeError(message, data2) {
                  this.message = message, this.data = data2 && typeof data2 == "object" ? data2 : {}, this.stack = "";
                }
                PropTypeError.prototype = Error.prototype;
                function createChainableTypeChecker(validate2) {
                  var manualPropTypeCallCache = {}, manualPropTypeWarningCount = 0;
                  function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
                    if (componentName = componentName || ANONYMOUS, propFullName = propFullName || propName, secret !== ReactPropTypesSecret) {
                      if (throwOnDirectAccess) {
                        var err = new Error(
                          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
                        );
                        throw err.name = "Invariant Violation", err;
                      } else if (typeof console < "u") {
                        var cacheKey = componentName + ":" + propName;
                        !manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
                        manualPropTypeWarningCount < 3 && (printWarning(
                          "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                        ), manualPropTypeCallCache[cacheKey] = !0, manualPropTypeWarningCount++);
                      }
                    }
                    return props[propName] == null ? isRequired ? props[propName] === null ? new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`.")) : new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`.")) : null : validate2(props, propName, componentName, location, propFullName);
                  }
                  var chainedCheckType = checkType.bind(null, !1);
                  return chainedCheckType.isRequired = checkType.bind(null, !0), chainedCheckType;
                }
                function createPrimitiveTypeChecker(expectedType) {
                  function validate2(props, propName, componentName, location, propFullName, secret) {
                    var propValue = props[propName], propType = getPropType(propValue);
                    if (propType !== expectedType) {
                      var preciseType = getPreciseType(propValue);
                      return new PropTypeError(
                        "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
                        { expectedType }
                      );
                    }
                    return null;
                  }
                  return createChainableTypeChecker(validate2);
                }
                function createAnyTypeChecker() {
                  return createChainableTypeChecker(emptyFunctionThatReturnsNull);
                }
                function createArrayOfTypeChecker(typeChecker) {
                  function validate2(props, propName, componentName, location, propFullName) {
                    if (typeof typeChecker != "function")
                      return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
                    var propValue = props[propName];
                    if (!Array.isArray(propValue)) {
                      var propType = getPropType(propValue);
                      return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
                    }
                    for (var i7 = 0; i7 < propValue.length; i7++) {
                      var error = typeChecker(propValue, i7, componentName, location, propFullName + "[" + i7 + "]", ReactPropTypesSecret);
                      if (error instanceof Error)
                        return error;
                    }
                    return null;
                  }
                  return createChainableTypeChecker(validate2);
                }
                function createElementTypeChecker() {
                  function validate2(props, propName, componentName, location, propFullName) {
                    var propValue = props[propName];
                    if (!isValidElement2(propValue)) {
                      var propType = getPropType(propValue);
                      return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
                    }
                    return null;
                  }
                  return createChainableTypeChecker(validate2);
                }
                function createElementTypeTypeChecker() {
                  function validate2(props, propName, componentName, location, propFullName) {
                    var propValue = props[propName];
                    if (!ReactIs.isValidElementType(propValue)) {
                      var propType = getPropType(propValue);
                      return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
                    }
                    return null;
                  }
                  return createChainableTypeChecker(validate2);
                }
                function createInstanceTypeChecker(expectedClass) {
                  function validate2(props, propName, componentName, location, propFullName) {
                    if (!(props[propName] instanceof expectedClass)) {
                      var expectedClassName = expectedClass.name || ANONYMOUS, actualClassName = getClassName(props[propName]);
                      return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
                    }
                    return null;
                  }
                  return createChainableTypeChecker(validate2);
                }
                function createEnumTypeChecker(expectedValues) {
                  if (!Array.isArray(expectedValues))
                    return arguments.length > 1 ? printWarning(
                      "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
                    ) : printWarning("Invalid argument supplied to oneOf, expected an array."), emptyFunctionThatReturnsNull;
                  function validate2(props, propName, componentName, location, propFullName) {
                    for (var propValue = props[propName], i7 = 0; i7 < expectedValues.length; i7++)
                      if (is(propValue, expectedValues[i7]))
                        return null;
                    var valuesString = JSON.stringify(expectedValues, function(key, value) {
                      var type = getPreciseType(value);
                      return type === "symbol" ? String(value) : value;
                    });
                    return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
                  }
                  return createChainableTypeChecker(validate2);
                }
                function createObjectOfTypeChecker(typeChecker) {
                  function validate2(props, propName, componentName, location, propFullName) {
                    if (typeof typeChecker != "function")
                      return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
                    var propValue = props[propName], propType = getPropType(propValue);
                    if (propType !== "object")
                      return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
                    for (var key in propValue)
                      if (has(propValue, key)) {
                        var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                        if (error instanceof Error)
                          return error;
                      }
                    return null;
                  }
                  return createChainableTypeChecker(validate2);
                }
                function createUnionTypeChecker(arrayOfTypeCheckers) {
                  if (!Array.isArray(arrayOfTypeCheckers))
                    return printWarning("Invalid argument supplied to oneOfType, expected an instance of array."), emptyFunctionThatReturnsNull;
                  for (var i7 = 0; i7 < arrayOfTypeCheckers.length; i7++) {
                    var checker = arrayOfTypeCheckers[i7];
                    if (typeof checker != "function")
                      return printWarning(
                        "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i7 + "."
                      ), emptyFunctionThatReturnsNull;
                  }
                  function validate2(props, propName, componentName, location, propFullName) {
                    for (var expectedTypes = [], i8 = 0; i8 < arrayOfTypeCheckers.length; i8++) {
                      var checker2 = arrayOfTypeCheckers[i8], checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
                      if (checkerResult == null)
                        return null;
                      checkerResult.data && has(checkerResult.data, "expectedType") && expectedTypes.push(checkerResult.data.expectedType);
                    }
                    var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
                    return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
                  }
                  return createChainableTypeChecker(validate2);
                }
                function createNodeChecker() {
                  function validate2(props, propName, componentName, location, propFullName) {
                    return isNode(props[propName]) ? null : new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
                  }
                  return createChainableTypeChecker(validate2);
                }
                function invalidValidatorError(componentName, location, propFullName, key, type) {
                  return new PropTypeError(
                    (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
                  );
                }
                function createShapeTypeChecker(shapeTypes) {
                  function validate2(props, propName, componentName, location, propFullName) {
                    var propValue = props[propName], propType = getPropType(propValue);
                    if (propType !== "object")
                      return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
                    for (var key in shapeTypes) {
                      var checker = shapeTypes[key];
                      if (typeof checker != "function")
                        return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                      var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                      if (error)
                        return error;
                    }
                    return null;
                  }
                  return createChainableTypeChecker(validate2);
                }
                function createStrictShapeTypeChecker(shapeTypes) {
                  function validate2(props, propName, componentName, location, propFullName) {
                    var propValue = props[propName], propType = getPropType(propValue);
                    if (propType !== "object")
                      return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
                    var allKeys = assign({}, props[propName], shapeTypes);
                    for (var key in allKeys) {
                      var checker = shapeTypes[key];
                      if (has(shapeTypes, key) && typeof checker != "function")
                        return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                      if (!checker)
                        return new PropTypeError(
                          "Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(shapeTypes), null, "  ")
                        );
                      var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                      if (error)
                        return error;
                    }
                    return null;
                  }
                  return createChainableTypeChecker(validate2);
                }
                function isNode(propValue) {
                  switch (typeof propValue) {
                    case "number":
                    case "string":
                    case "undefined":
                      return !0;
                    case "boolean":
                      return !propValue;
                    case "object":
                      if (Array.isArray(propValue))
                        return propValue.every(isNode);
                      if (propValue === null || isValidElement2(propValue))
                        return !0;
                      var iteratorFn = getIteratorFn(propValue);
                      if (iteratorFn) {
                        var iterator = iteratorFn.call(propValue), step;
                        if (iteratorFn !== propValue.entries) {
                          for (; !(step = iterator.next()).done; )
                            if (!isNode(step.value))
                              return !1;
                        } else
                          for (; !(step = iterator.next()).done; ) {
                            var entry2 = step.value;
                            if (entry2 && !isNode(entry2[1]))
                              return !1;
                          }
                      } else
                        return !1;
                      return !0;
                    default:
                      return !1;
                  }
                }
                function isSymbol(propType, propValue) {
                  return propType === "symbol" ? !0 : propValue ? propValue["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && propValue instanceof Symbol : !1;
                }
                function getPropType(propValue) {
                  var propType = typeof propValue;
                  return Array.isArray(propValue) ? "array" : propValue instanceof RegExp ? "object" : isSymbol(propType, propValue) ? "symbol" : propType;
                }
                function getPreciseType(propValue) {
                  if (typeof propValue > "u" || propValue === null)
                    return "" + propValue;
                  var propType = getPropType(propValue);
                  if (propType === "object") {
                    if (propValue instanceof Date)
                      return "date";
                    if (propValue instanceof RegExp)
                      return "regexp";
                  }
                  return propType;
                }
                function getPostfixForTypeWarning(value) {
                  var type = getPreciseType(value);
                  switch (type) {
                    case "array":
                    case "object":
                      return "an " + type;
                    case "boolean":
                    case "date":
                    case "regexp":
                      return "a " + type;
                    default:
                      return type;
                  }
                }
                function getClassName(propValue) {
                  return !propValue.constructor || !propValue.constructor.name ? ANONYMOUS : propValue.constructor.name;
                }
                return ReactPropTypes.checkPropTypes = checkPropTypes, ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache, ReactPropTypes.PropTypes = ReactPropTypes, ReactPropTypes;
              };
            }
          ),
          /***/
          "./node_modules/prop-types/index.js": (
            /*!******************************************!*\
              !*** ./node_modules/prop-types/index.js ***!
              \******************************************/
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              var ReactIs = __webpack_require__2(
                /*! react-is */
                "./node_modules/react-is/index.js"
              ), throwOnDirectAccess = !0;
              module2.exports = __webpack_require__2(
                /*! ./factoryWithTypeCheckers */
                "./node_modules/prop-types/factoryWithTypeCheckers.js"
              )(ReactIs.isElement, throwOnDirectAccess);
            }
          ),
          /***/
          "./node_modules/prop-types/lib/ReactPropTypesSecret.js": (
            /*!*************************************************************!*\
              !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
              \*************************************************************/
            /***/
            (module2) => {
              "use strict";
              var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
              module2.exports = ReactPropTypesSecret;
            }
          ),
          /***/
          "./node_modules/prop-types/lib/has.js": (
            /*!********************************************!*\
              !*** ./node_modules/prop-types/lib/has.js ***!
              \********************************************/
            /***/
            (module2) => {
              module2.exports = Function.call.bind(Object.prototype.hasOwnProperty);
            }
          ),
          /***/
          "./node_modules/react-is/cjs/react-is.development.js": (
            /*!***********************************************************!*\
              !*** ./node_modules/react-is/cjs/react-is.development.js ***!
              \***********************************************************/
            /***/
            (__unused_webpack_module, exports2) => {
              "use strict";
              (function() {
                "use strict";
                var hasSymbol = typeof Symbol == "function" && Symbol.for, REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103, REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106, REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107, REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108, REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114, REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109, REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110, REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111, REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111, REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112, REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113, REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120, REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115, REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116, REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121, REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117, REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118, REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
                function isValidElementType(type) {
                  return typeof type == "string" || typeof type == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
                  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type == "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
                }
                function typeOf(object) {
                  if (typeof object == "object" && object !== null) {
                    var $$typeof = object.$$typeof;
                    switch ($$typeof) {
                      case REACT_ELEMENT_TYPE:
                        var type = object.type;
                        switch (type) {
                          case REACT_ASYNC_MODE_TYPE:
                          case REACT_CONCURRENT_MODE_TYPE:
                          case REACT_FRAGMENT_TYPE:
                          case REACT_PROFILER_TYPE:
                          case REACT_STRICT_MODE_TYPE:
                          case REACT_SUSPENSE_TYPE:
                            return type;
                          default:
                            var $$typeofType = type && type.$$typeof;
                            switch ($$typeofType) {
                              case REACT_CONTEXT_TYPE:
                              case REACT_FORWARD_REF_TYPE:
                              case REACT_LAZY_TYPE:
                              case REACT_MEMO_TYPE:
                              case REACT_PROVIDER_TYPE:
                                return $$typeofType;
                              default:
                                return $$typeof;
                            }
                        }
                      case REACT_PORTAL_TYPE:
                        return $$typeof;
                    }
                  }
                }
                var AsyncMode = REACT_ASYNC_MODE_TYPE, ConcurrentMode = REACT_CONCURRENT_MODE_TYPE, ContextConsumer = REACT_CONTEXT_TYPE, ContextProvider = REACT_PROVIDER_TYPE, Element2 = REACT_ELEMENT_TYPE, ForwardRef10 = REACT_FORWARD_REF_TYPE, Fragment30 = REACT_FRAGMENT_TYPE, Lazy = REACT_LAZY_TYPE, Memo = REACT_MEMO_TYPE, Portal = REACT_PORTAL_TYPE, Profiler = REACT_PROFILER_TYPE, StrictMode = REACT_STRICT_MODE_TYPE, Suspense10 = REACT_SUSPENSE_TYPE, hasWarnedAboutDeprecatedIsAsyncMode = !1;
                function isAsyncMode(object) {
                  return hasWarnedAboutDeprecatedIsAsyncMode || (hasWarnedAboutDeprecatedIsAsyncMode = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
                }
                function isConcurrentMode(object) {
                  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
                }
                function isContextConsumer(object) {
                  return typeOf(object) === REACT_CONTEXT_TYPE;
                }
                function isContextProvider(object) {
                  return typeOf(object) === REACT_PROVIDER_TYPE;
                }
                function isElement(object) {
                  return typeof object == "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
                }
                function isForwardRef(object) {
                  return typeOf(object) === REACT_FORWARD_REF_TYPE;
                }
                function isFragment(object) {
                  return typeOf(object) === REACT_FRAGMENT_TYPE;
                }
                function isLazy(object) {
                  return typeOf(object) === REACT_LAZY_TYPE;
                }
                function isMemo(object) {
                  return typeOf(object) === REACT_MEMO_TYPE;
                }
                function isPortal(object) {
                  return typeOf(object) === REACT_PORTAL_TYPE;
                }
                function isProfiler(object) {
                  return typeOf(object) === REACT_PROFILER_TYPE;
                }
                function isStrictMode(object) {
                  return typeOf(object) === REACT_STRICT_MODE_TYPE;
                }
                function isSuspense(object) {
                  return typeOf(object) === REACT_SUSPENSE_TYPE;
                }
                exports2.AsyncMode = AsyncMode, exports2.ConcurrentMode = ConcurrentMode, exports2.ContextConsumer = ContextConsumer, exports2.ContextProvider = ContextProvider, exports2.Element = Element2, exports2.ForwardRef = ForwardRef10, exports2.Fragment = Fragment30, exports2.Lazy = Lazy, exports2.Memo = Memo, exports2.Portal = Portal, exports2.Profiler = Profiler, exports2.StrictMode = StrictMode, exports2.Suspense = Suspense10, exports2.isAsyncMode = isAsyncMode, exports2.isConcurrentMode = isConcurrentMode, exports2.isContextConsumer = isContextConsumer, exports2.isContextProvider = isContextProvider, exports2.isElement = isElement, exports2.isForwardRef = isForwardRef, exports2.isFragment = isFragment, exports2.isLazy = isLazy, exports2.isMemo = isMemo, exports2.isPortal = isPortal, exports2.isProfiler = isProfiler, exports2.isStrictMode = isStrictMode, exports2.isSuspense = isSuspense, exports2.isValidElementType = isValidElementType, exports2.typeOf = typeOf;
              })();
            }
          ),
          /***/
          "./node_modules/react-is/index.js": (
            /*!****************************************!*\
              !*** ./node_modules/react-is/index.js ***!
              \****************************************/
            /***/
            (module2, __unused_webpack_exports, __webpack_require__2) => {
              "use strict";
              module2.exports = __webpack_require__2(
                /*! ./cjs/react-is.development.js */
                "./node_modules/react-is/cjs/react-is.development.js"
              );
            }
          ),
          /***/
          "./node_modules/shallow-equal/dist/index.esm.js": (
            /*!******************************************************!*\
              !*** ./node_modules/shallow-equal/dist/index.esm.js ***!
              \******************************************************/
            /***/
            (__unused_webpack_module, __webpack_exports__2, __webpack_require__2) => {
              "use strict";
              __webpack_require__2.r(__webpack_exports__2), __webpack_require__2.d(__webpack_exports__2, {
                /* harmony export */
                shallowEqualArrays: () => (
                  /* binding */
                  shallowEqualArrays
                ),
                /* harmony export */
                shallowEqualObjects: () => (
                  /* binding */
                  shallowEqualObjects
                )
                /* harmony export */
              });
              function shallowEqualObjects(objA, objB) {
                if (objA === objB)
                  return !0;
                if (!objA || !objB)
                  return !1;
                var aKeys = Object.keys(objA), bKeys = Object.keys(objB), len = aKeys.length;
                if (bKeys.length !== len)
                  return !1;
                for (var i7 = 0; i7 < len; i7++) {
                  var key = aKeys[i7];
                  if (objA[key] !== objB[key] || !Object.prototype.hasOwnProperty.call(objB, key))
                    return !1;
                }
                return !0;
              }
              function shallowEqualArrays(arrA, arrB) {
                if (arrA === arrB)
                  return !0;
                if (!arrA || !arrB)
                  return !1;
                var len = arrA.length;
                if (arrB.length !== len)
                  return !1;
                for (var i7 = 0; i7 < len; i7++)
                  if (arrA[i7] !== arrB[i7])
                    return !1;
                return !0;
              }
            }
          ),
          /***/
          "./src/Component.ts": (
            /*!**************************!*\
              !*** ./src/Component.ts ***!
              \**************************/
            /***/
            function(__unused_webpack_module, exports2, __webpack_require__2) {
              "use strict";
              var __rest3 = this && this.__rest || function(s15, e5) {
                var t18 = {};
                for (var p7 in s15)
                  Object.prototype.hasOwnProperty.call(s15, p7) && e5.indexOf(p7) < 0 && (t18[p7] = s15[p7]);
                if (s15 != null && typeof Object.getOwnPropertySymbols == "function")
                  for (var i7 = 0, p7 = Object.getOwnPropertySymbols(s15); i7 < p7.length; i7++)
                    e5.indexOf(p7[i7]) < 0 && Object.prototype.propertyIsEnumerable.call(s15, p7[i7]) && (t18[p7[i7]] = s15[p7[i7]]);
                return t18;
              }, __importDefault = this && this.__importDefault || function(mod) {
                return mod && mod.__esModule ? mod : { default: mod };
              };
              Object.defineProperty(exports2, "__esModule", { value: !0 });
              var useMediaQuery_1 = __importDefault(__webpack_require__2(
                /*! ./useMediaQuery */
                "./src/useMediaQuery.ts"
              )), MediaQuery = function(_a2) {
                var children = _a2.children, device = _a2.device, onChange = _a2.onChange, settings = __rest3(_a2, ["children", "device", "onChange"]), matches = (0, useMediaQuery_1.default)(settings, device, onChange);
                return typeof children == "function" ? children(matches) : matches ? children : null;
              };
              exports2.default = MediaQuery;
            }
          ),
          /***/
          "./src/Context.ts": (
            /*!************************!*\
              !*** ./src/Context.ts ***!
              \************************/
            /***/
            (__unused_webpack_module, exports2, __webpack_require__2) => {
              "use strict";
              Object.defineProperty(exports2, "__esModule", { value: !0 });
              var react_1 = __webpack_require__2(
                /*! react */
                "react"
              ), Context = (0, react_1.createContext)(void 0);
              exports2.default = Context;
            }
          ),
          /***/
          "./src/index.ts": (
            /*!**********************!*\
              !*** ./src/index.ts ***!
              \**********************/
            /***/
            function(__unused_webpack_module, exports2, __webpack_require__2) {
              "use strict";
              var __importDefault = this && this.__importDefault || function(mod) {
                return mod && mod.__esModule ? mod : { default: mod };
              };
              Object.defineProperty(exports2, "__esModule", { value: !0 }), exports2.Context = exports2.toQuery = exports2.useMediaQuery = exports2.default = void 0;
              var useMediaQuery_1 = __importDefault(__webpack_require__2(
                /*! ./useMediaQuery */
                "./src/useMediaQuery.ts"
              ));
              exports2.useMediaQuery = useMediaQuery_1.default;
              var Component_1 = __importDefault(__webpack_require__2(
                /*! ./Component */
                "./src/Component.ts"
              ));
              exports2.default = Component_1.default;
              var toQuery_1 = __importDefault(__webpack_require__2(
                /*! ./toQuery */
                "./src/toQuery.ts"
              ));
              exports2.toQuery = toQuery_1.default;
              var Context_1 = __importDefault(__webpack_require__2(
                /*! ./Context */
                "./src/Context.ts"
              ));
              exports2.Context = Context_1.default;
            }
          ),
          /***/
          "./src/mediaQuery.ts": (
            /*!***************************!*\
              !*** ./src/mediaQuery.ts ***!
              \***************************/
            /***/
            function(__unused_webpack_module, exports2, __webpack_require__2) {
              "use strict";
              var __assign2 = this && this.__assign || function() {
                return __assign2 = Object.assign || function(t18) {
                  for (var s15, i7 = 1, n7 = arguments.length; i7 < n7; i7++) {
                    s15 = arguments[i7];
                    for (var p7 in s15)
                      Object.prototype.hasOwnProperty.call(s15, p7) && (t18[p7] = s15[p7]);
                  }
                  return t18;
                }, __assign2.apply(this, arguments);
              }, __rest3 = this && this.__rest || function(s15, e5) {
                var t18 = {};
                for (var p7 in s15)
                  Object.prototype.hasOwnProperty.call(s15, p7) && e5.indexOf(p7) < 0 && (t18[p7] = s15[p7]);
                if (s15 != null && typeof Object.getOwnPropertySymbols == "function")
                  for (var i7 = 0, p7 = Object.getOwnPropertySymbols(s15); i7 < p7.length; i7++)
                    e5.indexOf(p7[i7]) < 0 && Object.prototype.propertyIsEnumerable.call(s15, p7[i7]) && (t18[p7[i7]] = s15[p7[i7]]);
                return t18;
              }, __importDefault = this && this.__importDefault || function(mod) {
                return mod && mod.__esModule ? mod : { default: mod };
              };
              Object.defineProperty(exports2, "__esModule", { value: !0 });
              var prop_types_1 = __importDefault(__webpack_require__2(
                /*! prop-types */
                "./node_modules/prop-types/index.js"
              )), stringOrNumber = prop_types_1.default.oneOfType([
                prop_types_1.default.string,
                prop_types_1.default.number
              ]), types = {
                all: prop_types_1.default.bool,
                grid: prop_types_1.default.bool,
                aural: prop_types_1.default.bool,
                braille: prop_types_1.default.bool,
                handheld: prop_types_1.default.bool,
                print: prop_types_1.default.bool,
                projection: prop_types_1.default.bool,
                screen: prop_types_1.default.bool,
                tty: prop_types_1.default.bool,
                tv: prop_types_1.default.bool,
                embossed: prop_types_1.default.bool
              }, matchers = {
                orientation: prop_types_1.default.oneOf([
                  "portrait",
                  "landscape"
                ]),
                scan: prop_types_1.default.oneOf([
                  "progressive",
                  "interlace"
                ]),
                aspectRatio: prop_types_1.default.string,
                deviceAspectRatio: prop_types_1.default.string,
                height: stringOrNumber,
                deviceHeight: stringOrNumber,
                width: stringOrNumber,
                deviceWidth: stringOrNumber,
                color: prop_types_1.default.bool,
                colorIndex: prop_types_1.default.bool,
                monochrome: prop_types_1.default.bool,
                resolution: stringOrNumber,
                type: Object.keys(types)
              }, type = matchers.type, featureMatchers = __rest3(
                matchers,
                ["type"]
              ), features = __assign2({ minAspectRatio: prop_types_1.default.string, maxAspectRatio: prop_types_1.default.string, minDeviceAspectRatio: prop_types_1.default.string, maxDeviceAspectRatio: prop_types_1.default.string, minHeight: stringOrNumber, maxHeight: stringOrNumber, minDeviceHeight: stringOrNumber, maxDeviceHeight: stringOrNumber, minWidth: stringOrNumber, maxWidth: stringOrNumber, minDeviceWidth: stringOrNumber, maxDeviceWidth: stringOrNumber, minColor: prop_types_1.default.number, maxColor: prop_types_1.default.number, minColorIndex: prop_types_1.default.number, maxColorIndex: prop_types_1.default.number, minMonochrome: prop_types_1.default.number, maxMonochrome: prop_types_1.default.number, minResolution: stringOrNumber, maxResolution: stringOrNumber }, featureMatchers), all = __assign2(__assign2({}, types), features);
              exports2.default = {
                all,
                types,
                matchers,
                features
              };
            }
          ),
          /***/
          "./src/toQuery.ts": (
            /*!************************!*\
              !*** ./src/toQuery.ts ***!
              \************************/
            /***/
            function(__unused_webpack_module, exports2, __webpack_require__2) {
              "use strict";
              var __importDefault = this && this.__importDefault || function(mod) {
                return mod && mod.__esModule ? mod : { default: mod };
              };
              Object.defineProperty(exports2, "__esModule", { value: !0 });
              var hyphenate_style_name_1 = __importDefault(__webpack_require__2(
                /*! hyphenate-style-name */
                "./node_modules/hyphenate-style-name/index.js"
              )), mediaQuery_1 = __importDefault(__webpack_require__2(
                /*! ./mediaQuery */
                "./src/mediaQuery.ts"
              )), negate = function(cond) {
                return "not ".concat(cond);
              }, keyVal = function(k2, v4) {
                var realKey = (0, hyphenate_style_name_1.default)(k2);
                return typeof v4 == "number" && (v4 = "".concat(v4, "px")), v4 === !0 ? realKey : v4 === !1 ? negate(realKey) : "(".concat(realKey, ": ").concat(v4, ")");
              }, join = function(conds) {
                return conds.join(" and ");
              }, toQuery = function(obj) {
                var rules = [];
                return Object.keys(mediaQuery_1.default.all).forEach(function(k2) {
                  var v4 = obj[k2];
                  v4 != null && rules.push(keyVal(k2, v4));
                }), join(rules);
              };
              exports2.default = toQuery;
            }
          ),
          /***/
          "./src/useMediaQuery.ts": (
            /*!******************************!*\
              !*** ./src/useMediaQuery.ts ***!
              \******************************/
            /***/
            function(__unused_webpack_module, exports2, __webpack_require__2) {
              "use strict";
              var __importDefault = this && this.__importDefault || function(mod) {
                return mod && mod.__esModule ? mod : { default: mod };
              };
              Object.defineProperty(exports2, "__esModule", { value: !0 });
              var react_1 = __webpack_require__2(
                /*! react */
                "react"
              ), matchmediaquery_1 = __importDefault(__webpack_require__2(
                /*! matchmediaquery */
                "./node_modules/matchmediaquery/index.js"
              )), hyphenate_style_name_1 = __importDefault(__webpack_require__2(
                /*! hyphenate-style-name */
                "./node_modules/hyphenate-style-name/index.js"
              )), shallow_equal_1 = __webpack_require__2(
                /*! shallow-equal */
                "./node_modules/shallow-equal/dist/index.esm.js"
              ), toQuery_1 = __importDefault(__webpack_require__2(
                /*! ./toQuery */
                "./src/toQuery.ts"
              )), Context_1 = __importDefault(__webpack_require__2(
                /*! ./Context */
                "./src/Context.ts"
              )), makeQuery = function(settings) {
                return settings.query || (0, toQuery_1.default)(settings);
              }, hyphenateKeys = function(obj) {
                if (obj) {
                  var keys2 = Object.keys(obj);
                  return keys2.reduce(function(result, key) {
                    return result[(0, hyphenate_style_name_1.default)(key)] = obj[key], result;
                  }, {});
                }
              }, useIsUpdate = function() {
                var ref = (0, react_1.useRef)(!1);
                return (0, react_1.useEffect)(function() {
                  ref.current = !0;
                }, []), ref.current;
              }, useDevice = function(deviceFromProps) {
                var deviceFromContext = (0, react_1.useContext)(Context_1.default), getDevice = function() {
                  return hyphenateKeys(deviceFromProps) || hyphenateKeys(deviceFromContext);
                }, _a2 = (0, react_1.useState)(getDevice), device = _a2[0], setDevice = _a2[1];
                return (0, react_1.useEffect)(function() {
                  var newDevice = getDevice();
                  (0, shallow_equal_1.shallowEqualObjects)(device, newDevice) || setDevice(newDevice);
                }, [deviceFromProps, deviceFromContext]), device;
              }, useQuery = function(settings) {
                var getQuery = function() {
                  return makeQuery(settings);
                }, _a2 = (0, react_1.useState)(getQuery), query = _a2[0], setQuery = _a2[1];
                return (0, react_1.useEffect)(function() {
                  var newQuery = getQuery();
                  query !== newQuery && setQuery(newQuery);
                }, [settings]), query;
              }, useMatchMedia = function(query, device) {
                var getMatchMedia = function() {
                  return (0, matchmediaquery_1.default)(query, device || {}, !!device);
                }, _a2 = (0, react_1.useState)(getMatchMedia), mq = _a2[0], setMq = _a2[1], isUpdate = useIsUpdate();
                return (0, react_1.useEffect)(function() {
                  if (isUpdate) {
                    var newMq_1 = getMatchMedia();
                    return setMq(newMq_1), function() {
                      newMq_1 && newMq_1.dispose();
                    };
                  }
                }, [query, device]), mq;
              }, useMatches3 = function(mediaQuery) {
                var _a2 = (0, react_1.useState)(mediaQuery.matches), matches = _a2[0], setMatches = _a2[1];
                return (0, react_1.useEffect)(function() {
                  var updateMatches = function(ev) {
                    setMatches(ev.matches);
                  };
                  return mediaQuery.addListener(updateMatches), setMatches(mediaQuery.matches), function() {
                    mediaQuery.removeListener(updateMatches);
                  };
                }, [mediaQuery]), matches;
              }, useMediaQuery11 = function(settings, device, onChange) {
                var deviceSettings = useDevice(device), query = useQuery(settings);
                if (!query)
                  throw new Error("Invalid or missing MediaQuery!");
                var mq = useMatchMedia(query, deviceSettings), matches = useMatches3(mq), isUpdate = useIsUpdate();
                return (0, react_1.useEffect)(function() {
                  isUpdate && onChange && onChange(matches);
                }, [matches]), (0, react_1.useEffect)(function() {
                  return function() {
                    mq && mq.dispose();
                  };
                }, []), matches;
              };
              exports2.default = useMediaQuery11;
            }
          ),
          /***/
          react: (
            /*!**************************************************************************************!*\
              !*** external {"commonjs":"react","commonjs2":"react","amd":"react","root":"React"} ***!
              \**************************************************************************************/
            /***/
            (module2) => {
              "use strict";
              module2.exports = __WEBPACK_EXTERNAL_MODULE_react__;
            }
          )
          /******/
        }, __webpack_module_cache__ = {};
        function __webpack_require__(moduleId) {
          var cachedModule = __webpack_module_cache__[moduleId];
          if (cachedModule !== void 0)
            return cachedModule.exports;
          var module2 = __webpack_module_cache__[moduleId] = {
            /******/
            // no module.id needed
            /******/
            // no module.loaded needed
            /******/
            exports: {}
            /******/
          };
          return __webpack_modules__[moduleId].call(module2.exports, module2, module2.exports, __webpack_require__), module2.exports;
        }
        __webpack_require__.d = (exports2, definition) => {
          for (var key in definition)
            __webpack_require__.o(definition, key) && !__webpack_require__.o(exports2, key) && Object.defineProperty(exports2, key, { enumerable: !0, get: definition[key] });
        }, __webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop), __webpack_require__.r = (exports2) => {
          typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(exports2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(exports2, "__esModule", { value: !0 });
        };
        var __webpack_exports__ = __webpack_require__("./src/index.ts");
        return __webpack_exports__;
      })()
    ));
  }
});

// node_modules/@shopify/hydrogen/dist/development/log-seo-tags-IG37ONQ2.js
var log_seo_tags_IG37ONQ2_exports = {};
__export(log_seo_tags_IG37ONQ2_exports, {
  default: () => Logger,
  logSeoTags: () => logSeoTags
});
function Logger({ headTags }) {
  return logSeoTags(headTags), null;
}
function logSeoTags(headTags) {
  console.log(" "), console.log("%cSEO Meta Tags", `${titleStyle}`), console.log(" "), headTags.forEach((tag) => {
    if (tag.tag === "script") {
      if (console.log("%c\u2022 JSON LD ", headingStyle), tag.children)
        try {
          console.table(JSON.parse(tag.children), ["name", "content"]);
        } catch {
          console.log(tag.children);
        }
    } else {
      if (console.log(`%c\u2022 ${tag.tag} `, headingStyle), tag.children)
        if (typeof tag.children == "string")
          console.log(`\u21B3 ${tag.children}`);
        else
          try {
            Object.entries(JSON.parse(tag.children)).map(
              ([key, val]) => console.log(`\u21B3 ${val}`)
            );
          } catch {
            console.log(tag.children);
          }
      if (tag.props.property === "og:image:url") {
        let urlKey = tag.props.content;
        fetchImage(urlKey).then((image) => {
          let imageStyle = `font-size: 400px; padding: 10px; background: white url(${image}) no-repeat center; background-size: contain;`;
          console.log("%c\u2022 Share image preview", headingStyle), console.log("%c  ", imageStyle), console.log(`\u21B3 ${urlKey}`);
        }).catch((err) => {
          console.error(err);
        });
      }
      Object.entries(tag.props).map(([key, val]) => {
        console.log(`\u21B3 ${key} \u2192 ${val}`);
      });
    }
    console.log(" ");
  });
}
async function fetchImage(url) {
  let buff = await (await (await fetch(url)).blob()).arrayBuffer();
  return `data:image/png;base64,${arrayBufferToBase64(buff)}`;
}
function arrayBufferToBase64(buffer) {
  let binary = "", bytes = new Uint8Array(buffer), len = bytes.byteLength;
  for (let index3 = 0; index3 < len; index3++)
    binary += String.fromCharCode(bytes[index3]);
  return btoa(binary);
}
var headingStyle, titleStyle, init_log_seo_tags_IG37ONQ2 = __esm({
  "node_modules/@shopify/hydrogen/dist/development/log-seo-tags-IG37ONQ2.js"() {
    headingStyle = "text-transform: uppercase;", titleStyle = "text-transform: uppercase; font-weight: bold; text-transform: uppercase;font-weight: bold";
  }
});

// node_modules/react-ga4/dist/gtag.js
var require_gtag = __commonJS({
  "node_modules/react-ga4/dist/gtag.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.default = void 0;
    var gtag = function() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
        args[_key] = arguments[_key];
      if (typeof window < "u") {
        var _window;
        typeof window.gtag > "u" && (window.dataLayer = window.dataLayer || [], window.gtag = function() {
          window.dataLayer.push(arguments);
        }), (_window = window).gtag.apply(_window, args);
      }
    }, _default = gtag;
    exports.default = _default;
  }
});

// node_modules/react-ga4/dist/format.js
var require_format = __commonJS({
  "node_modules/react-ga4/dist/format.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.default = format;
    var smallWords = /^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\.?|via)$/i;
    function toTitleCase(string) {
      return string.toString().trim().replace(/[A-Za-z0-9\u00C0-\u00FF]+[^\s-]*/g, function(match, index3, title) {
        return index3 > 0 && index3 + match.length !== title.length && match.search(smallWords) > -1 && title.charAt(index3 - 2) !== ":" && (title.charAt(index3 + match.length) !== "-" || title.charAt(index3 - 1) === "-") && title.charAt(index3 - 1).search(/[^\s-]/) < 0 ? match.toLowerCase() : match.substr(1).search(/[A-Z]|\../) > -1 ? match : match.charAt(0).toUpperCase() + match.substr(1);
      });
    }
    function mightBeEmail(s15) {
      return typeof s15 == "string" && s15.indexOf("@") !== -1;
    }
    var redacted = "REDACTED (Potential Email Address)";
    function redactEmail(string) {
      return mightBeEmail(string) ? (console.warn("This arg looks like an email address, redacting."), redacted) : string;
    }
    function format() {
      var s15 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", titleCase = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0, redactingEmail = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0, _str = s15 || "";
      return titleCase && (_str = toTitleCase(s15)), redactingEmail && (_str = redactEmail(_str)), _str;
    }
  }
});

// node_modules/react-ga4/dist/ga4.js
var require_ga4 = __commonJS({
  "node_modules/react-ga4/dist/ga4.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.default = exports.GA4 = void 0;
    var _gtag = _interopRequireDefault(require_gtag()), _format = _interopRequireDefault(require_format()), _excluded4 = ["eventCategory", "eventAction", "eventLabel", "eventValue", "hitType"], _excluded22 = ["title", "location"], _excluded32 = ["page", "hitType"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    function _typeof(obj) {
      return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
        return typeof obj2;
      } : function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    function _iterableToArray(iter) {
      if (typeof Symbol < "u" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray2(arr);
    }
    function ownKeys(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        })), keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpread(target) {
      for (var i7 = 1; i7 < arguments.length; i7++) {
        var source = arguments[i7] != null ? arguments[i7] : {};
        i7 % 2 ? ownKeys(Object(source), !0).forEach(function(key) {
          _defineProperty2(target, key, source[key]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
      return target;
    }
    function _slicedToArray2(arr, i7) {
      return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i7) || _unsupportedIterableToArray2(arr, i7) || _nonIterableRest2();
    }
    function _nonIterableRest2() {
      throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(o11);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _iterableToArrayLimit2(arr, i7) {
      var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i != null) {
        var _s, _e3, _x, _r, _arr = [], _n = !0, _d = !1;
        try {
          if (_x = (_i = _i.call(arr)).next, i7 === 0) {
            if (Object(_i) !== _i)
              return;
            _n = !1;
          } else
            for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i7); _n = !0)
              ;
        } catch (err) {
          _d = !0, _e3 = err;
        } finally {
          try {
            if (!_n && _i.return != null && (_r = _i.return(), Object(_r) !== _r))
              return;
          } finally {
            if (_d)
              throw _e3;
          }
        }
        return _arr;
      }
    }
    function _arrayWithHoles2(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _classCallCheck2(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties2(target, props) {
      for (var i7 = 0; i7 < props.length; i7++) {
        var descriptor = props[i7];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey2(descriptor.key), descriptor);
      }
    }
    function _createClass2(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties2(Constructor.prototype, protoProps), staticProps && _defineProperties2(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", { writable: !1 }), Constructor;
    }
    function _defineProperty2(obj, key, value) {
      return key = _toPropertyKey2(key), key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _toPropertyKey2(arg) {
      var key = _toPrimitive2(arg, "string");
      return _typeof(key) === "symbol" ? key : String(key);
    }
    function _toPrimitive2(input, hint) {
      if (_typeof(input) !== "object" || input === null)
        return input;
      var prim = input[Symbol.toPrimitive];
      if (prim !== void 0) {
        var res = prim.call(input, hint || "default");
        if (_typeof(res) !== "object")
          return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return (hint === "string" ? String : Number)(input);
    }
    var GA4 = /* @__PURE__ */ function() {
      function GA42() {
        var _this = this;
        _classCallCheck2(this, GA42), _defineProperty2(this, "reset", function() {
          _this.isInitialized = !1, _this._testMode = !1, _this._currentMeasurementId, _this._hasLoadedGA = !1, _this._isQueuing = !1, _this._queueGtag = [];
        }), _defineProperty2(this, "_gtag", function() {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
            args[_key] = arguments[_key];
          _this._testMode || _this._isQueuing ? _this._queueGtag.push(args) : _gtag.default.apply(void 0, args);
        }), _defineProperty2(this, "_loadGA", function(GA_MEASUREMENT_ID, nonce) {
          var gtagUrl = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "https://www.googletagmanager.com/gtag/js";
          if (!(typeof window > "u" || typeof document > "u") && !_this._hasLoadedGA) {
            var script = document.createElement("script");
            script.async = !0, script.src = "".concat(gtagUrl, "?id=").concat(GA_MEASUREMENT_ID), nonce && script.setAttribute("nonce", nonce), document.body.appendChild(script), window.dataLayer = window.dataLayer || [], window.gtag = function() {
              window.dataLayer.push(arguments);
            }, _this._hasLoadedGA = !0;
          }
        }), _defineProperty2(this, "_toGtagOptions", function(gaOptions) {
          if (gaOptions) {
            var mapFields = {
              // Old https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#cookieUpdate
              // New https://developers.google.com/analytics/devguides/collection/gtagjs/cookies-user-id#cookie_update
              cookieUpdate: "cookie_update",
              cookieExpires: "cookie_expires",
              cookieDomain: "cookie_domain",
              cookieFlags: "cookie_flags",
              // must be in set method?
              userId: "user_id",
              clientId: "client_id",
              anonymizeIp: "anonymize_ip",
              // https://support.google.com/analytics/answer/2853546?hl=en#zippy=%2Cin-this-article
              contentGroup1: "content_group1",
              contentGroup2: "content_group2",
              contentGroup3: "content_group3",
              contentGroup4: "content_group4",
              contentGroup5: "content_group5",
              // https://support.google.com/analytics/answer/9050852?hl=en
              allowAdFeatures: "allow_google_signals",
              allowAdPersonalizationSignals: "allow_ad_personalization_signals",
              nonInteraction: "non_interaction",
              page: "page_path",
              hitCallback: "event_callback"
            }, gtagOptions = Object.entries(gaOptions).reduce(function(prev, _ref) {
              var _ref2 = _slicedToArray2(_ref, 2), key = _ref2[0], value = _ref2[1];
              return mapFields[key] ? prev[mapFields[key]] = value : prev[key] = value, prev;
            }, {});
            return gtagOptions;
          }
        }), _defineProperty2(this, "initialize", function(GA_MEASUREMENT_ID) {
          var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          if (!GA_MEASUREMENT_ID)
            throw new Error("Require GA_MEASUREMENT_ID");
          var initConfigs = typeof GA_MEASUREMENT_ID == "string" ? [{
            trackingId: GA_MEASUREMENT_ID
          }] : GA_MEASUREMENT_ID;
          _this._currentMeasurementId = initConfigs[0].trackingId;
          var gaOptions = options.gaOptions, gtagOptions = options.gtagOptions, nonce = options.nonce, _options$testMode = options.testMode, testMode = _options$testMode === void 0 ? !1 : _options$testMode, gtagUrl = options.gtagUrl;
          if (_this._testMode = testMode, testMode || _this._loadGA(_this._currentMeasurementId, nonce, gtagUrl), _this.isInitialized || (_this._gtag("js", /* @__PURE__ */ new Date()), initConfigs.forEach(function(config) {
            var mergedGtagOptions = _objectSpread(_objectSpread(_objectSpread({}, _this._toGtagOptions(_objectSpread(_objectSpread({}, gaOptions), config.gaOptions))), gtagOptions), config.gtagOptions);
            Object.keys(mergedGtagOptions).length ? _this._gtag("config", config.trackingId, mergedGtagOptions) : _this._gtag("config", config.trackingId);
          })), _this.isInitialized = !0, !testMode) {
            var queues = _toConsumableArray(_this._queueGtag);
            for (_this._queueGtag = [], _this._isQueuing = !1; queues.length; ) {
              var queue = queues.shift();
              _this._gtag.apply(_this, _toConsumableArray(queue)), queue[0] === "get" && (_this._isQueuing = !0);
            }
          }
        }), _defineProperty2(this, "set", function(fieldsObject) {
          if (!fieldsObject) {
            console.warn("`fieldsObject` is required in .set()");
            return;
          }
          if (_typeof(fieldsObject) !== "object") {
            console.warn("Expected `fieldsObject` arg to be an Object");
            return;
          }
          Object.keys(fieldsObject).length === 0 && console.warn("empty `fieldsObject` given to .set()"), _this._gaCommand("set", fieldsObject);
        }), _defineProperty2(this, "_gaCommandSendEvent", function(eventCategory, eventAction, eventLabel, eventValue, fieldsObject) {
          _this._gtag("event", eventAction, _objectSpread(_objectSpread({
            event_category: eventCategory,
            event_label: eventLabel,
            value: eventValue
          }, fieldsObject && {
            non_interaction: fieldsObject.nonInteraction
          }), _this._toGtagOptions(fieldsObject)));
        }), _defineProperty2(this, "_gaCommandSendEventParameters", function() {
          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)
            args[_key2] = arguments[_key2];
          if (typeof args[0] == "string")
            _this._gaCommandSendEvent.apply(_this, _toConsumableArray(args.slice(1)));
          else {
            var _args$ = args[0], eventCategory = _args$.eventCategory, eventAction = _args$.eventAction, eventLabel = _args$.eventLabel, eventValue = _args$.eventValue, hitType = _args$.hitType, rest = _objectWithoutProperties(_args$, _excluded4);
            _this._gaCommandSendEvent(eventCategory, eventAction, eventLabel, eventValue, rest);
          }
        }), _defineProperty2(this, "_gaCommandSendTiming", function(timingCategory, timingVar, timingValue, timingLabel) {
          _this._gtag("event", "timing_complete", {
            name: timingVar,
            value: timingValue,
            event_category: timingCategory,
            event_label: timingLabel
          });
        }), _defineProperty2(this, "_gaCommandSendPageview", function(page, fieldsObject) {
          if (fieldsObject && Object.keys(fieldsObject).length) {
            var _this$_toGtagOptions = _this._toGtagOptions(fieldsObject), title = _this$_toGtagOptions.title, location = _this$_toGtagOptions.location, rest = _objectWithoutProperties(_this$_toGtagOptions, _excluded22);
            _this._gtag("event", "page_view", _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, page && {
              page_path: page
            }), title && {
              page_title: title
            }), location && {
              page_location: location
            }), rest));
          } else
            page ? _this._gtag("event", "page_view", {
              page_path: page
            }) : _this._gtag("event", "page_view");
        }), _defineProperty2(this, "_gaCommandSendPageviewParameters", function() {
          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++)
            args[_key3] = arguments[_key3];
          if (typeof args[0] == "string")
            _this._gaCommandSendPageview.apply(_this, _toConsumableArray(args.slice(1)));
          else {
            var _args$2 = args[0], page = _args$2.page, hitType = _args$2.hitType, rest = _objectWithoutProperties(_args$2, _excluded32);
            _this._gaCommandSendPageview(page, rest);
          }
        }), _defineProperty2(this, "_gaCommandSend", function() {
          for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++)
            args[_key4] = arguments[_key4];
          var hitType = typeof args[0] == "string" ? args[0] : args[0].hitType;
          switch (hitType) {
            case "event":
              _this._gaCommandSendEventParameters.apply(_this, args);
              break;
            case "pageview":
              _this._gaCommandSendPageviewParameters.apply(_this, args);
              break;
            case "timing":
              _this._gaCommandSendTiming.apply(_this, _toConsumableArray(args.slice(1)));
              break;
            case "screenview":
            case "transaction":
            case "item":
            case "social":
            case "exception":
              console.warn("Unsupported send command: ".concat(hitType));
              break;
            default:
              console.warn("Send command doesn't exist: ".concat(hitType));
          }
        }), _defineProperty2(this, "_gaCommandSet", function() {
          for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++)
            args[_key5] = arguments[_key5];
          typeof args[0] == "string" && (args[0] = _defineProperty2({}, args[0], args[1])), _this._gtag("set", _this._toGtagOptions(args[0]));
        }), _defineProperty2(this, "_gaCommand", function(command) {
          for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++)
            args[_key6 - 1] = arguments[_key6];
          switch (command) {
            case "send":
              _this._gaCommandSend.apply(_this, args);
              break;
            case "set":
              _this._gaCommandSet.apply(_this, args);
              break;
            default:
              console.warn("Command doesn't exist: ".concat(command));
          }
        }), _defineProperty2(this, "ga", function() {
          for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++)
            args[_key7] = arguments[_key7];
          if (typeof args[0] == "string")
            _this._gaCommand.apply(_this, args);
          else {
            var readyCallback = args[0];
            _this._gtag("get", _this._currentMeasurementId, "client_id", function(clientId) {
              _this._isQueuing = !1;
              var queues = _this._queueGtag;
              for (readyCallback({
                get: function(property) {
                  return property === "clientId" ? clientId : property === "trackingId" ? _this._currentMeasurementId : property === "apiVersion" ? "1" : void 0;
                }
              }); queues.length; ) {
                var queue = queues.shift();
                _this._gtag.apply(_this, _toConsumableArray(queue));
              }
            }), _this._isQueuing = !0;
          }
          return _this.ga;
        }), _defineProperty2(this, "event", function(optionsOrName, params) {
          if (typeof optionsOrName == "string")
            _this._gtag("event", optionsOrName, _this._toGtagOptions(params));
          else {
            var action12 = optionsOrName.action, category = optionsOrName.category, label = optionsOrName.label, value = optionsOrName.value, nonInteraction = optionsOrName.nonInteraction, transport = optionsOrName.transport;
            if (!category || !action12) {
              console.warn("args.category AND args.action are required in event()");
              return;
            }
            var fieldObject = {
              hitType: "event",
              eventCategory: (0, _format.default)(category),
              eventAction: (0, _format.default)(action12)
            };
            label && (fieldObject.eventLabel = (0, _format.default)(label)), typeof value < "u" && (typeof value != "number" ? console.warn("Expected `args.value` arg to be a Number.") : fieldObject.eventValue = value), typeof nonInteraction < "u" && (typeof nonInteraction != "boolean" ? console.warn("`args.nonInteraction` must be a boolean.") : fieldObject.nonInteraction = nonInteraction), typeof transport < "u" && (typeof transport != "string" ? console.warn("`args.transport` must be a string.") : (["beacon", "xhr", "image"].indexOf(transport) === -1 && console.warn("`args.transport` must be either one of these values: `beacon`, `xhr` or `image`"), fieldObject.transport = transport)), _this._gaCommand("send", fieldObject);
          }
        }), _defineProperty2(this, "send", function(fieldObject) {
          _this._gaCommand("send", fieldObject);
        }), this.reset();
      }
      return _createClass2(GA42, [{
        key: "gtag",
        value: function() {
          this._gtag.apply(this, arguments);
        }
      }]), GA42;
    }();
    exports.GA4 = GA4;
    var _default = new GA4();
    exports.default = _default;
  }
});

// node_modules/react-ga4/dist/index.js
var require_dist = __commonJS({
  "node_modules/react-ga4/dist/index.js"(exports) {
    "use strict";
    function _typeof(obj) {
      return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(obj2) {
        return typeof obj2;
      } : function(obj2) {
        return obj2 && typeof Symbol == "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.default = exports.ReactGAImplementation = void 0;
    var _ga = _interopRequireWildcard(require_ga4());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap != "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap(), cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule)
        return obj;
      if (obj === null || _typeof(obj) !== "object" && typeof obj != "function")
        return { default: obj };
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj))
        return cache.get(obj);
      var newObj = {}, hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj)
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          desc && (desc.get || desc.set) ? Object.defineProperty(newObj, key, desc) : newObj[key] = obj[key];
        }
      return newObj.default = obj, cache && cache.set(obj, newObj), newObj;
    }
    var ReactGAImplementation = _ga.GA4;
    exports.ReactGAImplementation = ReactGAImplementation;
    var _default = _ga.default;
    exports.default = _default;
  }
});

// node_modules/react-slick/lib/initial-state.js
var require_initial_state = __commonJS({
  "node_modules/react-slick/lib/initial-state.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.default = void 0;
    var initialState = {
      animating: !1,
      autoplaying: null,
      currentDirection: 0,
      currentLeft: null,
      currentSlide: 0,
      direction: 1,
      dragging: !1,
      edgeDragged: !1,
      initialized: !1,
      lazyLoadedList: [],
      listHeight: null,
      listWidth: null,
      scrolling: !1,
      slideCount: null,
      slideHeight: null,
      slideWidth: null,
      swipeLeft: null,
      swiped: !1,
      // used by swipeEvent. differentites between touch and swipe.
      swiping: !1,
      touchObject: {
        startX: 0,
        startY: 0,
        curX: 0,
        curY: 0
      },
      trackStyle: {},
      trackWidth: 0,
      targetSlide: 0
    }, _default = exports.default = initialState;
  }
});

// node_modules/lodash.debounce/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.debounce/index.js"(exports, module) {
    var FUNC_ERROR_TEXT = "Expected a function", NAN = NaN, symbolTag = "[object Symbol]", reTrim = /^\s+|\s+$/g, reIsBadHex = /^[-+]0x[0-9a-f]+$/i, reIsBinary = /^0b[01]+$/i, reIsOctal = /^0o[0-7]+$/i, freeParseInt = parseInt, freeGlobal = typeof globalThis == "object" && globalThis && globalThis.Object === Object && globalThis, freeSelf = typeof self == "object" && self && self.Object === Object && self, root = freeGlobal || freeSelf || Function("return this")(), objectProto = Object.prototype, objectToString = objectProto.toString, nativeMax = Math.max, nativeMin = Math.min, now = function() {
      return root.Date.now();
    };
    function debounce(func, wait, options) {
      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = !1, maxing = !1, trailing = !0;
      if (typeof func != "function")
        throw new TypeError(FUNC_ERROR_TEXT);
      wait = toNumber(wait) || 0, isObject(options) && (leading = !!options.leading, maxing = "maxWait" in options, maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait, trailing = "trailing" in options ? !!options.trailing : trailing);
      function invokeFunc(time2) {
        var args = lastArgs, thisArg = lastThis;
        return lastArgs = lastThis = void 0, lastInvokeTime = time2, result = func.apply(thisArg, args), result;
      }
      function leadingEdge(time2) {
        return lastInvokeTime = time2, timerId = setTimeout(timerExpired, wait), leading ? invokeFunc(time2) : result;
      }
      function remainingWait(time2) {
        var timeSinceLastCall = time2 - lastCallTime, timeSinceLastInvoke = time2 - lastInvokeTime, result2 = wait - timeSinceLastCall;
        return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;
      }
      function shouldInvoke(time2) {
        var timeSinceLastCall = time2 - lastCallTime, timeSinceLastInvoke = time2 - lastInvokeTime;
        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }
      function timerExpired() {
        var time2 = now();
        if (shouldInvoke(time2))
          return trailingEdge(time2);
        timerId = setTimeout(timerExpired, remainingWait(time2));
      }
      function trailingEdge(time2) {
        return timerId = void 0, trailing && lastArgs ? invokeFunc(time2) : (lastArgs = lastThis = void 0, result);
      }
      function cancel() {
        timerId !== void 0 && clearTimeout(timerId), lastInvokeTime = 0, lastArgs = lastCallTime = lastThis = timerId = void 0;
      }
      function flush() {
        return timerId === void 0 ? result : trailingEdge(now());
      }
      function debounced() {
        var time2 = now(), isInvoking = shouldInvoke(time2);
        if (lastArgs = arguments, lastThis = this, lastCallTime = time2, isInvoking) {
          if (timerId === void 0)
            return leadingEdge(lastCallTime);
          if (maxing)
            return timerId = setTimeout(timerExpired, wait), invokeFunc(lastCallTime);
        }
        return timerId === void 0 && (timerId = setTimeout(timerExpired, wait)), result;
      }
      return debounced.cancel = cancel, debounced.flush = flush, debounced;
    }
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    function toNumber(value) {
      if (typeof value == "number")
        return value;
      if (isSymbol(value))
        return NAN;
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string")
        return value === 0 ? value : +value;
      value = value.replace(reTrim, "");
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = debounce;
  }
});

// node_modules/classnames/index.js
var require_classnames = __commonJS({
  "node_modules/classnames/index.js"(exports, module) {
    (function() {
      "use strict";
      var hasOwn = {}.hasOwnProperty, nativeCodeString = "[native code]";
      function classNames2() {
        for (var classes = [], i7 = 0; i7 < arguments.length; i7++) {
          var arg = arguments[i7];
          if (arg) {
            var argType = typeof arg;
            if (argType === "string" || argType === "number")
              classes.push(arg);
            else if (Array.isArray(arg)) {
              if (arg.length) {
                var inner = classNames2.apply(null, arg);
                inner && classes.push(inner);
              }
            } else if (argType === "object") {
              if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes("[native code]")) {
                classes.push(arg.toString());
                continue;
              }
              for (var key in arg)
                hasOwn.call(arg, key) && arg[key] && classes.push(key);
            }
          }
        }
        return classes.join(" ");
      }
      typeof module < "u" && module.exports ? (classNames2.default = classNames2, module.exports = classNames2) : typeof define == "function" && typeof define.amd == "object" && define.amd ? define("classnames", [], function() {
        return classNames2;
      }) : window.classNames = classNames2;
    })();
  }
});

// node_modules/react-slick/lib/default-props.js
var require_default_props = __commonJS({
  "node_modules/react-slick/lib/default-props.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var defaultProps = {
      accessibility: !0,
      adaptiveHeight: !1,
      afterChange: null,
      appendDots: function(dots) {
        return /* @__PURE__ */ _react.default.createElement("ul", {
          style: {
            display: "block"
          }
        }, dots);
      },
      arrows: !0,
      autoplay: !1,
      autoplaySpeed: 3e3,
      beforeChange: null,
      centerMode: !1,
      centerPadding: "50px",
      className: "",
      cssEase: "ease",
      customPaging: function(i7) {
        return /* @__PURE__ */ _react.default.createElement("button", null, i7 + 1);
      },
      dots: !1,
      dotsClass: "slick-dots",
      draggable: !0,
      easing: "linear",
      edgeFriction: 0.35,
      fade: !1,
      focusOnSelect: !1,
      infinite: !0,
      initialSlide: 0,
      lazyLoad: null,
      nextArrow: null,
      onEdge: null,
      onInit: null,
      onLazyLoadError: null,
      onReInit: null,
      pauseOnDotsHover: !1,
      pauseOnFocus: !1,
      pauseOnHover: !0,
      prevArrow: null,
      responsive: null,
      rows: 1,
      rtl: !1,
      slide: "div",
      slidesPerRow: 1,
      slidesToScroll: 1,
      slidesToShow: 1,
      speed: 500,
      swipe: !0,
      swipeEvent: null,
      swipeToSlide: !1,
      touchMove: !0,
      touchThreshold: 5,
      useCSS: !0,
      useTransform: !0,
      variableWidth: !1,
      vertical: !1,
      waitForAnimate: !0,
      asNavFor: null
    }, _default = exports.default = defaultProps;
  }
});

// node_modules/react-slick/lib/utils/innerSliderUtils.js
var require_innerSliderUtils = __commonJS({
  "node_modules/react-slick/lib/utils/innerSliderUtils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.checkSpecKeys = exports.checkNavigable = exports.changeSlide = exports.canUseDOM = exports.canGoNext = void 0;
    exports.clamp = clamp2;
    exports.extractObject = void 0;
    exports.filterSettings = filterSettings;
    exports.validSettings = exports.swipeStart = exports.swipeMove = exports.swipeEnd = exports.slidesOnRight = exports.slidesOnLeft = exports.slideHandler = exports.siblingDirection = exports.safePreventDefault = exports.lazyStartIndex = exports.lazySlidesOnRight = exports.lazySlidesOnLeft = exports.lazyEndIndex = exports.keyHandler = exports.initializedState = exports.getWidth = exports.getTrackLeft = exports.getTrackCSS = exports.getTrackAnimateCSS = exports.getTotalSlides = exports.getSwipeDirection = exports.getSlideCount = exports.getRequiredLazySlides = exports.getPreClones = exports.getPostClones = exports.getOnDemandLazySlides = exports.getNavigableIndexes = exports.getHeight = void 0;
    var _react = _interopRequireDefault(require_react()), _defaultProps = _interopRequireDefault(require_default_props());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _typeof(o11) {
      return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o12) {
        return typeof o12;
      } : function(o12) {
        return o12 && typeof Symbol == "function" && o12.constructor === Symbol && o12 !== Symbol.prototype ? "symbol" : typeof o12;
      }, _typeof(o11);
    }
    function ownKeys(e5, r9) {
      var t18 = Object.keys(e5);
      if (Object.getOwnPropertySymbols) {
        var o11 = Object.getOwnPropertySymbols(e5);
        r9 && (o11 = o11.filter(function(r10) {
          return Object.getOwnPropertyDescriptor(e5, r10).enumerable;
        })), t18.push.apply(t18, o11);
      }
      return t18;
    }
    function _objectSpread(e5) {
      for (var r9 = 1; r9 < arguments.length; r9++) {
        var t18 = arguments[r9] != null ? arguments[r9] : {};
        r9 % 2 ? ownKeys(Object(t18), !0).forEach(function(r10) {
          _defineProperty2(e5, r10, t18[r10]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e5, Object.getOwnPropertyDescriptors(t18)) : ownKeys(Object(t18)).forEach(function(r10) {
          Object.defineProperty(e5, r10, Object.getOwnPropertyDescriptor(t18, r10));
        });
      }
      return e5;
    }
    function _defineProperty2(obj, key, value) {
      return key = _toPropertyKey2(key), key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _toPropertyKey2(t18) {
      var i7 = _toPrimitive2(t18, "string");
      return _typeof(i7) == "symbol" ? i7 : String(i7);
    }
    function _toPrimitive2(t18, r9) {
      if (_typeof(t18) != "object" || !t18)
        return t18;
      var e5 = t18[Symbol.toPrimitive];
      if (e5 !== void 0) {
        var i7 = e5.call(t18, r9 || "default");
        if (_typeof(i7) != "object")
          return i7;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return (r9 === "string" ? String : Number)(t18);
    }
    function clamp2(number, lowerBound, upperBound) {
      return Math.max(lowerBound, Math.min(number, upperBound));
    }
    var safePreventDefault = exports.safePreventDefault = function(event) {
      var passiveEvents = ["onTouchStart", "onTouchMove", "onWheel"];
      passiveEvents.includes(event._reactName) || event.preventDefault();
    }, getOnDemandLazySlides = exports.getOnDemandLazySlides = function(spec) {
      for (var onDemandSlides = [], startIndex = lazyStartIndex(spec), endIndex = lazyEndIndex(spec), slideIndex = startIndex; slideIndex < endIndex; slideIndex++)
        spec.lazyLoadedList.indexOf(slideIndex) < 0 && onDemandSlides.push(slideIndex);
      return onDemandSlides;
    }, getRequiredLazySlides = exports.getRequiredLazySlides = function(spec) {
      for (var requiredSlides = [], startIndex = lazyStartIndex(spec), endIndex = lazyEndIndex(spec), slideIndex = startIndex; slideIndex < endIndex; slideIndex++)
        requiredSlides.push(slideIndex);
      return requiredSlides;
    }, lazyStartIndex = exports.lazyStartIndex = function(spec) {
      return spec.currentSlide - lazySlidesOnLeft(spec);
    }, lazyEndIndex = exports.lazyEndIndex = function(spec) {
      return spec.currentSlide + lazySlidesOnRight(spec);
    }, lazySlidesOnLeft = exports.lazySlidesOnLeft = function(spec) {
      return spec.centerMode ? Math.floor(spec.slidesToShow / 2) + (parseInt(spec.centerPadding) > 0 ? 1 : 0) : 0;
    }, lazySlidesOnRight = exports.lazySlidesOnRight = function(spec) {
      return spec.centerMode ? Math.floor((spec.slidesToShow - 1) / 2) + 1 + (parseInt(spec.centerPadding) > 0 ? 1 : 0) : spec.slidesToShow;
    }, getWidth = exports.getWidth = function(elem) {
      return elem && elem.offsetWidth || 0;
    }, getHeight = exports.getHeight = function(elem) {
      return elem && elem.offsetHeight || 0;
    }, getSwipeDirection = exports.getSwipeDirection = function(touchObject) {
      var verticalSwiping = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1, xDist, yDist, r9, swipeAngle;
      return xDist = touchObject.startX - touchObject.curX, yDist = touchObject.startY - touchObject.curY, r9 = Math.atan2(yDist, xDist), swipeAngle = Math.round(r9 * 180 / Math.PI), swipeAngle < 0 && (swipeAngle = 360 - Math.abs(swipeAngle)), swipeAngle <= 45 && swipeAngle >= 0 || swipeAngle <= 360 && swipeAngle >= 315 ? "left" : swipeAngle >= 135 && swipeAngle <= 225 ? "right" : verticalSwiping === !0 ? swipeAngle >= 35 && swipeAngle <= 135 ? "up" : "down" : "vertical";
    }, canGoNext = exports.canGoNext = function(spec) {
      var canGo = !0;
      return spec.infinite || (spec.centerMode && spec.currentSlide >= spec.slideCount - 1 || spec.slideCount <= spec.slidesToShow || spec.currentSlide >= spec.slideCount - spec.slidesToShow) && (canGo = !1), canGo;
    }, extractObject = exports.extractObject = function(spec, keys2) {
      var newObject = {};
      return keys2.forEach(function(key) {
        return newObject[key] = spec[key];
      }), newObject;
    }, initializedState = exports.initializedState = function(spec) {
      var slideCount = _react.default.Children.count(spec.children), listNode = spec.listRef, listWidth = Math.ceil(getWidth(listNode)), trackNode = spec.trackRef && spec.trackRef.node, trackWidth = Math.ceil(getWidth(trackNode)), slideWidth;
      if (spec.vertical)
        slideWidth = listWidth;
      else {
        var centerPaddingAdj = spec.centerMode && parseInt(spec.centerPadding) * 2;
        typeof spec.centerPadding == "string" && spec.centerPadding.slice(-1) === "%" && (centerPaddingAdj *= listWidth / 100), slideWidth = Math.ceil((listWidth - centerPaddingAdj) / spec.slidesToShow);
      }
      var slideHeight = listNode && getHeight(listNode.querySelector('[data-index="0"]')), listHeight = slideHeight * spec.slidesToShow, currentSlide = spec.currentSlide === void 0 ? spec.initialSlide : spec.currentSlide;
      spec.rtl && spec.currentSlide === void 0 && (currentSlide = slideCount - 1 - spec.initialSlide);
      var lazyLoadedList = spec.lazyLoadedList || [], slidesToLoad = getOnDemandLazySlides(_objectSpread(_objectSpread({}, spec), {}, {
        currentSlide,
        lazyLoadedList
      }));
      lazyLoadedList = lazyLoadedList.concat(slidesToLoad);
      var state = {
        slideCount,
        slideWidth,
        listWidth,
        trackWidth,
        currentSlide,
        slideHeight,
        listHeight,
        lazyLoadedList
      };
      return spec.autoplaying === null && spec.autoplay && (state.autoplaying = "playing"), state;
    }, slideHandler = exports.slideHandler = function(spec) {
      var waitForAnimate = spec.waitForAnimate, animating = spec.animating, fade = spec.fade, infinite = spec.infinite, index3 = spec.index, slideCount = spec.slideCount, lazyLoad = spec.lazyLoad, currentSlide = spec.currentSlide, centerMode = spec.centerMode, slidesToScroll = spec.slidesToScroll, slidesToShow = spec.slidesToShow, useCSS = spec.useCSS, lazyLoadedList = spec.lazyLoadedList;
      if (waitForAnimate && animating)
        return {};
      var animationSlide = index3, finalSlide, animationLeft, finalLeft, state = {}, nextState = {}, targetSlide = infinite ? index3 : clamp2(index3, 0, slideCount - 1);
      if (fade) {
        if (!infinite && (index3 < 0 || index3 >= slideCount))
          return {};
        index3 < 0 ? animationSlide = index3 + slideCount : index3 >= slideCount && (animationSlide = index3 - slideCount), lazyLoad && lazyLoadedList.indexOf(animationSlide) < 0 && (lazyLoadedList = lazyLoadedList.concat(animationSlide)), state = {
          animating: !0,
          currentSlide: animationSlide,
          lazyLoadedList,
          targetSlide: animationSlide
        }, nextState = {
          animating: !1,
          targetSlide: animationSlide
        };
      } else
        finalSlide = animationSlide, animationSlide < 0 ? (finalSlide = animationSlide + slideCount, infinite ? slideCount % slidesToScroll !== 0 && (finalSlide = slideCount - slideCount % slidesToScroll) : finalSlide = 0) : !canGoNext(spec) && animationSlide > currentSlide ? animationSlide = finalSlide = currentSlide : centerMode && animationSlide >= slideCount ? (animationSlide = infinite ? slideCount : slideCount - 1, finalSlide = infinite ? 0 : slideCount - 1) : animationSlide >= slideCount && (finalSlide = animationSlide - slideCount, infinite ? slideCount % slidesToScroll !== 0 && (finalSlide = 0) : finalSlide = slideCount - slidesToShow), !infinite && animationSlide + slidesToShow >= slideCount && (finalSlide = slideCount - slidesToShow), animationLeft = getTrackLeft(_objectSpread(_objectSpread({}, spec), {}, {
          slideIndex: animationSlide
        })), finalLeft = getTrackLeft(_objectSpread(_objectSpread({}, spec), {}, {
          slideIndex: finalSlide
        })), infinite || (animationLeft === finalLeft && (animationSlide = finalSlide), animationLeft = finalLeft), lazyLoad && (lazyLoadedList = lazyLoadedList.concat(getOnDemandLazySlides(_objectSpread(_objectSpread({}, spec), {}, {
          currentSlide: animationSlide
        })))), useCSS ? (state = {
          animating: !0,
          currentSlide: finalSlide,
          trackStyle: getTrackAnimateCSS(_objectSpread(_objectSpread({}, spec), {}, {
            left: animationLeft
          })),
          lazyLoadedList,
          targetSlide
        }, nextState = {
          animating: !1,
          currentSlide: finalSlide,
          trackStyle: getTrackCSS(_objectSpread(_objectSpread({}, spec), {}, {
            left: finalLeft
          })),
          swipeLeft: null,
          targetSlide
        }) : state = {
          currentSlide: finalSlide,
          trackStyle: getTrackCSS(_objectSpread(_objectSpread({}, spec), {}, {
            left: finalLeft
          })),
          lazyLoadedList,
          targetSlide
        };
      return {
        state,
        nextState
      };
    }, changeSlide = exports.changeSlide = function(spec, options) {
      var indexOffset, previousInt, slideOffset, unevenOffset, targetSlide, slidesToScroll = spec.slidesToScroll, slidesToShow = spec.slidesToShow, slideCount = spec.slideCount, currentSlide = spec.currentSlide, previousTargetSlide = spec.targetSlide, lazyLoad = spec.lazyLoad, infinite = spec.infinite;
      if (unevenOffset = slideCount % slidesToScroll !== 0, indexOffset = unevenOffset ? 0 : (slideCount - currentSlide) % slidesToScroll, options.message === "previous")
        slideOffset = indexOffset === 0 ? slidesToScroll : slidesToShow - indexOffset, targetSlide = currentSlide - slideOffset, lazyLoad && !infinite && (previousInt = currentSlide - slideOffset, targetSlide = previousInt === -1 ? slideCount - 1 : previousInt), infinite || (targetSlide = previousTargetSlide - slidesToScroll);
      else if (options.message === "next")
        slideOffset = indexOffset === 0 ? slidesToScroll : indexOffset, targetSlide = currentSlide + slideOffset, lazyLoad && !infinite && (targetSlide = (currentSlide + slidesToScroll) % slideCount + indexOffset), infinite || (targetSlide = previousTargetSlide + slidesToScroll);
      else if (options.message === "dots")
        targetSlide = options.index * options.slidesToScroll;
      else if (options.message === "children") {
        if (targetSlide = options.index, infinite) {
          var direction = siblingDirection(_objectSpread(_objectSpread({}, spec), {}, {
            targetSlide
          }));
          targetSlide > options.currentSlide && direction === "left" ? targetSlide = targetSlide - slideCount : targetSlide < options.currentSlide && direction === "right" && (targetSlide = targetSlide + slideCount);
        }
      } else
        options.message === "index" && (targetSlide = Number(options.index));
      return targetSlide;
    }, keyHandler = exports.keyHandler = function(e5, accessibility, rtl) {
      return e5.target.tagName.match("TEXTAREA|INPUT|SELECT") || !accessibility ? "" : e5.keyCode === 37 ? rtl ? "next" : "previous" : e5.keyCode === 39 ? rtl ? "previous" : "next" : "";
    }, swipeStart = exports.swipeStart = function(e5, swipe, draggable) {
      return e5.target.tagName === "IMG" && safePreventDefault(e5), !swipe || !draggable && e5.type.indexOf("mouse") !== -1 ? "" : {
        dragging: !0,
        touchObject: {
          startX: e5.touches ? e5.touches[0].pageX : e5.clientX,
          startY: e5.touches ? e5.touches[0].pageY : e5.clientY,
          curX: e5.touches ? e5.touches[0].pageX : e5.clientX,
          curY: e5.touches ? e5.touches[0].pageY : e5.clientY
        }
      };
    }, swipeMove = exports.swipeMove = function(e5, spec) {
      var scrolling = spec.scrolling, animating = spec.animating, vertical = spec.vertical, swipeToSlide = spec.swipeToSlide, verticalSwiping = spec.verticalSwiping, rtl = spec.rtl, currentSlide = spec.currentSlide, edgeFriction = spec.edgeFriction, edgeDragged = spec.edgeDragged, onEdge = spec.onEdge, swiped = spec.swiped, swiping = spec.swiping, slideCount = spec.slideCount, slidesToScroll = spec.slidesToScroll, infinite = spec.infinite, touchObject = spec.touchObject, swipeEvent = spec.swipeEvent, listHeight = spec.listHeight, listWidth = spec.listWidth;
      if (!scrolling) {
        if (animating)
          return safePreventDefault(e5);
        vertical && swipeToSlide && verticalSwiping && safePreventDefault(e5);
        var swipeLeft, state = {}, curLeft = getTrackLeft(spec);
        touchObject.curX = e5.touches ? e5.touches[0].pageX : e5.clientX, touchObject.curY = e5.touches ? e5.touches[0].pageY : e5.clientY, touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curX - touchObject.startX, 2)));
        var verticalSwipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curY - touchObject.startY, 2)));
        if (!verticalSwiping && !swiping && verticalSwipeLength > 10)
          return {
            scrolling: !0
          };
        verticalSwiping && (touchObject.swipeLength = verticalSwipeLength);
        var positionOffset = (rtl ? -1 : 1) * (touchObject.curX > touchObject.startX ? 1 : -1);
        verticalSwiping && (positionOffset = touchObject.curY > touchObject.startY ? 1 : -1);
        var dotCount = Math.ceil(slideCount / slidesToScroll), swipeDirection = getSwipeDirection(spec.touchObject, verticalSwiping), touchSwipeLength = touchObject.swipeLength;
        return infinite || (currentSlide === 0 && (swipeDirection === "right" || swipeDirection === "down") || currentSlide + 1 >= dotCount && (swipeDirection === "left" || swipeDirection === "up") || !canGoNext(spec) && (swipeDirection === "left" || swipeDirection === "up")) && (touchSwipeLength = touchObject.swipeLength * edgeFriction, edgeDragged === !1 && onEdge && (onEdge(swipeDirection), state.edgeDragged = !0)), !swiped && swipeEvent && (swipeEvent(swipeDirection), state.swiped = !0), vertical ? swipeLeft = curLeft + touchSwipeLength * (listHeight / listWidth) * positionOffset : rtl ? swipeLeft = curLeft - touchSwipeLength * positionOffset : swipeLeft = curLeft + touchSwipeLength * positionOffset, verticalSwiping && (swipeLeft = curLeft + touchSwipeLength * positionOffset), state = _objectSpread(_objectSpread({}, state), {}, {
          touchObject,
          swipeLeft,
          trackStyle: getTrackCSS(_objectSpread(_objectSpread({}, spec), {}, {
            left: swipeLeft
          }))
        }), Math.abs(touchObject.curX - touchObject.startX) < Math.abs(touchObject.curY - touchObject.startY) * 0.8 || touchObject.swipeLength > 10 && (state.swiping = !0, safePreventDefault(e5)), state;
      }
    }, swipeEnd = exports.swipeEnd = function(e5, spec) {
      var dragging = spec.dragging, swipe = spec.swipe, touchObject = spec.touchObject, listWidth = spec.listWidth, touchThreshold = spec.touchThreshold, verticalSwiping = spec.verticalSwiping, listHeight = spec.listHeight, swipeToSlide = spec.swipeToSlide, scrolling = spec.scrolling, onSwipe = spec.onSwipe, targetSlide = spec.targetSlide, currentSlide = spec.currentSlide, infinite = spec.infinite;
      if (!dragging)
        return swipe && safePreventDefault(e5), {};
      var minSwipe = verticalSwiping ? listHeight / touchThreshold : listWidth / touchThreshold, swipeDirection = getSwipeDirection(touchObject, verticalSwiping), state = {
        dragging: !1,
        edgeDragged: !1,
        scrolling: !1,
        swiping: !1,
        swiped: !1,
        swipeLeft: null,
        touchObject: {}
      };
      if (scrolling || !touchObject.swipeLength)
        return state;
      if (touchObject.swipeLength > minSwipe) {
        safePreventDefault(e5), onSwipe && onSwipe(swipeDirection);
        var slideCount, newSlide, activeSlide = infinite ? currentSlide : targetSlide;
        switch (swipeDirection) {
          case "left":
          case "up":
            newSlide = activeSlide + getSlideCount(spec), slideCount = swipeToSlide ? checkNavigable(spec, newSlide) : newSlide, state.currentDirection = 0;
            break;
          case "right":
          case "down":
            newSlide = activeSlide - getSlideCount(spec), slideCount = swipeToSlide ? checkNavigable(spec, newSlide) : newSlide, state.currentDirection = 1;
            break;
          default:
            slideCount = activeSlide;
        }
        state.triggerSlideHandler = slideCount;
      } else {
        var currentLeft = getTrackLeft(spec);
        state.trackStyle = getTrackAnimateCSS(_objectSpread(_objectSpread({}, spec), {}, {
          left: currentLeft
        }));
      }
      return state;
    }, getNavigableIndexes = exports.getNavigableIndexes = function(spec) {
      for (var max = spec.infinite ? spec.slideCount * 2 : spec.slideCount, breakpoint = spec.infinite ? spec.slidesToShow * -1 : 0, counter = spec.infinite ? spec.slidesToShow * -1 : 0, indexes = []; breakpoint < max; )
        indexes.push(breakpoint), breakpoint = counter + spec.slidesToScroll, counter += Math.min(spec.slidesToScroll, spec.slidesToShow);
      return indexes;
    }, checkNavigable = exports.checkNavigable = function(spec, index3) {
      var navigables = getNavigableIndexes(spec), prevNavigable = 0;
      if (index3 > navigables[navigables.length - 1])
        index3 = navigables[navigables.length - 1];
      else
        for (var n7 in navigables) {
          if (index3 < navigables[n7]) {
            index3 = prevNavigable;
            break;
          }
          prevNavigable = navigables[n7];
        }
      return index3;
    }, getSlideCount = exports.getSlideCount = function(spec) {
      var centerOffset = spec.centerMode ? spec.slideWidth * Math.floor(spec.slidesToShow / 2) : 0;
      if (spec.swipeToSlide) {
        var swipedSlide, slickList = spec.listRef, slides = slickList.querySelectorAll && slickList.querySelectorAll(".slick-slide") || [];
        if (Array.from(slides).every(function(slide) {
          if (spec.vertical) {
            if (slide.offsetTop + getHeight(slide) / 2 > spec.swipeLeft * -1)
              return swipedSlide = slide, !1;
          } else if (slide.offsetLeft - centerOffset + getWidth(slide) / 2 > spec.swipeLeft * -1)
            return swipedSlide = slide, !1;
          return !0;
        }), !swipedSlide)
          return 0;
        var currentIndex = spec.rtl === !0 ? spec.slideCount - spec.currentSlide : spec.currentSlide, slidesTraversed = Math.abs(swipedSlide.dataset.index - currentIndex) || 1;
        return slidesTraversed;
      } else
        return spec.slidesToScroll;
    }, checkSpecKeys = exports.checkSpecKeys = function(spec, keysArray) {
      return keysArray.reduce(function(value, key) {
        return value && spec.hasOwnProperty(key);
      }, !0) ? null : console.error("Keys Missing:", spec);
    }, getTrackCSS = exports.getTrackCSS = function(spec) {
      checkSpecKeys(spec, ["left", "variableWidth", "slideCount", "slidesToShow", "slideWidth"]);
      var trackWidth, trackHeight, trackChildren = spec.slideCount + 2 * spec.slidesToShow;
      spec.vertical ? trackHeight = trackChildren * spec.slideHeight : trackWidth = getTotalSlides(spec) * spec.slideWidth;
      var style2 = {
        opacity: 1,
        transition: "",
        WebkitTransition: ""
      };
      if (spec.useTransform) {
        var WebkitTransform = spec.vertical ? "translate3d(0px, " + spec.left + "px, 0px)" : "translate3d(" + spec.left + "px, 0px, 0px)", transform = spec.vertical ? "translate3d(0px, " + spec.left + "px, 0px)" : "translate3d(" + spec.left + "px, 0px, 0px)", msTransform = spec.vertical ? "translateY(" + spec.left + "px)" : "translateX(" + spec.left + "px)";
        style2 = _objectSpread(_objectSpread({}, style2), {}, {
          WebkitTransform,
          transform,
          msTransform
        });
      } else
        spec.vertical ? style2.top = spec.left : style2.left = spec.left;
      return spec.fade && (style2 = {
        opacity: 1
      }), trackWidth && (style2.width = trackWidth), trackHeight && (style2.height = trackHeight), window && !window.addEventListener && window.attachEvent && (spec.vertical ? style2.marginTop = spec.left + "px" : style2.marginLeft = spec.left + "px"), style2;
    }, getTrackAnimateCSS = exports.getTrackAnimateCSS = function(spec) {
      checkSpecKeys(spec, ["left", "variableWidth", "slideCount", "slidesToShow", "slideWidth", "speed", "cssEase"]);
      var style2 = getTrackCSS(spec);
      return spec.useTransform ? (style2.WebkitTransition = "-webkit-transform " + spec.speed + "ms " + spec.cssEase, style2.transition = "transform " + spec.speed + "ms " + spec.cssEase) : spec.vertical ? style2.transition = "top " + spec.speed + "ms " + spec.cssEase : style2.transition = "left " + spec.speed + "ms " + spec.cssEase, style2;
    }, getTrackLeft = exports.getTrackLeft = function(spec) {
      if (spec.unslick)
        return 0;
      checkSpecKeys(spec, ["slideIndex", "trackRef", "infinite", "centerMode", "slideCount", "slidesToShow", "slidesToScroll", "slideWidth", "listWidth", "variableWidth", "slideHeight"]);
      var slideIndex = spec.slideIndex, trackRef = spec.trackRef, infinite = spec.infinite, centerMode = spec.centerMode, slideCount = spec.slideCount, slidesToShow = spec.slidesToShow, slidesToScroll = spec.slidesToScroll, slideWidth = spec.slideWidth, listWidth = spec.listWidth, variableWidth = spec.variableWidth, slideHeight = spec.slideHeight, fade = spec.fade, vertical = spec.vertical, slideOffset = 0, targetLeft, targetSlide, verticalOffset = 0;
      if (fade || spec.slideCount === 1)
        return 0;
      var slidesToOffset = 0;
      if (infinite ? (slidesToOffset = -getPreClones(spec), slideCount % slidesToScroll !== 0 && slideIndex + slidesToScroll > slideCount && (slidesToOffset = -(slideIndex > slideCount ? slidesToShow - (slideIndex - slideCount) : slideCount % slidesToScroll)), centerMode && (slidesToOffset += parseInt(slidesToShow / 2))) : (slideCount % slidesToScroll !== 0 && slideIndex + slidesToScroll > slideCount && (slidesToOffset = slidesToShow - slideCount % slidesToScroll), centerMode && (slidesToOffset = parseInt(slidesToShow / 2))), slideOffset = slidesToOffset * slideWidth, verticalOffset = slidesToOffset * slideHeight, vertical ? targetLeft = slideIndex * slideHeight * -1 + verticalOffset : targetLeft = slideIndex * slideWidth * -1 + slideOffset, variableWidth === !0) {
        var targetSlideIndex, trackElem = trackRef && trackRef.node;
        if (targetSlideIndex = slideIndex + getPreClones(spec), targetSlide = trackElem && trackElem.childNodes[targetSlideIndex], targetLeft = targetSlide ? targetSlide.offsetLeft * -1 : 0, centerMode === !0) {
          targetSlideIndex = infinite ? slideIndex + getPreClones(spec) : slideIndex, targetSlide = trackElem && trackElem.children[targetSlideIndex], targetLeft = 0;
          for (var slide = 0; slide < targetSlideIndex; slide++)
            targetLeft -= trackElem && trackElem.children[slide] && trackElem.children[slide].offsetWidth;
          targetLeft -= parseInt(spec.centerPadding), targetLeft += targetSlide && (listWidth - targetSlide.offsetWidth) / 2;
        }
      }
      return targetLeft;
    }, getPreClones = exports.getPreClones = function(spec) {
      return spec.unslick || !spec.infinite ? 0 : spec.variableWidth ? spec.slideCount : spec.slidesToShow + (spec.centerMode ? 1 : 0);
    }, getPostClones = exports.getPostClones = function(spec) {
      return spec.unslick || !spec.infinite ? 0 : spec.slideCount;
    }, getTotalSlides = exports.getTotalSlides = function(spec) {
      return spec.slideCount === 1 ? 1 : getPreClones(spec) + spec.slideCount + getPostClones(spec);
    }, siblingDirection = exports.siblingDirection = function(spec) {
      return spec.targetSlide > spec.currentSlide ? spec.targetSlide > spec.currentSlide + slidesOnRight(spec) ? "left" : "right" : spec.targetSlide < spec.currentSlide - slidesOnLeft(spec) ? "right" : "left";
    }, slidesOnRight = exports.slidesOnRight = function(_ref) {
      var slidesToShow = _ref.slidesToShow, centerMode = _ref.centerMode, rtl = _ref.rtl, centerPadding = _ref.centerPadding;
      if (centerMode) {
        var right = (slidesToShow - 1) / 2 + 1;
        return parseInt(centerPadding) > 0 && (right += 1), rtl && slidesToShow % 2 === 0 && (right += 1), right;
      }
      return rtl ? 0 : slidesToShow - 1;
    }, slidesOnLeft = exports.slidesOnLeft = function(_ref2) {
      var slidesToShow = _ref2.slidesToShow, centerMode = _ref2.centerMode, rtl = _ref2.rtl, centerPadding = _ref2.centerPadding;
      if (centerMode) {
        var left = (slidesToShow - 1) / 2 + 1;
        return parseInt(centerPadding) > 0 && (left += 1), !rtl && slidesToShow % 2 === 0 && (left += 1), left;
      }
      return rtl ? slidesToShow - 1 : 0;
    }, canUseDOM = exports.canUseDOM = function() {
      return !!(typeof window < "u" && window.document && window.document.createElement);
    }, validSettings = exports.validSettings = Object.keys(_defaultProps.default);
    function filterSettings(settings) {
      return validSettings.reduce(function(acc, settingName) {
        return settings.hasOwnProperty(settingName) && (acc[settingName] = settings[settingName]), acc;
      }, {});
    }
  }
});

// node_modules/react-slick/lib/track.js
var require_track = __commonJS({
  "node_modules/react-slick/lib/track.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.Track = void 0;
    var _react = _interopRequireDefault(require_react()), _classnames = _interopRequireDefault(require_classnames()), _innerSliderUtils = require_innerSliderUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _typeof(o11) {
      return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o12) {
        return typeof o12;
      } : function(o12) {
        return o12 && typeof Symbol == "function" && o12.constructor === Symbol && o12 !== Symbol.prototype ? "symbol" : typeof o12;
      }, _typeof(o11);
    }
    function _extends5() {
      return _extends5 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _classCallCheck2(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties2(target, props) {
      for (var i7 = 0; i7 < props.length; i7++) {
        var descriptor = props[i7];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey2(descriptor.key), descriptor);
      }
    }
    function _createClass2(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties2(Constructor.prototype, protoProps), staticProps && _defineProperties2(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", { writable: !1 }), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), Object.defineProperty(subClass, "prototype", { writable: !1 }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o11, p7) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(o12, p8) {
        return o12.__proto__ = p8, o12;
      }, _setPrototypeOf(o11, p7);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call == "function"))
        return call;
      if (call !== void 0)
        throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t18 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch {
      }
      return (_isNativeReflectConstruct = function() {
        return !!t18;
      })();
    }
    function _getPrototypeOf(o11) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(o12) {
        return o12.__proto__ || Object.getPrototypeOf(o12);
      }, _getPrototypeOf(o11);
    }
    function ownKeys(e5, r9) {
      var t18 = Object.keys(e5);
      if (Object.getOwnPropertySymbols) {
        var o11 = Object.getOwnPropertySymbols(e5);
        r9 && (o11 = o11.filter(function(r10) {
          return Object.getOwnPropertyDescriptor(e5, r10).enumerable;
        })), t18.push.apply(t18, o11);
      }
      return t18;
    }
    function _objectSpread(e5) {
      for (var r9 = 1; r9 < arguments.length; r9++) {
        var t18 = arguments[r9] != null ? arguments[r9] : {};
        r9 % 2 ? ownKeys(Object(t18), !0).forEach(function(r10) {
          _defineProperty2(e5, r10, t18[r10]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e5, Object.getOwnPropertyDescriptors(t18)) : ownKeys(Object(t18)).forEach(function(r10) {
          Object.defineProperty(e5, r10, Object.getOwnPropertyDescriptor(t18, r10));
        });
      }
      return e5;
    }
    function _defineProperty2(obj, key, value) {
      return key = _toPropertyKey2(key), key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _toPropertyKey2(t18) {
      var i7 = _toPrimitive2(t18, "string");
      return _typeof(i7) == "symbol" ? i7 : String(i7);
    }
    function _toPrimitive2(t18, r9) {
      if (_typeof(t18) != "object" || !t18)
        return t18;
      var e5 = t18[Symbol.toPrimitive];
      if (e5 !== void 0) {
        var i7 = e5.call(t18, r9 || "default");
        if (_typeof(i7) != "object")
          return i7;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return (r9 === "string" ? String : Number)(t18);
    }
    var getSlideClasses = function(spec) {
      var slickActive, slickCenter, slickCloned, centerOffset, index3;
      spec.rtl ? index3 = spec.slideCount - 1 - spec.index : index3 = spec.index, slickCloned = index3 < 0 || index3 >= spec.slideCount, spec.centerMode ? (centerOffset = Math.floor(spec.slidesToShow / 2), slickCenter = (index3 - spec.currentSlide) % spec.slideCount === 0, index3 > spec.currentSlide - centerOffset - 1 && index3 <= spec.currentSlide + centerOffset && (slickActive = !0)) : slickActive = spec.currentSlide <= index3 && index3 < spec.currentSlide + spec.slidesToShow;
      var focusedSlide;
      spec.targetSlide < 0 ? focusedSlide = spec.targetSlide + spec.slideCount : spec.targetSlide >= spec.slideCount ? focusedSlide = spec.targetSlide - spec.slideCount : focusedSlide = spec.targetSlide;
      var slickCurrent = index3 === focusedSlide;
      return {
        "slick-slide": !0,
        "slick-active": slickActive,
        "slick-center": slickCenter,
        "slick-cloned": slickCloned,
        "slick-current": slickCurrent
        // dubious in case of RTL
      };
    }, getSlideStyle = function(spec) {
      var style2 = {};
      return (spec.variableWidth === void 0 || spec.variableWidth === !1) && (style2.width = spec.slideWidth), spec.fade && (style2.position = "relative", spec.vertical ? style2.top = -spec.index * parseInt(spec.slideHeight) : style2.left = -spec.index * parseInt(spec.slideWidth), style2.opacity = spec.currentSlide === spec.index ? 1 : 0, style2.zIndex = spec.currentSlide === spec.index ? 999 : 998, spec.useCSS && (style2.transition = "opacity " + spec.speed + "ms " + spec.cssEase + ", visibility " + spec.speed + "ms " + spec.cssEase)), style2;
    }, getKey = function(child, fallbackKey) {
      return child.key || fallbackKey;
    }, renderSlides = function(spec) {
      var key, slides = [], preCloneSlides = [], postCloneSlides = [], childrenCount = _react.default.Children.count(spec.children), startIndex = (0, _innerSliderUtils.lazyStartIndex)(spec), endIndex = (0, _innerSliderUtils.lazyEndIndex)(spec);
      return _react.default.Children.forEach(spec.children, function(elem, index3) {
        var child, childOnClickOptions = {
          message: "children",
          index: index3,
          slidesToScroll: spec.slidesToScroll,
          currentSlide: spec.currentSlide
        };
        !spec.lazyLoad || spec.lazyLoad && spec.lazyLoadedList.indexOf(index3) >= 0 ? child = elem : child = /* @__PURE__ */ _react.default.createElement("div", null);
        var childStyle = getSlideStyle(_objectSpread(_objectSpread({}, spec), {}, {
          index: index3
        })), slideClass = child.props.className || "", slideClasses = getSlideClasses(_objectSpread(_objectSpread({}, spec), {}, {
          index: index3
        }));
        if (slides.push(/* @__PURE__ */ _react.default.cloneElement(child, {
          key: "original" + getKey(child, index3),
          "data-index": index3,
          className: (0, _classnames.default)(slideClasses, slideClass),
          tabIndex: "-1",
          "aria-hidden": !slideClasses["slick-active"],
          style: _objectSpread(_objectSpread({
            outline: "none"
          }, child.props.style || {}), childStyle),
          onClick: function(e5) {
            child.props && child.props.onClick && child.props.onClick(e5), spec.focusOnSelect && spec.focusOnSelect(childOnClickOptions);
          }
        })), spec.infinite && spec.fade === !1) {
          var preCloneNo = childrenCount - index3;
          preCloneNo <= (0, _innerSliderUtils.getPreClones)(spec) && (key = -preCloneNo, key >= startIndex && (child = elem), slideClasses = getSlideClasses(_objectSpread(_objectSpread({}, spec), {}, {
            index: key
          })), preCloneSlides.push(/* @__PURE__ */ _react.default.cloneElement(child, {
            key: "precloned" + getKey(child, key),
            "data-index": key,
            tabIndex: "-1",
            className: (0, _classnames.default)(slideClasses, slideClass),
            "aria-hidden": !slideClasses["slick-active"],
            style: _objectSpread(_objectSpread({}, child.props.style || {}), childStyle),
            onClick: function(e5) {
              child.props && child.props.onClick && child.props.onClick(e5), spec.focusOnSelect && spec.focusOnSelect(childOnClickOptions);
            }
          }))), key = childrenCount + index3, key < endIndex && (child = elem), slideClasses = getSlideClasses(_objectSpread(_objectSpread({}, spec), {}, {
            index: key
          })), postCloneSlides.push(/* @__PURE__ */ _react.default.cloneElement(child, {
            key: "postcloned" + getKey(child, key),
            "data-index": key,
            tabIndex: "-1",
            className: (0, _classnames.default)(slideClasses, slideClass),
            "aria-hidden": !slideClasses["slick-active"],
            style: _objectSpread(_objectSpread({}, child.props.style || {}), childStyle),
            onClick: function(e5) {
              child.props && child.props.onClick && child.props.onClick(e5), spec.focusOnSelect && spec.focusOnSelect(childOnClickOptions);
            }
          }));
        }
      }), spec.rtl ? preCloneSlides.concat(slides, postCloneSlides).reverse() : preCloneSlides.concat(slides, postCloneSlides);
    }, Track = exports.Track = /* @__PURE__ */ function(_React$PureComponent) {
      _inherits(Track2, _React$PureComponent);
      var _super = _createSuper(Track2);
      function Track2() {
        var _this;
        _classCallCheck2(this, Track2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
          args[_key] = arguments[_key];
        return _this = _super.call.apply(_super, [this].concat(args)), _defineProperty2(_assertThisInitialized(_this), "node", null), _defineProperty2(_assertThisInitialized(_this), "handleRef", function(ref) {
          _this.node = ref;
        }), _this;
      }
      return _createClass2(Track2, [{
        key: "render",
        value: function() {
          var slides = renderSlides(this.props), _this$props = this.props, onMouseEnter = _this$props.onMouseEnter, onMouseOver = _this$props.onMouseOver, onMouseLeave = _this$props.onMouseLeave, mouseEvents = {
            onMouseEnter,
            onMouseOver,
            onMouseLeave
          };
          return /* @__PURE__ */ _react.default.createElement("div", _extends5({
            ref: this.handleRef,
            className: "slick-track",
            style: this.props.trackStyle
          }, mouseEvents), slides);
        }
      }]), Track2;
    }(_react.default.PureComponent);
  }
});

// node_modules/react-slick/lib/dots.js
var require_dots = __commonJS({
  "node_modules/react-slick/lib/dots.js"(exports) {
    "use strict";
    function _typeof(o11) {
      return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o12) {
        return typeof o12;
      } : function(o12) {
        return o12 && typeof Symbol == "function" && o12.constructor === Symbol && o12 !== Symbol.prototype ? "symbol" : typeof o12;
      }, _typeof(o11);
    }
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.Dots = void 0;
    var _react = _interopRequireDefault(require_react()), _classnames = _interopRequireDefault(require_classnames()), _innerSliderUtils = require_innerSliderUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function ownKeys(e5, r9) {
      var t18 = Object.keys(e5);
      if (Object.getOwnPropertySymbols) {
        var o11 = Object.getOwnPropertySymbols(e5);
        r9 && (o11 = o11.filter(function(r10) {
          return Object.getOwnPropertyDescriptor(e5, r10).enumerable;
        })), t18.push.apply(t18, o11);
      }
      return t18;
    }
    function _objectSpread(e5) {
      for (var r9 = 1; r9 < arguments.length; r9++) {
        var t18 = arguments[r9] != null ? arguments[r9] : {};
        r9 % 2 ? ownKeys(Object(t18), !0).forEach(function(r10) {
          _defineProperty2(e5, r10, t18[r10]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e5, Object.getOwnPropertyDescriptors(t18)) : ownKeys(Object(t18)).forEach(function(r10) {
          Object.defineProperty(e5, r10, Object.getOwnPropertyDescriptor(t18, r10));
        });
      }
      return e5;
    }
    function _defineProperty2(obj, key, value) {
      return key = _toPropertyKey2(key), key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _classCallCheck2(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties2(target, props) {
      for (var i7 = 0; i7 < props.length; i7++) {
        var descriptor = props[i7];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey2(descriptor.key), descriptor);
      }
    }
    function _createClass2(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties2(Constructor.prototype, protoProps), staticProps && _defineProperties2(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", { writable: !1 }), Constructor;
    }
    function _toPropertyKey2(t18) {
      var i7 = _toPrimitive2(t18, "string");
      return _typeof(i7) == "symbol" ? i7 : String(i7);
    }
    function _toPrimitive2(t18, r9) {
      if (_typeof(t18) != "object" || !t18)
        return t18;
      var e5 = t18[Symbol.toPrimitive];
      if (e5 !== void 0) {
        var i7 = e5.call(t18, r9 || "default");
        if (_typeof(i7) != "object")
          return i7;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return (r9 === "string" ? String : Number)(t18);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), Object.defineProperty(subClass, "prototype", { writable: !1 }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o11, p7) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(o12, p8) {
        return o12.__proto__ = p8, o12;
      }, _setPrototypeOf(o11, p7);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call == "function"))
        return call;
      if (call !== void 0)
        throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t18 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch {
      }
      return (_isNativeReflectConstruct = function() {
        return !!t18;
      })();
    }
    function _getPrototypeOf(o11) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(o12) {
        return o12.__proto__ || Object.getPrototypeOf(o12);
      }, _getPrototypeOf(o11);
    }
    var getDotCount = function(spec) {
      var dots;
      return spec.infinite ? dots = Math.ceil(spec.slideCount / spec.slidesToScroll) : dots = Math.ceil((spec.slideCount - spec.slidesToShow) / spec.slidesToScroll) + 1, dots;
    }, Dots = exports.Dots = /* @__PURE__ */ function(_React$PureComponent) {
      _inherits(Dots2, _React$PureComponent);
      var _super = _createSuper(Dots2);
      function Dots2() {
        return _classCallCheck2(this, Dots2), _super.apply(this, arguments);
      }
      return _createClass2(Dots2, [{
        key: "clickHandler",
        value: function(options, e5) {
          e5.preventDefault(), this.props.clickHandler(options);
        }
      }, {
        key: "render",
        value: function() {
          for (var _this$props = this.props, onMouseEnter = _this$props.onMouseEnter, onMouseOver = _this$props.onMouseOver, onMouseLeave = _this$props.onMouseLeave, infinite = _this$props.infinite, slidesToScroll = _this$props.slidesToScroll, slidesToShow = _this$props.slidesToShow, slideCount = _this$props.slideCount, currentSlide = _this$props.currentSlide, dotCount = getDotCount({
            slideCount,
            slidesToScroll,
            slidesToShow,
            infinite
          }), mouseEvents = {
            onMouseEnter,
            onMouseOver,
            onMouseLeave
          }, dots = [], i7 = 0; i7 < dotCount; i7++) {
            var _rightBound = (i7 + 1) * slidesToScroll - 1, rightBound = infinite ? _rightBound : (0, _innerSliderUtils.clamp)(_rightBound, 0, slideCount - 1), _leftBound = rightBound - (slidesToScroll - 1), leftBound = infinite ? _leftBound : (0, _innerSliderUtils.clamp)(_leftBound, 0, slideCount - 1), className = (0, _classnames.default)({
              "slick-active": infinite ? currentSlide >= leftBound && currentSlide <= rightBound : currentSlide === leftBound
            }), dotOptions = {
              message: "dots",
              index: i7,
              slidesToScroll,
              currentSlide
            }, onClick = this.clickHandler.bind(this, dotOptions);
            dots = dots.concat(/* @__PURE__ */ _react.default.createElement("li", {
              key: i7,
              className
            }, /* @__PURE__ */ _react.default.cloneElement(this.props.customPaging(i7), {
              onClick
            })));
          }
          return /* @__PURE__ */ _react.default.cloneElement(this.props.appendDots(dots), _objectSpread({
            className: this.props.dotsClass
          }, mouseEvents));
        }
      }]), Dots2;
    }(_react.default.PureComponent);
  }
});

// node_modules/react-slick/lib/arrows.js
var require_arrows = __commonJS({
  "node_modules/react-slick/lib/arrows.js"(exports) {
    "use strict";
    function _typeof(o11) {
      return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o12) {
        return typeof o12;
      } : function(o12) {
        return o12 && typeof Symbol == "function" && o12.constructor === Symbol && o12 !== Symbol.prototype ? "symbol" : typeof o12;
      }, _typeof(o11);
    }
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.PrevArrow = exports.NextArrow = void 0;
    var _react = _interopRequireDefault(require_react()), _classnames = _interopRequireDefault(require_classnames()), _innerSliderUtils = require_innerSliderUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _extends5() {
      return _extends5 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function ownKeys(e5, r9) {
      var t18 = Object.keys(e5);
      if (Object.getOwnPropertySymbols) {
        var o11 = Object.getOwnPropertySymbols(e5);
        r9 && (o11 = o11.filter(function(r10) {
          return Object.getOwnPropertyDescriptor(e5, r10).enumerable;
        })), t18.push.apply(t18, o11);
      }
      return t18;
    }
    function _objectSpread(e5) {
      for (var r9 = 1; r9 < arguments.length; r9++) {
        var t18 = arguments[r9] != null ? arguments[r9] : {};
        r9 % 2 ? ownKeys(Object(t18), !0).forEach(function(r10) {
          _defineProperty2(e5, r10, t18[r10]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e5, Object.getOwnPropertyDescriptors(t18)) : ownKeys(Object(t18)).forEach(function(r10) {
          Object.defineProperty(e5, r10, Object.getOwnPropertyDescriptor(t18, r10));
        });
      }
      return e5;
    }
    function _defineProperty2(obj, key, value) {
      return key = _toPropertyKey2(key), key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _classCallCheck2(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties2(target, props) {
      for (var i7 = 0; i7 < props.length; i7++) {
        var descriptor = props[i7];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey2(descriptor.key), descriptor);
      }
    }
    function _createClass2(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties2(Constructor.prototype, protoProps), staticProps && _defineProperties2(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", { writable: !1 }), Constructor;
    }
    function _toPropertyKey2(t18) {
      var i7 = _toPrimitive2(t18, "string");
      return _typeof(i7) == "symbol" ? i7 : String(i7);
    }
    function _toPrimitive2(t18, r9) {
      if (_typeof(t18) != "object" || !t18)
        return t18;
      var e5 = t18[Symbol.toPrimitive];
      if (e5 !== void 0) {
        var i7 = e5.call(t18, r9 || "default");
        if (_typeof(i7) != "object")
          return i7;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return (r9 === "string" ? String : Number)(t18);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), Object.defineProperty(subClass, "prototype", { writable: !1 }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o11, p7) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(o12, p8) {
        return o12.__proto__ = p8, o12;
      }, _setPrototypeOf(o11, p7);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call == "function"))
        return call;
      if (call !== void 0)
        throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t18 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch {
      }
      return (_isNativeReflectConstruct = function() {
        return !!t18;
      })();
    }
    function _getPrototypeOf(o11) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(o12) {
        return o12.__proto__ || Object.getPrototypeOf(o12);
      }, _getPrototypeOf(o11);
    }
    var PrevArrow = exports.PrevArrow = /* @__PURE__ */ function(_React$PureComponent) {
      _inherits(PrevArrow2, _React$PureComponent);
      var _super = _createSuper(PrevArrow2);
      function PrevArrow2() {
        return _classCallCheck2(this, PrevArrow2), _super.apply(this, arguments);
      }
      return _createClass2(PrevArrow2, [{
        key: "clickHandler",
        value: function(options, e5) {
          e5 && e5.preventDefault(), this.props.clickHandler(options, e5);
        }
      }, {
        key: "render",
        value: function() {
          var prevClasses = {
            "slick-arrow": !0,
            "slick-prev": !0
          }, prevHandler = this.clickHandler.bind(this, {
            message: "previous"
          });
          !this.props.infinite && (this.props.currentSlide === 0 || this.props.slideCount <= this.props.slidesToShow) && (prevClasses["slick-disabled"] = !0, prevHandler = null);
          var prevArrowProps = {
            key: "0",
            "data-role": "none",
            className: (0, _classnames.default)(prevClasses),
            style: {
              display: "block"
            },
            onClick: prevHandler
          }, customProps = {
            currentSlide: this.props.currentSlide,
            slideCount: this.props.slideCount
          }, prevArrow;
          return this.props.prevArrow ? prevArrow = /* @__PURE__ */ _react.default.cloneElement(this.props.prevArrow, _objectSpread(_objectSpread({}, prevArrowProps), customProps)) : prevArrow = /* @__PURE__ */ _react.default.createElement("button", _extends5({
            key: "0",
            type: "button"
          }, prevArrowProps), " ", "Previous"), prevArrow;
        }
      }]), PrevArrow2;
    }(_react.default.PureComponent), NextArrow = exports.NextArrow = /* @__PURE__ */ function(_React$PureComponent2) {
      _inherits(NextArrow2, _React$PureComponent2);
      var _super2 = _createSuper(NextArrow2);
      function NextArrow2() {
        return _classCallCheck2(this, NextArrow2), _super2.apply(this, arguments);
      }
      return _createClass2(NextArrow2, [{
        key: "clickHandler",
        value: function(options, e5) {
          e5 && e5.preventDefault(), this.props.clickHandler(options, e5);
        }
      }, {
        key: "render",
        value: function() {
          var nextClasses = {
            "slick-arrow": !0,
            "slick-next": !0
          }, nextHandler = this.clickHandler.bind(this, {
            message: "next"
          });
          (0, _innerSliderUtils.canGoNext)(this.props) || (nextClasses["slick-disabled"] = !0, nextHandler = null);
          var nextArrowProps = {
            key: "1",
            "data-role": "none",
            className: (0, _classnames.default)(nextClasses),
            style: {
              display: "block"
            },
            onClick: nextHandler
          }, customProps = {
            currentSlide: this.props.currentSlide,
            slideCount: this.props.slideCount
          }, nextArrow;
          return this.props.nextArrow ? nextArrow = /* @__PURE__ */ _react.default.cloneElement(this.props.nextArrow, _objectSpread(_objectSpread({}, nextArrowProps), customProps)) : nextArrow = /* @__PURE__ */ _react.default.createElement("button", _extends5({
            key: "1",
            type: "button"
          }, nextArrowProps), " ", "Next"), nextArrow;
        }
      }]), NextArrow2;
    }(_react.default.PureComponent);
  }
});

// node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js
var ResizeObserver_es_exports = {};
__export(ResizeObserver_es_exports, {
  default: () => ResizeObserver_es_default
});
function throttle(callback, delay) {
  var leadingCall = !1, trailingCall = !1, lastCallTime = 0;
  function resolvePending() {
    leadingCall && (leadingCall = !1, callback()), trailingCall && proxy();
  }
  function timeoutCallback() {
    requestAnimationFrame$1(resolvePending);
  }
  function proxy() {
    var timeStamp = Date.now();
    if (leadingCall) {
      if (timeStamp - lastCallTime < trailingTimeout)
        return;
      trailingCall = !0;
    } else
      leadingCall = !0, trailingCall = !1, setTimeout(timeoutCallback, delay);
    lastCallTime = timeStamp;
  }
  return proxy;
}
function toFloat(value) {
  return parseFloat(value) || 0;
}
function getBordersSize(styles) {
  for (var positions = [], _i = 1; _i < arguments.length; _i++)
    positions[_i - 1] = arguments[_i];
  return positions.reduce(function(size, position) {
    var value = styles["border-" + position + "-width"];
    return size + toFloat(value);
  }, 0);
}
function getPaddings(styles) {
  for (var positions = ["top", "right", "bottom", "left"], paddings = {}, _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {
    var position = positions_1[_i], value = styles["padding-" + position];
    paddings[position] = toFloat(value);
  }
  return paddings;
}
function getSVGContentRect(target) {
  var bbox = target.getBBox();
  return createRectInit(0, 0, bbox.width, bbox.height);
}
function getHTMLElementContentRect(target) {
  var clientWidth = target.clientWidth, clientHeight = target.clientHeight;
  if (!clientWidth && !clientHeight)
    return emptyRect;
  var styles = getWindowOf(target).getComputedStyle(target), paddings = getPaddings(styles), horizPad = paddings.left + paddings.right, vertPad = paddings.top + paddings.bottom, width = toFloat(styles.width), height = toFloat(styles.height);
  if (styles.boxSizing === "border-box" && (Math.round(width + horizPad) !== clientWidth && (width -= getBordersSize(styles, "left", "right") + horizPad), Math.round(height + vertPad) !== clientHeight && (height -= getBordersSize(styles, "top", "bottom") + vertPad)), !isDocumentElement(target)) {
    var vertScrollbar = Math.round(width + horizPad) - clientWidth, horizScrollbar = Math.round(height + vertPad) - clientHeight;
    Math.abs(vertScrollbar) !== 1 && (width -= vertScrollbar), Math.abs(horizScrollbar) !== 1 && (height -= horizScrollbar);
  }
  return createRectInit(paddings.left, paddings.top, width, height);
}
function isDocumentElement(target) {
  return target === getWindowOf(target).document.documentElement;
}
function getContentRect(target) {
  return isBrowser2 ? isSVGGraphicsElement(target) ? getSVGContentRect(target) : getHTMLElementContentRect(target) : emptyRect;
}
function createReadOnlyRect(_a2) {
  var x5 = _a2.x, y6 = _a2.y, width = _a2.width, height = _a2.height, Constr = typeof DOMRectReadOnly < "u" ? DOMRectReadOnly : Object, rect = Object.create(Constr.prototype);
  return defineConfigurable(rect, {
    x: x5,
    y: y6,
    width,
    height,
    top: y6,
    right: x5 + width,
    bottom: height + y6,
    left: x5
  }), rect;
}
function createRectInit(x5, y6, width, height) {
  return { x: x5, y: y6, width, height };
}
var MapShim, isBrowser2, global$1, requestAnimationFrame$1, trailingTimeout, REFRESH_DELAY, transitionKeys, mutationObserverSupported, ResizeObserverController, defineConfigurable, getWindowOf, emptyRect, isSVGGraphicsElement, ResizeObservation, ResizeObserverEntry, ResizeObserverSPI, observers, ResizeObserver2, index, ResizeObserver_es_default, init_ResizeObserver_es = __esm({
  "node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"() {
    MapShim = function() {
      if (typeof Map < "u")
        return Map;
      function getIndex(arr, key) {
        var result = -1;
        return arr.some(function(entry2, index3) {
          return entry2[0] === key ? (result = index3, !0) : !1;
        }), result;
      }
      return (
        /** @class */
        function() {
          function class_1() {
            this.__entries__ = [];
          }
          return Object.defineProperty(class_1.prototype, "size", {
            /**
             * @returns {boolean}
             */
            get: function() {
              return this.__entries__.length;
            },
            enumerable: !0,
            configurable: !0
          }), class_1.prototype.get = function(key) {
            var index3 = getIndex(this.__entries__, key), entry2 = this.__entries__[index3];
            return entry2 && entry2[1];
          }, class_1.prototype.set = function(key, value) {
            var index3 = getIndex(this.__entries__, key);
            ~index3 ? this.__entries__[index3][1] = value : this.__entries__.push([key, value]);
          }, class_1.prototype.delete = function(key) {
            var entries = this.__entries__, index3 = getIndex(entries, key);
            ~index3 && entries.splice(index3, 1);
          }, class_1.prototype.has = function(key) {
            return !!~getIndex(this.__entries__, key);
          }, class_1.prototype.clear = function() {
            this.__entries__.splice(0);
          }, class_1.prototype.forEach = function(callback, ctx) {
            ctx === void 0 && (ctx = null);
            for (var _i = 0, _a2 = this.__entries__; _i < _a2.length; _i++) {
              var entry2 = _a2[_i];
              callback.call(ctx, entry2[1], entry2[0]);
            }
          }, class_1;
        }()
      );
    }(), isBrowser2 = typeof window < "u" && typeof document < "u" && window.document === document, global$1 = function() {
      return typeof globalThis < "u" && globalThis.Math === Math ? globalThis : typeof self < "u" && self.Math === Math ? self : typeof window < "u" && window.Math === Math ? window : Function("return this")();
    }(), requestAnimationFrame$1 = function() {
      return typeof requestAnimationFrame == "function" ? requestAnimationFrame.bind(global$1) : function(callback) {
        return setTimeout(function() {
          return callback(Date.now());
        }, 1e3 / 60);
      };
    }(), trailingTimeout = 2;
    REFRESH_DELAY = 20, transitionKeys = ["top", "right", "bottom", "left", "width", "height", "size", "weight"], mutationObserverSupported = typeof MutationObserver < "u", ResizeObserverController = /** @class */
    function() {
      function ResizeObserverController2() {
        this.connected_ = !1, this.mutationEventsAdded_ = !1, this.mutationsObserver_ = null, this.observers_ = [], this.onTransitionEnd_ = this.onTransitionEnd_.bind(this), this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
      }
      return ResizeObserverController2.prototype.addObserver = function(observer2) {
        ~this.observers_.indexOf(observer2) || this.observers_.push(observer2), this.connected_ || this.connect_();
      }, ResizeObserverController2.prototype.removeObserver = function(observer2) {
        var observers2 = this.observers_, index3 = observers2.indexOf(observer2);
        ~index3 && observers2.splice(index3, 1), !observers2.length && this.connected_ && this.disconnect_();
      }, ResizeObserverController2.prototype.refresh = function() {
        var changesDetected = this.updateObservers_();
        changesDetected && this.refresh();
      }, ResizeObserverController2.prototype.updateObservers_ = function() {
        var activeObservers = this.observers_.filter(function(observer2) {
          return observer2.gatherActive(), observer2.hasActive();
        });
        return activeObservers.forEach(function(observer2) {
          return observer2.broadcastActive();
        }), activeObservers.length > 0;
      }, ResizeObserverController2.prototype.connect_ = function() {
        !isBrowser2 || this.connected_ || (document.addEventListener("transitionend", this.onTransitionEnd_), window.addEventListener("resize", this.refresh), mutationObserverSupported ? (this.mutationsObserver_ = new MutationObserver(this.refresh), this.mutationsObserver_.observe(document, {
          attributes: !0,
          childList: !0,
          characterData: !0,
          subtree: !0
        })) : (document.addEventListener("DOMSubtreeModified", this.refresh), this.mutationEventsAdded_ = !0), this.connected_ = !0);
      }, ResizeObserverController2.prototype.disconnect_ = function() {
        !isBrowser2 || !this.connected_ || (document.removeEventListener("transitionend", this.onTransitionEnd_), window.removeEventListener("resize", this.refresh), this.mutationsObserver_ && this.mutationsObserver_.disconnect(), this.mutationEventsAdded_ && document.removeEventListener("DOMSubtreeModified", this.refresh), this.mutationsObserver_ = null, this.mutationEventsAdded_ = !1, this.connected_ = !1);
      }, ResizeObserverController2.prototype.onTransitionEnd_ = function(_a2) {
        var _b = _a2.propertyName, propertyName = _b === void 0 ? "" : _b, isReflowProperty = transitionKeys.some(function(key) {
          return !!~propertyName.indexOf(key);
        });
        isReflowProperty && this.refresh();
      }, ResizeObserverController2.getInstance = function() {
        return this.instance_ || (this.instance_ = new ResizeObserverController2()), this.instance_;
      }, ResizeObserverController2.instance_ = null, ResizeObserverController2;
    }(), defineConfigurable = function(target, props) {
      for (var _i = 0, _a2 = Object.keys(props); _i < _a2.length; _i++) {
        var key = _a2[_i];
        Object.defineProperty(target, key, {
          value: props[key],
          enumerable: !1,
          writable: !1,
          configurable: !0
        });
      }
      return target;
    }, getWindowOf = function(target) {
      var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
      return ownerGlobal || global$1;
    }, emptyRect = createRectInit(0, 0, 0, 0);
    isSVGGraphicsElement = function() {
      return typeof SVGGraphicsElement < "u" ? function(target) {
        return target instanceof getWindowOf(target).SVGGraphicsElement;
      } : function(target) {
        return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox == "function";
      };
    }();
    ResizeObservation = /** @class */
    function() {
      function ResizeObservation2(target) {
        this.broadcastWidth = 0, this.broadcastHeight = 0, this.contentRect_ = createRectInit(0, 0, 0, 0), this.target = target;
      }
      return ResizeObservation2.prototype.isActive = function() {
        var rect = getContentRect(this.target);
        return this.contentRect_ = rect, rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;
      }, ResizeObservation2.prototype.broadcastRect = function() {
        var rect = this.contentRect_;
        return this.broadcastWidth = rect.width, this.broadcastHeight = rect.height, rect;
      }, ResizeObservation2;
    }(), ResizeObserverEntry = /** @class */
    function() {
      function ResizeObserverEntry2(target, rectInit) {
        var contentRect = createReadOnlyRect(rectInit);
        defineConfigurable(this, { target, contentRect });
      }
      return ResizeObserverEntry2;
    }(), ResizeObserverSPI = /** @class */
    function() {
      function ResizeObserverSPI2(callback, controller, callbackCtx) {
        if (this.activeObservations_ = [], this.observations_ = new MapShim(), typeof callback != "function")
          throw new TypeError("The callback provided as parameter 1 is not a function.");
        this.callback_ = callback, this.controller_ = controller, this.callbackCtx_ = callbackCtx;
      }
      return ResizeObserverSPI2.prototype.observe = function(target) {
        if (!arguments.length)
          throw new TypeError("1 argument required, but only 0 present.");
        if (!(typeof Element > "u" || !(Element instanceof Object))) {
          if (!(target instanceof getWindowOf(target).Element))
            throw new TypeError('parameter 1 is not of type "Element".');
          var observations = this.observations_;
          observations.has(target) || (observations.set(target, new ResizeObservation(target)), this.controller_.addObserver(this), this.controller_.refresh());
        }
      }, ResizeObserverSPI2.prototype.unobserve = function(target) {
        if (!arguments.length)
          throw new TypeError("1 argument required, but only 0 present.");
        if (!(typeof Element > "u" || !(Element instanceof Object))) {
          if (!(target instanceof getWindowOf(target).Element))
            throw new TypeError('parameter 1 is not of type "Element".');
          var observations = this.observations_;
          observations.has(target) && (observations.delete(target), observations.size || this.controller_.removeObserver(this));
        }
      }, ResizeObserverSPI2.prototype.disconnect = function() {
        this.clearActive(), this.observations_.clear(), this.controller_.removeObserver(this);
      }, ResizeObserverSPI2.prototype.gatherActive = function() {
        var _this = this;
        this.clearActive(), this.observations_.forEach(function(observation) {
          observation.isActive() && _this.activeObservations_.push(observation);
        });
      }, ResizeObserverSPI2.prototype.broadcastActive = function() {
        if (this.hasActive()) {
          var ctx = this.callbackCtx_, entries = this.activeObservations_.map(function(observation) {
            return new ResizeObserverEntry(observation.target, observation.broadcastRect());
          });
          this.callback_.call(ctx, entries, ctx), this.clearActive();
        }
      }, ResizeObserverSPI2.prototype.clearActive = function() {
        this.activeObservations_.splice(0);
      }, ResizeObserverSPI2.prototype.hasActive = function() {
        return this.activeObservations_.length > 0;
      }, ResizeObserverSPI2;
    }(), observers = typeof WeakMap < "u" ? /* @__PURE__ */ new WeakMap() : new MapShim(), ResizeObserver2 = /** @class */
    function() {
      function ResizeObserver3(callback) {
        if (!(this instanceof ResizeObserver3))
          throw new TypeError("Cannot call a class as a function.");
        if (!arguments.length)
          throw new TypeError("1 argument required, but only 0 present.");
        var controller = ResizeObserverController.getInstance(), observer2 = new ResizeObserverSPI(callback, controller, this);
        observers.set(this, observer2);
      }
      return ResizeObserver3;
    }();
    [
      "observe",
      "unobserve",
      "disconnect"
    ].forEach(function(method) {
      ResizeObserver2.prototype[method] = function() {
        var _a2;
        return (_a2 = observers.get(this))[method].apply(_a2, arguments);
      };
    });
    index = function() {
      return typeof global$1.ResizeObserver < "u" ? global$1.ResizeObserver : ResizeObserver2;
    }(), ResizeObserver_es_default = index;
  }
});

// node_modules/react-slick/lib/inner-slider.js
var require_inner_slider = __commonJS({
  "node_modules/react-slick/lib/inner-slider.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.InnerSlider = void 0;
    var _react = _interopRequireDefault(require_react()), _initialState = _interopRequireDefault(require_initial_state()), _lodash = _interopRequireDefault(require_lodash()), _classnames = _interopRequireDefault(require_classnames()), _innerSliderUtils = require_innerSliderUtils(), _track = require_track(), _dots = require_dots(), _arrows = require_arrows(), _resizeObserverPolyfill = _interopRequireDefault((init_ResizeObserver_es(), __toCommonJS(ResizeObserver_es_exports)));
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _typeof(o11) {
      return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o12) {
        return typeof o12;
      } : function(o12) {
        return o12 && typeof Symbol == "function" && o12.constructor === Symbol && o12 !== Symbol.prototype ? "symbol" : typeof o12;
      }, _typeof(o11);
    }
    function _extends5() {
      return _extends5 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    function ownKeys(e5, r9) {
      var t18 = Object.keys(e5);
      if (Object.getOwnPropertySymbols) {
        var o11 = Object.getOwnPropertySymbols(e5);
        r9 && (o11 = o11.filter(function(r10) {
          return Object.getOwnPropertyDescriptor(e5, r10).enumerable;
        })), t18.push.apply(t18, o11);
      }
      return t18;
    }
    function _objectSpread(e5) {
      for (var r9 = 1; r9 < arguments.length; r9++) {
        var t18 = arguments[r9] != null ? arguments[r9] : {};
        r9 % 2 ? ownKeys(Object(t18), !0).forEach(function(r10) {
          _defineProperty2(e5, r10, t18[r10]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e5, Object.getOwnPropertyDescriptors(t18)) : ownKeys(Object(t18)).forEach(function(r10) {
          Object.defineProperty(e5, r10, Object.getOwnPropertyDescriptor(t18, r10));
        });
      }
      return e5;
    }
    function _classCallCheck2(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties2(target, props) {
      for (var i7 = 0; i7 < props.length; i7++) {
        var descriptor = props[i7];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey2(descriptor.key), descriptor);
      }
    }
    function _createClass2(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties2(Constructor.prototype, protoProps), staticProps && _defineProperties2(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", { writable: !1 }), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), Object.defineProperty(subClass, "prototype", { writable: !1 }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o11, p7) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(o12, p8) {
        return o12.__proto__ = p8, o12;
      }, _setPrototypeOf(o11, p7);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call == "function"))
        return call;
      if (call !== void 0)
        throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t18 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch {
      }
      return (_isNativeReflectConstruct = function() {
        return !!t18;
      })();
    }
    function _getPrototypeOf(o11) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(o12) {
        return o12.__proto__ || Object.getPrototypeOf(o12);
      }, _getPrototypeOf(o11);
    }
    function _defineProperty2(obj, key, value) {
      return key = _toPropertyKey2(key), key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _toPropertyKey2(t18) {
      var i7 = _toPrimitive2(t18, "string");
      return _typeof(i7) == "symbol" ? i7 : String(i7);
    }
    function _toPrimitive2(t18, r9) {
      if (_typeof(t18) != "object" || !t18)
        return t18;
      var e5 = t18[Symbol.toPrimitive];
      if (e5 !== void 0) {
        var i7 = e5.call(t18, r9 || "default");
        if (_typeof(i7) != "object")
          return i7;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return (r9 === "string" ? String : Number)(t18);
    }
    var InnerSlider = exports.InnerSlider = /* @__PURE__ */ function(_React$Component) {
      _inherits(InnerSlider2, _React$Component);
      var _super = _createSuper(InnerSlider2);
      function InnerSlider2(props) {
        var _this;
        _classCallCheck2(this, InnerSlider2), _this = _super.call(this, props), _defineProperty2(_assertThisInitialized(_this), "listRefHandler", function(ref) {
          return _this.list = ref;
        }), _defineProperty2(_assertThisInitialized(_this), "trackRefHandler", function(ref) {
          return _this.track = ref;
        }), _defineProperty2(_assertThisInitialized(_this), "adaptHeight", function() {
          if (_this.props.adaptiveHeight && _this.list) {
            var elem = _this.list.querySelector('[data-index="'.concat(_this.state.currentSlide, '"]'));
            _this.list.style.height = (0, _innerSliderUtils.getHeight)(elem) + "px";
          }
        }), _defineProperty2(_assertThisInitialized(_this), "componentDidMount", function() {
          if (_this.props.onInit && _this.props.onInit(), _this.props.lazyLoad) {
            var slidesToLoad = (0, _innerSliderUtils.getOnDemandLazySlides)(_objectSpread(_objectSpread({}, _this.props), _this.state));
            slidesToLoad.length > 0 && (_this.setState(function(prevState) {
              return {
                lazyLoadedList: prevState.lazyLoadedList.concat(slidesToLoad)
              };
            }), _this.props.onLazyLoad && _this.props.onLazyLoad(slidesToLoad));
          }
          var spec = _objectSpread({
            listRef: _this.list,
            trackRef: _this.track
          }, _this.props);
          _this.updateState(spec, !0, function() {
            _this.adaptHeight(), _this.props.autoplay && _this.autoPlay("update");
          }), _this.props.lazyLoad === "progressive" && (_this.lazyLoadTimer = setInterval(_this.progressiveLazyLoad, 1e3)), _this.ro = new _resizeObserverPolyfill.default(function() {
            _this.state.animating ? (_this.onWindowResized(!1), _this.callbackTimers.push(setTimeout(function() {
              return _this.onWindowResized();
            }, _this.props.speed))) : _this.onWindowResized();
          }), _this.ro.observe(_this.list), document.querySelectorAll && Array.prototype.forEach.call(document.querySelectorAll(".slick-slide"), function(slide) {
            slide.onfocus = _this.props.pauseOnFocus ? _this.onSlideFocus : null, slide.onblur = _this.props.pauseOnFocus ? _this.onSlideBlur : null;
          }), window.addEventListener ? window.addEventListener("resize", _this.onWindowResized) : window.attachEvent("onresize", _this.onWindowResized);
        }), _defineProperty2(_assertThisInitialized(_this), "componentWillUnmount", function() {
          _this.animationEndCallback && clearTimeout(_this.animationEndCallback), _this.lazyLoadTimer && clearInterval(_this.lazyLoadTimer), _this.callbackTimers.length && (_this.callbackTimers.forEach(function(timer) {
            return clearTimeout(timer);
          }), _this.callbackTimers = []), window.addEventListener ? window.removeEventListener("resize", _this.onWindowResized) : window.detachEvent("onresize", _this.onWindowResized), _this.autoplayTimer && clearInterval(_this.autoplayTimer), _this.ro.disconnect();
        }), _defineProperty2(_assertThisInitialized(_this), "componentDidUpdate", function(prevProps) {
          if (_this.checkImagesLoad(), _this.props.onReInit && _this.props.onReInit(), _this.props.lazyLoad) {
            var slidesToLoad = (0, _innerSliderUtils.getOnDemandLazySlides)(_objectSpread(_objectSpread({}, _this.props), _this.state));
            slidesToLoad.length > 0 && (_this.setState(function(prevState) {
              return {
                lazyLoadedList: prevState.lazyLoadedList.concat(slidesToLoad)
              };
            }), _this.props.onLazyLoad && _this.props.onLazyLoad(slidesToLoad));
          }
          _this.adaptHeight();
          var spec = _objectSpread(_objectSpread({
            listRef: _this.list,
            trackRef: _this.track
          }, _this.props), _this.state), setTrackStyle = _this.didPropsChange(prevProps);
          setTrackStyle && _this.updateState(spec, setTrackStyle, function() {
            _this.state.currentSlide >= _react.default.Children.count(_this.props.children) && _this.changeSlide({
              message: "index",
              index: _react.default.Children.count(_this.props.children) - _this.props.slidesToShow,
              currentSlide: _this.state.currentSlide
            }), _this.props.autoplay ? _this.autoPlay("update") : _this.pause("paused");
          });
        }), _defineProperty2(_assertThisInitialized(_this), "onWindowResized", function(setTrackStyle) {
          _this.debouncedResize && _this.debouncedResize.cancel(), _this.debouncedResize = (0, _lodash.default)(function() {
            return _this.resizeWindow(setTrackStyle);
          }, 50), _this.debouncedResize();
        }), _defineProperty2(_assertThisInitialized(_this), "resizeWindow", function() {
          var setTrackStyle = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0, isTrackMounted = Boolean(_this.track && _this.track.node);
          if (isTrackMounted) {
            var spec = _objectSpread(_objectSpread({
              listRef: _this.list,
              trackRef: _this.track
            }, _this.props), _this.state);
            _this.updateState(spec, setTrackStyle, function() {
              _this.props.autoplay ? _this.autoPlay("update") : _this.pause("paused");
            }), _this.setState({
              animating: !1
            }), clearTimeout(_this.animationEndCallback), delete _this.animationEndCallback;
          }
        }), _defineProperty2(_assertThisInitialized(_this), "updateState", function(spec, setTrackStyle, callback) {
          var updatedState = (0, _innerSliderUtils.initializedState)(spec);
          spec = _objectSpread(_objectSpread(_objectSpread({}, spec), updatedState), {}, {
            slideIndex: updatedState.currentSlide
          });
          var targetLeft = (0, _innerSliderUtils.getTrackLeft)(spec);
          spec = _objectSpread(_objectSpread({}, spec), {}, {
            left: targetLeft
          });
          var trackStyle = (0, _innerSliderUtils.getTrackCSS)(spec);
          (setTrackStyle || _react.default.Children.count(_this.props.children) !== _react.default.Children.count(spec.children)) && (updatedState.trackStyle = trackStyle), _this.setState(updatedState, callback);
        }), _defineProperty2(_assertThisInitialized(_this), "ssrInit", function() {
          if (_this.props.variableWidth) {
            var _trackWidth = 0, _trackLeft = 0, childrenWidths = [], preClones = (0, _innerSliderUtils.getPreClones)(_objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {
              slideCount: _this.props.children.length
            })), postClones = (0, _innerSliderUtils.getPostClones)(_objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {
              slideCount: _this.props.children.length
            }));
            _this.props.children.forEach(function(child) {
              childrenWidths.push(child.props.style.width), _trackWidth += child.props.style.width;
            });
            for (var i7 = 0; i7 < preClones; i7++)
              _trackLeft += childrenWidths[childrenWidths.length - 1 - i7], _trackWidth += childrenWidths[childrenWidths.length - 1 - i7];
            for (var _i = 0; _i < postClones; _i++)
              _trackWidth += childrenWidths[_i];
            for (var _i2 = 0; _i2 < _this.state.currentSlide; _i2++)
              _trackLeft += childrenWidths[_i2];
            var _trackStyle = {
              width: _trackWidth + "px",
              left: -_trackLeft + "px"
            };
            if (_this.props.centerMode) {
              var currentWidth = "".concat(childrenWidths[_this.state.currentSlide], "px");
              _trackStyle.left = "calc(".concat(_trackStyle.left, " + (100% - ").concat(currentWidth, ") / 2 ) ");
            }
            return {
              trackStyle: _trackStyle
            };
          }
          var childrenCount = _react.default.Children.count(_this.props.children), spec = _objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {
            slideCount: childrenCount
          }), slideCount = (0, _innerSliderUtils.getPreClones)(spec) + (0, _innerSliderUtils.getPostClones)(spec) + childrenCount, trackWidth = 100 / _this.props.slidesToShow * slideCount, slideWidth = 100 / slideCount, trackLeft = -slideWidth * ((0, _innerSliderUtils.getPreClones)(spec) + _this.state.currentSlide) * trackWidth / 100;
          _this.props.centerMode && (trackLeft += (100 - slideWidth * trackWidth / 100) / 2);
          var trackStyle = {
            width: trackWidth + "%",
            left: trackLeft + "%"
          };
          return {
            slideWidth: slideWidth + "%",
            trackStyle
          };
        }), _defineProperty2(_assertThisInitialized(_this), "checkImagesLoad", function() {
          var images = _this.list && _this.list.querySelectorAll && _this.list.querySelectorAll(".slick-slide img") || [], imagesCount = images.length, loadedCount = 0;
          Array.prototype.forEach.call(images, function(image) {
            var handler = function() {
              return ++loadedCount && loadedCount >= imagesCount && _this.onWindowResized();
            };
            if (!image.onclick)
              image.onclick = function() {
                return image.parentNode.focus();
              };
            else {
              var prevClickHandler = image.onclick;
              image.onclick = function(e5) {
                prevClickHandler(e5), image.parentNode.focus();
              };
            }
            image.onload || (_this.props.lazyLoad ? image.onload = function() {
              _this.adaptHeight(), _this.callbackTimers.push(setTimeout(_this.onWindowResized, _this.props.speed));
            } : (image.onload = handler, image.onerror = function() {
              handler(), _this.props.onLazyLoadError && _this.props.onLazyLoadError();
            }));
          });
        }), _defineProperty2(_assertThisInitialized(_this), "progressiveLazyLoad", function() {
          for (var slidesToLoad = [], spec = _objectSpread(_objectSpread({}, _this.props), _this.state), index3 = _this.state.currentSlide; index3 < _this.state.slideCount + (0, _innerSliderUtils.getPostClones)(spec); index3++)
            if (_this.state.lazyLoadedList.indexOf(index3) < 0) {
              slidesToLoad.push(index3);
              break;
            }
          for (var _index3 = _this.state.currentSlide - 1; _index3 >= -(0, _innerSliderUtils.getPreClones)(spec); _index3--)
            if (_this.state.lazyLoadedList.indexOf(_index3) < 0) {
              slidesToLoad.push(_index3);
              break;
            }
          slidesToLoad.length > 0 ? (_this.setState(function(state) {
            return {
              lazyLoadedList: state.lazyLoadedList.concat(slidesToLoad)
            };
          }), _this.props.onLazyLoad && _this.props.onLazyLoad(slidesToLoad)) : _this.lazyLoadTimer && (clearInterval(_this.lazyLoadTimer), delete _this.lazyLoadTimer);
        }), _defineProperty2(_assertThisInitialized(_this), "slideHandler", function(index3) {
          var dontAnimate = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1, _this$props = _this.props, asNavFor = _this$props.asNavFor, beforeChange = _this$props.beforeChange, onLazyLoad = _this$props.onLazyLoad, speed = _this$props.speed, afterChange = _this$props.afterChange, currentSlide = _this.state.currentSlide, _slideHandler = (0, _innerSliderUtils.slideHandler)(_objectSpread(_objectSpread(_objectSpread({
            index: index3
          }, _this.props), _this.state), {}, {
            trackRef: _this.track,
            useCSS: _this.props.useCSS && !dontAnimate
          })), state = _slideHandler.state, nextState = _slideHandler.nextState;
          if (state) {
            beforeChange && beforeChange(currentSlide, state.currentSlide);
            var slidesToLoad = state.lazyLoadedList.filter(function(value) {
              return _this.state.lazyLoadedList.indexOf(value) < 0;
            });
            onLazyLoad && slidesToLoad.length > 0 && onLazyLoad(slidesToLoad), !_this.props.waitForAnimate && _this.animationEndCallback && (clearTimeout(_this.animationEndCallback), afterChange && afterChange(currentSlide), delete _this.animationEndCallback), _this.setState(state, function() {
              asNavFor && _this.asNavForIndex !== index3 && (_this.asNavForIndex = index3, asNavFor.innerSlider.slideHandler(index3)), nextState && (_this.animationEndCallback = setTimeout(function() {
                var animating = nextState.animating, firstBatch = _objectWithoutProperties(nextState, ["animating"]);
                _this.setState(firstBatch, function() {
                  _this.callbackTimers.push(setTimeout(function() {
                    return _this.setState({
                      animating
                    });
                  }, 10)), afterChange && afterChange(state.currentSlide), delete _this.animationEndCallback;
                });
              }, speed));
            });
          }
        }), _defineProperty2(_assertThisInitialized(_this), "changeSlide", function(options) {
          var dontAnimate = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1, spec = _objectSpread(_objectSpread({}, _this.props), _this.state), targetSlide = (0, _innerSliderUtils.changeSlide)(spec, options);
          if (!(targetSlide !== 0 && !targetSlide) && (dontAnimate === !0 ? _this.slideHandler(targetSlide, dontAnimate) : _this.slideHandler(targetSlide), _this.props.autoplay && _this.autoPlay("update"), _this.props.focusOnSelect)) {
            var nodes = _this.list.querySelectorAll(".slick-current");
            nodes[0] && nodes[0].focus();
          }
        }), _defineProperty2(_assertThisInitialized(_this), "clickHandler", function(e5) {
          _this.clickable === !1 && (e5.stopPropagation(), e5.preventDefault()), _this.clickable = !0;
        }), _defineProperty2(_assertThisInitialized(_this), "keyHandler", function(e5) {
          var dir = (0, _innerSliderUtils.keyHandler)(e5, _this.props.accessibility, _this.props.rtl);
          dir !== "" && _this.changeSlide({
            message: dir
          });
        }), _defineProperty2(_assertThisInitialized(_this), "selectHandler", function(options) {
          _this.changeSlide(options);
        }), _defineProperty2(_assertThisInitialized(_this), "disableBodyScroll", function() {
          var preventDefault = function(e5) {
            e5 = e5 || window.event, e5.preventDefault && e5.preventDefault(), e5.returnValue = !1;
          };
          window.ontouchmove = preventDefault;
        }), _defineProperty2(_assertThisInitialized(_this), "enableBodyScroll", function() {
          window.ontouchmove = null;
        }), _defineProperty2(_assertThisInitialized(_this), "swipeStart", function(e5) {
          _this.props.verticalSwiping && _this.disableBodyScroll();
          var state = (0, _innerSliderUtils.swipeStart)(e5, _this.props.swipe, _this.props.draggable);
          state !== "" && _this.setState(state);
        }), _defineProperty2(_assertThisInitialized(_this), "swipeMove", function(e5) {
          var state = (0, _innerSliderUtils.swipeMove)(e5, _objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {
            trackRef: _this.track,
            listRef: _this.list,
            slideIndex: _this.state.currentSlide
          }));
          state && (state.swiping && (_this.clickable = !1), _this.setState(state));
        }), _defineProperty2(_assertThisInitialized(_this), "swipeEnd", function(e5) {
          var state = (0, _innerSliderUtils.swipeEnd)(e5, _objectSpread(_objectSpread(_objectSpread({}, _this.props), _this.state), {}, {
            trackRef: _this.track,
            listRef: _this.list,
            slideIndex: _this.state.currentSlide
          }));
          if (state) {
            var triggerSlideHandler = state.triggerSlideHandler;
            delete state.triggerSlideHandler, _this.setState(state), triggerSlideHandler !== void 0 && (_this.slideHandler(triggerSlideHandler), _this.props.verticalSwiping && _this.enableBodyScroll());
          }
        }), _defineProperty2(_assertThisInitialized(_this), "touchEnd", function(e5) {
          _this.swipeEnd(e5), _this.clickable = !0;
        }), _defineProperty2(_assertThisInitialized(_this), "slickPrev", function() {
          _this.callbackTimers.push(setTimeout(function() {
            return _this.changeSlide({
              message: "previous"
            });
          }, 0));
        }), _defineProperty2(_assertThisInitialized(_this), "slickNext", function() {
          _this.callbackTimers.push(setTimeout(function() {
            return _this.changeSlide({
              message: "next"
            });
          }, 0));
        }), _defineProperty2(_assertThisInitialized(_this), "slickGoTo", function(slide) {
          var dontAnimate = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
          if (slide = Number(slide), isNaN(slide))
            return "";
          _this.callbackTimers.push(setTimeout(function() {
            return _this.changeSlide({
              message: "index",
              index: slide,
              currentSlide: _this.state.currentSlide
            }, dontAnimate);
          }, 0));
        }), _defineProperty2(_assertThisInitialized(_this), "play", function() {
          var nextIndex;
          if (_this.props.rtl)
            nextIndex = _this.state.currentSlide - _this.props.slidesToScroll;
          else if ((0, _innerSliderUtils.canGoNext)(_objectSpread(_objectSpread({}, _this.props), _this.state)))
            nextIndex = _this.state.currentSlide + _this.props.slidesToScroll;
          else
            return !1;
          _this.slideHandler(nextIndex);
        }), _defineProperty2(_assertThisInitialized(_this), "autoPlay", function(playType) {
          _this.autoplayTimer && clearInterval(_this.autoplayTimer);
          var autoplaying = _this.state.autoplaying;
          if (playType === "update") {
            if (autoplaying === "hovered" || autoplaying === "focused" || autoplaying === "paused")
              return;
          } else if (playType === "leave") {
            if (autoplaying === "paused" || autoplaying === "focused")
              return;
          } else if (playType === "blur" && (autoplaying === "paused" || autoplaying === "hovered"))
            return;
          _this.autoplayTimer = setInterval(_this.play, _this.props.autoplaySpeed + 50), _this.setState({
            autoplaying: "playing"
          });
        }), _defineProperty2(_assertThisInitialized(_this), "pause", function(pauseType) {
          _this.autoplayTimer && (clearInterval(_this.autoplayTimer), _this.autoplayTimer = null);
          var autoplaying = _this.state.autoplaying;
          pauseType === "paused" ? _this.setState({
            autoplaying: "paused"
          }) : pauseType === "focused" ? (autoplaying === "hovered" || autoplaying === "playing") && _this.setState({
            autoplaying: "focused"
          }) : autoplaying === "playing" && _this.setState({
            autoplaying: "hovered"
          });
        }), _defineProperty2(_assertThisInitialized(_this), "onDotsOver", function() {
          return _this.props.autoplay && _this.pause("hovered");
        }), _defineProperty2(_assertThisInitialized(_this), "onDotsLeave", function() {
          return _this.props.autoplay && _this.state.autoplaying === "hovered" && _this.autoPlay("leave");
        }), _defineProperty2(_assertThisInitialized(_this), "onTrackOver", function() {
          return _this.props.autoplay && _this.pause("hovered");
        }), _defineProperty2(_assertThisInitialized(_this), "onTrackLeave", function() {
          return _this.props.autoplay && _this.state.autoplaying === "hovered" && _this.autoPlay("leave");
        }), _defineProperty2(_assertThisInitialized(_this), "onSlideFocus", function() {
          return _this.props.autoplay && _this.pause("focused");
        }), _defineProperty2(_assertThisInitialized(_this), "onSlideBlur", function() {
          return _this.props.autoplay && _this.state.autoplaying === "focused" && _this.autoPlay("blur");
        }), _defineProperty2(_assertThisInitialized(_this), "render", function() {
          var className = (0, _classnames.default)("slick-slider", _this.props.className, {
            "slick-vertical": _this.props.vertical,
            "slick-initialized": !0
          }), spec = _objectSpread(_objectSpread({}, _this.props), _this.state), trackProps = (0, _innerSliderUtils.extractObject)(spec, ["fade", "cssEase", "speed", "infinite", "centerMode", "focusOnSelect", "currentSlide", "lazyLoad", "lazyLoadedList", "rtl", "slideWidth", "slideHeight", "listHeight", "vertical", "slidesToShow", "slidesToScroll", "slideCount", "trackStyle", "variableWidth", "unslick", "centerPadding", "targetSlide", "useCSS"]), pauseOnHover = _this.props.pauseOnHover;
          trackProps = _objectSpread(_objectSpread({}, trackProps), {}, {
            onMouseEnter: pauseOnHover ? _this.onTrackOver : null,
            onMouseLeave: pauseOnHover ? _this.onTrackLeave : null,
            onMouseOver: pauseOnHover ? _this.onTrackOver : null,
            focusOnSelect: _this.props.focusOnSelect && _this.clickable ? _this.selectHandler : null
          });
          var dots;
          if (_this.props.dots === !0 && _this.state.slideCount >= _this.props.slidesToShow) {
            var dotProps = (0, _innerSliderUtils.extractObject)(spec, ["dotsClass", "slideCount", "slidesToShow", "currentSlide", "slidesToScroll", "clickHandler", "children", "customPaging", "infinite", "appendDots"]), pauseOnDotsHover = _this.props.pauseOnDotsHover;
            dotProps = _objectSpread(_objectSpread({}, dotProps), {}, {
              clickHandler: _this.changeSlide,
              onMouseEnter: pauseOnDotsHover ? _this.onDotsLeave : null,
              onMouseOver: pauseOnDotsHover ? _this.onDotsOver : null,
              onMouseLeave: pauseOnDotsHover ? _this.onDotsLeave : null
            }), dots = /* @__PURE__ */ _react.default.createElement(_dots.Dots, dotProps);
          }
          var prevArrow, nextArrow, arrowProps = (0, _innerSliderUtils.extractObject)(spec, ["infinite", "centerMode", "currentSlide", "slideCount", "slidesToShow", "prevArrow", "nextArrow"]);
          arrowProps.clickHandler = _this.changeSlide, _this.props.arrows && (prevArrow = /* @__PURE__ */ _react.default.createElement(_arrows.PrevArrow, arrowProps), nextArrow = /* @__PURE__ */ _react.default.createElement(_arrows.NextArrow, arrowProps));
          var verticalHeightStyle = null;
          _this.props.vertical && (verticalHeightStyle = {
            height: _this.state.listHeight
          });
          var centerPaddingStyle = null;
          _this.props.vertical === !1 ? _this.props.centerMode === !0 && (centerPaddingStyle = {
            padding: "0px " + _this.props.centerPadding
          }) : _this.props.centerMode === !0 && (centerPaddingStyle = {
            padding: _this.props.centerPadding + " 0px"
          });
          var listStyle = _objectSpread(_objectSpread({}, verticalHeightStyle), centerPaddingStyle), touchMove = _this.props.touchMove, listProps = {
            className: "slick-list",
            style: listStyle,
            onClick: _this.clickHandler,
            onMouseDown: touchMove ? _this.swipeStart : null,
            onMouseMove: _this.state.dragging && touchMove ? _this.swipeMove : null,
            onMouseUp: touchMove ? _this.swipeEnd : null,
            onMouseLeave: _this.state.dragging && touchMove ? _this.swipeEnd : null,
            onTouchStart: touchMove ? _this.swipeStart : null,
            onTouchMove: _this.state.dragging && touchMove ? _this.swipeMove : null,
            onTouchEnd: touchMove ? _this.touchEnd : null,
            onTouchCancel: _this.state.dragging && touchMove ? _this.swipeEnd : null,
            onKeyDown: _this.props.accessibility ? _this.keyHandler : null
          }, innerSliderProps = {
            className,
            dir: "ltr",
            style: _this.props.style
          };
          return _this.props.unslick && (listProps = {
            className: "slick-list"
          }, innerSliderProps = {
            className
          }), /* @__PURE__ */ _react.default.createElement("div", innerSliderProps, _this.props.unslick ? "" : prevArrow, /* @__PURE__ */ _react.default.createElement("div", _extends5({
            ref: _this.listRefHandler
          }, listProps), /* @__PURE__ */ _react.default.createElement(_track.Track, _extends5({
            ref: _this.trackRefHandler
          }, trackProps), _this.props.children)), _this.props.unslick ? "" : nextArrow, _this.props.unslick ? "" : dots);
        }), _this.list = null, _this.track = null, _this.state = _objectSpread(_objectSpread({}, _initialState.default), {}, {
          currentSlide: _this.props.initialSlide,
          targetSlide: _this.props.initialSlide ? _this.props.initialSlide : 0,
          slideCount: _react.default.Children.count(_this.props.children)
        }), _this.callbackTimers = [], _this.clickable = !0, _this.debouncedResize = null;
        var ssrState = _this.ssrInit();
        return _this.state = _objectSpread(_objectSpread({}, _this.state), ssrState), _this;
      }
      return _createClass2(InnerSlider2, [{
        key: "didPropsChange",
        value: function(prevProps) {
          for (var setTrackStyle = !1, _i3 = 0, _Object$keys = Object.keys(this.props); _i3 < _Object$keys.length; _i3++) {
            var key = _Object$keys[_i3];
            if (!prevProps.hasOwnProperty(key)) {
              setTrackStyle = !0;
              break;
            }
            if (!(_typeof(prevProps[key]) === "object" || typeof prevProps[key] == "function" || isNaN(prevProps[key])) && prevProps[key] !== this.props[key]) {
              setTrackStyle = !0;
              break;
            }
          }
          return setTrackStyle || _react.default.Children.count(this.props.children) !== _react.default.Children.count(prevProps.children);
        }
      }]), InnerSlider2;
    }(_react.default.Component);
  }
});

// node_modules/string-convert/camel2hyphen.js
var require_camel2hyphen = __commonJS({
  "node_modules/string-convert/camel2hyphen.js"(exports, module) {
    var camel2hyphen = function(str) {
      return str.replace(/[A-Z]/g, function(match) {
        return "-" + match.toLowerCase();
      }).toLowerCase();
    };
    module.exports = camel2hyphen;
  }
});

// node_modules/json2mq/index.js
var require_json2mq = __commonJS({
  "node_modules/json2mq/index.js"(exports, module) {
    var camel2hyphen = require_camel2hyphen(), isDimension = function(feature) {
      var re3 = /[height|width]$/;
      return re3.test(feature);
    }, obj2mq = function(obj) {
      var mq = "", features = Object.keys(obj);
      return features.forEach(function(feature, index3) {
        var value = obj[feature];
        feature = camel2hyphen(feature), isDimension(feature) && typeof value == "number" && (value = value + "px"), value === !0 ? mq += feature : value === !1 ? mq += "not " + feature : mq += "(" + feature + ": " + value + ")", index3 < features.length - 1 && (mq += " and ");
      }), mq;
    }, json2mq = function(query) {
      var mq = "";
      return typeof query == "string" ? query : query instanceof Array ? (query.forEach(function(q3, index3) {
        mq += obj2mq(q3), index3 < query.length - 1 && (mq += ", ");
      }), mq) : obj2mq(query);
    };
    module.exports = json2mq;
  }
});

// node_modules/enquire.js/src/QueryHandler.js
var require_QueryHandler = __commonJS({
  "node_modules/enquire.js/src/QueryHandler.js"(exports, module) {
    function QueryHandler(options) {
      this.options = options, !options.deferSetup && this.setup();
    }
    QueryHandler.prototype = {
      constructor: QueryHandler,
      /**
       * coordinates setup of the handler
       *
       * @function
       */
      setup: function() {
        this.options.setup && this.options.setup(), this.initialised = !0;
      },
      /**
       * coordinates setup and triggering of the handler
       *
       * @function
       */
      on: function() {
        !this.initialised && this.setup(), this.options.match && this.options.match();
      },
      /**
       * coordinates the unmatch event for the handler
       *
       * @function
       */
      off: function() {
        this.options.unmatch && this.options.unmatch();
      },
      /**
       * called when a handler is to be destroyed.
       * delegates to the destroy or unmatch callbacks, depending on availability.
       *
       * @function
       */
      destroy: function() {
        this.options.destroy ? this.options.destroy() : this.off();
      },
      /**
       * determines equality by reference.
       * if object is supplied compare options, if function, compare match callback
       *
       * @function
       * @param {object || function} [target] the target for comparison
       */
      equals: function(target) {
        return this.options === target || this.options.match === target;
      }
    };
    module.exports = QueryHandler;
  }
});

// node_modules/enquire.js/src/Util.js
var require_Util = __commonJS({
  "node_modules/enquire.js/src/Util.js"(exports, module) {
    function each(collection, fn) {
      var i7 = 0, length2 = collection.length, cont;
      for (i7; i7 < length2 && (cont = fn(collection[i7], i7), cont !== !1); i7++)
        ;
    }
    function isArray(target) {
      return Object.prototype.toString.apply(target) === "[object Array]";
    }
    function isFunction2(target) {
      return typeof target == "function";
    }
    module.exports = {
      isFunction: isFunction2,
      isArray,
      each
    };
  }
});

// node_modules/enquire.js/src/MediaQuery.js
var require_MediaQuery = __commonJS({
  "node_modules/enquire.js/src/MediaQuery.js"(exports, module) {
    var QueryHandler = require_QueryHandler(), each = require_Util().each;
    function MediaQuery(query, isUnconditional) {
      this.query = query, this.isUnconditional = isUnconditional, this.handlers = [], this.mql = window.matchMedia(query);
      var self2 = this;
      this.listener = function(mql) {
        self2.mql = mql.currentTarget || mql, self2.assess();
      }, this.mql.addListener(this.listener);
    }
    MediaQuery.prototype = {
      constuctor: MediaQuery,
      /**
       * add a handler for this query, triggering if already active
       *
       * @param {object} handler
       * @param {function} handler.match callback for when query is activated
       * @param {function} [handler.unmatch] callback for when query is deactivated
       * @param {function} [handler.setup] callback for immediate execution when a query handler is registered
       * @param {boolean} [handler.deferSetup=false] should the setup callback be deferred until the first time the handler is matched?
       */
      addHandler: function(handler) {
        var qh = new QueryHandler(handler);
        this.handlers.push(qh), this.matches() && qh.on();
      },
      /**
       * removes the given handler from the collection, and calls it's destroy methods
       *
       * @param {object || function} handler the handler to remove
       */
      removeHandler: function(handler) {
        var handlers = this.handlers;
        each(handlers, function(h10, i7) {
          if (h10.equals(handler))
            return h10.destroy(), !handlers.splice(i7, 1);
        });
      },
      /**
       * Determine whether the media query should be considered a match
       *
       * @return {Boolean} true if media query can be considered a match, false otherwise
       */
      matches: function() {
        return this.mql.matches || this.isUnconditional;
      },
      /**
       * Clears all handlers and unbinds events
       */
      clear: function() {
        each(this.handlers, function(handler) {
          handler.destroy();
        }), this.mql.removeListener(this.listener), this.handlers.length = 0;
      },
      /*
          * Assesses the query, turning on all handlers if it matches, turning them off if it doesn't match
          */
      assess: function() {
        var action12 = this.matches() ? "on" : "off";
        each(this.handlers, function(handler) {
          handler[action12]();
        });
      }
    };
    module.exports = MediaQuery;
  }
});

// node_modules/enquire.js/src/MediaQueryDispatch.js
var require_MediaQueryDispatch = __commonJS({
  "node_modules/enquire.js/src/MediaQueryDispatch.js"(exports, module) {
    var MediaQuery = require_MediaQuery(), Util = require_Util(), each = Util.each, isFunction2 = Util.isFunction, isArray = Util.isArray;
    function MediaQueryDispatch() {
      if (!window.matchMedia)
        throw new Error("matchMedia not present, legacy browsers require a polyfill");
      this.queries = {}, this.browserIsIncapable = !window.matchMedia("only all").matches;
    }
    MediaQueryDispatch.prototype = {
      constructor: MediaQueryDispatch,
      /**
       * Registers a handler for the given media query
       *
       * @param {string} q the media query
       * @param {object || Array || Function} options either a single query handler object, a function, or an array of query handlers
       * @param {function} options.match fired when query matched
       * @param {function} [options.unmatch] fired when a query is no longer matched
       * @param {function} [options.setup] fired when handler first triggered
       * @param {boolean} [options.deferSetup=false] whether setup should be run immediately or deferred until query is first matched
       * @param {boolean} [shouldDegrade=false] whether this particular media query should always run on incapable browsers
       */
      register: function(q3, options, shouldDegrade) {
        var queries = this.queries, isUnconditional = shouldDegrade && this.browserIsIncapable;
        return queries[q3] || (queries[q3] = new MediaQuery(q3, isUnconditional)), isFunction2(options) && (options = { match: options }), isArray(options) || (options = [options]), each(options, function(handler) {
          isFunction2(handler) && (handler = { match: handler }), queries[q3].addHandler(handler);
        }), this;
      },
      /**
       * unregisters a query and all it's handlers, or a specific handler for a query
       *
       * @param {string} q the media query to target
       * @param {object || function} [handler] specific handler to unregister
       */
      unregister: function(q3, handler) {
        var query = this.queries[q3];
        return query && (handler ? query.removeHandler(handler) : (query.clear(), delete this.queries[q3])), this;
      }
    };
    module.exports = MediaQueryDispatch;
  }
});

// node_modules/enquire.js/src/index.js
var require_src = __commonJS({
  "node_modules/enquire.js/src/index.js"(exports, module) {
    var MediaQueryDispatch = require_MediaQueryDispatch();
    module.exports = new MediaQueryDispatch();
  }
});

// node_modules/react-slick/lib/slider.js
var require_slider = __commonJS({
  "node_modules/react-slick/lib/slider.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react()), _innerSlider = require_inner_slider(), _json2mq = _interopRequireDefault(require_json2mq()), _defaultProps = _interopRequireDefault(require_default_props()), _innerSliderUtils = require_innerSliderUtils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _typeof(o11) {
      return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o12) {
        return typeof o12;
      } : function(o12) {
        return o12 && typeof Symbol == "function" && o12.constructor === Symbol && o12 !== Symbol.prototype ? "symbol" : typeof o12;
      }, _typeof(o11);
    }
    function _extends5() {
      return _extends5 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function ownKeys(e5, r9) {
      var t18 = Object.keys(e5);
      if (Object.getOwnPropertySymbols) {
        var o11 = Object.getOwnPropertySymbols(e5);
        r9 && (o11 = o11.filter(function(r10) {
          return Object.getOwnPropertyDescriptor(e5, r10).enumerable;
        })), t18.push.apply(t18, o11);
      }
      return t18;
    }
    function _objectSpread(e5) {
      for (var r9 = 1; r9 < arguments.length; r9++) {
        var t18 = arguments[r9] != null ? arguments[r9] : {};
        r9 % 2 ? ownKeys(Object(t18), !0).forEach(function(r10) {
          _defineProperty2(e5, r10, t18[r10]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e5, Object.getOwnPropertyDescriptors(t18)) : ownKeys(Object(t18)).forEach(function(r10) {
          Object.defineProperty(e5, r10, Object.getOwnPropertyDescriptor(t18, r10));
        });
      }
      return e5;
    }
    function _classCallCheck2(instance, Constructor) {
      if (!(instance instanceof Constructor))
        throw new TypeError("Cannot call a class as a function");
    }
    function _defineProperties2(target, props) {
      for (var i7 = 0; i7 < props.length; i7++) {
        var descriptor = props[i7];
        descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey2(descriptor.key), descriptor);
      }
    }
    function _createClass2(Constructor, protoProps, staticProps) {
      return protoProps && _defineProperties2(Constructor.prototype, protoProps), staticProps && _defineProperties2(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", { writable: !1 }), Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass != "function" && superClass !== null)
        throw new TypeError("Super expression must either be null or a function");
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: !0, configurable: !0 } }), Object.defineProperty(subClass, "prototype", { writable: !1 }), superClass && _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o11, p7) {
      return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(o12, p8) {
        return o12.__proto__ = p8, o12;
      }, _setPrototypeOf(o11, p7);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else
          result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call == "function"))
        return call;
      if (call !== void 0)
        throw new TypeError("Derived constructors may only return object or undefined");
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0)
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return self2;
    }
    function _isNativeReflectConstruct() {
      try {
        var t18 = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
      } catch {
      }
      return (_isNativeReflectConstruct = function() {
        return !!t18;
      })();
    }
    function _getPrototypeOf(o11) {
      return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(o12) {
        return o12.__proto__ || Object.getPrototypeOf(o12);
      }, _getPrototypeOf(o11);
    }
    function _defineProperty2(obj, key, value) {
      return key = _toPropertyKey2(key), key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _toPropertyKey2(t18) {
      var i7 = _toPrimitive2(t18, "string");
      return _typeof(i7) == "symbol" ? i7 : String(i7);
    }
    function _toPrimitive2(t18, r9) {
      if (_typeof(t18) != "object" || !t18)
        return t18;
      var e5 = t18[Symbol.toPrimitive];
      if (e5 !== void 0) {
        var i7 = e5.call(t18, r9 || "default");
        if (_typeof(i7) != "object")
          return i7;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return (r9 === "string" ? String : Number)(t18);
    }
    var enquire = (0, _innerSliderUtils.canUseDOM)() && require_src(), Slider8 = exports.default = /* @__PURE__ */ function(_React$Component) {
      _inherits(Slider9, _React$Component);
      var _super = _createSuper(Slider9);
      function Slider9(props) {
        var _this;
        return _classCallCheck2(this, Slider9), _this = _super.call(this, props), _defineProperty2(_assertThisInitialized(_this), "innerSliderRefHandler", function(ref) {
          return _this.innerSlider = ref;
        }), _defineProperty2(_assertThisInitialized(_this), "slickPrev", function() {
          return _this.innerSlider.slickPrev();
        }), _defineProperty2(_assertThisInitialized(_this), "slickNext", function() {
          return _this.innerSlider.slickNext();
        }), _defineProperty2(_assertThisInitialized(_this), "slickGoTo", function(slide) {
          var dontAnimate = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
          return _this.innerSlider.slickGoTo(slide, dontAnimate);
        }), _defineProperty2(_assertThisInitialized(_this), "slickPause", function() {
          return _this.innerSlider.pause("paused");
        }), _defineProperty2(_assertThisInitialized(_this), "slickPlay", function() {
          return _this.innerSlider.autoPlay("play");
        }), _this.state = {
          breakpoint: null
        }, _this._responsiveMediaHandlers = [], _this;
      }
      return _createClass2(Slider9, [{
        key: "media",
        value: function(query, handler) {
          enquire.register(query, handler), this._responsiveMediaHandlers.push({
            query,
            handler
          });
        }
        // handles responsive breakpoints
      }, {
        key: "componentDidMount",
        value: function() {
          var _this2 = this;
          if (this.props.responsive) {
            var breakpoints = this.props.responsive.map(function(breakpt) {
              return breakpt.breakpoint;
            });
            breakpoints.sort(function(x5, y6) {
              return x5 - y6;
            }), breakpoints.forEach(function(breakpoint, index3) {
              var bQuery;
              index3 === 0 ? bQuery = (0, _json2mq.default)({
                minWidth: 0,
                maxWidth: breakpoint
              }) : bQuery = (0, _json2mq.default)({
                minWidth: breakpoints[index3 - 1] + 1,
                maxWidth: breakpoint
              }), (0, _innerSliderUtils.canUseDOM)() && _this2.media(bQuery, function() {
                _this2.setState({
                  breakpoint
                });
              });
            });
            var query = (0, _json2mq.default)({
              minWidth: breakpoints.slice(-1)[0]
            });
            (0, _innerSliderUtils.canUseDOM)() && this.media(query, function() {
              _this2.setState({
                breakpoint: null
              });
            });
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function() {
          this._responsiveMediaHandlers.forEach(function(obj) {
            enquire.unregister(obj.query, obj.handler);
          });
        }
      }, {
        key: "render",
        value: function() {
          var _this3 = this, settings, newProps;
          this.state.breakpoint ? (newProps = this.props.responsive.filter(function(resp) {
            return resp.breakpoint === _this3.state.breakpoint;
          }), settings = newProps[0].settings === "unslick" ? "unslick" : _objectSpread(_objectSpread(_objectSpread({}, _defaultProps.default), this.props), newProps[0].settings)) : settings = _objectSpread(_objectSpread({}, _defaultProps.default), this.props), settings.centerMode && (settings.slidesToScroll > 1 && console.warn("slidesToScroll should be equal to 1 in centerMode, you are using ".concat(settings.slidesToScroll)), settings.slidesToScroll = 1), settings.fade && (settings.slidesToShow > 1 && console.warn("slidesToShow should be equal to 1 when fade is true, you're using ".concat(settings.slidesToShow)), settings.slidesToScroll > 1 && console.warn("slidesToScroll should be equal to 1 when fade is true, you're using ".concat(settings.slidesToScroll)), settings.slidesToShow = 1, settings.slidesToScroll = 1);
          var children = _react.default.Children.toArray(this.props.children);
          children = children.filter(function(child) {
            return typeof child == "string" ? !!child.trim() : !!child;
          }), settings.variableWidth && (settings.rows > 1 || settings.slidesPerRow > 1) && (console.warn("variableWidth is not supported in case of rows > 1 or slidesPerRow > 1"), settings.variableWidth = !1);
          for (var newChildren = [], currentWidth = null, i7 = 0; i7 < children.length; i7 += settings.rows * settings.slidesPerRow) {
            for (var newSlide = [], j5 = i7; j5 < i7 + settings.rows * settings.slidesPerRow; j5 += settings.slidesPerRow) {
              for (var row = [], k2 = j5; k2 < j5 + settings.slidesPerRow && (settings.variableWidth && children[k2].props.style && (currentWidth = children[k2].props.style.width), !(k2 >= children.length)); k2 += 1)
                row.push(/* @__PURE__ */ _react.default.cloneElement(children[k2], {
                  key: 100 * i7 + 10 * j5 + k2,
                  tabIndex: -1,
                  style: {
                    width: "".concat(100 / settings.slidesPerRow, "%"),
                    display: "inline-block"
                  }
                }));
              newSlide.push(/* @__PURE__ */ _react.default.createElement("div", {
                key: 10 * i7 + j5
              }, row));
            }
            settings.variableWidth ? newChildren.push(/* @__PURE__ */ _react.default.createElement("div", {
              key: i7,
              style: {
                width: currentWidth
              }
            }, newSlide)) : newChildren.push(/* @__PURE__ */ _react.default.createElement("div", {
              key: i7
            }, newSlide));
          }
          if (settings === "unslick") {
            var className = "regular slider " + (this.props.className || "");
            return /* @__PURE__ */ _react.default.createElement("div", {
              className
            }, children);
          } else
            newChildren.length <= settings.slidesToShow && !settings.infinite && (settings.unslick = !0);
          return /* @__PURE__ */ _react.default.createElement(_innerSlider.InnerSlider, _extends5({
            style: this.props.style,
            ref: this.innerSliderRefHandler
          }, (0, _innerSliderUtils.filterSettings)(settings)), newChildren);
        }
      }]), Slider9;
    }(_react.default.Component);
  }
});

// node_modules/react-slick/lib/index.js
var require_lib = __commonJS({
  "node_modules/react-slick/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: !0
    });
    exports.default = void 0;
    var _slider = _interopRequireDefault(require_slider());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var _default = exports.default = _slider.default;
  }
});

// node_modules/tailwind-merge/dist/tailwind-merge.cjs.development.js
var require_tailwind_merge_cjs_development = __commonJS({
  "node_modules/tailwind-merge/dist/tailwind-merge.cjs.development.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function twJoin() {
      for (var index3 = 0, argument, resolvedValue, string = ""; index3 < arguments.length; )
        (argument = arguments[index3++]) && (resolvedValue = toValue(argument)) && (string && (string += " "), string += resolvedValue);
      return string;
    }
    function toValue(mix2) {
      if (typeof mix2 == "string")
        return mix2;
      for (var resolvedValue, string = "", k2 = 0; k2 < mix2.length; k2++)
        mix2[k2] && (resolvedValue = toValue(mix2[k2])) && (string && (string += " "), string += resolvedValue);
      return string;
    }
    function _extends5() {
      return _extends5 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    var CLASS_PART_SEPARATOR = "-";
    function createClassUtils(config) {
      var classMap = createClassMap(config);
      function getClassGroupId(className) {
        var classParts = className.split(CLASS_PART_SEPARATOR);
        return classParts[0] === "" && classParts.length !== 1 && classParts.shift(), getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);
      }
      function getConflictingClassGroupIds(classGroupId) {
        return config.conflictingClassGroups[classGroupId] || [];
      }
      return {
        getClassGroupId,
        getConflictingClassGroupIds
      };
    }
    function getGroupRecursive(classParts, classPartObject) {
      var _classPartObject$vali;
      if (classParts.length === 0)
        return classPartObject.classGroupId;
      var currentClassPart = classParts[0], nextClassPartObject = classPartObject.nextPart.get(currentClassPart), classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : void 0;
      if (classGroupFromNextClassPart)
        return classGroupFromNextClassPart;
      if (classPartObject.validators.length !== 0) {
        var classRest = classParts.join(CLASS_PART_SEPARATOR);
        return (_classPartObject$vali = classPartObject.validators.find(function(_ref) {
          var validator = _ref.validator;
          return validator(classRest);
        })) == null ? void 0 : _classPartObject$vali.classGroupId;
      }
    }
    var arbitraryPropertyRegex = /^\[(.+)\]$/;
    function getGroupIdForArbitraryProperty(className) {
      if (arbitraryPropertyRegex.test(className)) {
        var arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1], property = arbitraryPropertyClassName == null ? void 0 : arbitraryPropertyClassName.substring(0, arbitraryPropertyClassName.indexOf(":"));
        if (property)
          return "arbitrary.." + property;
      }
    }
    function createClassMap(config) {
      var theme = config.theme, prefix = config.prefix, classMap = {
        nextPart: /* @__PURE__ */ new Map(),
        validators: []
      }, prefixedClassGroupEntries = getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix);
      return prefixedClassGroupEntries.forEach(function(_ref2) {
        var classGroupId = _ref2[0], classGroup = _ref2[1];
        processClassesRecursively(classGroup, classMap, classGroupId, theme);
      }), classMap;
    }
    function processClassesRecursively(classGroup, classPartObject, classGroupId, theme) {
      classGroup.forEach(function(classDefinition) {
        if (typeof classDefinition == "string") {
          var classPartObjectToEdit = classDefinition === "" ? classPartObject : getPart(classPartObject, classDefinition);
          classPartObjectToEdit.classGroupId = classGroupId;
          return;
        }
        if (typeof classDefinition == "function") {
          if (isThemeGetter(classDefinition)) {
            processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);
            return;
          }
          classPartObject.validators.push({
            validator: classDefinition,
            classGroupId
          });
          return;
        }
        Object.entries(classDefinition).forEach(function(_ref3) {
          var key = _ref3[0], classGroup2 = _ref3[1];
          processClassesRecursively(classGroup2, getPart(classPartObject, key), classGroupId, theme);
        });
      });
    }
    function getPart(classPartObject, path) {
      var currentClassPartObject = classPartObject;
      return path.split(CLASS_PART_SEPARATOR).forEach(function(pathPart) {
        currentClassPartObject.nextPart.has(pathPart) || currentClassPartObject.nextPart.set(pathPart, {
          nextPart: /* @__PURE__ */ new Map(),
          validators: []
        }), currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);
      }), currentClassPartObject;
    }
    function isThemeGetter(func) {
      return func.isThemeGetter;
    }
    function getPrefixedClassGroupEntries(classGroupEntries, prefix) {
      return prefix ? classGroupEntries.map(function(_ref4) {
        var classGroupId = _ref4[0], classGroup = _ref4[1], prefixedClassGroup = classGroup.map(function(classDefinition) {
          return typeof classDefinition == "string" ? prefix + classDefinition : typeof classDefinition == "object" ? Object.fromEntries(Object.entries(classDefinition).map(function(_ref5) {
            var key = _ref5[0], value = _ref5[1];
            return [prefix + key, value];
          })) : classDefinition;
        });
        return [classGroupId, prefixedClassGroup];
      }) : classGroupEntries;
    }
    function createLruCache(maxCacheSize) {
      if (maxCacheSize < 1)
        return {
          get: function() {
          },
          set: function() {
          }
        };
      var cacheSize = 0, cache = /* @__PURE__ */ new Map(), previousCache = /* @__PURE__ */ new Map();
      function update(key, value) {
        cache.set(key, value), cacheSize++, cacheSize > maxCacheSize && (cacheSize = 0, previousCache = cache, cache = /* @__PURE__ */ new Map());
      }
      return {
        get: function(key) {
          var value = cache.get(key);
          if (value !== void 0)
            return value;
          if ((value = previousCache.get(key)) !== void 0)
            return update(key, value), value;
        },
        set: function(key, value) {
          cache.has(key) ? cache.set(key, value) : update(key, value);
        }
      };
    }
    var IMPORTANT_MODIFIER = "!";
    function createSplitModifiers(config) {
      var separator = config.separator || ":";
      return function(className) {
        for (var bracketDepth = 0, modifiers = [], modifierStart = 0, index3 = 0; index3 < className.length; index3++) {
          var _char = className[index3];
          bracketDepth === 0 && _char === separator[0] && (separator.length === 1 || className.slice(index3, index3 + separator.length) === separator) && (modifiers.push(className.slice(modifierStart, index3)), modifierStart = index3 + separator.length), _char === "[" ? bracketDepth++ : _char === "]" && bracketDepth--;
        }
        var baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart), hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER), baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier;
        return {
          modifiers,
          hasImportantModifier,
          baseClassName
        };
      };
    }
    function sortModifiers(modifiers) {
      if (modifiers.length <= 1)
        return modifiers;
      var sortedModifiers = [], unsortedModifiers = [];
      return modifiers.forEach(function(modifier) {
        var isArbitraryVariant = modifier[0] === "[";
        isArbitraryVariant ? (sortedModifiers.push.apply(sortedModifiers, unsortedModifiers.sort().concat([modifier])), unsortedModifiers = []) : unsortedModifiers.push(modifier);
      }), sortedModifiers.push.apply(sortedModifiers, unsortedModifiers.sort()), sortedModifiers;
    }
    function createConfigUtils(config) {
      return _extends5({
        cache: createLruCache(config.cacheSize),
        splitModifiers: createSplitModifiers(config)
      }, createClassUtils(config));
    }
    var SPLIT_CLASSES_REGEX = /\s+/;
    function mergeClassList(classList, configUtils) {
      var splitModifiers = configUtils.splitModifiers, getClassGroupId = configUtils.getClassGroupId, getConflictingClassGroupIds = configUtils.getConflictingClassGroupIds, classGroupsInConflict = /* @__PURE__ */ new Set();
      return classList.trim().split(SPLIT_CLASSES_REGEX).map(function(originalClassName) {
        var _splitModifiers = splitModifiers(originalClassName), modifiers = _splitModifiers.modifiers, hasImportantModifier = _splitModifiers.hasImportantModifier, baseClassName = _splitModifiers.baseClassName, classGroupId = getClassGroupId(baseClassName);
        if (!classGroupId)
          return {
            isTailwindClass: !1,
            originalClassName
          };
        var variantModifier = sortModifiers(modifiers).join(":"), modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;
        return {
          isTailwindClass: !0,
          modifierId,
          classGroupId,
          originalClassName
        };
      }).reverse().filter(function(parsed) {
        if (!parsed.isTailwindClass)
          return !0;
        var modifierId = parsed.modifierId, classGroupId = parsed.classGroupId, classId = modifierId + classGroupId;
        return classGroupsInConflict.has(classId) ? !1 : (classGroupsInConflict.add(classId), getConflictingClassGroupIds(classGroupId).forEach(function(group) {
          return classGroupsInConflict.add(modifierId + group);
        }), !0);
      }).reverse().map(function(parsed) {
        return parsed.originalClassName;
      }).join(" ");
    }
    function createTailwindMerge() {
      for (var _len = arguments.length, createConfig = new Array(_len), _key = 0; _key < _len; _key++)
        createConfig[_key] = arguments[_key];
      var configUtils, cacheGet, cacheSet, functionToCall = initTailwindMerge;
      function initTailwindMerge(classList) {
        var firstCreateConfig = createConfig[0], restCreateConfig = createConfig.slice(1), config = restCreateConfig.reduce(function(previousConfig, createConfigCurrent) {
          return createConfigCurrent(previousConfig);
        }, firstCreateConfig());
        return configUtils = createConfigUtils(config), cacheGet = configUtils.cache.get, cacheSet = configUtils.cache.set, functionToCall = tailwindMerge, tailwindMerge(classList);
      }
      function tailwindMerge(classList) {
        var cachedResult = cacheGet(classList);
        if (cachedResult)
          return cachedResult;
        var result = mergeClassList(classList, configUtils);
        return cacheSet(classList, result), result;
      }
      return function() {
        return functionToCall(twJoin.apply(null, arguments));
      };
    }
    function fromTheme(key) {
      var themeGetter = function(theme) {
        return theme[key] || [];
      };
      return themeGetter.isThemeGetter = !0, themeGetter;
    }
    var arbitraryValueRegex = /^\[(.+)\]$/, fractionRegex = /^\d+\/\d+$/, stringLengths = /* @__PURE__ */ new Set(["px", "full", "screen"]), tshirtUnitRegex = /^(\d+)?(xs|sm|md|lg|xl)$/, lengthUnitRegex = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh)/, shadowRegex = /^-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/;
    function isLength(classPart) {
      return !Number.isNaN(Number(classPart)) || stringLengths.has(classPart) || fractionRegex.test(classPart) || isArbitraryLength(classPart);
    }
    function isArbitraryLength(classPart) {
      var _arbitraryValueRegex$, arbitraryValue = (_arbitraryValueRegex$ = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$[1];
      return arbitraryValue ? arbitraryValue.startsWith("length:") || lengthUnitRegex.test(arbitraryValue) : !1;
    }
    function isArbitrarySize(classPart) {
      var _arbitraryValueRegex$2, arbitraryValue = (_arbitraryValueRegex$2 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$2[1];
      return arbitraryValue ? arbitraryValue.startsWith("size:") : !1;
    }
    function isArbitraryPosition(classPart) {
      var _arbitraryValueRegex$3, arbitraryValue = (_arbitraryValueRegex$3 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$3[1];
      return arbitraryValue ? arbitraryValue.startsWith("position:") : !1;
    }
    function isArbitraryUrl(classPart) {
      var _arbitraryValueRegex$4, arbitraryValue = (_arbitraryValueRegex$4 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$4[1];
      return arbitraryValue ? arbitraryValue.startsWith("url(") || arbitraryValue.startsWith("url:") : !1;
    }
    function isArbitraryNumber(classPart) {
      var _arbitraryValueRegex$5, arbitraryValue = (_arbitraryValueRegex$5 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$5[1];
      return arbitraryValue ? !Number.isNaN(Number(arbitraryValue)) || arbitraryValue.startsWith("number:") : !1;
    }
    var isArbitraryWeight = isArbitraryNumber;
    function isInteger(classPart) {
      var _arbitraryValueRegex$6, arbitraryValue = (_arbitraryValueRegex$6 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$6[1];
      return arbitraryValue ? Number.isInteger(Number(arbitraryValue)) : Number.isInteger(Number(classPart));
    }
    function isArbitraryValue(classPart) {
      return arbitraryValueRegex.test(classPart);
    }
    function isAny() {
      return !0;
    }
    function isTshirtSize(classPart) {
      return tshirtUnitRegex.test(classPart);
    }
    function isArbitraryShadow(classPart) {
      var _arbitraryValueRegex$7, arbitraryValue = (_arbitraryValueRegex$7 = arbitraryValueRegex.exec(classPart)) == null ? void 0 : _arbitraryValueRegex$7[1];
      return arbitraryValue ? shadowRegex.test(arbitraryValue) : !1;
    }
    var validators = {
      __proto__: null,
      isLength,
      isArbitraryLength,
      isArbitrarySize,
      isArbitraryPosition,
      isArbitraryUrl,
      isArbitraryNumber,
      isArbitraryWeight,
      isInteger,
      isArbitraryValue,
      isAny,
      isTshirtSize,
      isArbitraryShadow
    };
    function getDefaultConfig() {
      var colors = fromTheme("colors"), spacing = fromTheme("spacing"), blur = fromTheme("blur"), brightness = fromTheme("brightness"), borderColor = fromTheme("borderColor"), borderRadius = fromTheme("borderRadius"), borderSpacing = fromTheme("borderSpacing"), borderWidth = fromTheme("borderWidth"), contrast = fromTheme("contrast"), grayscale = fromTheme("grayscale"), hueRotate = fromTheme("hueRotate"), invert = fromTheme("invert"), gap = fromTheme("gap"), gradientColorStops = fromTheme("gradientColorStops"), inset = fromTheme("inset"), margin = fromTheme("margin"), opacity = fromTheme("opacity"), padding = fromTheme("padding"), saturate = fromTheme("saturate"), scale = fromTheme("scale"), sepia = fromTheme("sepia"), skew = fromTheme("skew"), space = fromTheme("space"), translate = fromTheme("translate"), getOverscroll = function() {
        return ["auto", "contain", "none"];
      }, getOverflow = function() {
        return ["auto", "hidden", "clip", "visible", "scroll"];
      }, getSpacingWithAuto = function() {
        return ["auto", spacing];
      }, getLengthWithEmpty = function() {
        return ["", isLength];
      }, getIntegerWithAuto = function() {
        return ["auto", isInteger];
      }, getPositions = function() {
        return ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"];
      }, getLineStyles = function() {
        return ["solid", "dashed", "dotted", "double", "none"];
      }, getBlendModes = function() {
        return ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity", "plus-lighter"];
      }, getAlign = function() {
        return ["start", "end", "center", "between", "around", "evenly"];
      }, getZeroAndEmpty = function() {
        return ["", "0", isArbitraryValue];
      }, getBreaks = function() {
        return ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"];
      };
      return {
        cacheSize: 500,
        theme: {
          colors: [isAny],
          spacing: [isLength],
          blur: ["none", "", isTshirtSize, isArbitraryLength],
          brightness: [isInteger],
          borderColor: [colors],
          borderRadius: ["none", "", "full", isTshirtSize, isArbitraryLength],
          borderSpacing: [spacing],
          borderWidth: getLengthWithEmpty(),
          contrast: [isInteger],
          grayscale: getZeroAndEmpty(),
          hueRotate: [isInteger],
          invert: getZeroAndEmpty(),
          gap: [spacing],
          gradientColorStops: [colors],
          inset: getSpacingWithAuto(),
          margin: getSpacingWithAuto(),
          opacity: [isInteger],
          padding: [spacing],
          saturate: [isInteger],
          scale: [isInteger],
          sepia: getZeroAndEmpty(),
          skew: [isInteger, isArbitraryValue],
          space: [spacing],
          translate: [spacing]
        },
        classGroups: {
          // Layout
          /**
           * Aspect Ratio
           * @see https://tailwindcss.com/docs/aspect-ratio
           */
          aspect: [{
            aspect: ["auto", "square", "video", isArbitraryValue]
          }],
          /**
           * Container
           * @see https://tailwindcss.com/docs/container
           */
          container: ["container"],
          /**
           * Columns
           * @see https://tailwindcss.com/docs/columns
           */
          columns: [{
            columns: [isTshirtSize]
          }],
          /**
           * Break After
           * @see https://tailwindcss.com/docs/break-after
           */
          "break-after": [{
            "break-after": getBreaks()
          }],
          /**
           * Break Before
           * @see https://tailwindcss.com/docs/break-before
           */
          "break-before": [{
            "break-before": getBreaks()
          }],
          /**
           * Break Inside
           * @see https://tailwindcss.com/docs/break-inside
           */
          "break-inside": [{
            "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
          }],
          /**
           * Box Decoration Break
           * @see https://tailwindcss.com/docs/box-decoration-break
           */
          "box-decoration": [{
            "box-decoration": ["slice", "clone"]
          }],
          /**
           * Box Sizing
           * @see https://tailwindcss.com/docs/box-sizing
           */
          box: [{
            box: ["border", "content"]
          }],
          /**
           * Display
           * @see https://tailwindcss.com/docs/display
           */
          display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
          /**
           * Floats
           * @see https://tailwindcss.com/docs/float
           */
          float: [{
            float: ["right", "left", "none"]
          }],
          /**
           * Clear
           * @see https://tailwindcss.com/docs/clear
           */
          clear: [{
            clear: ["left", "right", "both", "none"]
          }],
          /**
           * Isolation
           * @see https://tailwindcss.com/docs/isolation
           */
          isolation: ["isolate", "isolation-auto"],
          /**
           * Object Fit
           * @see https://tailwindcss.com/docs/object-fit
           */
          "object-fit": [{
            object: ["contain", "cover", "fill", "none", "scale-down"]
          }],
          /**
           * Object Position
           * @see https://tailwindcss.com/docs/object-position
           */
          "object-position": [{
            object: [].concat(getPositions(), [isArbitraryValue])
          }],
          /**
           * Overflow
           * @see https://tailwindcss.com/docs/overflow
           */
          overflow: [{
            overflow: getOverflow()
          }],
          /**
           * Overflow X
           * @see https://tailwindcss.com/docs/overflow
           */
          "overflow-x": [{
            "overflow-x": getOverflow()
          }],
          /**
           * Overflow Y
           * @see https://tailwindcss.com/docs/overflow
           */
          "overflow-y": [{
            "overflow-y": getOverflow()
          }],
          /**
           * Overscroll Behavior
           * @see https://tailwindcss.com/docs/overscroll-behavior
           */
          overscroll: [{
            overscroll: getOverscroll()
          }],
          /**
           * Overscroll Behavior X
           * @see https://tailwindcss.com/docs/overscroll-behavior
           */
          "overscroll-x": [{
            "overscroll-x": getOverscroll()
          }],
          /**
           * Overscroll Behavior Y
           * @see https://tailwindcss.com/docs/overscroll-behavior
           */
          "overscroll-y": [{
            "overscroll-y": getOverscroll()
          }],
          /**
           * Position
           * @see https://tailwindcss.com/docs/position
           */
          position: ["static", "fixed", "absolute", "relative", "sticky"],
          /**
           * Top / Right / Bottom / Left
           * @see https://tailwindcss.com/docs/top-right-bottom-left
           */
          inset: [{
            inset: [inset]
          }],
          /**
           * Right / Left
           * @see https://tailwindcss.com/docs/top-right-bottom-left
           */
          "inset-x": [{
            "inset-x": [inset]
          }],
          /**
           * Top / Bottom
           * @see https://tailwindcss.com/docs/top-right-bottom-left
           */
          "inset-y": [{
            "inset-y": [inset]
          }],
          /**
           * Top
           * @see https://tailwindcss.com/docs/top-right-bottom-left
           */
          top: [{
            top: [inset]
          }],
          /**
           * Right
           * @see https://tailwindcss.com/docs/top-right-bottom-left
           */
          right: [{
            right: [inset]
          }],
          /**
           * Bottom
           * @see https://tailwindcss.com/docs/top-right-bottom-left
           */
          bottom: [{
            bottom: [inset]
          }],
          /**
           * Left
           * @see https://tailwindcss.com/docs/top-right-bottom-left
           */
          left: [{
            left: [inset]
          }],
          /**
           * Visibility
           * @see https://tailwindcss.com/docs/visibility
           */
          visibility: ["visible", "invisible", "collapse"],
          /**
           * Z-Index
           * @see https://tailwindcss.com/docs/z-index
           */
          z: [{
            z: [isInteger]
          }],
          // Flexbox and Grid
          /**
           * Flex Basis
           * @see https://tailwindcss.com/docs/flex-basis
           */
          basis: [{
            basis: [spacing]
          }],
          /**
           * Flex Direction
           * @see https://tailwindcss.com/docs/flex-direction
           */
          "flex-direction": [{
            flex: ["row", "row-reverse", "col", "col-reverse"]
          }],
          /**
           * Flex Wrap
           * @see https://tailwindcss.com/docs/flex-wrap
           */
          "flex-wrap": [{
            flex: ["wrap", "wrap-reverse", "nowrap"]
          }],
          /**
           * Flex
           * @see https://tailwindcss.com/docs/flex
           */
          flex: [{
            flex: ["1", "auto", "initial", "none", isArbitraryValue]
          }],
          /**
           * Flex Grow
           * @see https://tailwindcss.com/docs/flex-grow
           */
          grow: [{
            grow: getZeroAndEmpty()
          }],
          /**
           * Flex Shrink
           * @see https://tailwindcss.com/docs/flex-shrink
           */
          shrink: [{
            shrink: getZeroAndEmpty()
          }],
          /**
           * Order
           * @see https://tailwindcss.com/docs/order
           */
          order: [{
            order: ["first", "last", "none", isInteger]
          }],
          /**
           * Grid Template Columns
           * @see https://tailwindcss.com/docs/grid-template-columns
           */
          "grid-cols": [{
            "grid-cols": [isAny]
          }],
          /**
           * Grid Column Start / End
           * @see https://tailwindcss.com/docs/grid-column
           */
          "col-start-end": [{
            col: ["auto", {
              span: [isInteger]
            }]
          }],
          /**
           * Grid Column Start
           * @see https://tailwindcss.com/docs/grid-column
           */
          "col-start": [{
            "col-start": getIntegerWithAuto()
          }],
          /**
           * Grid Column End
           * @see https://tailwindcss.com/docs/grid-column
           */
          "col-end": [{
            "col-end": getIntegerWithAuto()
          }],
          /**
           * Grid Template Rows
           * @see https://tailwindcss.com/docs/grid-template-rows
           */
          "grid-rows": [{
            "grid-rows": [isAny]
          }],
          /**
           * Grid Row Start / End
           * @see https://tailwindcss.com/docs/grid-row
           */
          "row-start-end": [{
            row: ["auto", {
              span: [isInteger]
            }]
          }],
          /**
           * Grid Row Start
           * @see https://tailwindcss.com/docs/grid-row
           */
          "row-start": [{
            "row-start": getIntegerWithAuto()
          }],
          /**
           * Grid Row End
           * @see https://tailwindcss.com/docs/grid-row
           */
          "row-end": [{
            "row-end": getIntegerWithAuto()
          }],
          /**
           * Grid Auto Flow
           * @see https://tailwindcss.com/docs/grid-auto-flow
           */
          "grid-flow": [{
            "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
          }],
          /**
           * Grid Auto Columns
           * @see https://tailwindcss.com/docs/grid-auto-columns
           */
          "auto-cols": [{
            "auto-cols": ["auto", "min", "max", "fr", isArbitraryValue]
          }],
          /**
           * Grid Auto Rows
           * @see https://tailwindcss.com/docs/grid-auto-rows
           */
          "auto-rows": [{
            "auto-rows": ["auto", "min", "max", "fr", isArbitraryValue]
          }],
          /**
           * Gap
           * @see https://tailwindcss.com/docs/gap
           */
          gap: [{
            gap: [gap]
          }],
          /**
           * Gap X
           * @see https://tailwindcss.com/docs/gap
           */
          "gap-x": [{
            "gap-x": [gap]
          }],
          /**
           * Gap Y
           * @see https://tailwindcss.com/docs/gap
           */
          "gap-y": [{
            "gap-y": [gap]
          }],
          /**
           * Justify Content
           * @see https://tailwindcss.com/docs/justify-content
           */
          "justify-content": [{
            justify: getAlign()
          }],
          /**
           * Justify Items
           * @see https://tailwindcss.com/docs/justify-items
           */
          "justify-items": [{
            "justify-items": ["start", "end", "center", "stretch"]
          }],
          /**
           * Justify Self
           * @see https://tailwindcss.com/docs/justify-self
           */
          "justify-self": [{
            "justify-self": ["auto", "start", "end", "center", "stretch"]
          }],
          /**
           * Align Content
           * @see https://tailwindcss.com/docs/align-content
           */
          "align-content": [{
            content: [].concat(getAlign(), ["baseline"])
          }],
          /**
           * Align Items
           * @see https://tailwindcss.com/docs/align-items
           */
          "align-items": [{
            items: ["start", "end", "center", "baseline", "stretch"]
          }],
          /**
           * Align Self
           * @see https://tailwindcss.com/docs/align-self
           */
          "align-self": [{
            self: ["auto", "start", "end", "center", "stretch", "baseline"]
          }],
          /**
           * Place Content
           * @see https://tailwindcss.com/docs/place-content
           */
          "place-content": [{
            "place-content": [].concat(getAlign(), ["baseline", "stretch"])
          }],
          /**
           * Place Items
           * @see https://tailwindcss.com/docs/place-items
           */
          "place-items": [{
            "place-items": ["start", "end", "center", "baseline", "stretch"]
          }],
          /**
           * Place Self
           * @see https://tailwindcss.com/docs/place-self
           */
          "place-self": [{
            "place-self": ["auto", "start", "end", "center", "stretch"]
          }],
          // Spacing
          /**
           * Padding
           * @see https://tailwindcss.com/docs/padding
           */
          p: [{
            p: [padding]
          }],
          /**
           * Padding X
           * @see https://tailwindcss.com/docs/padding
           */
          px: [{
            px: [padding]
          }],
          /**
           * Padding Y
           * @see https://tailwindcss.com/docs/padding
           */
          py: [{
            py: [padding]
          }],
          /**
           * Padding Top
           * @see https://tailwindcss.com/docs/padding
           */
          pt: [{
            pt: [padding]
          }],
          /**
           * Padding Right
           * @see https://tailwindcss.com/docs/padding
           */
          pr: [{
            pr: [padding]
          }],
          /**
           * Padding Bottom
           * @see https://tailwindcss.com/docs/padding
           */
          pb: [{
            pb: [padding]
          }],
          /**
           * Padding Left
           * @see https://tailwindcss.com/docs/padding
           */
          pl: [{
            pl: [padding]
          }],
          /**
           * Margin
           * @see https://tailwindcss.com/docs/margin
           */
          m: [{
            m: [margin]
          }],
          /**
           * Margin X
           * @see https://tailwindcss.com/docs/margin
           */
          mx: [{
            mx: [margin]
          }],
          /**
           * Margin Y
           * @see https://tailwindcss.com/docs/margin
           */
          my: [{
            my: [margin]
          }],
          /**
           * Margin Top
           * @see https://tailwindcss.com/docs/margin
           */
          mt: [{
            mt: [margin]
          }],
          /**
           * Margin Right
           * @see https://tailwindcss.com/docs/margin
           */
          mr: [{
            mr: [margin]
          }],
          /**
           * Margin Bottom
           * @see https://tailwindcss.com/docs/margin
           */
          mb: [{
            mb: [margin]
          }],
          /**
           * Margin Left
           * @see https://tailwindcss.com/docs/margin
           */
          ml: [{
            ml: [margin]
          }],
          /**
           * Space Between X
           * @see https://tailwindcss.com/docs/space
           */
          "space-x": [{
            "space-x": [space]
          }],
          /**
           * Space Between X Reverse
           * @see https://tailwindcss.com/docs/space
           */
          "space-x-reverse": ["space-x-reverse"],
          /**
           * Space Between Y
           * @see https://tailwindcss.com/docs/space
           */
          "space-y": [{
            "space-y": [space]
          }],
          /**
           * Space Between Y Reverse
           * @see https://tailwindcss.com/docs/space
           */
          "space-y-reverse": ["space-y-reverse"],
          // Sizing
          /**
           * Width
           * @see https://tailwindcss.com/docs/width
           */
          w: [{
            w: ["auto", "min", "max", "fit", spacing]
          }],
          /**
           * Min-Width
           * @see https://tailwindcss.com/docs/min-width
           */
          "min-w": [{
            "min-w": ["min", "max", "fit", isLength]
          }],
          /**
           * Max-Width
           * @see https://tailwindcss.com/docs/max-width
           */
          "max-w": [{
            "max-w": ["0", "none", "full", "min", "max", "fit", "prose", {
              screen: [isTshirtSize]
            }, isTshirtSize, isArbitraryLength]
          }],
          /**
           * Height
           * @see https://tailwindcss.com/docs/height
           */
          h: [{
            h: [spacing, "auto", "min", "max", "fit"]
          }],
          /**
           * Min-Height
           * @see https://tailwindcss.com/docs/min-height
           */
          "min-h": [{
            "min-h": ["min", "max", "fit", isLength]
          }],
          /**
           * Max-Height
           * @see https://tailwindcss.com/docs/max-height
           */
          "max-h": [{
            "max-h": [spacing, "min", "max", "fit"]
          }],
          // Typography
          /**
           * Font Size
           * @see https://tailwindcss.com/docs/font-size
           */
          "font-size": [{
            text: ["base", isTshirtSize, isArbitraryLength]
          }],
          /**
           * Font Smoothing
           * @see https://tailwindcss.com/docs/font-smoothing
           */
          "font-smoothing": ["antialiased", "subpixel-antialiased"],
          /**
           * Font Style
           * @see https://tailwindcss.com/docs/font-style
           */
          "font-style": ["italic", "not-italic"],
          /**
           * Font Weight
           * @see https://tailwindcss.com/docs/font-weight
           */
          "font-weight": [{
            font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", isArbitraryNumber]
          }],
          /**
           * Font Family
           * @see https://tailwindcss.com/docs/font-family
           */
          "font-family": [{
            font: [isAny]
          }],
          /**
           * Font Variant Numeric
           * @see https://tailwindcss.com/docs/font-variant-numeric
           */
          "fvn-normal": ["normal-nums"],
          /**
           * Font Variant Numeric
           * @see https://tailwindcss.com/docs/font-variant-numeric
           */
          "fvn-ordinal": ["ordinal"],
          /**
           * Font Variant Numeric
           * @see https://tailwindcss.com/docs/font-variant-numeric
           */
          "fvn-slashed-zero": ["slashed-zero"],
          /**
           * Font Variant Numeric
           * @see https://tailwindcss.com/docs/font-variant-numeric
           */
          "fvn-figure": ["lining-nums", "oldstyle-nums"],
          /**
           * Font Variant Numeric
           * @see https://tailwindcss.com/docs/font-variant-numeric
           */
          "fvn-spacing": ["proportional-nums", "tabular-nums"],
          /**
           * Font Variant Numeric
           * @see https://tailwindcss.com/docs/font-variant-numeric
           */
          "fvn-fraction": ["diagonal-fractions", "stacked-fractons"],
          /**
           * Letter Spacing
           * @see https://tailwindcss.com/docs/letter-spacing
           */
          tracking: [{
            tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", isArbitraryLength]
          }],
          /**
           * Line Height
           * @see https://tailwindcss.com/docs/line-height
           */
          leading: [{
            leading: ["none", "tight", "snug", "normal", "relaxed", "loose", isLength]
          }],
          /**
           * List Style Type
           * @see https://tailwindcss.com/docs/list-style-type
           */
          "list-style-type": [{
            list: ["none", "disc", "decimal", isArbitraryValue]
          }],
          /**
           * List Style Position
           * @see https://tailwindcss.com/docs/list-style-position
           */
          "list-style-position": [{
            list: ["inside", "outside"]
          }],
          /**
           * Placeholder Color
           * @deprecated since Tailwind CSS v3.0.0
           * @see https://tailwindcss.com/docs/placeholder-color
           */
          "placeholder-color": [{
            placeholder: [colors]
          }],
          /**
           * Placeholder Opacity
           * @see https://tailwindcss.com/docs/placeholder-opacity
           */
          "placeholder-opacity": [{
            "placeholder-opacity": [opacity]
          }],
          /**
           * Text Alignment
           * @see https://tailwindcss.com/docs/text-align
           */
          "text-alignment": [{
            text: ["left", "center", "right", "justify", "start", "end"]
          }],
          /**
           * Text Color
           * @see https://tailwindcss.com/docs/text-color
           */
          "text-color": [{
            text: [colors]
          }],
          /**
           * Text Opacity
           * @see https://tailwindcss.com/docs/text-opacity
           */
          "text-opacity": [{
            "text-opacity": [opacity]
          }],
          /**
           * Text Decoration
           * @see https://tailwindcss.com/docs/text-decoration
           */
          "text-decoration": ["underline", "overline", "line-through", "no-underline"],
          /**
           * Text Decoration Style
           * @see https://tailwindcss.com/docs/text-decoration-style
           */
          "text-decoration-style": [{
            decoration: [].concat(getLineStyles(), ["wavy"])
          }],
          /**
           * Text Decoration Thickness
           * @see https://tailwindcss.com/docs/text-decoration-thickness
           */
          "text-decoration-thickness": [{
            decoration: ["auto", "from-font", isLength]
          }],
          /**
           * Text Underline Offset
           * @see https://tailwindcss.com/docs/text-underline-offset
           */
          "underline-offset": [{
            "underline-offset": ["auto", isLength]
          }],
          /**
           * Text Decoration Color
           * @see https://tailwindcss.com/docs/text-decoration-color
           */
          "text-decoration-color": [{
            decoration: [colors]
          }],
          /**
           * Text Transform
           * @see https://tailwindcss.com/docs/text-transform
           */
          "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
          /**
           * Text Overflow
           * @see https://tailwindcss.com/docs/text-overflow
           */
          "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
          /**
           * Text Indent
           * @see https://tailwindcss.com/docs/text-indent
           */
          indent: [{
            indent: [spacing]
          }],
          /**
           * Vertical Alignment
           * @see https://tailwindcss.com/docs/vertical-align
           */
          "vertical-align": [{
            align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", isArbitraryLength]
          }],
          /**
           * Whitespace
           * @see https://tailwindcss.com/docs/whitespace
           */
          whitespace: [{
            whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap"]
          }],
          /**
           * Word Break
           * @see https://tailwindcss.com/docs/word-break
           */
          break: [{
            break: ["normal", "words", "all", "keep"]
          }],
          /**
           * Content
           * @see https://tailwindcss.com/docs/content
           */
          content: [{
            content: ["none", isArbitraryValue]
          }],
          // Backgrounds
          /**
           * Background Attachment
           * @see https://tailwindcss.com/docs/background-attachment
           */
          "bg-attachment": [{
            bg: ["fixed", "local", "scroll"]
          }],
          /**
           * Background Clip
           * @see https://tailwindcss.com/docs/background-clip
           */
          "bg-clip": [{
            "bg-clip": ["border", "padding", "content", "text"]
          }],
          /**
           * Background Opacity
           * @deprecated since Tailwind CSS v3.0.0
           * @see https://tailwindcss.com/docs/background-opacity
           */
          "bg-opacity": [{
            "bg-opacity": [opacity]
          }],
          /**
           * Background Origin
           * @see https://tailwindcss.com/docs/background-origin
           */
          "bg-origin": [{
            "bg-origin": ["border", "padding", "content"]
          }],
          /**
           * Background Position
           * @see https://tailwindcss.com/docs/background-position
           */
          "bg-position": [{
            bg: [].concat(getPositions(), [isArbitraryPosition])
          }],
          /**
           * Background Repeat
           * @see https://tailwindcss.com/docs/background-repeat
           */
          "bg-repeat": [{
            bg: ["no-repeat", {
              repeat: ["", "x", "y", "round", "space"]
            }]
          }],
          /**
           * Background Size
           * @see https://tailwindcss.com/docs/background-size
           */
          "bg-size": [{
            bg: ["auto", "cover", "contain", isArbitrarySize]
          }],
          /**
           * Background Image
           * @see https://tailwindcss.com/docs/background-image
           */
          "bg-image": [{
            bg: ["none", {
              "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
            }, isArbitraryUrl]
          }],
          /**
           * Background Color
           * @see https://tailwindcss.com/docs/background-color
           */
          "bg-color": [{
            bg: [colors]
          }],
          /**
           * Gradient Color Stops From
           * @see https://tailwindcss.com/docs/gradient-color-stops
           */
          "gradient-from": [{
            from: [gradientColorStops]
          }],
          /**
           * Gradient Color Stops Via
           * @see https://tailwindcss.com/docs/gradient-color-stops
           */
          "gradient-via": [{
            via: [gradientColorStops]
          }],
          /**
           * Gradient Color Stops To
           * @see https://tailwindcss.com/docs/gradient-color-stops
           */
          "gradient-to": [{
            to: [gradientColorStops]
          }],
          // Borders
          /**
           * Border Radius
           * @see https://tailwindcss.com/docs/border-radius
           */
          rounded: [{
            rounded: [borderRadius]
          }],
          /**
           * Border Radius Top
           * @see https://tailwindcss.com/docs/border-radius
           */
          "rounded-t": [{
            "rounded-t": [borderRadius]
          }],
          /**
           * Border Radius Right
           * @see https://tailwindcss.com/docs/border-radius
           */
          "rounded-r": [{
            "rounded-r": [borderRadius]
          }],
          /**
           * Border Radius Bottom
           * @see https://tailwindcss.com/docs/border-radius
           */
          "rounded-b": [{
            "rounded-b": [borderRadius]
          }],
          /**
           * Border Radius Left
           * @see https://tailwindcss.com/docs/border-radius
           */
          "rounded-l": [{
            "rounded-l": [borderRadius]
          }],
          /**
           * Border Radius Top Left
           * @see https://tailwindcss.com/docs/border-radius
           */
          "rounded-tl": [{
            "rounded-tl": [borderRadius]
          }],
          /**
           * Border Radius Top Right
           * @see https://tailwindcss.com/docs/border-radius
           */
          "rounded-tr": [{
            "rounded-tr": [borderRadius]
          }],
          /**
           * Border Radius Bottom Right
           * @see https://tailwindcss.com/docs/border-radius
           */
          "rounded-br": [{
            "rounded-br": [borderRadius]
          }],
          /**
           * Border Radius Bottom Left
           * @see https://tailwindcss.com/docs/border-radius
           */
          "rounded-bl": [{
            "rounded-bl": [borderRadius]
          }],
          /**
           * Border Width
           * @see https://tailwindcss.com/docs/border-width
           */
          "border-w": [{
            border: [borderWidth]
          }],
          /**
           * Border Width X
           * @see https://tailwindcss.com/docs/border-width
           */
          "border-w-x": [{
            "border-x": [borderWidth]
          }],
          /**
           * Border Width Y
           * @see https://tailwindcss.com/docs/border-width
           */
          "border-w-y": [{
            "border-y": [borderWidth]
          }],
          /**
           * Border Width Top
           * @see https://tailwindcss.com/docs/border-width
           */
          "border-w-t": [{
            "border-t": [borderWidth]
          }],
          /**
           * Border Width Right
           * @see https://tailwindcss.com/docs/border-width
           */
          "border-w-r": [{
            "border-r": [borderWidth]
          }],
          /**
           * Border Width Bottom
           * @see https://tailwindcss.com/docs/border-width
           */
          "border-w-b": [{
            "border-b": [borderWidth]
          }],
          /**
           * Border Width Left
           * @see https://tailwindcss.com/docs/border-width
           */
          "border-w-l": [{
            "border-l": [borderWidth]
          }],
          /**
           * Border Opacity
           * @see https://tailwindcss.com/docs/border-opacity
           */
          "border-opacity": [{
            "border-opacity": [opacity]
          }],
          /**
           * Border Style
           * @see https://tailwindcss.com/docs/border-style
           */
          "border-style": [{
            border: [].concat(getLineStyles(), ["hidden"])
          }],
          /**
           * Divide Width X
           * @see https://tailwindcss.com/docs/divide-width
           */
          "divide-x": [{
            "divide-x": [borderWidth]
          }],
          /**
           * Divide Width X Reverse
           * @see https://tailwindcss.com/docs/divide-width
           */
          "divide-x-reverse": ["divide-x-reverse"],
          /**
           * Divide Width Y
           * @see https://tailwindcss.com/docs/divide-width
           */
          "divide-y": [{
            "divide-y": [borderWidth]
          }],
          /**
           * Divide Width Y Reverse
           * @see https://tailwindcss.com/docs/divide-width
           */
          "divide-y-reverse": ["divide-y-reverse"],
          /**
           * Divide Opacity
           * @see https://tailwindcss.com/docs/divide-opacity
           */
          "divide-opacity": [{
            "divide-opacity": [opacity]
          }],
          /**
           * Divide Style
           * @see https://tailwindcss.com/docs/divide-style
           */
          "divide-style": [{
            divide: getLineStyles()
          }],
          /**
           * Border Color
           * @see https://tailwindcss.com/docs/border-color
           */
          "border-color": [{
            border: [borderColor]
          }],
          /**
           * Border Color X
           * @see https://tailwindcss.com/docs/border-color
           */
          "border-color-x": [{
            "border-x": [borderColor]
          }],
          /**
           * Border Color Y
           * @see https://tailwindcss.com/docs/border-color
           */
          "border-color-y": [{
            "border-y": [borderColor]
          }],
          /**
           * Border Color Top
           * @see https://tailwindcss.com/docs/border-color
           */
          "border-color-t": [{
            "border-t": [borderColor]
          }],
          /**
           * Border Color Right
           * @see https://tailwindcss.com/docs/border-color
           */
          "border-color-r": [{
            "border-r": [borderColor]
          }],
          /**
           * Border Color Bottom
           * @see https://tailwindcss.com/docs/border-color
           */
          "border-color-b": [{
            "border-b": [borderColor]
          }],
          /**
           * Border Color Left
           * @see https://tailwindcss.com/docs/border-color
           */
          "border-color-l": [{
            "border-l": [borderColor]
          }],
          /**
           * Divide Color
           * @see https://tailwindcss.com/docs/divide-color
           */
          "divide-color": [{
            divide: [borderColor]
          }],
          /**
           * Outline Style
           * @see https://tailwindcss.com/docs/outline-style
           */
          "outline-style": [{
            outline: [""].concat(getLineStyles())
          }],
          /**
           * Outline Offset
           * @see https://tailwindcss.com/docs/outline-offset
           */
          "outline-offset": [{
            "outline-offset": [isLength]
          }],
          /**
           * Outline Width
           * @see https://tailwindcss.com/docs/outline-width
           */
          "outline-w": [{
            outline: [isLength]
          }],
          /**
           * Outline Color
           * @see https://tailwindcss.com/docs/outline-color
           */
          "outline-color": [{
            outline: [colors]
          }],
          /**
           * Ring Width
           * @see https://tailwindcss.com/docs/ring-width
           */
          "ring-w": [{
            ring: getLengthWithEmpty()
          }],
          /**
           * Ring Width Inset
           * @see https://tailwindcss.com/docs/ring-width
           */
          "ring-w-inset": ["ring-inset"],
          /**
           * Ring Color
           * @see https://tailwindcss.com/docs/ring-color
           */
          "ring-color": [{
            ring: [colors]
          }],
          /**
           * Ring Opacity
           * @see https://tailwindcss.com/docs/ring-opacity
           */
          "ring-opacity": [{
            "ring-opacity": [opacity]
          }],
          /**
           * Ring Offset Width
           * @see https://tailwindcss.com/docs/ring-offset-width
           */
          "ring-offset-w": [{
            "ring-offset": [isLength]
          }],
          /**
           * Ring Offset Color
           * @see https://tailwindcss.com/docs/ring-offset-color
           */
          "ring-offset-color": [{
            "ring-offset": [colors]
          }],
          // Effects
          /**
           * Box Shadow
           * @see https://tailwindcss.com/docs/box-shadow
           */
          shadow: [{
            shadow: ["", "inner", "none", isTshirtSize, isArbitraryShadow]
          }],
          /**
           * Box Shadow Color
           * @see https://tailwindcss.com/docs/box-shadow-color
           */
          "shadow-color": [{
            shadow: [isAny]
          }],
          /**
           * Opacity
           * @see https://tailwindcss.com/docs/opacity
           */
          opacity: [{
            opacity: [opacity]
          }],
          /**
           * Mix Beldn Mode
           * @see https://tailwindcss.com/docs/mix-blend-mode
           */
          "mix-blend": [{
            "mix-blend": getBlendModes()
          }],
          /**
           * Background Blend Mode
           * @see https://tailwindcss.com/docs/background-blend-mode
           */
          "bg-blend": [{
            "bg-blend": getBlendModes()
          }],
          // Filters
          /**
           * Filter
           * @deprecated since Tailwind CSS v3.0.0
           * @see https://tailwindcss.com/docs/filter
           */
          filter: [{
            filter: ["", "none"]
          }],
          /**
           * Blur
           * @see https://tailwindcss.com/docs/blur
           */
          blur: [{
            blur: [blur]
          }],
          /**
           * Brightness
           * @see https://tailwindcss.com/docs/brightness
           */
          brightness: [{
            brightness: [brightness]
          }],
          /**
           * Contrast
           * @see https://tailwindcss.com/docs/contrast
           */
          contrast: [{
            contrast: [contrast]
          }],
          /**
           * Drop Shadow
           * @see https://tailwindcss.com/docs/drop-shadow
           */
          "drop-shadow": [{
            "drop-shadow": ["", "none", isTshirtSize, isArbitraryValue]
          }],
          /**
           * Grayscale
           * @see https://tailwindcss.com/docs/grayscale
           */
          grayscale: [{
            grayscale: [grayscale]
          }],
          /**
           * Hue Rotate
           * @see https://tailwindcss.com/docs/hue-rotate
           */
          "hue-rotate": [{
            "hue-rotate": [hueRotate]
          }],
          /**
           * Invert
           * @see https://tailwindcss.com/docs/invert
           */
          invert: [{
            invert: [invert]
          }],
          /**
           * Saturate
           * @see https://tailwindcss.com/docs/saturate
           */
          saturate: [{
            saturate: [saturate]
          }],
          /**
           * Sepia
           * @see https://tailwindcss.com/docs/sepia
           */
          sepia: [{
            sepia: [sepia]
          }],
          /**
           * Backdrop Filter
           * @deprecated since Tailwind CSS v3.0.0
           * @see https://tailwindcss.com/docs/backdrop-filter
           */
          "backdrop-filter": [{
            "backdrop-filter": ["", "none"]
          }],
          /**
           * Backdrop Blur
           * @see https://tailwindcss.com/docs/backdrop-blur
           */
          "backdrop-blur": [{
            "backdrop-blur": [blur]
          }],
          /**
           * Backdrop Brightness
           * @see https://tailwindcss.com/docs/backdrop-brightness
           */
          "backdrop-brightness": [{
            "backdrop-brightness": [brightness]
          }],
          /**
           * Backdrop Contrast
           * @see https://tailwindcss.com/docs/backdrop-contrast
           */
          "backdrop-contrast": [{
            "backdrop-contrast": [contrast]
          }],
          /**
           * Backdrop Grayscale
           * @see https://tailwindcss.com/docs/backdrop-grayscale
           */
          "backdrop-grayscale": [{
            "backdrop-grayscale": [grayscale]
          }],
          /**
           * Backdrop Hue Rotate
           * @see https://tailwindcss.com/docs/backdrop-hue-rotate
           */
          "backdrop-hue-rotate": [{
            "backdrop-hue-rotate": [hueRotate]
          }],
          /**
           * Backdrop Invert
           * @see https://tailwindcss.com/docs/backdrop-invert
           */
          "backdrop-invert": [{
            "backdrop-invert": [invert]
          }],
          /**
           * Backdrop Opacity
           * @see https://tailwindcss.com/docs/backdrop-opacity
           */
          "backdrop-opacity": [{
            "backdrop-opacity": [opacity]
          }],
          /**
           * Backdrop Saturate
           * @see https://tailwindcss.com/docs/backdrop-saturate
           */
          "backdrop-saturate": [{
            "backdrop-saturate": [saturate]
          }],
          /**
           * Backdrop Sepia
           * @see https://tailwindcss.com/docs/backdrop-sepia
           */
          "backdrop-sepia": [{
            "backdrop-sepia": [sepia]
          }],
          // Tables
          /**
           * Border Collapse
           * @see https://tailwindcss.com/docs/border-collapse
           */
          "border-collapse": [{
            border: ["collapse", "separate"]
          }],
          /**
           * Border Spacing
           * @see https://tailwindcss.com/docs/border-spacing
           */
          "border-spacing": [{
            "border-spacing": [borderSpacing]
          }],
          /**
           * Border Spacing X
           * @see https://tailwindcss.com/docs/border-spacing
           */
          "border-spacing-x": [{
            "border-spacing-x": [borderSpacing]
          }],
          /**
           * Border Spacing Y
           * @see https://tailwindcss.com/docs/border-spacing
           */
          "border-spacing-y": [{
            "border-spacing-y": [borderSpacing]
          }],
          /**
           * Table Layout
           * @see https://tailwindcss.com/docs/table-layout
           */
          "table-layout": [{
            table: ["auto", "fixed"]
          }],
          // Transitions and Animation
          /**
           * Tranisition Property
           * @see https://tailwindcss.com/docs/transition-property
           */
          transition: [{
            transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", isArbitraryValue]
          }],
          /**
           * Transition Duration
           * @see https://tailwindcss.com/docs/transition-duration
           */
          duration: [{
            duration: [isInteger]
          }],
          /**
           * Transition Timing Function
           * @see https://tailwindcss.com/docs/transition-timing-function
           */
          ease: [{
            ease: ["linear", "in", "out", "in-out", isArbitraryValue]
          }],
          /**
           * Transition Delay
           * @see https://tailwindcss.com/docs/transition-delay
           */
          delay: [{
            delay: [isInteger]
          }],
          /**
           * Animation
           * @see https://tailwindcss.com/docs/animation
           */
          animate: [{
            animate: ["none", "spin", "ping", "pulse", "bounce", isArbitraryValue]
          }],
          // Transforms
          /**
           * Transform
           * @see https://tailwindcss.com/docs/transform
           */
          transform: [{
            transform: ["", "gpu", "none"]
          }],
          /**
           * Scale
           * @see https://tailwindcss.com/docs/scale
           */
          scale: [{
            scale: [scale]
          }],
          /**
           * Scale X
           * @see https://tailwindcss.com/docs/scale
           */
          "scale-x": [{
            "scale-x": [scale]
          }],
          /**
           * Scale Y
           * @see https://tailwindcss.com/docs/scale
           */
          "scale-y": [{
            "scale-y": [scale]
          }],
          /**
           * Rotate
           * @see https://tailwindcss.com/docs/rotate
           */
          rotate: [{
            rotate: [isInteger, isArbitraryValue]
          }],
          /**
           * Translate X
           * @see https://tailwindcss.com/docs/translate
           */
          "translate-x": [{
            "translate-x": [translate]
          }],
          /**
           * Translate Y
           * @see https://tailwindcss.com/docs/translate
           */
          "translate-y": [{
            "translate-y": [translate]
          }],
          /**
           * Skew X
           * @see https://tailwindcss.com/docs/skew
           */
          "skew-x": [{
            "skew-x": [skew]
          }],
          /**
           * Skew Y
           * @see https://tailwindcss.com/docs/skew
           */
          "skew-y": [{
            "skew-y": [skew]
          }],
          /**
           * Transform Origin
           * @see https://tailwindcss.com/docs/transform-origin
           */
          "transform-origin": [{
            origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", isArbitraryValue]
          }],
          // Interactivity
          /**
           * Accent Color
           * @see https://tailwindcss.com/docs/accent-color
           */
          accent: [{
            accent: ["auto", colors]
          }],
          /**
           * Appearance
           * @see https://tailwindcss.com/docs/appearance
           */
          appearance: ["appearance-none"],
          /**
           * Cursor
           * @see https://tailwindcss.com/docs/cursor
           */
          cursor: [{
            cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", isArbitraryValue]
          }],
          /**
           * Caret Color
           * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
           */
          "caret-color": [{
            caret: [colors]
          }],
          /**
           * Pointer Events
           * @see https://tailwindcss.com/docs/pointer-events
           */
          "pointer-events": [{
            "pointer-events": ["none", "auto"]
          }],
          /**
           * Resize
           * @see https://tailwindcss.com/docs/resize
           */
          resize: [{
            resize: ["none", "y", "x", ""]
          }],
          /**
           * Scroll Behavior
           * @see https://tailwindcss.com/docs/scroll-behavior
           */
          "scroll-behavior": [{
            scroll: ["auto", "smooth"]
          }],
          /**
           * Scroll Margin
           * @see https://tailwindcss.com/docs/scroll-margin
           */
          "scroll-m": [{
            "scroll-m": [spacing]
          }],
          /**
           * Scroll Margin X
           * @see https://tailwindcss.com/docs/scroll-margin
           */
          "scroll-mx": [{
            "scroll-mx": [spacing]
          }],
          /**
           * Scroll Margin Y
           * @see https://tailwindcss.com/docs/scroll-margin
           */
          "scroll-my": [{
            "scroll-my": [spacing]
          }],
          /**
           * Scroll Margin Top
           * @see https://tailwindcss.com/docs/scroll-margin
           */
          "scroll-mt": [{
            "scroll-mt": [spacing]
          }],
          /**
           * Scroll Margin Right
           * @see https://tailwindcss.com/docs/scroll-margin
           */
          "scroll-mr": [{
            "scroll-mr": [spacing]
          }],
          /**
           * Scroll Margin Bottom
           * @see https://tailwindcss.com/docs/scroll-margin
           */
          "scroll-mb": [{
            "scroll-mb": [spacing]
          }],
          /**
           * Scroll Margin Left
           * @see https://tailwindcss.com/docs/scroll-margin
           */
          "scroll-ml": [{
            "scroll-ml": [spacing]
          }],
          /**
           * Scroll Padding
           * @see https://tailwindcss.com/docs/scroll-padding
           */
          "scroll-p": [{
            "scroll-p": [spacing]
          }],
          /**
           * Scroll Padding X
           * @see https://tailwindcss.com/docs/scroll-padding
           */
          "scroll-px": [{
            "scroll-px": [spacing]
          }],
          /**
           * Scroll Padding Y
           * @see https://tailwindcss.com/docs/scroll-padding
           */
          "scroll-py": [{
            "scroll-py": [spacing]
          }],
          /**
           * Scroll Padding Top
           * @see https://tailwindcss.com/docs/scroll-padding
           */
          "scroll-pt": [{
            "scroll-pt": [spacing]
          }],
          /**
           * Scroll Padding Right
           * @see https://tailwindcss.com/docs/scroll-padding
           */
          "scroll-pr": [{
            "scroll-pr": [spacing]
          }],
          /**
           * Scroll Padding Bottom
           * @see https://tailwindcss.com/docs/scroll-padding
           */
          "scroll-pb": [{
            "scroll-pb": [spacing]
          }],
          /**
           * Scroll Padding Left
           * @see https://tailwindcss.com/docs/scroll-padding
           */
          "scroll-pl": [{
            "scroll-pl": [spacing]
          }],
          /**
           * Scroll Snap Align
           * @see https://tailwindcss.com/docs/scroll-snap-align
           */
          "snap-align": [{
            snap: ["start", "end", "center", "align-none"]
          }],
          /**
           * Scroll Snap Stop
           * @see https://tailwindcss.com/docs/scroll-snap-stop
           */
          "snap-stop": [{
            snap: ["normal", "always"]
          }],
          /**
           * Scroll Snap Type
           * @see https://tailwindcss.com/docs/scroll-snap-type
           */
          "snap-type": [{
            snap: ["none", "x", "y", "both"]
          }],
          /**
           * Scroll Snap Type Strictness
           * @see https://tailwindcss.com/docs/scroll-snap-type
           */
          "snap-strictness": [{
            snap: ["mandatory", "proximity"]
          }],
          /**
           * Touch Action
           * @see https://tailwindcss.com/docs/touch-action
           */
          touch: [{
            touch: ["auto", "none", "pinch-zoom", "manipulation", {
              pan: ["x", "left", "right", "y", "up", "down"]
            }]
          }],
          /**
           * User Select
           * @see https://tailwindcss.com/docs/user-select
           */
          select: [{
            select: ["none", "text", "all", "auto"]
          }],
          /**
           * Will Change
           * @see https://tailwindcss.com/docs/will-change
           */
          "will-change": [{
            "will-change": ["auto", "scroll", "contents", "transform", isArbitraryValue]
          }],
          // SVG
          /**
           * Fill
           * @see https://tailwindcss.com/docs/fill
           */
          fill: [{
            fill: [colors, "none"]
          }],
          /**
           * Stroke Width
           * @see https://tailwindcss.com/docs/stroke-width
           */
          "stroke-w": [{
            stroke: [isLength, isArbitraryNumber]
          }],
          /**
           * Stroke
           * @see https://tailwindcss.com/docs/stroke
           */
          stroke: [{
            stroke: [colors, "none"]
          }],
          // Accessibility
          /**
           * Screen Readers
           * @see https://tailwindcss.com/docs/screen-readers
           */
          sr: ["sr-only", "not-sr-only"]
        },
        conflictingClassGroups: {
          overflow: ["overflow-x", "overflow-y"],
          overscroll: ["overscroll-x", "overscroll-y"],
          inset: ["inset-x", "inset-y", "top", "right", "bottom", "left"],
          "inset-x": ["right", "left"],
          "inset-y": ["top", "bottom"],
          flex: ["basis", "grow", "shrink"],
          gap: ["gap-x", "gap-y"],
          p: ["px", "py", "pt", "pr", "pb", "pl"],
          px: ["pr", "pl"],
          py: ["pt", "pb"],
          m: ["mx", "my", "mt", "mr", "mb", "ml"],
          mx: ["mr", "ml"],
          my: ["mt", "mb"],
          "font-size": ["leading"],
          "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
          "fvn-ordinal": ["fvn-normal"],
          "fvn-slashed-zero": ["fvn-normal"],
          "fvn-figure": ["fvn-normal"],
          "fvn-spacing": ["fvn-normal"],
          "fvn-fraction": ["fvn-normal"],
          rounded: ["rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
          "rounded-t": ["rounded-tl", "rounded-tr"],
          "rounded-r": ["rounded-tr", "rounded-br"],
          "rounded-b": ["rounded-br", "rounded-bl"],
          "rounded-l": ["rounded-tl", "rounded-bl"],
          "border-spacing": ["border-spacing-x", "border-spacing-y"],
          "border-w": ["border-w-t", "border-w-r", "border-w-b", "border-w-l"],
          "border-w-x": ["border-w-r", "border-w-l"],
          "border-w-y": ["border-w-t", "border-w-b"],
          "border-color": ["border-color-t", "border-color-r", "border-color-b", "border-color-l"],
          "border-color-x": ["border-color-r", "border-color-l"],
          "border-color-y": ["border-color-t", "border-color-b"],
          "scroll-m": ["scroll-mx", "scroll-my", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
          "scroll-mx": ["scroll-mr", "scroll-ml"],
          "scroll-my": ["scroll-mt", "scroll-mb"],
          "scroll-p": ["scroll-px", "scroll-py", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
          "scroll-px": ["scroll-pr", "scroll-pl"],
          "scroll-py": ["scroll-pt", "scroll-pb"]
        }
      };
    }
    var twMerge = /* @__PURE__ */ createTailwindMerge(getDefaultConfig);
    function mergeConfigs(baseConfig, configExtension) {
      for (var key in configExtension)
        mergePropertyRecursively(baseConfig, key, configExtension[key]);
      return baseConfig;
    }
    var hasOwnProperty = Object.prototype.hasOwnProperty, overrideTypes = /* @__PURE__ */ new Set(["string", "number", "boolean"]);
    function mergePropertyRecursively(baseObject, mergeKey, mergeValue) {
      if (!hasOwnProperty.call(baseObject, mergeKey) || overrideTypes.has(typeof mergeValue) || mergeValue === null) {
        baseObject[mergeKey] = mergeValue;
        return;
      }
      if (Array.isArray(mergeValue) && Array.isArray(baseObject[mergeKey])) {
        baseObject[mergeKey] = baseObject[mergeKey].concat(mergeValue);
        return;
      }
      if (typeof mergeValue == "object" && typeof baseObject[mergeKey] == "object") {
        if (baseObject[mergeKey] === null) {
          baseObject[mergeKey] = mergeValue;
          return;
        }
        for (var nextKey in mergeValue)
          mergePropertyRecursively(baseObject[mergeKey], nextKey, mergeValue[nextKey]);
      }
    }
    function extendTailwindMerge(configExtension) {
      for (var _len = arguments.length, createConfig = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)
        createConfig[_key - 1] = arguments[_key];
      return typeof configExtension == "function" ? createTailwindMerge.apply(void 0, [getDefaultConfig, configExtension].concat(createConfig)) : createTailwindMerge.apply(void 0, [function() {
        return mergeConfigs(getDefaultConfig(), configExtension);
      }].concat(createConfig));
    }
    var join = twJoin;
    exports.createTailwindMerge = createTailwindMerge;
    exports.extendTailwindMerge = extendTailwindMerge;
    exports.fromTheme = fromTheme;
    exports.getDefaultConfig = getDefaultConfig;
    exports.join = join;
    exports.mergeConfigs = mergeConfigs;
    exports.twJoin = twJoin;
    exports.twMerge = twMerge;
    exports.validators = validators;
  }
});

// node_modules/tailwind-merge/dist/index.js
var require_dist2 = __commonJS({
  "node_modules/tailwind-merge/dist/index.js"(exports, module) {
    "use strict";
    module.exports = require_tailwind_merge_cjs_development();
  }
});

// node_modules/@material-tailwind/react/utils/objectsToArray.js
var require_objectsToArray = __commonJS({
  "node_modules/@material-tailwind/react/utils/objectsToArray.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return objectsToArray;
    } });
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray2(arr);
    }
    function _iterableToArray(iter) {
      if (typeof Symbol < "u" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    function objectsToArray(object) {
      var result = [];
      return Object.values(object).forEach(function(value) {
        typeof value == "string" ? result = _toConsumableArray(result).concat([value]) : typeof value == "object" && !Array.isArray(value) && value !== null && (result = _toConsumableArray(result).concat(_toConsumableArray(objectsToArray(value))));
      }), result;
    }
  }
});

// node_modules/@material-tailwind/react/utils/objectsToString.js
var require_objectsToString = __commonJS({
  "node_modules/@material-tailwind/react/utils/objectsToString.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return objectsToString;
    } });
    var _objectsToArray = _interopRequireDefault(require_objectsToArray());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function objectsToString(object) {
      return (0, _objectsToArray.default)(object).join(" ");
    }
  }
});

// node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    (function() {
      "use strict";
      var hasSymbol = typeof Symbol == "function" && Symbol.for, REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103, REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106, REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107, REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108, REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114, REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109, REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110, REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111, REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111, REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112, REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113, REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120, REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115, REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116, REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121, REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117, REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118, REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
      function isValidElementType(type) {
        return typeof type == "string" || typeof type == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
        type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type == "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
      }
      function typeOf(object) {
        if (typeof object == "object" && object !== null) {
          var $$typeof = object.$$typeof;
          switch ($$typeof) {
            case REACT_ELEMENT_TYPE:
              var type = object.type;
              switch (type) {
                case REACT_ASYNC_MODE_TYPE:
                case REACT_CONCURRENT_MODE_TYPE:
                case REACT_FRAGMENT_TYPE:
                case REACT_PROFILER_TYPE:
                case REACT_STRICT_MODE_TYPE:
                case REACT_SUSPENSE_TYPE:
                  return type;
                default:
                  var $$typeofType = type && type.$$typeof;
                  switch ($$typeofType) {
                    case REACT_CONTEXT_TYPE:
                    case REACT_FORWARD_REF_TYPE:
                    case REACT_LAZY_TYPE:
                    case REACT_MEMO_TYPE:
                    case REACT_PROVIDER_TYPE:
                      return $$typeofType;
                    default:
                      return $$typeof;
                  }
              }
            case REACT_PORTAL_TYPE:
              return $$typeof;
          }
        }
      }
      var AsyncMode = REACT_ASYNC_MODE_TYPE, ConcurrentMode = REACT_CONCURRENT_MODE_TYPE, ContextConsumer = REACT_CONTEXT_TYPE, ContextProvider = REACT_PROVIDER_TYPE, Element2 = REACT_ELEMENT_TYPE, ForwardRef10 = REACT_FORWARD_REF_TYPE, Fragment30 = REACT_FRAGMENT_TYPE, Lazy = REACT_LAZY_TYPE, Memo = REACT_MEMO_TYPE, Portal = REACT_PORTAL_TYPE, Profiler = REACT_PROFILER_TYPE, StrictMode = REACT_STRICT_MODE_TYPE, Suspense10 = REACT_SUSPENSE_TYPE, hasWarnedAboutDeprecatedIsAsyncMode = !1;
      function isAsyncMode(object) {
        return hasWarnedAboutDeprecatedIsAsyncMode || (hasWarnedAboutDeprecatedIsAsyncMode = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
      }
      function isConcurrentMode(object) {
        return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
      }
      function isContextConsumer(object) {
        return typeOf(object) === REACT_CONTEXT_TYPE;
      }
      function isContextProvider(object) {
        return typeOf(object) === REACT_PROVIDER_TYPE;
      }
      function isElement(object) {
        return typeof object == "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
      }
      function isForwardRef(object) {
        return typeOf(object) === REACT_FORWARD_REF_TYPE;
      }
      function isFragment(object) {
        return typeOf(object) === REACT_FRAGMENT_TYPE;
      }
      function isLazy(object) {
        return typeOf(object) === REACT_LAZY_TYPE;
      }
      function isMemo(object) {
        return typeOf(object) === REACT_MEMO_TYPE;
      }
      function isPortal(object) {
        return typeOf(object) === REACT_PORTAL_TYPE;
      }
      function isProfiler(object) {
        return typeOf(object) === REACT_PROFILER_TYPE;
      }
      function isStrictMode(object) {
        return typeOf(object) === REACT_STRICT_MODE_TYPE;
      }
      function isSuspense(object) {
        return typeOf(object) === REACT_SUSPENSE_TYPE;
      }
      exports.AsyncMode = AsyncMode, exports.ConcurrentMode = ConcurrentMode, exports.ContextConsumer = ContextConsumer, exports.ContextProvider = ContextProvider, exports.Element = Element2, exports.ForwardRef = ForwardRef10, exports.Fragment = Fragment30, exports.Lazy = Lazy, exports.Memo = Memo, exports.Portal = Portal, exports.Profiler = Profiler, exports.StrictMode = StrictMode, exports.Suspense = Suspense10, exports.isAsyncMode = isAsyncMode, exports.isConcurrentMode = isConcurrentMode, exports.isContextConsumer = isContextConsumer, exports.isContextProvider = isContextProvider, exports.isElement = isElement, exports.isForwardRef = isForwardRef, exports.isFragment = isFragment, exports.isLazy = isLazy, exports.isMemo = isMemo, exports.isPortal = isPortal, exports.isProfiler = isProfiler, exports.isStrictMode = isStrictMode, exports.isSuspense = isSuspense, exports.isValidElementType = isValidElementType, exports.typeOf = typeOf;
    })();
  }
});

// node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/react-is/index.js"(exports, module) {
    "use strict";
    module.exports = require_react_is_development();
  }
});

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports, module) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols, hasOwnProperty = Object.prototype.hasOwnProperty, propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val == null)
        throw new TypeError("Object.assign cannot be called with null or undefined");
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign)
          return !1;
        var test1 = new String("abc");
        if (test1[5] = "de", Object.getOwnPropertyNames(test1)[0] === "5")
          return !1;
        for (var test2 = {}, i7 = 0; i7 < 10; i7++)
          test2["_" + String.fromCharCode(i7)] = i7;
        var order2 = Object.getOwnPropertyNames(test2).map(function(n7) {
          return test2[n7];
        });
        if (order2.join("") !== "0123456789")
          return !1;
        var test3 = {};
        return "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        }), Object.keys(Object.assign({}, test3)).join("") === "abcdefghijklmnopqrst";
      } catch {
        return !1;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      for (var from, to = toObject(target), symbols, s15 = 1; s15 < arguments.length; s15++) {
        from = Object(arguments[s15]);
        for (var key in from)
          hasOwnProperty.call(from, key) && (to[key] = from[key]);
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i7 = 0; i7 < symbols.length; i7++)
            propIsEnumerable.call(from, symbols[i7]) && (to[symbols[i7]] = from[symbols[i7]]);
        }
      }
      return to;
    };
  }
});

// node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// node_modules/prop-types/lib/has.js
var require_has = __commonJS({
  "node_modules/prop-types/lib/has.js"(exports, module) {
    module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }
});

// node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/prop-types/checkPropTypes.js"(exports, module) {
    "use strict";
    var printWarning = function() {
    };
    ReactPropTypesSecret = require_ReactPropTypesSecret(), loggedTypeFailures = {}, has = require_has(), printWarning = function(text) {
      var message = "Warning: " + text;
      typeof console < "u" && console.error(message);
      try {
        throw new Error(message);
      } catch {
      }
    };
    var ReactPropTypesSecret, loggedTypeFailures, has;
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      for (var typeSpecName in typeSpecs)
        if (has(typeSpecs, typeSpecName)) {
          var error;
          try {
            if (typeof typeSpecs[typeSpecName] != "function") {
              var err = Error(
                (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw err.name = "Invariant Violation", err;
            }
            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
          } catch (ex) {
            error = ex;
          }
          if (error && !(error instanceof Error) && printWarning(
            (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), error instanceof Error && !(error.message in loggedTypeFailures)) {
            loggedTypeFailures[error.message] = !0;
            var stack = getStack ? getStack() : "";
            printWarning(
              "Failed " + location + " type: " + error.message + (stack ?? "")
            );
          }
        }
    }
    checkPropTypes.resetWarningCache = function() {
      loggedTypeFailures = {};
    };
    module.exports = checkPropTypes;
  }
});

// node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    var ReactIs = require_react_is(), assign = require_object_assign(), ReactPropTypesSecret = require_ReactPropTypesSecret(), has = require_has(), checkPropTypes = require_checkPropTypes(), printWarning = function() {
    };
    printWarning = function(text) {
      var message = "Warning: " + text;
      typeof console < "u" && console.error(message);
      try {
        throw new Error(message);
      } catch {
      }
    };
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement2, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol == "function" && Symbol.iterator, FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn == "function")
          return iteratorFn;
      }
      var ANONYMOUS = "<<anonymous>>", ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x5, y6) {
        return x5 === y6 ? x5 !== 0 || 1 / x5 === 1 / y6 : x5 !== x5 && y6 !== y6;
      }
      function PropTypeError(message, data2) {
        this.message = message, this.data = data2 && typeof data2 == "object" ? data2 : {}, this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate2) {
        var manualPropTypeCallCache = {}, manualPropTypeWarningCount = 0;
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          if (componentName = componentName || ANONYMOUS, propFullName = propFullName || propName, secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
              );
              throw err.name = "Invariant Violation", err;
            } else if (typeof console < "u") {
              var cacheKey = componentName + ":" + propName;
              !manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
              manualPropTypeWarningCount < 3 && (printWarning(
                "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
              ), manualPropTypeCallCache[cacheKey] = !0, manualPropTypeWarningCount++);
            }
          }
          return props[propName] == null ? isRequired ? props[propName] === null ? new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`.")) : new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`.")) : null : validate2(props, propName, componentName, location, propFullName);
        }
        var chainedCheckType = checkType.bind(null, !1);
        return chainedCheckType.isRequired = checkType.bind(null, !0), chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate2(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName], propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError(
              "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
              { expectedType }
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate2);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate2(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker != "function")
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i7 = 0; i7 < propValue.length; i7++) {
            var error = typeChecker(propValue, i7, componentName, location, propFullName + "[" + i7 + "]", ReactPropTypesSecret);
            if (error instanceof Error)
              return error;
          }
          return null;
        }
        return createChainableTypeChecker(validate2);
      }
      function createElementTypeChecker() {
        function validate2(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement2(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate2);
      }
      function createElementTypeTypeChecker() {
        function validate2(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate2);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate2(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS, actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate2);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues))
          return arguments.length > 1 ? printWarning(
            "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
          ) : printWarning("Invalid argument supplied to oneOf, expected an array."), emptyFunctionThatReturnsNull;
        function validate2(props, propName, componentName, location, propFullName) {
          for (var propValue = props[propName], i7 = 0; i7 < expectedValues.length; i7++)
            if (is(propValue, expectedValues[i7]))
              return null;
          var valuesString = JSON.stringify(expectedValues, function(key, value) {
            var type = getPreciseType(value);
            return type === "symbol" ? String(value) : value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate2);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate2(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker != "function")
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          var propValue = props[propName], propType = getPropType(propValue);
          if (propType !== "object")
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          for (var key in propValue)
            if (has(propValue, key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error instanceof Error)
                return error;
            }
          return null;
        }
        return createChainableTypeChecker(validate2);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers))
          return printWarning("Invalid argument supplied to oneOfType, expected an instance of array."), emptyFunctionThatReturnsNull;
        for (var i7 = 0; i7 < arrayOfTypeCheckers.length; i7++) {
          var checker = arrayOfTypeCheckers[i7];
          if (typeof checker != "function")
            return printWarning(
              "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i7 + "."
            ), emptyFunctionThatReturnsNull;
        }
        function validate2(props, propName, componentName, location, propFullName) {
          for (var expectedTypes = [], i8 = 0; i8 < arrayOfTypeCheckers.length; i8++) {
            var checker2 = arrayOfTypeCheckers[i8], checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null)
              return null;
            checkerResult.data && has(checkerResult.data, "expectedType") && expectedTypes.push(checkerResult.data.expectedType);
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate2);
      }
      function createNodeChecker() {
        function validate2(props, propName, componentName, location, propFullName) {
          return isNode(props[propName]) ? null : new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
        }
        return createChainableTypeChecker(validate2);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError(
          (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
        );
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate2(props, propName, componentName, location, propFullName) {
          var propValue = props[propName], propType = getPropType(propValue);
          if (propType !== "object")
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (typeof checker != "function")
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error)
              return error;
          }
          return null;
        }
        return createChainableTypeChecker(validate2);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate2(props, propName, componentName, location, propFullName) {
          var propValue = props[propName], propType = getPropType(propValue);
          if (propType !== "object")
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has(shapeTypes, key) && typeof checker != "function")
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            if (!checker)
              return new PropTypeError(
                "Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(shapeTypes), null, "  ")
              );
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error)
              return error;
          }
          return null;
        }
        return createChainableTypeChecker(validate2);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return !0;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue))
              return propValue.every(isNode);
            if (propValue === null || isValidElement2(propValue))
              return !0;
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue), step;
              if (iteratorFn !== propValue.entries) {
                for (; !(step = iterator.next()).done; )
                  if (!isNode(step.value))
                    return !1;
              } else
                for (; !(step = iterator.next()).done; ) {
                  var entry2 = step.value;
                  if (entry2 && !isNode(entry2[1]))
                    return !1;
                }
            } else
              return !1;
            return !0;
          default:
            return !1;
        }
      }
      function isSymbol(propType, propValue) {
        return propType === "symbol" ? !0 : propValue ? propValue["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && propValue instanceof Symbol : !1;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        return Array.isArray(propValue) ? "array" : propValue instanceof RegExp ? "object" : isSymbol(propType, propValue) ? "symbol" : propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue > "u" || propValue === null)
          return "" + propValue;
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date)
            return "date";
          if (propValue instanceof RegExp)
            return "regexp";
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        return !propValue.constructor || !propValue.constructor.name ? ANONYMOUS : propValue.constructor.name;
      }
      return ReactPropTypes.checkPropTypes = checkPropTypes, ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache, ReactPropTypes.PropTypes = ReactPropTypes, ReactPropTypes;
    };
  }
});

// node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/prop-types/index.js"(exports, module) {
    ReactIs = require_react_is(), throwOnDirectAccess = !0, module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    var ReactIs, throwOnDirectAccess;
  }
});

// node_modules/@material-tailwind/react/node_modules/deepmerge/dist/cjs.js
var require_cjs = __commonJS({
  "node_modules/@material-tailwind/react/node_modules/deepmerge/dist/cjs.js"(exports, module) {
    "use strict";
    var isMergeableObject = function(value) {
      return isNonNullObject(value) && !isSpecial(value);
    };
    function isNonNullObject(value) {
      return !!value && typeof value == "object";
    }
    function isSpecial(value) {
      var stringValue = Object.prototype.toString.call(value);
      return stringValue === "[object RegExp]" || stringValue === "[object Date]" || isReactElement(value);
    }
    var canUseSymbol = typeof Symbol == "function" && Symbol.for, REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for("react.element") : 60103;
    function isReactElement(value) {
      return value.$$typeof === REACT_ELEMENT_TYPE;
    }
    function emptyTarget(val) {
      return Array.isArray(val) ? [] : {};
    }
    function cloneUnlessOtherwiseSpecified(value, options) {
      return options.clone !== !1 && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;
    }
    function defaultArrayMerge(target, source, options) {
      return target.concat(source).map(function(element) {
        return cloneUnlessOtherwiseSpecified(element, options);
      });
    }
    function getMergeFunction(key, options) {
      if (!options.customMerge)
        return deepmerge;
      var customMerge = options.customMerge(key);
      return typeof customMerge == "function" ? customMerge : deepmerge;
    }
    function getEnumerableOwnPropertySymbols(target) {
      return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function(symbol) {
        return target.propertyIsEnumerable(symbol);
      }) : [];
    }
    function getKeys(target) {
      return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));
    }
    function propertyIsOnObject(object, property) {
      try {
        return property in object;
      } catch {
        return !1;
      }
    }
    function propertyIsUnsafe(target, key) {
      return propertyIsOnObject(target, key) && !(Object.hasOwnProperty.call(target, key) && Object.propertyIsEnumerable.call(target, key));
    }
    function mergeObject(target, source, options) {
      var destination = {};
      return options.isMergeableObject(target) && getKeys(target).forEach(function(key) {
        destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
      }), getKeys(source).forEach(function(key) {
        propertyIsUnsafe(target, key) || (propertyIsOnObject(target, key) && options.isMergeableObject(source[key]) ? destination[key] = getMergeFunction(key, options)(target[key], source[key], options) : destination[key] = cloneUnlessOtherwiseSpecified(source[key], options));
      }), destination;
    }
    function deepmerge(target, source, options) {
      options = options || {}, options.arrayMerge = options.arrayMerge || defaultArrayMerge, options.isMergeableObject = options.isMergeableObject || isMergeableObject, options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;
      var sourceIsArray = Array.isArray(source), targetIsArray = Array.isArray(target), sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;
      return sourceAndTargetTypesMatch ? sourceIsArray ? options.arrayMerge(target, source, options) : mergeObject(target, source, options) : cloneUnlessOtherwiseSpecified(source, options);
    }
    deepmerge.all = function(array, options) {
      if (!Array.isArray(array))
        throw new Error("first argument should be an array");
      return array.reduce(function(prev, next) {
        return deepmerge(prev, next, options);
      }, {});
    };
    var deepmerge_1 = deepmerge;
    module.exports = deepmerge_1;
  }
});

// node_modules/@material-tailwind/react/theme/components/accordion/index.js
var require_accordion = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/accordion/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { accordion: function() {
      return accordion;
    }, default: function() {
      return _default;
    } });
    var accordion = { defaultProps: { icon: void 0, className: "", animate: { unmount: {}, mount: {} }, disabled: !1 }, styles: { base: { container: { display: "block", position: "relative", width: "w-full" }, header: { initial: { display: "flex", justifyContent: "justify-between", alignItems: "items-center", width: "w-full", py: "py-4", borderWidth: "border-b border-b-blue-gray-100", color: "text-blue-gray-700", fontSmoothing: "antialiased", fontFamily: "font-sans", fontSize: "text-xl", textAlign: "text-left", fontWeight: "font-semibold", lineHeight: "leading-snug", userSelect: "select-none", hover: "hover:text-blue-gray-900", transition: "transition-colors" }, active: { color: "text-blue-gray-900" }, icon: { ml: "ml-4" } }, body: { display: "block", width: "w-full", py: "py-4", color: "text-gray-700", fontSmoothing: "antialiased", fontFamily: "font-sans", fontSize: "text-sm", fontWeight: "font-light", lineHeight: "leading-normal" }, disabled: { pointerEvents: "pointer-events-none", opacity: "opacity-50" } } } }, _default = accordion;
  }
});

// node_modules/@material-tailwind/react/theme/components/alert/alertFilled.js
var require_alertFilled = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/alert/alertFilled.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var alertFilled = { "blue-gray": { backgroud: "bg-blue-gray-500", color: "text-white" }, gray: { backgroud: "bg-gray-900", color: "text-white" }, brown: { backgroud: "bg-brown-500", color: "text-white" }, "deep-orange": { backgroud: "bg-deep-orange-500", color: "text-white" }, orange: { backgroud: "bg-orange-500", color: "text-white" }, amber: { backgroud: "bg-amber-500", color: "text-black" }, yellow: { backgroud: "bg-yellow-500", color: "text-black" }, lime: { backgroud: "bg-lime-500", color: "text-black" }, "light-green": { backgroud: "bg-light-green-500", color: "text-white" }, green: { backgroud: "bg-green-500", color: "text-white" }, teal: { backgroud: "bg-teal-500", color: "text-white" }, cyan: { backgroud: "bg-cyan-500", color: "text-white" }, "light-blue": { backgroud: "bg-light-blue-500", color: "text-white" }, blue: { backgroud: "bg-blue-500", color: "text-white" }, indigo: { backgroud: "bg-indigo-500", color: "text-white" }, "deep-purple": { backgroud: "bg-deep-purple-500", color: "text-white" }, purple: { backgroud: "bg-purple-500", color: "text-white" }, pink: { backgroud: "bg-pink-500", color: "text-white" }, red: { backgroud: "bg-red-500", color: "text-white" } }, _default = alertFilled;
  }
});

// node_modules/@material-tailwind/react/theme/components/alert/alertGradient.js
var require_alertGradient = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/alert/alertGradient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var alertGradient = { "blue-gray": { backgroud: "bg-gradient-to-tr from-blue-gray-600 to-blue-gray-400", color: "text-white" }, gray: { backgroud: "bg-gradient-to-tr from-gray-900 to-gray-800", color: "text-white" }, brown: { backgroud: "bg-gradient-to-tr from-brown-600 to-brown-400", color: "text-white" }, "deep-orange": { backgroud: "bg-gradient-to-tr from-deep-orange-600 to-deep-orange-400", color: "text-white" }, orange: { backgroud: "bg-gradient-to-tr from-orange-600 to-orange-400", color: "text-white" }, amber: { backgroud: "bg-gradient-to-tr from-amber-600 to-amber-400", color: "text-black" }, yellow: { backgroud: "bg-gradient-to-tr from-yellow-600 to-yellow-400", color: "text-black" }, lime: { backgroud: "bg-gradient-to-tr from-lime-600 to-lime-400", color: "text-black" }, "light-green": { backgroud: "bg-gradient-to-tr from-light-green-600 to-light-green-400", color: "text-white" }, green: { backgroud: "bg-gradient-to-tr from-green-600 to-green-400", color: "text-white" }, teal: { backgroud: "bg-gradient-to-tr from-teal-600 to-teal-400", color: "text-white" }, cyan: { backgroud: "bg-gradient-to-tr from-cyan-600 to-cyan-400", color: "text-white" }, "light-blue": { backgroud: "bg-gradient-to-tr from-light-blue-600 to-light-blue-400", color: "text-white" }, blue: { backgroud: "bg-gradient-to-tr from-blue-600 to-blue-400", color: "text-white" }, indigo: { backgroud: "bg-gradient-to-tr from-indigo-600 to-indigo-400", color: "text-white" }, "deep-purple": { backgroud: "bg-gradient-to-tr from-deep-purple-600 to-deep-purple-400", color: "text-white" }, purple: { backgroud: "bg-gradient-to-tr from-purple-600 to-purple-400", color: "text-white" }, pink: { backgroud: "bg-gradient-to-tr from-pink-600 to-pink-400", color: "text-white" }, red: { backgroud: "bg-gradient-to-tr from-red-600 to-red-400", color: "text-white" } }, _default = alertGradient;
  }
});

// node_modules/@material-tailwind/react/theme/components/alert/alertOutlined.js
var require_alertOutlined = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/alert/alertOutlined.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var alertOutlined = { "blue-gray": { border: "border border-blue-gray-500", color: "text-blue-gray-700" }, gray: { border: "border border-gray-900", color: "text-gray-900" }, brown: { border: "border border-brown-500", color: "text-brown-700" }, "deep-orange": { border: "border border-deep-orange-500", color: "text-deep-orange-700" }, orange: { border: "border border-orange-500", color: "text-orange-700" }, amber: { border: "border border-amber-500", color: "text-amber-700" }, yellow: { border: "border border-yellow-500", color: "text-yellow-700" }, lime: { border: "border border-lime-500", color: "text-lime-700" }, "light-green": { border: "border border-light-green-500", color: "text-light-green-700" }, green: { border: "border border-green-500", color: "text-green-700" }, teal: { border: "border border-teal-500", color: "text-teal-700" }, cyan: { border: "border border-cyan-500", color: "text-cyan-700" }, "light-blue": { border: "border border-light-blue-500", color: "text-light-blue-700" }, blue: { border: "border border-blue-500", color: "text-blue-700" }, indigo: { border: "border border-indigo-500", color: "text-indigo-700" }, "deep-purple": { border: "border border-deep-purple-500", color: "text-deep-purple-700" }, purple: { border: "border border-purple-500", color: "text-purple-700" }, pink: { border: "border border-pink-500", color: "text-pink-700" }, red: { border: "border border-red-500", color: "text-red-700" } }, _default = alertOutlined;
  }
});

// node_modules/@material-tailwind/react/theme/components/alert/alertGhost.js
var require_alertGhost = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/alert/alertGhost.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var alertGhost = { "blue-gray": { backgroud: "bg-blue-gray-500/20", color: "text-blue-gray-900" }, gray: { backgroud: "bg-gray-900/10", color: "text-gray-900" }, brown: { backgroud: "bg-brown-500/20", color: "text-brown-900" }, "deep-orange": { backgroud: "bg-deep-orange-500/20", color: "text-deep-orange-900" }, orange: { backgroud: "bg-orange-500/20", color: "text-orange-900" }, amber: { backgroud: "bg-amber-500/20", color: "text-amber-900" }, yellow: { backgroud: "bg-yellow-500/20", color: "text-yellow-900" }, lime: { backgroud: "bg-lime-500/20", color: "text-lime-900" }, "light-green": { backgroud: "bg-light-green-500/20", color: "text-light-green-900" }, green: { backgroud: "bg-green-500/20", color: "text-green-900" }, teal: { backgroud: "bg-teal-500/20", color: "text-teal-900" }, cyan: { backgroud: "bg-cyan-500/20", color: "text-cyan-900" }, "light-blue": { backgroud: "bg-light-blue-500/20", color: "text-light-blue-900" }, blue: { backgroud: "bg-blue-500/20", color: "text-blue-900" }, indigo: { backgroud: "bg-indigo-500/20", color: "text-indigo-900" }, "deep-purple": { backgroud: "bg-deep-purple-500/20", color: "text-deep-purple-900" }, purple: { backgroud: "bg-purple-500/20", color: "text-purple-900" }, pink: { backgroud: "bg-pink-500/20", color: "text-pink-900" }, red: { backgroud: "bg-red-500/20", color: "text-red-900" } }, _default = alertGhost;
  }
});

// node_modules/@material-tailwind/react/types/generic.js
var require_generic = __commonJS({
  "node_modules/@material-tailwind/react/types/generic.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesColors: function() {
      return propTypesColors;
    }, propTypesAnimation: function() {
      return propTypesAnimation;
    }, propTypesDismissType: function() {
      return propTypesDismissType;
    }, propTypesOffsetType: function() {
      return propTypesOffsetType;
    }, propTypesPlacements: function() {
      return propTypesPlacements;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var propTypesColors = ["blue-gray", "gray", "brown", "deep-orange", "orange", "amber", "yellow", "lime", "light-green", "green", "teal", "cyan", "light-blue", "blue", "indigo", "deep-purple", "purple", "pink", "red"], propTypesAnimation = _propTypes.default.shape({ mount: _propTypes.default.instanceOf(Object), unmount: _propTypes.default.instanceOf(Object) }), propTypesDismissType = _propTypes.default.shape({ enabled: _propTypes.default.bool, escapeKey: _propTypes.default.bool, referencePress: _propTypes.default.bool, referencePressEvent: _propTypes.default.oneOf(["pointerdown", "mousedown", "click"]), outsidePress: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.func]), outsidePressEvent: _propTypes.default.oneOf(["pointerdown", "mousedown", "click"]), ancestorScroll: _propTypes.default.bool, bubbles: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.shape({ escapeKey: _propTypes.default.bool, outsidePress: _propTypes.default.bool })]) }), propTypesOffsetType = _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({ mainAxis: _propTypes.default.number, crossAxis: _propTypes.default.number, alignmentAxis: _propTypes.default.number })]), propTypesPlacements = ["top-start", "top", "top-end", "right-start", "right", "right-end", "bottom-start", "bottom", "bottom-end", "left-start", "left", "left-end"];
  }
});

// node_modules/@material-tailwind/react/types/components/alert.js
var require_alert = __commonJS({
  "node_modules/@material-tailwind/react/types/components/alert.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesVariant: function() {
      return propTypesVariant;
    }, propTypesColor: function() {
      return propTypesColor;
    }, propTypesIcon: function() {
      return propTypesIcon;
    }, propTypesOpen: function() {
      return propTypesOpen;
    }, propTypesOnClose: function() {
      return propTypesOnClose;
    }, propTypesAction: function() {
      return propTypesAction;
    }, propTypesAnimate: function() {
      return propTypesAnimate;
    }, propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesChildren: function() {
      return propTypesChildren;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var propTypesVariant = ["filled", "gradient", "outlined", "ghost"], propTypesColor = _generic.propTypesColors, propTypesIcon = _propTypes.default.node, propTypesOpen = _propTypes.default.bool, propTypesOnClose = _propTypes.default.func, propTypesAction = _propTypes.default.node, propTypesAnimate = _generic.propTypesAnimation, propTypesClassName = _propTypes.default.string, propTypesChildren = _propTypes.default.node.isRequired;
  }
});

// node_modules/@material-tailwind/react/theme/components/alert/index.js
var require_alert2 = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/alert/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { alert: function() {
      return alert;
    }, default: function() {
      return _default;
    } });
    var _alertFilled = _interopRequireDefault(require_alertFilled()), _alertGradient = _interopRequireDefault(require_alertGradient()), _alertOutlined = _interopRequireDefault(require_alertOutlined()), _alertGhost = _interopRequireDefault(require_alertGhost()), _alert = require_alert();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var alert = { defaultProps: { variant: "filled", color: "gray", icon: void 0, open: !0, action: void 0, onClose: void 0, animate: { unmount: {}, mount: {} }, className: "" }, valid: { variants: _alert.propTypesVariant, colors: _alert.propTypesColor }, styles: { base: { alert: { position: "relative", display: "block", width: "w-full", fontFamily: "font-sans", fontSize: "text-base", fontWeight: "font-regular", px: "px-4", py: "py-4", borderRadius: "rounded-lg" }, action: { position: "!absolute", top: "top-3", right: "right-3" } }, variants: { filled: _alertFilled.default, gradient: _alertGradient.default, outlined: _alertOutlined.default, ghost: _alertGhost.default } } }, _default = alert;
  }
});

// node_modules/@material-tailwind/react/types/components/avatar.js
var require_avatar = __commonJS({
  "node_modules/@material-tailwind/react/types/components/avatar.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesVariant: function() {
      return propTypesVariant;
    }, propTypesSize: function() {
      return propTypesSize;
    }, propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesWithBorder: function() {
      return propTypesWithBorder;
    }, propTypesColor: function() {
      return propTypesColor;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray2(arr);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArray(iter) {
      if (typeof Symbol < "u" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var propTypesVariant = ["circular", "rounded", "square"], propTypesSize = ["xs", "sm", "md", "lg", "xl", "xxl"], propTypesClassName = _propTypes.default.string, propTypesWithBorder = _propTypes.default.bool, propTypesColor = ["white"].concat(_toConsumableArray(_generic.propTypesColors));
  }
});

// node_modules/@material-tailwind/react/theme/components/avatar/avatarBorderColor.js
var require_avatarBorderColor = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/avatar/avatarBorderColor.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var avatarBorderColor = { white: { borderColor: "border-white" }, "blue-gray": { borderColor: "border-blue-gray-500" }, gray: { borderColor: "border-gray-900" }, brown: { borderColor: "border-brown-500" }, "deep-orange": { borderColor: "border-deep-orange-500" }, orange: { borderColor: "border-orange-500" }, amber: { borderColor: "border-amber-500" }, yellow: { borderColor: "border-yellow-500" }, lime: { borderColor: "border-lime-500" }, "light-green": { borderColor: "border-light-green-500" }, green: { borderColor: "border-green-500" }, teal: { borderColor: "border-teal-500" }, cyan: { borderColor: "border-cyan-500" }, "light-blue": { borderColor: "border-light-blue-500" }, blue: { borderColor: "border-blue-500" }, indigo: { borderColor: "border-indigo-500" }, "deep-purple": { borderColor: "border-deep-purple-500" }, purple: { borderColor: "border-purple-500" }, pink: { borderColor: "border-pink-500" }, red: { borderColor: "border-red-500" } }, _default = avatarBorderColor;
  }
});

// node_modules/@material-tailwind/react/theme/components/avatar/index.js
var require_avatar2 = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/avatar/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { avatar: function() {
      return avatar;
    }, default: function() {
      return _default;
    } });
    var _avatar = require_avatar(), _avatarBorderColor = _interopRequireDefault(require_avatarBorderColor());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var avatar = { defaultProps: { variant: "circular", size: "md", className: "", withBorder: !1, color: "gray" }, valid: { variants: _avatar.propTypesVariant, sizes: _avatar.propTypesSize, colors: _avatar.propTypesColor }, styles: { base: { initial: { display: "inline-block", position: "relative", objectFit: "object-cover", objectPosition: "object-center" }, withBorder: { border: "border-2" } }, sizes: { xs: { width: "w-6", height: "h-6", borderRadius: "rounded-md" }, sm: { width: "w-9", height: "h-9", borderRadius: "rounded-md" }, md: { width: "w-12", height: "h-12", borderRadius: "rounded-lg" }, lg: { width: "w-[58px]", height: "h-[58px]", borderRadius: "rounded-lg" }, xl: { width: "w-[74px]", height: "h-[74px]", borderRadius: "rounded-xl" }, xxl: { width: "w-[110px]", height: "h-[110px]", borderRadius: "rounded-2xl" } }, variants: { rounded: {}, square: { borderRadius: "!rounded-none" }, circular: { borderRadius: "!rounded-full" } }, borderColor: _avatarBorderColor.default } }, _default = avatar;
  }
});

// node_modules/@material-tailwind/react/theme/components/breadcrumbs/index.js
var require_breadcrumbs = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/breadcrumbs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { breadcrumbs: function() {
      return breadcrumbs;
    }, default: function() {
      return _default;
    } });
    var breadcrumbs = { defaultProps: { className: "", fullWidth: !1, separator: "/" }, styles: { base: { root: { initial: { width: "w-max" }, fullWidth: { display: "block", width: "w-full" } }, list: { display: "flex", flexWrap: "flex-wrap", alignItems: "items-center", width: "w-full", bg: "bg-blue-gray-50", bgOpacity: "bg-opacity-60", py: "py-2", px: "px-4", borderRadius: "rounded-md" }, item: { initial: { display: "flex", alignItems: "items-center", color: "text-blue-gray-900", fontSmoothing: "antialiased", fontFamily: "font-sans", fontSize: "text-sm", fontWeight: "font-normal", lineHeight: "leading-normal", cursor: "cursor-pointer", transition: "transition-colors duration-300", hover: "hover:text-light-blue-500" }, disabled: { pointerEvents: "pointer-events-none" } }, separator: { color: "text-blue-gray-500", fontSize: "text-sm", fontSmoothing: "antialiased", fontFamily: "font-sans", fontWeight: "font-normal", lineHeight: "leading-normal", px: "mx-2", pointerEvents: "pointer-events-none", userSelcet: "select-none" } } } }, _default = breadcrumbs;
  }
});

// node_modules/@material-tailwind/react/theme/components/button/buttonFilled.js
var require_buttonFilled = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/button/buttonFilled.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var buttonFilled = { white: { backgroud: "bg-white", color: "text-blue-gray-900", shadow: "shadow-md shadow-blue-gray-500/10", hover: "hover:shadow-lg hover:shadow-blue-gray-500/20", focus: "focus:opacity-[0.85] focus:shadow-none", active: "active:opacity-[0.85] active:shadow-none" }, "blue-gray": { backgroud: "bg-blue-gray-500", color: "text-white", shadow: "shadow-md shadow-blue-gray-500/20", hover: "hover:shadow-lg hover:shadow-blue-gray-500/40", focus: "focus:opacity-[0.85] focus:shadow-none", active: "active:opacity-[0.85] active:shadow-none" }, gray: { backgroud: "bg-gray-900", color: "text-white", shadow: "shadow-md shadow-gray-900/10", hover: "hover:shadow-lg hover:shadow-gray-900/20", focus: "focus:opacity-[0.85] focus:shadow-none", active: "active:opacity-[0.85] active:shadow-none" }, brown: { backgroud: "bg-brown-500", color: "text-white", shadow: "shadow-md shadow-brown-500/20", hover: "hover:shadow-lg hover:shadow-brown-500/40", focus: "focus:opacity-[0.85] focus:shadow-none", active: "active:opacity-[0.85] active:shadow-none" }, "deep-orange": { backgroud: "bg-deep-orange-500", color: "text-white", shadow: "shadow-md shadow-deep-orange-500/20", hover: "hover:shadow-lg hover:shadow-deep-orange-500/40", focus: "focus:opacity-[0.85] focus:shadow-none", active: "active:opacity-[0.85] active:shadow-none" }, orange: { backgroud: "bg-orange-500", color: "text-white", shadow: "shadow-md shadow-orange-500/20", hover: "hover:shadow-lg hover:shadow-orange-500/40", focus: "focus:opacity-[0.85] focus:shadow-none", active: "active:opacity-[0.85] active:shadow-none" }, amber: { backgroud: "bg-amber-500", color: "text-black", shadow: "shadow-md shadow-amber-500/20", hover: "hover:shadow-lg hover:shadow-amber-500/40", focus: "focus:opacity-[0.85] focus:shadow-none", active: "active:opacity-[0.85] active:shadow-none" }, yellow: { backgroud: "bg-yellow-500", color: "text-black", shadow: "shadow-md shadow-yellow-500/20", hover: "hover:shadow-lg hover:shadow-yellow-500/40", focus: "focus:opacity-[0.85] focus:shadow-none", active: "active:opacity-[0.85] active:shadow-none" }, lime: { backgroud: "bg-lime-500", color: "text-black", shadow: "shadow-md shadow-lime-500/20", hover: "hover:shadow-lg hover:shadow-lime-500/40", focus: "focus:opacity-[0.85] focus:shadow-none", active: "active:opacity-[0.85] active:shadow-none" }, "light-green": { backgroud: "bg-light-green-500", color: "text-white", shadow: "shadow-md shadow-light-green-500/20", hover: "hover:shadow-lg hover:shadow-light-green-500/40", focus: "focus:opacity-[0.85] focus:shadow-none", active: "active:opacity-[0.85] active:shadow-none" }, green: { backgroud: "bg-green-500", color: "text-white", shadow: "shadow-md shadow-green-500/20", hover: "hover:shadow-lg hover:shadow-green-500/40", focus: "focus:opacity-[0.85] focus:shadow-none", active: "active:opacity-[0.85] active:shadow-none" }, teal: { backgroud: "bg-teal-500", color: "text-white", shadow: "shadow-md shadow-teal-500/20", hover: "hover:shadow-lg hover:shadow-teal-500/40", focus: "focus:opacity-[0.85] focus:shadow-none", active: "active:opacity-[0.85] active:shadow-none" }, cyan: { backgroud: "bg-cyan-500", color: "text-white", shadow: "shadow-md shadow-cyan-500/20", hover: "hover:shadow-lg hover:shadow-cyan-500/40", focus: "focus:opacity-[0.85] focus:shadow-none", active: "active:opacity-[0.85] active:shadow-none" }, "light-blue": { backgroud: "bg-light-blue-500", color: "text-white", shadow: "shadow-md shadow-light-blue-500/20", hover: "hover:shadow-lg hover:shadow-light-blue-500/40", focus: "focus:opacity-[0.85] focus:shadow-none", active: "active:opacity-[0.85] active:shadow-none" }, blue: { backgroud: "bg-blue-500", color: "text-white", shadow: "shadow-md shadow-blue-500/20", hover: "hover:shadow-lg hover:shadow-blue-500/40", focus: "focus:opacity-[0.85] focus:shadow-none", active: "active:opacity-[0.85] active:shadow-none" }, indigo: { backgroud: "bg-indigo-500", color: "text-white", shadow: "shadow-md shadow-indigo-500/20", hover: "hover:shadow-lg hover:shadow-indigo-500/40", focus: "focus:opacity-[0.85] focus:shadow-none", active: "active:opacity-[0.85] active:shadow-none" }, "deep-purple": { backgroud: "bg-deep-purple-500", color: "text-white", shadow: "shadow-md shadow-deep-purple-500/20", hover: "hover:shadow-lg hover:shadow-deep-purple-500/40", focus: "focus:opacity-[0.85] focus:shadow-none", active: "active:opacity-[0.85] active:shadow-none" }, purple: { backgroud: "bg-purple-500", color: "text-white", shadow: "shadow-md shadow-purple-500/20", hover: "hover:shadow-lg hover:shadow-purple-500/40", focus: "focus:opacity-[0.85] focus:shadow-none", active: "active:opacity-[0.85] active:shadow-none" }, pink: { backgroud: "bg-pink-500", color: "text-white", shadow: "shadow-md shadow-pink-500/20", hover: "hover:shadow-lg hover:shadow-pink-500/40", focus: "focus:opacity-[0.85] focus:shadow-none", active: "active:opacity-[0.85] active:shadow-none" }, red: { backgroud: "bg-red-500", color: "text-white", shadow: "shadow-md shadow-red-500/20", hover: "hover:shadow-lg hover:shadow-red-500/40", focus: "focus:opacity-[0.85] focus:shadow-none", active: "active:opacity-[0.85] active:shadow-none" } }, _default = buttonFilled;
  }
});

// node_modules/@material-tailwind/react/theme/components/button/buttonGradient.js
var require_buttonGradient = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/button/buttonGradient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var buttonGradient = { white: { backgroud: "bg-white", color: "text-blue-gray-900", shadow: "shadow-md shadow-blue-gray-500/10", hover: "hover:shadow-lg hover:shadow-blue-gray-500/20", focus: "focus:opacity-[0.85] focus:shadow-none", active: "active:opacity-[0.85] active:shadow-none" }, "blue-gray": { backgroud: "bg-gradient-to-tr from-blue-gray-600 to-blue-gray-400", color: "text-white", shadow: "shadow-md shadow-blue-gray-500/20", hover: "hover:shadow-lg hover:shadow-blue-gray-500/40", active: "active:opacity-[0.85]" }, gray: { backgroud: "bg-gradient-to-tr from-gray-900 to-gray-800", color: "text-white", shadow: "shadow-md shadow-gray-900/10", hover: "hover:shadow-lg hover:shadow-gray-900/20", active: "active:opacity-[0.85]" }, brown: { backgroud: "bg-gradient-to-tr from-brown-600 to-brown-400", color: "text-white", shadow: "shadow-md shadow-brown-500/20", hover: "hover:shadow-lg hover:shadow-brown-500/40", active: "active:opacity-[0.85]" }, "deep-orange": { backgroud: "bg-gradient-to-tr from-deep-orange-600 to-deep-orange-400", color: "text-white", shadow: "shadow-md shadow-deep-orange-500/20", hover: "hover:shadow-lg hover:shadow-deep-orange-500/40", active: "active:opacity-[0.85]" }, orange: { backgroud: "bg-gradient-to-tr from-orange-600 to-orange-400", color: "text-white", shadow: "shadow-md shadow-orange-500/20", hover: "hover:shadow-lg hover:shadow-orange-500/40", active: "active:opacity-[0.85]" }, amber: { backgroud: "bg-gradient-to-tr from-amber-600 to-amber-400", color: "text-black", shadow: "shadow-md shadow-amber-500/20", hover: "hover:shadow-lg hover:shadow-amber-500/40", active: "active:opacity-[0.85]" }, yellow: { backgroud: "bg-gradient-to-tr from-yellow-600 to-yellow-400", color: "text-black", shadow: "shadow-md shadow-yellow-500/20", hover: "hover:shadow-lg hover:shadow-yellow-500/40", active: "active:opacity-[0.85]" }, lime: { backgroud: "bg-gradient-to-tr from-lime-600 to-lime-400", color: "text-black", shadow: "shadow-md shadow-lime-500/20", hover: "hover:shadow-lg hover:shadow-lime-500/40", active: "active:opacity-[0.85]" }, "light-green": { backgroud: "bg-gradient-to-tr from-light-green-600 to-light-green-400", color: "text-white", shadow: "shadow-md shadow-light-green-500/20", hover: "hover:shadow-lg hover:shadow-light-green-500/40", active: "active:opacity-[0.85]" }, green: { backgroud: "bg-gradient-to-tr from-green-600 to-green-400", color: "text-white", shadow: "shadow-md shadow-green-500/20", hover: "hover:shadow-lg hover:shadow-green-500/40", active: "active:opacity-[0.85]" }, teal: { backgroud: "bg-gradient-to-tr from-teal-600 to-teal-400", color: "text-white", shadow: "shadow-md shadow-teal-500/20", hover: "hover:shadow-lg hover:shadow-teal-500/40", active: "active:opacity-[0.85]" }, cyan: { backgroud: "bg-gradient-to-tr from-cyan-600 to-cyan-400", color: "text-white", shadow: "shadow-md shadow-cyan-500/20", hover: "hover:shadow-lg hover:shadow-cyan-500/40", active: "active:opacity-[0.85]" }, "light-blue": { backgroud: "bg-gradient-to-tr from-light-blue-600 to-light-blue-400", color: "text-white", shadow: "shadow-md shadow-light-blue-500/20", hover: "hover:shadow-lg hover:shadow-light-blue-500/40", active: "active:opacity-[0.85]" }, blue: { backgroud: "bg-gradient-to-tr from-blue-600 to-blue-400", color: "text-white", shadow: "shadow-md shadow-blue-500/20", hover: "hover:shadow-lg hover:shadow-blue-500/40", active: "active:opacity-[0.85]" }, indigo: { backgroud: "bg-gradient-to-tr from-indigo-600 to-indigo-400", color: "text-white", shadow: "shadow-md shadow-indigo-500/20", hover: "hover:shadow-lg hover:shadow-indigo-500/40", active: "active:opacity-[0.85]" }, "deep-purple": { backgroud: "bg-gradient-to-tr from-deep-purple-600 to-deep-purple-400", color: "text-white", shadow: "shadow-md shadow-deep-purple-500/20", hover: "hover:shadow-lg hover:shadow-deep-purple-500/40", active: "active:opacity-[0.85]" }, purple: { backgroud: "bg-gradient-to-tr from-purple-600 to-purple-400", color: "text-white", shadow: "shadow-md shadow-purple-500/20", hover: "hover:shadow-lg hover:shadow-purple-500/40", active: "active:opacity-[0.85]" }, pink: { backgroud: "bg-gradient-to-tr from-pink-600 to-pink-400", color: "text-white", shadow: "shadow-md shadow-pink-500/20", hover: "hover:shadow-lg hover:shadow-pink-500/40", active: "active:opacity-[0.85]" }, red: { backgroud: "bg-gradient-to-tr from-red-600 to-red-400", color: "text-white", shadow: "shadow-md shadow-red-500/20", hover: "hover:shadow-lg hover:shadow-red-500/40", active: "active:opacity-[0.85]" } }, _default = buttonGradient;
  }
});

// node_modules/@material-tailwind/react/theme/components/button/buttonOutlined.js
var require_buttonOutlined = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/button/buttonOutlined.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var buttonOutlined = { white: { border: "border border-white", color: "text-white", hover: "hover:opacity-75", focus: "focus:ring focus:ring-white/50", active: "active:opacity-[0.85]" }, "blue-gray": { border: "border border-blue-gray-500", color: "text-blue-gray-500", hover: "hover:opacity-75", focus: "focus:ring focus:ring-blue-gray-200", active: "active:opacity-[0.85]" }, gray: { border: "border border-gray-900", color: "text-gray-900", hover: "hover:opacity-75", focus: "focus:ring focus:ring-gray-300", active: "active:opacity-[0.85]" }, brown: { border: "border border-brown-500", color: "text-brown-500", hover: "hover:opacity-75", focus: "focus:ring focus:ring-brown-200", active: "active:opacity-[0.85]" }, "deep-orange": { border: "border border-deep-orange-500", color: "text-deep-orange-500", hover: "hover:opacity-75", focus: "focus:ring focus:ring-deep-orange-200", active: "active:opacity-[0.85]" }, orange: { border: "border border-orange-500", color: "text-orange-500", hover: "hover:opacity-75", focus: "focus:ring focus:ring-orange-200", active: "active:opacity-[0.85]" }, amber: { border: "border border-amber-500", color: "text-amber-500", hover: "hover:opacity-75", focus: "focus:ring focus:ring-amber-200", active: "active:opacity-[0.85]" }, yellow: { border: "border border-yellow-500", color: "text-yellow-500", hover: "hover:opacity-75", focus: "focus:ring focus:ring-yellow-200", active: "active:opacity-[0.85]" }, lime: { border: "border border-lime-500", color: "text-lime-500", hover: "hover:opacity-75", focus: "focus:ring focus:ring-lime-200", active: "active:opacity-[0.85]" }, "light-green": { border: "border border-light-green-500", color: "text-light-green-500", hover: "hover:opacity-75", focus: "focus:ring focus:ring-light-green-200", active: "active:opacity-[0.85]" }, green: { border: "border border-green-500", color: "text-green-500", hover: "hover:opacity-75", focus: "focus:ring focus:ring-green-200", active: "active:opacity-[0.85]" }, teal: { border: "border border-teal-500", color: "text-teal-500", hover: "hover:opacity-75", focus: "focus:ring focus:ring-teal-200", active: "active:opacity-[0.85]" }, cyan: { border: "border border-cyan-500", color: "text-cyan-500", hover: "hover:opacity-75", focus: "focus:ring focus:ring-cyan-200", active: "active:opacity-[0.85]" }, "light-blue": { border: "border border-light-blue-500", color: "text-light-blue-500", hover: "hover:opacity-75", focus: "focus:ring focus:ring-light-blue-200", active: "active:opacity-[0.85]" }, blue: { border: "border border-blue-500", color: "text-blue-500", hover: "hover:opacity-75", focus: "focus:ring focus:ring-blue-200", active: "active:opacity-[0.85]" }, indigo: { border: "border border-indigo-500", color: "text-indigo-500", hover: "hover:opacity-75", focus: "focus:ring focus:ring-indigo-200", active: "active:opacity-[0.85]" }, "deep-purple": { border: "border border-deep-purple-500", color: "text-deep-purple-500", hover: "hover:opacity-75", focus: "focus:ring focus:ring-deep-purple-200", active: "active:opacity-[0.85]" }, purple: { border: "border border-purple-500", color: "text-purple-500", hover: "hover:opacity-75", focus: "focus:ring focus:ring-purple-200", active: "active:opacity-[0.85]" }, pink: { border: "border border-pink-500", color: "text-pink-500", hover: "hover:opacity-75", focus: "focus:ring focus:ring-pink-200", active: "active:opacity-[0.85]" }, red: { border: "border border-red-500", color: "text-red-500", hover: "hover:opacity-75", focus: "focus:ring focus:ring-red-200", active: "active:opacity-[0.85]" } }, _default = buttonOutlined;
  }
});

// node_modules/@material-tailwind/react/theme/components/button/buttonText.js
var require_buttonText = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/button/buttonText.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var buttonText = { white: { color: "text-white", hover: "hover:bg-white/10", active: "active:bg-white/30" }, "blue-gray": { color: "text-blue-gray-500", hover: "hover:bg-blue-gray-500/10", active: "active:bg-blue-gray-500/30" }, gray: { color: "text-gray-900", hover: "hover:bg-gray-900/10", active: "active:bg-gray-900/20" }, brown: { color: "text-brown-500", hover: "hover:bg-brown-500/10", active: "active:bg-brown-500/30" }, "deep-orange": { color: "text-deep-orange-500", hover: "hover:bg-deep-orange-500/10", active: "active:bg-deep-orange-500/30" }, orange: { color: "text-orange-500", hover: "hover:bg-orange-500/10", active: "active:bg-orange-500/30" }, amber: { color: "text-amber-500", hover: "hover:bg-amber-500/10", active: "active:bg-amber-500/30" }, yellow: { color: "text-yellow-500", hover: "hover:bg-yellow-500/10", active: "active:bg-yellow-500/30" }, lime: { color: "text-lime-500", hover: "hover:bg-lime-500/10", active: "active:bg-lime-500/30" }, "light-green": { color: "text-light-green-500", hover: "hover:bg-light-green-500/10", active: "active:bg-light-green-500/30" }, green: { color: "text-green-500", hover: "hover:bg-green-500/10", active: "active:bg-green-500/30" }, teal: { color: "text-teal-500", hover: "hover:bg-teal-500/10", active: "active:bg-teal-500/30" }, cyan: { color: "text-cyan-500", hover: "hover:bg-cyan-500/10", active: "active:bg-cyan-500/30" }, "light-blue": { color: "text-light-blue-500", hover: "hover:bg-light-blue-500/10", active: "active:bg-light-blue-500/30" }, blue: { color: "text-blue-500", hover: "hover:bg-blue-500/10", active: "active:bg-blue-500/30" }, indigo: { color: "text-indigo-500", hover: "hover:bg-indigo-500/10", active: "active:bg-indigo-500/30" }, "deep-purple": { color: "text-deep-purple-500", hover: "hover:bg-deep-purple-500/10", active: "active:bg-deep-purple-500/30" }, purple: { color: "text-purple-500", hover: "hover:bg-purple-500/10", active: "active:bg-purple-500/30" }, pink: { color: "text-pink-500", hover: "hover:bg-pink-500/10", active: "active:bg-pink-500/30" }, red: { color: "text-red-500", hover: "hover:bg-red-500/10", active: "active:bg-red-500/30" } }, _default = buttonText;
  }
});

// node_modules/@material-tailwind/react/types/components/button.js
var require_button = __commonJS({
  "node_modules/@material-tailwind/react/types/components/button.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesVariant: function() {
      return propTypesVariant;
    }, propTypesSize: function() {
      return propTypesSize;
    }, propTypesColor: function() {
      return propTypesColor;
    }, propTypesFullWidth: function() {
      return propTypesFullWidth;
    }, propTypesRipple: function() {
      return propTypesRipple;
    }, propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesChildren: function() {
      return propTypesChildren;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray2(arr);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArray(iter) {
      if (typeof Symbol < "u" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var propTypesVariant = ["filled", "outlined", "gradient", "text"], propTypesSize = ["sm", "md", "lg"], propTypesColor = ["white"].concat(_toConsumableArray(_generic.propTypesColors)), propTypesFullWidth = _propTypes.default.bool, propTypesRipple = _propTypes.default.bool, propTypesClassName = _propTypes.default.string, propTypesChildren = _propTypes.default.node.isRequired;
  }
});

// node_modules/@material-tailwind/react/theme/components/button/index.js
var require_button2 = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/button/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { button: function() {
      return button;
    }, default: function() {
      return _default;
    } });
    var _buttonFilled = _interopRequireDefault(require_buttonFilled()), _buttonGradient = _interopRequireDefault(require_buttonGradient()), _buttonOutlined = _interopRequireDefault(require_buttonOutlined()), _buttonText = _interopRequireDefault(require_buttonText()), _button = require_button();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var button = { defaultProps: { variant: "filled", size: "md", color: "gray", fullWidth: !1, ripple: !0, className: "" }, valid: { variants: _button.propTypesVariant, sizes: _button.propTypesSize, colors: _button.propTypesColor }, styles: { base: { initial: { verticalAlign: "align-middle", userSelect: "select-none", fontFamily: "font-sans", fontWeight: "font-bold", textAlign: "text-center", textTransform: "uppercase", transition: "transition-all", disabled: "disabled:opacity-50 disabled:shadow-none disabled:pointer-events-none" }, fullWidth: { display: "block", width: "w-full" } }, sizes: { sm: { fontSize: "text-xs", py: "py-2", px: "px-4", borderRadius: "rounded-lg" }, md: { fontSize: "text-xs", py: "py-3", px: "px-6", borderRadius: "rounded-lg" }, lg: { fontSize: "text-sm", py: "py-3.5", px: "px-7", borderRadius: "rounded-lg" } }, variants: { filled: _buttonFilled.default, gradient: _buttonGradient.default, outlined: _buttonOutlined.default, text: _buttonText.default } } }, _default = button;
  }
});

// node_modules/@material-tailwind/react/theme/components/card/cardFilled.js
var require_cardFilled = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/card/cardFilled.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var cardFilled = { transparent: { backgroud: "bg-transparent", color: "text-gray-700", shadow: "shadow-none" }, white: { backgroud: "bg-white", color: "text-gray-700" }, "blue-gray": { backgroud: "bg-blue-gray-500", color: "text-white", shadow: "shadow-blue-gray-500/40" }, gray: { backgroud: "bg-gray-900", color: "text-white", shadow: "shadow-gray-900/20" }, brown: { backgroud: "bg-brown-500", color: "text-white", shadow: "shadow-brown-500/40" }, "deep-orange": { backgroud: "bg-deep-orange-500", color: "text-white", shadow: "shadow-deep-orange-500/40" }, orange: { backgroud: "bg-orange-500", color: "text-white", shadow: "shadow-orange-500/40" }, amber: { backgroud: "bg-amber-500", color: "text-gray-700", shadow: "shadow-amber-500/40" }, yellow: { backgroud: "bg-yellow-500", color: "text-gray-700", shadow: "shadow-yellow-500/40" }, lime: { backgroud: "bg-lime-500", color: "text-gray-700", shadow: "shadow-lime-500/40" }, "light-green": { backgroud: "bg-light-green-500", color: "text-white", shadow: "shadow-light-green-500/40" }, green: { backgroud: "bg-green-500", color: "text-white", shadow: "shadow-green-500/40" }, teal: { backgroud: "bg-teal-500", color: "text-white", shadow: "shadow-teal-500/40" }, cyan: { backgroud: "bg-cyan-500", color: "text-white", shadow: "shadow-cyan-500/40" }, "light-blue": { backgroud: "bg-light-blue-500", color: "text-white", shadow: "shadow-light-blue-500/40" }, blue: { backgroud: "bg-blue-500", color: "text-white", shadow: "shadow-blue-500/40" }, indigo: { backgroud: "bg-indigo-500", color: "text-white", shadow: "shadow-indigo-500/40" }, "deep-purple": { backgroud: "bg-deep-purple-500", color: "text-white", shadow: "shadow-deep-purple-500/40" }, purple: { backgroud: "bg-purple-500", color: "text-white", shadow: "shadow-purple-500/40" }, pink: { backgroud: "bg-pink-500", color: "text-white", shadow: "shadow-pink-500/40" }, red: { backgroud: "bg-red-500", color: "text-white", shadow: "shadow-red-500/40" } }, _default = cardFilled;
  }
});

// node_modules/@material-tailwind/react/theme/components/card/cardGradient.js
var require_cardGradient = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/card/cardGradient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var cardGradient = { transparent: { backgroud: "bg-transparent", color: "text-gray-700", shadow: "shadow-none" }, white: { backgroud: "bg-white", color: "text-gray-700" }, "blue-gray": { backgroud: "bg-gradient-to-tr from-blue-gray-600 to-blue-gray-400", color: "text-white", shadow: "shadow-blue-gray-500/40" }, gray: { backgroud: "bg-gradient-to-tr from-gray-900 to-gray-800", color: "text-white", shadow: "shadow-gray-900/20" }, brown: { backgroud: "bg-gradient-to-tr from-brown-600 to-brown-400", color: "text-white", shadow: "shadow-brown-500/40" }, "deep-orange": { backgroud: "bg-gradient-to-tr from-deep-orange-600 to-deep-orange-400", color: "text-white", shadow: "shadow-deep-orange-500/40" }, orange: { backgroud: "bg-gradient-to-tr from-orange-600 to-orange-400", color: "text-white", shadow: "shadow-orange-500/40" }, amber: { backgroud: "bg-gradient-to-tr from-amber-600 to-amber-400", color: "text-gray-700", shadow: "shadow-amber-500/40" }, yellow: { backgroud: "bg-gradient-to-tr from-yellow-600 to-yellow-400", color: "text-gray-700", shadow: "shadow-yellow-500/40" }, lime: { backgroud: "bg-gradient-to-tr from-lime-600 to-lime-400", color: "text-gray-700", shadow: "shadow-lime-500/40" }, "light-green": { backgroud: "bg-gradient-to-tr from-light-green-600 to-light-green-400", color: "text-white", shadow: "shadow-light-green-500/40" }, green: { backgroud: "bg-gradient-to-tr from-green-600 to-green-400", color: "text-white", shadow: "shadow-green-500/40" }, teal: { backgroud: "bg-gradient-to-tr from-teal-600 to-teal-400", color: "text-white", shadow: "shadow-teal-500/40" }, cyan: { backgroud: "bg-gradient-to-tr from-cyan-600 to-cyan-400", color: "text-white", shadow: "shadow-cyan-500/40" }, "light-blue": { backgroud: "bg-gradient-to-tr from-light-blue-600 to-light-blue-400", color: "text-white", shadow: "shadow-light-blue-500/40" }, blue: { backgroud: "bg-gradient-to-tr from-blue-600 to-blue-400", color: "text-white", shadow: "shadow-blue-500/40" }, indigo: { backgroud: "bg-gradient-to-tr from-indigo-600 to-indigo-400", color: "text-white", shadow: "shadow-indigo-500/40" }, "deep-purple": { backgroud: "bg-gradient-to-tr from-deep-purple-600 to-deep-purple-400", color: "text-white", shadow: "shadow-deep-purple-500/40" }, purple: { backgroud: "bg-gradient-to-tr from-purple-600 to-purple-400", color: "text-white", shadow: "shadow-purple-500/40" }, pink: { backgroud: "bg-gradient-to-tr from-pink-600 to-pink-400", color: "text-white", shadow: "shadow-pink-500/40" }, red: { backgroud: "bg-gradient-to-tr from-red-600 to-red-400", color: "text-white", shadow: "shadow-red-500/40" } }, _default = cardGradient;
  }
});

// node_modules/@material-tailwind/react/types/components/card.js
var require_card = __commonJS({
  "node_modules/@material-tailwind/react/types/components/card.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesVariant: function() {
      return propTypesVariant;
    }, propTypesColor: function() {
      return propTypesColor;
    }, propTypesShadow: function() {
      return propTypesShadow;
    }, propTypesFloated: function() {
      return propTypesFloated;
    }, propTypesDivider: function() {
      return propTypesDivider;
    }, propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesChildren: function() {
      return propTypesChildren;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray2(arr);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArray(iter) {
      if (typeof Symbol < "u" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var propTypesVariant = ["filled", "gradient"], propTypesColor = ["transparent", "white"].concat(_toConsumableArray(_generic.propTypesColors)), propTypesShadow = _propTypes.default.bool, propTypesFloated = _propTypes.default.bool, propTypesDivider = _propTypes.default.bool, propTypesClassName = _propTypes.default.string, propTypesChildren = _propTypes.default.node.isRequired;
  }
});

// node_modules/@material-tailwind/react/theme/components/card/index.js
var require_card2 = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/card/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var _cardFilled = _interopRequireDefault(require_cardFilled()), _cardGradient = _interopRequireDefault(require_cardGradient()), _card = require_card();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var card = { defaultProps: { variant: "filled", color: "white", shadow: !0, className: "" }, valid: { variants: _card.propTypesVariant, colors: _card.propTypesColor }, styles: { base: { initial: { position: "relative", display: "flex", flexDirection: "flex-col", backgroundClip: "bg-clip-border", borderRadius: "rounded-xl" }, shadow: { boxShadow: "shadow-md" } }, variants: { filled: _cardFilled.default, gradient: _cardGradient.default } } }, _default = card;
  }
});

// node_modules/@material-tailwind/react/theme/components/card/cardBody.js
var require_cardBody = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/card/cardBody.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { cardBody: function() {
      return cardBody;
    }, default: function() {
      return _default;
    } });
    var cardBody = { defaultProps: { className: "" }, styles: { base: { p: "p-6" } } }, _default = cardBody;
  }
});

// node_modules/@material-tailwind/react/theme/components/card/cardFooter.js
var require_cardFooter = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/card/cardFooter.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { cardFooter: function() {
      return cardFooter;
    }, default: function() {
      return _default;
    } });
    var cardFooter = { defaultProps: { className: "" }, styles: { base: { initial: { p: "p-6" }, divider: { borderWidth: "border-t", borderColor: "border-blue-gray-50" } } } }, _default = cardFooter;
  }
});

// node_modules/@material-tailwind/react/theme/components/card/cardHeader.js
var require_cardHeader = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/card/cardHeader.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var _cardFilled = _interopRequireDefault(require_cardFilled()), _cardGradient = _interopRequireDefault(require_cardGradient()), _card = require_card();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var cardHeader = { defaultProps: { variant: "filled", color: "white", shadow: !0, floated: !0, className: "" }, valid: { variants: _card.propTypesVariant, colors: _card.propTypesColor }, styles: { base: { initial: { position: "relative", backgroundClip: "bg-clip-border", mt: "mt-4", mx: "mx-4", borderRadius: "rounded-xl", overflow: "overflow-hidden" }, shadow: { boxShadow: "shadow-lg" }, floated: { mt: "-mt-6" } }, variants: { filled: _cardFilled.default, gradient: _cardGradient.default } } }, _default = cardHeader;
  }
});

// node_modules/@material-tailwind/react/theme/components/checkbox/checkboxColors.js
var require_checkboxColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/checkbox/checkboxColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var checkboxColors = { "blue-gray": { background: "checked:bg-blue-gray-500", border: "checked:border-blue-gray-500", before: "checked:before:bg-blue-gray-500" }, gray: { background: "checked:bg-gray-900", border: "checked:border-gray-900", before: "checked:before:bg-gray-900" }, brown: { background: "checked:bg-brown-500", border: "checked:border-brown-500", before: "checked:before:bg-brown-500" }, "deep-orange": { background: "checked:bg-deep-orange-500", border: "checked:border-deep-orange-500", before: "checked:before:bg-deep-orange-500" }, orange: { background: "checked:bg-orange-500", border: "checked:border-orange-500", before: "checked:before:bg-orange-500" }, amber: { background: "checked:bg-amber-500", border: "checked:border-amber-500", before: "checked:before:bg-amber-500" }, yellow: { background: "checked:bg-yellow-500", border: "checked:border-yellow-500", before: "checked:before:bg-yellow-500" }, lime: { background: "checked:bg-lime-500", border: "checked:border-lime-500", before: "checked:before:bg-lime-500" }, "light-green": { background: "checked:bg-light-green-500", border: "checked:border-light-green-500", before: "checked:before:bg-light-green-500" }, green: { background: "checked:bg-green-500", border: "checked:border-green-500", before: "checked:before:bg-green-500" }, teal: { background: "checked:bg-teal-500", border: "checked:border-teal-500", before: "checked:before:bg-teal-500" }, cyan: { background: "checked:bg-cyan-500", border: "checked:border-cyan-500", before: "checked:before:bg-cyan-500" }, "light-blue": { background: "checked:bg-light-blue-500", border: "checked:border-light-blue-500", before: "checked:before:bg-light-blue-500" }, blue: { background: "checked:bg-blue-500", border: "checked:border-blue-500", before: "checked:before:bg-blue-500" }, indigo: { background: "checked:bg-indigo-500", border: "checked:border-indigo-500", before: "checked:before:bg-indigo-500" }, "deep-purple": { background: "checked:bg-deep-purple-500", border: "checked:border-deep-purple-500", before: "checked:before:bg-deep-purple-500" }, purple: { background: "checked:bg-purple-500", border: "checked:border-purple-500", before: "checked:before:bg-purple-500" }, pink: { background: "checked:bg-pink-500", border: "checked:border-pink-500", before: "checked:before:bg-pink-500" }, red: { background: "checked:bg-red-500", border: "checked:border-red-500", before: "checked:before:bg-red-500" } }, _default = checkboxColors;
  }
});

// node_modules/@material-tailwind/react/types/components/checkbox.js
var require_checkbox = __commonJS({
  "node_modules/@material-tailwind/react/types/components/checkbox.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesColor: function() {
      return propTypesColor;
    }, propTypesLabel: function() {
      return propTypesLabel;
    }, propTypesIcon: function() {
      return propTypesIcon;
    }, propTypesRipple: function() {
      return propTypesRipple;
    }, propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesDisabled: function() {
      return propTypesDisabled;
    }, propTypesObject: function() {
      return propTypesObject;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var propTypesColor = _generic.propTypesColors, propTypesLabel = _propTypes.default.node, propTypesIcon = _propTypes.default.node, propTypesRipple = _propTypes.default.bool, propTypesClassName = _propTypes.default.string, propTypesDisabled = _propTypes.default.bool, propTypesObject = _propTypes.default.instanceOf(Object);
  }
});

// node_modules/@material-tailwind/react/theme/components/checkbox/index.js
var require_checkbox2 = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/checkbox/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { checkbox: function() {
      return checkbox;
    }, default: function() {
      return _default;
    } });
    var _checkboxColors = _interopRequireDefault(require_checkboxColors()), _checkbox = require_checkbox();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var checkbox = { defaultProps: { color: "gray", label: void 0, icon: void 0, ripple: !0, className: "", disabled: !1, containerProps: void 0, labelProps: void 0, iconProps: void 0 }, valid: { colors: _checkbox.propTypesColor }, styles: { base: { root: { display: "inline-flex", alignItems: "items-center" }, container: { position: "relative", display: "flex", alignItems: "items-center", cursor: "cursor-pointer", p: "p-3", borderRadius: "rounded-full" }, input: { peer: "peer", position: "relative", appearance: "appearance-none", width: "w-5", height: "h-5", borderWidth: "border", borderRadius: "rounded-md", borderColor: "border-blue-gray-200", cursor: "cursor-pointer", transition: "transition-all", before: { content: "before:content['']", display: "before:block", bg: "before:bg-blue-gray-500", width: "before:w-12", height: "before:h-12", borderRadius: "before:rounded-full", position: "before:absolute", top: "before:top-2/4", left: "before:left-2/4", transform: "before:-translate-y-2/4 before:-translate-x-2/4", opacity: "before:opacity-0 hover:before:opacity-10", transition: "before:transition-opacity" } }, label: { color: "text-gray-700", fontWeight: "font-light", userSelect: "select-none", cursor: "cursor-pointer", mt: "mt-px" }, icon: { color: "text-white", position: "absolute", top: "top-2/4", left: "left-2/4", translate: "-translate-y-2/4 -translate-x-2/4", pointerEvents: "pointer-events-none", opacity: "opacity-0 peer-checked:opacity-100", transition: "transition-opacity" }, disabled: { opacity: "opacity-50", pointerEvents: "pointer-events-none" } }, colors: _checkboxColors.default } }, _default = checkbox;
  }
});

// node_modules/@material-tailwind/react/theme/components/chip/chipFilled.js
var require_chipFilled = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/chip/chipFilled.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var chipFilled = { "blue-gray": { backgroud: "bg-blue-gray-500", color: "text-white" }, gray: { backgroud: "bg-gray-900", color: "text-white" }, brown: { backgroud: "bg-brown-500", color: "text-white" }, "deep-orange": { backgroud: "bg-deep-orange-500", color: "text-white" }, orange: { backgroud: "bg-orange-500", color: "text-white" }, amber: { backgroud: "bg-amber-500", color: "text-black" }, yellow: { backgroud: "bg-yellow-500", color: "text-black" }, lime: { backgroud: "bg-lime-500", color: "text-black" }, "light-green": { backgroud: "bg-light-green-500", color: "text-white" }, green: { backgroud: "bg-green-500", color: "text-white" }, teal: { backgroud: "bg-teal-500", color: "text-white" }, cyan: { backgroud: "bg-cyan-500", color: "text-white" }, "light-blue": { backgroud: "bg-light-blue-500", color: "text-white" }, blue: { backgroud: "bg-blue-500", color: "text-white" }, indigo: { backgroud: "bg-indigo-500", color: "text-white" }, "deep-purple": { backgroud: "bg-deep-purple-500", color: "text-white" }, purple: { backgroud: "bg-purple-500", color: "text-white" }, pink: { backgroud: "bg-pink-500", color: "text-white" }, red: { backgroud: "bg-red-500", color: "text-white" } }, _default = chipFilled;
  }
});

// node_modules/@material-tailwind/react/theme/components/chip/chipGradient.js
var require_chipGradient = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/chip/chipGradient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var chipGradient = { "blue-gray": { backgroud: "bg-gradient-to-tr from-blue-gray-600 to-blue-gray-400", color: "text-white" }, gray: { backgroud: "bg-gradient-to-tr from-gray-900 to-gray-800", color: "text-white" }, brown: { backgroud: "bg-gradient-to-tr from-brown-600 to-brown-400", color: "text-white" }, "deep-orange": { backgroud: "bg-gradient-to-tr from-deep-orange-600 to-deep-orange-400", color: "text-white" }, orange: { backgroud: "bg-gradient-to-tr from-orange-600 to-orange-400", color: "text-white" }, amber: { backgroud: "bg-gradient-to-tr from-amber-600 to-amber-400", color: "text-black" }, yellow: { backgroud: "bg-gradient-to-tr from-yellow-600 to-yellow-400", color: "text-black" }, lime: { backgroud: "bg-gradient-to-tr from-lime-600 to-lime-400", color: "text-black" }, "light-green": { backgroud: "bg-gradient-to-tr from-light-green-600 to-light-green-400", color: "text-white" }, green: { backgroud: "bg-gradient-to-tr from-green-600 to-green-400", color: "text-white" }, teal: { backgroud: "bg-gradient-to-tr from-teal-600 to-teal-400", color: "text-white" }, cyan: { backgroud: "bg-gradient-to-tr from-cyan-600 to-cyan-400", color: "text-white" }, "light-blue": { backgroud: "bg-gradient-to-tr from-light-blue-600 to-light-blue-400", color: "text-white" }, blue: { backgroud: "bg-gradient-to-tr from-blue-600 to-blue-400", color: "text-white" }, indigo: { backgroud: "bg-gradient-to-tr from-indigo-600 to-indigo-400", color: "text-white" }, "deep-purple": { backgroud: "bg-gradient-to-tr from-deep-purple-600 to-deep-purple-400", color: "text-white" }, purple: { backgroud: "bg-gradient-to-tr from-purple-600 to-purple-400", color: "text-white" }, pink: { backgroud: "bg-gradient-to-tr from-pink-600 to-pink-400", color: "text-white" }, red: { backgroud: "bg-gradient-to-tr from-red-600 to-red-400", color: "text-white" } }, _default = chipGradient;
  }
});

// node_modules/@material-tailwind/react/theme/components/chip/chipOutlined.js
var require_chipOutlined = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/chip/chipOutlined.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var chipOutlined = { "blue-gray": { border: "border border-blue-gray-500", color: "text-blue-gray-700" }, gray: { border: "border border-gray-900", color: "text-gray-700" }, brown: { border: "border border-brown-500", color: "text-brown-700" }, "deep-orange": { border: "border border-deep-orange-500", color: "text-deep-orange-700" }, orange: { border: "border border-orange-500", color: "text-orange-700" }, amber: { border: "border border-amber-500", color: "text-amber-700" }, yellow: { border: "border border-yellow-500", color: "text-yellow-700" }, lime: { border: "border border-lime-500", color: "text-lime-700" }, "light-green": { border: "border border-light-green-500", color: "text-light-green-700" }, green: { border: "border border-green-500", color: "text-green-700" }, teal: { border: "border border-teal-500", color: "text-teal-700" }, cyan: { border: "border border-cyan-500", color: "text-cyan-700" }, "light-blue": { border: "border border-light-blue-500", color: "text-light-blue-700" }, blue: { border: "border border-blue-500", color: "text-blue-700" }, indigo: { border: "border border-indigo-500", color: "text-indigo-700" }, "deep-purple": { border: "border border-deep-purple-500", color: "text-deep-purple-700" }, purple: { border: "border border-purple-500", color: "text-purple-700" }, pink: { border: "border border-pink-500", color: "text-pink-700" }, red: { border: "border border-red-500", color: "text-red-700" } }, _default = chipOutlined;
  }
});

// node_modules/@material-tailwind/react/theme/components/chip/chipGhost.js
var require_chipGhost = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/chip/chipGhost.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var chipGhost = { "blue-gray": { backgroud: "bg-blue-gray-500/20", color: "text-blue-gray-900" }, gray: { backgroud: "bg-gray-900/10", color: "text-gray-900" }, brown: { backgroud: "bg-brown-500/20", color: "text-brown-900" }, "deep-orange": { backgroud: "bg-deep-orange-500/20", color: "text-deep-orange-900" }, orange: { backgroud: "bg-orange-500/20", color: "text-orange-900" }, amber: { backgroud: "bg-amber-500/20", color: "text-amber-900" }, yellow: { backgroud: "bg-yellow-500/20", color: "text-yellow-900" }, lime: { backgroud: "bg-lime-500/20", color: "text-lime-900" }, "light-green": { backgroud: "bg-light-green-500/20", color: "text-light-green-900" }, green: { backgroud: "bg-green-500/20", color: "text-green-900" }, teal: { backgroud: "bg-teal-500/20", color: "text-teal-900" }, cyan: { backgroud: "bg-cyan-500/20", color: "text-cyan-900" }, "light-blue": { backgroud: "bg-light-blue-500/20", color: "text-light-blue-900" }, blue: { backgroud: "bg-blue-500/20", color: "text-blue-900" }, indigo: { backgroud: "bg-indigo-500/20", color: "text-indigo-900" }, "deep-purple": { backgroud: "bg-deep-purple-500/20", color: "text-deep-purple-900" }, purple: { backgroud: "bg-purple-500/20", color: "text-purple-900" }, pink: { backgroud: "bg-pink-500/20", color: "text-pink-900" }, red: { backgroud: "bg-red-500/20", color: "text-red-900" } }, _default = chipGhost;
  }
});

// node_modules/@material-tailwind/react/types/components/chip.js
var require_chip = __commonJS({
  "node_modules/@material-tailwind/react/types/components/chip.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesVariant: function() {
      return propTypesVariant;
    }, propTypesSize: function() {
      return propTypesSize;
    }, propTypesColor: function() {
      return propTypesColor;
    }, propTypesIcon: function() {
      return propTypesIcon;
    }, propTypesOpen: function() {
      return propTypesOpen;
    }, propTypesOnClose: function() {
      return propTypesOnClose;
    }, propTypesAction: function() {
      return propTypesAction;
    }, propTypesAnimate: function() {
      return propTypesAnimate;
    }, propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesValue: function() {
      return propTypesValue;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var propTypesVariant = ["filled", "gradient", "outlined", "ghost"], propTypesSize = ["sm", "md", "lg"], propTypesColor = _generic.propTypesColors, propTypesIcon = _propTypes.default.node, propTypesOpen = _propTypes.default.bool, propTypesOnClose = _propTypes.default.func, propTypesAction = _propTypes.default.node, propTypesAnimate = _generic.propTypesAnimation, propTypesClassName = _propTypes.default.string, propTypesValue = _propTypes.default.node.isRequired;
  }
});

// node_modules/@material-tailwind/react/theme/components/chip/index.js
var require_chip2 = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/chip/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { chip: function() {
      return chip;
    }, default: function() {
      return _default;
    } });
    var _chipFilled = _interopRequireDefault(require_chipFilled()), _chipGradient = _interopRequireDefault(require_chipGradient()), _chipOutlined = _interopRequireDefault(require_chipOutlined()), _chipGhost = _interopRequireDefault(require_chipGhost()), _chip = require_chip();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var chip = { defaultProps: { variant: "filled", size: "md", color: "gray", icon: void 0, open: !0, onClose: void 0, action: void 0, animate: { unmount: {}, mount: {} }, className: "" }, valid: { variants: _chip.propTypesVariant, sizes: _chip.propTypesSize, colors: _chip.propTypesColor }, styles: { base: { chip: { position: "relative", display: "grid", placeItems: "items-center", fontFamily: "font-sans", fontWeight: "font-bold", textTransform: "uppercase", lineHeight: "leading-none", whiteSpace: "whitespace-nowrap", userSelect: "select-none" }, action: { position: "!absolute", top: "top-2/4", right: "right-1", translate: "-translate-y-2/4", mx: "mx-px", rounded: "rounded-md" }, icon: { position: "absolute", top: "top-2/4", translate: "-translate-y-2/4" } }, sizes: { sm: { chip: { py: "py-1", px: "px-2", fontSize: "text-xs", borderRadius: "rounded-md" }, action: { width: "w-4", height: "h-4" }, icon: { width: "w-4", height: "h-4", left: "left-1" } }, md: { chip: { py: "py-1.5", px: "px-3", fontSize: "text-xs", borderRadius: "rounded-lg" }, action: { width: "w-5", height: "h-5" }, icon: { width: "w-5", height: "h-5", left: "left-1.5" } }, lg: { chip: { py: "py-2", px: "px-4", fontSize: "text-xs", borderRadius: "rounded-lg" }, action: { width: "w-6", height: "h-6" }, icon: { width: "w-6", height: "h-6", left: "left-1.5" } } }, variants: { filled: _chipFilled.default, gradient: _chipGradient.default, outlined: _chipOutlined.default, ghost: _chipGhost.default } } }, _default = chip;
  }
});

// node_modules/@material-tailwind/react/types/components/dialog.js
var require_dialog = __commonJS({
  "node_modules/@material-tailwind/react/types/components/dialog.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesOpen: function() {
      return propTypesOpen;
    }, propTypesHandler: function() {
      return propTypesHandler;
    }, propTypesSize: function() {
      return propTypesSize;
    }, propTypesDismiss: function() {
      return propTypesDismiss;
    }, propTypesAnimate: function() {
      return propTypesAnimate;
    }, propTypesDivider: function() {
      return propTypesDivider;
    }, propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesChildren: function() {
      return propTypesChildren;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var propTypesOpen = _propTypes.default.bool.isRequired, propTypesHandler = _propTypes.default.func, propTypesSize = ["xs", "sm", "md", "lg", "xl", "xxl"], propTypesDismiss = _generic.propTypesDismissType, propTypesAnimate = _generic.propTypesAnimation, propTypesDivider = _propTypes.default.bool, propTypesClassName = _propTypes.default.string, propTypesChildren = _propTypes.default.node.isRequired;
  }
});

// node_modules/@material-tailwind/react/theme/components/dialog/index.js
var require_dialog2 = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/dialog/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { dialog: function() {
      return dialog;
    }, default: function() {
      return _default;
    } });
    var _dialog = require_dialog(), dialog = { defaultProps: { size: "md", dismiss: {}, animate: { unmount: {}, mount: {} }, className: "" }, valid: { sizes: _dialog.propTypesSize }, styles: { base: { backdrop: { display: "grid", placeItems: "place-items-center", position: "fixed", top: 0, left: 0, width: "w-screen", height: "h-screen", backgroundColor: "bg-black", backgroundOpacity: "bg-opacity-60", backdropFilter: "backdrop-blur-sm" }, container: { position: "relative", bg: "bg-white", m: "m-4", borderRadius: "rounded-lg", boxShadow: "shadow-2xl", color: "text-blue-gray-500", fontSmoothing: "antialiased", fontFamily: "font-sans", fontSize: "text-base", fontWeight: "font-light", lineHeight: "leading-relaxed" } }, sizes: { xs: { width: "w-full md:w-3/5 lg:w-2/5 2xl:w-1/4", minWidth: "min-w-[80%] md:min-w-[60%] lg:min-w-[40%] 2xl:min-w-[25%]", maxWidth: "max-w-[80%] md:max-w-[60%] lg:max-w-[40%] 2xl:max-w-[25%]" }, sm: { width: "w-full md:w-2/3 lg:w-2/4 2xl:w-1/3", minWidth: "min-w-[80%] md:min-w-[66.666667%] lg:min-w-[50%] 2xl:min-w-[33.333333%]", maxWidth: "max-w-[80%] md:max-w-[66.666667%] lg:max-w-[50%] 2xl:max-w-[33.333333%]" }, md: { width: "w-full md:w-3/4 lg:w-3/5 2xl:w-2/5", minWidth: "min-w-[90%] md:min-w-[75%] lg:min-w-[60%] 2xl:min-w-[40%]", maxWidth: "max-w-[90%] md:max-w-[75%] lg:max-w-[60%] 2xl:max-w-[40%]" }, lg: { width: "w-full md:w-5/6 lg:w-3/4 2xl:w-3/5", minWidth: "min-w-[90%] md:min-w-[83.333333%] lg:min-w-[75%] 2xl:min-w-[60%]", maxWidth: "max-w-[90%] md:max-w-[83.333333%] lg:max-w-[75%] 2xl:max-w-[60%]" }, xl: { width: "w-full md:w-5/6 2xl:w-3/4", minWidth: "min-w-[95%] md:min-w-[83.333333%] 2xl:min-w-[75%]", maxWidth: "max-w-[95%] md:max-w-[83.333333%] 2xl:max-w-[75%]" }, xxl: { display: "flex", flexDirection: "flex-col", width: "w-screen", minWidth: "min-w-[100vw]", maxWidth: "max-w-[100vw]", height: "h-screen", minHeight: "min-h-[100vh]", maxHeight: "max-h-[100vh]", m: "m-0", borderRadius: "rounded-none" } } } }, _default = dialog;
  }
});

// node_modules/@material-tailwind/react/theme/components/dialog/dialogBody.js
var require_dialogBody = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/dialog/dialogBody.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { dialogBody: function() {
      return dialogBody;
    }, default: function() {
      return _default;
    } });
    var dialogBody = { defaultProps: { className: "", divider: !1 }, styles: { base: { initial: { position: "relative", p: "p-4", color: "text-blue-gray-500", fontSmoothing: "antialiased", fontFamily: "font-sans", fontSize: "text-base", fontWeight: "font-light", lineHeight: "leading-relaxed" }, divider: { borderTop: "border-t", borderTopColor: "border-t-blue-gray-100", borderBottom: "border-b", borderBottomColor: "border-b-blue-gray-100" } } } }, _default = dialogBody;
  }
});

// node_modules/@material-tailwind/react/theme/components/dialog/dialogFooter.js
var require_dialogFooter = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/dialog/dialogFooter.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { dialogFooter: function() {
      return dialogFooter;
    }, default: function() {
      return _default;
    } });
    var dialogFooter = { defaultProps: { className: "" }, styles: { base: { display: "flex", alignItems: "items-center", justifyContent: "justify-end", flexShrink: "shrink-0", flexWrap: "flex-wrap", p: "p-4", color: "text-blue-gray-500" } } }, _default = dialogFooter;
  }
});

// node_modules/@material-tailwind/react/theme/components/dialog/dialogHeader.js
var require_dialogHeader = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/dialog/dialogHeader.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { dialogHeader: function() {
      return dialogHeader;
    }, default: function() {
      return _default;
    } });
    var dialogHeader = { defaultProps: { className: "" }, styles: { base: { display: "flex", alignItems: "items-center", flexShrink: "shrink-0", p: "p-4", color: "text-blue-gray-900", fontSmoothing: "antialiased", fontFamily: "font-sans", fontSize: "text-2xl", fontWeight: "font-semibold", lineHeight: "leading-snug" } } }, _default = dialogHeader;
  }
});

// node_modules/@material-tailwind/react/theme/components/iconButton/index.js
var require_iconButton = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/iconButton/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { iconButton: function() {
      return iconButton;
    }, default: function() {
      return _default;
    } });
    var _buttonFilled = _interopRequireDefault(require_buttonFilled()), _buttonGradient = _interopRequireDefault(require_buttonGradient()), _buttonOutlined = _interopRequireDefault(require_buttonOutlined()), _buttonText = _interopRequireDefault(require_buttonText()), _button = require_button();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var iconButton = { defaultProps: { variant: "filled", size: "md", color: "gray", fullWidth: !1, ripple: !0, className: "" }, valid: { variants: _button.propTypesVariant, sizes: _button.propTypesSize, colors: _button.propTypesColor }, styles: { base: { position: "relative", verticalAlign: "align-middle", userSelect: "select-none", fontFamily: "font-sans", fontWeight: "font-medium", textAlign: "text-center", textTransform: "uppercase", transition: "transition-all", disabled: "disabled:opacity-50 disabled:shadow-none disabled:pointer-events-none" }, sizes: { sm: { width: "w-8", maxWidth: "max-w-[32px]", height: "h-8", maxHeight: "max-h-[32px]", borderRadius: "rounded-lg", fontSize: "text-xs" }, md: { width: "w-10", maxWidth: "max-w-[40px]", height: "h-10", maxHeight: "max-h-[40px]", borderRadius: "rounded-lg", fontSize: "text-xs" }, lg: { width: "w-12", maxWidth: "max-w-[48px]", height: "h-12", maxHeight: "max-h-[48px]", borderRadius: "rounded-lg", fontSize: "text-sm" } }, variants: { filled: _buttonFilled.default, gradient: _buttonGradient.default, outlined: _buttonOutlined.default, text: _buttonText.default } } }, _default = iconButton;
  }
});

// node_modules/@material-tailwind/react/theme/components/input/inputOutlined/inputOutlinedLabel.js
var require_inputOutlinedLabel = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/input/inputOutlined/inputOutlinedLabel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var inputOutlinedLabel = { position: "-top-1.5", fontSize: "peer-placeholder-shown:text-sm", floated: { fontSize: "text-[11px] peer-focus:text-[11px]" }, before: { content: "before:content[' ']", display: "before:block", boxSizing: "before:box-border", width: "before:w-2.5", height: "before:h-1.5", mt: "before:mt-[6.5px]", mr: "before:mr-1", borderColor: "peer-placeholder-shown:before:border-transparent", borderRadius: "before:rounded-tl-md", floated: { bt: "before:border-t peer-focus:before:border-t-2", bl: "before:border-l peer-focus:before:border-l-2" }, pointerEvents: "before:pointer-events-none", transition: "before:transition-all", disabled: "peer-disabled:before:border-transparent" }, after: { content: "after:content[' ']", display: "after:block", flexGrow: "after:flex-grow", boxSizing: "after:box-border", width: "after:w-2.5", height: "after:h-1.5", mt: "after:mt-[6.5px]", ml: "after:ml-1", borderColor: "peer-placeholder-shown:after:border-transparent", borderRadius: "after:rounded-tr-md", floated: { bt: "after:border-t peer-focus:after:border-t-2", br: "after:border-r peer-focus:after:border-r-2" }, pointerEvents: "after:pointer-events-none", transition: "after:transition-all", disabled: "peer-disabled:after:border-transparent" } }, _default = inputOutlinedLabel;
  }
});

// node_modules/@material-tailwind/react/theme/components/input/inputOutlined/inputOutlinedColors.js
var require_inputOutlinedColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/input/inputOutlined/inputOutlinedColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var inputOutlinedColors = { black: { color: "text-black", borderColor: "border-black", borderColorFocused: "focus:border-black" }, white: { color: "!text-white", borderColor: "border-white", borderColorFocused: "focus:border-white" }, "blue-gray": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-blue-gray-500" }, gray: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-gray-900" }, brown: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-brown-500" }, "deep-orange": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-deep-orange-500" }, orange: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-orange-500" }, amber: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-amber-500" }, yellow: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-yellow-500" }, lime: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-lime-500" }, "light-green": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-light-green-500" }, green: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-green-500" }, teal: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-teal-500" }, cyan: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-cyan-500" }, "light-blue": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-light-blue-500" }, blue: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-blue-500" }, indigo: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-indigo-500" }, "deep-purple": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-deep-purple-500" }, purple: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-purple-500" }, pink: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-pink-500" }, red: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-red-500" } }, _default = inputOutlinedColors;
  }
});

// node_modules/@material-tailwind/react/theme/components/input/inputOutlined/inputOutlinedLabelColors.js
var require_inputOutlinedLabelColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/input/inputOutlined/inputOutlinedLabelColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var inputOutlinedLabelColors = { black: { color: "!text-black peer-focus:text-black", before: "before:border-black peer-focus:before:!border-black", after: "after:border-black peer-focus:after:!border-black" }, white: { color: "!text-white peer-focus:text-white", before: "before:border-white peer-focus:before:!border-white", after: "after:border-white peer-focus:after:!border-white" }, "blue-gray": { color: "text-blue-gray-400 peer-focus:text-blue-gray-500", before: "before:border-blue-gray-200 peer-focus:before:!border-blue-gray-500", after: "after:border-blue-gray-200 peer-focus:after:!border-blue-gray-500" }, gray: { color: "text-gray-500 peer-focus:text-gray-900", before: "before:border-blue-gray-200 peer-focus:before:!border-gray-900", after: "after:border-blue-gray-200 peer-focus:after:!border-gray-900" }, brown: { color: "text-blue-gray-400 peer-focus:text-brown-500", before: "before:border-blue-gray-200 peer-focus:before:!border-brown-500", after: "after:border-blue-gray-200 peer-focus:after:!border-brown-500" }, "deep-orange": { color: "text-blue-gray-400 peer-focus:text-deep-orange-500", before: "before:border-blue-gray-200 peer-focus:before:!border-deep-orange-500", after: "after:border-blue-gray-200 peer-focus:after:!border-deep-orange-500" }, orange: { color: "text-blue-gray-400 peer-focus:text-orange-500", before: "before:border-blue-gray-200 peer-focus:before:!border-orange-500", after: "after:border-blue-gray-200 peer-focus:after:!border-orange-500" }, amber: { color: "text-blue-gray-400 peer-focus:text-amber-500", before: "before:border-blue-gray-200 peer-focus:before:!border-amber-500", after: "after:border-blue-gray-200 peer-focus:after:!border-amber-500" }, yellow: { color: "text-blue-gray-400 peer-focus:text-yellow-500", before: "before:border-blue-gray-200 peer-focus:before:!border-yellow-500", after: "after:border-blue-gray-200 peer-focus:after:!border-yellow-500" }, lime: { color: "text-blue-gray-400 peer-focus:text-lime-500", before: "before:border-blue-gray-200 peer-focus:before:!border-lime-500", after: "after:border-blue-gray-200 peer-focus:after:!border-lime-500" }, "light-green": { color: "text-blue-gray-400 peer-focus:text-light-green-500", before: "before:border-blue-gray-200 peer-focus:before:!border-light-green-500", after: "after:border-blue-gray-200 peer-focus:after:!border-light-green-500" }, green: { color: "text-blue-gray-400 peer-focus:text-green-500", before: "before:border-blue-gray-200 peer-focus:before:!border-green-500", after: "after:border-blue-gray-200 peer-focus:after:!border-green-500" }, teal: { color: "text-blue-gray-400 peer-focus:text-teal-500", before: "before:border-blue-gray-200 peer-focus:before:!border-teal-500", after: "after:border-blue-gray-200 peer-focus:after:!border-teal-500" }, cyan: { color: "text-blue-gray-400 peer-focus:text-cyan-500", before: "before:border-blue-gray-200 peer-focus:before:!border-cyan-500", after: "after:border-blue-gray-200 peer-focus:after:!border-cyan-500" }, "light-blue": { color: "text-blue-gray-400 peer-focus:text-light-blue-500", before: "before:border-blue-gray-200 peer-focus:before:!border-light-blue-500", after: "after:border-blue-gray-200 peer-focus:after:!border-light-blue-500" }, blue: { color: "text-blue-gray-400 peer-focus:text-blue-500", before: "before:border-blue-gray-200 peer-focus:before:!border-blue-500", after: "after:border-blue-gray-200 peer-focus:after:!border-blue-500" }, indigo: { color: "text-blue-gray-400 peer-focus:text-indigo-500", before: "before:border-blue-gray-200 peer-focus:before:!border-indigo-500", after: "after:border-blue-gray-200 peer-focus:after:!border-indigo-500" }, "deep-purple": { color: "text-blue-gray-400 peer-focus:text-deep-purple-500", before: "before:border-blue-gray-200 peer-focus:before:!border-deep-purple-500", after: "after:border-blue-gray-200 peer-focus:after:!border-deep-purple-500" }, purple: { color: "text-blue-gray-400 peer-focus:text-purple-500", before: "before:border-blue-gray-200 peer-focus:before:!border-purple-500", after: "after:border-blue-gray-200 peer-focus:after:!border-purple-500" }, pink: { color: "text-blue-gray-400 peer-focus:text-pink-500", before: "before:border-blue-gray-200 peer-focus:before:!border-pink-500", after: "after:border-blue-gray-200 peer-focus:after:!border-pink-500" }, red: { color: "text-blue-gray-400 peer-focus:text-red-500", before: "before:border-blue-gray-200 peer-focus:before:!border-red-500", after: "after:border-blue-gray-200 peer-focus:after:!border-red-500" } }, _default = inputOutlinedLabelColors;
  }
});

// node_modules/@material-tailwind/react/theme/components/input/inputOutlined/index.js
var require_inputOutlined = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/input/inputOutlined/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var _inputOutlinedLabel = _interopRequireDefault(require_inputOutlinedLabel()), _inputOutlinedColors = _interopRequireDefault(require_inputOutlinedColors()), _inputOutlinedLabelColors = _interopRequireDefault(require_inputOutlinedLabelColors());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var inputOutlined = { base: { input: { borderWidth: "placeholder-shown:border", borderColor: "placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200", floated: { borderWidth: "border focus:border-2", borderColor: "border-t-transparent focus:border-t-transparent" } }, inputWithIcon: { pr: "!pr-9" }, icon: { top: "top-2/4", right: "right-3", transform: "-translate-y-2/4" }, label: _inputOutlinedLabel.default }, sizes: { md: { container: { height: "h-10" }, input: { fontSize: "text-sm", px: "px-3", py: "py-2.5", borderRadius: "rounded-[7px]" }, label: { lineHeight: "peer-placeholder-shown:leading-[3.75]" }, icon: { width: "w-5", height: "h-5" } }, lg: { container: { height: "h-11" }, input: { fontSize: "text-sm", px: "px-3", py: "py-3", borderRadius: "rounded-md" }, label: { lineHeight: "peer-placeholder-shown:leading-[4.1]" }, icon: { width: "w-6", height: "h-6" } } }, colors: { input: _inputOutlinedColors.default, label: _inputOutlinedLabelColors.default }, error: { input: { borderColor: "border-red-500 placeholder-shown:border-t-red-500 placeholder-shown:border-red-500", borderColorFocused: "focus:border-red-500" }, label: { color: "text-red-500 peer-focus:text-red-500 peer-placeholder-shown:text-red-500", before: "before:border-red-500 peer-focus:before:border-red-500", after: "after:border-red-500 peer-focus:after:border-red-500" } }, success: { input: { borderColor: "border-green-500 placeholder-shown:border-t-green-500 placeholder-shown:border-green-500", borderColorFocused: "focus:border-green-500" }, label: { color: "text-green-500 peer-focus:text-green-500 peer-placeholder-shown:text-green-500", before: "before:border-green-500 peer-focus:before:border-green-500", after: "after:border-green-500 peer-focus:after:border-green-500" } }, shrink: { input: { borderTop: "!border-t-transparent" }, label: { fontSize: "!text-[11px]", lineHeight: "!leading-tight", borderColor: "before:!border-blue-gray-200 after:!border-blue-gray-200" } } }, _default = inputOutlined;
  }
});

// node_modules/@material-tailwind/react/theme/components/input/inputStandard/inputStandardLabel.js
var require_inputStandardLabel = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/input/inputStandard/inputStandardLabel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var inputStandardLabel = { position: "-top-1.5", fontSize: "peer-placeholder-shown:text-sm", floated: { fontSize: "text-[11px] peer-focus:text-[11px]" }, after: { content: "after:content['']", display: "after:block", width: "after:w-full", position: "after:absolute", bottom: "after:-bottom-1.5", left: "left-0", borderWidth: "after:border-b-2", scale: "after:scale-x-0", floated: { scale: "peer-focus:after:scale-x-100" }, transition: "after:transition-transform after:duration-300" } }, _default = inputStandardLabel;
  }
});

// node_modules/@material-tailwind/react/theme/components/input/inputStandard/inputStandardColors.js
var require_inputStandardColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/input/inputStandard/inputStandardColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var inputStandardColors = { black: { color: "text-black", borderColor: "border-black", borderColorFocused: "focus:border-black" }, white: { color: "!text-white", borderColor: "border-white", borderColorFocused: "focus:border-white" }, "blue-gray": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-blue-gray-900" }, gray: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-gray-500" }, brown: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-brown-500" }, "deep-orange": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-deep-orange-500" }, orange: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-orange-500" }, amber: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-amber-500" }, yellow: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-yellow-500" }, lime: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-lime-500" }, "light-green": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-light-green-500" }, green: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-green-500" }, teal: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-teal-500" }, cyan: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-cyan-500" }, "light-blue": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-light-blue-500" }, blue: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-blue-500" }, indigo: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-indigo-500" }, "deep-purple": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-deep-purple-500" }, purple: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-purple-500" }, pink: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-pink-500" }, red: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-red-500" } }, _default = inputStandardColors;
  }
});

// node_modules/@material-tailwind/react/theme/components/input/inputStandard/inputStandardLabelColors.js
var require_inputStandardLabelColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/input/inputStandard/inputStandardLabelColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var inputStandardLabelColors = { black: { color: "!text-black peer-focus:text-black", after: "after:border-black peer-focus:after:border-black" }, white: { color: "!text-white peer-focus:text-white", after: "after:border-white peer-focus:after:border-white" }, "blue-gray": { color: "text-blue-gray-500 peer-focus:text-blue-gray-500", after: "after:border-blue-gray-500 peer-focus:after:border-blue-gray-500" }, gray: { color: "text-gray-500 peer-focus:text-gray-900", after: "after:border-gray-500 peer-focus:after:border-gray-900" }, brown: { color: "text-blue-gray-500 peer-focus:text-brown-500", after: "after:border-brown-500 peer-focus:after:border-brown-500" }, "deep-orange": { color: "text-blue-gray-500 peer-focus:text-deep-orange-500", after: "after:border-deep-orange-500 peer-focus:after:border-deep-orange-500" }, orange: { color: "text-blue-gray-500 peer-focus:text-orange-500", after: "after:border-orange-500 peer-focus:after:border-orange-500" }, amber: { color: "text-blue-gray-500 peer-focus:text-amber-500", after: "after:border-amber-500 peer-focus:after:border-amber-500" }, yellow: { color: "text-blue-gray-500 peer-focus:text-yellow-500", after: "after:border-yellow-500 peer-focus:after:border-yellow-500" }, lime: { color: "text-blue-gray-500 peer-focus:text-lime-500", after: "after:border-lime-500 peer-focus:after:border-lime-500" }, "light-green": { color: "text-blue-gray-500 peer-focus:text-light-green-500", after: "after:border-light-green-500 peer-focus:after:border-light-green-500" }, green: { color: "text-blue-gray-500 peer-focus:text-green-500", after: "after:border-green-500 peer-focus:after:border-green-500" }, teal: { color: "text-blue-gray-500 peer-focus:text-teal-500", after: "after:border-teal-500 peer-focus:after:border-teal-500" }, cyan: { color: "text-blue-gray-500 peer-focus:text-cyan-500", after: "after:border-cyan-500 peer-focus:after:border-cyan-500" }, "light-blue": { color: "text-blue-gray-500 peer-focus:text-light-blue-500", after: "after:border-light-blue-500 peer-focus:after:border-light-blue-500" }, blue: { color: "text-blue-gray-500 peer-focus:text-blue-500", after: "after:border-blue-500 peer-focus:after:border-blue-500" }, indigo: { color: "text-blue-gray-500 peer-focus:text-indigo-500", after: "after:border-indigo-500 peer-focus:after:border-indigo-500" }, "deep-purple": { color: "text-blue-gray-500 peer-focus:text-deep-purple-500", after: "after:border-deep-purple-500 peer-focus:after:border-deep-purple-500" }, purple: { color: "text-blue-gray-500 peer-focus:text-purple-500", after: "after:border-purple-500 peer-focus:after:border-purple-500" }, pink: { color: "text-blue-gray-500 peer-focus:text-pink-500", after: "after:border-pink-500 peer-focus:after:border-pink-500" }, red: { color: "text-blue-gray-500 peer-focus:text-red-500", after: "after:border-red-500 peer-focus:after:border-red-500" } }, _default = inputStandardLabelColors;
  }
});

// node_modules/@material-tailwind/react/theme/components/input/inputStandard/index.js
var require_inputStandard = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/input/inputStandard/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var _inputStandardLabel = _interopRequireDefault(require_inputStandardLabel()), _inputStandardColors = _interopRequireDefault(require_inputStandardColors()), _inputStandardLabelColors = _interopRequireDefault(require_inputStandardLabelColors());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var inputStandard = { base: { input: { borderWidth: "border-b", borderColor: "placeholder-shown:border-blue-gray-200" }, inputWithIcon: { pr: "!pr-7" }, icon: { top: "top-2/4", right: "right-0", transform: "-translate-y-1/4" }, label: _inputStandardLabel.default }, sizes: { md: { container: { height: "h-11" }, input: { fontSize: "text-sm", pt: "pt-4", pb: "pb-1.5" }, label: { lineHeight: "peer-placeholder-shown:leading-[4.25]" }, icon: { width: "w-5", height: "h-5" } }, lg: { container: { height: "h-12" }, input: { fontSize: "text-sm", px: "px-px", pt: "pt-5", pb: "pb-2" }, label: { lineHeight: "peer-placeholder-shown:leading-[4.875]" }, icon: { width: "w-6", height: "h-6" } } }, colors: { input: _inputStandardColors.default, label: _inputStandardLabelColors.default }, error: { input: { borderColor: "border-red-500 placeholder-shown:border-red-500", borderColorFocused: "focus:border-red-500" }, label: { color: "text-red-500 peer-focus:text-red-500 peer-placeholder-shown:text-red-500", after: "after:border-red-500 peer-focus:after:border-red-500" } }, success: { input: { borderColor: "border-green-500 placeholder-shown:border-green-500", borderColorFocused: "focus:border-green-500" }, label: { color: "text-green-500 peer-focus:text-green-500 peer-placeholder-shown:text-green-500", after: "after:border-green-500 peer-focus:after:border-green-500" } }, shrink: { input: {}, label: { fontSize: "!text-[11px]", lineHeight: "!leading-tight" } } }, _default = inputStandard;
  }
});

// node_modules/@material-tailwind/react/theme/components/input/inputStatic/inputStaticLabel.js
var require_inputStaticLabel = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/input/inputStatic/inputStaticLabel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var inputStaticLabel = { position: "-top-2.5", fontSize: "text-sm peer-focus:text-sm", after: { content: "after:content[' ']", display: "after:block", width: "after:w-full", position: "after:absolute", bottom: "after:-bottom-2.5", left: "left-0", borderWidth: "after:border-b-2", scale: "after:scale-x-0", floated: { scale: "peer-focus:after:scale-x-100" }, transition: "after:transition-transform after:duration-300" } }, _default = inputStaticLabel;
  }
});

// node_modules/@material-tailwind/react/theme/components/input/inputStatic/inputStaticColors.js
var require_inputStaticColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/input/inputStatic/inputStaticColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var inputStaticColors = { black: { color: "text-black", borderColor: "border-black", borderColorFocused: "focus:border-black" }, white: { color: "!text-white", borderColor: "border-white", borderColorFocused: "focus:border-white" }, "blue-gray": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-blue-gray-500" }, gray: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-gray-900" }, brown: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-brown-500" }, "deep-orange": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-deep-orange-500" }, orange: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-orange-500" }, amber: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-amber-500" }, yellow: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-yellow-500" }, lime: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-lime-500" }, "light-green": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-light-green-500" }, green: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-green-500" }, teal: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-teal-500" }, cyan: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-cyan-500" }, "light-blue": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-light-blue-500" }, blue: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-blue-500" }, indigo: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-indigo-500" }, "deep-purple": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-deep-purple-500" }, purple: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-purple-500" }, pink: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-pink-500" }, red: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-red-500" } }, _default = inputStaticColors;
  }
});

// node_modules/@material-tailwind/react/theme/components/input/inputStatic/inputStaticLabelColors.js
var require_inputStaticLabelColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/input/inputStatic/inputStaticLabelColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var inputStaticLabelColors = { black: { color: "!text-black peer-focus:black", after: "after:border-black peer-focus:after:border-black" }, white: { color: "!text-white peer-focus:white", after: "after:border-white peer-focus:after:border-white" }, "blue-gray": { color: "text-blue-gray-500 peer-focus:text-blue-gray-500", after: "after:border-blue-gray-500 peer-focus:after:border-blue-gray-500" }, gray: { color: "text-gray-500 peer-focus:text-gray-900", after: "after:border-gray-500 peer-focus:after:border-gray-900" }, brown: { color: "text-blue-gray-500 peer-focus:text-brown-500", after: "after:border-brown-500 peer-focus:after:border-brown-500" }, "deep-orange": { color: "text-blue-gray-500 peer-focus:text-deep-orange-500", after: "after:border-deep-orange-500 peer-focus:after:border-deep-orange-500" }, orange: { color: "text-blue-gray-500 peer-focus:text-orange-500", after: "after:border-orange-500 peer-focus:after:border-orange-500" }, amber: { color: "text-blue-gray-500 peer-focus:text-amber-500", after: "after:border-amber-500 peer-focus:after:border-amber-500" }, yellow: { color: "text-blue-gray-500 peer-focus:text-yellow-500", after: "after:border-yellow-500 peer-focus:after:border-yellow-500" }, lime: { color: "text-blue-gray-500 peer-focus:text-lime-500", after: "after:border-lime-500 peer-focus:after:border-lime-500" }, "light-green": { color: "text-blue-gray-500 peer-focus:text-light-green-500", after: "after:border-light-green-500 peer-focus:after:border-light-green-500" }, green: { color: "text-blue-gray-500 peer-focus:text-green-500", after: "after:border-green-500 peer-focus:after:border-green-500" }, teal: { color: "text-blue-gray-500 peer-focus:text-teal-500", after: "after:border-teal-500 peer-focus:after:border-teal-500" }, cyan: { color: "text-blue-gray-500 peer-focus:text-cyan-500", after: "after:border-cyan-500 peer-focus:after:border-cyan-500" }, "light-blue": { color: "text-blue-gray-500 peer-focus:text-light-blue-500", after: "after:border-light-blue-500 peer-focus:after:border-light-blue-500" }, blue: { color: "text-blue-gray-500 peer-focus:text-blue-500", after: "after:border-blue-500 peer-focus:after:border-blue-500" }, indigo: { color: "text-blue-gray-500 peer-focus:text-indigo-500", after: "after:border-indigo-500 peer-focus:after:border-indigo-500" }, "deep-purple": { color: "text-blue-gray-500 peer-focus:text-deep-purple-500", after: "after:border-deep-purple-500 peer-focus:after:border-deep-purple-500" }, purple: { color: "text-blue-gray-500 peer-focus:text-purple-500", after: "after:border-purple-500 peer-focus:after:border-purple-500" }, pink: { color: "text-blue-gray-500 peer-focus:text-pink-500", after: "after:border-pink-500 peer-focus:after:border-pink-500" }, red: { color: "text-blue-gray-500 peer-focus:text-red-500", after: "after:border-red-500 peer-focus:after:border-red-500" } }, _default = inputStaticLabelColors;
  }
});

// node_modules/@material-tailwind/react/theme/components/input/inputStatic/index.js
var require_inputStatic = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/input/inputStatic/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var _inputStaticLabel = _interopRequireDefault(require_inputStaticLabel()), _inputStaticColors = _interopRequireDefault(require_inputStaticColors()), _inputStaticLabelColors = _interopRequireDefault(require_inputStaticLabelColors());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var inputStatic = { base: { input: { borderWidth: "border-b", borderColor: "placeholder-shown:border-blue-gray-200" }, inputWithIcon: { pr: "!pr-7" }, icon: { top: "top-2/4", right: "right-0", transform: "-translate-y-1/4" }, label: _inputStaticLabel.default }, sizes: { md: { container: { height: "h-11" }, input: { fontSize: "text-sm", pt: "pt-4", pb: "pb-1.5" }, label: { lineHeight: "peer-placeholder-shown:leading-tight" }, icon: { width: "w-5", height: "h-5" } }, lg: { container: { height: "h-12" }, input: { fontSize: "text-sm", px: "px-px", pt: "pt-5", pb: "pb-2" }, label: { lineHeight: "peer-placeholder-shown:leading-tight" }, icon: { width: "w-6", height: "h-6" } } }, colors: { input: _inputStaticColors.default, label: _inputStaticLabelColors.default }, error: { input: { borderColor: "border-red-500 placeholder-shown:border-red-500", borderColorFocused: "focus:border-red-500" }, label: { color: "text-red-500 peer-focus:text-red-500 peer-placeholder-shown:text-red-500", after: "after:border-red-500 peer-focus:after:border-red-500" } }, success: { input: { borderColor: "border-green-500 placeholder-shown:border-green-500", borderColorFocused: "focus:border-green-500" }, label: { color: "text-green-500 peer-focus:text-green-500 peer-placeholder-shown:text-green-500", after: "after:border-green-500 peer-focus:after:border-green-500" } }, shrink: { input: {}, label: {} } }, _default = inputStatic;
  }
});

// node_modules/@material-tailwind/react/types/components/input.js
var require_input = __commonJS({
  "node_modules/@material-tailwind/react/types/components/input.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesVariant: function() {
      return propTypesVariant;
    }, propTypesSize: function() {
      return propTypesSize;
    }, propTypesColor: function() {
      return propTypesColor;
    }, propTypesLabel: function() {
      return propTypesLabel;
    }, propTypesError: function() {
      return propTypesError;
    }, propTypesSuccess: function() {
      return propTypesSuccess;
    }, propTypesIcon: function() {
      return propTypesIcon;
    }, propTypesResize: function() {
      return propTypesResize;
    }, propTypesLabelProps: function() {
      return propTypesLabelProps;
    }, propTypesContainerProps: function() {
      return propTypesContainerProps;
    }, propTypesShrink: function() {
      return propTypesShrink;
    }, propTypesClassName: function() {
      return propTypesClassName;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray2(arr);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArray(iter) {
      if (typeof Symbol < "u" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var propTypesVariant = ["standard", "outlined", "static"], propTypesSize = ["md", "lg"], propTypesColor = ["black", "white"].concat(_toConsumableArray(_generic.propTypesColors)), propTypesLabel = _propTypes.default.string, propTypesError = _propTypes.default.bool, propTypesSuccess = _propTypes.default.bool, propTypesIcon = _propTypes.default.node, propTypesResize = _propTypes.default.bool, propTypesLabelProps = _propTypes.default.instanceOf(Object), propTypesContainerProps = _propTypes.default.instanceOf(Object), propTypesShrink = _propTypes.default.bool, propTypesClassName = _propTypes.default.string;
  }
});

// node_modules/@material-tailwind/react/theme/components/input/index.js
var require_input2 = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/input/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { input: function() {
      return input;
    }, default: function() {
      return _default;
    } });
    var _inputOutlined = _interopRequireDefault(require_inputOutlined()), _inputStandard = _interopRequireDefault(require_inputStandard()), _inputStatic = _interopRequireDefault(require_inputStatic()), _input = require_input();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var input = { defaultProps: { variant: "outlined", size: "md", color: "gray", label: "", error: !1, success: !1, icon: void 0, labelProps: void 0, containerProps: void 0, shrink: !1, className: "" }, valid: { variants: _input.propTypesVariant, sizes: _input.propTypesSize, colors: _input.propTypesColor }, styles: { base: { container: { position: "relative", width: "w-full", minWidth: "min-w-[200px]" }, input: { peer: "peer", width: "w-full", height: "h-full", bg: "bg-transparent", color: "text-blue-gray-700", fontFamily: "font-sans", fontWeight: "font-normal", outline: "outline outline-0 focus:outline-0", disabled: "disabled:bg-blue-gray-50 disabled:border-0", transition: "transition-all" }, label: { display: "flex", width: "w-full", height: "h-full", userSelect: "select-none", pointerEvents: "pointer-events-none", position: "absolute", left: "left-0", fontWeight: "font-normal", overflow: "!overflow-visible", textOverflow: "truncate", color: "peer-placeholder-shown:text-blue-gray-500", lineHeight: "leading-tight peer-focus:leading-tight", disabled: "peer-disabled:text-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500", transition: "transition-all" }, icon: { display: "grid", placeItems: "place-items-center", position: "absolute", color: "text-blue-gray-500" }, asterisk: { display: "inline-block", color: "text-red-500", ml: "ml-0.5" } }, variants: { outlined: _inputOutlined.default, standard: _inputStandard.default, static: _inputStatic.default } } }, _default = input;
  }
});

// node_modules/@material-tailwind/react/theme/components/menu/index.js
var require_menu = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/menu/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { menu: function() {
      return menu;
    }, default: function() {
      return _default;
    } });
    var menu = { defaultProps: { placement: "bottom", offset: 5, dismiss: { itemPress: !0 }, animate: { unmount: {}, mount: {} }, lockScroll: !1 }, styles: { base: { menu: { bg: "bg-white", minWidth: "min-w-[180px]", p: "p-3", border: "border border-blue-gray-50", borderRadius: "rounded-md", boxShadow: "shadow-lg shadow-blue-gray-500/10", fontFamily: "font-sans", fontSize: "text-sm", fontWeight: "font-normal", color: "text-blue-gray-500", overflow: "overflow-auto", outline: "focus:outline-none", zIndex: "z-[999]" }, item: { initial: { display: "block", width: "w-full", pt: "pt-[9px]", pb: "pb-2", px: "px-3", borderRadius: "rounded-md", textAlign: "text-start", lightHeight: "leading-tight", cursor: "cursor-pointer", userSelect: "select-none", transition: "transition-all", bg: "hover:bg-blue-gray-50 hover:bg-opacity-80 focus:bg-blue-gray-50 focus:bg-opacity-80 active:bg-blue-gray-50 active:bg-opacity-80", color: "hover:text-blue-gray-900 focus:text-blue-gray-900 active:text-blue-gray-900", outline: "outline-none" }, disabled: { opacity: "opacity-50", cursor: "cursor-not-allowed", pointerEvents: "pointer-events-none", userSelect: "select-none", bg: "hover:bg-transparent focus:bg-transparent active:bg-transparent", color: "hover:text-blue-gray-500 focus:text-blue-gray-500 active:text-blue-gray-500" } } } } }, _default = menu;
  }
});

// node_modules/@material-tailwind/react/theme/components/navbar/navbarFilled.js
var require_navbarFilled = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/navbar/navbarFilled.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var navbarFilled = { transparent: { backgroud: "bg-transparent", color: "text-white", boxShadow: "shadow-none" }, white: { backgroud: "bg-white", color: "text-white" }, "blue-gray": { backgroud: "bg-blue-gray-500", color: "text-white" }, gray: { backgroud: "bg-gray-500", color: "text-white" }, brown: { backgroud: "bg-brown-500", color: "text-white" }, "deep-orange": { backgroud: "bg-deep-orange-500", color: "text-white" }, orange: { backgroud: "bg-orange-500", color: "text-white" }, amber: { backgroud: "bg-amber-500", color: "text-black" }, yellow: { backgroud: "bg-yellow-500", color: "text-black" }, lime: { backgroud: "bg-lime-500", color: "text-black" }, "light-green": { backgroud: "bg-light-green-500", color: "text-white" }, green: { backgroud: "bg-green-500", color: "text-white" }, teal: { backgroud: "bg-teal-500", color: "text-white" }, cyan: { backgroud: "bg-cyan-500", color: "text-white" }, "light-blue": { backgroud: "bg-light-blue-500", color: "text-white" }, blue: { backgroud: "bg-blue-500", color: "text-white" }, indigo: { backgroud: "bg-indigo-500", color: "text-white" }, "deep-purple": { backgroud: "bg-deep-purple-500", color: "text-white" }, purple: { backgroud: "bg-purple-500", color: "text-white" }, pink: { backgroud: "bg-pink-500", color: "text-white" }, red: { backgroud: "bg-red-500", color: "text-white" } }, _default = navbarFilled;
  }
});

// node_modules/@material-tailwind/react/theme/components/navbar/navbarGradient.js
var require_navbarGradient = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/navbar/navbarGradient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var navbarGradient = { transparent: { backgroud: "bg-transparent", color: "text-blue-gray-900", boxShadow: "shadow-none" }, white: { backgroud: "bg-white", color: "text-blue-gray-900" }, "blue-gray": { backgroud: "bg-gradient-to-tr from-blue-gray-600 to-blue-gray-400", color: "text-white" }, gray: { backgroud: "bg-gradient-to-tr from-gray-600 to-gray-400", color: "text-white" }, brown: { backgroud: "bg-gradient-to-tr from-brown-600 to-brown-400", color: "text-white" }, "deep-orange": { backgroud: "bg-gradient-to-tr from-deep-orange-600 to-deep-orange-400", color: "text-white" }, orange: { backgroud: "bg-gradient-to-tr from-orange-600 to-orange-400", color: "text-white" }, amber: { backgroud: "bg-gradient-to-tr from-amber-600 to-amber-400", color: "text-black" }, yellow: { backgroud: "bg-gradient-to-tr from-yellow-600 to-yellow-400", color: "text-black" }, lime: { backgroud: "bg-gradient-to-tr from-lime-600 to-lime-400", color: "text-black" }, "light-green": { backgroud: "bg-gradient-to-tr from-light-green-600 to-light-green-400", color: "text-white" }, green: { backgroud: "bg-gradient-to-tr from-green-600 to-green-400", color: "text-white" }, teal: { backgroud: "bg-gradient-to-tr from-teal-600 to-teal-400", color: "text-white" }, cyan: { backgroud: "bg-gradient-to-tr from-cyan-600 to-cyan-400", color: "text-white" }, "light-blue": { backgroud: "bg-gradient-to-tr from-light-blue-600 to-light-blue-400", color: "text-white" }, blue: { backgroud: "bg-gradient-to-tr from-blue-600 to-blue-400", color: "text-white" }, indigo: { backgroud: "bg-gradient-to-tr from-indigo-600 to-indigo-400", color: "text-white" }, "deep-purple": { backgroud: "bg-gradient-to-tr from-deep-purple-600 to-deep-purple-400", color: "text-white" }, purple: { backgroud: "bg-gradient-to-tr from-purple-600 to-purple-400", color: "text-white" }, pink: { backgroud: "bg-gradient-to-tr from-pink-600 to-pink-400", color: "text-white" }, red: { backgroud: "bg-gradient-to-tr from-red-600 to-red-400", color: "text-white" } }, _default = navbarGradient;
  }
});

// node_modules/@material-tailwind/react/types/components/navbar.js
var require_navbar = __commonJS({
  "node_modules/@material-tailwind/react/types/components/navbar.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesVariant: function() {
      return propTypesVariant;
    }, propTypesColor: function() {
      return propTypesColor;
    }, propTypesShadow: function() {
      return propTypesShadow;
    }, propTypesBlurred: function() {
      return propTypesBlurred;
    }, propTypesFullWidth: function() {
      return propTypesFullWidth;
    }, propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesChildren: function() {
      return propTypesChildren;
    }, propTypesOpen: function() {
      return propTypesOpen;
    }, propTypesAnimate: function() {
      return propTypesAnimate;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray2(arr);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArray(iter) {
      if (typeof Symbol < "u" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var propTypesVariant = ["filled", "gradient"], propTypesColor = ["transparent", "white"].concat(_toConsumableArray(_generic.propTypesColors)), propTypesShadow = _propTypes.default.bool, propTypesBlurred = _propTypes.default.bool, propTypesFullWidth = _propTypes.default.bool, propTypesClassName = _propTypes.default.string, propTypesChildren = _propTypes.default.node.isRequired, propTypesOpen = _propTypes.default.bool.isRequired, propTypesAnimate = _generic.propTypesAnimation;
  }
});

// node_modules/@material-tailwind/react/theme/components/navbar/index.js
var require_navbar2 = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/navbar/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { navbar: function() {
      return navbar;
    }, default: function() {
      return _default;
    } });
    var _navbarFilled = _interopRequireDefault(require_navbarFilled()), _navbarGradient = _interopRequireDefault(require_navbarGradient()), _navbar = require_navbar();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var navbar = { defaultProps: { variant: "filled", color: "white", shadow: !0, blurred: !0, fullWidth: !1, className: "" }, valid: { variants: _navbar.propTypesVariant, colors: _navbar.propTypesColor }, styles: { base: { navbar: { initial: { display: "block", width: "w-full", maxWidth: "max-w-screen-2xl", borderRadius: "rounded-xl", py: "py-4", px: "px-8" }, shadow: { boxShadow: "shadow-md" }, blurred: { backdropFilter: "backdrop-saturate-200 backdrop-blur-2xl", bgOpacity: "bg-opacity-80", borderWidth: "border", borderColor: "border-white/80" }, fullWidth: { width: "w-full", maxWidth: "max-w-full", rounded: "rounded-none", px: "px-4" } }, mobileNav: { display: "block", width: "w-full", basis: "basis-full", overflow: "overflow-hidden" } }, variants: { filled: _navbarFilled.default, gradient: _navbarGradient.default } } }, _default = navbar;
  }
});

// node_modules/@material-tailwind/react/theme/components/popover/index.js
var require_popover = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/popover/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { popover: function() {
      return popover;
    }, default: function() {
      return _default;
    } });
    var popover = { defaultProps: { placement: "top", offset: 5, dismiss: {}, animate: { unmount: {}, mount: {} }, className: "" }, styles: { base: { bg: "bg-white", p: "p-4", border: "border border-blue-gray-50", borderRadius: "rounded-lg", boxShadow: "shadow-lg shadow-blue-gray-500/10", fontFamily: "font-sans", fontSize: "text-sm", fontWeight: "font-normal", color: "text-blue-gray-500", outline: "focus:outline-none", overflowWrap: "break-words", whiteSpace: "whitespace-normal" } } }, _default = popover;
  }
});

// node_modules/@material-tailwind/react/theme/components/progress/progressFilled.js
var require_progressFilled = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/progress/progressFilled.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var progressFilled = { "blue-gray": { backgroud: "bg-blue-gray-500", color: "text-white" }, gray: { backgroud: "bg-gray-900", color: "text-white" }, brown: { backgroud: "bg-brown-500", color: "text-white" }, "deep-orange": { backgroud: "bg-deep-orange-500", color: "text-white" }, orange: { backgroud: "bg-orange-500", color: "text-white" }, amber: { backgroud: "bg-amber-500", color: "text-black" }, yellow: { backgroud: "bg-yellow-500", color: "text-black" }, lime: { backgroud: "bg-lime-500", color: "text-black" }, "light-green": { backgroud: "bg-light-green-500", color: "text-white" }, green: { backgroud: "bg-green-500", color: "text-white" }, teal: { backgroud: "bg-teal-500", color: "text-white" }, cyan: { backgroud: "bg-cyan-500", color: "text-white" }, "light-blue": { backgroud: "bg-light-blue-500", color: "text-white" }, blue: { backgroud: "bg-blue-500", color: "text-white" }, indigo: { backgroud: "bg-indigo-500", color: "text-white" }, "deep-purple": { backgroud: "bg-deep-purple-500", color: "text-white" }, purple: { backgroud: "bg-purple-500", color: "text-white" }, pink: { backgroud: "bg-pink-500", color: "text-white" }, red: { backgroud: "bg-red-500", color: "text-white" } }, _default = progressFilled;
  }
});

// node_modules/@material-tailwind/react/theme/components/progress/progressGradient.js
var require_progressGradient = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/progress/progressGradient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var progressGradient = { "blue-gray": { backgroud: "bg-gradient-to-tr from-blue-gray-600 to-blue-gray-400", color: "text-white" }, gray: { backgroud: "bg-gradient-to-tr from-gray-900 to-gray-800", color: "text-white" }, brown: { backgroud: "bg-gradient-to-tr from-brown-600 to-brown-400", color: "text-white" }, "deep-orange": { backgroud: "bg-gradient-to-tr from-deep-orange-600 to-deep-orange-400", color: "text-white" }, orange: { backgroud: "bg-gradient-to-tr from-orange-600 to-orange-400", color: "text-white" }, amber: { backgroud: "bg-gradient-to-tr from-amber-600 to-amber-400", color: "text-black" }, yellow: { backgroud: "bg-gradient-to-tr from-yellow-600 to-yellow-400", color: "text-black" }, lime: { backgroud: "bg-gradient-to-tr from-lime-600 to-lime-400", color: "text-black" }, "light-green": { backgroud: "bg-gradient-to-tr from-light-green-600 to-light-green-400", color: "text-white" }, green: { backgroud: "bg-gradient-to-tr from-green-600 to-green-400", color: "text-white" }, teal: { backgroud: "bg-gradient-to-tr from-teal-600 to-teal-400", color: "text-white" }, cyan: { backgroud: "bg-gradient-to-tr from-cyan-600 to-cyan-400", color: "text-white" }, "light-blue": { backgroud: "bg-gradient-to-tr from-light-blue-600 to-light-blue-400", color: "text-white" }, blue: { backgroud: "bg-gradient-to-tr from-blue-600 to-blue-400", color: "text-white" }, indigo: { backgroud: "bg-gradient-to-tr from-indigo-600 to-indigo-400", color: "text-white" }, "deep-purple": { backgroud: "bg-gradient-to-tr from-deep-purple-600 to-deep-purple-400", color: "text-white" }, purple: { backgroud: "bg-gradient-to-tr from-purple-600 to-purple-400", color: "text-white" }, pink: { backgroud: "bg-gradient-to-tr from-pink-600 to-pink-400", color: "text-white" }, red: { backgroud: "bg-gradient-to-tr from-red-600 to-red-400", color: "text-white" } }, _default = progressGradient;
  }
});

// node_modules/@material-tailwind/react/types/components/progress.js
var require_progress = __commonJS({
  "node_modules/@material-tailwind/react/types/components/progress.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesVariant: function() {
      return propTypesVariant;
    }, propTypesColor: function() {
      return propTypesColor;
    }, propTypesSize: function() {
      return propTypesSize;
    }, propTypesValue: function() {
      return propTypesValue;
    }, propTypesLabel: function() {
      return propTypesLabel;
    }, propTypesBarProps: function() {
      return propTypesBarProps;
    }, propTypesClassName: function() {
      return propTypesClassName;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var propTypesVariant = ["filled", "gradient"], propTypesColor = _generic.propTypesColors, propTypesSize = ["sm", "md", "lg"], propTypesValue = _propTypes.default.number, propTypesLabel = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]), propTypesBarProps = _propTypes.default.instanceOf(Object), propTypesClassName = _propTypes.default.string;
  }
});

// node_modules/@material-tailwind/react/theme/components/progress/index.js
var require_progress2 = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/progress/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { progress: function() {
      return progress2;
    }, default: function() {
      return _default;
    } });
    var _progressFilled = _interopRequireDefault(require_progressFilled()), _progressGradient = _interopRequireDefault(require_progressGradient()), _progress = require_progress();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var progress2 = { defaultProps: { variant: "filled", color: "gray", size: "md", value: 0, label: !1, className: "", barProps: {} }, valid: { variants: _progress.propTypesVariant, colors: _progress.propTypesColor, sizes: _progress.propTypesSize }, styles: { base: { container: { initial: { display: "flex", justifyContent: "flex-start", bg: "bg-blue-gray-50", overflow: "overflow-hidden", width: "w-full", fontFamily: "font-sans", borderRadius: "rounded-full", fontSize: "text-xs", fontWeight: "font-medium" }, withLabel: {} }, bar: { display: "flex", justifyContent: "justify-center", alignItems: "items-center", height: "h-full", overflow: "overflow-hidden", wordBreak: "break-all", borderRadius: "rounded-full" } }, sizes: { sm: { container: { initial: { height: "h-1.5" }, withLabel: { height: "h-3.5" } }, bar: {} }, md: { container: { initial: { height: "h-2.5" }, withLabel: { height: "h-4" } }, bar: {} }, lg: { container: { initial: { height: "h-3.5" }, withLabel: { height: "h-5" } }, bar: {} } }, variants: { filled: _progressFilled.default, gradient: _progressGradient.default } } }, _default = progress2;
  }
});

// node_modules/@material-tailwind/react/theme/components/radio/radioColors.js
var require_radioColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/radio/radioColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var radioColors = { "blue-gray": { color: "text-blue-gray-500", border: "checked:border-blue-gray-500", before: "checked:before:bg-blue-gray-500" }, gray: { color: "text-gray-900", border: "checked:border-gray-900", before: "checked:before:bg-gray-900" }, brown: { color: "text-brown-500", border: "checked:border-brown-500", before: "checked:before:bg-brown-500" }, "deep-orange": { color: "text-deep-orange-500", border: "checked:border-deep-orange-500", before: "checked:before:bg-deep-orange-500" }, orange: { color: "text-orange-500", border: "checked:border-orange-500", before: "checked:before:bg-orange-500" }, amber: { color: "text-amber-500", border: "checked:border-amber-500", before: "checked:before:bg-amber-500" }, yellow: { color: "text-yellow-500", border: "checked:border-yellow-500", before: "checked:before:bg-yellow-500" }, lime: { color: "text-lime-500", border: "checked:border-lime-500", before: "checked:before:bg-lime-500" }, "light-green": { color: "text-light-green-500", border: "checked:border-light-green-500", before: "checked:before:bg-light-green-500" }, green: { color: "text-green-500", border: "checked:border-green-500", before: "checked:before:bg-green-500" }, teal: { color: "text-teal-500", border: "checked:border-teal-500", before: "checked:before:bg-teal-500" }, cyan: { color: "text-cyan-500", border: "checked:border-cyan-500", before: "checked:before:bg-cyan-500" }, "light-blue": { color: "text-light-blue-500", border: "checked:border-light-blue-500", before: "checked:before:bg-light-blue-500" }, blue: { color: "text-blue-500", border: "checked:border-blue-500", before: "checked:before:bg-blue-500" }, indigo: { color: "text-indigo-500", border: "checked:border-indigo-500", before: "checked:before:bg-indigo-500" }, "deep-purple": { color: "text-deep-purple-500", border: "checked:border-deep-purple-500", before: "checked:before:bg-deep-purple-500" }, purple: { color: "text-purple-500", border: "checked:border-purple-500", before: "checked:before:bg-purple-500" }, pink: { color: "text-pink-500", border: "checked:border-pink-500", before: "checked:before:bg-pink-500" }, red: { color: "text-red-500", border: "checked:border-red-500", before: "checked:before:bg-red-500" } }, _default = radioColors;
  }
});

// node_modules/@material-tailwind/react/theme/components/radio/index.js
var require_radio = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/radio/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { radio: function() {
      return radio;
    }, default: function() {
      return _default;
    } });
    var _radioColors = _interopRequireDefault(require_radioColors()), _checkbox = require_checkbox();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var radio = { defaultProps: { color: "gray", label: void 0, icon: void 0, ripple: !0, className: "", disabled: !1, containerProps: void 0, labelProps: void 0, iconProps: void 0 }, valid: { colors: _checkbox.propTypesColor }, styles: { base: { root: { display: "inline-flex", alignItems: "items-center" }, container: { position: "relative", display: "flex", alignItems: "items-center", cursor: "cursor-pointer", p: "p-3", borderRadius: "rounded-full" }, input: { peer: "peer", position: "relative", appearance: "appearance-none", width: "w-5", height: "h-5", borderWidth: "border", borderRadius: "rounded-full", borderColor: "border-blue-gray-200", cursor: "cursor-pointer", transition: "transition-all", before: { content: "before:content['']", display: "before:block", bg: "before:bg-blue-gray-500", width: "before:w-12", height: "before:h-12", borderRadius: "before:rounded-full", position: "before:absolute", top: "before:top-2/4", left: "before:left-2/4", transform: "before:-translate-y-2/4 before:-translate-x-2/4", opacity: "before:opacity-0 hover:before:opacity-10", transition: "before:transition-opacity" } }, label: { color: "text-gray-700", fontWeight: "font-light", userSelect: "select-none", cursor: "cursor-pointer", mt: "mt-px" }, icon: { position: "absolute", top: "top-2/4", left: "left-2/4", translate: "-translate-y-2/4 -translate-x-2/4", pointerEvents: "pointer-events-none", opacity: "opacity-0 peer-checked:opacity-100", transition: "transition-opacity" }, disabled: { opacity: "opacity-50", pointerEvents: "pointer-events-none" } }, colors: _radioColors.default } }, _default = radio;
  }
});

// node_modules/@material-tailwind/react/theme/components/select/selectOutlined/selectOutlinedLabel.js
var require_selectOutlinedLabel = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/select/selectOutlined/selectOutlinedLabel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var selectOutlinedLabel = { position: "-top-1.5", before: { content: "before:content[' ']", display: "before:block", boxSizing: "before:box-border", width: "before:w-2.5", height: "before:h-1.5", mt: "before:mt-[6.5px]", mr: "before:mr-1", borderRadius: "before:rounded-tl-md", pointerEvents: "before:pointer-events-none", transition: "before:transition-all", disabled: "peer-disabled:before:border-transparent" }, after: { content: "after:content[' ']", display: "after:block", flexGrow: "after:flex-grow", boxSizing: "after:box-border", width: "after:w-2.5", height: "after:h-1.5", mt: "after:mt-[6.5px]", ml: "after:ml-1", borderRadius: "after:rounded-tr-md", pointerEvents: "after:pointer-events-none", transition: "after:transition-all", disabled: "peer-disabled:after:border-transparent" } }, _default = selectOutlinedLabel;
  }
});

// node_modules/@material-tailwind/react/theme/components/select/selectOutlined/selectOutlinedColors.js
var require_selectOutlinedColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/select/selectOutlined/selectOutlinedColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var selectOutlinedColors = { "blue-gray": { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-blue-gray-500", borderTopColor: "border-t-transparent" }, withValue: { borderColor: "border-blue-gray-200", borderTopColor: "border-t-transparent" } }, gray: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-gray-900", borderTopColor: "border-t-transparent" }, withValue: { borderColor: "border-blue-gray-200", borderTopColor: "border-t-transparent" } }, brown: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-brown-500", borderTopColor: "border-t-transparent" }, withValue: { borderColor: "border-blue-gray-200", borderTopColor: "border-t-transparent" } }, "deep-orange": { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-deep-orange-500", borderTopColor: "border-t-transparent" }, withValue: { borderColor: "border-blue-gray-200", borderTopColor: "border-t-transparent" } }, orange: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-orange-500", borderTopColor: "border-t-transparent" }, withValue: { borderColor: "border-blue-gray-200", borderTopColor: "border-t-transparent" } }, amber: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-amber-500", borderTopColor: "border-t-transparent" }, withValue: { borderColor: "border-blue-gray-200", borderTopColor: "border-t-transparent" } }, yellow: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-yellow-500", borderTopColor: "border-t-transparent" }, withValue: { borderColor: "border-blue-gray-200", borderTopColor: "border-t-transparent" } }, lime: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-lime-500", borderTopColor: "border-t-transparent" }, withValue: { borderColor: "border-blue-gray-200", borderTopColor: "border-t-transparent" } }, "light-green": { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-light-green-500", borderTopColor: "border-t-transparent" }, withValue: { borderColor: "border-blue-gray-200", borderTopColor: "border-t-transparent" } }, green: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-green-500", borderTopColor: "border-t-transparent" }, withValue: { borderColor: "border-blue-gray-200", borderTopColor: "border-t-transparent" } }, teal: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-teal-500", borderTopColor: "border-t-transparent" }, withValue: { borderColor: "border-blue-gray-200", borderTopColor: "border-t-transparent" } }, cyan: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-cyan-500", borderTopColor: "border-t-transparent" }, withValue: { borderColor: "border-blue-gray-200", borderTopColor: "border-t-transparent" } }, "light-blue": { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-light-blue-500", borderTopColor: "border-t-transparent" }, withValue: { borderColor: "border-blue-gray-200", borderTopColor: "border-t-transparent" } }, blue: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-blue-500", borderTopColor: "border-t-transparent" }, withValue: { borderColor: "border-blue-gray-200", borderTopColor: "border-t-transparent" } }, indigo: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-indigo-500", borderTopColor: "border-t-transparent" }, withValue: { borderColor: "border-blue-gray-200", borderTopColor: "border-t-transparent" } }, "deep-purple": { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-deep-purple-500", borderTopColor: "border-t-transparent" }, withValue: { borderColor: "border-blue-gray-200", borderTopColor: "border-t-transparent" } }, purple: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-purple-500", borderTopColor: "border-t-transparent" }, withValue: { borderColor: "border-blue-gray-200", borderTopColor: "border-t-transparent" } }, pink: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-pink-500", borderTopColor: "border-t-transparent" }, withValue: { borderColor: "border-blue-gray-200", borderTopColor: "border-t-transparent" } }, red: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-red-500", borderTopColor: "border-t-transparent" }, withValue: { borderColor: "border-blue-gray-200", borderTopColor: "border-t-transparent" } } }, _default = selectOutlinedColors;
  }
});

// node_modules/@material-tailwind/react/theme/components/select/selectOutlined/selectOutlinedLabelColors.js
var require_selectOutlinedLabelColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/select/selectOutlined/selectOutlinedLabelColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var selectOutlinedLabelColors = { "blue-gray": { close: { color: "text-blue-gray-400", before: "before:border-transparent", after: "after:border-transparent" }, open: { color: "text-blue-gray-500", before: "before:border-blue-gray-500", after: "after:border-blue-gray-500" }, withValue: { color: "text-blue-gray-400", before: "before:border-blue-gray-200", after: "after:border-blue-gray-200" } }, gray: { close: { color: "text-blue-gray-400", before: "before:border-transparent", after: "after:border-transparent" }, open: { color: "text-gray-900", before: "before:border-gray-900", after: "after:border-gray-900" }, withValue: { color: "text-blue-gray-400", before: "before:border-blue-gray-200", after: "after:border-blue-gray-200" } }, brown: { close: { color: "text-blue-gray-400", before: "before:border-transparent", after: "after:border-transparent" }, open: { color: "text-brown-500", before: "before:border-brown-500", after: "after:border-brown-500" }, withValue: { color: "text-blue-gray-400", before: "before:border-blue-gray-200", after: "after:border-blue-gray-200" } }, "deep-orange": { close: { color: "text-blue-gray-400", before: "before:border-transparent", after: "after:border-transparent" }, open: { color: "text-deep-orange-500", before: "before:border-deep-orange-500", after: "after:border-deep-orange-500" }, withValue: { color: "text-blue-gray-400", before: "before:border-blue-gray-200", after: "after:border-blue-gray-200" } }, orange: { close: { color: "text-blue-gray-400", before: "before:border-transparent", after: "after:border-transparent" }, open: { color: "text-orange-500", before: "before:border-orange-500", after: "after:border-orange-500" }, withValue: { color: "text-blue-gray-400", before: "before:border-blue-gray-200", after: "after:border-blue-gray-200" } }, amber: { close: { color: "text-blue-gray-400", before: "before:border-transparent", after: "after:border-transparent" }, open: { color: "text-amber-500", before: "before:border-amber-500", after: "after:border-amber-500" }, withValue: { color: "text-blue-gray-400", before: "before:border-blue-gray-200", after: "after:border-blue-gray-200" } }, yellow: { close: { color: "text-blue-gray-400", before: "before:border-transparent", after: "after:border-transparent" }, open: { color: "text-yellow-500", before: "before:border-yellow-500", after: "after:border-yellow-500" }, withValue: { color: "text-blue-gray-400", before: "before:border-blue-gray-200", after: "after:border-blue-gray-200" } }, lime: { close: { color: "text-blue-gray-400", before: "before:border-transparent", after: "after:border-transparent" }, open: { color: "text-lime-500", before: "before:border-lime-500", after: "after:border-lime-500" }, withValue: { color: "text-blue-gray-400", before: "before:border-blue-gray-200", after: "after:border-blue-gray-200" } }, "light-green": { close: { color: "text-blue-gray-400", before: "before:border-transparent", after: "after:border-transparent" }, open: { color: "text-light-green-500", before: "before:border-light-green-500", after: "after:border-light-green-500" }, withValue: { color: "text-blue-gray-400", before: "before:border-blue-gray-200", after: "after:border-blue-gray-200" } }, green: { close: { color: "text-blue-gray-400", before: "before:border-transparent", after: "after:border-transparent" }, open: { color: "text-green-500", before: "before:border-green-500", after: "after:border-green-500" }, withValue: { color: "text-blue-gray-400", before: "before:border-blue-gray-200", after: "after:border-blue-gray-200" } }, teal: { close: { color: "text-blue-gray-400", before: "before:border-transparent", after: "after:border-transparent" }, open: { color: "text-teal-500", before: "before:border-teal-500", after: "after:border-teal-500" }, withValue: { color: "text-blue-gray-400", before: "before:border-blue-gray-200", after: "after:border-blue-gray-200" } }, cyan: { close: { color: "text-blue-gray-400", before: "before:border-transparent", after: "after:border-transparent" }, open: { color: "text-cyan-500", before: "before:border-cyan-500", after: "after:border-cyan-500" }, withValue: { color: "text-blue-gray-400", before: "before:border-blue-gray-200", after: "after:border-blue-gray-200" } }, "light-blue": { close: { color: "text-blue-gray-400", before: "before:border-transparent", after: "after:border-transparent" }, open: { color: "text-light-blue-500", before: "before:border-light-blue-500", after: "after:border-light-blue-500" }, withValue: { color: "text-blue-gray-400", before: "before:border-blue-gray-200", after: "after:border-blue-gray-200" } }, blue: { close: { color: "text-blue-gray-400", before: "before:border-transparent", after: "after:border-transparent" }, open: { color: "text-blue-500", before: "before:border-blue-500", after: "after:border-blue-500" }, withValue: { color: "text-blue-gray-400", before: "before:border-blue-gray-200", after: "after:border-blue-gray-200" } }, indigo: { close: { color: "text-blue-gray-400", before: "before:border-transparent", after: "after:border-transparent" }, open: { color: "text-indigo-500", before: "before:border-indigo-500", after: "after:border-indigo-500" }, withValue: { color: "text-blue-gray-400", before: "before:border-blue-gray-200", after: "after:border-blue-gray-200" } }, "deep-purple": { close: { color: "text-blue-gray-400", before: "before:border-transparent", after: "after:border-transparent" }, open: { color: "text-deep-purple-500", before: "before:border-deep-purple-500", after: "after:border-deep-purple-500" }, withValue: { color: "text-blue-gray-400", before: "before:border-blue-gray-200", after: "after:border-blue-gray-200" } }, purple: { close: { color: "text-blue-gray-400", before: "before:border-transparent", after: "after:border-transparent" }, open: { color: "text-purple-500", before: "before:border-purple-500", after: "after:border-purple-500" }, withValue: { color: "text-blue-gray-400", before: "before:border-blue-gray-200", after: "after:border-blue-gray-200" } }, pink: { close: { color: "text-blue-gray-400", before: "before:border-transparent", after: "after:border-transparent" }, open: { color: "text-pink-500", before: "before:border-pink-500", after: "after:border-pink-500" }, withValue: { color: "text-blue-gray-400", before: "before:border-blue-gray-200", after: "after:border-blue-gray-200" } }, red: { close: { color: "text-blue-gray-400", before: "before:border-transparent", after: "after:border-transparent" }, open: { color: "text-red-500", before: "before:border-red-500", after: "after:border-red-500" }, withValue: { color: "text-blue-gray-400", before: "before:border-blue-gray-200", after: "after:border-blue-gray-200" } } }, _default = selectOutlinedLabelColors;
  }
});

// node_modules/@material-tailwind/react/theme/components/select/selectOutlined/index.js
var require_selectOutlined = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/select/selectOutlined/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var _selectOutlinedLabel = _interopRequireDefault(require_selectOutlinedLabel()), _selectOutlinedColors = _interopRequireDefault(require_selectOutlinedColors()), _selectOutlinedLabelColors = _interopRequireDefault(require_selectOutlinedLabelColors());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var selectOutlined = { base: { select: {}, label: _selectOutlinedLabel.default }, sizes: { md: { container: { height: "h-10" }, select: { fontSize: "text-sm", px: "px-3", py: "py-2.5", borderRadius: "rounded-[7px]" }, label: { initial: {}, states: { close: { lineHeight: "leading-[3.75]" }, open: { lineHeight: "leading-tight" }, withValue: { lineHeight: "leading-tight" } } } }, lg: { container: { height: "h-11" }, select: { fontSize: "text-sm", px: "px-3", py: "py-3", borderRadius: "rounded-[7px]" }, label: { initial: {}, states: { close: { lineHeight: "leading-[4.1]" }, open: { lineHeight: "leading-tight" }, withValue: { lineHeight: "leading-tight" } } } } }, colors: { select: _selectOutlinedColors.default, label: _selectOutlinedLabelColors.default }, states: { close: { select: { borderWidth: "border" }, label: { fontSize: "text-sm", disabled: "peer-disabled:text-blue-gray-400", before: { bt: "before:border-t-transparent", bl: "before:border-l-transparent" }, after: { bt: "after:border-t-transparent", br: "after:border-r-transparent" } } }, open: { select: { borderWidth: "border-2", borderColor: "border-t-transparent" }, label: { fontSize: "text-[11px]", disabled: "peer-disabled:text-transparent", before: { bt: "before:border-t-2", bl: "before:border-l-2" }, after: { bt: "after:border-t-2", br: "after:border-r-2" } } }, withValue: { select: { borderWidth: "border", borderColor: "border-t-transparent" }, label: { fontSize: "text-[11px]", disabled: "peer-disabled:text-transparent", before: { bt: "before:border-t", bl: "before:border-l" }, after: { bt: "after:border-t", br: "after:border-r" } } } }, error: { select: { initial: {}, states: { close: { borderColor: "border-red-500" }, open: { borderColor: "border-red-500", borderTopColor: "border-t-transparent" }, withValue: { borderColor: "border-red-500", borderTopColor: "border-t-transparent" } } }, label: { initial: {}, states: { close: { color: "text-red-500", before: "before:border-red-500", after: "after:border-red-500" }, open: { color: "text-red-500", before: "before:border-red-500", after: "after:border-red-500" }, withValue: { color: "text-red-500", before: "before:border-red-500", after: "after:border-red-500" } } } }, success: { select: { initial: {}, states: { close: { borderColor: "border-green-500" }, open: { borderColor: "border-green-500", borderTopColor: "border-t-transparent" }, withValue: { borderColor: "border-green-500", borderTopColor: "border-t-transparent" } } }, label: { initial: {}, states: { close: { color: "text-green-500", before: "before:border-green-500", after: "after:border-green-500" }, open: { color: "text-green-500", before: "before:border-green-500", after: "after:border-green-500" }, withValue: { color: "text-green-500", before: "before:border-green-500", after: "after:border-green-500" } } } } }, _default = selectOutlined;
  }
});

// node_modules/@material-tailwind/react/theme/components/select/selectStandard/selectStandardLabel.js
var require_selectStandardLabel = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/select/selectStandard/selectStandardLabel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var selectStandardLabel = { position: "-top-1.5", after: { content: "after:content[' ']", display: "after:block", width: "after:w-full", position: "after:absolute", bottom: "after:-bottom-1.5", left: "left-0", borderWidth: "after:border-b-2", transition: "after:transition-transform after:duration-300" } }, _default = selectStandardLabel;
  }
});

// node_modules/@material-tailwind/react/theme/components/select/selectStandard/selectStandardColors.js
var require_selectStandardColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/select/selectStandard/selectStandardColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var selectStandardColors = { "blue-gray": { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-blue-gray-500" }, withValue: { borderColor: "border-blue-gray-200" } }, gray: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-gray-900" }, withValue: { borderColor: "border-blue-gray-200" } }, brown: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-brown-500" }, withValue: { borderColor: "border-blue-gray-200" } }, "deep-orange": { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-deep-orange-500" }, withValue: { borderColor: "border-blue-gray-200" } }, orange: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-orange-500" }, withValue: { borderColor: "border-blue-gray-200" } }, amber: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-amber-500" }, withValue: { borderColor: "border-blue-gray-200" } }, yellow: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-yellow-500" }, withValue: { borderColor: "border-blue-gray-200" } }, lime: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-lime-500" }, withValue: { borderColor: "border-blue-gray-200" } }, "light-green": { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-light-green-500" }, withValue: { borderColor: "border-blue-gray-200" } }, green: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-green-500" }, withValue: { borderColor: "border-blue-gray-200" } }, teal: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-teal-500" }, withValue: { borderColor: "border-blue-gray-200" } }, cyan: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-cyan-500" }, withValue: { borderColor: "border-blue-gray-200" } }, "light-blue": { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-light-blue-500" }, withValue: { borderColor: "border-blue-gray-200" } }, blue: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-blue-500" }, withValue: { borderColor: "border-blue-gray-200" } }, indigo: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-indigo-500" }, withValue: { borderColor: "border-blue-gray-200" } }, "deep-purple": { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-deep-purple-500" }, withValue: { borderColor: "border-blue-gray-200" } }, purple: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-purple-500" }, withValue: { borderColor: "border-blue-gray-200" } }, pink: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-pink-500" }, withValue: { borderColor: "border-blue-gray-200" } }, red: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-red-500" }, withValue: { borderColor: "border-blue-gray-200" } } }, _default = selectStandardColors;
  }
});

// node_modules/@material-tailwind/react/theme/components/select/selectStandard/selectStandardLabelColors.js
var require_selectStandardLabelColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/select/selectStandard/selectStandardLabelColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var selectStandardLabelColors = { "blue-gray": { close: { color: "text-blue-gray-500", after: "after:border-blue-gray-500" }, open: { color: "text-blue-gray-500", after: "after:border-blue-gray-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-blue-gray-50" } }, gray: { close: { color: "text-blue-gray-500", after: "after:border-gray-500" }, open: { color: "text-gray-900", after: "after:border-gray-900" }, withValue: { color: "text-blue-gray-500", after: "after:border-gray-500" } }, brown: { close: { color: "text-blue-gray-500", after: "after:border-brown-500" }, open: { color: "text-brown-500", after: "after:border-brown-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-brown-500" } }, "deep-orange": { close: { color: "text-blue-gray-500", after: "after:border-deep-orange-500" }, open: { color: "text-deep-orange-500", after: "after:border-deep-orange-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-deep-orange-500" } }, orange: { close: { color: "text-blue-gray-500", after: "after:border-orange-500" }, open: { color: "text-orange-500", after: "after:border-orange-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-orange-500" } }, amber: { close: { color: "text-blue-gray-500", after: "after:border-amber-500" }, open: { color: "text-amber-500", after: "after:border-amber-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-amber-500" } }, yellow: { close: { color: "text-blue-gray-500", after: "after:border-yellow-500" }, open: { color: "text-yellow-500", after: "after:border-yellow-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-yellow-500" } }, lime: { close: { color: "text-blue-gray-500", after: "after:border-lime-500" }, open: { color: "text-lime-500", after: "after:border-lime-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-lime-500" } }, "light-green": { close: { color: "text-blue-gray-500", after: "after:border-light-green-500" }, open: { color: "text-light-green-500", after: "after:border-light-green-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-light-green-500" } }, green: { close: { color: "text-blue-gray-500", after: "after:border-green-500" }, open: { color: "text-green-500", after: "after:border-green-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-green-500" } }, teal: { close: { color: "text-blue-gray-500", after: "after:border-teal-500" }, open: { color: "text-teal-500", after: "after:border-teal-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-teal-500" } }, cyan: { close: { color: "text-blue-gray-500", after: "after:border-cyan-500" }, open: { color: "text-cyan-500", after: "after:border-cyan-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-cyan-500" } }, "light-blue": { close: { color: "text-blue-gray-500", after: "after:border-light-blue-500" }, open: { color: "text-light-blue-500", after: "after:border-light-blue-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-light-blue-500" } }, blue: { close: { color: "text-blue-gray-500", after: "after:border-blue-500" }, open: { color: "text-blue-500", after: "after:border-blue-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-blue-500" } }, indigo: { close: { color: "text-blue-gray-500", after: "after:border-indigo-500" }, open: { color: "text-indigo-500", after: "after:border-indigo-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-indigo-500" } }, "deep-purple": { close: { color: "text-blue-gray-500", after: "after:border-deep-purple-500" }, open: { color: "text-deep-purple-500", after: "after:border-deep-purple-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-deep-purple-500" } }, purple: { close: { color: "text-blue-gray-500", after: "after:border-purple-500" }, open: { color: "text-purple-500", after: "after:border-purple-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-purple-500" } }, pink: { close: { color: "text-blue-gray-500", after: "after:border-pink-500" }, open: { color: "text-pink-500", after: "after:border-pink-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-pink-500" } }, red: { close: { color: "text-blue-gray-500", after: "after:border-red-500" }, open: { color: "text-red-500", after: "after:border-red-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-red-500" } } }, _default = selectStandardLabelColors;
  }
});

// node_modules/@material-tailwind/react/theme/components/select/selectStandard/index.js
var require_selectStandard = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/select/selectStandard/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var _selectStandardLabel = _interopRequireDefault(require_selectStandardLabel()), _selectStandardColors = _interopRequireDefault(require_selectStandardColors()), _selectStandardLabelColors = _interopRequireDefault(require_selectStandardLabelColors());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var selectStandard = { base: { select: {}, label: _selectStandardLabel.default }, sizes: { md: { container: { height: "h-11" }, select: { fontSize: "text-sm", pt: "pt-4", pb: "pb-1.5" }, label: { initial: {}, states: { close: { lineHeight: "leading-[4.25]" }, open: { lineHeight: "leading-tight" }, withValue: { lineHeight: "leading-tight" } } } }, lg: { container: { height: "h-12" }, select: { fontSize: "text-sm", px: "px-px", pt: "pt-5", pb: "pb-2" }, label: { initial: {}, states: { close: { lineHeight: "leading-[4.875]" }, open: { lineHeight: "leading-tight" }, withValue: { lineHeight: "leading-tight" } } } } }, colors: { select: _selectStandardColors.default, label: _selectStandardLabelColors.default }, states: { close: { select: { borderWidth: "border-b" }, label: { fontSize: "text-sm", disabled: "peer-disabled:text-blue-gray-400", after: { transform: "after:scale-x-0" } } }, open: { select: { borderWidth: "border-b" }, label: { fontSize: "text-[11px]", disabled: "peer-disabled:text-transparent", after: { transform: "after:scale-x-100" } } }, withValue: { select: { borderWidth: "border-b" }, label: { fontSize: "text-[11px]", disabled: "peer-disabled:text-transparent", after: { transform: "after:scale-x-0" } } } }, error: { select: { initial: {}, states: { close: { borderColor: "border-red-500" }, open: { borderColor: "border-red-500" }, withValue: { borderColor: "border-red-500" } } }, label: { initial: {}, states: { close: { color: "text-red-500", after: "after:border-red-500" }, open: { color: "text-red-500", after: "after:border-red-500" }, withValue: { color: "text-red-500", after: "after:border-red-500" } } } }, success: { select: { initial: {}, states: { close: { borderColor: "border-green-500" }, open: { borderColor: "border-green-500" }, withValue: { borderColor: "border-green-500" } } }, label: { initial: {}, states: { close: { color: "text-green-500", after: "after:border-green-500" }, open: { color: "text-green-500", after: "after:border-green-500" }, withValue: { color: "text-green-500", after: "after:border-green-500" } } } } }, _default = selectStandard;
  }
});

// node_modules/@material-tailwind/react/theme/components/select/selectStatic/selectStaticLabel.js
var require_selectStaticLabel = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/select/selectStatic/selectStaticLabel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var selectStaticLabel = { position: "-top-2.5", after: { content: "after:content[' ']", display: "after:block", width: "after:w-full", position: "after:absolute", bottom: "after:-bottom-2.5", left: "left-0", borderWidth: "after:border-b-2", transition: "after:transition-transform after:duration-300" } }, _default = selectStaticLabel;
  }
});

// node_modules/@material-tailwind/react/theme/components/select/selectStatic/selectStaticColors.js
var require_selectStaticColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/select/selectStatic/selectStaticColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var selectStaticColors = { "blue-gray": { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-blue-gray-500" }, withValue: { borderColor: "border-blue-gray-200" } }, gray: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-gray-900" }, withValue: { borderColor: "border-blue-gray-200" } }, brown: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-brown-500" }, withValue: { borderColor: "border-blue-gray-200" } }, "deep-orange": { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-deep-orange-500" }, withValue: { borderColor: "border-blue-gray-200" } }, orange: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-orange-500" }, withValue: { borderColor: "border-blue-gray-200" } }, amber: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-amber-500" }, withValue: { borderColor: "border-blue-gray-200" } }, yellow: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-yellow-500" }, withValue: { borderColor: "border-blue-gray-200" } }, lime: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-lime-500" }, withValue: { borderColor: "border-blue-gray-200" } }, "light-green": { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-light-green-500" }, withValue: { borderColor: "border-blue-gray-200" } }, green: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-green-500" }, withValue: { borderColor: "border-blue-gray-200" } }, teal: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-teal-500" }, withValue: { borderColor: "border-blue-gray-200" } }, cyan: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-cyan-500" }, withValue: { borderColor: "border-blue-gray-200" } }, "light-blue": { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-light-blue-500" }, withValue: { borderColor: "border-blue-gray-200" } }, blue: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-blue-500" }, withValue: { borderColor: "border-blue-gray-200" } }, indigo: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-indigo-500" }, withValue: { borderColor: "border-blue-gray-200" } }, "deep-purple": { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-deep-purple-500" }, withValue: { borderColor: "border-blue-gray-200" } }, purple: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-purple-500" }, withValue: { borderColor: "border-blue-gray-200" } }, pink: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-pink-500" }, withValue: { borderColor: "border-blue-gray-200" } }, red: { close: { borderColor: "border-blue-gray-200" }, open: { borderColor: "border-red-500" }, withValue: { borderColor: "border-blue-gray-200" } } }, _default = selectStaticColors;
  }
});

// node_modules/@material-tailwind/react/theme/components/select/selectStatic/selectStaticLabelColors.js
var require_selectStaticLabelColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/select/selectStatic/selectStaticLabelColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var selectStaticLabelColors = { "blue-gray": { close: { color: "text-blue-gray-500", after: "after:border-blue-gray-500" }, open: { color: "text-blue-gray-500", after: "after:border-blue-gray-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-blue-gray-50" } }, gray: { close: { color: "text-blue-gray-500", after: "after:border-gray-500" }, open: { color: "text-gray-900", after: "after:border-gray-900" }, withValue: { color: "text-blue-gray-500", after: "after:border-gray-500" } }, brown: { close: { color: "text-blue-gray-500", after: "after:border-brown-500" }, open: { color: "text-brown-500", after: "after:border-brown-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-brown-500" } }, "deep-orange": { close: { color: "text-blue-gray-500", after: "after:border-deep-orange-500" }, open: { color: "text-deep-orange-500", after: "after:border-deep-orange-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-deep-orange-500" } }, orange: { close: { color: "text-blue-gray-500", after: "after:border-orange-500" }, open: { color: "text-orange-500", after: "after:border-orange-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-orange-500" } }, amber: { close: { color: "text-blue-gray-500", after: "after:border-amber-500" }, open: { color: "text-amber-500", after: "after:border-amber-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-amber-500" } }, yellow: { close: { color: "text-blue-gray-500", after: "after:border-yellow-500" }, open: { color: "text-yellow-500", after: "after:border-yellow-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-yellow-500" } }, lime: { close: { color: "text-blue-gray-500", after: "after:border-lime-500" }, open: { color: "text-lime-500", after: "after:border-lime-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-lime-500" } }, "light-green": { close: { color: "text-blue-gray-500", after: "after:border-light-green-500" }, open: { color: "text-light-green-500", after: "after:border-light-green-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-light-green-500" } }, green: { close: { color: "text-blue-gray-500", after: "after:border-green-500" }, open: { color: "text-green-500", after: "after:border-green-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-green-500" } }, teal: { close: { color: "text-blue-gray-500", after: "after:border-teal-500" }, open: { color: "text-teal-500", after: "after:border-teal-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-teal-500" } }, cyan: { close: { color: "text-blue-gray-500", after: "after:border-cyan-500" }, open: { color: "text-cyan-500", after: "after:border-cyan-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-cyan-500" } }, "light-blue": { close: { color: "text-blue-gray-500", after: "after:border-light-blue-500" }, open: { color: "text-light-blue-500", after: "after:border-light-blue-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-light-blue-500" } }, blue: { close: { color: "text-blue-gray-500", after: "after:border-blue-500" }, open: { color: "text-blue-500", after: "after:border-blue-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-blue-500" } }, indigo: { close: { color: "text-blue-gray-500", after: "after:border-indigo-500" }, open: { color: "text-indigo-500", after: "after:border-indigo-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-indigo-500" } }, "deep-purple": { close: { color: "text-blue-gray-500", after: "after:border-deep-purple-500" }, open: { color: "text-deep-purple-500", after: "after:border-deep-purple-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-deep-purple-500" } }, purple: { close: { color: "text-blue-gray-500", after: "after:border-purple-500" }, open: { color: "text-purple-500", after: "after:border-purple-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-purple-500" } }, pink: { close: { color: "text-blue-gray-500", after: "after:border-pink-500" }, open: { color: "text-pink-500", after: "after:border-pink-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-pink-500" } }, red: { close: { color: "text-blue-gray-500", after: "after:border-red-500" }, open: { color: "text-red-500", after: "after:border-red-500" }, withValue: { color: "text-blue-gray-500", after: "after:border-red-500" } } }, _default = selectStaticLabelColors;
  }
});

// node_modules/@material-tailwind/react/theme/components/select/selectStatic/index.js
var require_selectStatic = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/select/selectStatic/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var _selectStaticLabel = _interopRequireDefault(require_selectStaticLabel()), _selectStaticColors = _interopRequireDefault(require_selectStaticColors()), _selectStaticLabelColors = _interopRequireDefault(require_selectStaticLabelColors());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var selectStatic = { base: { select: {}, label: _selectStaticLabel.default }, sizes: { md: { container: { height: "h-11" }, select: { fontSize: "text-sm", pt: "pt-4", pb: "pb-1.5" }, label: { initial: {}, states: { close: { lineHeight: "leading-tight" }, open: { lineHeight: "leading-tight" }, withValue: { lineHeight: "leading-tight" } } } }, lg: { container: { height: "h-12" }, select: { fontSize: "text-sm", px: "px-px", pt: "pt-5", pb: "pb-2" }, label: { initial: {}, states: { close: { lineHeight: "leading-tight" }, open: { lineHeight: "leading-tight" }, withValue: { lineHeight: "leading-tight" } } } } }, colors: { select: _selectStaticColors.default, label: _selectStaticLabelColors.default }, states: { close: { select: { borderWidth: "border-b" }, label: { fontSize: "text-sm", disabled: "peer-disabled:text-blue-gray-400", after: { transform: "after:scale-x-0" } } }, open: { select: { borderWidth: "border-b" }, label: { fontSize: "text-sm", disabled: "peer-disabled:text-transparent", after: { transform: "after:scale-x-100" } } }, withValue: { select: { borderWidth: "border-b" }, label: { fontSize: "text-sm", disabled: "peer-disabled:text-transparent", after: { transform: "after:scale-x-0" } } } }, error: { select: { initial: {}, states: { close: { borderColor: "border-red-500" }, open: { borderColor: "border-red-500" }, withValue: { borderColor: "border-red-500" } } }, label: { initial: {}, states: { close: { color: "text-red-500", after: "after:border-red-500" }, open: { color: "text-red-500", after: "after:border-red-500" }, withValue: { color: "text-red-500", after: "after:border-red-500" } } } }, success: { select: { initial: {}, states: { close: { borderColor: "border-green-500" }, open: { borderColor: "border-green-500" }, withValue: { borderColor: "border-green-500" } } }, label: { initial: {}, states: { close: { color: "text-green-500", after: "after:border-green-500" }, open: { color: "text-green-500", after: "after:border-green-500" }, withValue: { color: "text-green-500", after: "after:border-green-500" } } } } }, _default = selectStatic;
  }
});

// node_modules/@material-tailwind/react/types/components/select.js
var require_select = __commonJS({
  "node_modules/@material-tailwind/react/types/components/select.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesVariant: function() {
      return propTypesVariant;
    }, propTypesSize: function() {
      return propTypesSize;
    }, propTypesColor: function() {
      return propTypesColor;
    }, propTypesLabel: function() {
      return propTypesLabel;
    }, propTypesError: function() {
      return propTypesError;
    }, propTypesSuccess: function() {
      return propTypesSuccess;
    }, propTypesArrow: function() {
      return propTypesArrow;
    }, propTypesValue: function() {
      return propTypesValue;
    }, propTypesOnChange: function() {
      return propTypesOnChange;
    }, propTypesSelected: function() {
      return propTypesSelected;
    }, propTypesOffset: function() {
      return propTypesOffset;
    }, propTypesDismiss: function() {
      return propTypesDismiss;
    }, propTypesAnimate: function() {
      return propTypesAnimate;
    }, propTypesAutoHeight: function() {
      return propTypesAutoHeight;
    }, propTypesLockScroll: function() {
      return propTypesLockScroll;
    }, propTypesLabelProps: function() {
      return propTypesLabelProps;
    }, propTypesMenuProps: function() {
      return propTypesMenuProps;
    }, propTypesIndex: function() {
      return propTypesIndex;
    }, propTypesDisabled: function() {
      return propTypesDisabled;
    }, propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesName: function() {
      return propTypesName;
    }, propTypesChildren: function() {
      return propTypesChildren;
    }, propTypesContainerProps: function() {
      return propTypesContainerProps;
    }, propTypesContextValue: function() {
      return propTypesContextValue;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var propTypesVariant = ["standard", "outlined", "static"], propTypesSize = ["md", "lg"], propTypesColor = _generic.propTypesColors, propTypesLabel = _propTypes.default.string, propTypesError = _propTypes.default.bool, propTypesSuccess = _propTypes.default.bool, propTypesArrow = _propTypes.default.node, propTypesValue = _propTypes.default.string, propTypesOnChange = _propTypes.default.func, propTypesSelected = _propTypes.default.func, propTypesOffset = _generic.propTypesOffsetType, propTypesDismiss = _generic.propTypesDismissType, propTypesAnimate = _generic.propTypesAnimation, propTypesAutoHeight = _propTypes.default.bool, propTypesLockScroll = _propTypes.default.bool, propTypesLabelProps = _propTypes.default.instanceOf(Object), propTypesMenuProps = _propTypes.default.instanceOf(Object), propTypesIndex = _propTypes.default.number, propTypesDisabled = _propTypes.default.bool, propTypesClassName = _propTypes.default.string, propTypesName = _propTypes.default.string, propTypesChildren = _propTypes.default.node.isRequired, propTypesContainerProps = _propTypes.default.instanceOf(Object), propTypesContextValue = _propTypes.default.shape({ selectedIndex: _propTypes.default.number.isRequired, setSelectedIndex: _propTypes.default.func.isRequired, activeIndex: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.instanceOf(null)]), setActiveIndex: _propTypes.default.func.isRequired, listRef: _propTypes.default.instanceOf(Object).isRequired, setOpen: _propTypes.default.func.isRequired, onChange: _propTypes.default.func.isRequired, getItemProps: _propTypes.default.func.isRequired, dataRef: _propTypes.default.instanceOf(Object).isRequired }).isRequired;
  }
});

// node_modules/@material-tailwind/react/theme/components/select/index.js
var require_select2 = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/select/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { select: function() {
      return select;
    }, default: function() {
      return _default;
    } });
    var _selectOutlined = _interopRequireDefault(require_selectOutlined()), _selectStandard = _interopRequireDefault(require_selectStandard()), _selectStatic = _interopRequireDefault(require_selectStatic()), _select = require_select();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var select = { defaultProps: { variant: "outlined", color: "gray", size: "md", label: "", error: !1, success: !1, arrow: void 0, value: void 0, onChange: void 0, selected: void 0, offset: 5, dismiss: {}, animate: { unmount: {}, mount: {} }, autoHeight: !1, lockScroll: !1, labelProps: {}, menuProps: {}, className: "", disabled: !1, containerProps: void 0 }, valid: { variants: _select.propTypesVariant, sizes: _select.propTypesSize, colors: _select.propTypesColor }, styles: { base: { container: { position: "relative", width: "w-full", minWidth: "min-w-[200px]" }, select: { peer: "peer", width: "w-full", height: "h-full", bg: "bg-transparent", color: "text-blue-gray-700", fontFamily: "font-sans", fontWeight: "font-normal", textAlign: "text-left", outline: "outline outline-0 focus:outline-0", disabled: "disabled:bg-blue-gray-50 disabled:border-0", transition: "transition-all" }, arrow: { initial: { display: "grid", placeItems: "place-items-center", position: "absolute", top: "top-2/4", right: "right-2", pt: "pt-px", width: "w-5", height: "h-5", color: "text-blue-gray-400", transform: "rotate-0 -translate-y-2/4", transition: "transition-all" }, active: { transform: "rotate-180", mt: "mt-px" } }, label: { display: "flex", width: "w-full", height: "h-full", userSelect: "select-none", pointerEvents: "pointer-events-none", position: "absolute", left: "left-0", fontWeight: "font-normal", transition: "transition-all" }, menu: { width: "w-full", maxHeight: "max-h-96", bg: "bg-white", p: "p-3", border: "border border-blue-gray-50", borderRadius: "rounded-md", boxShadow: "shadow-lg shadow-blue-gray-500/10", fontFamily: "font-sans", fontSize: "text-sm", fontWeight: "font-normal", color: "text-blue-gray-500", overflow: "overflow-auto", outline: "focus:outline-none" }, option: { initial: { pt: "pt-[9px]", pb: "pb-2", px: "px-3", borderRadius: "rounded-md", lightHeight: "leading-tight", cursor: "cursor-pointer", userSelect: "select-none", background: "hover:bg-blue-gray-50 focus:bg-blue-gray-50", opacity: "hover:bg-opacity-80 focus:bg-opacity-80", color: "hover:text-blue-gray-900 focus:text-blue-gray-900", outline: "outline outline-0", transition: "transition-all" }, active: { bg: "bg-blue-gray-50 bg-opacity-80", color: "text-blue-gray-900" }, disabled: { opacity: "opacity-50", cursor: "cursor-not-allowed", userSelect: "select-none", pointerEvents: "pointer-events-none" } } }, variants: { outlined: _selectOutlined.default, standard: _selectStandard.default, static: _selectStatic.default } } }, _default = select;
  }
});

// node_modules/@material-tailwind/react/theme/components/switch/switchColors.js
var require_switchColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/switch/switchColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var switchColors = { "blue-gray": { input: "checked:bg-blue-gray-500", circle: "peer-checked:border-blue-gray-500", before: "peer-checked:before:bg-blue-gray-500" }, gray: { input: "checked:bg-gray-900", circle: "peer-checked:border-gray-900", before: "peer-checked:before:bg-gray-900" }, brown: { input: "checked:bg-brown-500", circle: "peer-checked:border-brown-500", before: "peer-checked:before:bg-brown-500" }, "deep-orange": { input: "checked:bg-deep-orange-500", circle: "peer-checked:border-deep-orange-500", before: "peer-checked:before:bg-deep-orange-500" }, orange: { input: "checked:bg-orange-500", circle: "peer-checked:border-orange-500", before: "peer-checked:before:bg-orange-500" }, amber: { input: "checked:bg-amber-500", circle: "peer-checked:border-amber-500", before: "peer-checked:before:bg-amber-500" }, yellow: { input: "checked:bg-yellow-500", circle: "peer-checked:border-yellow-500", before: "peer-checked:before:bg-yellow-500" }, lime: { input: "checked:bg-lime-500", circle: "peer-checked:border-lime-500", before: "peer-checked:before:bg-lime-500" }, "light-green": { input: "checked:bg-light-green-500", circle: "peer-checked:border-light-green-500", before: "peer-checked:before:bg-light-green-500" }, green: { input: "checked:bg-green-500", circle: "peer-checked:border-green-500", before: "peer-checked:before:bg-green-500" }, teal: { input: "checked:bg-teal-500", circle: "peer-checked:border-teal-500", before: "peer-checked:before:bg-teal-500" }, cyan: { input: "checked:bg-cyan-500", circle: "peer-checked:border-cyan-500", before: "peer-checked:before:bg-cyan-500" }, "light-blue": { input: "checked:bg-light-blue-500", circle: "peer-checked:border-light-blue-500", before: "peer-checked:before:bg-light-blue-500" }, blue: { input: "checked:bg-blue-500", circle: "peer-checked:border-blue-500", before: "peer-checked:before:bg-blue-500" }, indigo: { input: "checked:bg-indigo-500", circle: "peer-checked:border-indigo-500", before: "peer-checked:before:bg-indigo-500" }, "deep-purple": { input: "checked:bg-deep-purple-500", circle: "peer-checked:border-deep-purple-500", before: "peer-checked:before:bg-deep-purple-500" }, purple: { input: "checked:bg-purple-500", circle: "peer-checked:border-purple-500", before: "peer-checked:before:bg-purple-500" }, pink: { input: "checked:bg-pink-500", circle: "peer-checked:border-pink-500", before: "peer-checked:before:bg-pink-500" }, red: { input: "checked:bg-red-500", circle: "peer-checked:border-red-500", before: "peer-checked:before:bg-red-500" } }, _default = switchColors;
  }
});

// node_modules/@material-tailwind/react/theme/components/switch/index.js
var require_switch = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/switch/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { switchButton: function() {
      return switchButton;
    }, default: function() {
      return _default;
    } });
    var _switchColors = _interopRequireDefault(require_switchColors()), _checkbox = require_checkbox();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var switchButton = { defaultProps: { color: "gray", label: "", ripple: !0, className: "", disabled: !1, containerProps: void 0, labelProps: void 0, circleProps: void 0 }, valid: { colors: _checkbox.propTypesColor }, styles: { base: { root: { display: "inline-flex", alignItems: "items-center" }, container: { position: "relative", display: "inline-block", width: "w-8", height: "h-4", cursor: "cursor-pointer", borderRadius: "rounded-full" }, input: { peer: "peer", appearance: "appearance-none", width: "w-8", height: "h-4", position: "absolute", background: "bg-blue-gray-100", borderRadius: "rounded-full", cursor: "cursor-pointer", transition: "transition-colors duration-300" }, circle: { bg: "bg-white", width: "w-5", height: "h-5", borderWidth: "border", borderColor: "border-blue-gray-100", borderRadius: "rounded-full", boxShadow: "shadow-md", position: "absolute", top: "top-2/4", left: "-left-1", transform: "-translate-y-2/4 peer-checked:translate-x-full", transition: "transition-all duration-300", cursor: "cursor-pointer", before: { content: "before:content['']", display: "before:block", bg: "before:bg-blue-gray-500", width: "before:w-10", height: "before:h-10", borderRadius: "before:rounded-full", position: "before:absolute", top: "before:top-2/4", left: "before:left-2/4", transform: "before:-translate-y-2/4 before:-translate-x-2/4", transition: "before:transition-opacity", opacity: "before:opacity-0 hover:before:opacity-10" } }, ripple: { display: "inline-block", top: "top-2/4", left: "left-2/4", transform: "-translate-x-2/4 -translate-y-2/4", p: "p-5", borderRadius: "rounded-full" }, label: { color: "text-gray-700", fontWeight: "font-light", userSelect: "select-none", cursor: "cursor-pointer", mt: "mt-px", ml: "ml-3", mb: "mb-0" }, disabled: { opacity: "opacity-50", pointerEvents: "pointer-events-none" } }, colors: _switchColors.default } }, _default = switchButton;
  }
});

// node_modules/@material-tailwind/react/theme/components/tabs/tab.js
var require_tab = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/tabs/tab.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { tab: function() {
      return tab;
    }, default: function() {
      return _default;
    } });
    var tab = { defaultProps: { className: "", activeClassName: "", disabled: !1 }, styles: { base: { tab: { initial: { display: "flex", alignItems: "items-center", justifyContent: "justify-center", textAlign: "text-center", width: "w-full", height: "h-full", position: "relative", bg: "bg-transparent", py: "py-1", px: "px-2", color: "text-blue-gray-900", fontSmoothing: "antialiased", fontFamily: "font-sans", fontSize: "text-base", fontWeight: "font-normal", lineHeight: "leading-relaxed", userSelect: "select-none", cursor: "cursor-pointer" }, disabled: { opacity: "opacity-50", cursor: "cursor-not-allowed", pointerEvents: "pointer-events-none", userSelect: "select-none" } }, indicator: { position: "absolute", inset: "inset-0", zIndex: "z-10", height: "h-full", bg: "bg-white", borderRadius: "rounded-md", boxShadow: "shadow" } } } }, _default = tab;
  }
});

// node_modules/@material-tailwind/react/theme/components/tabs/index.js
var require_tabs = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/tabs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { tabs: function() {
      return tabs;
    }, default: function() {
      return _default;
    } });
    var tabs = { defaultProps: { className: "", orientation: "horizontal" }, styles: { base: { overflow: "overflow-hidden" }, horizontal: { display: "block" }, vertical: { display: "flex" } } }, _default = tabs;
  }
});

// node_modules/@material-tailwind/react/theme/components/tabs/tabsBody.js
var require_tabsBody = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/tabs/tabsBody.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { tabsBody: function() {
      return tabsBody;
    }, default: function() {
      return _default;
    } });
    var tabsBody = { defaultProps: { animate: { unmount: {}, mount: {} }, className: "" }, styles: { base: { display: "block", width: "w-full", position: "relative", bg: "bg-transparent", overflow: "overflow-hidden" } } }, _default = tabsBody;
  }
});

// node_modules/@material-tailwind/react/theme/components/tabs/tabsHeader.js
var require_tabsHeader = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/tabs/tabsHeader.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { tabsHeader: function() {
      return tabsHeader;
    }, default: function() {
      return _default;
    } });
    var tabsHeader = { defaultProps: { className: "" }, styles: { base: { display: "flex", position: "relative", bg: "bg-blue-gray-50", bgOpacity: "bg-opacity-60", borderRadius: "rounded-lg", p: "p-1" }, horizontal: { flexDirection: "flex-row" }, vertical: { flexDirection: "flex-col" } } }, _default = tabsHeader;
  }
});

// node_modules/@material-tailwind/react/theme/components/tabs/tabPanel.js
var require_tabPanel = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/tabs/tabPanel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { tabPanel: function() {
      return tabPanel;
    }, default: function() {
      return _default;
    } });
    var tabPanel = { defaultProps: { className: "" }, styles: { base: { width: "w-full", height: "h-max", color: "text-gray-700", p: "p-4", fontSmoothing: "antialiased", fontFamily: "font-sans", fontSize: "text-base", fontWeight: "font-light", lineHeight: "leading-relaxed" } } }, _default = tabPanel;
  }
});

// node_modules/@material-tailwind/react/theme/components/textarea/textareaOutlined/textareaOutlinedLabel.js
var require_textareaOutlinedLabel = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/textarea/textareaOutlined/textareaOutlinedLabel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var textareaOutlinedLabel = { position: "-top-1.5", fontSize: "peer-placeholder-shown:text-sm", floated: { fontSize: "text-[11px] peer-focus:text-[11px]" }, before: { content: "before:content[' ']", display: "before:block", boxSizing: "before:box-border", width: "before:w-2.5", height: "before:h-1.5", mt: "before:mt-[6.5px]", mr: "before:mr-1", borderColor: "peer-placeholder-shown:before:border-transparent", borderRadius: "before:rounded-tl-md", floated: { bt: "before:border-t peer-focus:before:border-t-2", bl: "before:border-l peer-focus:before:border-l-2" }, pointerEvents: "before:pointer-events-none", transition: "before:transition-all", disabled: "peer-disabled:before:border-transparent" }, after: { content: "after:content[' ']", display: "after:block", flexGrow: "after:flex-grow", boxSizing: "after:box-border", width: "after:w-2.5", height: "after:h-1.5", mt: "after:mt-[6.5px]", ml: "after:ml-1", borderColor: "peer-placeholder-shown:after:border-transparent", borderRadius: "after:rounded-tr-md", floated: { bt: "after:border-t peer-focus:after:border-t-2", br: "after:border-r peer-focus:after:border-r-2" }, pointerEvents: "after:pointer-events-none", transition: "after:transition-all", disabled: "peer-disabled:after:border-transparent" } }, _default = textareaOutlinedLabel;
  }
});

// node_modules/@material-tailwind/react/theme/components/textarea/textareaOutlined/textareaOutlinedColors.js
var require_textareaOutlinedColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/textarea/textareaOutlined/textareaOutlinedColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var textareaOutlinedColors = { "blue-gray": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-blue-gray-500" }, gray: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-gray-900" }, brown: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-brown-500" }, "deep-orange": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-deep-orange-500" }, orange: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-orange-500" }, amber: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-amber-500" }, yellow: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-yellow-500" }, lime: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-lime-500" }, "light-green": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-light-green-500" }, green: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-green-500" }, teal: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-teal-500" }, cyan: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-cyan-500" }, "light-blue": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-light-blue-500" }, blue: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-blue-500" }, indigo: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-indigo-500" }, "deep-purple": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-deep-purple-500" }, purple: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-purple-500" }, pink: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-pink-500" }, red: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-red-500" } }, _default = textareaOutlinedColors;
  }
});

// node_modules/@material-tailwind/react/theme/components/textarea/textareaOutlined/textareaOutlinedLabelColors.js
var require_textareaOutlinedLabelColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/textarea/textareaOutlined/textareaOutlinedLabelColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var textareaOutlinedLabelColors = { "blue-gray": { color: "text-blue-gray-400 peer-focus:text-blue-gray-500", before: "before:border-blue-gray-200 peer-focus:before:!border-blue-gray-500", after: "after:border-blue-gray-200 peer-focus:after:!border-blue-gray-500" }, gray: { color: "text-blue-gray-400 peer-focus:text-gray-900", before: "before:border-blue-gray-200 peer-focus:before:!border-gray-900", after: "after:border-blue-gray-200 peer-focus:after:!border-gray-900" }, brown: { color: "text-blue-gray-400 peer-focus:text-brown-500", before: "before:border-blue-gray-200 peer-focus:before:!border-brown-500", after: "after:border-blue-gray-200 peer-focus:after:!border-brown-500" }, "deep-orange": { color: "text-blue-gray-400 peer-focus:text-deep-orange-500", before: "before:border-blue-gray-200 peer-focus:before:!border-deep-orange-500", after: "after:border-blue-gray-200 peer-focus:after:!border-deep-orange-500" }, orange: { color: "text-blue-gray-400 peer-focus:text-orange-500", before: "before:border-blue-gray-200 peer-focus:before:!border-orange-500", after: "after:border-blue-gray-200 peer-focus:after:!border-orange-500" }, amber: { color: "text-blue-gray-400 peer-focus:text-amber-500", before: "before:border-blue-gray-200 peer-focus:before:!border-amber-500", after: "after:border-blue-gray-200 peer-focus:after:!border-amber-500" }, yellow: { color: "text-blue-gray-400 peer-focus:text-yellow-500", before: "before:border-blue-gray-200 peer-focus:before:!border-yellow-500", after: "after:border-blue-gray-200 peer-focus:after:!border-yellow-500" }, lime: { color: "text-blue-gray-400 peer-focus:text-lime-500", before: "before:border-blue-gray-200 peer-focus:before:!border-lime-500", after: "after:border-blue-gray-200 peer-focus:after:!border-lime-500" }, "light-green": { color: "text-blue-gray-400 peer-focus:text-light-green-500", before: "before:border-blue-gray-200 peer-focus:before:!border-light-green-500", after: "after:border-blue-gray-200 peer-focus:after:!border-light-green-500" }, green: { color: "text-blue-gray-400 peer-focus:text-green-500", before: "before:border-blue-gray-200 peer-focus:before:!border-green-500", after: "after:border-blue-gray-200 peer-focus:after:!border-green-500" }, teal: { color: "text-blue-gray-400 peer-focus:text-teal-500", before: "before:border-blue-gray-200 peer-focus:before:!border-teal-500", after: "after:border-blue-gray-200 peer-focus:after:!border-teal-500" }, cyan: { color: "text-blue-gray-400 peer-focus:text-cyan-500", before: "before:border-blue-gray-200 peer-focus:before:!border-cyan-500", after: "after:border-blue-gray-200 peer-focus:after:!border-cyan-500" }, "light-blue": { color: "text-blue-gray-400 peer-focus:text-light-blue-500", before: "before:border-blue-gray-200 peer-focus:before:!border-light-blue-500", after: "after:border-blue-gray-200 peer-focus:after:!border-light-blue-500" }, blue: { color: "text-blue-gray-400 peer-focus:text-blue-500", before: "before:border-blue-gray-200 peer-focus:before:!border-blue-500", after: "after:border-blue-gray-200 peer-focus:after:!border-blue-500" }, indigo: { color: "text-blue-gray-400 peer-focus:text-indigo-500", before: "before:border-blue-gray-200 peer-focus:before:!border-indigo-500", after: "after:border-blue-gray-200 peer-focus:after:!border-indigo-500" }, "deep-purple": { color: "text-blue-gray-400 peer-focus:text-deep-purple-500", before: "before:border-blue-gray-200 peer-focus:before:!border-deep-purple-500", after: "after:border-blue-gray-200 peer-focus:after:!border-deep-purple-500" }, purple: { color: "text-blue-gray-400 peer-focus:text-purple-500", before: "before:border-blue-gray-200 peer-focus:before:!border-purple-500", after: "after:border-blue-gray-200 peer-focus:after:!border-purple-500" }, pink: { color: "text-blue-gray-400 peer-focus:text-pink-500", before: "before:border-blue-gray-200 peer-focus:before:!border-pink-500", after: "after:border-blue-gray-200 peer-focus:after:!border-pink-500" }, red: { color: "text-blue-gray-400 peer-focus:text-red-500", before: "before:border-blue-gray-200 peer-focus:before:!border-red-500", after: "after:border-blue-gray-200 peer-focus:after:!border-red-500" } }, _default = textareaOutlinedLabelColors;
  }
});

// node_modules/@material-tailwind/react/theme/components/textarea/textareaOutlined/index.js
var require_textareaOutlined = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/textarea/textareaOutlined/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var _textareaOutlinedLabel = _interopRequireDefault(require_textareaOutlinedLabel()), _textareaOutlinedColors = _interopRequireDefault(require_textareaOutlinedColors()), _textareaOutlinedLabelColors = _interopRequireDefault(require_textareaOutlinedLabelColors());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var textareaOutlined = { base: { textarea: { borderWidth: "placeholder-shown:border", borderColor: "placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200", floated: { borderWidth: "border focus:border-2", borderColor: "border-t-transparent focus:border-t-transparent" } }, label: _textareaOutlinedLabel.default }, sizes: { md: { container: { height: "h-10" }, textarea: { fontSize: "text-sm", px: "px-3", py: "py-2.5", borderRadius: "rounded-[7px]" }, label: { lineHeight: "peer-placeholder-shown:leading-[3.75]" } }, lg: { container: { height: "h-11" }, textarea: { fontSize: "text-sm", px: "px-3", py: "py-3", borderRadius: "rounded-md" }, label: { lineHeight: "peer-placeholder-shown:leading-[4.1]" } } }, colors: { textarea: _textareaOutlinedColors.default, label: _textareaOutlinedLabelColors.default }, error: { textarea: { borderColor: "border-red-500 placeholder-shown:border-t-red-500 placeholder-shown:border-red-500", borderColorFocused: "focus:border-red-500" }, label: { color: "text-red-500 peer-focus:text-red-500 peer-placeholder-shown:text-red-500", before: "before:border-red-500 peer-focus:before:border-red-500", after: "after:border-red-500 peer-focus:after:border-red-500" } }, success: { textarea: { borderColor: "border-green-500 placeholder-shown:border-t-green-500 placeholder-shown:border-green-500", borderColorFocused: "focus:border-green-500" }, label: { color: "text-green-500 peer-focus:text-green-500 peer-placeholder-shown:text-green-500", before: "before:border-green-500 peer-focus:before:border-green-500", after: "after:border-green-500 peer-focus:after:border-green-500" } }, shrink: { textarea: { borderTop: "!border-t-transparent" }, label: { fontSize: "!text-[11px]", lineHeight: "!leading-tight", borderColor: "before:!border-blue-gray-200 after:!border-blue-gray-200" } } }, _default = textareaOutlined;
  }
});

// node_modules/@material-tailwind/react/theme/components/textarea/textareaStandard/textareaStandardLabel.js
var require_textareaStandardLabel = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/textarea/textareaStandard/textareaStandardLabel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var textareaStandardLabel = { position: "-top-1.5", fontSize: "peer-placeholder-shown:text-sm", floated: { fontSize: "text-[11px] peer-focus:text-[11px]" }, after: { content: "after:content[' ']", display: "after:block", width: "after:w-full", position: "after:absolute", bottom: "after:-bottom-0", left: "left-0", borderWidth: "after:border-b-2", scale: "after:scale-x-0", floated: { scale: "peer-focus:after:scale-x-100" }, transition: "after:transition-transform after:duration-300" } }, _default = textareaStandardLabel;
  }
});

// node_modules/@material-tailwind/react/theme/components/textarea/textareaStandard/textareaStandardColors.js
var require_textareaStandardColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/textarea/textareaStandard/textareaStandardColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var textareaStandardColors = { "blue-gray": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-blue-gray-500" }, gray: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-gray-900" }, brown: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-brown-500" }, "deep-orange": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-deep-orange-500" }, orange: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-orange-500" }, amber: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-amber-500" }, yellow: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-yellow-500" }, lime: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-lime-500" }, "light-green": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-light-green-500" }, green: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-green-500" }, teal: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-teal-500" }, cyan: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-cyan-500" }, "light-blue": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-light-blue-500" }, blue: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-blue-500" }, indigo: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-indigo-500" }, "deep-purple": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-deep-purple-500" }, purple: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-purple-500" }, pink: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-pink-500" }, red: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-red-500" } }, _default = textareaStandardColors;
  }
});

// node_modules/@material-tailwind/react/theme/components/textarea/textareaStandard/textareaStandardLabelColors.js
var require_textareaStandardLabelColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/textarea/textareaStandard/textareaStandardLabelColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var textareaStandardLabelColors = { "blue-gray": { color: "text-blue-gray-500 peer-focus:text-blue-gray-500", after: "after:border-blue-gray-500 peer-focus:after:!border-blue-gray-500" }, gray: { color: "text-gray-500 peer-focus:text-gray-900", after: "after:border-gray-500 peer-focus:after:!border-gray-900" }, brown: { color: "text-blue-gray-500 peer-focus:text-brown-500", after: "after:border-brown-500 peer-focus:after:!border-brown-500" }, "deep-orange": { color: "text-blue-gray-500 peer-focus:text-deep-orange-500", after: "after:border-deep-orange-500 peer-focus:after:!border-deep-orange-500" }, orange: { color: "text-blue-gray-500 peer-focus:text-orange-500", after: "after:border-orange-500 peer-focus:after:!border-orange-500" }, amber: { color: "text-blue-gray-500 peer-focus:text-amber-500", after: "after:border-amber-500 peer-focus:after:!border-amber-500" }, yellow: { color: "text-blue-gray-500 peer-focus:text-yellow-500", after: "after:border-yellow-500 peer-focus:after:!border-yellow-500" }, lime: { color: "text-blue-gray-500 peer-focus:text-lime-500", after: "after:border-lime-500 peer-focus:after:!border-lime-500" }, "light-green": { color: "text-blue-gray-500 peer-focus:text-light-green-500", after: "after:border-light-green-500 peer-focus:after:!border-light-green-500" }, green: { color: "text-blue-gray-500 peer-focus:text-green-500", after: "after:border-green-500 peer-focus:after:!border-green-500" }, teal: { color: "text-blue-gray-500 peer-focus:text-teal-500", after: "after:border-teal-500 peer-focus:after:!border-teal-500" }, cyan: { color: "text-blue-gray-500 peer-focus:text-cyan-500", after: "after:border-cyan-500 peer-focus:after:!border-cyan-500" }, "light-blue": { color: "text-blue-gray-500 peer-focus:text-light-blue-500", after: "after:border-light-blue-500 peer-focus:after:!border-light-blue-500" }, blue: { color: "text-blue-gray-500 peer-focus:text-blue-500", after: "after:border-blue-500 peer-focus:after:!border-blue-500" }, indigo: { color: "text-blue-gray-500 peer-focus:text-indigo-500", after: "after:border-indigo-500 peer-focus:after:!border-indigo-500" }, "deep-purple": { color: "text-blue-gray-500 peer-focus:text-deep-purple-500", after: "after:border-deep-purple-500 peer-focus:after:!border-deep-purple-500" }, purple: { color: "text-blue-gray-500 peer-focus:text-purple-500", after: "after:border-purple-500 peer-focus:after:!border-purple-500" }, pink: { color: "text-blue-gray-500 peer-focus:text-pink-500", after: "after:border-pink-500 peer-focus:after:!border-pink-500" }, red: { color: "text-blue-gray-500 peer-focus:text-red-500", after: "after:border-red-500 peer-focus:after:!border-red-500" } }, _default = textareaStandardLabelColors;
  }
});

// node_modules/@material-tailwind/react/theme/components/textarea/textareaStandard/index.js
var require_textareaStandard = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/textarea/textareaStandard/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var _textareaStandardLabel = _interopRequireDefault(require_textareaStandardLabel()), _textareaStandardColors = _interopRequireDefault(require_textareaStandardColors()), _textareaStandardLabelColors = _interopRequireDefault(require_textareaStandardLabelColors());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var textareaStandard = { base: { textarea: { borderWidth: "border-b", borderColor: "placeholder-shown:border-blue-gray-200" }, label: _textareaStandardLabel.default }, sizes: { md: { container: { height: "h-11" }, textarea: { fontSize: "text-sm", pt: "pt-4", pb: "pb-1.5" }, label: { lineHeight: "peer-placeholder-shown:leading-[4.25]" } }, lg: { container: { height: "h-12" }, textarea: { fontSize: "text-sm", px: "px-px", pt: "pt-5", pb: "pb-2" }, label: { lineHeight: "peer-placeholder-shown:leading-[4.875]" } } }, colors: { textarea: _textareaStandardColors.default, label: _textareaStandardLabelColors.default }, error: { textarea: { borderColor: "border-red-500 placeholder-shown:border-red-500", borderColorFocused: "focus:border-red-500" }, label: { color: "text-red-500 peer-focus:text-red-500 peer-placeholder-shown:text-red-500", after: "after:border-red-500 peer-focus:after:border-red-500" } }, success: { textarea: { borderColor: "border-green-500 placeholder-shown:border-green-500", borderColorFocused: "focus:border-green-500" }, label: { color: "text-green-500 peer-focus:text-green-500 peer-placeholder-shown:text-green-500", after: "after:border-green-500 peer-focus:after:border-green-500" } }, shrink: { textarea: {}, label: { fontSize: "!text-[11px]", lineHeight: "!leading-tight" } } }, _default = textareaStandard;
  }
});

// node_modules/@material-tailwind/react/theme/components/textarea/textareaStatic/textareaStaticLabel.js
var require_textareaStaticLabel = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/textarea/textareaStatic/textareaStaticLabel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var textareaStaticLabel = { position: "-top-2.5", fontSize: "text-sm peer-focus:text-sm", after: { content: "after:content[' ']", display: "after:block", width: "after:w-full", position: "after:absolute", bottom: "after:-bottom-1", left: "left-0", borderWidth: "after:border-b-2", scale: "after:scale-x-0", floated: { scale: "peer-focus:after:scale-x-100" }, transition: "after:transition-transform after:duration-300" } }, _default = textareaStaticLabel;
  }
});

// node_modules/@material-tailwind/react/theme/components/textarea/textareaStatic/textareaStaticColors.js
var require_textareaStaticColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/textarea/textareaStatic/textareaStaticColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var textareaStaticColors = { "blue-gray": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-blue-gray-500" }, gray: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-gray-900" }, brown: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-brown-500" }, "deep-orange": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-deep-orange-500" }, orange: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-orange-500" }, amber: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-amber-500" }, yellow: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-yellow-500" }, lime: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-lime-500" }, "light-green": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-light-green-500" }, green: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-green-500" }, teal: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-teal-500" }, cyan: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-cyan-500" }, "light-blue": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-light-blue-500" }, blue: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-blue-500" }, indigo: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-indigo-500" }, "deep-purple": { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-deep-purple-500" }, purple: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-purple-500" }, pink: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-pink-500" }, red: { borderColor: "border-blue-gray-200", borderColorFocused: "focus:border-red-500" } }, _default = textareaStaticColors;
  }
});

// node_modules/@material-tailwind/react/theme/components/textarea/textareaStatic/textareaStaticLabelColors.js
var require_textareaStaticLabelColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/textarea/textareaStatic/textareaStaticLabelColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var textareaStaticLabelColors = { "blue-gray": { color: "text-blue-gray-500 peer-focus:text-blue-gray-500", after: "after:border-blue-gray-500 peer-focus:after:border-blue-gray-500" }, gray: { color: "text-gray-500 peer-focus:text-gray-900", after: "after:border-gray-500 peer-focus:after:border-gray-900" }, brown: { color: "text-blue-gray-500 peer-focus:text-brown-500", after: "after:border-brown-500 peer-focus:after:border-brown-500" }, "deep-orange": { color: "text-blue-gray-500 peer-focus:text-deep-orange-500", after: "after:border-deep-orange-500 peer-focus:after:border-deep-orange-500" }, orange: { color: "text-blue-gray-500 peer-focus:text-orange-500", after: "after:border-orange-500 peer-focus:after:border-orange-500" }, amber: { color: "text-blue-gray-500 peer-focus:text-amber-500", after: "after:border-amber-500 peer-focus:after:border-amber-500" }, yellow: { color: "text-blue-gray-500 peer-focus:text-yellow-500", after: "after:border-yellow-500 peer-focus:after:border-yellow-500" }, lime: { color: "text-blue-gray-500 peer-focus:text-lime-500", after: "after:border-lime-500 peer-focus:after:border-lime-500" }, "light-green": { color: "text-blue-gray-500 peer-focus:text-light-green-500", after: "after:border-light-green-500 peer-focus:after:border-light-green-500" }, green: { color: "text-blue-gray-500 peer-focus:text-green-500", after: "after:border-green-500 peer-focus:after:border-green-500" }, teal: { color: "text-blue-gray-500 peer-focus:text-teal-500", after: "after:border-teal-500 peer-focus:after:border-teal-500" }, cyan: { color: "text-blue-gray-500 peer-focus:text-cyan-500", after: "after:border-cyan-500 peer-focus:after:border-cyan-500" }, "light-blue": { color: "text-blue-gray-500 peer-focus:text-light-blue-500", after: "after:border-light-blue-500 peer-focus:after:border-light-blue-500" }, blue: { color: "text-blue-gray-500 peer-focus:text-blue-500", after: "after:border-blue-500 peer-focus:after:border-blue-500" }, indigo: { color: "text-blue-gray-500 peer-focus:text-indigo-500", after: "after:border-indigo-500 peer-focus:after:border-indigo-500" }, "deep-purple": { color: "text-blue-gray-500 peer-focus:text-deep-purple-500", after: "after:border-deep-purple-500 peer-focus:after:border-deep-purple-500" }, purple: { color: "text-blue-gray-500 peer-focus:text-purple-500", after: "after:border-purple-500 peer-focus:after:border-purple-500" }, pink: { color: "text-blue-gray-500 peer-focus:text-pink-500", after: "after:border-pink-500 peer-focus:after:border-pink-500" }, red: { color: "text-blue-gray-500 peer-focus:text-red-500", after: "after:border-red-500 peer-focus:after:border-red-500" } }, _default = textareaStaticLabelColors;
  }
});

// node_modules/@material-tailwind/react/theme/components/textarea/textareaStatic/index.js
var require_textareaStatic = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/textarea/textareaStatic/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var _textareaStaticLabel = _interopRequireDefault(require_textareaStaticLabel()), _textareaStaticColors = _interopRequireDefault(require_textareaStaticColors()), _textareaStaticLabelColors = _interopRequireDefault(require_textareaStaticLabelColors());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var textareaStatic = { base: { textarea: { borderWidth: "border-b", borderColor: "placeholder-shown:border-blue-gray-200" }, label: _textareaStaticLabel.default }, sizes: { md: { container: { height: "h-11" }, textarea: { fontSize: "text-sm", pt: "pt-4", pb: "pb-1.5" }, label: { lineHeight: "peer-placeholder-shown:leading-tight" } }, lg: { container: { height: "h-12" }, textarea: { fontSize: "text-sm", px: "px-px", pt: "pt-5", pb: "pb-2" }, label: { lineHeight: "peer-placeholder-shown:leading-tight" } } }, colors: { textarea: _textareaStaticColors.default, label: _textareaStaticLabelColors.default }, error: { textarea: { borderColor: "border-red-500 placeholder-shown:border-red-500", borderColorFocused: "focus:border-red-500" }, label: { color: "text-red-500 peer-focus:text-red-500 peer-placeholder-shown:text-red-500", after: "after:border-red-500 peer-focus:after:border-red-500" } }, success: { textarea: { borderColor: "border-green-500 placeholder-shown:border-green-500", borderColorFocused: "focus:border-green-500" }, label: { color: "text-green-500 peer-focus:text-green-500 peer-placeholder-shown:text-green-500", after: "after:border-green-500 peer-focus:after:border-green-500" } }, shrink: { textarea: {}, label: {} } }, _default = textareaStatic;
  }
});

// node_modules/@material-tailwind/react/theme/components/textarea/index.js
var require_textarea = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/textarea/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { textarea: function() {
      return textarea;
    }, default: function() {
      return _default;
    } });
    var _textareaOutlined = _interopRequireDefault(require_textareaOutlined()), _textareaStandard = _interopRequireDefault(require_textareaStandard()), _textareaStatic = _interopRequireDefault(require_textareaStatic()), _input = require_input();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var textarea = { defaultProps: { variant: "outlined", size: "md", color: "gray", label: "", error: !1, success: !1, resize: !0, labelProps: void 0, containerProps: void 0, shrink: !1, className: "" }, valid: { variants: _input.propTypesVariant, sizes: _input.propTypesSize, colors: _input.propTypesColor }, styles: { base: { container: { position: "relative", width: "w-full", minWidth: "min-w-[200px]" }, textarea: { peer: "peer", width: "w-full", height: "h-full", minHeight: "min-h-[100px]", bg: "bg-transparent", color: "text-blue-gray-700", fontFamily: "font-sans", fontWeight: "font-normal", outline: "outline outline-0 focus:outline-0", resize: "resize-y", disabled: "disabled:bg-blue-gray-50 disabled:border-0 disabled:resize-none", transition: "transition-all" }, label: { display: "flex", width: "w-full", height: "h-full", userSelect: "select-none", pointerEvents: "pointer-events-none", position: "absolute", left: "left-0", fontWeight: "font-normal", color: "peer-placeholder-shown:text-blue-gray-500", lineHeight: "leading-tight peer-focus:leading-tight", disabled: "peer-disabled:text-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500", transition: "transition-all" } }, variants: { outlined: _textareaOutlined.default, standard: _textareaStandard.default, static: _textareaStatic.default } } }, _default = textarea;
  }
});

// node_modules/@material-tailwind/react/theme/components/tooltip/index.js
var require_tooltip = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/tooltip/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { tooltip: function() {
      return tooltip;
    }, default: function() {
      return _default;
    } });
    var tooltip = { defaultProps: { interactive: !1, placement: "top", offset: 5, dismiss: {}, animate: { unmount: {}, mount: {} }, className: "" }, styles: { base: { bg: "bg-black", py: "py-1.5", px: "px-3", borderRadius: "rounded-lg", fontFamily: "font-sans", fontSize: "text-sm", fontWeight: "font-normal", color: "text-white", outline: "focus:outline-none", overflowWrap: "break-words", zIndex: "z-[999]", whiteSpace: "whitespace-normal" } } }, _default = tooltip;
  }
});

// node_modules/@material-tailwind/react/theme/components/typography/typographyColors.js
var require_typographyColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/typography/typographyColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var typographyColors = { inherit: { color: "text-inherit" }, current: { color: "text-current" }, black: { color: "text-black" }, white: { color: "text-white" }, "blue-gray": { color: "text-blue-gray-900", gradient: "bg-gradient-to-tr from-blue-gray-600 to-blue-gray-400" }, gray: { color: "text-gray-700", gradient: "bg-gradient-to-tr from-gray-600 to-gray-400" }, brown: { color: "text-brown-500", gradient: "bg-gradient-to-tr from-brown-600 to-brown-400" }, "deep-orange": { color: "text-deep-orange-500", gradient: "bg-gradient-to-tr from-deep-orange-600 to-deep-orange-400" }, orange: { color: "text-orange-500", gradient: "bg-gradient-to-tr from-orange-600 to-orange-400" }, amber: { color: "text-amber-500", gradient: "bg-gradient-to-tr from-amber-600 to-amber-400" }, yellow: { color: "text-yellow-500", gradient: "bg-gradient-to-tr from-yellow-600 to-yellow-400" }, lime: { color: "text-lime-500", gradient: "bg-gradient-to-tr from-lime-600 to-lime-400" }, "light-green": { color: "text-light-green-500", gradient: "bg-gradient-to-tr from-light-green-600 to-light-green-400" }, green: { color: "text-green-500", gradient: "bg-gradient-to-tr from-green-600 to-green-400" }, teal: { color: "text-teal-500", gradient: "bg-gradient-to-tr from-teal-600 to-teal-400" }, cyan: { color: "text-cyan-500", gradient: "bg-gradient-to-tr from-cyan-600 to-cyan-400" }, "light-blue": { color: "text-light-blue-500", gradient: "bg-gradient-to-tr from-light-blue-600 to-light-blue-400" }, blue: { color: "text-blue-500", gradient: "bg-gradient-to-tr from-blue-600 to-blue-400" }, indigo: { color: "text-indigo-500", gradient: "bg-gradient-to-tr from-indigo-600 to-indigo-400" }, "deep-purple": { color: "text-deep-purple-500", gradient: "bg-gradient-to-tr from-deep-purple-600 to-deep-purple-400" }, purple: { color: "text-purple-500", gradient: "bg-gradient-to-tr from-purple-600 to-purple-400" }, pink: { color: "text-pink-500", gradient: "bg-gradient-to-tr from-pink-600 to-pink-400" }, red: { color: "text-red-500", gradient: "bg-gradient-to-tr from-red-600 to-red-400" } }, _default = typographyColors;
  }
});

// node_modules/@material-tailwind/react/types/components/typography.js
var require_typography = __commonJS({
  "node_modules/@material-tailwind/react/types/components/typography.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesVariant: function() {
      return propTypesVariant;
    }, propTypesColor: function() {
      return propTypesColor;
    }, propTypesAs: function() {
      return propTypesAs;
    }, propTypesTextGradient: function() {
      return propTypesTextGradient;
    }, propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesChildren: function() {
      return propTypesChildren;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray2(arr);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArray(iter) {
      if (typeof Symbol < "u" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var propTypesVariant = ["h1", "h2", "h3", "h4", "h5", "h6", "lead", "paragraph", "small"], propTypesColor = ["inherit", "current", "black", "white"].concat(_toConsumableArray(_generic.propTypesColors)), propTypesAs = _propTypes.default.elementType, propTypesTextGradient = _propTypes.default.bool, propTypesClassName = _propTypes.default.string, propTypesChildren = _propTypes.default.node.isRequired;
  }
});

// node_modules/@material-tailwind/react/theme/components/typography/index.js
var require_typography2 = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/typography/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { typography: function() {
      return typography;
    }, default: function() {
      return _default;
    } });
    var _typographyColors = _interopRequireDefault(require_typographyColors()), _typography = require_typography();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var typography = { defaultProps: { variant: "paragraph", color: "inherit", textGradient: !1, className: "" }, valid: { variants: _typography.propTypesVariant, colors: _typography.propTypesColor }, styles: { variants: { h1: { display: "block", fontSmoothing: "antialiased", letterSpacing: "tracking-normal", fontFamily: "font-sans", fontSize: "text-5xl", fontWeight: "font-semibold", lineHeight: "leading-tight" }, h2: { display: "block", fontSmoothing: "antialiased", letterSpacing: "tracking-normal", fontFamily: "font-sans", fontSize: "text-4xl", fontWeight: "font-semibold", lineHeight: "leading-[1.3]" }, h3: { display: "block", fontSmoothing: "antialiased", letterSpacing: "tracking-normal", fontFamily: "font-sans", fontSize: "text-3xl", fontWeight: "font-semibold", lineHeight: "leading-snug" }, h4: { display: "block", fontSmoothing: "antialiased", letterSpacing: "tracking-normal", fontFamily: "font-sans", fontSize: "text-2xl", fontWeight: "font-semibold", lineHeight: "leading-snug" }, h5: { display: "block", fontSmoothing: "antialiased", letterSpacing: "tracking-normal", fontFamily: "font-sans", fontSize: "text-xl", fontWeight: "font-semibold", lineHeight: "leading-snug" }, h6: { display: "block", fontSmoothing: "antialiased", letterSpacing: "tracking-normal", fontFamily: "font-sans", fontSize: "text-base", fontWeight: "font-semibold", lineHeight: "leading-relaxed" }, lead: { display: "block", fontSmoothing: "antialiased", fontFamily: "font-sans", fontSize: "text-xl", fontWeight: "font-normal", lineHeight: "leading-relaxed" }, paragraph: { display: "block", fontSmoothing: "antialiased", fontFamily: "font-sans", fontSize: "text-base", fontWeight: "font-light", lineHeight: "leading-relaxed" }, small: { display: "block", fontSmoothing: "antialiased", fontFamily: "font-sans", fontSize: "text-sm", fontWeight: "font-light", lineHeight: "leading-normal" } }, textGradient: { bgClip: "bg-clip-text", color: "text-transparent" }, colors: _typographyColors.default } }, _default = typography;
  }
});

// node_modules/@material-tailwind/react/theme/components/collapse/index.js
var require_collapse = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/collapse/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { collapse: function() {
      return collapse;
    }, default: function() {
      return _default;
    } });
    var collapse = { defaultProps: { animate: { unmount: {}, mount: {} }, className: "" }, styles: { base: { display: "block", width: "w-full", basis: "basis-full", overflow: "overflow-hidden" } } }, _default = collapse;
  }
});

// node_modules/@material-tailwind/react/theme/components/list/index.js
var require_list = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/list/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { list: function() {
      return list2;
    }, default: function() {
      return _default;
    } });
    var list2 = { defaultProps: { ripple: !0, className: "" }, styles: { base: { list: { display: "flex", flexDirection: "flex-col", gap: "gap-1", minWidth: "min-w-[240px]", p: "p-2", fontFamily: "font-sans", fontSize: "text-base", fontWeight: "font-normal", color: "text-blue-gray-700" }, item: { initial: { display: "flex", alignItems: "items-center", width: "w-full", padding: "p-3", borderRadius: "rounded-lg", textAlign: "text-start", lightHeight: "leading-tight", transition: "transition-all", bg: "hover:bg-blue-gray-50 hover:bg-opacity-80 focus:bg-blue-gray-50 focus:bg-opacity-80 active:bg-blue-gray-50 active:bg-opacity-80", color: "hover:text-blue-gray-900 focus:text-blue-gray-900 active:text-blue-gray-900", outline: "outline-none" }, selected: { bg: "bg-blue-gray-50/50", color: "text-blue-gray-700" }, disabled: { opacity: "opacity-50", cursor: "cursor-not-allowed", pointerEvents: "pointer-events-none", userSelect: "select-none", bg: "hover:bg-transparent focus:bg-transparent active:bg-transparent", color: "hover:text-blue-gray-500 focus:text-blue-gray-500 active:text-blue-gray-500" } }, itemPrefix: { display: "grid", placeItems: "place-items-center", marginRight: "mr-4" }, itemSuffix: { display: "grid", placeItems: "place-items-center", marginRight: "ml-auto justify-self-end" } } } }, _default = list2;
  }
});

// node_modules/@material-tailwind/react/theme/components/buttonGroup/buttonGroupDividerColor.js
var require_buttonGroupDividerColor = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/buttonGroup/buttonGroupDividerColor.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var buttonGroupDividerColor = { white: { divideColor: "divide-blue-gray-50" }, "blue-gray": { divideColor: "divide-blue-gray-600" }, gray: { divideColor: "divide-gray-800" }, brown: { divideColor: "divide-brown-600" }, "deep-orange": { divideColor: "divide-deep-orange-600" }, orange: { divideColor: "divide-orange-600" }, amber: { divideColor: "divide-amber-600" }, yellow: { divideColor: "divide-yellow-600" }, lime: { divideColor: "divide-lime-600" }, "light-green": { divideColor: "divide-light-green-600" }, green: { divideColor: "divide-green-600" }, teal: { divideColor: "divide-teal-600" }, cyan: { divideColor: "divide-cyan-600" }, "light-blue": { divideColor: "divide-light-blue-600" }, blue: { divideColor: "divide-blue-600" }, indigo: { divideColor: "divide-indigo-600" }, "deep-purple": { divideColor: "divide-deep-purple-600" }, purple: { divideColor: "divide-purple-600" }, pink: { divideColor: "divide-pink-600" }, red: { divideColor: "divide-red-600" } }, _default = buttonGroupDividerColor;
  }
});

// node_modules/@material-tailwind/react/theme/components/buttonGroup/index.js
var require_buttonGroup = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/buttonGroup/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { buttonGroup: function() {
      return buttonGroup;
    }, default: function() {
      return _default;
    } });
    var _buttonGroupDividerColor = _interopRequireDefault(require_buttonGroupDividerColor()), _button = require_button();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var buttonGroup = { defaultProps: { variant: "filled", size: "md", color: "gray", fullWidth: !1, ripple: !0, className: "" }, valid: { variants: _button.propTypesVariant, sizes: _button.propTypesSize, colors: _button.propTypesColor }, styles: { base: { initial: { display: "flex", flexDirection: "row" }, fullWidth: { width: "w-full" } }, dividerColor: _buttonGroupDividerColor.default } }, _default = buttonGroup;
  }
});

// node_modules/@material-tailwind/react/theme/components/carousel/index.js
var require_carousel = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/carousel/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { carousel: function() {
      return carousel;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var carousel = { defaultProps: { prevArrow: function(param) {
      var loop = param.loop, handlePrev = param.handlePrev, firstIndex = param.firstIndex;
      return _react.default.createElement("button", { onClick: handlePrev, disabled: !loop && firstIndex, className: "!absolute top-2/4 left-4 -translate-y-2/4 rounded-full select-none transition-all disabled:opacity-50 disabled:shadow-none disabled:pointer-events-none w-12 max-w-[48px] h-12 max-h-[48px] text-white hover:bg-white/10 active:bg-white/30 grid place-items-center" }, _react.default.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 24 24", stroke: "currentColor", strokeWidth: 3, className: "-ml-1 h-7 w-7" }, _react.default.createElement("path", { strokeLinecap: "round", strokeLinejoin: "round", d: "M15.75 19.5L8.25 12l7.5-7.5" })));
    }, nextArrow: function(param) {
      var loop = param.loop, handleNext = param.handleNext, lastIndex = param.lastIndex;
      return _react.default.createElement("button", { onClick: handleNext, disabled: !loop && lastIndex, className: "!absolute top-2/4 right-4 -translate-y-2/4 rounded-full select-none transition-all disabled:opacity-50 disabled:shadow-none disabled:pointer-events-none w-12 max-w-[48px] h-12 max-h-[48px] text-white hover:bg-white/10 active:bg-white/30 grid place-items-center" }, _react.default.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 24 24", stroke: "currentColor", strokeWidth: 3, className: "ml-1 h-7 w-7" }, _react.default.createElement("path", { strokeLinecap: "round", strokeLinejoin: "round", d: "M8.25 4.5l7.5 7.5-7.5 7.5" })));
    }, navigation: function(param) {
      var setActiveIndex = param.setActiveIndex, activeIndex = param.activeIndex, length2 = param.length;
      return _react.default.createElement("div", { className: "absolute bottom-4 left-2/4 z-50 flex -translate-x-2/4 gap-2" }, new Array(length2).fill("").map(function(_3, i7) {
        return _react.default.createElement("span", { key: i7, className: "block h-3 w-3 cursor-pointer rounded-full transition-colors content-[''] ".concat(activeIndex === i7 ? "bg-white" : "bg-white/50"), onClick: function() {
          return setActiveIndex(i7);
        } });
      }));
    }, autoplay: !1, autoplayDelay: 5e3, transition: { type: "tween", duration: 0.5 }, loop: !1, className: "" }, styles: { base: { carousel: { position: "relative", width: "w-full", height: "h-full", overflowX: "overflow-x-hidden", display: "flex" }, slide: { width: "w-full", height: "h-full", display: "inline-block", flex: "flex-none" } } } }, _default = carousel;
  }
});

// node_modules/@material-tailwind/react/theme/components/drawer/index.js
var require_drawer = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/drawer/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { drawer: function() {
      return drawer;
    }, default: function() {
      return _default;
    } });
    var drawer = { defaultProps: { size: 300, overlay: !0, placement: "left", overlayProps: void 0, className: "", dismiss: void 0, onClose: void 0, transition: { type: "tween", duration: 0.3 } }, styles: { base: { drawer: { position: "fixed", zIndex: "z-[9999]", pointerEvents: "pointer-events-auto", backgroundColor: "bg-white", boxSizing: "box-border", width: "w-full", boxShadow: "shadow-2xl shadow-blue-gray-900/10" }, overlay: { position: "absolute", inset: "inset-0", width: "w-full", height: "h-full", pointerEvents: "pointer-events-auto", zIndex: "z-[9995]", backgroundColor: "bg-black", backgroundOpacity: "bg-opacity-60", backdropBlur: "backdrop-blur-sm" } } } }, _default = drawer;
  }
});

// node_modules/@material-tailwind/react/types/components/badge.js
var require_badge = __commonJS({
  "node_modules/@material-tailwind/react/types/components/badge.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesColor: function() {
      return propTypesColor;
    }, propTypesInvisible: function() {
      return propTypesInvisible;
    }, propTypesWithBorder: function() {
      return propTypesWithBorder;
    }, propTypesOverlap: function() {
      return propTypesOverlap;
    }, propTypesPlacement: function() {
      return propTypesPlacement;
    }, propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesContent: function() {
      return propTypesContent;
    }, propTypesChildren: function() {
      return propTypesChildren;
    }, propTypesContainerProps: function() {
      return propTypesContainerProps;
    }, propTypesContainerRef: function() {
      return propTypesContainerRef;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray2(arr);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArray(iter) {
      if (typeof Symbol < "u" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var propTypesColor = ["white"].concat(_toConsumableArray(_generic.propTypesColors)), propTypesInvisible = _propTypes.default.bool, propTypesWithBorder = _propTypes.default.bool, propTypesOverlap = ["circular", "square"], propTypesPlacement = ["top-start", "top-end", "bottom-start", "bottom-end"], propTypesClassName = _propTypes.default.string, propTypesContent = _propTypes.default.node, propTypesChildren = _propTypes.default.node.isRequired, propTypesContainerProps = _propTypes.default.instanceOf(Object), propTypesContainerRef = _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.shape({ current: _propTypes.default.any })]);
  }
});

// node_modules/@material-tailwind/react/theme/components/badge/badgeColors.js
var require_badgeColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/badge/badgeColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var badgeColors = { white: { backgroud: "bg-white", color: "text-blue-gray-900" }, "blue-gray": { backgroud: "bg-blue-gray-500", color: "text-white" }, gray: { backgroud: "bg-gray-500", color: "text-white" }, brown: { backgroud: "bg-brown-500", color: "text-white" }, "deep-orange": { backgroud: "bg-deep-orange-500", color: "text-white" }, orange: { backgroud: "bg-orange-500", color: "text-white" }, amber: { backgroud: "bg-amber-500", color: "text-black" }, yellow: { backgroud: "bg-yellow-500", color: "text-black" }, lime: { backgroud: "bg-lime-500", color: "text-black" }, "light-green": { backgroud: "bg-light-green-500", color: "text-white" }, green: { backgroud: "bg-green-500", color: "text-white" }, teal: { backgroud: "bg-teal-500", color: "text-white" }, cyan: { backgroud: "bg-cyan-500", color: "text-white" }, "light-blue": { backgroud: "bg-light-blue-500", color: "text-white" }, blue: { backgroud: "bg-blue-500", color: "text-white" }, indigo: { backgroud: "bg-indigo-500", color: "text-white" }, "deep-purple": { backgroud: "bg-deep-purple-500", color: "text-white" }, purple: { backgroud: "bg-purple-500", color: "text-white" }, pink: { backgroud: "bg-pink-500", color: "text-white" }, red: { backgroud: "bg-red-500", color: "text-white" } }, _default = badgeColors;
  }
});

// node_modules/@material-tailwind/react/theme/components/badge/index.js
var require_badge2 = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/badge/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { badge: function() {
      return badge;
    }, default: function() {
      return _default;
    } });
    var _badge = require_badge(), _badgeColors = _interopRequireDefault(require_badgeColors());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var badge = { defaultProps: { color: "red", invisible: !1, withBorder: !1, overlap: "square", content: void 0, placement: "top-end", className: void 0, containerProps: void 0 }, valid: { colors: _badge.propTypesColor, overlaps: _badge.propTypesOverlap, placements: _badge.propTypesPlacement }, styles: { base: { container: { position: "relative", display: "inline-flex" }, badge: { initial: { position: "absolute", minWidth: "min-w-[12px]", minHeight: "min-h-[12px]", borderRadius: "rounded-full", paddingY: "py-1", paddingX: "px-1", fontSize: "text-xs", fontWeight: "font-medium", content: "content-['']", lineHeight: "leading-none", display: "grid", placeItems: "place-items-center" }, withBorder: { borderWidth: "border-2", borderColor: "border-white" }, withContent: { minWidth: "min-w-[24px]", minHeight: "min-h-[24px]" } } }, placements: { "top-start": { square: { top: "top-[4%]", left: "left-[2%]", translateX: "-translate-x-2/4", translateY: "-translate-y-2/4" }, circular: { top: "top-[14%]", left: "left-[14%]", translateX: "-translate-x-2/4", translateY: "-translate-y-2/4" } }, "top-end": { square: { top: "top-[4%]", right: "right-[2%]", translateX: "translate-x-2/4", translateY: "-translate-y-2/4" }, circular: { top: "top-[14%]", right: "right-[14%]", translateX: "translate-x-2/4", translateY: "-translate-y-2/4" } }, "bottom-start": { square: { bottom: "bottom-[4%]", left: "left-[2%]", translateX: "-translate-x-2/4", translateY: "translate-y-2/4" }, circular: { bottom: "bottom-[14%]", left: "left-[14%]", translateX: "-translate-x-2/4", translateY: "translate-y-2/4" } }, "bottom-end": { square: { bottom: "bottom-[4%]", right: "right-[2%]", translateX: "translate-x-2/4", translateY: "translate-y-2/4" }, circular: { bottom: "bottom-[14%]", right: "right-[14%]", translateX: "translate-x-2/4", translateY: "translate-y-2/4" } } }, colors: _badgeColors.default } }, _default = badge;
  }
});

// node_modules/@material-tailwind/react/types/components/rating.js
var require_rating = __commonJS({
  "node_modules/@material-tailwind/react/types/components/rating.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesCount: function() {
      return propTypesCount;
    }, propTypesValue: function() {
      return propTypesValue;
    }, propTypesRatedIcon: function() {
      return propTypesRatedIcon;
    }, propTypesUnratedIcon: function() {
      return propTypesUnratedIcon;
    }, propTypesColor: function() {
      return propTypesColor;
    }, propTypesOnChange: function() {
      return propTypesOnChange;
    }, propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesReadonly: function() {
      return propTypesReadonly;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray2(arr);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArray(iter) {
      if (typeof Symbol < "u" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var propTypesCount = _propTypes.default.number, propTypesValue = _propTypes.default.number, propTypesRatedIcon = _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.instanceOf(Object)]), propTypesUnratedIcon = _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.instanceOf(Object)]), propTypesColor = ["white"].concat(_toConsumableArray(_generic.propTypesColors)), propTypesOnChange = _propTypes.default.func, propTypesClassName = _propTypes.default.string, propTypesReadonly = _propTypes.default.bool;
  }
});

// node_modules/@material-tailwind/react/theme/components/rating/ratingColors.js
var require_ratingColors = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/rating/ratingColors.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var ratingColors = { white: { color: "text-white" }, "blue-gray": { color: "text-blue-gray-500" }, gray: { color: "text-gray-500" }, brown: { color: "text-brown-500" }, "deep-orange": { color: "text-deep-orange-500" }, orange: { color: "text-orange-500" }, amber: { color: "text-amber-500" }, yellow: { color: "text-yellow-700" }, lime: { color: "text-lime-500" }, "light-green": { color: "text-light-green-500" }, green: { color: "text-green-500" }, teal: { color: "text-teal-500" }, cyan: { color: "text-cyan-500" }, "light-blue": { color: "text-light-blue-500" }, blue: { color: "text-blue-500" }, indigo: { color: "text-indigo-500" }, "deep-purple": { color: "text-deep-purple-500" }, purple: { color: "text-purple-500" }, pink: { color: "text-pink-500" }, red: { color: "text-red-500" } }, _default = ratingColors;
  }
});

// node_modules/@material-tailwind/react/theme/components/rating/index.js
var require_rating2 = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/rating/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { rating: function() {
      return rating;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _rating = require_rating(), _ratingColors = _interopRequireDefault(require_ratingColors());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var rating = { defaultProps: { count: 5, value: 0, ratedIcon: _react.default.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 24 24", fill: "currentColor", className: "w-6 h-6" }, _react.default.createElement("path", { fillRule: "evenodd", d: "M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z", clipRule: "evenodd" })), unratedIcon: _react.default.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 24 24", strokeWidth: 1.5, stroke: "currentColor", className: "w-6 h-6" }, _react.default.createElement("path", { strokeLinecap: "round", strokeLinejoin: "round", d: "M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z" })), ratedColor: "yellow", unratedColor: "blue-gray", className: void 0, onChange: void 0, readonly: !1 }, valid: { colors: _rating.propTypesColor }, styles: { base: { rating: { display: "inline-flex", alignItems: "items-center" }, icon: { width: "w-5", height: "h-5", color: "text-inherit", cursor: "cursor-pointer" } }, colors: _ratingColors.default } }, _default = rating;
  }
});

// node_modules/@material-tailwind/react/types/components/slider.js
var require_slider2 = __commonJS({
  "node_modules/@material-tailwind/react/types/components/slider.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesColor: function() {
      return propTypesColor;
    }, propTypesSize: function() {
      return propTypesSize;
    }, propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesTrackClassName: function() {
      return propTypesTrackClassName;
    }, propTypesThumbClassName: function() {
      return propTypesThumbClassName;
    }, propTypesBarClassName: function() {
      return propTypesBarClassName;
    }, propTypesDefaultValue: function() {
      return propTypesDefaultValue;
    }, propTypesValue: function() {
      return propTypesValue;
    }, propTypesOnChange: function() {
      return propTypesOnChange;
    }, propTypesMin: function() {
      return propTypesMin;
    }, propTypesMax: function() {
      return propTypesMax;
    }, propTypesStep: function() {
      return propTypesStep;
    }, propTypesInputRef: function() {
      return propTypesInputRef;
    }, propTypesInputProps: function() {
      return propTypesInputProps;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var propTypesColor = _generic.propTypesColors, propTypesSize = ["sm", "md", "lg"], propTypesClassName = _propTypes.default.string, propTypesTrackClassName = _propTypes.default.string, propTypesThumbClassName = _propTypes.default.string, propTypesBarClassName = _propTypes.default.string, propTypesDefaultValue = _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]), propTypesValue = _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]), propTypesOnChange = _propTypes.default.func, propTypesMin = _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]), propTypesMax = _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]), propTypesStep = _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]), propTypesInputRef = _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.shape({ current: _propTypes.default.any })]), propTypesInputProps = _propTypes.default.instanceOf(Object);
  }
});

// node_modules/@material-tailwind/react/theme/components/slider/sliderColor.js
var require_sliderColor = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/slider/sliderColor.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var sliderColor = { "blue-gray": { color: "text-blue-gray-500" }, gray: { color: "text-gray-900" }, brown: { color: "text-brown-500" }, "deep-orange": { color: "text-deep-orange-500" }, orange: { color: "text-orange-500" }, amber: { color: "text-amber-500" }, yellow: { color: "text-yellow-500" }, lime: { color: "text-lime-500" }, "light-green": { color: "text-light-green-500" }, green: { color: "text-green-500" }, teal: { color: "text-teal-500" }, cyan: { color: "text-cyan-500" }, "light-blue": { color: "text-light-blue-500" }, blue: { color: "text-blue-500" }, indigo: { color: "text-indigo-500" }, "deep-purple": { color: "text-deep-purple-500" }, purple: { color: "text-purple-500" }, pink: { color: "text-pink-500" }, red: { color: "text-red-500" } }, _default = sliderColor;
  }
});

// node_modules/@material-tailwind/react/theme/components/slider/index.js
var require_slider3 = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/slider/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { slider: function() {
      return slider;
    }, default: function() {
      return _default;
    } });
    var _slider = require_slider2(), _sliderColor = _interopRequireDefault(require_sliderColor());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var slider = { defaultProps: { color: "gray", size: "md", min: void 0, max: void 0, step: "any", className: "", trackClassName: "", thumbClassName: "", barClassName: "", inputProps: void 0 }, valid: { sizes: _slider.propTypesSize, colors: _slider.propTypesColor }, styles: { base: { container: { position: "relative", width: "w-full", minWidth: "min-w-[200px]" }, slider: { width: "w-full", position: "absolute", inset: "inset-0", backgroundColor: "bg-transparent", cursor: "cursor-pointer", outline: "focus:outline-none focus:outline-0", appearance: "appearance-none [-webkit-appearance:none]" }, track: { height: "[&::-webkit-slider-runnable-track]:h-full [&::-moz-range-track]:h-full", borderRadius: "[&::-webkit-slider-runnable-track]:rounded-full [&::-moz-range-track]:rounded-full", backgroundColor: "[&::-webkit-slider-runnable-track]:bg-blue-gray-100 [&::-moz-range-track]:bg-blue-gray-100" }, thumb: { appearance: "[&::-moz-range-thumb]:appearance-none [&::-moz-range-thumb]:[-webkit-appearance:none] [&::-webkit-slider-thumb]:appearance-none [&::-webkit-slider-thumb]:[-webkit-appearance:none]", borderRadius: "[&::-moz-range-thumb]:rounded-full [&::-webkit-slider-thumb]:rounded-full", border: "[&::-moz-range-thumb]:border-0 [&::-webkit-slider-thumb]:border-0", ringWidth: "[&::-moz-range-thumb]:ring-2 [&::-webkit-slider-thumb]:ring-2", ringColor: "[&::-moz-range-thumb]:ring-current [&::-webkit-slider-thumb]:ring-current", backgroundColor: "[&::-moz-range-thumb]:bg-white [&::-webkit-slider-thumb]:bg-white", position: "[&::-moz-range-thumb]:relative [&::-webkit-slider-thumb]:relative", zIndex: "[&::-moz-range-thumb]:z-20 [&::-webkit-slider-thumb]:z-20" }, bar: { position: "absolute", inset: "inset-0", zIndex: "z-10", borderRadius: "rounded-l-full", height: "h-full", pointerEvents: "pointer-events-none", backgroundColor: "bg-current" } }, sizes: { sm: { container: { height: "h-1" }, thumb: { width: "[&::-moz-range-thumb]:w-2.5 [&::-webkit-slider-thumb]:w-2.5", height: "[&::-moz-range-thumb]:h-2.5 [&::-webkit-slider-thumb]:h-2.5", marginTop: "[&::-moz-range-thumb]:-mt-[3px] [&::-webkit-slider-thumb]:-mt-[3px]" }, slider: {}, track: {}, bar: {} }, md: { container: { height: "h-2" }, thumb: { width: "[&::-moz-range-thumb]:w-3.5 [&::-webkit-slider-thumb]:w-3.5", height: "[&::-moz-range-thumb]:h-3.5 [&::-webkit-slider-thumb]:h-3.5", marginTop: "[&::-moz-range-thumb]:-mt-[3px] [&::-webkit-slider-thumb]:-mt-[3px]" }, slider: {}, track: {}, bar: {} }, lg: { container: { height: "h-3" }, thumb: { width: "[&::-moz-range-thumb]:w-5 [&::-webkit-slider-thumb]:w-5", height: "[&::-moz-range-thumb]:h-5 [&::-webkit-slider-thumb]:h-5", marginTop: "[&::-moz-range-thumb]:-mt-1 [&::-webkit-slider-thumb]:-mt-1" }, slider: {}, track: {}, bar: {} } }, colors: _sliderColor.default } }, _default = slider;
  }
});

// node_modules/@material-tailwind/react/types/components/spinner.js
var require_spinner = __commonJS({
  "node_modules/@material-tailwind/react/types/components/spinner.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesColor: function() {
      return propTypesColor;
    }, propTypesClassName: function() {
      return propTypesClassName;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray2(arr);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArray(iter) {
      if (typeof Symbol < "u" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var propTypesColor = ["white"].concat(_toConsumableArray(_generic.propTypesColors)), propTypesClassName = _propTypes.default.string;
  }
});

// node_modules/@material-tailwind/react/theme/components/spinner/spinnerColor.js
var require_spinnerColor = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/spinner/spinnerColor.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var spinnerColor = { white: { color: "text-white" }, "blue-gray": { color: "text-blue-gray-500" }, gray: { color: "text-gray-900" }, brown: { color: "text-brown-500" }, "deep-orange": { color: "text-deep-orange-500" }, orange: { color: "text-orange-500" }, amber: { color: "text-amber-500" }, yellow: { color: "text-yellow-500" }, lime: { color: "text-lime-500" }, "light-green": { color: "text-light-green-500" }, green: { color: "text-green-500" }, teal: { color: "text-teal-500" }, cyan: { color: "text-cyan-500" }, "light-blue": { color: "text-light-blue-500" }, blue: { color: "text-blue-500" }, indigo: { color: "text-indigo-500" }, "deep-purple": { color: "text-deep-purple-500" }, purple: { color: "text-purple-500" }, pink: { color: "text-pink-500" }, red: { color: "text-red-500" } }, _default = spinnerColor;
  }
});

// node_modules/@material-tailwind/react/theme/components/spinner/index.js
var require_spinner2 = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/spinner/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { spinner: function() {
      return spinner;
    }, default: function() {
      return _default;
    } });
    var _spinner = require_spinner(), _spinnerColor = _interopRequireDefault(require_spinnerColor());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var spinner = { defaultProps: { color: "gray", className: "" }, valid: { colors: _spinner.propTypesColor }, styles: { base: { color: "text-gray-300", animation: "animate-spin" }, colors: _spinnerColor.default } }, _default = spinner;
  }
});

// node_modules/@material-tailwind/react/theme/components/timeline/timeline.js
var require_timeline = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/timeline/timeline.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { timeline: function() {
      return timeline2;
    }, default: function() {
      return _default;
    } });
    var timeline2 = { styles: { base: { display: "w-full", position: "flex", flexDirection: "flex-col" } } }, _default = timeline2;
  }
});

// node_modules/@material-tailwind/react/types/components/timeline.js
var require_timeline2 = __commonJS({
  "node_modules/@material-tailwind/react/types/components/timeline.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypeClassName: function() {
      return propTypeClassName;
    }, propTypeChildren: function() {
      return propTypeChildren;
    }, propTypeColor: function() {
      return propTypeColor;
    }, propTypeVariant: function() {
      return propTypeVariant;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray2(arr);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArray(iter) {
      if (typeof Symbol < "u" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var propTypeClassName = _propTypes.default.string, propTypeChildren = _propTypes.default.node, propTypeColor = ["white"].concat(_toConsumableArray(_generic.propTypesColors)), propTypeVariant = ["filled", "outlined", "ghost", "gradient"];
  }
});

// node_modules/@material-tailwind/react/theme/components/timeline/timelineItem.js
var require_timelineItem = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/timeline/timelineItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { timelineItem: function() {
      return timelineItem;
    }, default: function() {
      return _default;
    } });
    var _timeline = require_timeline2(), timelineItem = { defaultProps: { color: "gray", variant: "filled" }, valid: { colors: _timeline.propTypeColor, variants: _timeline.propTypeVariant }, styles: { base: { display: "flex", position: "relative", flexDirection: "flex-col", gap: "gap-2" } } }, _default = timelineItem;
  }
});

// node_modules/@material-tailwind/react/theme/components/timeline/timelineIconColors/ghost.js
var require_ghost = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/timeline/timelineIconColors/ghost.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var ghost = { transparent: { backgroud: "bg-transparent", color: "text-blue-gray-900" }, white: { color: "text-white", background: "bg-white/10" }, "blue-gray": { color: "text-blue-gray-500", background: "bg-blue-gray-500/10" }, gray: { color: "text-gray-900", background: "bg-gray-900/10" }, brown: { color: "text-brown-500", background: "bg-brown-500/10" }, "deep-orange": { color: "text-deep-orange-500", background: "bg-deep-orange-500/10" }, orange: { color: "text-orange-500", background: "bg-orange-500/10" }, amber: { color: "text-amber-500", background: "bg-amber-500/10" }, yellow: { color: "text-yellow-500", background: "bg-yellow-500/10" }, lime: { color: "text-lime-500", background: "bg-lime-500/10" }, "light-green": { color: "text-light-green-500", background: "bg-light-green-500/10" }, green: { color: "text-green-500", background: "bg-green-500/10" }, teal: { color: "text-teal-500", background: "bg-teal-500/10" }, cyan: { color: "text-cyan-500", background: "bg-cyan-500/10" }, "light-blue": { color: "text-light-blue-500", background: "bg-light-blue-500/10" }, blue: { color: "text-blue-500", background: "bg-blue-500/10" }, indigo: { color: "text-indigo-500", background: "bg-indigo-500/10" }, "deep-purple": { color: "text-deep-purple-500", background: "bg-deep-purple-500/10" }, purple: { color: "text-purple-500", background: "bg-purple-500/10" }, pink: { color: "text-pink-500", background: "bg-pink-500/10" }, red: { color: "text-red-500", background: "bg-red-500/10" } }, _default = ghost;
  }
});

// node_modules/@material-tailwind/react/theme/components/timeline/timelineIconColors/filled.js
var require_filled = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/timeline/timelineIconColors/filled.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var filled = { transparent: { backgroud: "bg-transparent", color: "text-blue-gray-900" }, white: { backgroud: "bg-white", color: "text-blue-gray-900" }, "blue-gray": { backgroud: "bg-blue-gray-500", color: "text-white" }, gray: { backgroud: "bg-gray-900", color: "text-white" }, brown: { backgroud: "bg-brown-500", color: "text-white" }, "deep-orange": { backgroud: "bg-deep-orange-500", color: "text-white" }, orange: { backgroud: "bg-orange-500", color: "text-white" }, amber: { backgroud: "bg-amber-500", color: "text-black" }, yellow: { backgroud: "bg-yellow-500", color: "text-black" }, lime: { backgroud: "bg-lime-500", color: "text-black" }, "light-green": { backgroud: "bg-light-green-500", color: "text-white" }, green: { backgroud: "bg-green-500", color: "text-white" }, teal: { backgroud: "bg-teal-500", color: "text-white" }, cyan: { backgroud: "bg-cyan-500", color: "text-white" }, "light-blue": { backgroud: "bg-light-blue-500", color: "text-white" }, blue: { backgroud: "bg-blue-500", color: "text-white" }, indigo: { backgroud: "bg-indigo-500", color: "text-white" }, "deep-purple": { backgroud: "bg-deep-purple-500", color: "text-white" }, purple: { backgroud: "bg-purple-500", color: "text-white" }, pink: { backgroud: "bg-pink-500", color: "text-white" }, red: { backgroud: "bg-red-500", color: "text-white" } }, _default = filled;
  }
});

// node_modules/@material-tailwind/react/theme/components/timeline/timelineIconColors/outlined.js
var require_outlined = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/timeline/timelineIconColors/outlined.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var outlined = { transparent: { backgroud: "bg-transparent", color: "text-blue-gray-900" }, white: { border: "border border-white", color: "text-white" }, "blue-gray": { border: "border border-blue-gray-500", color: "text-blue-gray-500" }, gray: { border: "border border-gray-900", color: "text-gray-900" }, brown: { border: "border border-brown-500", color: "text-brown-500" }, "deep-orange": { border: "border border-deep-orange-500", color: "text-deep-orange-500" }, orange: { border: "border border-orange-500", color: "text-orange-500" }, amber: { border: "border border-amber-500", color: "text-amber-500" }, yellow: { border: "border border-yellow-500", color: "text-yellow-500" }, lime: { border: "border border-lime-500", color: "text-lime-500" }, "light-green": { border: "border border-light-green-500", color: "text-light-green-500" }, green: { border: "border border-green-500", color: "text-green-500" }, teal: { border: "border border-teal-500", color: "text-teal-500" }, cyan: { border: "border border-cyan-500", color: "text-cyan-500" }, "light-blue": { border: "border border-light-blue-500", color: "text-light-blue-500" }, blue: { border: "border border-blue-500", color: "text-blue-500" }, indigo: { border: "border border-indigo-500", color: "text-indigo-500" }, "deep-purple": { border: "border border-deep-purple-500", color: "text-deep-purple-500" }, purple: { border: "border border-purple-500", color: "text-purple-500" }, pink: { border: "border border-pink-500", color: "text-pink-500" }, red: { border: "border border-red-500", color: "text-red-500" } }, _default = outlined;
  }
});

// node_modules/@material-tailwind/react/theme/components/timeline/timelineIconColors/gradient.js
var require_gradient = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/timeline/timelineIconColors/gradient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var gradient = { transparent: { backgroud: "bg-transparent", color: "text-blue-gray-900" }, white: { backgroud: "bg-white", color: "text-blue-gray-900" }, "blue-gray": { backgroud: "bg-gradient-to-tr from-blue-gray-600 to-blue-gray-400", color: "text-white" }, gray: { backgroud: "bg-gradient-to-tr from-gray-900 to-gray-800", color: "text-white" }, brown: { backgroud: "bg-gradient-to-tr from-brown-600 to-brown-400", color: "text-white" }, "deep-orange": { backgroud: "bg-gradient-to-tr from-deep-orange-600 to-deep-orange-400", color: "text-white" }, orange: { backgroud: "bg-gradient-to-tr from-orange-600 to-orange-400", color: "text-white" }, amber: { backgroud: "bg-gradient-to-tr from-amber-600 to-amber-400", color: "text-black" }, yellow: { backgroud: "bg-gradient-to-tr from-yellow-600 to-yellow-400", color: "text-black" }, lime: { backgroud: "bg-gradient-to-tr from-lime-600 to-lime-400", color: "text-black" }, "light-green": { backgroud: "bg-gradient-to-tr from-light-green-600 to-light-green-400", color: "text-white" }, green: { backgroud: "bg-gradient-to-tr from-green-600 to-green-400", color: "text-white" }, teal: { backgroud: "bg-gradient-to-tr from-teal-600 to-teal-400", color: "text-white" }, cyan: { backgroud: "bg-gradient-to-tr from-cyan-600 to-cyan-400", color: "text-white" }, "light-blue": { backgroud: "bg-gradient-to-tr from-light-blue-600 to-light-blue-400", color: "text-white" }, blue: { backgroud: "bg-gradient-to-tr from-blue-600 to-blue-400", color: "text-white" }, indigo: { backgroud: "bg-gradient-to-tr from-indigo-600 to-indigo-400", color: "text-white" }, "deep-purple": { backgroud: "bg-gradient-to-tr from-deep-purple-600 to-deep-purple-400", color: "text-white" }, purple: { backgroud: "bg-gradient-to-tr from-purple-600 to-purple-400", color: "text-white" }, pink: { backgroud: "bg-gradient-to-tr from-pink-600 to-pink-400", color: "text-white" }, red: { backgroud: "bg-gradient-to-tr from-red-600 to-red-400", color: "text-white" } }, _default = gradient;
  }
});

// node_modules/@material-tailwind/react/theme/components/timeline/timelineIcon.js
var require_timelineIcon = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/timeline/timelineIcon.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { timelineIcon: function() {
      return timelineIcon;
    }, default: function() {
      return _default;
    } });
    var _ghost = _interopRequireDefault(require_ghost()), _filled = _interopRequireDefault(require_filled()), _outlined = _interopRequireDefault(require_outlined()), _gradient = _interopRequireDefault(require_gradient()), _timeline = require_timeline2();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var timelineIcon = { defaultProps: { color: "gray", variant: "filled" }, valid: { colors: _timeline.propTypeColor, variants: _timeline.propTypeVariant }, styles: { base: { width: "w-max", height: "w-max", padding: "p-1.5", position: "relative", zIndex: "z-[2]", flexShrink: "flex-shrink-0", borderRadius: "rounded-full", overflow: "overflow-hidden" }, variants: { ghost: _ghost.default, filled: _filled.default, outlined: _outlined.default, gradient: _gradient.default } } }, _default = timelineIcon;
  }
});

// node_modules/@material-tailwind/react/theme/components/timeline/timelineHeader.js
var require_timelineHeader = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/timeline/timelineHeader.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { timelineHeader: function() {
      return timelineHeader;
    }, default: function() {
      return _default;
    } });
    var timelineHeader = { styles: { base: { display: "flex", alignItems: "items-center", gap: "gap-4" } } }, _default = timelineHeader;
  }
});

// node_modules/@material-tailwind/react/theme/components/timeline/timelineBody.js
var require_timelineBody = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/timeline/timelineBody.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { timelineBody: function() {
      return timelineBody;
    }, default: function() {
      return _default;
    } });
    var timelineBody = { styles: { base: { display: "flex", gap: "gap-4" } } }, _default = timelineBody;
  }
});

// node_modules/@material-tailwind/react/theme/components/timeline/timelineConnector.js
var require_timelineConnector = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/timeline/timelineConnector.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { timelineConnector: function() {
      return timelineConnector;
    }, default: function() {
      return _default;
    } });
    var timelineConnector = { styles: { base: { container: { position: "absolute", left: "left-0", display: "grid", justifyContent: "justify-center", backgroundColor: "bg-transparent", transition: "transition-opacity duration-200" }, line: { width: "w-0.5", height: "h-full", backgroundColor: "bg-blue-gray-100" } } } }, _default = timelineConnector;
  }
});

// node_modules/@material-tailwind/react/theme/components/timeline/index.js
var require_timeline3 = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/timeline/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    _exportStar(require_timeline(), exports);
    _exportStar(require_timelineItem(), exports);
    _exportStar(require_timelineIcon(), exports);
    _exportStar(require_timelineHeader(), exports);
    _exportStar(require_timelineBody(), exports);
    _exportStar(require_timelineConnector(), exports);
    function _exportStar(from, to) {
      return Object.keys(from).forEach(function(k2) {
        k2 !== "default" && !Object.prototype.hasOwnProperty.call(to, k2) && Object.defineProperty(to, k2, { enumerable: !0, get: function() {
          return from[k2];
        } });
      }), from;
    }
  }
});

// node_modules/@material-tailwind/react/theme/components/stepper/step.js
var require_step = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/stepper/step.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { step: function() {
      return step;
    }, default: function() {
      return _default;
    } });
    var step = { styles: { base: { initial: { position: "relative", zIndex: "z-10", display: "grid", placeItems: "place-items-center", width: "w-10", height: "h-10", borderRadius: "rounded-full", backgroundColor: "bg-gray-300", color: "text-gray-900", fontWeight: "font-bold", transition: "transition-all duration-300" }, active: { backgroundColor: "bg-gray-900", color: "text-white" }, completed: { backgroundColor: "bg-gray-900", color: "text-white" } } } }, _default = step;
  }
});

// node_modules/@material-tailwind/react/theme/components/stepper/stepper.js
var require_stepper = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/stepper/stepper.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { stepper: function() {
      return stepper;
    }, default: function() {
      return _default;
    } });
    var stepper = { styles: { base: { stepper: { width: "w-full", position: "relative", display: "flex", alignItems: "items-center", justifyContent: "justify-between" }, line: { initial: { position: "absolute", left: "left-0", top: "top-2/4", height: "h-0.5", width: "w-full", transform: "-translate-y-2/4", backgroundColor: "bg-gray-300" }, active: { backgroundColor: "bg-gray-900", transition: "transition-all", duration: "duration-500" } } } } }, _default = stepper;
  }
});

// node_modules/@material-tailwind/react/theme/components/stepper/index.js
var require_stepper2 = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/stepper/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    _exportStar(require_step(), exports);
    _exportStar(require_stepper(), exports);
    function _exportStar(from, to) {
      return Object.keys(from).forEach(function(k2) {
        k2 !== "default" && !Object.prototype.hasOwnProperty.call(to, k2) && Object.defineProperty(to, k2, { enumerable: !0, get: function() {
          return from[k2];
        } });
      }), from;
    }
  }
});

// node_modules/@material-tailwind/react/theme/components/speedDial/speedDial.js
var require_speedDial = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/speedDial/speedDial.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { speedDial: function() {
      return speedDial;
    }, default: function() {
      return _default;
    } });
    var speedDial = { defaultProps: { offset: 5, placement: "top", dismiss: void 0, animate: { unmount: {}, mount: {} } } }, _default = speedDial;
  }
});

// node_modules/@material-tailwind/react/theme/components/speedDial/speedDialContent.js
var require_speedDialContent = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/speedDial/speedDialContent.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { speedDialContent: function() {
      return speedDialContent;
    }, default: function() {
      return _default;
    } });
    var speedDialContent = { styles: { padding: "p-0.5", width: "w-max", display: "flex", flexDirection: "flex-col", alignItems: "items-center", gap: "gap-1" } }, _default = speedDialContent;
  }
});

// node_modules/@material-tailwind/react/theme/components/speedDial/speedDialAction.js
var require_speedDialAction = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/speedDial/speedDialAction.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { speedDialAction: function() {
      return speedDialAction;
    }, default: function() {
      return _default;
    } });
    var speedDialAction = { styles: { display: "flex", flexDirection: "flex-col", alignItems: "items-center", justifyContent: "justify-center", gap: "gap-1", padding: "p-1", margin: "m-0.5", borderWidth: "border", minWidth: "min-w-[48px]", fontFamily: "font-normal", minHeight: "min-h-[48px]", backgroundColor: "bg-white", borderRadius: "rounded-full", borderColor: "border-blue-gray-50", scale: "hover:scale-110 focus:scale-110 active:scale-100", transition: "transition-transform duration-300 ease-in-out" } }, _default = speedDialAction;
  }
});

// node_modules/@material-tailwind/react/theme/components/speedDial/index.js
var require_speedDial2 = __commonJS({
  "node_modules/@material-tailwind/react/theme/components/speedDial/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    _exportStar(require_speedDial(), exports);
    _exportStar(require_speedDialContent(), exports);
    _exportStar(require_speedDialAction(), exports);
    function _exportStar(from, to) {
      return Object.keys(from).forEach(function(k2) {
        k2 !== "default" && !Object.prototype.hasOwnProperty.call(to, k2) && Object.defineProperty(to, k2, { enumerable: !0, get: function() {
          return from[k2];
        } });
      }), from;
    }
  }
});

// node_modules/@material-tailwind/react/theme/index.js
var require_theme = __commonJS({
  "node_modules/@material-tailwind/react/theme/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    var _accordion = _interopRequireDefault(_exportStar(require_accordion(), exports)), _alert = _interopRequireDefault(_exportStar(require_alert2(), exports)), _avatar = _interopRequireDefault(_exportStar(require_avatar2(), exports)), _breadcrumbs = _interopRequireDefault(_exportStar(require_breadcrumbs(), exports)), _button = _interopRequireDefault(_exportStar(require_button2(), exports)), _card = _interopRequireDefault(_exportStar(require_card2(), exports)), _cardBody = _interopRequireDefault(_exportStar(require_cardBody(), exports)), _cardFooter = _interopRequireDefault(_exportStar(require_cardFooter(), exports)), _cardHeader = _interopRequireDefault(_exportStar(require_cardHeader(), exports)), _checkbox = _interopRequireDefault(_exportStar(require_checkbox2(), exports)), _chip = _interopRequireDefault(_exportStar(require_chip2(), exports)), _dialog = _interopRequireDefault(_exportStar(require_dialog2(), exports)), _dialogBody = _interopRequireDefault(_exportStar(require_dialogBody(), exports)), _dialogFooter = _interopRequireDefault(_exportStar(require_dialogFooter(), exports)), _dialogHeader = _interopRequireDefault(_exportStar(require_dialogHeader(), exports)), _iconButton = _interopRequireDefault(_exportStar(require_iconButton(), exports)), _input = _interopRequireDefault(_exportStar(require_input2(), exports)), _menu = _interopRequireDefault(_exportStar(require_menu(), exports)), _navbar = _interopRequireDefault(_exportStar(require_navbar2(), exports)), _popover = _interopRequireDefault(_exportStar(require_popover(), exports)), _progress = _interopRequireDefault(_exportStar(require_progress2(), exports)), _radio = _interopRequireDefault(_exportStar(require_radio(), exports)), _select = _interopRequireDefault(_exportStar(require_select2(), exports)), _switch = _interopRequireDefault(_exportStar(require_switch(), exports)), _tab = _interopRequireDefault(_exportStar(require_tab(), exports)), _tabs = _interopRequireDefault(_exportStar(require_tabs(), exports)), _tabsBody = _interopRequireDefault(_exportStar(require_tabsBody(), exports)), _tabsHeader = _interopRequireDefault(_exportStar(require_tabsHeader(), exports)), _tabPanel = _interopRequireDefault(_exportStar(require_tabPanel(), exports)), _textarea = _interopRequireDefault(_exportStar(require_textarea(), exports)), _tooltip = _interopRequireDefault(_exportStar(require_tooltip(), exports)), _typography = _interopRequireDefault(_exportStar(require_typography2(), exports)), _collapse = _interopRequireDefault(_exportStar(require_collapse(), exports)), _list2 = _interopRequireDefault(_exportStar(require_list(), exports)), _buttonGroup = _interopRequireDefault(_exportStar(require_buttonGroup(), exports)), _carousel = _interopRequireDefault(_exportStar(require_carousel(), exports)), _drawer = _interopRequireDefault(_exportStar(require_drawer(), exports)), _badge = _interopRequireDefault(_exportStar(require_badge2(), exports)), _rating = _interopRequireDefault(_exportStar(require_rating2(), exports)), _slider = _interopRequireDefault(_exportStar(require_slider3(), exports)), _spinner = _interopRequireDefault(_exportStar(require_spinner2(), exports)), _timeline = _exportStar(require_timeline3(), exports), _stepper = _exportStar(require_stepper2(), exports), _speedDial = _exportStar(require_speedDial2(), exports);
    function _exportStar(from, to) {
      return Object.keys(from).forEach(function(k2) {
        k2 !== "default" && !Object.prototype.hasOwnProperty.call(to, k2) && Object.defineProperty(to, k2, { enumerable: !0, get: function() {
          return from[k2];
        } });
      }), from;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var theme = { accordion: _accordion.default, alert: _alert.default, avatar: _avatar.default, breadcrumbs: _breadcrumbs.default, button: _button.default, card: _card.default, cardBody: _cardBody.default, cardFooter: _cardFooter.default, cardHeader: _cardHeader.default, checkbox: _checkbox.default, chip: _chip.default, dialog: _dialog.default, dialogBody: _dialogBody.default, dialogFooter: _dialogFooter.default, dialogHeader: _dialogHeader.default, iconButton: _iconButton.default, input: _input.default, menu: _menu.default, navbar: _navbar.default, popover: _popover.default, progress: _progress.default, radio: _radio.default, select: _select.default, switch: _switch.default, tab: _tab.default, tabs: _tabs.default, tabsBody: _tabsBody.default, tabsHeader: _tabsHeader.default, tabPanel: _tabPanel.default, textarea: _textarea.default, tooltip: _tooltip.default, typography: _typography.default, collapse: _collapse.default, list: _list2.default, buttonGroup: _buttonGroup.default, carousel: _carousel.default, drawer: _drawer.default, badge: _badge.default, rating: _rating.default, slider: _slider.default, spinner: _spinner.default, timeline: _timeline.timeline, timelineItem: _timeline.timelineItem, timelineIcon: _timeline.timelineIcon, timelineHeader: _timeline.timelineHeader, timelineBody: _timeline.timelineBody, timelineConnector: _timeline.timelineConnector, step: _stepper.step, stepper: _stepper.stepper, speedDial: _speedDial.speedDial, speedDialContent: _speedDial.speedDialContent, speedDialAction: _speedDial.speedDialAction }, _default = theme;
  }
});

// node_modules/@material-tailwind/react/utils/combineMerge.js
var require_combineMerge = __commonJS({
  "node_modules/@material-tailwind/react/utils/combineMerge.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return combineMerge;
    } });
    var _deepmerge = _interopRequireDefault(require_cjs());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function combineMerge(target, source, options) {
      var destination = target.slice();
      return source.forEach(function(item, index3) {
        typeof destination[index3] > "u" ? destination[index3] = options.cloneUnlessOtherwiseSpecified(item, options) : options.isMergeableObject(item) ? destination[index3] = (0, _deepmerge.default)(target[index3], item, options) : target.indexOf(item) === -1 && destination.push(item);
      }), destination;
    }
  }
});

// node_modules/@material-tailwind/react/context/theme.js
var require_theme2 = __commonJS({
  "node_modules/@material-tailwind/react/context/theme.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { MaterialTailwindTheme: function() {
      return MaterialTailwindTheme;
    }, ThemeProvider: function() {
      return ThemeProvider;
    }, useTheme: function() {
      return useTheme;
    } });
    var _react = _interopRequireWildcard(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _deepmerge = _interopRequireDefault(require_cjs()), _index3 = _interopRequireDefault(require_theme()), _combineMerge = _interopRequireDefault(require_combineMerge());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap != "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap(), cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule)
        return obj;
      if (obj === null || typeof obj != "object" && typeof obj != "function")
        return { default: obj };
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj))
        return cache.get(obj);
      var newObj = {}, hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj)
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          desc && (desc.get || desc.set) ? Object.defineProperty(newObj, key, desc) : newObj[key] = obj[key];
        }
      return newObj.default = obj, cache && cache.set(obj, newObj), newObj;
    }
    var MaterialTailwindTheme = (0, _react.createContext)(_index3.default);
    MaterialTailwindTheme.displayName = "MaterialTailwindThemeProvider";
    function ThemeProvider(param) {
      var _param_value = param.value, value = _param_value === void 0 ? _index3.default : _param_value, children = param.children, mergedValue = (0, _deepmerge.default)(_index3.default, value, { arrayMerge: _combineMerge.default });
      return _react.default.createElement(MaterialTailwindTheme.Provider, { value: mergedValue }, children);
    }
    var useTheme = function() {
      return (0, _react.useContext)(MaterialTailwindTheme);
    };
    ThemeProvider.propTypes = { value: _propTypes.default.instanceOf(Object), children: _propTypes.default.node.isRequired };
  }
});

// node_modules/@material-tailwind/react/types/components/accordion.js
var require_accordion2 = __commonJS({
  "node_modules/@material-tailwind/react/types/components/accordion.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesOpen: function() {
      return propTypesOpen;
    }, propTypesIcon: function() {
      return propTypesIcon;
    }, propTypesAnimate: function() {
      return propTypesAnimate;
    }, propTypesDisabled: function() {
      return propTypesDisabled;
    }, propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesValue: function() {
      return propTypesValue;
    }, propTypesChildren: function() {
      return propTypesChildren;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var propTypesOpen = _propTypes.default.bool.isRequired, propTypesIcon = _propTypes.default.node, propTypesAnimate = _generic.propTypesAnimation, propTypesDisabled = _propTypes.default.bool, propTypesClassName = _propTypes.default.string, propTypesValue = _propTypes.default.instanceOf(Object).isRequired, propTypesChildren = _propTypes.default.node.isRequired;
  }
});

// node_modules/@material-tailwind/react/components/Accordion/AccordionContext.js
var require_AccordionContext = __commonJS({
  "node_modules/@material-tailwind/react/components/Accordion/AccordionContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { AccordionContext: function() {
      return AccordionContext;
    }, useAccordion: function() {
      return useAccordion;
    }, AccordionContextProvider: function() {
      return AccordionContextProvider;
    } });
    var _react = _interopRequireDefault(require_react()), _accordion = require_accordion2();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var AccordionContext = _react.default.createContext(null);
    AccordionContext.displayName = "MaterialTailwind.AccordionContext";
    function useAccordion() {
      var context = _react.default.useContext(AccordionContext);
      if (!context)
        throw new Error("useAccordion() must be used within an Accordion. It happens when you use AccordionHeader or AccordionBody components outside the Accordion component.");
      return context;
    }
    var AccordionContextProvider = function(param) {
      var value = param.value, children = param.children;
      return _react.default.createElement(AccordionContext.Provider, { value }, children);
    };
    AccordionContextProvider.propTypes = { value: _accordion.propTypesValue, children: _accordion.propTypesChildren };
    AccordionContextProvider.displayName = "MaterialTailwind.AccordionContextProvider";
  }
});

// node_modules/@material-tailwind/react/components/Accordion/AccordionHeader.js
var require_AccordionHeader = __commonJS({
  "node_modules/@material-tailwind/react/components/Accordion/AccordionHeader.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { AccordionHeader: function() {
      return AccordionHeader;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _accordionContext = require_AccordionContext(), _theme = require_theme2(), _accordion = require_accordion2();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var AccordionHeader = _react.default.forwardRef(function(_param, ref) {
      var className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["className", "children"]), _useAccordion = (0, _accordionContext.useAccordion)(), open = _useAccordion.open, icon = _useAccordion.icon, disabled = _useAccordion.disabled, accordion = (0, _theme.useTheme)().accordion, base = accordion.styles.base;
      className = className ?? "";
      var buttonStyles = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.header.initial), _defineProperty2({}, (0, _objectsToString.default)(base.header.active), open)), className), iconClasses = (0, _classnames.default)((0, _objectsToString.default)(base.header.icon));
      return _react.default.createElement("button", _extends5({}, rest, { ref, type: "button", disabled, className: buttonStyles }), children, _react.default.createElement("span", { className: iconClasses }, icon ?? (open ? _react.default.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 20 20", fill: "currentColor" }, _react.default.createElement("path", { fillRule: "evenodd", d: "M5 10a1 1 0 011-1h8a1 1 0 110 2H6a1 1 0 01-1-1z", clipRule: "evenodd" })) : _react.default.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 20 20", fill: "currentColor" }, _react.default.createElement("path", { fillRule: "evenodd", d: "M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z", clipRule: "evenodd" })))));
    });
    AccordionHeader.propTypes = { className: _accordion.propTypesClassName, children: _accordion.propTypesChildren };
    AccordionHeader.displayName = "MaterialTailwind.AccordionHeader";
    var _default = AccordionHeader;
  }
});

// node_modules/tslib/tslib.js
var require_tslib = __commonJS({
  "node_modules/tslib/tslib.js"(exports, module) {
    var __extends, __assign2, __rest3, __decorate, __param, __esDecorate, __runInitializers, __propKey, __setFunctionName, __metadata, __awaiter, __generator, __exportStar, __values, __read, __spread, __spreadArrays, __spreadArray, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault, __classPrivateFieldGet, __classPrivateFieldSet, __classPrivateFieldIn, __createBinding, __addDisposableResource, __disposeResources;
    (function(factory) {
      var root = typeof globalThis == "object" ? globalThis : typeof self == "object" ? self : typeof this == "object" ? this : {};
      typeof define == "function" && define.amd ? define("tslib", ["exports"], function(exports2) {
        factory(createExporter(root, createExporter(exports2)));
      }) : typeof module == "object" && typeof module.exports == "object" ? factory(createExporter(root, createExporter(module.exports))) : factory(createExporter(root));
      function createExporter(exports2, previous) {
        return exports2 !== root && (typeof Object.create == "function" ? Object.defineProperty(exports2, "__esModule", { value: !0 }) : exports2.__esModule = !0), function(id, v4) {
          return exports2[id] = previous ? previous(id, v4) : v4;
        };
      }
    })(function(exporter) {
      var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d12, b6) {
        d12.__proto__ = b6;
      } || function(d12, b6) {
        for (var p7 in b6)
          Object.prototype.hasOwnProperty.call(b6, p7) && (d12[p7] = b6[p7]);
      };
      __extends = function(d12, b6) {
        if (typeof b6 != "function" && b6 !== null)
          throw new TypeError("Class extends value " + String(b6) + " is not a constructor or null");
        extendStatics(d12, b6);
        function __() {
          this.constructor = d12;
        }
        d12.prototype = b6 === null ? Object.create(b6) : (__.prototype = b6.prototype, new __());
      }, __assign2 = Object.assign || function(t18) {
        for (var s15, i7 = 1, n7 = arguments.length; i7 < n7; i7++) {
          s15 = arguments[i7];
          for (var p7 in s15)
            Object.prototype.hasOwnProperty.call(s15, p7) && (t18[p7] = s15[p7]);
        }
        return t18;
      }, __rest3 = function(s15, e5) {
        var t18 = {};
        for (var p7 in s15)
          Object.prototype.hasOwnProperty.call(s15, p7) && e5.indexOf(p7) < 0 && (t18[p7] = s15[p7]);
        if (s15 != null && typeof Object.getOwnPropertySymbols == "function")
          for (var i7 = 0, p7 = Object.getOwnPropertySymbols(s15); i7 < p7.length; i7++)
            e5.indexOf(p7[i7]) < 0 && Object.prototype.propertyIsEnumerable.call(s15, p7[i7]) && (t18[p7[i7]] = s15[p7[i7]]);
        return t18;
      }, __decorate = function(decorators, target, key, desc) {
        var c13 = arguments.length, r9 = c13 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d12;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          r9 = Reflect.decorate(decorators, target, key, desc);
        else
          for (var i7 = decorators.length - 1; i7 >= 0; i7--)
            (d12 = decorators[i7]) && (r9 = (c13 < 3 ? d12(r9) : c13 > 3 ? d12(target, key, r9) : d12(target, key)) || r9);
        return c13 > 3 && r9 && Object.defineProperty(target, key, r9), r9;
      }, __param = function(paramIndex, decorator) {
        return function(target, key) {
          decorator(target, key, paramIndex);
        };
      }, __esDecorate = function(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f10) {
          if (f10 !== void 0 && typeof f10 != "function")
            throw new TypeError("Function expected");
          return f10;
        }
        for (var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value", target = !descriptorIn && ctor ? contextIn.static ? ctor : ctor.prototype : null, descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {}), _3, done = !1, i7 = decorators.length - 1; i7 >= 0; i7--) {
          var context = {};
          for (var p7 in contextIn)
            context[p7] = p7 === "access" ? {} : contextIn[p7];
          for (var p7 in contextIn.access)
            context.access[p7] = contextIn.access[p7];
          context.addInitializer = function(f10) {
            if (done)
              throw new TypeError("Cannot add initializers after decoration has completed");
            extraInitializers.push(accept(f10 || null));
          };
          var result = (0, decorators[i7])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
          if (kind === "accessor") {
            if (result === void 0)
              continue;
            if (result === null || typeof result != "object")
              throw new TypeError("Object expected");
            (_3 = accept(result.get)) && (descriptor.get = _3), (_3 = accept(result.set)) && (descriptor.set = _3), (_3 = accept(result.init)) && initializers.unshift(_3);
          } else
            (_3 = accept(result)) && (kind === "field" ? initializers.unshift(_3) : descriptor[key] = _3);
        }
        target && Object.defineProperty(target, contextIn.name, descriptor), done = !0;
      }, __runInitializers = function(thisArg, initializers, value) {
        for (var useValue = arguments.length > 2, i7 = 0; i7 < initializers.length; i7++)
          value = useValue ? initializers[i7].call(thisArg, value) : initializers[i7].call(thisArg);
        return useValue ? value : void 0;
      }, __propKey = function(x5) {
        return typeof x5 == "symbol" ? x5 : "".concat(x5);
      }, __setFunctionName = function(f10, name, prefix) {
        return typeof name == "symbol" && (name = name.description ? "[".concat(name.description, "]") : ""), Object.defineProperty(f10, "name", { configurable: !0, value: prefix ? "".concat(prefix, " ", name) : name });
      }, __metadata = function(metadataKey, metadataValue) {
        if (typeof Reflect == "object" && typeof Reflect.metadata == "function")
          return Reflect.metadata(metadataKey, metadataValue);
      }, __awaiter = function(thisArg, _arguments, P4, generator) {
        function adopt(value) {
          return value instanceof P4 ? value : new P4(function(resolve) {
            resolve(value);
          });
        }
        return new (P4 || (P4 = Promise))(function(resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e5) {
              reject(e5);
            }
          }
          function rejected(value) {
            try {
              step(generator.throw(value));
            } catch (e5) {
              reject(e5);
            }
          }
          function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      }, __generator = function(thisArg, body) {
        var _3 = { label: 0, sent: function() {
          if (t18[0] & 1)
            throw t18[1];
          return t18[1];
        }, trys: [], ops: [] }, f10, y6, t18, g7;
        return g7 = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol == "function" && (g7[Symbol.iterator] = function() {
          return this;
        }), g7;
        function verb(n7) {
          return function(v4) {
            return step([n7, v4]);
          };
        }
        function step(op) {
          if (f10)
            throw new TypeError("Generator is already executing.");
          for (; g7 && (g7 = 0, op[0] && (_3 = 0)), _3; )
            try {
              if (f10 = 1, y6 && (t18 = op[0] & 2 ? y6.return : op[0] ? y6.throw || ((t18 = y6.return) && t18.call(y6), 0) : y6.next) && !(t18 = t18.call(y6, op[1])).done)
                return t18;
              switch (y6 = 0, t18 && (op = [op[0] & 2, t18.value]), op[0]) {
                case 0:
                case 1:
                  t18 = op;
                  break;
                case 4:
                  return _3.label++, { value: op[1], done: !1 };
                case 5:
                  _3.label++, y6 = op[1], op = [0];
                  continue;
                case 7:
                  op = _3.ops.pop(), _3.trys.pop();
                  continue;
                default:
                  if (t18 = _3.trys, !(t18 = t18.length > 0 && t18[t18.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                    _3 = 0;
                    continue;
                  }
                  if (op[0] === 3 && (!t18 || op[1] > t18[0] && op[1] < t18[3])) {
                    _3.label = op[1];
                    break;
                  }
                  if (op[0] === 6 && _3.label < t18[1]) {
                    _3.label = t18[1], t18 = op;
                    break;
                  }
                  if (t18 && _3.label < t18[2]) {
                    _3.label = t18[2], _3.ops.push(op);
                    break;
                  }
                  t18[2] && _3.ops.pop(), _3.trys.pop();
                  continue;
              }
              op = body.call(thisArg, _3);
            } catch (e5) {
              op = [6, e5], y6 = 0;
            } finally {
              f10 = t18 = 0;
            }
          if (op[0] & 5)
            throw op[1];
          return { value: op[0] ? op[1] : void 0, done: !0 };
        }
      }, __exportStar = function(m10, o11) {
        for (var p7 in m10)
          p7 !== "default" && !Object.prototype.hasOwnProperty.call(o11, p7) && __createBinding(o11, m10, p7);
      }, __createBinding = Object.create ? function(o11, m10, k2, k22) {
        k22 === void 0 && (k22 = k2);
        var desc = Object.getOwnPropertyDescriptor(m10, k2);
        (!desc || ("get" in desc ? !m10.__esModule : desc.writable || desc.configurable)) && (desc = { enumerable: !0, get: function() {
          return m10[k2];
        } }), Object.defineProperty(o11, k22, desc);
      } : function(o11, m10, k2, k22) {
        k22 === void 0 && (k22 = k2), o11[k22] = m10[k2];
      }, __values = function(o11) {
        var s15 = typeof Symbol == "function" && Symbol.iterator, m10 = s15 && o11[s15], i7 = 0;
        if (m10)
          return m10.call(o11);
        if (o11 && typeof o11.length == "number")
          return {
            next: function() {
              return o11 && i7 >= o11.length && (o11 = void 0), { value: o11 && o11[i7++], done: !o11 };
            }
          };
        throw new TypeError(s15 ? "Object is not iterable." : "Symbol.iterator is not defined.");
      }, __read = function(o11, n7) {
        var m10 = typeof Symbol == "function" && o11[Symbol.iterator];
        if (!m10)
          return o11;
        var i7 = m10.call(o11), r9, ar = [], e5;
        try {
          for (; (n7 === void 0 || n7-- > 0) && !(r9 = i7.next()).done; )
            ar.push(r9.value);
        } catch (error) {
          e5 = { error };
        } finally {
          try {
            r9 && !r9.done && (m10 = i7.return) && m10.call(i7);
          } finally {
            if (e5)
              throw e5.error;
          }
        }
        return ar;
      }, __spread = function() {
        for (var ar = [], i7 = 0; i7 < arguments.length; i7++)
          ar = ar.concat(__read(arguments[i7]));
        return ar;
      }, __spreadArrays = function() {
        for (var s15 = 0, i7 = 0, il = arguments.length; i7 < il; i7++)
          s15 += arguments[i7].length;
        for (var r9 = Array(s15), k2 = 0, i7 = 0; i7 < il; i7++)
          for (var a13 = arguments[i7], j5 = 0, jl = a13.length; j5 < jl; j5++, k2++)
            r9[k2] = a13[j5];
        return r9;
      }, __spreadArray = function(to, from, pack) {
        if (pack || arguments.length === 2)
          for (var i7 = 0, l13 = from.length, ar; i7 < l13; i7++)
            (ar || !(i7 in from)) && (ar || (ar = Array.prototype.slice.call(from, 0, i7)), ar[i7] = from[i7]);
        return to.concat(ar || Array.prototype.slice.call(from));
      }, __await = function(v4) {
        return this instanceof __await ? (this.v = v4, this) : new __await(v4);
      }, __asyncGenerator = function(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var g7 = generator.apply(thisArg, _arguments || []), i7, q3 = [];
        return i7 = {}, verb("next"), verb("throw"), verb("return"), i7[Symbol.asyncIterator] = function() {
          return this;
        }, i7;
        function verb(n7) {
          g7[n7] && (i7[n7] = function(v4) {
            return new Promise(function(a13, b6) {
              q3.push([n7, v4, a13, b6]) > 1 || resume(n7, v4);
            });
          });
        }
        function resume(n7, v4) {
          try {
            step(g7[n7](v4));
          } catch (e5) {
            settle(q3[0][3], e5);
          }
        }
        function step(r9) {
          r9.value instanceof __await ? Promise.resolve(r9.value.v).then(fulfill, reject) : settle(q3[0][2], r9);
        }
        function fulfill(value) {
          resume("next", value);
        }
        function reject(value) {
          resume("throw", value);
        }
        function settle(f10, v4) {
          f10(v4), q3.shift(), q3.length && resume(q3[0][0], q3[0][1]);
        }
      }, __asyncDelegator = function(o11) {
        var i7, p7;
        return i7 = {}, verb("next"), verb("throw", function(e5) {
          throw e5;
        }), verb("return"), i7[Symbol.iterator] = function() {
          return this;
        }, i7;
        function verb(n7, f10) {
          i7[n7] = o11[n7] ? function(v4) {
            return (p7 = !p7) ? { value: __await(o11[n7](v4)), done: !1 } : f10 ? f10(v4) : v4;
          } : f10;
        }
      }, __asyncValues = function(o11) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var m10 = o11[Symbol.asyncIterator], i7;
        return m10 ? m10.call(o11) : (o11 = typeof __values == "function" ? __values(o11) : o11[Symbol.iterator](), i7 = {}, verb("next"), verb("throw"), verb("return"), i7[Symbol.asyncIterator] = function() {
          return this;
        }, i7);
        function verb(n7) {
          i7[n7] = o11[n7] && function(v4) {
            return new Promise(function(resolve, reject) {
              v4 = o11[n7](v4), settle(resolve, reject, v4.done, v4.value);
            });
          };
        }
        function settle(resolve, reject, d12, v4) {
          Promise.resolve(v4).then(function(v5) {
            resolve({ value: v5, done: d12 });
          }, reject);
        }
      }, __makeTemplateObject = function(cooked, raw) {
        return Object.defineProperty ? Object.defineProperty(cooked, "raw", { value: raw }) : cooked.raw = raw, cooked;
      };
      var __setModuleDefault = Object.create ? function(o11, v4) {
        Object.defineProperty(o11, "default", { enumerable: !0, value: v4 });
      } : function(o11, v4) {
        o11.default = v4;
      };
      __importStar = function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null)
          for (var k2 in mod)
            k2 !== "default" && Object.prototype.hasOwnProperty.call(mod, k2) && __createBinding(result, mod, k2);
        return __setModuleDefault(result, mod), result;
      }, __importDefault = function(mod) {
        return mod && mod.__esModule ? mod : { default: mod };
      }, __classPrivateFieldGet = function(receiver, state, kind, f10) {
        if (kind === "a" && !f10)
          throw new TypeError("Private accessor was defined without a getter");
        if (typeof state == "function" ? receiver !== state || !f10 : !state.has(receiver))
          throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f10 : kind === "a" ? f10.call(receiver) : f10 ? f10.value : state.get(receiver);
      }, __classPrivateFieldSet = function(receiver, state, value, kind, f10) {
        if (kind === "m")
          throw new TypeError("Private method is not writable");
        if (kind === "a" && !f10)
          throw new TypeError("Private accessor was defined without a setter");
        if (typeof state == "function" ? receiver !== state || !f10 : !state.has(receiver))
          throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return kind === "a" ? f10.call(receiver, value) : f10 ? f10.value = value : state.set(receiver, value), value;
      }, __classPrivateFieldIn = function(state, receiver) {
        if (receiver === null || typeof receiver != "object" && typeof receiver != "function")
          throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state == "function" ? receiver === state : state.has(receiver);
      }, __addDisposableResource = function(env, value, async) {
        if (value != null) {
          if (typeof value != "object" && typeof value != "function")
            throw new TypeError("Object expected.");
          var dispose;
          if (async) {
            if (!Symbol.asyncDispose)
              throw new TypeError("Symbol.asyncDispose is not defined.");
            dispose = value[Symbol.asyncDispose];
          }
          if (dispose === void 0) {
            if (!Symbol.dispose)
              throw new TypeError("Symbol.dispose is not defined.");
            dispose = value[Symbol.dispose];
          }
          if (typeof dispose != "function")
            throw new TypeError("Object not disposable.");
          env.stack.push({ value, dispose, async });
        } else
          async && env.stack.push({ async: !0 });
        return value;
      };
      var _SuppressedError = typeof SuppressedError == "function" ? SuppressedError : function(error, suppressed, message) {
        var e5 = new Error(message);
        return e5.name = "SuppressedError", e5.error = error, e5.suppressed = suppressed, e5;
      };
      __disposeResources = function(env) {
        function fail(e5) {
          env.error = env.hasError ? new _SuppressedError(e5, env.error, "An error was suppressed during disposal.") : e5, env.hasError = !0;
        }
        function next() {
          for (; env.stack.length; ) {
            var rec = env.stack.pop();
            try {
              var result = rec.dispose && rec.dispose.call(rec.value);
              if (rec.async)
                return Promise.resolve(result).then(next, function(e5) {
                  return fail(e5), next();
                });
            } catch (e5) {
              fail(e5);
            }
          }
          if (env.hasError)
            throw env.error;
        }
        return next();
      }, exporter("__extends", __extends), exporter("__assign", __assign2), exporter("__rest", __rest3), exporter("__decorate", __decorate), exporter("__param", __param), exporter("__esDecorate", __esDecorate), exporter("__runInitializers", __runInitializers), exporter("__propKey", __propKey), exporter("__setFunctionName", __setFunctionName), exporter("__metadata", __metadata), exporter("__awaiter", __awaiter), exporter("__generator", __generator), exporter("__exportStar", __exportStar), exporter("__createBinding", __createBinding), exporter("__values", __values), exporter("__read", __read), exporter("__spread", __spread), exporter("__spreadArrays", __spreadArrays), exporter("__spreadArray", __spreadArray), exporter("__await", __await), exporter("__asyncGenerator", __asyncGenerator), exporter("__asyncDelegator", __asyncDelegator), exporter("__asyncValues", __asyncValues), exporter("__makeTemplateObject", __makeTemplateObject), exporter("__importStar", __importStar), exporter("__importDefault", __importDefault), exporter("__classPrivateFieldGet", __classPrivateFieldGet), exporter("__classPrivateFieldSet", __classPrivateFieldSet), exporter("__classPrivateFieldIn", __classPrivateFieldIn), exporter("__addDisposableResource", __addDisposableResource), exporter("__disposeResources", __disposeResources);
    });
  }
});

// node_modules/hey-listen/dist/hey-listen.es.js
var hey_listen_es_exports = {};
__export(hey_listen_es_exports, {
  invariant: () => invariant4,
  warning: () => warning2
});
var warning2, invariant4, init_hey_listen_es = __esm({
  "node_modules/hey-listen/dist/hey-listen.es.js"() {
    warning2 = function() {
    }, invariant4 = function() {
    };
    warning2 = function(check, message) {
      !check && typeof console < "u" && console.warn(message);
    }, invariant4 = function(check, message) {
      if (!check)
        throw new Error(message);
    };
  }
});

// node_modules/style-value-types/dist/valueTypes.cjs.js
var require_valueTypes_cjs = __commonJS({
  "node_modules/style-value-types/dist/valueTypes.cjs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var clamp2 = (min, max) => (v4) => Math.max(Math.min(v4, max), min), sanitize = (v4) => v4 % 1 ? Number(v4.toFixed(5)) : v4, floatRegex = /(-)?([\d]*\.?[\d])+/g, colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2,3}\s*\/*\s*[\d\.]+%?\))/gi, singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2,3}\s*\/*\s*[\d\.]+%?\))$/i;
    function isString2(v4) {
      return typeof v4 == "string";
    }
    var number = {
      test: (v4) => typeof v4 == "number",
      parse: parseFloat,
      transform: (v4) => v4
    }, alpha = Object.assign(Object.assign({}, number), { transform: clamp2(0, 1) }), scale = Object.assign(Object.assign({}, number), { default: 1 }), createUnitType = (unit) => ({
      test: (v4) => isString2(v4) && v4.endsWith(unit) && v4.split(" ").length === 1,
      parse: parseFloat,
      transform: (v4) => `${v4}${unit}`
    }), degrees = createUnitType("deg"), percent = createUnitType("%"), px = createUnitType("px"), vh = createUnitType("vh"), vw = createUnitType("vw"), progressPercentage = Object.assign(Object.assign({}, percent), { parse: (v4) => percent.parse(v4) / 100, transform: (v4) => percent.transform(v4 * 100) }), isColorString = (type, testProp) => (v4) => Boolean(isString2(v4) && singleColorRegex.test(v4) && v4.startsWith(type) || testProp && Object.prototype.hasOwnProperty.call(v4, testProp)), splitColor = (aName, bName, cName) => (v4) => {
      if (!isString2(v4))
        return v4;
      let [a13, b6, c13, alpha2] = v4.match(floatRegex);
      return {
        [aName]: parseFloat(a13),
        [bName]: parseFloat(b6),
        [cName]: parseFloat(c13),
        alpha: alpha2 !== void 0 ? parseFloat(alpha2) : 1
      };
    }, hsla = {
      test: isColorString("hsl", "hue"),
      parse: splitColor("hue", "saturation", "lightness"),
      transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => "hsla(" + Math.round(hue) + ", " + percent.transform(sanitize(saturation)) + ", " + percent.transform(sanitize(lightness)) + ", " + sanitize(alpha.transform(alpha$1)) + ")"
    }, clampRgbUnit = clamp2(0, 255), rgbUnit = Object.assign(Object.assign({}, number), { transform: (v4) => Math.round(clampRgbUnit(v4)) }), rgba = {
      test: isColorString("rgb", "red"),
      parse: splitColor("red", "green", "blue"),
      transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => "rgba(" + rgbUnit.transform(red) + ", " + rgbUnit.transform(green) + ", " + rgbUnit.transform(blue) + ", " + sanitize(alpha.transform(alpha$1)) + ")"
    };
    function parseHex(v4) {
      let r9 = "", g7 = "", b6 = "", a13 = "";
      return v4.length > 5 ? (r9 = v4.substr(1, 2), g7 = v4.substr(3, 2), b6 = v4.substr(5, 2), a13 = v4.substr(7, 2)) : (r9 = v4.substr(1, 1), g7 = v4.substr(2, 1), b6 = v4.substr(3, 1), a13 = v4.substr(4, 1), r9 += r9, g7 += g7, b6 += b6, a13 += a13), {
        red: parseInt(r9, 16),
        green: parseInt(g7, 16),
        blue: parseInt(b6, 16),
        alpha: a13 ? parseInt(a13, 16) / 255 : 1
      };
    }
    var hex2 = {
      test: isColorString("#"),
      parse: parseHex,
      transform: rgba.transform
    }, color = {
      test: (v4) => rgba.test(v4) || hex2.test(v4) || hsla.test(v4),
      parse: (v4) => rgba.test(v4) ? rgba.parse(v4) : hsla.test(v4) ? hsla.parse(v4) : hex2.parse(v4),
      transform: (v4) => isString2(v4) ? v4 : v4.hasOwnProperty("red") ? rgba.transform(v4) : hsla.transform(v4)
    }, colorToken = "${c}", numberToken = "${n}";
    function test(v4) {
      var _a2, _b, _c, _d;
      return isNaN(v4) && isString2(v4) && ((_b = (_a2 = v4.match(floatRegex)) === null || _a2 === void 0 ? void 0 : _a2.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v4.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0;
    }
    function analyse(v4) {
      typeof v4 == "number" && (v4 = `${v4}`);
      let values = [], numColors = 0, colors = v4.match(colorRegex);
      colors && (numColors = colors.length, v4 = v4.replace(colorRegex, colorToken), values.push(...colors.map(color.parse)));
      let numbers = v4.match(floatRegex);
      return numbers && (v4 = v4.replace(floatRegex, numberToken), values.push(...numbers.map(number.parse))), { values, numColors, tokenised: v4 };
    }
    function parse2(v4) {
      return analyse(v4).values;
    }
    function createTransformer(v4) {
      let { values, numColors, tokenised } = analyse(v4), numValues = values.length;
      return (v5) => {
        let output = tokenised;
        for (let i7 = 0; i7 < numValues; i7++)
          output = output.replace(i7 < numColors ? colorToken : numberToken, i7 < numColors ? color.transform(v5[i7]) : sanitize(v5[i7]));
        return output;
      };
    }
    var convertNumbersToZero = (v4) => typeof v4 == "number" ? 0 : v4;
    function getAnimatableNone(v4) {
      let parsed = parse2(v4);
      return createTransformer(v4)(parsed.map(convertNumbersToZero));
    }
    var complex = { test, parse: parse2, createTransformer, getAnimatableNone }, maxDefaults = /* @__PURE__ */ new Set(["brightness", "contrast", "saturate", "opacity"]);
    function applyDefaultFilter(v4) {
      let [name, value] = v4.slice(0, -1).split("(");
      if (name === "drop-shadow")
        return v4;
      let [number2] = value.match(floatRegex) || [];
      if (!number2)
        return v4;
      let unit = value.replace(number2, ""), defaultValue = maxDefaults.has(name) ? 1 : 0;
      return number2 !== value && (defaultValue *= 100), name + "(" + defaultValue + unit + ")";
    }
    var functionRegex = /([a-z-]*)\(.*?\)/g, filter = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v4) => {
      let functions = v4.match(functionRegex);
      return functions ? functions.map(applyDefaultFilter).join(" ") : v4;
    } });
    exports.alpha = alpha;
    exports.color = color;
    exports.complex = complex;
    exports.degrees = degrees;
    exports.filter = filter;
    exports.hex = hex2;
    exports.hsla = hsla;
    exports.number = number;
    exports.percent = percent;
    exports.progressPercentage = progressPercentage;
    exports.px = px;
    exports.rgbUnit = rgbUnit;
    exports.rgba = rgba;
    exports.scale = scale;
    exports.vh = vh;
    exports.vw = vw;
  }
});

// node_modules/framesync/dist/framesync.cjs.js
var require_framesync_cjs = __commonJS({
  "node_modules/framesync/dist/framesync.cjs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var defaultTimestep = 1 / 60 * 1e3, getCurrentTime = typeof performance < "u" ? () => performance.now() : () => Date.now(), onNextFrame = typeof window < "u" ? (callback) => window.requestAnimationFrame(callback) : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);
    function createRenderStep(runNextFrame2) {
      let toRun = [], toRunNextFrame = [], numToRun = 0, isProcessing2 = !1, flushNextFrame = !1, toKeepAlive = /* @__PURE__ */ new WeakSet(), step = {
        schedule: (callback, keepAlive = !1, immediate = !1) => {
          let addToCurrentFrame = immediate && isProcessing2, buffer = addToCurrentFrame ? toRun : toRunNextFrame;
          return keepAlive && toKeepAlive.add(callback), buffer.indexOf(callback) === -1 && (buffer.push(callback), addToCurrentFrame && isProcessing2 && (numToRun = toRun.length)), callback;
        },
        cancel: (callback) => {
          let index3 = toRunNextFrame.indexOf(callback);
          index3 !== -1 && toRunNextFrame.splice(index3, 1), toKeepAlive.delete(callback);
        },
        process: (frameData) => {
          if (isProcessing2) {
            flushNextFrame = !0;
            return;
          }
          if (isProcessing2 = !0, [toRun, toRunNextFrame] = [toRunNextFrame, toRun], toRunNextFrame.length = 0, numToRun = toRun.length, numToRun)
            for (let i7 = 0; i7 < numToRun; i7++) {
              let callback = toRun[i7];
              callback(frameData), toKeepAlive.has(callback) && (step.schedule(callback), runNextFrame2());
            }
          isProcessing2 = !1, flushNextFrame && (flushNextFrame = !1, step.process(frameData));
        }
      };
      return step;
    }
    var maxElapsed2 = 40, useDefaultElapsed = !0, runNextFrame = !1, isProcessing = !1, frame = {
      delta: 0,
      timestamp: 0
    }, stepsOrder = [
      "read",
      "update",
      "preRender",
      "render",
      "postRender"
    ], steps2 = stepsOrder.reduce((acc, key) => (acc[key] = createRenderStep(() => runNextFrame = !0), acc), {}), sync = stepsOrder.reduce((acc, key) => {
      let step = steps2[key];
      return acc[key] = (process2, keepAlive = !1, immediate = !1) => (runNextFrame || startLoop(), step.schedule(process2, keepAlive, immediate)), acc;
    }, {}), cancelSync = stepsOrder.reduce((acc, key) => (acc[key] = steps2[key].cancel, acc), {}), flushSync = stepsOrder.reduce((acc, key) => (acc[key] = () => steps2[key].process(frame), acc), {}), processStep = (stepId) => steps2[stepId].process(frame), processFrame = (timestamp) => {
      runNextFrame = !1, frame.delta = useDefaultElapsed ? defaultTimestep : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed2), 1), frame.timestamp = timestamp, isProcessing = !0, stepsOrder.forEach(processStep), isProcessing = !1, runNextFrame && (useDefaultElapsed = !1, onNextFrame(processFrame));
    }, startLoop = () => {
      runNextFrame = !0, useDefaultElapsed = !0, isProcessing || onNextFrame(processFrame);
    }, getFrameData = () => frame;
    exports.cancelSync = cancelSync;
    exports.default = sync;
    exports.flushSync = flushSync;
    exports.getFrameData = getFrameData;
  }
});

// node_modules/popmotion/dist/popmotion.cjs.js
var require_popmotion_cjs = __commonJS({
  "node_modules/popmotion/dist/popmotion.cjs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var tslib = require_tslib(), heyListen = (init_hey_listen_es(), __toCommonJS(hey_listen_es_exports)), styleValueTypes = require_valueTypes_cjs(), sync = require_framesync_cjs();
    function _interopDefaultLegacy(e5) {
      return e5 && typeof e5 == "object" && "default" in e5 ? e5 : { default: e5 };
    }
    var sync__default = /* @__PURE__ */ _interopDefaultLegacy(sync), clamp2 = (min, max, v4) => Math.min(Math.max(v4, min), max), safeMin = 1e-3, minDuration = 0.01, maxDuration2 = 10, minDamping = 0.05, maxDamping = 1;
    function findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1 }) {
      let envelope, derivative;
      heyListen.warning(duration <= maxDuration2 * 1e3, "Spring duration must be 10 seconds or less");
      let dampingRatio = 1 - bounce;
      dampingRatio = clamp2(minDamping, maxDamping, dampingRatio), duration = clamp2(minDuration, maxDuration2, duration / 1e3), dampingRatio < 1 ? (envelope = (undampedFreq2) => {
        let exponentialDecay = undampedFreq2 * dampingRatio, delta = exponentialDecay * duration, a14 = exponentialDecay - velocity, b7 = calcAngularFreq(undampedFreq2, dampingRatio), c14 = Math.exp(-delta);
        return safeMin - a14 / b7 * c14;
      }, derivative = (undampedFreq2) => {
        let delta = undampedFreq2 * dampingRatio * duration, d12 = delta * velocity + velocity, e5 = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq2, 2) * duration, f10 = Math.exp(-delta), g7 = calcAngularFreq(Math.pow(undampedFreq2, 2), dampingRatio);
        return (-envelope(undampedFreq2) + safeMin > 0 ? -1 : 1) * ((d12 - e5) * f10) / g7;
      }) : (envelope = (undampedFreq2) => {
        let a14 = Math.exp(-undampedFreq2 * duration), b7 = (undampedFreq2 - velocity) * duration + 1;
        return -safeMin + a14 * b7;
      }, derivative = (undampedFreq2) => {
        let a14 = Math.exp(-undampedFreq2 * duration), b7 = (velocity - undampedFreq2) * (duration * duration);
        return a14 * b7;
      });
      let initialGuess = 5 / duration, undampedFreq = approximateRoot(envelope, derivative, initialGuess);
      if (duration = duration * 1e3, isNaN(undampedFreq))
        return {
          stiffness: 100,
          damping: 10,
          duration
        };
      {
        let stiffness = Math.pow(undampedFreq, 2) * mass;
        return {
          stiffness,
          damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),
          duration
        };
      }
    }
    var rootIterations = 12;
    function approximateRoot(envelope, derivative, initialGuess) {
      let result = initialGuess;
      for (let i7 = 1; i7 < rootIterations; i7++)
        result = result - envelope(result) / derivative(result);
      return result;
    }
    function calcAngularFreq(undampedFreq, dampingRatio) {
      return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);
    }
    var durationKeys = ["duration", "bounce"], physicsKeys = ["stiffness", "damping", "mass"];
    function isSpringType(options, keys2) {
      return keys2.some((key) => options[key] !== void 0);
    }
    function getSpringOptions(options) {
      let springOptions = Object.assign({ velocity: 0, stiffness: 100, damping: 10, mass: 1, isResolvedFromDuration: !1 }, options);
      if (!isSpringType(options, physicsKeys) && isSpringType(options, durationKeys)) {
        let derived = findSpring(options);
        springOptions = Object.assign(Object.assign(Object.assign({}, springOptions), derived), { velocity: 0, mass: 1 }), springOptions.isResolvedFromDuration = !0;
      }
      return springOptions;
    }
    function spring3(_a2) {
      var { from = 0, to = 1, restSpeed = 2, restDelta } = _a2, options = tslib.__rest(_a2, ["from", "to", "restSpeed", "restDelta"]);
      let state = { done: !1, value: from }, { stiffness, damping, mass, velocity, duration, isResolvedFromDuration } = getSpringOptions(options), resolveSpring = zero, resolveVelocity = zero;
      function createSpring() {
        let initialVelocity = velocity ? -(velocity / 1e3) : 0, initialDelta = to - from, dampingRatio = damping / (2 * Math.sqrt(stiffness * mass)), undampedAngularFreq = Math.sqrt(stiffness / mass) / 1e3;
        if (restDelta === void 0 && (restDelta = Math.min(Math.abs(to - from) / 100, 0.4)), dampingRatio < 1) {
          let angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);
          resolveSpring = (t18) => {
            let envelope = Math.exp(-dampingRatio * undampedAngularFreq * t18);
            return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq * Math.sin(angularFreq * t18) + initialDelta * Math.cos(angularFreq * t18));
          }, resolveVelocity = (t18) => {
            let envelope = Math.exp(-dampingRatio * undampedAngularFreq * t18);
            return dampingRatio * undampedAngularFreq * envelope * (Math.sin(angularFreq * t18) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq + initialDelta * Math.cos(angularFreq * t18)) - envelope * (Math.cos(angularFreq * t18) * (initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) - angularFreq * initialDelta * Math.sin(angularFreq * t18));
          };
        } else if (dampingRatio === 1)
          resolveSpring = (t18) => to - Math.exp(-undampedAngularFreq * t18) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t18);
        else {
          let dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);
          resolveSpring = (t18) => {
            let envelope = Math.exp(-dampingRatio * undampedAngularFreq * t18), freqForT = Math.min(dampedAngularFreq * t18, 300);
            return to - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq;
          };
        }
      }
      return createSpring(), {
        next: (t18) => {
          let current = resolveSpring(t18);
          if (isResolvedFromDuration)
            state.done = t18 >= duration;
          else {
            let currentVelocity = resolveVelocity(t18) * 1e3, isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed, isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;
            state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;
          }
          return state.value = state.done ? to : current, state;
        },
        flipTarget: () => {
          velocity = -velocity, [from, to] = [to, from], createSpring();
        }
      };
    }
    spring3.needsInterpolation = (a14, b7) => typeof a14 == "string" || typeof b7 == "string";
    var zero = (_t2) => 0, progress2 = (from, to, value) => {
      let toFromDifference = to - from;
      return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;
    }, mix2 = (from, to, progress3) => -progress3 * from + progress3 * to + from;
    function hueToRgb(p7, q3, t18) {
      return t18 < 0 && (t18 += 1), t18 > 1 && (t18 -= 1), t18 < 1 / 6 ? p7 + (q3 - p7) * 6 * t18 : t18 < 1 / 2 ? q3 : t18 < 2 / 3 ? p7 + (q3 - p7) * (2 / 3 - t18) * 6 : p7;
    }
    function hslaToRgba({ hue, saturation, lightness, alpha }) {
      hue /= 360, saturation /= 100, lightness /= 100;
      let red = 0, green = 0, blue = 0;
      if (!saturation)
        red = green = blue = lightness;
      else {
        let q3 = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - lightness * saturation, p7 = 2 * lightness - q3;
        red = hueToRgb(p7, q3, hue + 1 / 3), green = hueToRgb(p7, q3, hue), blue = hueToRgb(p7, q3, hue - 1 / 3);
      }
      return {
        red: Math.round(red * 255),
        green: Math.round(green * 255),
        blue: Math.round(blue * 255),
        alpha
      };
    }
    var mixLinearColor = (from, to, v4) => {
      let fromExpo = from * from, toExpo = to * to;
      return Math.sqrt(Math.max(0, v4 * (toExpo - fromExpo) + fromExpo));
    }, colorTypes = [styleValueTypes.hex, styleValueTypes.rgba, styleValueTypes.hsla], getColorType = (v4) => colorTypes.find((type) => type.test(v4)), notAnimatable = (color) => `'${color}' is not an animatable color. Use the equivalent color code instead.`, mixColor = (from, to) => {
      let fromColorType = getColorType(from), toColorType = getColorType(to);
      heyListen.invariant(!!fromColorType, notAnimatable(from)), heyListen.invariant(!!toColorType, notAnimatable(to));
      let fromColor = fromColorType.parse(from), toColor = toColorType.parse(to);
      fromColorType === styleValueTypes.hsla && (fromColor = hslaToRgba(fromColor), fromColorType = styleValueTypes.rgba), toColorType === styleValueTypes.hsla && (toColor = hslaToRgba(toColor), toColorType = styleValueTypes.rgba);
      let blended = Object.assign({}, fromColor);
      return (v4) => {
        for (let key in blended)
          key !== "alpha" && (blended[key] = mixLinearColor(fromColor[key], toColor[key], v4));
        return blended.alpha = mix2(fromColor.alpha, toColor.alpha, v4), fromColorType.transform(blended);
      };
    }, zeroPoint = {
      x: 0,
      y: 0,
      z: 0
    }, isNum = (v4) => typeof v4 == "number", combineFunctions = (a14, b7) => (v4) => b7(a14(v4)), pipe = (...transformers) => transformers.reduce(combineFunctions);
    function getMixer(origin, target) {
      return isNum(origin) ? (v4) => mix2(origin, target, v4) : styleValueTypes.color.test(origin) ? mixColor(origin, target) : mixComplex(origin, target);
    }
    var mixArray = (from, to) => {
      let output = [...from], numValues = output.length, blendValue = from.map((fromThis, i7) => getMixer(fromThis, to[i7]));
      return (v4) => {
        for (let i7 = 0; i7 < numValues; i7++)
          output[i7] = blendValue[i7](v4);
        return output;
      };
    }, mixObject = (origin, target) => {
      let output = Object.assign(Object.assign({}, origin), target), blendValue = {};
      for (let key in output)
        origin[key] !== void 0 && target[key] !== void 0 && (blendValue[key] = getMixer(origin[key], target[key]));
      return (v4) => {
        for (let key in blendValue)
          output[key] = blendValue[key](v4);
        return output;
      };
    };
    function analyse(value) {
      let parsed = styleValueTypes.complex.parse(value), numValues = parsed.length, numNumbers = 0, numRGB = 0, numHSL = 0;
      for (let i7 = 0; i7 < numValues; i7++)
        numNumbers || typeof parsed[i7] == "number" ? numNumbers++ : parsed[i7].hue !== void 0 ? numHSL++ : numRGB++;
      return { parsed, numNumbers, numRGB, numHSL };
    }
    var mixComplex = (origin, target) => {
      let template = styleValueTypes.complex.createTransformer(target), originStats = analyse(origin), targetStats = analyse(target);
      return originStats.numHSL === targetStats.numHSL && originStats.numRGB === targetStats.numRGB && originStats.numNumbers >= targetStats.numNumbers ? pipe(mixArray(originStats.parsed, targetStats.parsed), template) : (heyListen.warning(!0, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`), (p7) => `${p7 > 0 ? target : origin}`);
    }, mixNumber = (from, to) => (p7) => mix2(from, to, p7);
    function detectMixerFactory(v4) {
      if (typeof v4 == "number")
        return mixNumber;
      if (typeof v4 == "string")
        return styleValueTypes.color.test(v4) ? mixColor : mixComplex;
      if (Array.isArray(v4))
        return mixArray;
      if (typeof v4 == "object")
        return mixObject;
    }
    function createMixers(output, ease, customMixer) {
      let mixers = [], mixerFactory = customMixer || detectMixerFactory(output[0]), numMixers = output.length - 1;
      for (let i7 = 0; i7 < numMixers; i7++) {
        let mixer = mixerFactory(output[i7], output[i7 + 1]);
        if (ease) {
          let easingFunction = Array.isArray(ease) ? ease[i7] : ease;
          mixer = pipe(easingFunction, mixer);
        }
        mixers.push(mixer);
      }
      return mixers;
    }
    function fastInterpolate([from, to], [mixer]) {
      return (v4) => mixer(progress2(from, to, v4));
    }
    function slowInterpolate(input, mixers) {
      let inputLength = input.length, lastInputIndex = inputLength - 1;
      return (v4) => {
        let mixerIndex = 0, foundMixerIndex = !1;
        if (v4 <= input[0] ? foundMixerIndex = !0 : v4 >= input[lastInputIndex] && (mixerIndex = lastInputIndex - 1, foundMixerIndex = !0), !foundMixerIndex) {
          let i7 = 1;
          for (; i7 < inputLength && !(input[i7] > v4 || i7 === lastInputIndex); i7++)
            ;
          mixerIndex = i7 - 1;
        }
        let progressInRange = progress2(input[mixerIndex], input[mixerIndex + 1], v4);
        return mixers[mixerIndex](progressInRange);
      };
    }
    function interpolate2(input, output, { clamp: isClamp = !0, ease, mixer } = {}) {
      let inputLength = input.length;
      heyListen.invariant(inputLength === output.length, "Both input and output ranges must be the same length"), heyListen.invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, "Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values."), input[0] > input[inputLength - 1] && (input = [].concat(input), output = [].concat(output), input.reverse(), output.reverse());
      let mixers = createMixers(output, ease, mixer), interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);
      return isClamp ? (v4) => interpolator(clamp2(input[0], input[inputLength - 1], v4)) : interpolator;
    }
    var reverseEasing = (easing) => (p7) => 1 - easing(1 - p7), mirrorEasing = (easing) => (p7) => p7 <= 0.5 ? easing(2 * p7) / 2 : (2 - easing(2 * (1 - p7))) / 2, createExpoIn = (power) => (p7) => Math.pow(p7, power), createBackIn = (power) => (p7) => p7 * p7 * ((power + 1) * p7 - power), createAnticipate = (power) => {
      let backEasing = createBackIn(power);
      return (p7) => (p7 *= 2) < 1 ? 0.5 * backEasing(p7) : 0.5 * (2 - Math.pow(2, -10 * (p7 - 1)));
    }, DEFAULT_OVERSHOOT_STRENGTH = 1.525, BOUNCE_FIRST_THRESHOLD = 4 / 11, BOUNCE_SECOND_THRESHOLD = 8 / 11, BOUNCE_THIRD_THRESHOLD = 9 / 10, linear = (p7) => p7, easeIn = createExpoIn(2), easeOut = reverseEasing(easeIn), easeInOut = mirrorEasing(easeIn), circIn = (p7) => 1 - Math.sin(Math.acos(p7)), circOut = reverseEasing(circIn), circInOut = mirrorEasing(circOut), backIn = createBackIn(DEFAULT_OVERSHOOT_STRENGTH), backOut = reverseEasing(backIn), backInOut = mirrorEasing(backIn), anticipate = createAnticipate(DEFAULT_OVERSHOOT_STRENGTH), ca = 4356 / 361, cb = 35442 / 1805, cc = 16061 / 1805, bounceOut = (p7) => {
      if (p7 === 1 || p7 === 0)
        return p7;
      let p22 = p7 * p7;
      return p7 < BOUNCE_FIRST_THRESHOLD ? 7.5625 * p22 : p7 < BOUNCE_SECOND_THRESHOLD ? 9.075 * p22 - 9.9 * p7 + 3.4 : p7 < BOUNCE_THIRD_THRESHOLD ? ca * p22 - cb * p7 + cc : 10.8 * p7 * p7 - 20.52 * p7 + 10.72;
    }, bounceIn = reverseEasing(bounceOut), bounceInOut = (p7) => p7 < 0.5 ? 0.5 * (1 - bounceOut(1 - p7 * 2)) : 0.5 * bounceOut(p7 * 2 - 1) + 0.5;
    function defaultEasing(values, easing) {
      return values.map(() => easing || easeInOut).splice(0, values.length - 1);
    }
    function defaultOffset3(values) {
      let numValues = values.length;
      return values.map((_value, i7) => i7 !== 0 ? i7 / (numValues - 1) : 0);
    }
    function convertOffsetToTimes(offset, duration) {
      return offset.map((o11) => o11 * duration);
    }
    function keyframes({ from = 0, to = 1, ease, offset, duration = 300 }) {
      let state = { done: !1, value: from }, values = Array.isArray(to) ? to : [from, to], times = convertOffsetToTimes(offset && offset.length === values.length ? offset : defaultOffset3(values), duration);
      function createInterpolator() {
        return interpolate2(times, values, {
          ease: Array.isArray(ease) ? ease : defaultEasing(values, ease)
        });
      }
      let interpolator = createInterpolator();
      return {
        next: (t18) => (state.value = interpolator(t18), state.done = t18 >= duration, state),
        flipTarget: () => {
          values.reverse(), interpolator = createInterpolator();
        }
      };
    }
    function decay({ velocity = 0, from = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget }) {
      let state = { done: !1, value: from }, amplitude = power * velocity, ideal = from + amplitude, target = modifyTarget === void 0 ? ideal : modifyTarget(ideal);
      return target !== ideal && (amplitude = target - from), {
        next: (t18) => {
          let delta = -amplitude * Math.exp(-t18 / timeConstant);
          return state.done = !(delta > restDelta || delta < -restDelta), state.value = state.done ? target : target + delta, state;
        },
        flipTarget: () => {
        }
      };
    }
    var types = { keyframes, spring: spring3, decay };
    function detectAnimationFromOptions(config) {
      if (Array.isArray(config.to))
        return keyframes;
      if (types[config.type])
        return types[config.type];
      let keys2 = new Set(Object.keys(config));
      return keys2.has("ease") || keys2.has("duration") && !keys2.has("dampingRatio") ? keyframes : keys2.has("dampingRatio") || keys2.has("stiffness") || keys2.has("mass") || keys2.has("damping") || keys2.has("restSpeed") || keys2.has("restDelta") ? spring3 : keyframes;
    }
    function loopElapsed(elapsed, duration, delay = 0) {
      return elapsed - duration - delay;
    }
    function reverseElapsed(elapsed, duration, delay = 0, isForwardPlayback = !0) {
      return isForwardPlayback ? loopElapsed(duration + -elapsed, duration, delay) : duration - (elapsed - duration) + delay;
    }
    function hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {
      return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;
    }
    var framesync = (update) => {
      let passTimestamp = ({ delta }) => update(delta);
      return {
        start: () => sync__default.default.update(passTimestamp, !0),
        stop: () => sync.cancelSync.update(passTimestamp)
      };
    };
    function animate2(_a2) {
      var _b, _c, { from, autoplay = !0, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = "loop", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate } = _a2, options = tslib.__rest(_a2, ["from", "autoplay", "driver", "elapsed", "repeat", "repeatType", "repeatDelay", "onPlay", "onStop", "onComplete", "onRepeat", "onUpdate"]);
      let { to } = options, driverControls, repeatCount = 0, computedDuration = options.duration, latest, isComplete = !1, isForwardPlayback = !0, interpolateFromNumber, animator = detectAnimationFromOptions(options);
      !((_c = (_b = animator).needsInterpolation) === null || _c === void 0) && _c.call(_b, from, to) && (interpolateFromNumber = interpolate2([0, 100], [from, to], {
        clamp: !1
      }), from = 0, to = 100);
      let animation = animator(Object.assign(Object.assign({}, options), { from, to }));
      function repeat() {
        repeatCount++, repeatType === "reverse" ? (isForwardPlayback = repeatCount % 2 === 0, elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback)) : (elapsed = loopElapsed(elapsed, computedDuration, repeatDelay), repeatType === "mirror" && animation.flipTarget()), isComplete = !1, onRepeat && onRepeat();
      }
      function complete() {
        driverControls.stop(), onComplete && onComplete();
      }
      function update(delta) {
        if (isForwardPlayback || (delta = -delta), elapsed += delta, !isComplete) {
          let state = animation.next(Math.max(0, elapsed));
          latest = state.value, interpolateFromNumber && (latest = interpolateFromNumber(latest)), isComplete = isForwardPlayback ? state.done : elapsed <= 0;
        }
        onUpdate == null || onUpdate(latest), isComplete && (repeatCount === 0 && (computedDuration ?? (computedDuration = elapsed)), repeatCount < repeatMax ? hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat() : complete());
      }
      function play() {
        onPlay == null || onPlay(), driverControls = driver(update), driverControls.start();
      }
      return autoplay && play(), {
        stop: () => {
          onStop == null || onStop(), driverControls.stop();
        }
      };
    }
    function velocityPerSecond2(velocity, frameDuration) {
      return frameDuration ? velocity * (1e3 / frameDuration) : 0;
    }
    function inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop }) {
      let currentAnimation;
      function isOutOfBounds(v4) {
        return min !== void 0 && v4 < min || max !== void 0 && v4 > max;
      }
      function boundaryNearest(v4) {
        return min === void 0 ? max : max === void 0 || Math.abs(min - v4) < Math.abs(max - v4) ? min : max;
      }
      function startAnimation(options) {
        currentAnimation == null || currentAnimation.stop(), currentAnimation = animate2(Object.assign(Object.assign({}, options), {
          driver,
          onUpdate: (v4) => {
            var _a2;
            onUpdate == null || onUpdate(v4), (_a2 = options.onUpdate) === null || _a2 === void 0 || _a2.call(options, v4);
          },
          onComplete,
          onStop
        }));
      }
      function startSpring(options) {
        startAnimation(Object.assign({ type: "spring", stiffness: bounceStiffness, damping: bounceDamping, restDelta }, options));
      }
      if (isOutOfBounds(from))
        startSpring({ from, velocity, to: boundaryNearest(from) });
      else {
        let target = power * velocity + from;
        typeof modifyTarget < "u" && (target = modifyTarget(target));
        let boundary = boundaryNearest(target), heading = boundary === min ? -1 : 1, prev, current, checkBoundary = (v4) => {
          prev = current, current = v4, velocity = velocityPerSecond2(v4 - prev, sync.getFrameData().delta), (heading === 1 && v4 > boundary || heading === -1 && v4 < boundary) && startSpring({ from: v4, to: boundary, velocity });
        };
        startAnimation({
          type: "decay",
          from,
          velocity,
          timeConstant,
          power,
          restDelta,
          modifyTarget,
          onUpdate: isOutOfBounds(target) ? checkBoundary : void 0
        });
      }
      return {
        stop: () => currentAnimation == null ? void 0 : currentAnimation.stop()
      };
    }
    var radiansToDegrees = (radians) => radians * 180 / Math.PI, angle = (a14, b7 = zeroPoint) => radiansToDegrees(Math.atan2(b7.y - a14.y, b7.x - a14.x)), applyOffset = (from, to) => {
      let hasReceivedFrom = !0;
      return to === void 0 && (to = from, hasReceivedFrom = !1), (v4) => hasReceivedFrom ? v4 - from + to : (from = v4, hasReceivedFrom = !0, to);
    }, identity = (v4) => v4, createAttractor = (alterDisplacement = identity) => (constant, origin, v4) => {
      let displacement = origin - v4, springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));
      return displacement <= 0 ? origin + springModifiedDisplacement : origin - springModifiedDisplacement;
    }, attract = createAttractor(), attractExpo = createAttractor(Math.sqrt), degreesToRadians = (degrees) => degrees * Math.PI / 180, isPoint = (point2) => point2.hasOwnProperty("x") && point2.hasOwnProperty("y"), isPoint3D = (point2) => isPoint(point2) && point2.hasOwnProperty("z"), distance1D = (a14, b7) => Math.abs(a14 - b7);
    function distance(a14, b7) {
      if (isNum(a14) && isNum(b7))
        return distance1D(a14, b7);
      if (isPoint(a14) && isPoint(b7)) {
        let xDelta = distance1D(a14.x, b7.x), yDelta = distance1D(a14.y, b7.y), zDelta = isPoint3D(a14) && isPoint3D(b7) ? distance1D(a14.z, b7.z) : 0;
        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));
      }
    }
    var pointFromVector = (origin, angle2, distance2) => (angle2 = degreesToRadians(angle2), {
      x: distance2 * Math.cos(angle2) + origin.x,
      y: distance2 * Math.sin(angle2) + origin.y
    }), toDecimal = (num, precision = 2) => (precision = Math.pow(10, precision), Math.round(num * precision) / precision), smoothFrame = (prevValue, nextValue, duration, smoothing = 0) => toDecimal(prevValue + duration * (nextValue - prevValue) / Math.max(smoothing, duration)), smooth = (strength = 50) => {
      let previousValue = 0, lastUpdated = 0;
      return (v4) => {
        let currentFramestamp = sync.getFrameData().timestamp, timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0, newValue = timeDelta ? smoothFrame(previousValue, v4, timeDelta, strength) : previousValue;
        return lastUpdated = currentFramestamp, previousValue = newValue, newValue;
      };
    }, snap = (points) => {
      if (typeof points == "number")
        return (v4) => Math.round(v4 / points) * points;
      {
        let i7 = 0, numPoints = points.length;
        return (v4) => {
          let lastDistance = Math.abs(points[0] - v4);
          for (i7 = 1; i7 < numPoints; i7++) {
            let point2 = points[i7], distance2 = Math.abs(point2 - v4);
            if (distance2 === 0)
              return point2;
            if (distance2 > lastDistance)
              return points[i7 - 1];
            if (i7 === numPoints - 1)
              return point2;
            lastDistance = distance2;
          }
        };
      }
    };
    function velocityPerFrame(xps, frameDuration) {
      return xps / (1e3 / frameDuration);
    }
    var wrap2 = (min, max, v4) => {
      let rangeSize = max - min;
      return ((v4 - min) % rangeSize + rangeSize) % rangeSize + min;
    }, a13 = (a1, a22) => 1 - 3 * a22 + 3 * a1, b6 = (a1, a22) => 3 * a22 - 6 * a1, c13 = (a1) => 3 * a1, calcBezier2 = (t18, a1, a22) => ((a13(a1, a22) * t18 + b6(a1, a22)) * t18 + c13(a1)) * t18, getSlope = (t18, a1, a22) => 3 * a13(a1, a22) * t18 * t18 + 2 * b6(a1, a22) * t18 + c13(a1), subdivisionPrecision2 = 1e-7, subdivisionMaxIterations2 = 10;
    function binarySubdivide2(aX, aA, aB, mX1, mX2) {
      let currentX, currentT, i7 = 0;
      do
        currentT = aA + (aB - aA) / 2, currentX = calcBezier2(currentT, mX1, mX2) - aX, currentX > 0 ? aB = currentT : aA = currentT;
      while (Math.abs(currentX) > subdivisionPrecision2 && ++i7 < subdivisionMaxIterations2);
      return currentT;
    }
    var newtonIterations = 8, newtonMinSlope = 1e-3;
    function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
      for (let i7 = 0; i7 < newtonIterations; ++i7) {
        let currentSlope = getSlope(aGuessT, mX1, mX2);
        if (currentSlope === 0)
          return aGuessT;
        let currentX = calcBezier2(aGuessT, mX1, mX2) - aX;
        aGuessT -= currentX / currentSlope;
      }
      return aGuessT;
    }
    var kSplineTableSize = 11, kSampleStepSize = 1 / (kSplineTableSize - 1);
    function cubicBezier2(mX1, mY1, mX2, mY2) {
      if (mX1 === mY1 && mX2 === mY2)
        return linear;
      let sampleValues = new Float32Array(kSplineTableSize);
      for (let i7 = 0; i7 < kSplineTableSize; ++i7)
        sampleValues[i7] = calcBezier2(i7 * kSampleStepSize, mX1, mX2);
      function getTForX(aX) {
        let intervalStart = 0, currentSample = 1, lastSample = kSplineTableSize - 1;
        for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample)
          intervalStart += kSampleStepSize;
        --currentSample;
        let dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]), guessForT = intervalStart + dist * kSampleStepSize, initialSlope = getSlope(guessForT, mX1, mX2);
        return initialSlope >= newtonMinSlope ? newtonRaphsonIterate(aX, guessForT, mX1, mX2) : initialSlope === 0 ? guessForT : binarySubdivide2(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);
      }
      return (t18) => t18 === 0 || t18 === 1 ? t18 : calcBezier2(getTForX(t18), mY1, mY2);
    }
    var steps2 = (steps3, direction = "end") => (progress3) => {
      progress3 = direction === "end" ? Math.min(progress3, 0.999) : Math.max(progress3, 1e-3);
      let expanded = progress3 * steps3, rounded = direction === "end" ? Math.floor(expanded) : Math.ceil(expanded);
      return clamp2(0, 1, rounded / steps3);
    };
    exports.angle = angle;
    exports.animate = animate2;
    exports.anticipate = anticipate;
    exports.applyOffset = applyOffset;
    exports.attract = attract;
    exports.attractExpo = attractExpo;
    exports.backIn = backIn;
    exports.backInOut = backInOut;
    exports.backOut = backOut;
    exports.bounceIn = bounceIn;
    exports.bounceInOut = bounceInOut;
    exports.bounceOut = bounceOut;
    exports.circIn = circIn;
    exports.circInOut = circInOut;
    exports.circOut = circOut;
    exports.clamp = clamp2;
    exports.createAnticipate = createAnticipate;
    exports.createAttractor = createAttractor;
    exports.createBackIn = createBackIn;
    exports.createExpoIn = createExpoIn;
    exports.cubicBezier = cubicBezier2;
    exports.decay = decay;
    exports.degreesToRadians = degreesToRadians;
    exports.distance = distance;
    exports.easeIn = easeIn;
    exports.easeInOut = easeInOut;
    exports.easeOut = easeOut;
    exports.inertia = inertia;
    exports.interpolate = interpolate2;
    exports.isPoint = isPoint;
    exports.isPoint3D = isPoint3D;
    exports.keyframes = keyframes;
    exports.linear = linear;
    exports.mirrorEasing = mirrorEasing;
    exports.mix = mix2;
    exports.mixColor = mixColor;
    exports.mixComplex = mixComplex;
    exports.pipe = pipe;
    exports.pointFromVector = pointFromVector;
    exports.progress = progress2;
    exports.radiansToDegrees = radiansToDegrees;
    exports.reverseEasing = reverseEasing;
    exports.smooth = smooth;
    exports.smoothFrame = smoothFrame;
    exports.snap = snap;
    exports.spring = spring3;
    exports.steps = steps2;
    exports.toDecimal = toDecimal;
    exports.velocityPerFrame = velocityPerFrame;
    exports.velocityPerSecond = velocityPerSecond2;
    exports.wrap = wrap2;
  }
});

// node_modules/@motionone/types/dist/MotionValue.es.js
var MotionValue, init_MotionValue_es = __esm({
  "node_modules/@motionone/types/dist/MotionValue.es.js"() {
    MotionValue = class {
      setAnimation(animation) {
        this.animation = animation, animation == null || animation.finished.then(() => this.clearAnimation()).catch(() => {
        });
      }
      clearAnimation() {
        this.animation = this.generator = void 0;
      }
    };
  }
});

// node_modules/@motionone/types/dist/index.es.js
var init_index_es = __esm({
  "node_modules/@motionone/types/dist/index.es.js"() {
    init_MotionValue_es();
  }
});

// node_modules/@motionone/dom/dist/animate/data.es.js
function getAnimationData(element) {
  return data.has(element) || data.set(element, {
    transforms: [],
    values: /* @__PURE__ */ new Map()
  }), data.get(element);
}
function getMotionValue(motionValues, name) {
  return motionValues.has(name) || motionValues.set(name, new MotionValue()), motionValues.get(name);
}
var data, init_data_es = __esm({
  "node_modules/@motionone/dom/dist/animate/data.es.js"() {
    init_index_es();
    data = /* @__PURE__ */ new WeakMap();
  }
});

// node_modules/@motionone/utils/dist/array.es.js
function addUniqueItem(array, item) {
  array.indexOf(item) === -1 && array.push(item);
}
function removeItem(arr, item) {
  let index3 = arr.indexOf(item);
  index3 > -1 && arr.splice(index3, 1);
}
var init_array_es = __esm({
  "node_modules/@motionone/utils/dist/array.es.js"() {
  }
});

// node_modules/@motionone/utils/dist/clamp.es.js
var clamp, init_clamp_es = __esm({
  "node_modules/@motionone/utils/dist/clamp.es.js"() {
    clamp = (min, max, v4) => Math.min(Math.max(v4, min), max);
  }
});

// node_modules/@motionone/utils/dist/defaults.es.js
var defaults, init_defaults_es = __esm({
  "node_modules/@motionone/utils/dist/defaults.es.js"() {
    defaults = {
      duration: 0.3,
      delay: 0,
      endDelay: 0,
      repeat: 0,
      easing: "ease"
    };
  }
});

// node_modules/@motionone/utils/dist/is-number.es.js
var isNumber, init_is_number_es = __esm({
  "node_modules/@motionone/utils/dist/is-number.es.js"() {
    isNumber = (value) => typeof value == "number";
  }
});

// node_modules/@motionone/utils/dist/is-easing-list.es.js
var isEasingList, init_is_easing_list_es = __esm({
  "node_modules/@motionone/utils/dist/is-easing-list.es.js"() {
    init_is_number_es();
    isEasingList = (easing) => Array.isArray(easing) && !isNumber(easing[0]);
  }
});

// node_modules/@motionone/utils/dist/wrap.es.js
var wrap, init_wrap_es = __esm({
  "node_modules/@motionone/utils/dist/wrap.es.js"() {
    wrap = (min, max, v4) => {
      let rangeSize = max - min;
      return ((v4 - min) % rangeSize + rangeSize) % rangeSize + min;
    };
  }
});

// node_modules/@motionone/utils/dist/easing.es.js
function getEasingForSegment(easing, i7) {
  return isEasingList(easing) ? easing[wrap(0, easing.length, i7)] : easing;
}
var init_easing_es = __esm({
  "node_modules/@motionone/utils/dist/easing.es.js"() {
    init_is_easing_list_es();
    init_wrap_es();
  }
});

// node_modules/@motionone/utils/dist/mix.es.js
var mix, init_mix_es = __esm({
  "node_modules/@motionone/utils/dist/mix.es.js"() {
    mix = (min, max, progress2) => -progress2 * min + progress2 * max + min;
  }
});

// node_modules/@motionone/utils/dist/noop.es.js
var noop, noopReturn, init_noop_es = __esm({
  "node_modules/@motionone/utils/dist/noop.es.js"() {
    noop = () => {
    }, noopReturn = (v4) => v4;
  }
});

// node_modules/@motionone/utils/dist/progress.es.js
var progress, init_progress_es = __esm({
  "node_modules/@motionone/utils/dist/progress.es.js"() {
    progress = (min, max, value) => max - min === 0 ? 1 : (value - min) / (max - min);
  }
});

// node_modules/@motionone/utils/dist/offset.es.js
function fillOffset(offset, remaining) {
  let min = offset[offset.length - 1];
  for (let i7 = 1; i7 <= remaining; i7++) {
    let offsetProgress = progress(0, remaining, i7);
    offset.push(mix(min, 1, offsetProgress));
  }
}
function defaultOffset(length2) {
  let offset = [0];
  return fillOffset(offset, length2 - 1), offset;
}
var init_offset_es = __esm({
  "node_modules/@motionone/utils/dist/offset.es.js"() {
    init_mix_es();
    init_progress_es();
  }
});

// node_modules/@motionone/utils/dist/interpolate.es.js
function interpolate(output, input = defaultOffset(output.length), easing = noopReturn) {
  let length2 = output.length, remainder = length2 - input.length;
  return remainder > 0 && fillOffset(input, remainder), (t18) => {
    let i7 = 0;
    for (; i7 < length2 - 2 && !(t18 < input[i7 + 1]); i7++)
      ;
    let progressInRange = clamp(0, 1, progress(input[i7], input[i7 + 1], t18));
    return progressInRange = getEasingForSegment(easing, i7)(progressInRange), mix(output[i7], output[i7 + 1], progressInRange);
  };
}
var init_interpolate_es = __esm({
  "node_modules/@motionone/utils/dist/interpolate.es.js"() {
    init_mix_es();
    init_noop_es();
    init_offset_es();
    init_progress_es();
    init_easing_es();
    init_clamp_es();
  }
});

// node_modules/@motionone/utils/dist/is-cubic-bezier.es.js
var isCubicBezier, init_is_cubic_bezier_es = __esm({
  "node_modules/@motionone/utils/dist/is-cubic-bezier.es.js"() {
    init_is_number_es();
    isCubicBezier = (easing) => Array.isArray(easing) && isNumber(easing[0]);
  }
});

// node_modules/@motionone/utils/dist/is-easing-generator.es.js
var isEasingGenerator, init_is_easing_generator_es = __esm({
  "node_modules/@motionone/utils/dist/is-easing-generator.es.js"() {
    isEasingGenerator = (easing) => typeof easing == "object" && Boolean(easing.createAnimation);
  }
});

// node_modules/@motionone/utils/dist/is-function.es.js
var isFunction, init_is_function_es = __esm({
  "node_modules/@motionone/utils/dist/is-function.es.js"() {
    isFunction = (value) => typeof value == "function";
  }
});

// node_modules/@motionone/utils/dist/is-string.es.js
var isString, init_is_string_es = __esm({
  "node_modules/@motionone/utils/dist/is-string.es.js"() {
    isString = (value) => typeof value == "string";
  }
});

// node_modules/@motionone/utils/dist/time.es.js
var time, init_time_es = __esm({
  "node_modules/@motionone/utils/dist/time.es.js"() {
    time = {
      ms: (seconds) => seconds * 1e3,
      s: (milliseconds) => milliseconds / 1e3
    };
  }
});

// node_modules/@motionone/utils/dist/velocity.es.js
function velocityPerSecond(velocity, frameDuration) {
  return frameDuration ? velocity * (1e3 / frameDuration) : 0;
}
var init_velocity_es = __esm({
  "node_modules/@motionone/utils/dist/velocity.es.js"() {
  }
});

// node_modules/@motionone/utils/dist/index.es.js
var init_index_es2 = __esm({
  "node_modules/@motionone/utils/dist/index.es.js"() {
    init_array_es();
    init_clamp_es();
    init_defaults_es();
    init_easing_es();
    init_interpolate_es();
    init_is_cubic_bezier_es();
    init_is_easing_generator_es();
    init_is_easing_list_es();
    init_is_function_es();
    init_is_number_es();
    init_is_string_es();
    init_mix_es();
    init_noop_es();
    init_offset_es();
    init_progress_es();
    init_time_es();
    init_velocity_es();
  }
});

// node_modules/@motionone/dom/dist/animate/utils/transforms.es.js
var axes, order, transformAlias, rotation, baseTransformProperties, transformDefinitions, asTransformCssVar, transforms, compareTransformOrder, transformLookup, isTransform, addTransformToElement, buildTransformTemplate, transformListToString, init_transforms_es = __esm({
  "node_modules/@motionone/dom/dist/animate/utils/transforms.es.js"() {
    init_index_es2();
    init_data_es();
    axes = ["", "X", "Y", "Z"], order = ["translate", "scale", "rotate", "skew"], transformAlias = {
      x: "translateX",
      y: "translateY",
      z: "translateZ"
    }, rotation = {
      syntax: "<angle>",
      initialValue: "0deg",
      toDefaultUnit: (v4) => v4 + "deg"
    }, baseTransformProperties = {
      translate: {
        syntax: "<length-percentage>",
        initialValue: "0px",
        toDefaultUnit: (v4) => v4 + "px"
      },
      rotate: rotation,
      scale: {
        syntax: "<number>",
        initialValue: 1,
        toDefaultUnit: noopReturn
      },
      skew: rotation
    }, transformDefinitions = /* @__PURE__ */ new Map(), asTransformCssVar = (name) => `--motion-${name}`, transforms = ["x", "y", "z"];
    order.forEach((name) => {
      axes.forEach((axis) => {
        transforms.push(name + axis), transformDefinitions.set(asTransformCssVar(name + axis), baseTransformProperties[name]);
      });
    });
    compareTransformOrder = (a13, b6) => transforms.indexOf(a13) - transforms.indexOf(b6), transformLookup = new Set(transforms), isTransform = (name) => transformLookup.has(name), addTransformToElement = (element, name) => {
      transformAlias[name] && (name = transformAlias[name]);
      let { transforms: transforms2 } = getAnimationData(element);
      addUniqueItem(transforms2, name), element.style.transform = buildTransformTemplate(transforms2);
    }, buildTransformTemplate = (transforms2) => transforms2.sort(compareTransformOrder).reduce(transformListToString, "").trim(), transformListToString = (template, name) => `${template} ${name}(var(${asTransformCssVar(name)}))`;
  }
});

// node_modules/@motionone/dom/dist/animate/utils/css-var.es.js
function registerCssVariable(name) {
  if (!registeredProperties.has(name)) {
    registeredProperties.add(name);
    try {
      let { syntax, initialValue } = transformDefinitions.has(name) ? transformDefinitions.get(name) : {};
      CSS.registerProperty({
        name,
        inherits: !1,
        syntax,
        initialValue
      });
    } catch {
    }
  }
}
var isCssVar, registeredProperties, init_css_var_es = __esm({
  "node_modules/@motionone/dom/dist/animate/utils/css-var.es.js"() {
    init_transforms_es();
    isCssVar = (name) => name.startsWith("--"), registeredProperties = /* @__PURE__ */ new Set();
  }
});

// node_modules/@motionone/easing/dist/cubic-bezier.es.js
function binarySubdivide(x5, lowerBound, upperBound, mX1, mX2) {
  let currentX, currentT, i7 = 0;
  do
    currentT = lowerBound + (upperBound - lowerBound) / 2, currentX = calcBezier(currentT, mX1, mX2) - x5, currentX > 0 ? upperBound = currentT : lowerBound = currentT;
  while (Math.abs(currentX) > subdivisionPrecision && ++i7 < subdivisionMaxIterations);
  return currentT;
}
function cubicBezier(mX1, mY1, mX2, mY2) {
  if (mX1 === mY1 && mX2 === mY2)
    return noopReturn;
  let getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);
  return (t18) => t18 === 0 || t18 === 1 ? t18 : calcBezier(getTForX(t18), mY1, mY2);
}
var calcBezier, subdivisionPrecision, subdivisionMaxIterations, init_cubic_bezier_es = __esm({
  "node_modules/@motionone/easing/dist/cubic-bezier.es.js"() {
    init_index_es2();
    calcBezier = (t18, a1, a22) => (((1 - 3 * a22 + 3 * a1) * t18 + (3 * a22 - 6 * a1)) * t18 + 3 * a1) * t18, subdivisionPrecision = 1e-7, subdivisionMaxIterations = 12;
  }
});

// node_modules/@motionone/easing/dist/steps.es.js
var steps, init_steps_es = __esm({
  "node_modules/@motionone/easing/dist/steps.es.js"() {
    init_index_es2();
    steps = (steps2, direction = "end") => (progress2) => {
      progress2 = direction === "end" ? Math.min(progress2, 0.999) : Math.max(progress2, 1e-3);
      let expanded = progress2 * steps2, rounded = direction === "end" ? Math.floor(expanded) : Math.ceil(expanded);
      return clamp(0, 1, rounded / steps2);
    };
  }
});

// node_modules/@motionone/easing/dist/index.es.js
var init_index_es3 = __esm({
  "node_modules/@motionone/easing/dist/index.es.js"() {
    init_cubic_bezier_es();
    init_steps_es();
  }
});

// node_modules/@motionone/animation/dist/utils/easing.es.js
function getEasingFunction(definition) {
  if (isFunction(definition))
    return definition;
  if (isCubicBezier(definition))
    return cubicBezier(...definition);
  if (namedEasings[definition])
    return namedEasings[definition];
  if (definition.startsWith("steps")) {
    let args = functionArgsRegex.exec(definition);
    if (args) {
      let argsArray = args[1].split(",");
      return steps(parseFloat(argsArray[0]), argsArray[1].trim());
    }
  }
  return noopReturn;
}
var namedEasings, functionArgsRegex, init_easing_es2 = __esm({
  "node_modules/@motionone/animation/dist/utils/easing.es.js"() {
    init_index_es3();
    init_index_es2();
    namedEasings = {
      ease: cubicBezier(0.25, 0.1, 0.25, 1),
      "ease-in": cubicBezier(0.42, 0, 1, 1),
      "ease-in-out": cubicBezier(0.42, 0, 0.58, 1),
      "ease-out": cubicBezier(0, 0, 0.58, 1)
    }, functionArgsRegex = /\((.*?)\)/;
  }
});

// node_modules/@motionone/animation/dist/Animation.es.js
var Animation, init_Animation_es = __esm({
  "node_modules/@motionone/animation/dist/Animation.es.js"() {
    init_index_es2();
    init_easing_es2();
    Animation = class {
      constructor(output, keyframes = [0, 1], { easing, duration: initialDuration = defaults.duration, delay = defaults.delay, endDelay = defaults.endDelay, repeat = defaults.repeat, offset, direction = "normal" } = {}) {
        if (this.startTime = null, this.rate = 1, this.t = 0, this.cancelTimestamp = null, this.easing = noopReturn, this.duration = 0, this.totalDuration = 0, this.repeat = 0, this.playState = "idle", this.finished = new Promise((resolve, reject) => {
          this.resolve = resolve, this.reject = reject;
        }), easing = easing || defaults.easing, isEasingGenerator(easing)) {
          let custom = easing.createAnimation(keyframes);
          easing = custom.easing, keyframes = custom.keyframes || keyframes, initialDuration = custom.duration || initialDuration;
        }
        this.repeat = repeat, this.easing = isEasingList(easing) ? noopReturn : getEasingFunction(easing), this.updateDuration(initialDuration);
        let interpolate$1 = interpolate(keyframes, offset, isEasingList(easing) ? easing.map(getEasingFunction) : noopReturn);
        this.tick = (timestamp) => {
          var _a2;
          delay = delay;
          let t18 = 0;
          this.pauseTime !== void 0 ? t18 = this.pauseTime : t18 = (timestamp - this.startTime) * this.rate, this.t = t18, t18 /= 1e3, t18 = Math.max(t18 - delay, 0), this.playState === "finished" && this.pauseTime === void 0 && (t18 = this.totalDuration);
          let progress2 = t18 / this.duration, currentIteration = Math.floor(progress2), iterationProgress = progress2 % 1;
          !iterationProgress && progress2 >= 1 && (iterationProgress = 1), iterationProgress === 1 && currentIteration--;
          let iterationIsOdd = currentIteration % 2;
          (direction === "reverse" || direction === "alternate" && iterationIsOdd || direction === "alternate-reverse" && !iterationIsOdd) && (iterationProgress = 1 - iterationProgress);
          let p7 = t18 >= this.totalDuration ? 1 : Math.min(iterationProgress, 1), latest = interpolate$1(this.easing(p7));
          output(latest), this.pauseTime === void 0 && (this.playState === "finished" || t18 >= this.totalDuration + endDelay) ? (this.playState = "finished", (_a2 = this.resolve) === null || _a2 === void 0 || _a2.call(this, latest)) : this.playState !== "idle" && (this.frameRequestId = requestAnimationFrame(this.tick));
        }, this.play();
      }
      play() {
        let now = performance.now();
        this.playState = "running", this.pauseTime !== void 0 ? this.startTime = now - this.pauseTime : this.startTime || (this.startTime = now), this.cancelTimestamp = this.startTime, this.pauseTime = void 0, this.frameRequestId = requestAnimationFrame(this.tick);
      }
      pause() {
        this.playState = "paused", this.pauseTime = this.t;
      }
      finish() {
        this.playState = "finished", this.tick(0);
      }
      stop() {
        var _a2;
        this.playState = "idle", this.frameRequestId !== void 0 && cancelAnimationFrame(this.frameRequestId), (_a2 = this.reject) === null || _a2 === void 0 || _a2.call(this, !1);
      }
      cancel() {
        this.stop(), this.tick(this.cancelTimestamp);
      }
      reverse() {
        this.rate *= -1;
      }
      commitStyles() {
      }
      updateDuration(duration) {
        this.duration = duration, this.totalDuration = duration * (this.repeat + 1);
      }
      get currentTime() {
        return this.t;
      }
      set currentTime(t18) {
        this.pauseTime !== void 0 || this.rate === 0 ? this.pauseTime = t18 : this.startTime = performance.now() - t18 / this.rate;
      }
      get playbackRate() {
        return this.rate;
      }
      set playbackRate(rate) {
        this.rate = rate;
      }
    };
  }
});

// node_modules/@motionone/animation/dist/index.es.js
var init_index_es4 = __esm({
  "node_modules/@motionone/animation/dist/index.es.js"() {
    init_Animation_es();
    init_easing_es2();
  }
});

// node_modules/@motionone/dom/dist/animate/utils/easing.es.js
var convertEasing, cubicBezierAsString, init_easing_es3 = __esm({
  "node_modules/@motionone/dom/dist/animate/utils/easing.es.js"() {
    init_index_es2();
    convertEasing = (easing) => isCubicBezier(easing) ? cubicBezierAsString(easing) : easing, cubicBezierAsString = ([a13, b6, c13, d12]) => `cubic-bezier(${a13}, ${b6}, ${c13}, ${d12})`;
  }
});

// node_modules/@motionone/dom/dist/animate/utils/feature-detection.es.js
var testAnimation, featureTests, results, supports, init_feature_detection_es = __esm({
  "node_modules/@motionone/dom/dist/animate/utils/feature-detection.es.js"() {
    testAnimation = (keyframes) => document.createElement("div").animate(keyframes, { duration: 1e-3 }), featureTests = {
      cssRegisterProperty: () => typeof CSS < "u" && Object.hasOwnProperty.call(CSS, "registerProperty"),
      waapi: () => Object.hasOwnProperty.call(Element.prototype, "animate"),
      partialKeyframes: () => {
        try {
          testAnimation({ opacity: [1] });
        } catch {
          return !1;
        }
        return !0;
      },
      finished: () => Boolean(testAnimation({ opacity: [0, 1] }).finished)
    }, results = {}, supports = {};
    for (let key in featureTests)
      supports[key] = () => (results[key] === void 0 && (results[key] = featureTests[key]()), results[key]);
  }
});

// node_modules/@motionone/dom/dist/animate/utils/keyframes.es.js
function hydrateKeyframes(keyframes, readInitialValue) {
  for (let i7 = 0; i7 < keyframes.length; i7++)
    keyframes[i7] === null && (keyframes[i7] = i7 ? keyframes[i7 - 1] : readInitialValue());
  return keyframes;
}
var keyframesList, init_keyframes_es = __esm({
  "node_modules/@motionone/dom/dist/animate/utils/keyframes.es.js"() {
    keyframesList = (keyframes) => Array.isArray(keyframes) ? keyframes : [keyframes];
  }
});

// node_modules/@motionone/dom/dist/animate/utils/get-style-name.es.js
function getStyleName(key) {
  return transformAlias[key] && (key = transformAlias[key]), isTransform(key) ? asTransformCssVar(key) : key;
}
var init_get_style_name_es = __esm({
  "node_modules/@motionone/dom/dist/animate/utils/get-style-name.es.js"() {
    init_transforms_es();
  }
});

// node_modules/@motionone/dom/dist/animate/style.es.js
var style, init_style_es = __esm({
  "node_modules/@motionone/dom/dist/animate/style.es.js"() {
    init_css_var_es();
    init_get_style_name_es();
    init_transforms_es();
    style = {
      get: (element, name) => {
        name = getStyleName(name);
        let value = isCssVar(name) ? element.style.getPropertyValue(name) : getComputedStyle(element)[name];
        if (!value && value !== 0) {
          let definition = transformDefinitions.get(name);
          definition && (value = definition.initialValue);
        }
        return value;
      },
      set: (element, name, value) => {
        name = getStyleName(name), isCssVar(name) ? element.style.setProperty(name, value) : element.style[name] = value;
      }
    };
  }
});

// node_modules/@motionone/dom/dist/animate/utils/stop-animation.es.js
function stopAnimation(animation, needsCommit = !0) {
  if (!(!animation || animation.playState === "finished"))
    try {
      animation.stop ? animation.stop() : (needsCommit && animation.commitStyles(), animation.cancel());
    } catch {
    }
}
var init_stop_animation_es = __esm({
  "node_modules/@motionone/dom/dist/animate/utils/stop-animation.es.js"() {
  }
});

// node_modules/@motionone/dom/dist/animate/animate-style.es.js
function getDevToolsRecord() {
  return window.__MOTION_DEV_TOOLS_RECORD;
}
function animateStyle(element, key, keyframesDefinition, options = {}) {
  let record = getDevToolsRecord(), isRecording = options.record !== !1 && record, animation, { duration = defaults.duration, delay = defaults.delay, endDelay = defaults.endDelay, repeat = defaults.repeat, easing = defaults.easing, direction, offset, allowWebkitAcceleration = !1 } = options, data2 = getAnimationData(element), canAnimateNatively = supports.waapi(), valueIsTransform = isTransform(key);
  valueIsTransform && addTransformToElement(element, key);
  let name = getStyleName(key), motionValue = getMotionValue(data2.values, name), definition = transformDefinitions.get(name);
  return stopAnimation(motionValue.animation, !(isEasingGenerator(easing) && motionValue.generator) && options.record !== !1), () => {
    let readInitialValue = () => {
      var _a2, _b;
      return (_b = (_a2 = style.get(element, name)) !== null && _a2 !== void 0 ? _a2 : definition == null ? void 0 : definition.initialValue) !== null && _b !== void 0 ? _b : 0;
    }, keyframes = hydrateKeyframes(keyframesList(keyframesDefinition), readInitialValue);
    if (isEasingGenerator(easing)) {
      let custom = easing.createAnimation(keyframes, readInitialValue, valueIsTransform, name, motionValue);
      easing = custom.easing, custom.keyframes !== void 0 && (keyframes = custom.keyframes), custom.duration !== void 0 && (duration = custom.duration);
    }
    if (isCssVar(name) && (supports.cssRegisterProperty() ? registerCssVariable(name) : canAnimateNatively = !1), canAnimateNatively) {
      definition && (keyframes = keyframes.map((value) => isNumber(value) ? definition.toDefaultUnit(value) : value)), keyframes.length === 1 && (!supports.partialKeyframes() || isRecording) && keyframes.unshift(readInitialValue());
      let animationOptions = {
        delay: time.ms(delay),
        duration: time.ms(duration),
        endDelay: time.ms(endDelay),
        easing: isEasingList(easing) ? void 0 : convertEasing(easing),
        direction,
        iterations: repeat + 1,
        fill: "both"
      };
      animation = element.animate({
        [name]: keyframes,
        offset,
        easing: isEasingList(easing) ? easing.map(convertEasing) : void 0
      }, animationOptions), animation.finished || (animation.finished = new Promise((resolve, reject) => {
        animation.onfinish = resolve, animation.oncancel = reject;
      }));
      let target = keyframes[keyframes.length - 1];
      animation.finished.then(() => {
        style.set(element, name, target), animation.cancel();
      }).catch(noop), allowWebkitAcceleration || (animation.playbackRate = 1.000001);
    } else if (valueIsTransform) {
      keyframes = keyframes.map((value) => typeof value == "string" ? parseFloat(value) : value), keyframes.length === 1 && keyframes.unshift(parseFloat(readInitialValue()));
      let render = (latest) => {
        definition && (latest = definition.toDefaultUnit(latest)), style.set(element, name, latest);
      };
      animation = new Animation(render, keyframes, Object.assign(Object.assign({}, options), {
        duration,
        easing
      }));
    } else {
      let target = keyframes[keyframes.length - 1];
      style.set(element, name, definition && isNumber(target) ? definition.toDefaultUnit(target) : target);
    }
    return isRecording && record(element, key, keyframes, {
      duration,
      delay,
      easing,
      repeat,
      offset
    }, "motion-one"), motionValue.setAnimation(animation), animation;
  };
}
var init_animate_style_es = __esm({
  "node_modules/@motionone/dom/dist/animate/animate-style.es.js"() {
    init_data_es();
    init_css_var_es();
    init_index_es4();
    init_index_es2();
    init_transforms_es();
    init_easing_es3();
    init_feature_detection_es();
    init_keyframes_es();
    init_style_es();
    init_get_style_name_es();
    init_stop_animation_es();
  }
});

// node_modules/@motionone/dom/dist/animate/utils/options.es.js
var getOptions, init_options_es = __esm({
  "node_modules/@motionone/dom/dist/animate/utils/options.es.js"() {
    getOptions = (options, key) => (
      /**
       * TODO: Make test for this
       * Always return a new object otherwise delay is overwritten by results of stagger
       * and this results in no stagger
       */
      options[key] ? Object.assign(Object.assign({}, options), options[key]) : Object.assign({}, options)
    );
  }
});

// node_modules/@motionone/dom/dist/utils/resolve-elements.es.js
function resolveElements(elements, selectorCache) {
  var _a2;
  return typeof elements == "string" ? selectorCache ? ((_a2 = selectorCache[elements]) !== null && _a2 !== void 0 || (selectorCache[elements] = document.querySelectorAll(elements)), elements = selectorCache[elements]) : elements = document.querySelectorAll(elements) : elements instanceof Element && (elements = [elements]), Array.from(elements || []);
}
var init_resolve_elements_es = __esm({
  "node_modules/@motionone/dom/dist/utils/resolve-elements.es.js"() {
  }
});

// node_modules/@motionone/dom/dist/animate/utils/controls.es.js
var createAnimation, withControls, getActiveAnimation, controls, selectFinished, init_controls_es = __esm({
  "node_modules/@motionone/dom/dist/animate/utils/controls.es.js"() {
    init_index_es2();
    init_stop_animation_es();
    createAnimation = (factory) => factory(), withControls = (animationFactory, options, duration = defaults.duration) => new Proxy({
      animations: animationFactory.map(createAnimation).filter(Boolean),
      duration,
      options
    }, controls), getActiveAnimation = (state) => state.animations[0], controls = {
      get: (target, key) => {
        let activeAnimation = getActiveAnimation(target);
        switch (key) {
          case "duration":
            return target.duration;
          case "currentTime":
            return time.s((activeAnimation == null ? void 0 : activeAnimation[key]) || 0);
          case "playbackRate":
          case "playState":
            return activeAnimation == null ? void 0 : activeAnimation[key];
          case "finished":
            return target.finished || (target.finished = Promise.all(target.animations.map(selectFinished)).catch(noop)), target.finished;
          case "stop":
            return () => {
              target.animations.forEach((animation) => stopAnimation(animation));
            };
          case "forEachNative":
            return (callback) => {
              target.animations.forEach((animation) => callback(animation, target));
            };
          default:
            return typeof (activeAnimation == null ? void 0 : activeAnimation[key]) > "u" ? void 0 : () => target.animations.forEach((animation) => animation[key]());
        }
      },
      set: (target, key, value) => {
        switch (key) {
          case "currentTime":
            value = time.ms(value);
          case "currentTime":
          case "playbackRate":
            for (let i7 = 0; i7 < target.animations.length; i7++)
              target.animations[i7][key] = value;
            return !0;
        }
        return !1;
      }
    }, selectFinished = (animation) => animation.finished;
  }
});

// node_modules/@motionone/dom/dist/utils/stagger.es.js
function stagger(duration = 0.1, { start = 0, from = 0, easing } = {}) {
  return (i7, total) => {
    let fromIndex = isNumber(from) ? from : getFromIndex(from, total), distance = Math.abs(fromIndex - i7), delay = duration * distance;
    if (easing) {
      let maxDelay = total * duration;
      delay = getEasingFunction(easing)(delay / maxDelay) * maxDelay;
    }
    return start + delay;
  };
}
function getFromIndex(from, total) {
  if (from === "first")
    return 0;
  {
    let lastIndex = total - 1;
    return from === "last" ? lastIndex : lastIndex / 2;
  }
}
function resolveOption(option, i7, total) {
  return typeof option == "function" ? option(i7, total) : option;
}
var init_stagger_es = __esm({
  "node_modules/@motionone/dom/dist/utils/stagger.es.js"() {
    init_index_es2();
    init_index_es4();
  }
});

// node_modules/@motionone/dom/dist/animate/index.es.js
function animate(elements, keyframes, options = {}) {
  elements = resolveElements(elements);
  let numElements = elements.length, animationFactories = [];
  for (let i7 = 0; i7 < numElements; i7++) {
    let element = elements[i7];
    for (let key in keyframes) {
      let valueOptions = getOptions(options, key);
      valueOptions.delay = resolveOption(valueOptions.delay, i7, numElements);
      let animation = animateStyle(element, key, keyframes[key], valueOptions);
      animationFactories.push(animation);
    }
  }
  return withControls(
    animationFactories,
    options,
    /**
     * TODO:
     * If easing is set to spring or glide, duration will be dynamically
     * generated. Ideally we would dynamically generate this from
     * animation.effect.getComputedTiming().duration but this isn't
     * supported in iOS13 or our number polyfill. Perhaps it's possible
     * to Proxy animations returned from animateStyle that has duration
     * as a getter.
     */
    options.duration
  );
}
var init_index_es5 = __esm({
  "node_modules/@motionone/dom/dist/animate/index.es.js"() {
    init_animate_style_es();
    init_options_es();
    init_resolve_elements_es();
    init_controls_es();
    init_stagger_es();
  }
});

// node_modules/tslib/tslib.es6.mjs
function __rest2(s15, e5) {
  var t18 = {};
  for (var p7 in s15)
    Object.prototype.hasOwnProperty.call(s15, p7) && e5.indexOf(p7) < 0 && (t18[p7] = s15[p7]);
  if (s15 != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i7 = 0, p7 = Object.getOwnPropertySymbols(s15); i7 < p7.length; i7++)
      e5.indexOf(p7[i7]) < 0 && Object.prototype.propertyIsEnumerable.call(s15, p7[i7]) && (t18[p7[i7]] = s15[p7[i7]]);
  return t18;
}
var init_tslib_es6 = __esm({
  "node_modules/tslib/tslib.es6.mjs"() {
  }
});

// node_modules/@motionone/dom/dist/timeline/utils/calc-time.es.js
function calcNextTime(current, next, prev, labels) {
  var _a2;
  return isNumber(next) ? next : next.startsWith("-") || next.startsWith("+") ? Math.max(0, current + parseFloat(next)) : next === "<" ? prev : (_a2 = labels.get(next)) !== null && _a2 !== void 0 ? _a2 : current;
}
var init_calc_time_es = __esm({
  "node_modules/@motionone/dom/dist/timeline/utils/calc-time.es.js"() {
    init_index_es2();
  }
});

// node_modules/@motionone/dom/dist/timeline/utils/edit.es.js
function eraseKeyframes(sequence, startTime, endTime) {
  for (let i7 = 0; i7 < sequence.length; i7++) {
    let keyframe = sequence[i7];
    keyframe.at > startTime && keyframe.at < endTime && (removeItem(sequence, keyframe), i7--);
  }
}
function addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {
  eraseKeyframes(sequence, startTime, endTime);
  for (let i7 = 0; i7 < keyframes.length; i7++)
    sequence.push({
      value: keyframes[i7],
      at: mix(startTime, endTime, offset[i7]),
      easing: getEasingForSegment(easing, i7)
    });
}
var init_edit_es = __esm({
  "node_modules/@motionone/dom/dist/timeline/utils/edit.es.js"() {
    init_index_es2();
  }
});

// node_modules/@motionone/dom/dist/timeline/utils/sort.es.js
function compareByTime(a13, b6) {
  return a13.at === b6.at ? a13.value === null ? 1 : -1 : a13.at - b6.at;
}
var init_sort_es = __esm({
  "node_modules/@motionone/dom/dist/timeline/utils/sort.es.js"() {
  }
});

// node_modules/@motionone/dom/dist/timeline/index.es.js
function timeline(definition, options = {}) {
  var _a2;
  let animationDefinitions = createAnimationsFromTimeline(definition, options), animationFactories = animationDefinitions.map((definition2) => animateStyle(...definition2)).filter(Boolean);
  return withControls(
    animationFactories,
    options,
    // Get the duration from the first animation definition
    (_a2 = animationDefinitions[0]) === null || _a2 === void 0 ? void 0 : _a2[3].duration
  );
}
function createAnimationsFromTimeline(definition, _a2 = {}) {
  var { defaultOptions = {} } = _a2, timelineOptions = __rest2(_a2, ["defaultOptions"]);
  let animationDefinitions = [], elementSequences = /* @__PURE__ */ new Map(), elementCache = {}, timeLabels = /* @__PURE__ */ new Map(), prevTime = 0, currentTime = 0, totalDuration = 0;
  for (let i7 = 0; i7 < definition.length; i7++) {
    let segment = definition[i7];
    if (isString(segment)) {
      timeLabels.set(segment, currentTime);
      continue;
    } else if (!Array.isArray(segment)) {
      timeLabels.set(segment.name, calcNextTime(currentTime, segment.at, prevTime, timeLabels));
      continue;
    }
    let [elementDefinition, keyframes, options = {}] = segment;
    options.at !== void 0 && (currentTime = calcNextTime(currentTime, options.at, prevTime, timeLabels));
    let maxDuration2 = 0, elements = resolveElements(elementDefinition, elementCache), numElements = elements.length;
    for (let elementIndex = 0; elementIndex < numElements; elementIndex++) {
      let element = elements[elementIndex], elementSequence = getElementSequence(element, elementSequences);
      for (let key in keyframes) {
        let valueSequence = getValueSequence(key, elementSequence), valueKeyframes = keyframesList(keyframes[key]), valueOptions = getOptions(options, key), { duration = defaultOptions.duration || defaults.duration, easing = defaultOptions.easing || defaults.easing } = valueOptions;
        if (isEasingGenerator(easing)) {
          let valueIsTransform = isTransform(key);
          invariant4(valueKeyframes.length === 2 || !valueIsTransform, "spring must be provided 2 keyframes within timeline");
          let custom = easing.createAnimation(
            valueKeyframes,
            // TODO We currently only support explicit keyframes
            // so this doesn't currently read from the DOM
            () => "0",
            valueIsTransform
          );
          easing = custom.easing, custom.keyframes !== void 0 && (valueKeyframes = custom.keyframes), custom.duration !== void 0 && (duration = custom.duration);
        }
        let delay = resolveOption(options.delay, elementIndex, numElements) || 0, startTime = currentTime + delay, targetTime = startTime + duration, { offset = defaultOffset(valueKeyframes.length) } = valueOptions;
        offset.length === 1 && offset[0] === 0 && (offset[1] = 1);
        let remainder = length - valueKeyframes.length;
        remainder > 0 && fillOffset(offset, remainder), valueKeyframes.length === 1 && valueKeyframes.unshift(null), addKeyframes(valueSequence, valueKeyframes, easing, offset, startTime, targetTime), maxDuration2 = Math.max(delay + duration, maxDuration2), totalDuration = Math.max(targetTime, totalDuration);
      }
    }
    prevTime = currentTime, currentTime += maxDuration2;
  }
  return elementSequences.forEach((valueSequences, element) => {
    for (let key in valueSequences) {
      let valueSequence = valueSequences[key];
      valueSequence.sort(compareByTime);
      let keyframes = [], valueOffset = [], valueEasing = [];
      for (let i7 = 0; i7 < valueSequence.length; i7++) {
        let { at, value, easing } = valueSequence[i7];
        keyframes.push(value), valueOffset.push(progress(0, totalDuration, at)), valueEasing.push(easing || defaults.easing);
      }
      valueOffset[0] !== 0 && (valueOffset.unshift(0), keyframes.unshift(keyframes[0]), valueEasing.unshift("linear")), valueOffset[valueOffset.length - 1] !== 1 && (valueOffset.push(1), keyframes.push(null)), animationDefinitions.push([
        element,
        key,
        keyframes,
        Object.assign(Object.assign(Object.assign({}, defaultOptions), { duration: totalDuration, easing: valueEasing, offset: valueOffset }), timelineOptions)
      ]);
    }
  }), animationDefinitions;
}
function getElementSequence(element, sequences) {
  return !sequences.has(element) && sequences.set(element, {}), sequences.get(element);
}
function getValueSequence(name, sequences) {
  return sequences[name] || (sequences[name] = []), sequences[name];
}
var init_index_es6 = __esm({
  "node_modules/@motionone/dom/dist/timeline/index.es.js"() {
    init_tslib_es6();
    init_hey_listen_es();
    init_index_es2();
    init_stagger_es();
    init_animate_style_es();
    init_controls_es();
    init_keyframes_es();
    init_options_es();
    init_resolve_elements_es();
    init_transforms_es();
    init_calc_time_es();
    init_edit_es();
    init_sort_es();
  }
});

// node_modules/@motionone/generators/dist/utils/velocity.es.js
function calcGeneratorVelocity(resolveValue, t18, current) {
  let prevT = Math.max(t18 - sampleT, 0);
  return velocityPerSecond(current - resolveValue(prevT), t18 - prevT);
}
var sampleT, init_velocity_es2 = __esm({
  "node_modules/@motionone/generators/dist/utils/velocity.es.js"() {
    init_index_es2();
    sampleT = 5;
  }
});

// node_modules/@motionone/generators/dist/spring/defaults.es.js
var defaults2, init_defaults_es2 = __esm({
  "node_modules/@motionone/generators/dist/spring/defaults.es.js"() {
    defaults2 = {
      stiffness: 100,
      damping: 10,
      mass: 1
    };
  }
});

// node_modules/@motionone/generators/dist/spring/utils.es.js
var calcDampingRatio, init_utils_es = __esm({
  "node_modules/@motionone/generators/dist/spring/utils.es.js"() {
    init_defaults_es2();
    calcDampingRatio = (stiffness = defaults2.stiffness, damping = defaults2.damping, mass = defaults2.mass) => damping / (2 * Math.sqrt(stiffness * mass));
  }
});

// node_modules/@motionone/generators/dist/utils/has-reached-target.es.js
function hasReachedTarget(origin, target, current) {
  return origin < target && current >= target || origin > target && current <= target;
}
var init_has_reached_target_es = __esm({
  "node_modules/@motionone/generators/dist/utils/has-reached-target.es.js"() {
  }
});

// node_modules/@motionone/generators/dist/spring/index.es.js
var spring, init_index_es7 = __esm({
  "node_modules/@motionone/generators/dist/spring/index.es.js"() {
    init_index_es2();
    init_defaults_es2();
    init_utils_es();
    init_has_reached_target_es();
    init_velocity_es2();
    spring = ({ stiffness = defaults2.stiffness, damping = defaults2.damping, mass = defaults2.mass, from = 0, to = 1, velocity = 0, restSpeed, restDistance } = {}) => {
      velocity = velocity ? time.s(velocity) : 0;
      let state = {
        done: !1,
        hasReachedTarget: !1,
        current: from,
        target: to
      }, initialDelta = to - from, undampedAngularFreq = Math.sqrt(stiffness / mass) / 1e3, dampingRatio = calcDampingRatio(stiffness, damping, mass), isGranularScale = Math.abs(initialDelta) < 5;
      restSpeed || (restSpeed = isGranularScale ? 0.01 : 2), restDistance || (restDistance = isGranularScale ? 5e-3 : 0.5);
      let resolveSpring;
      if (dampingRatio < 1) {
        let angularFreq = undampedAngularFreq * Math.sqrt(1 - dampingRatio * dampingRatio);
        resolveSpring = (t18) => to - Math.exp(-dampingRatio * undampedAngularFreq * t18) * ((-velocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq * Math.sin(angularFreq * t18) + initialDelta * Math.cos(angularFreq * t18));
      } else
        resolveSpring = (t18) => to - Math.exp(-undampedAngularFreq * t18) * (initialDelta + (-velocity + undampedAngularFreq * initialDelta) * t18);
      return (t18) => {
        state.current = resolveSpring(t18);
        let currentVelocity = t18 === 0 ? velocity : calcGeneratorVelocity(resolveSpring, t18, state.current), isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed, isBelowDisplacementThreshold = Math.abs(to - state.current) <= restDistance;
        return state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold, state.hasReachedTarget = hasReachedTarget(from, to, state.current), state;
      };
    };
  }
});

// node_modules/@motionone/generators/dist/glide/index.es.js
var glide, init_index_es8 = __esm({
  "node_modules/@motionone/generators/dist/glide/index.es.js"() {
    init_index_es2();
    init_velocity_es2();
    init_index_es7();
    glide = ({ from = 0, velocity = 0, power = 0.8, decay = 0.325, bounceDamping, bounceStiffness, changeTarget, min, max, restDistance = 0.5, restSpeed }) => {
      decay = time.ms(decay);
      let state = {
        hasReachedTarget: !1,
        done: !1,
        current: from,
        target: from
      }, isOutOfBounds = (v4) => min !== void 0 && v4 < min || max !== void 0 && v4 > max, nearestBoundary = (v4) => min === void 0 ? max : max === void 0 || Math.abs(min - v4) < Math.abs(max - v4) ? min : max, amplitude = power * velocity, ideal = from + amplitude, target = changeTarget === void 0 ? ideal : changeTarget(ideal);
      state.target = target, target !== ideal && (amplitude = target - from);
      let calcDelta = (t18) => -amplitude * Math.exp(-t18 / decay), calcLatest = (t18) => target + calcDelta(t18), applyFriction = (t18) => {
        let delta = calcDelta(t18), latest = calcLatest(t18);
        state.done = Math.abs(delta) <= restDistance, state.current = state.done ? target : latest;
      }, timeReachedBoundary, spring$1, checkCatchBoundary = (t18) => {
        isOutOfBounds(state.current) && (timeReachedBoundary = t18, spring$1 = spring({
          from: state.current,
          to: nearestBoundary(state.current),
          velocity: calcGeneratorVelocity(calcLatest, t18, state.current),
          damping: bounceDamping,
          stiffness: bounceStiffness,
          restDistance,
          restSpeed
        }));
      };
      return checkCatchBoundary(0), (t18) => {
        let hasUpdatedFrame = !1;
        return !spring$1 && timeReachedBoundary === void 0 && (hasUpdatedFrame = !0, applyFriction(t18), checkCatchBoundary(t18)), timeReachedBoundary !== void 0 && t18 > timeReachedBoundary ? (state.hasReachedTarget = !0, spring$1(t18 - timeReachedBoundary)) : (state.hasReachedTarget = !1, !hasUpdatedFrame && applyFriction(t18), state);
      };
    };
  }
});

// node_modules/@motionone/generators/dist/utils/pregenerate-keyframes.es.js
function pregenerateKeyframes(generator, toUnit = noopReturn) {
  let overshootDuration, timestamp = timeStep, state = generator(0), keyframes = [toUnit(state.current)];
  for (; !state.done && timestamp < maxDuration; )
    state = generator(timestamp), keyframes.push(toUnit(state.done ? state.target : state.current)), overshootDuration === void 0 && state.hasReachedTarget && (overshootDuration = timestamp), timestamp += timeStep;
  let duration = timestamp - timeStep;
  return keyframes.length === 1 && keyframes.push(state.current), {
    keyframes,
    duration: duration / 1e3,
    overshootDuration: (overshootDuration ?? duration) / 1e3
  };
}
var timeStep, maxDuration, init_pregenerate_keyframes_es = __esm({
  "node_modules/@motionone/generators/dist/utils/pregenerate-keyframes.es.js"() {
    init_index_es2();
    timeStep = 10, maxDuration = 1e4;
  }
});

// node_modules/@motionone/generators/dist/index.es.js
var init_index_es9 = __esm({
  "node_modules/@motionone/generators/dist/index.es.js"() {
    init_index_es8();
    init_index_es7();
    init_pregenerate_keyframes_es();
    init_velocity_es2();
  }
});

// node_modules/@motionone/dom/dist/easing/create-generator-easing.es.js
function createGeneratorEasing(createGenerator) {
  let keyframesCache = /* @__PURE__ */ new WeakMap();
  return (options = {}) => {
    let generatorCache = /* @__PURE__ */ new Map(), getGenerator = (from = 0, to = 100, velocity = 0, isScale = !1) => {
      let key = `${from}-${to}-${velocity}-${isScale}`;
      return generatorCache.has(key) || generatorCache.set(key, createGenerator(Object.assign({
        from,
        to,
        velocity,
        restSpeed: isScale ? 0.05 : 2,
        restDistance: isScale ? 0.01 : 0.5
      }, options))), generatorCache.get(key);
    }, getKeyframes = (generator) => (keyframesCache.has(generator) || keyframesCache.set(generator, pregenerateKeyframes(generator)), keyframesCache.get(generator));
    return {
      createAnimation: (keyframes, getOrigin, canUseGenerator, name, motionValue) => {
        var _a2, _b;
        let settings, numKeyframes = keyframes.length;
        if (canUseGenerator && numKeyframes <= 2 && keyframes.every(isNumberOrNull)) {
          let target = keyframes[numKeyframes - 1], unresolvedOrigin = numKeyframes === 1 ? null : keyframes[0], velocity = 0, origin = 0, prevGenerator = motionValue == null ? void 0 : motionValue.generator;
          if (prevGenerator) {
            let { animation, generatorStartTime } = motionValue, startTime = (animation == null ? void 0 : animation.startTime) || generatorStartTime || 0, currentTime = (animation == null ? void 0 : animation.currentTime) || performance.now() - startTime, prevGeneratorCurrent = prevGenerator(currentTime).current;
            origin = (_a2 = unresolvedOrigin) !== null && _a2 !== void 0 ? _a2 : prevGeneratorCurrent, (numKeyframes === 1 || numKeyframes === 2 && keyframes[0] === null) && (velocity = calcGeneratorVelocity((t18) => prevGenerator(t18).current, currentTime, prevGeneratorCurrent));
          } else
            origin = (_b = unresolvedOrigin) !== null && _b !== void 0 ? _b : parseFloat(getOrigin());
          let generator = getGenerator(origin, target, velocity, name == null ? void 0 : name.includes("scale")), keyframesMetadata = getKeyframes(generator);
          settings = Object.assign(Object.assign({}, keyframesMetadata), { easing: "linear" }), motionValue && (motionValue.generator = generator, motionValue.generatorStartTime = performance.now());
        } else
          settings = {
            easing: "ease",
            duration: getKeyframes(getGenerator(0, 100)).overshootDuration
          };
        return settings;
      }
    };
  };
}
var isNumberOrNull, init_create_generator_easing_es = __esm({
  "node_modules/@motionone/dom/dist/easing/create-generator-easing.es.js"() {
    init_index_es9();
    isNumberOrNull = (value) => typeof value != "string";
  }
});

// node_modules/@motionone/dom/dist/easing/spring/index.es.js
var spring2, init_index_es10 = __esm({
  "node_modules/@motionone/dom/dist/easing/spring/index.es.js"() {
    init_index_es9();
    init_create_generator_easing_es();
    spring2 = createGeneratorEasing(spring);
  }
});

// node_modules/@motionone/dom/dist/easing/glide/index.es.js
var glide2, init_index_es11 = __esm({
  "node_modules/@motionone/dom/dist/easing/glide/index.es.js"() {
    init_index_es9();
    init_create_generator_easing_es();
    glide2 = createGeneratorEasing(glide);
  }
});

// node_modules/@motionone/dom/dist/gestures/in-view.es.js
function inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = "any" } = {}) {
  if (typeof IntersectionObserver > "u")
    return () => {
    };
  let elements = resolveElements(elementOrSelector), activeIntersections = /* @__PURE__ */ new WeakMap(), onIntersectionChange = (entries) => {
    entries.forEach((entry2) => {
      let onEnd = activeIntersections.get(entry2.target);
      if (entry2.isIntersecting !== Boolean(onEnd))
        if (entry2.isIntersecting) {
          let newOnEnd = onStart(entry2);
          typeof newOnEnd == "function" ? activeIntersections.set(entry2.target, newOnEnd) : observer2.unobserve(entry2.target);
        } else
          onEnd && (onEnd(entry2), activeIntersections.delete(entry2.target));
    });
  }, observer2 = new IntersectionObserver(onIntersectionChange, {
    root,
    rootMargin,
    threshold: typeof amount == "number" ? amount : thresholds[amount]
  });
  return elements.forEach((element) => observer2.observe(element)), () => observer2.disconnect();
}
var thresholds, init_in_view_es = __esm({
  "node_modules/@motionone/dom/dist/gestures/in-view.es.js"() {
    init_resolve_elements_es();
    thresholds = {
      any: 0,
      all: 1
    };
  }
});

// node_modules/@motionone/dom/dist/gestures/resize/handle-element.es.js
function getElementSize(target, borderBoxSize) {
  if (borderBoxSize) {
    let { inlineSize, blockSize } = borderBoxSize[0];
    return { width: inlineSize, height: blockSize };
  } else
    return target instanceof SVGElement && "getBBox" in target ? target.getBBox() : {
      width: target.offsetWidth,
      height: target.offsetHeight
    };
}
function notifyTarget({ target, contentRect, borderBoxSize }) {
  var _a2;
  (_a2 = resizeHandlers.get(target)) === null || _a2 === void 0 || _a2.forEach((handler) => {
    handler({
      target,
      contentSize: contentRect,
      get size() {
        return getElementSize(target, borderBoxSize);
      }
    });
  });
}
function notifyAll(entries) {
  entries.forEach(notifyTarget);
}
function createResizeObserver() {
  typeof ResizeObserver > "u" || (observer = new ResizeObserver(notifyAll));
}
function resizeElement(target, handler) {
  observer || createResizeObserver();
  let elements = resolveElements(target);
  return elements.forEach((element) => {
    let elementHandlers = resizeHandlers.get(element);
    elementHandlers || (elementHandlers = /* @__PURE__ */ new Set(), resizeHandlers.set(element, elementHandlers)), elementHandlers.add(handler), observer == null || observer.observe(element);
  }), () => {
    elements.forEach((element) => {
      let elementHandlers = resizeHandlers.get(element);
      elementHandlers == null || elementHandlers.delete(handler), elementHandlers != null && elementHandlers.size || observer == null || observer.unobserve(element);
    });
  };
}
var resizeHandlers, observer, init_handle_element_es = __esm({
  "node_modules/@motionone/dom/dist/gestures/resize/handle-element.es.js"() {
    init_resolve_elements_es();
    resizeHandlers = /* @__PURE__ */ new WeakMap();
  }
});

// node_modules/@motionone/dom/dist/gestures/resize/handle-window.es.js
function createWindowResizeHandler() {
  windowResizeHandler = () => {
    let size = {
      width: window.innerWidth,
      height: window.innerHeight
    }, info = {
      target: window,
      size,
      contentSize: size
    };
    windowCallbacks.forEach((callback) => callback(info));
  }, window.addEventListener("resize", windowResizeHandler);
}
function resizeWindow(callback) {
  return windowCallbacks.add(callback), windowResizeHandler || createWindowResizeHandler(), () => {
    windowCallbacks.delete(callback), !windowCallbacks.size && windowResizeHandler && (windowResizeHandler = void 0);
  };
}
var windowCallbacks, windowResizeHandler, init_handle_window_es = __esm({
  "node_modules/@motionone/dom/dist/gestures/resize/handle-window.es.js"() {
    windowCallbacks = /* @__PURE__ */ new Set();
  }
});

// node_modules/@motionone/dom/dist/gestures/resize/index.es.js
function resize(a13, b6) {
  return typeof a13 == "function" ? resizeWindow(a13) : resizeElement(a13, b6);
}
var init_index_es12 = __esm({
  "node_modules/@motionone/dom/dist/gestures/resize/index.es.js"() {
    init_handle_element_es();
    init_handle_window_es();
  }
});

// node_modules/@motionone/dom/dist/gestures/scroll/info.es.js
function updateAxisInfo(element, axisName, info, time2) {
  let axis = info[axisName], { length: length2, position } = keys[axisName], prev = axis.current, prevTime = info.time;
  axis.current = element["scroll" + position], axis.scrollLength = element["scroll" + length2] - element["client" + length2], axis.offset.length = 0, axis.offset[0] = 0, axis.offset[1] = axis.scrollLength, axis.progress = progress(0, axis.scrollLength, axis.current);
  let elapsed = time2 - prevTime;
  axis.velocity = elapsed > maxElapsed ? 0 : velocityPerSecond(axis.current - prev, elapsed);
}
function updateScrollInfo(element, info, time2) {
  updateAxisInfo(element, "x", info, time2), updateAxisInfo(element, "y", info, time2), info.time = time2;
}
var maxElapsed, createAxisInfo, createScrollInfo, keys, init_info_es = __esm({
  "node_modules/@motionone/dom/dist/gestures/scroll/info.es.js"() {
    init_index_es2();
    maxElapsed = 50, createAxisInfo = () => ({
      current: 0,
      offset: [],
      progress: 0,
      scrollLength: 0,
      targetOffset: 0,
      targetLength: 0,
      containerLength: 0,
      velocity: 0
    }), createScrollInfo = () => ({
      time: 0,
      x: createAxisInfo(),
      y: createAxisInfo()
    }), keys = {
      x: {
        length: "Width",
        position: "Left"
      },
      y: {
        length: "Height",
        position: "Top"
      }
    };
  }
});

// node_modules/@motionone/dom/dist/gestures/scroll/offsets/inset.es.js
function calcInset(element, container) {
  let inset = { x: 0, y: 0 }, current = element;
  for (; current && current !== container; )
    if (current instanceof HTMLElement)
      inset.x += current.offsetLeft, inset.y += current.offsetTop, current = current.offsetParent;
    else if (current instanceof SVGGraphicsElement && "getBBox" in current) {
      let { top, left } = current.getBBox();
      for (inset.x += left, inset.y += top; current && current.tagName !== "svg"; )
        current = current.parentNode;
    }
  return inset;
}
var init_inset_es = __esm({
  "node_modules/@motionone/dom/dist/gestures/scroll/offsets/inset.es.js"() {
  }
});

// node_modules/@motionone/dom/dist/gestures/scroll/offsets/presets.es.js
var ScrollOffset, init_presets_es = __esm({
  "node_modules/@motionone/dom/dist/gestures/scroll/offsets/presets.es.js"() {
    ScrollOffset = {
      Enter: [
        [0, 1],
        [1, 1]
      ],
      Exit: [
        [0, 0],
        [1, 0]
      ],
      Any: [
        [1, 0],
        [0, 1]
      ],
      All: [
        [0, 0],
        [1, 1]
      ]
    };
  }
});

// node_modules/@motionone/dom/dist/gestures/scroll/offsets/edge.es.js
function resolveEdge(edge, length2, inset = 0) {
  let delta = 0;
  if (namedEdges[edge] !== void 0 && (edge = namedEdges[edge]), isString(edge)) {
    let asNumber = parseFloat(edge);
    edge.endsWith("px") ? delta = asNumber : edge.endsWith("%") ? edge = asNumber / 100 : edge.endsWith("vw") ? delta = asNumber / 100 * document.documentElement.clientWidth : edge.endsWith("vh") ? delta = asNumber / 100 * document.documentElement.clientHeight : edge = asNumber;
  }
  return isNumber(edge) && (delta = length2 * edge), inset + delta;
}
var namedEdges, init_edge_es = __esm({
  "node_modules/@motionone/dom/dist/gestures/scroll/offsets/edge.es.js"() {
    init_index_es2();
    namedEdges = {
      start: 0,
      center: 0.5,
      end: 1
    };
  }
});

// node_modules/@motionone/dom/dist/gestures/scroll/offsets/offset.es.js
function resolveOffset(offset, containerLength, targetLength, targetInset) {
  let offsetDefinition = Array.isArray(offset) ? offset : defaultOffset2, targetPoint = 0, containerPoint = 0;
  return isNumber(offset) ? offsetDefinition = [offset, offset] : isString(offset) && (offset = offset.trim(), offset.includes(" ") ? offsetDefinition = offset.split(" ") : offsetDefinition = [offset, namedEdges[offset] ? offset : "0"]), targetPoint = resolveEdge(offsetDefinition[0], targetLength, targetInset), containerPoint = resolveEdge(offsetDefinition[1], containerLength), targetPoint - containerPoint;
}
var defaultOffset2, init_offset_es2 = __esm({
  "node_modules/@motionone/dom/dist/gestures/scroll/offsets/offset.es.js"() {
    init_index_es2();
    init_edge_es();
    defaultOffset2 = [0, 0];
  }
});

// node_modules/@motionone/dom/dist/gestures/scroll/offsets/index.es.js
function resolveOffsets(container, info, options) {
  let { offset: offsetDefinition = ScrollOffset.All } = options, { target = container, axis = "y" } = options, lengthLabel = axis === "y" ? "height" : "width", inset = target !== container ? calcInset(target, container) : point, targetSize = target === container ? { width: container.scrollWidth, height: container.scrollHeight } : { width: target.clientWidth, height: target.clientHeight }, containerSize = {
    width: container.clientWidth,
    height: container.clientHeight
  };
  info[axis].offset.length = 0;
  let hasChanged2 = !info[axis].interpolate, numOffsets = offsetDefinition.length;
  for (let i7 = 0; i7 < numOffsets; i7++) {
    let offset = resolveOffset(offsetDefinition[i7], containerSize[lengthLabel], targetSize[lengthLabel], inset[axis]);
    !hasChanged2 && offset !== info[axis].interpolatorOffsets[i7] && (hasChanged2 = !0), info[axis].offset[i7] = offset;
  }
  hasChanged2 && (info[axis].interpolate = interpolate(defaultOffset(numOffsets), info[axis].offset), info[axis].interpolatorOffsets = [...info[axis].offset]), info[axis].progress = info[axis].interpolate(info[axis].current);
}
var point, init_index_es13 = __esm({
  "node_modules/@motionone/dom/dist/gestures/scroll/offsets/index.es.js"() {
    init_index_es2();
    init_inset_es();
    init_presets_es();
    init_offset_es2();
    point = { x: 0, y: 0 };
  }
});

// node_modules/@motionone/dom/dist/gestures/scroll/on-scroll-handler.es.js
function measure(container, target = container, info) {
  if (info.x.targetOffset = 0, info.y.targetOffset = 0, target !== container) {
    let node = target;
    for (; node && node != container; )
      info.x.targetOffset += node.offsetLeft, info.y.targetOffset += node.offsetTop, node = node.offsetParent;
  }
  info.x.targetLength = target === container ? target.scrollWidth : target.clientWidth, info.y.targetLength = target === container ? target.scrollHeight : target.clientHeight, info.x.containerLength = container.clientWidth, info.y.containerLength = container.clientHeight;
}
function createOnScrollHandler(element, onScroll, info, options = {}) {
  let axis = options.axis || "y";
  return {
    measure: () => measure(element, options.target, info),
    update: (time2) => {
      updateScrollInfo(element, info, time2), (options.offset || options.target) && resolveOffsets(element, info, options);
    },
    notify: typeof onScroll == "function" ? () => onScroll(info) : scrubAnimation(onScroll, info[axis])
  };
}
function scrubAnimation(controls2, axisInfo) {
  return controls2.pause(), controls2.forEachNative((animation, { easing }) => {
    var _a2, _b;
    if (animation.updateDuration)
      easing || (animation.easing = noopReturn), animation.updateDuration(1);
    else {
      let timingOptions = { duration: 1e3 };
      easing || (timingOptions.easing = "linear"), (_b = (_a2 = animation.effect) === null || _a2 === void 0 ? void 0 : _a2.updateTiming) === null || _b === void 0 || _b.call(_a2, timingOptions);
    }
  }), () => {
    controls2.currentTime = axisInfo.progress;
  };
}
var init_on_scroll_handler_es = __esm({
  "node_modules/@motionone/dom/dist/gestures/scroll/on-scroll-handler.es.js"() {
    init_index_es2();
    init_info_es();
    init_index_es13();
  }
});

// node_modules/@motionone/dom/dist/gestures/scroll/index.es.js
function scroll(onScroll, _a2 = {}) {
  var { container = document.documentElement } = _a2, options = __rest2(_a2, ["container"]);
  let containerHandlers = onScrollHandlers.get(container);
  containerHandlers || (containerHandlers = /* @__PURE__ */ new Set(), onScrollHandlers.set(container, containerHandlers));
  let info = createScrollInfo(), containerHandler = createOnScrollHandler(container, onScroll, info, options);
  if (containerHandlers.add(containerHandler), !scrollListeners.has(container)) {
    let listener2 = () => {
      let time2 = performance.now();
      for (let handler of containerHandlers)
        handler.measure();
      for (let handler of containerHandlers)
        handler.update(time2);
      for (let handler of containerHandlers)
        handler.notify();
    };
    scrollListeners.set(container, listener2);
    let target = getEventTarget(container);
    window.addEventListener("resize", listener2, { passive: !0 }), container !== document.documentElement && resizeListeners.set(container, resize(container, listener2)), target.addEventListener("scroll", listener2, { passive: !0 });
  }
  let listener = scrollListeners.get(container), onLoadProcesss = requestAnimationFrame(listener);
  return () => {
    var _a3;
    typeof onScroll != "function" && onScroll.stop(), cancelAnimationFrame(onLoadProcesss);
    let containerHandlers2 = onScrollHandlers.get(container);
    if (!containerHandlers2 || (containerHandlers2.delete(containerHandler), containerHandlers2.size))
      return;
    let listener2 = scrollListeners.get(container);
    scrollListeners.delete(container), listener2 && (getEventTarget(container).removeEventListener("scroll", listener2), (_a3 = resizeListeners.get(container)) === null || _a3 === void 0 || _a3(), window.removeEventListener("resize", listener2));
  };
}
var scrollListeners, resizeListeners, onScrollHandlers, getEventTarget, init_index_es14 = __esm({
  "node_modules/@motionone/dom/dist/gestures/scroll/index.es.js"() {
    init_tslib_es6();
    init_index_es12();
    init_info_es();
    init_on_scroll_handler_es();
    scrollListeners = /* @__PURE__ */ new WeakMap(), resizeListeners = /* @__PURE__ */ new WeakMap(), onScrollHandlers = /* @__PURE__ */ new WeakMap(), getEventTarget = (element) => element === document.documentElement ? window : element;
  }
});

// node_modules/@motionone/dom/dist/state/utils/has-changed.es.js
function hasChanged(a13, b6) {
  return typeof a13 != typeof b6 ? !0 : Array.isArray(a13) && Array.isArray(b6) ? !shallowCompare(a13, b6) : a13 !== b6;
}
function shallowCompare(next, prev) {
  let prevLength = prev.length;
  if (prevLength !== next.length)
    return !1;
  for (let i7 = 0; i7 < prevLength; i7++)
    if (prev[i7] !== next[i7])
      return !1;
  return !0;
}
var init_has_changed_es = __esm({
  "node_modules/@motionone/dom/dist/state/utils/has-changed.es.js"() {
  }
});

// node_modules/@motionone/dom/dist/state/utils/is-variant.es.js
function isVariant(definition) {
  return typeof definition == "object";
}
var init_is_variant_es = __esm({
  "node_modules/@motionone/dom/dist/state/utils/is-variant.es.js"() {
  }
});

// node_modules/@motionone/dom/dist/state/utils/resolve-variant.es.js
function resolveVariant(definition, variants) {
  if (isVariant(definition))
    return definition;
  if (definition && variants)
    return variants[definition];
}
var init_resolve_variant_es = __esm({
  "node_modules/@motionone/dom/dist/state/utils/resolve-variant.es.js"() {
    init_is_variant_es();
  }
});

// node_modules/@motionone/dom/dist/state/utils/schedule.es.js
function processScheduledAnimations() {
  if (!scheduled)
    return;
  let generators = scheduled.sort(compareByDepth).map(fireAnimateUpdates);
  generators.forEach(fireNext), generators.forEach(fireNext), scheduled = void 0;
}
function scheduleAnimation(state) {
  scheduled ? addUniqueItem(scheduled, state) : (scheduled = [state], requestAnimationFrame(processScheduledAnimations));
}
function unscheduleAnimation(state) {
  scheduled && removeItem(scheduled, state);
}
var scheduled, compareByDepth, fireAnimateUpdates, fireNext, init_schedule_es = __esm({
  "node_modules/@motionone/dom/dist/state/utils/schedule.es.js"() {
    init_index_es2();
    compareByDepth = (a13, b6) => a13.getDepth() - b6.getDepth(), fireAnimateUpdates = (state) => state.animateUpdates(), fireNext = (iterator) => iterator.next();
  }
});

// node_modules/@motionone/dom/dist/state/utils/events.es.js
function dispatchPointerEvent(element, name, event) {
  element.dispatchEvent(new CustomEvent(name, { detail: { originalEvent: event } }));
}
function dispatchViewEvent(element, name, entry2) {
  element.dispatchEvent(new CustomEvent(name, { detail: { originalEntry: entry2 } }));
}
var motionEvent, init_events_es = __esm({
  "node_modules/@motionone/dom/dist/state/utils/events.es.js"() {
    motionEvent = (name, target) => new CustomEvent(name, { detail: { target } });
  }
});

// node_modules/@motionone/dom/dist/state/gestures/in-view.es.js
var inView2, init_in_view_es2 = __esm({
  "node_modules/@motionone/dom/dist/state/gestures/in-view.es.js"() {
    init_tslib_es6();
    init_events_es();
    init_in_view_es();
    inView2 = {
      isActive: (options) => Boolean(options.inView),
      subscribe: (element, { enable, disable }, { inViewOptions = {} }) => {
        let { once } = inViewOptions, viewOptions = __rest2(inViewOptions, ["once"]);
        return inView(element, (enterEntry) => {
          if (enable(), dispatchViewEvent(element, "viewenter", enterEntry), !once)
            return (leaveEntry) => {
              disable(), dispatchViewEvent(element, "viewleave", leaveEntry);
            };
        }, viewOptions);
      }
    };
  }
});

// node_modules/@motionone/dom/dist/state/gestures/hover.es.js
var mouseEvent, hover, init_hover_es = __esm({
  "node_modules/@motionone/dom/dist/state/gestures/hover.es.js"() {
    init_events_es();
    mouseEvent = (element, name, action12) => (event) => {
      event.pointerType && event.pointerType !== "mouse" || (action12(), dispatchPointerEvent(element, name, event));
    }, hover = {
      isActive: (options) => Boolean(options.hover),
      subscribe: (element, { enable, disable }) => {
        let onEnter = mouseEvent(element, "hoverstart", enable), onLeave = mouseEvent(element, "hoverend", disable);
        return element.addEventListener("pointerenter", onEnter), element.addEventListener("pointerleave", onLeave), () => {
          element.removeEventListener("pointerenter", onEnter), element.removeEventListener("pointerleave", onLeave);
        };
      }
    };
  }
});

// node_modules/@motionone/dom/dist/state/gestures/press.es.js
var press, init_press_es = __esm({
  "node_modules/@motionone/dom/dist/state/gestures/press.es.js"() {
    init_events_es();
    press = {
      isActive: (options) => Boolean(options.press),
      subscribe: (element, { enable, disable }) => {
        let onPointerUp = (event) => {
          disable(), dispatchPointerEvent(element, "pressend", event), window.removeEventListener("pointerup", onPointerUp);
        }, onPointerDown = (event) => {
          enable(), dispatchPointerEvent(element, "pressstart", event), window.addEventListener("pointerup", onPointerUp);
        };
        return element.addEventListener("pointerdown", onPointerDown), () => {
          element.removeEventListener("pointerdown", onPointerDown), window.removeEventListener("pointerup", onPointerUp);
        };
      }
    };
  }
});

// node_modules/@motionone/dom/dist/state/index.es.js
function createMotionState(options = {}, parent) {
  let element, depth = parent ? parent.getDepth() + 1 : 0, activeStates = { initial: !0, animate: !0 }, gestureSubscriptions = {}, context = {};
  for (let name of stateTypes)
    context[name] = typeof options[name] == "string" ? options[name] : parent == null ? void 0 : parent.getContext()[name];
  let initialVariantSource = options.initial === !1 ? "animate" : "initial", _a2 = resolveVariant(options[initialVariantSource] || context[initialVariantSource], options.variants) || {}, target = __rest2(_a2, ["transition"]), baseTarget = Object.assign({}, target);
  function* animateUpdates() {
    var _a3, _b;
    let prevTarget = target;
    target = {};
    let animationOptions = {};
    for (let name of stateTypes) {
      if (!activeStates[name])
        continue;
      let variant = resolveVariant(options[name]);
      if (variant)
        for (let key in variant)
          key !== "transition" && (target[key] = variant[key], animationOptions[key] = getOptions((_b = (_a3 = variant.transition) !== null && _a3 !== void 0 ? _a3 : options.transition) !== null && _b !== void 0 ? _b : {}, key));
    }
    let allTargetKeys = /* @__PURE__ */ new Set([
      ...Object.keys(target),
      ...Object.keys(prevTarget)
    ]), animationFactories = [];
    allTargetKeys.forEach((key) => {
      var _a4;
      target[key] === void 0 && (target[key] = baseTarget[key]), hasChanged(prevTarget[key], target[key]) && ((_a4 = baseTarget[key]) !== null && _a4 !== void 0 || (baseTarget[key] = style.get(element, key)), animationFactories.push(animateStyle(element, key, target[key], animationOptions[key])));
    }), yield;
    let animations = animationFactories.map((factory) => factory()).filter(Boolean);
    if (!animations.length)
      return;
    let animationTarget = target;
    element.dispatchEvent(motionEvent("motionstart", animationTarget)), Promise.all(animations.map((animation) => animation.finished)).then(() => {
      element.dispatchEvent(motionEvent("motioncomplete", animationTarget));
    }).catch(noop);
  }
  let setGesture = (name, isActive) => () => {
    activeStates[name] = isActive, scheduleAnimation(state);
  }, updateGestureSubscriptions = () => {
    for (let name in gestures) {
      let isGestureActive = gestures[name].isActive(options), remove = gestureSubscriptions[name];
      isGestureActive && !remove ? gestureSubscriptions[name] = gestures[name].subscribe(element, {
        enable: setGesture(name, !0),
        disable: setGesture(name, !1)
      }, options) : !isGestureActive && remove && (remove(), delete gestureSubscriptions[name]);
    }
  }, state = {
    update: (newOptions) => {
      element && (options = newOptions, updateGestureSubscriptions(), scheduleAnimation(state));
    },
    setActive: (name, isActive) => {
      element && (activeStates[name] = isActive, scheduleAnimation(state));
    },
    animateUpdates,
    getDepth: () => depth,
    getTarget: () => target,
    getOptions: () => options,
    getContext: () => context,
    mount: (newElement) => (invariant4(Boolean(newElement), "Animation state must be mounted with valid Element"), element = newElement, mountedStates.set(element, state), updateGestureSubscriptions(), () => {
      mountedStates.delete(element), unscheduleAnimation(state);
      for (let key in gestureSubscriptions)
        gestureSubscriptions[key]();
    }),
    isMounted: () => Boolean(element)
  };
  return state;
}
var gestures, stateTypes, mountedStates, init_index_es15 = __esm({
  "node_modules/@motionone/dom/dist/state/index.es.js"() {
    init_tslib_es6();
    init_hey_listen_es();
    init_index_es2();
    init_animate_style_es();
    init_style_es();
    init_options_es();
    init_has_changed_es();
    init_resolve_variant_es();
    init_schedule_es();
    init_in_view_es2();
    init_hover_es();
    init_press_es();
    init_events_es();
    gestures = { inView: inView2, hover, press }, stateTypes = ["initial", "animate", ...Object.keys(gestures), "exit"], mountedStates = /* @__PURE__ */ new WeakMap();
  }
});

// node_modules/@motionone/dom/dist/animate/utils/style-object.es.js
function createStyles(keyframes) {
  let initialKeyframes = {}, transformKeys = [];
  for (let key in keyframes) {
    let value = keyframes[key];
    isTransform(key) && (transformAlias[key] && (key = transformAlias[key]), transformKeys.push(key), key = asTransformCssVar(key));
    let initialKeyframe = Array.isArray(value) ? value[0] : value, definition = transformDefinitions.get(key);
    definition && (initialKeyframe = isNumber(value) ? definition.toDefaultUnit(value) : value), initialKeyframes[key] = initialKeyframe;
  }
  return transformKeys.length && (initialKeyframes.transform = buildTransformTemplate(transformKeys)), initialKeyframes;
}
var init_style_object_es = __esm({
  "node_modules/@motionone/dom/dist/animate/utils/style-object.es.js"() {
    init_index_es2();
    init_transforms_es();
  }
});

// node_modules/@motionone/dom/dist/animate/utils/style-string.es.js
function createStyleString(target = {}) {
  let styles = createStyles(target), style2 = "";
  for (let key in styles)
    style2 += key.startsWith("--") ? key : camelToPipeCase(key), style2 += `: ${styles[key]}; `;
  return style2;
}
var camelLetterToPipeLetter, camelToPipeCase, init_style_string_es = __esm({
  "node_modules/@motionone/dom/dist/animate/utils/style-string.es.js"() {
    init_style_object_es();
    camelLetterToPipeLetter = (letter) => `-${letter.toLowerCase()}`, camelToPipeCase = (str) => str.replace(/[A-Z]/g, camelLetterToPipeLetter);
  }
});

// node_modules/@motionone/dom/dist/index.es.js
var index_es_exports = {};
__export(index_es_exports, {
  ScrollOffset: () => ScrollOffset,
  animate: () => animate,
  animateStyle: () => animateStyle,
  createMotionState: () => createMotionState,
  createStyleString: () => createStyleString,
  createStyles: () => createStyles,
  getAnimationData: () => getAnimationData,
  getStyleName: () => getStyleName,
  glide: () => glide2,
  inView: () => inView,
  mountedStates: () => mountedStates,
  resize: () => resize,
  scroll: () => scroll,
  spring: () => spring2,
  stagger: () => stagger,
  style: () => style,
  timeline: () => timeline,
  withControls: () => withControls
});
var init_index_es16 = __esm({
  "node_modules/@motionone/dom/dist/index.es.js"() {
    init_index_es5();
    init_animate_style_es();
    init_index_es6();
    init_stagger_es();
    init_index_es10();
    init_index_es11();
    init_style_es();
    init_in_view_es();
    init_index_es12();
    init_index_es14();
    init_presets_es();
    init_controls_es();
    init_data_es();
    init_get_style_name_es();
    init_index_es15();
    init_style_object_es();
    init_style_string_es();
  }
});

// node_modules/@emotion/memoize/dist/memoize.esm.js
function memoize(fn) {
  var cache = {};
  return function(arg) {
    return cache[arg] === void 0 && (cache[arg] = fn(arg)), cache[arg];
  };
}
var memoize_esm_default, init_memoize_esm = __esm({
  "node_modules/@emotion/memoize/dist/memoize.esm.js"() {
    memoize_esm_default = memoize;
  }
});

// node_modules/@emotion/is-prop-valid/dist/is-prop-valid.esm.js
var is_prop_valid_esm_exports = {};
__export(is_prop_valid_esm_exports, {
  default: () => is_prop_valid_esm_default
});
var reactPropsRegex, index2, is_prop_valid_esm_default, init_is_prop_valid_esm = __esm({
  "node_modules/@emotion/is-prop-valid/dist/is-prop-valid.esm.js"() {
    init_memoize_esm();
    reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, index2 = memoize_esm_default(
      function(prop) {
        return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111 && prop.charCodeAt(1) === 110 && prop.charCodeAt(2) < 91;
      }
      /* Z+1 */
    ), is_prop_valid_esm_default = index2;
  }
});

// node_modules/framer-motion/dist/cjs/index.js
var require_cjs2 = __commonJS({
  "node_modules/framer-motion/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var tslib = require_tslib(), React26 = require_react(), heyListen = (init_hey_listen_es(), __toCommonJS(hey_listen_es_exports)), styleValueTypes = require_valueTypes_cjs(), popmotion = require_popmotion_cjs(), sync = require_framesync_cjs(), dom = (init_index_es16(), __toCommonJS(index_es_exports));
    function _interopDefaultLegacy(e5) {
      return e5 && typeof e5 == "object" && "default" in e5 ? e5 : { default: e5 };
    }
    function _interopNamespace(e5) {
      if (e5 && e5.__esModule)
        return e5;
      var n7 = /* @__PURE__ */ Object.create(null);
      return e5 && Object.keys(e5).forEach(function(k2) {
        if (k2 !== "default") {
          var d12 = Object.getOwnPropertyDescriptor(e5, k2);
          Object.defineProperty(n7, k2, d12.get ? d12 : {
            enumerable: !0,
            get: function() {
              return e5[k2];
            }
          });
        }
      }), n7.default = e5, Object.freeze(n7);
    }
    var React__namespace = /* @__PURE__ */ _interopNamespace(React26), React__default2 = /* @__PURE__ */ _interopDefaultLegacy(React26), sync__default = /* @__PURE__ */ _interopDefaultLegacy(sync), defaultEnvironment = "production", env = typeof process > "u" || process.env === void 0 ? defaultEnvironment : "development", createDefinition = function(propNames) {
      return {
        isEnabled: function(props) {
          return propNames.some(function(name) {
            return !!props[name];
          });
        }
      };
    }, featureDefinitions = {
      measureLayout: createDefinition(["layout", "layoutId", "drag"]),
      animation: createDefinition([
        "animate",
        "exit",
        "variants",
        "whileHover",
        "whileTap",
        "whileFocus",
        "whileDrag",
        "whileInView"
      ]),
      exit: createDefinition(["exit"]),
      drag: createDefinition(["drag", "dragControls"]),
      focus: createDefinition(["whileFocus"]),
      hover: createDefinition(["whileHover", "onHoverStart", "onHoverEnd"]),
      tap: createDefinition(["whileTap", "onTap", "onTapStart", "onTapCancel"]),
      pan: createDefinition([
        "onPan",
        "onPanStart",
        "onPanSessionStart",
        "onPanEnd"
      ]),
      inView: createDefinition([
        "whileInView",
        "onViewportEnter",
        "onViewportLeave"
      ])
    };
    function loadFeatures(features) {
      for (var key in features)
        features[key] !== null && (key === "projectionNodeConstructor" ? featureDefinitions.projectionNodeConstructor = features[key] : featureDefinitions[key].Component = features[key]);
    }
    var LazyContext = React26.createContext({ strict: !1 }), featureNames = Object.keys(featureDefinitions), numFeatures = featureNames.length;
    function useFeatures(props, visualElement2, preloadedFeatures) {
      var features = [], lazyContext = React26.useContext(LazyContext);
      if (!visualElement2)
        return null;
      env !== "production" && preloadedFeatures && lazyContext.strict && heyListen.invariant(!1, "You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.");
      for (var i7 = 0; i7 < numFeatures; i7++) {
        var name_1 = featureNames[i7], _a2 = featureDefinitions[name_1], isEnabled = _a2.isEnabled, Component2 = _a2.Component;
        isEnabled(props) && Component2 && features.push(React__namespace.createElement(Component2, tslib.__assign({ key: name_1 }, props, { visualElement: visualElement2 })));
      }
      return features;
    }
    var MotionConfigContext = React26.createContext({
      transformPagePoint: function(p7) {
        return p7;
      },
      isStatic: !1,
      reducedMotion: "never"
    }), MotionContext = React26.createContext({});
    function useVisualElementContext() {
      return React26.useContext(MotionContext).visualElement;
    }
    var PresenceContext = React26.createContext(null), isBrowser3 = typeof document < "u", useIsomorphicLayoutEffect2 = isBrowser3 ? React26.useLayoutEffect : React26.useEffect, prefersReducedMotion = { current: null }, hasDetected = !1;
    function initPrefersReducedMotion() {
      if (hasDetected = !0, !!isBrowser3)
        if (window.matchMedia) {
          var motionMediaQuery_1 = window.matchMedia("(prefers-reduced-motion)"), setReducedMotionPreferences = function() {
            return prefersReducedMotion.current = motionMediaQuery_1.matches;
          };
          motionMediaQuery_1.addListener(setReducedMotionPreferences), setReducedMotionPreferences();
        } else
          prefersReducedMotion.current = !1;
    }
    function useReducedMotion() {
      !hasDetected && initPrefersReducedMotion();
      var _a2 = tslib.__read(React26.useState(prefersReducedMotion.current), 1), shouldReduceMotion = _a2[0];
      return shouldReduceMotion;
    }
    function useReducedMotionConfig() {
      var reducedMotionPreference = useReducedMotion(), reducedMotion = React26.useContext(MotionConfigContext).reducedMotion;
      return reducedMotion === "never" ? !1 : reducedMotion === "always" ? !0 : reducedMotionPreference;
    }
    function useVisualElement(Component2, visualState, props, createVisualElement) {
      var lazyContext = React26.useContext(LazyContext), parent = useVisualElementContext(), presenceContext = React26.useContext(PresenceContext), shouldReduceMotion = useReducedMotionConfig(), visualElementRef = React26.useRef(void 0);
      createVisualElement || (createVisualElement = lazyContext.renderer), !visualElementRef.current && createVisualElement && (visualElementRef.current = createVisualElement(Component2, {
        visualState,
        parent,
        props,
        presenceId: presenceContext == null ? void 0 : presenceContext.id,
        blockInitialAnimation: (presenceContext == null ? void 0 : presenceContext.initial) === !1,
        shouldReduceMotion
      }));
      var visualElement2 = visualElementRef.current;
      return useIsomorphicLayoutEffect2(function() {
        visualElement2 == null || visualElement2.syncRender();
      }), React26.useEffect(function() {
        var _a2;
        (_a2 = visualElement2 == null ? void 0 : visualElement2.animationState) === null || _a2 === void 0 || _a2.animateChanges();
      }), useIsomorphicLayoutEffect2(function() {
        return function() {
          return visualElement2 == null ? void 0 : visualElement2.notifyUnmount();
        };
      }, []), visualElement2;
    }
    function isRefObject(ref) {
      return typeof ref == "object" && Object.prototype.hasOwnProperty.call(ref, "current");
    }
    function useMotionRef(visualState, visualElement2, externalRef) {
      return React26.useCallback(
        function(instance) {
          var _a2;
          instance && ((_a2 = visualState.mount) === null || _a2 === void 0 || _a2.call(visualState, instance)), visualElement2 && (instance ? visualElement2.mount(instance) : visualElement2.unmount()), externalRef && (typeof externalRef == "function" ? externalRef(instance) : isRefObject(externalRef) && (externalRef.current = instance));
        },
        /**
         * Only pass a new ref callback to React if we've received a visual element
         * factory. Otherwise we'll be mounting/remounting every time externalRef
         * or other dependencies change.
         */
        [visualElement2]
      );
    }
    function isVariantLabels(v4) {
      return Array.isArray(v4);
    }
    function isVariantLabel(v4) {
      return typeof v4 == "string" || isVariantLabels(v4);
    }
    function getCurrent(visualElement2) {
      var current = {};
      return visualElement2.forEachValue(function(value, key) {
        return current[key] = value.get();
      }), current;
    }
    function getVelocity$1(visualElement2) {
      var velocity = {};
      return visualElement2.forEachValue(function(value, key) {
        return velocity[key] = value.getVelocity();
      }), velocity;
    }
    function resolveVariantFromProps(props, definition, custom, currentValues, currentVelocity) {
      var _a2;
      return currentValues === void 0 && (currentValues = {}), currentVelocity === void 0 && (currentVelocity = {}), typeof definition == "function" && (definition = definition(custom ?? props.custom, currentValues, currentVelocity)), typeof definition == "string" && (definition = (_a2 = props.variants) === null || _a2 === void 0 ? void 0 : _a2[definition]), typeof definition == "function" && (definition = definition(custom ?? props.custom, currentValues, currentVelocity)), definition;
    }
    function resolveVariant2(visualElement2, definition, custom) {
      var props = visualElement2.getProps();
      return resolveVariantFromProps(props, definition, custom ?? props.custom, getCurrent(visualElement2), getVelocity$1(visualElement2));
    }
    function checkIfControllingVariants(props) {
      var _a2;
      return typeof ((_a2 = props.animate) === null || _a2 === void 0 ? void 0 : _a2.start) == "function" || isVariantLabel(props.initial) || isVariantLabel(props.animate) || isVariantLabel(props.whileHover) || isVariantLabel(props.whileDrag) || isVariantLabel(props.whileTap) || isVariantLabel(props.whileFocus) || isVariantLabel(props.exit);
    }
    function checkIfVariantNode(props) {
      return Boolean(checkIfControllingVariants(props) || props.variants);
    }
    function getCurrentTreeVariants(props, context) {
      if (checkIfControllingVariants(props)) {
        var initial = props.initial, animate3 = props.animate;
        return {
          initial: initial === !1 || isVariantLabel(initial) ? initial : void 0,
          animate: isVariantLabel(animate3) ? animate3 : void 0
        };
      }
      return props.inherit !== !1 ? context : {};
    }
    function useCreateMotionContext(props) {
      var _a2 = getCurrentTreeVariants(props, React26.useContext(MotionContext)), initial = _a2.initial, animate3 = _a2.animate;
      return React26.useMemo(function() {
        return { initial, animate: animate3 };
      }, [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate3)]);
    }
    function variantLabelsAsDependency(prop) {
      return Array.isArray(prop) ? prop.join(" ") : prop;
    }
    function useConstant(init) {
      var ref = React26.useRef(null);
      return ref.current === null && (ref.current = init()), ref.current;
    }
    var globalProjectionState = {
      /**
       * Global flag as to whether the tree has animated since the last time
       * we resized the window
       */
      hasAnimatedSinceResize: !0,
      /**
       * We set this to true once, on the first update. Any nodes added to the tree beyond that
       * update will be given a `data-projection-id` attribute.
       */
      hasEverUpdated: !1
    }, id$1 = 1;
    function useProjectionId() {
      return useConstant(function() {
        if (globalProjectionState.hasEverUpdated)
          return id$1++;
      });
    }
    var LayoutGroupContext = React26.createContext({}), SwitchLayoutGroupContext = React26.createContext({});
    function useProjection(projectionId, _a2, visualElement2, ProjectionNodeConstructor) {
      var _b, layoutId = _a2.layoutId, layout = _a2.layout, drag2 = _a2.drag, dragConstraints = _a2.dragConstraints, layoutScroll = _a2.layoutScroll, initialPromotionConfig = React26.useContext(SwitchLayoutGroupContext);
      !ProjectionNodeConstructor || !visualElement2 || visualElement2 != null && visualElement2.projection || (visualElement2.projection = new ProjectionNodeConstructor(projectionId, visualElement2.getLatestValues(), (_b = visualElement2.parent) === null || _b === void 0 ? void 0 : _b.projection), visualElement2.projection.setOptions({
        layoutId,
        layout,
        alwaysMeasureLayout: Boolean(drag2) || dragConstraints && isRefObject(dragConstraints),
        visualElement: visualElement2,
        scheduleRender: function() {
          return visualElement2.scheduleRender();
        },
        /**
         * TODO: Update options in an effect. This could be tricky as it'll be too late
         * to update by the time layout animations run.
         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,
         * ensuring it gets called if there's no potential layout animations.
         *
         */
        animationType: typeof layout == "string" ? layout : "both",
        initialPromotionConfig,
        layoutScroll
      }));
    }
    var VisualElementHandler = (
      /** @class */
      function(_super) {
        tslib.__extends(VisualElementHandler2, _super);
        function VisualElementHandler2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        return VisualElementHandler2.prototype.getSnapshotBeforeUpdate = function() {
          return this.updateProps(), null;
        }, VisualElementHandler2.prototype.componentDidUpdate = function() {
        }, VisualElementHandler2.prototype.updateProps = function() {
          var _a2 = this.props, visualElement2 = _a2.visualElement, props = _a2.props;
          visualElement2 && visualElement2.setProps(props);
        }, VisualElementHandler2.prototype.render = function() {
          return this.props.children;
        }, VisualElementHandler2;
      }(React__default2.default.Component)
    );
    function createMotionComponent(_a2) {
      var preloadedFeatures = _a2.preloadedFeatures, createVisualElement = _a2.createVisualElement, projectionNodeConstructor = _a2.projectionNodeConstructor, useRender = _a2.useRender, useVisualState2 = _a2.useVisualState, Component2 = _a2.Component;
      preloadedFeatures && loadFeatures(preloadedFeatures);
      function MotionComponent(props, externalRef) {
        var layoutId = useLayoutId(props);
        props = tslib.__assign(tslib.__assign({}, props), { layoutId });
        var config = React26.useContext(MotionConfigContext), features = null, context = useCreateMotionContext(props), projectionId = config.isStatic ? void 0 : useProjectionId(), visualState = useVisualState2(props, config.isStatic);
        return !config.isStatic && isBrowser3 && (context.visualElement = useVisualElement(Component2, visualState, tslib.__assign(tslib.__assign({}, config), props), createVisualElement), useProjection(projectionId, props, context.visualElement, projectionNodeConstructor || featureDefinitions.projectionNodeConstructor), features = useFeatures(props, context.visualElement, preloadedFeatures)), React__namespace.createElement(
          VisualElementHandler,
          { visualElement: context.visualElement, props: tslib.__assign(tslib.__assign({}, config), props) },
          features,
          React__namespace.createElement(MotionContext.Provider, { value: context }, useRender(Component2, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, config.isStatic, context.visualElement))
        );
      }
      return React26.forwardRef(MotionComponent);
    }
    function useLayoutId(_a2) {
      var _b, layoutId = _a2.layoutId, layoutGroupId = (_b = React26.useContext(LayoutGroupContext)) === null || _b === void 0 ? void 0 : _b.id;
      return layoutGroupId && layoutId !== void 0 ? layoutGroupId + "-" + layoutId : layoutId;
    }
    function createMotionProxy(createConfig) {
      function custom(Component2, customMotionComponentConfig) {
        return customMotionComponentConfig === void 0 && (customMotionComponentConfig = {}), createMotionComponent(createConfig(Component2, customMotionComponentConfig));
      }
      if (typeof Proxy > "u")
        return custom;
      var componentCache = /* @__PURE__ */ new Map();
      return new Proxy(custom, {
        /**
         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.
         * The prop name is passed through as `key` and we can use that to generate a `motion`
         * DOM component with that name.
         */
        get: function(_target, key) {
          return componentCache.has(key) || componentCache.set(key, custom(key)), componentCache.get(key);
        }
      });
    }
    var lowercaseSVGElements = [
      "animate",
      "circle",
      "defs",
      "desc",
      "ellipse",
      "g",
      "image",
      "line",
      "filter",
      "marker",
      "mask",
      "metadata",
      "path",
      "pattern",
      "polygon",
      "polyline",
      "rect",
      "stop",
      "svg",
      "switch",
      "symbol",
      "text",
      "tspan",
      "use",
      "view"
    ];
    function isSVGComponent(Component2) {
      return (
        /**
         * If it's not a string, it's a custom React component. Currently we only support
         * HTML custom React components.
         */
        typeof Component2 != "string" || /**
         * If it contains a dash, the element is a custom HTML webcomponent.
         */
        Component2.includes("-") ? !1 : (
          /**
           * If it's in our list of lowercase SVG tags, it's an SVG component
           */
          !!(lowercaseSVGElements.indexOf(Component2) > -1 || /**
           * If it contains a capital letter, it's an SVG component
           */
          /[A-Z]/.test(Component2))
        )
      );
    }
    var scaleCorrectors = {};
    function addScaleCorrector(correctors) {
      Object.assign(scaleCorrectors, correctors);
    }
    var transformAxes = ["", "X", "Y", "Z"], order2 = ["translate", "scale", "rotate", "skew"], transformProps = ["transformPerspective", "x", "y", "z"];
    order2.forEach(function(operationKey) {
      return transformAxes.forEach(function(axesKey) {
        return transformProps.push(operationKey + axesKey);
      });
    });
    function sortTransformProps(a13, b6) {
      return transformProps.indexOf(a13) - transformProps.indexOf(b6);
    }
    var transformPropSet = new Set(transformProps);
    function isTransformProp(key) {
      return transformPropSet.has(key);
    }
    var transformOriginProps = /* @__PURE__ */ new Set(["originX", "originY", "originZ"]);
    function isTransformOriginProp(key) {
      return transformOriginProps.has(key);
    }
    function isForcedMotionValue(key, _a2) {
      var layout = _a2.layout, layoutId = _a2.layoutId;
      return isTransformProp(key) || isTransformOriginProp(key) || (layout || layoutId !== void 0) && (!!scaleCorrectors[key] || key === "opacity");
    }
    var isMotionValue = function(value) {
      return Boolean(value !== null && typeof value == "object" && value.getVelocity);
    }, translateAlias = {
      x: "translateX",
      y: "translateY",
      z: "translateZ",
      transformPerspective: "perspective"
    };
    function buildTransform(_a2, _b, transformIsDefault, transformTemplate) {
      var transform2 = _a2.transform, transformKeys2 = _a2.transformKeys, _c = _b.enableHardwareAcceleration, enableHardwareAcceleration = _c === void 0 ? !0 : _c, _d = _b.allowTransformNone, allowTransformNone = _d === void 0 ? !0 : _d, transformString = "";
      transformKeys2.sort(sortTransformProps);
      for (var transformHasZ = !1, numTransformKeys = transformKeys2.length, i7 = 0; i7 < numTransformKeys; i7++) {
        var key = transformKeys2[i7];
        transformString += "".concat(translateAlias[key] || key, "(").concat(transform2[key], ") "), key === "z" && (transformHasZ = !0);
      }
      return !transformHasZ && enableHardwareAcceleration ? transformString += "translateZ(0)" : transformString = transformString.trim(), transformTemplate ? transformString = transformTemplate(transform2, transformIsDefault ? "" : transformString) : allowTransformNone && transformIsDefault && (transformString = "none"), transformString;
    }
    function buildTransformOrigin(_a2) {
      var _b = _a2.originX, originX = _b === void 0 ? "50%" : _b, _c = _a2.originY, originY = _c === void 0 ? "50%" : _c, _d = _a2.originZ, originZ = _d === void 0 ? 0 : _d;
      return "".concat(originX, " ").concat(originY, " ").concat(originZ);
    }
    function isCSSVariable$1(key) {
      return key.startsWith("--");
    }
    var getValueAsType = function(value, type) {
      return type && typeof value == "number" ? type.transform(value) : value;
    }, int = tslib.__assign(tslib.__assign({}, styleValueTypes.number), { transform: Math.round }), numberValueTypes = {
      // Border props
      borderWidth: styleValueTypes.px,
      borderTopWidth: styleValueTypes.px,
      borderRightWidth: styleValueTypes.px,
      borderBottomWidth: styleValueTypes.px,
      borderLeftWidth: styleValueTypes.px,
      borderRadius: styleValueTypes.px,
      radius: styleValueTypes.px,
      borderTopLeftRadius: styleValueTypes.px,
      borderTopRightRadius: styleValueTypes.px,
      borderBottomRightRadius: styleValueTypes.px,
      borderBottomLeftRadius: styleValueTypes.px,
      // Positioning props
      width: styleValueTypes.px,
      maxWidth: styleValueTypes.px,
      height: styleValueTypes.px,
      maxHeight: styleValueTypes.px,
      size: styleValueTypes.px,
      top: styleValueTypes.px,
      right: styleValueTypes.px,
      bottom: styleValueTypes.px,
      left: styleValueTypes.px,
      // Spacing props
      padding: styleValueTypes.px,
      paddingTop: styleValueTypes.px,
      paddingRight: styleValueTypes.px,
      paddingBottom: styleValueTypes.px,
      paddingLeft: styleValueTypes.px,
      margin: styleValueTypes.px,
      marginTop: styleValueTypes.px,
      marginRight: styleValueTypes.px,
      marginBottom: styleValueTypes.px,
      marginLeft: styleValueTypes.px,
      // Transform props
      rotate: styleValueTypes.degrees,
      rotateX: styleValueTypes.degrees,
      rotateY: styleValueTypes.degrees,
      rotateZ: styleValueTypes.degrees,
      scale: styleValueTypes.scale,
      scaleX: styleValueTypes.scale,
      scaleY: styleValueTypes.scale,
      scaleZ: styleValueTypes.scale,
      skew: styleValueTypes.degrees,
      skewX: styleValueTypes.degrees,
      skewY: styleValueTypes.degrees,
      distance: styleValueTypes.px,
      translateX: styleValueTypes.px,
      translateY: styleValueTypes.px,
      translateZ: styleValueTypes.px,
      x: styleValueTypes.px,
      y: styleValueTypes.px,
      z: styleValueTypes.px,
      perspective: styleValueTypes.px,
      transformPerspective: styleValueTypes.px,
      opacity: styleValueTypes.alpha,
      originX: styleValueTypes.progressPercentage,
      originY: styleValueTypes.progressPercentage,
      originZ: styleValueTypes.px,
      // Misc
      zIndex: int,
      // SVG
      fillOpacity: styleValueTypes.alpha,
      strokeOpacity: styleValueTypes.alpha,
      numOctaves: int
    };
    function buildHTMLStyles(state, latestValues, options, transformTemplate) {
      var _a2, style2 = state.style, vars = state.vars, transform2 = state.transform, transformKeys2 = state.transformKeys, transformOrigin = state.transformOrigin;
      transformKeys2.length = 0;
      var hasTransform2 = !1, hasTransformOrigin = !1, transformIsNone = !0;
      for (var key in latestValues) {
        var value = latestValues[key];
        if (isCSSVariable$1(key)) {
          vars[key] = value;
          continue;
        }
        var valueType = numberValueTypes[key], valueAsType = getValueAsType(value, valueType);
        if (isTransformProp(key)) {
          if (hasTransform2 = !0, transform2[key] = valueAsType, transformKeys2.push(key), !transformIsNone)
            continue;
          value !== ((_a2 = valueType.default) !== null && _a2 !== void 0 ? _a2 : 0) && (transformIsNone = !1);
        } else
          isTransformOriginProp(key) ? (transformOrigin[key] = valueAsType, hasTransformOrigin = !0) : style2[key] = valueAsType;
      }
      hasTransform2 ? style2.transform = buildTransform(state, options, transformIsNone, transformTemplate) : transformTemplate ? style2.transform = transformTemplate({}, "") : !latestValues.transform && style2.transform && (style2.transform = "none"), hasTransformOrigin && (style2.transformOrigin = buildTransformOrigin(transformOrigin));
    }
    var createHtmlRenderState = function() {
      return {
        style: {},
        transform: {},
        transformKeys: [],
        transformOrigin: {},
        vars: {}
      };
    };
    function copyRawValuesOnly(target, source, props) {
      for (var key in source)
        !isMotionValue(source[key]) && !isForcedMotionValue(key, props) && (target[key] = source[key]);
    }
    function useInitialMotionValues(_a2, visualState, isStatic) {
      var transformTemplate = _a2.transformTemplate;
      return React26.useMemo(function() {
        var state = createHtmlRenderState();
        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);
        var vars = state.vars, style2 = state.style;
        return tslib.__assign(tslib.__assign({}, vars), style2);
      }, [visualState]);
    }
    function useStyle(props, visualState, isStatic) {
      var styleProp = props.style || {}, style2 = {};
      return copyRawValuesOnly(style2, styleProp, props), Object.assign(style2, useInitialMotionValues(props, visualState, isStatic)), props.transformValues && (style2 = props.transformValues(style2)), style2;
    }
    function useHTMLProps(props, visualState, isStatic) {
      var htmlProps = {}, style2 = useStyle(props, visualState, isStatic);
      return Boolean(props.drag) && props.dragListener !== !1 && (htmlProps.draggable = !1, style2.userSelect = style2.WebkitUserSelect = style2.WebkitTouchCallout = "none", style2.touchAction = props.drag === !0 ? "none" : "pan-".concat(props.drag === "x" ? "y" : "x")), htmlProps.style = style2, htmlProps;
    }
    var validMotionProps = /* @__PURE__ */ new Set([
      "initial",
      "animate",
      "exit",
      "style",
      "variants",
      "transition",
      "transformTemplate",
      "transformValues",
      "custom",
      "inherit",
      "layout",
      "layoutId",
      "layoutDependency",
      "onLayoutAnimationStart",
      "onLayoutAnimationComplete",
      "onLayoutMeasure",
      "onBeforeLayoutMeasure",
      "onAnimationStart",
      "onAnimationComplete",
      "onUpdate",
      "onDragStart",
      "onDrag",
      "onDragEnd",
      "onMeasureDragConstraints",
      "onDirectionLock",
      "onDragTransitionEnd",
      "drag",
      "dragControls",
      "dragListener",
      "dragConstraints",
      "dragDirectionLock",
      "dragSnapToOrigin",
      "_dragX",
      "_dragY",
      "dragElastic",
      "dragMomentum",
      "dragPropagation",
      "dragTransition",
      "whileDrag",
      "onPan",
      "onPanStart",
      "onPanEnd",
      "onPanSessionStart",
      "onTap",
      "onTapStart",
      "onTapCancel",
      "onHoverStart",
      "onHoverEnd",
      "whileFocus",
      "whileTap",
      "whileHover",
      "whileInView",
      "onViewportEnter",
      "onViewportLeave",
      "viewport",
      "layoutScroll"
    ]);
    function isValidMotionProp(key) {
      return validMotionProps.has(key);
    }
    var shouldForward = function(key) {
      return !isValidMotionProp(key);
    };
    function loadExternalIsValidProp(isValidProp) {
      isValidProp && (shouldForward = function(key) {
        return key.startsWith("on") ? !isValidMotionProp(key) : isValidProp(key);
      });
    }
    try {
      loadExternalIsValidProp((init_is_prop_valid_esm(), __toCommonJS(is_prop_valid_esm_exports)).default);
    } catch {
    }
    function filterProps(props, isDom, forwardMotionProps) {
      var filteredProps = {};
      for (var key in props)
        (shouldForward(key) || forwardMotionProps === !0 && isValidMotionProp(key) || !isDom && !isValidMotionProp(key) || // If trying to use native HTML drag events, forward drag listeners
        props.draggable && key.startsWith("onDrag")) && (filteredProps[key] = props[key]);
      return filteredProps;
    }
    function calcOrigin$1(origin, offset, size) {
      return typeof origin == "string" ? origin : styleValueTypes.px.transform(offset + size * origin);
    }
    function calcSVGTransformOrigin(dimensions, originX, originY) {
      var pxOriginX = calcOrigin$1(originX, dimensions.x, dimensions.width), pxOriginY = calcOrigin$1(originY, dimensions.y, dimensions.height);
      return "".concat(pxOriginX, " ").concat(pxOriginY);
    }
    var dashKeys = {
      offset: "stroke-dashoffset",
      array: "stroke-dasharray"
    }, camelKeys = {
      offset: "strokeDashoffset",
      array: "strokeDasharray"
    };
    function buildSVGPath(attrs, length2, spacing, offset, useDashCase) {
      spacing === void 0 && (spacing = 1), offset === void 0 && (offset = 0), useDashCase === void 0 && (useDashCase = !0), attrs.pathLength = 1;
      var keys2 = useDashCase ? dashKeys : camelKeys;
      attrs[keys2.offset] = styleValueTypes.px.transform(-offset);
      var pathLength = styleValueTypes.px.transform(length2), pathSpacing = styleValueTypes.px.transform(spacing);
      attrs[keys2.array] = "".concat(pathLength, " ").concat(pathSpacing);
    }
    function buildSVGAttrs(state, _a2, options, transformTemplate) {
      var attrX = _a2.attrX, attrY = _a2.attrY, originX = _a2.originX, originY = _a2.originY, pathLength = _a2.pathLength, _b = _a2.pathSpacing, pathSpacing = _b === void 0 ? 1 : _b, _c = _a2.pathOffset, pathOffset = _c === void 0 ? 0 : _c, latest = tslib.__rest(_a2, ["attrX", "attrY", "originX", "originY", "pathLength", "pathSpacing", "pathOffset"]);
      buildHTMLStyles(state, latest, options, transformTemplate), state.attrs = state.style, state.style = {};
      var attrs = state.attrs, style2 = state.style, dimensions = state.dimensions;
      attrs.transform && (dimensions && (style2.transform = attrs.transform), delete attrs.transform), dimensions && (originX !== void 0 || originY !== void 0 || style2.transform) && (style2.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== void 0 ? originX : 0.5, originY !== void 0 ? originY : 0.5)), attrX !== void 0 && (attrs.x = attrX), attrY !== void 0 && (attrs.y = attrY), pathLength !== void 0 && buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, !1);
    }
    var createSvgRenderState = function() {
      return tslib.__assign(tslib.__assign({}, createHtmlRenderState()), { attrs: {} });
    };
    function useSVGProps(props, visualState) {
      var visualProps = React26.useMemo(function() {
        var state = createSvgRenderState();
        return buildSVGAttrs(state, visualState, { enableHardwareAcceleration: !1 }, props.transformTemplate), tslib.__assign(tslib.__assign({}, state.attrs), { style: tslib.__assign({}, state.style) });
      }, [visualState]);
      if (props.style) {
        var rawStyles = {};
        copyRawValuesOnly(rawStyles, props.style, props), visualProps.style = tslib.__assign(tslib.__assign({}, rawStyles), visualProps.style);
      }
      return visualProps;
    }
    function createUseRender(forwardMotionProps) {
      forwardMotionProps === void 0 && (forwardMotionProps = !1);
      var useRender = function(Component2, props, projectionId, ref, _a2, isStatic) {
        var latestValues = _a2.latestValues, useVisualProps = isSVGComponent(Component2) ? useSVGProps : useHTMLProps, visualProps = useVisualProps(props, latestValues, isStatic), filteredProps = filterProps(props, typeof Component2 == "string", forwardMotionProps), elementProps = tslib.__assign(tslib.__assign(tslib.__assign({}, filteredProps), visualProps), { ref });
        return projectionId && (elementProps["data-projection-id"] = projectionId), React26.createElement(Component2, elementProps);
      };
      return useRender;
    }
    var CAMEL_CASE_PATTERN = /([a-z])([A-Z])/g, REPLACE_TEMPLATE = "$1-$2", camelToDash = function(str) {
      return str.replace(CAMEL_CASE_PATTERN, REPLACE_TEMPLATE).toLowerCase();
    };
    function renderHTML(element, _a2, styleProp, projection) {
      var style2 = _a2.style, vars = _a2.vars;
      Object.assign(element.style, style2, projection && projection.getProjectionStyles(styleProp));
      for (var key in vars)
        element.style.setProperty(key, vars[key]);
    }
    var camelCaseAttributes = /* @__PURE__ */ new Set([
      "baseFrequency",
      "diffuseConstant",
      "kernelMatrix",
      "kernelUnitLength",
      "keySplines",
      "keyTimes",
      "limitingConeAngle",
      "markerHeight",
      "markerWidth",
      "numOctaves",
      "targetX",
      "targetY",
      "surfaceScale",
      "specularConstant",
      "specularExponent",
      "stdDeviation",
      "tableValues",
      "viewBox",
      "gradientTransform",
      "pathLength"
    ]);
    function renderSVG(element, renderState, _styleProp, projection) {
      renderHTML(element, renderState, void 0, projection);
      for (var key in renderState.attrs)
        element.setAttribute(camelCaseAttributes.has(key) ? key : camelToDash(key), renderState.attrs[key]);
    }
    function scrapeMotionValuesFromProps$1(props) {
      var style2 = props.style, newValues = {};
      for (var key in style2)
        (isMotionValue(style2[key]) || isForcedMotionValue(key, props)) && (newValues[key] = style2[key]);
      return newValues;
    }
    function scrapeMotionValuesFromProps(props) {
      var newValues = scrapeMotionValuesFromProps$1(props);
      for (var key in props)
        if (isMotionValue(props[key])) {
          var targetKey = key === "x" || key === "y" ? "attr" + key.toUpperCase() : key;
          newValues[targetKey] = props[key];
        }
      return newValues;
    }
    function isAnimationControls(v4) {
      return typeof v4 == "object" && typeof v4.start == "function";
    }
    var isKeyframesTarget = function(v4) {
      return Array.isArray(v4);
    }, isCustomValue = function(v4) {
      return Boolean(v4 && typeof v4 == "object" && v4.mix && v4.toValue);
    }, resolveFinalValueInKeyframes = function(v4) {
      return isKeyframesTarget(v4) ? v4[v4.length - 1] || 0 : v4;
    };
    function resolveMotionValue(value) {
      var unwrappedValue = isMotionValue(value) ? value.get() : value;
      return isCustomValue(unwrappedValue) ? unwrappedValue.toValue() : unwrappedValue;
    }
    function makeState(_a2, props, context, presenceContext) {
      var scrapeMotionValuesFromProps2 = _a2.scrapeMotionValuesFromProps, createRenderState = _a2.createRenderState, onMount = _a2.onMount, state = {
        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps2),
        renderState: createRenderState()
      };
      return onMount && (state.mount = function(instance) {
        return onMount(props, instance, state);
      }), state;
    }
    var makeUseVisualState = function(config) {
      return function(props, isStatic) {
        var context = React26.useContext(MotionContext), presenceContext = React26.useContext(PresenceContext);
        return isStatic ? makeState(config, props, context, presenceContext) : useConstant(function() {
          return makeState(config, props, context, presenceContext);
        });
      };
    };
    function makeLatestValues(props, context, presenceContext, scrapeMotionValues) {
      var values = {}, blockInitialAnimation = (presenceContext == null ? void 0 : presenceContext.initial) === !1, motionValues = scrapeMotionValues(props);
      for (var key in motionValues)
        values[key] = resolveMotionValue(motionValues[key]);
      var initial = props.initial, animate3 = props.animate, isControllingVariants = checkIfControllingVariants(props), isVariantNode = checkIfVariantNode(props);
      context && isVariantNode && !isControllingVariants && props.inherit !== !1 && (initial ?? (initial = context.initial), animate3 ?? (animate3 = context.animate));
      var initialAnimationIsBlocked = blockInitialAnimation || initial === !1, variantToSet = initialAnimationIsBlocked ? animate3 : initial;
      if (variantToSet && typeof variantToSet != "boolean" && !isAnimationControls(variantToSet)) {
        var list2 = Array.isArray(variantToSet) ? variantToSet : [variantToSet];
        list2.forEach(function(definition) {
          var resolved = resolveVariantFromProps(props, definition);
          if (resolved) {
            var transitionEnd = resolved.transitionEnd;
            resolved.transition;
            var target = tslib.__rest(resolved, ["transitionEnd", "transition"]);
            for (var key2 in target) {
              var valueTarget = target[key2];
              if (Array.isArray(valueTarget)) {
                var index3 = initialAnimationIsBlocked ? valueTarget.length - 1 : 0;
                valueTarget = valueTarget[index3];
              }
              valueTarget !== null && (values[key2] = valueTarget);
            }
            for (var key2 in transitionEnd)
              values[key2] = transitionEnd[key2];
          }
        });
      }
      return values;
    }
    var svgMotionConfig = {
      useVisualState: makeUseVisualState({
        scrapeMotionValuesFromProps,
        createRenderState: createSvgRenderState,
        onMount: function(props, instance, _a2) {
          var renderState = _a2.renderState, latestValues = _a2.latestValues;
          try {
            renderState.dimensions = typeof instance.getBBox == "function" ? instance.getBBox() : instance.getBoundingClientRect();
          } catch {
            renderState.dimensions = {
              x: 0,
              y: 0,
              width: 0,
              height: 0
            };
          }
          buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: !1 }, props.transformTemplate), renderSVG(instance, renderState);
        }
      })
    }, htmlMotionConfig = {
      useVisualState: makeUseVisualState({
        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,
        createRenderState: createHtmlRenderState
      })
    };
    function createDomMotionConfig(Component2, _a2, preloadedFeatures, createVisualElement, projectionNodeConstructor) {
      var _b = _a2.forwardMotionProps, forwardMotionProps = _b === void 0 ? !1 : _b, baseConfig = isSVGComponent(Component2) ? svgMotionConfig : htmlMotionConfig;
      return tslib.__assign(tslib.__assign({}, baseConfig), { preloadedFeatures, useRender: createUseRender(forwardMotionProps), createVisualElement, projectionNodeConstructor, Component: Component2 });
    }
    exports.AnimationType = void 0;
    (function(AnimationType) {
      AnimationType.Animate = "animate", AnimationType.Hover = "whileHover", AnimationType.Tap = "whileTap", AnimationType.Drag = "whileDrag", AnimationType.Focus = "whileFocus", AnimationType.InView = "whileInView", AnimationType.Exit = "exit";
    })(exports.AnimationType || (exports.AnimationType = {}));
    function addDomEvent(target, eventName, handler, options) {
      return options === void 0 && (options = { passive: !0 }), target.addEventListener(eventName, handler, options), function() {
        return target.removeEventListener(eventName, handler);
      };
    }
    function useDomEvent(ref, eventName, handler, options) {
      React26.useEffect(function() {
        var element = ref.current;
        if (handler && element)
          return addDomEvent(element, eventName, handler, options);
      }, [ref, eventName, handler, options]);
    }
    function useFocusGesture(_a2) {
      var whileFocus = _a2.whileFocus, visualElement2 = _a2.visualElement, onFocus = function() {
        var _a3;
        (_a3 = visualElement2.animationState) === null || _a3 === void 0 || _a3.setActive(exports.AnimationType.Focus, !0);
      }, onBlur = function() {
        var _a3;
        (_a3 = visualElement2.animationState) === null || _a3 === void 0 || _a3.setActive(exports.AnimationType.Focus, !1);
      };
      useDomEvent(visualElement2, "focus", whileFocus ? onFocus : void 0), useDomEvent(visualElement2, "blur", whileFocus ? onBlur : void 0);
    }
    function isMouseEvent(event) {
      return typeof PointerEvent < "u" && event instanceof PointerEvent ? event.pointerType === "mouse" : event instanceof MouseEvent;
    }
    function isTouchEvent(event) {
      var hasTouches = !!event.touches;
      return hasTouches;
    }
    function filterPrimaryPointer(eventHandler) {
      return function(event) {
        var isMouseEvent2 = event instanceof MouseEvent, isPrimaryPointer = !isMouseEvent2 || isMouseEvent2 && event.button === 0;
        isPrimaryPointer && eventHandler(event);
      };
    }
    var defaultPagePoint = { pageX: 0, pageY: 0 };
    function pointFromTouch(e5, pointType) {
      pointType === void 0 && (pointType = "page");
      var primaryTouch = e5.touches[0] || e5.changedTouches[0], point2 = primaryTouch || defaultPagePoint;
      return {
        x: point2[pointType + "X"],
        y: point2[pointType + "Y"]
      };
    }
    function pointFromMouse(point2, pointType) {
      return pointType === void 0 && (pointType = "page"), {
        x: point2[pointType + "X"],
        y: point2[pointType + "Y"]
      };
    }
    function extractEventInfo(event, pointType) {
      return pointType === void 0 && (pointType = "page"), {
        point: isTouchEvent(event) ? pointFromTouch(event, pointType) : pointFromMouse(event, pointType)
      };
    }
    var wrapHandler = function(handler, shouldFilterPrimaryPointer) {
      shouldFilterPrimaryPointer === void 0 && (shouldFilterPrimaryPointer = !1);
      var listener = function(event) {
        return handler(event, extractEventInfo(event));
      };
      return shouldFilterPrimaryPointer ? filterPrimaryPointer(listener) : listener;
    }, supportsPointerEvents = function() {
      return isBrowser3 && window.onpointerdown === null;
    }, supportsTouchEvents = function() {
      return isBrowser3 && window.ontouchstart === null;
    }, supportsMouseEvents = function() {
      return isBrowser3 && window.onmousedown === null;
    }, mouseEventNames = {
      pointerdown: "mousedown",
      pointermove: "mousemove",
      pointerup: "mouseup",
      pointercancel: "mousecancel",
      pointerover: "mouseover",
      pointerout: "mouseout",
      pointerenter: "mouseenter",
      pointerleave: "mouseleave"
    }, touchEventNames = {
      pointerdown: "touchstart",
      pointermove: "touchmove",
      pointerup: "touchend",
      pointercancel: "touchcancel"
    };
    function getPointerEventName(name) {
      return supportsPointerEvents() ? name : supportsTouchEvents() ? touchEventNames[name] : supportsMouseEvents() ? mouseEventNames[name] : name;
    }
    function addPointerEvent(target, eventName, handler, options) {
      return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === "pointerdown"), options);
    }
    function usePointerEvent(ref, eventName, handler, options) {
      return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === "pointerdown"), options);
    }
    function createLock(name) {
      var lock = null;
      return function() {
        var openLock = function() {
          lock = null;
        };
        return lock === null ? (lock = name, openLock) : !1;
      };
    }
    var globalHorizontalLock = createLock("dragHorizontal"), globalVerticalLock = createLock("dragVertical");
    function getGlobalLock(drag2) {
      var lock = !1;
      if (drag2 === "y")
        lock = globalVerticalLock();
      else if (drag2 === "x")
        lock = globalHorizontalLock();
      else {
        var openHorizontal_1 = globalHorizontalLock(), openVertical_1 = globalVerticalLock();
        openHorizontal_1 && openVertical_1 ? lock = function() {
          openHorizontal_1(), openVertical_1();
        } : (openHorizontal_1 && openHorizontal_1(), openVertical_1 && openVertical_1());
      }
      return lock;
    }
    function isDragActive() {
      var openGestureLock = getGlobalLock(!0);
      return openGestureLock ? (openGestureLock(), !1) : !0;
    }
    function createHoverEvent(visualElement2, isActive, callback) {
      return function(event, info) {
        var _a2;
        !isMouseEvent(event) || isDragActive() || ((_a2 = visualElement2.animationState) === null || _a2 === void 0 || _a2.setActive(exports.AnimationType.Hover, isActive), callback == null || callback(event, info));
      };
    }
    function useHoverGesture(_a2) {
      var onHoverStart = _a2.onHoverStart, onHoverEnd = _a2.onHoverEnd, whileHover = _a2.whileHover, visualElement2 = _a2.visualElement;
      usePointerEvent(visualElement2, "pointerenter", onHoverStart || whileHover ? createHoverEvent(visualElement2, !0, onHoverStart) : void 0, { passive: !onHoverStart }), usePointerEvent(visualElement2, "pointerleave", onHoverEnd || whileHover ? createHoverEvent(visualElement2, !1, onHoverEnd) : void 0, { passive: !onHoverEnd });
    }
    var isNodeOrChild = function(parent, child) {
      return child ? parent === child ? !0 : isNodeOrChild(parent, child.parentElement) : !1;
    };
    function useUnmountEffect(callback) {
      return React26.useEffect(function() {
        return function() {
          return callback();
        };
      }, []);
    }
    function useTapGesture(_a2) {
      var onTap = _a2.onTap, onTapStart = _a2.onTapStart, onTapCancel = _a2.onTapCancel, whileTap = _a2.whileTap, visualElement2 = _a2.visualElement, hasPressListeners = onTap || onTapStart || onTapCancel || whileTap, isPressing = React26.useRef(!1), cancelPointerEndListeners = React26.useRef(null), eventOptions = {
        passive: !(onTapStart || onTap || onTapCancel || onPointerDown)
      };
      function removePointerEndListener() {
        var _a3;
        (_a3 = cancelPointerEndListeners.current) === null || _a3 === void 0 || _a3.call(cancelPointerEndListeners), cancelPointerEndListeners.current = null;
      }
      function checkPointerEnd() {
        var _a3;
        return removePointerEndListener(), isPressing.current = !1, (_a3 = visualElement2.animationState) === null || _a3 === void 0 || _a3.setActive(exports.AnimationType.Tap, !1), !isDragActive();
      }
      function onPointerUp(event, info) {
        checkPointerEnd() && (isNodeOrChild(visualElement2.getInstance(), event.target) ? onTap == null || onTap(event, info) : onTapCancel == null || onTapCancel(event, info));
      }
      function onPointerCancel(event, info) {
        checkPointerEnd() && (onTapCancel == null || onTapCancel(event, info));
      }
      function onPointerDown(event, info) {
        var _a3;
        removePointerEndListener(), !isPressing.current && (isPressing.current = !0, cancelPointerEndListeners.current = popmotion.pipe(addPointerEvent(window, "pointerup", onPointerUp, eventOptions), addPointerEvent(window, "pointercancel", onPointerCancel, eventOptions)), (_a3 = visualElement2.animationState) === null || _a3 === void 0 || _a3.setActive(exports.AnimationType.Tap, !0), onTapStart == null || onTapStart(event, info));
      }
      usePointerEvent(visualElement2, "pointerdown", hasPressListeners ? onPointerDown : void 0, eventOptions), useUnmountEffect(removePointerEndListener);
    }
    var warned = /* @__PURE__ */ new Set();
    function warnOnce4(condition, message, element) {
      condition || warned.has(message) || (console.warn(message), element && console.warn(element), warned.add(message));
    }
    var observerCallbacks = /* @__PURE__ */ new WeakMap(), observers2 = /* @__PURE__ */ new WeakMap(), fireObserverCallback = function(entry2) {
      var _a2;
      (_a2 = observerCallbacks.get(entry2.target)) === null || _a2 === void 0 || _a2(entry2);
    }, fireAllObserverCallbacks = function(entries) {
      entries.forEach(fireObserverCallback);
    };
    function initIntersectionObserver(_a2) {
      var root = _a2.root, options = tslib.__rest(_a2, ["root"]), lookupRoot = root || document;
      observers2.has(lookupRoot) || observers2.set(lookupRoot, {});
      var rootObservers = observers2.get(lookupRoot), key = JSON.stringify(options);
      return rootObservers[key] || (rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, tslib.__assign({ root }, options))), rootObservers[key];
    }
    function observeIntersection(element, options, callback) {
      var rootInteresectionObserver = initIntersectionObserver(options);
      return observerCallbacks.set(element, callback), rootInteresectionObserver.observe(element), function() {
        observerCallbacks.delete(element), rootInteresectionObserver.unobserve(element);
      };
    }
    function useViewport(_a2) {
      var visualElement2 = _a2.visualElement, whileInView = _a2.whileInView, onViewportEnter = _a2.onViewportEnter, onViewportLeave = _a2.onViewportLeave, _b = _a2.viewport, viewport = _b === void 0 ? {} : _b, state = React26.useRef({
        hasEnteredView: !1,
        isInView: !1
      }), shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);
      viewport.once && state.current.hasEnteredView && (shouldObserve = !1);
      var useObserver = typeof IntersectionObserver > "u" ? useMissingIntersectionObserver : useIntersectionObserver;
      useObserver(shouldObserve, state.current, visualElement2, viewport);
    }
    var thresholdNames = {
      some: 0,
      all: 1
    };
    function useIntersectionObserver(shouldObserve, state, visualElement2, _a2) {
      var root = _a2.root, rootMargin = _a2.margin, _b = _a2.amount, amount = _b === void 0 ? "some" : _b, once = _a2.once;
      React26.useEffect(function() {
        if (shouldObserve) {
          var options = {
            root: root == null ? void 0 : root.current,
            rootMargin,
            threshold: typeof amount == "number" ? amount : thresholdNames[amount]
          }, intersectionCallback = function(entry2) {
            var _a3, isIntersecting = entry2.isIntersecting;
            if (state.isInView !== isIntersecting && (state.isInView = isIntersecting, !(once && !isIntersecting && state.hasEnteredView))) {
              isIntersecting && (state.hasEnteredView = !0), (_a3 = visualElement2.animationState) === null || _a3 === void 0 || _a3.setActive(exports.AnimationType.InView, isIntersecting);
              var props = visualElement2.getProps(), callback = isIntersecting ? props.onViewportEnter : props.onViewportLeave;
              callback == null || callback(entry2);
            }
          };
          return observeIntersection(visualElement2.getInstance(), options, intersectionCallback);
        }
      }, [shouldObserve, root, rootMargin, amount]);
    }
    function useMissingIntersectionObserver(shouldObserve, state, visualElement2, _a2) {
      var _b = _a2.fallback, fallback = _b === void 0 ? !0 : _b;
      React26.useEffect(function() {
        !shouldObserve || !fallback || (env !== "production" && warnOnce4(!1, "IntersectionObserver not available on this device. whileInView animations will trigger on mount."), requestAnimationFrame(function() {
          var _a3;
          state.hasEnteredView = !0;
          var onViewportEnter = visualElement2.getProps().onViewportEnter;
          onViewportEnter == null || onViewportEnter(null), (_a3 = visualElement2.animationState) === null || _a3 === void 0 || _a3.setActive(exports.AnimationType.InView, !0);
        }));
      }, [shouldObserve]);
    }
    var makeRenderlessComponent = function(hook) {
      return function(props) {
        return hook(props), null;
      };
    }, gestureAnimations = {
      inView: makeRenderlessComponent(useViewport),
      tap: makeRenderlessComponent(useTapGesture),
      focus: makeRenderlessComponent(useFocusGesture),
      hover: makeRenderlessComponent(useHoverGesture)
    }, counter = 0, incrementId = function() {
      return counter++;
    }, useId = function() {
      return useConstant(incrementId);
    };
    function usePresence() {
      var context = React26.useContext(PresenceContext);
      if (context === null)
        return [!0, null];
      var isPresent2 = context.isPresent, onExitComplete = context.onExitComplete, register = context.register, id2 = useId();
      React26.useEffect(function() {
        return register(id2);
      }, []);
      var safeToRemove = function() {
        return onExitComplete == null ? void 0 : onExitComplete(id2);
      };
      return !isPresent2 && onExitComplete ? [!1, safeToRemove] : [!0];
    }
    function useIsPresent() {
      return isPresent(React26.useContext(PresenceContext));
    }
    function isPresent(context) {
      return context === null ? !0 : context.isPresent;
    }
    function shallowCompare2(next, prev) {
      if (!Array.isArray(prev))
        return !1;
      var prevLength = prev.length;
      if (prevLength !== next.length)
        return !1;
      for (var i7 = 0; i7 < prevLength; i7++)
        if (prev[i7] !== next[i7])
          return !1;
      return !0;
    }
    var secondsToMilliseconds = function(seconds) {
      return seconds * 1e3;
    }, easingLookup = {
      linear: popmotion.linear,
      easeIn: popmotion.easeIn,
      easeInOut: popmotion.easeInOut,
      easeOut: popmotion.easeOut,
      circIn: popmotion.circIn,
      circInOut: popmotion.circInOut,
      circOut: popmotion.circOut,
      backIn: popmotion.backIn,
      backInOut: popmotion.backInOut,
      backOut: popmotion.backOut,
      anticipate: popmotion.anticipate,
      bounceIn: popmotion.bounceIn,
      bounceInOut: popmotion.bounceInOut,
      bounceOut: popmotion.bounceOut
    }, easingDefinitionToFunction = function(definition) {
      if (Array.isArray(definition)) {
        heyListen.invariant(definition.length === 4, "Cubic bezier arrays must contain four numerical values.");
        var _a2 = tslib.__read(definition, 4), x1 = _a2[0], y1 = _a2[1], x22 = _a2[2], y22 = _a2[3];
        return popmotion.cubicBezier(x1, y1, x22, y22);
      } else if (typeof definition == "string")
        return heyListen.invariant(easingLookup[definition] !== void 0, "Invalid easing type '".concat(definition, "'")), easingLookup[definition];
      return definition;
    }, isEasingArray = function(ease) {
      return Array.isArray(ease) && typeof ease[0] != "number";
    }, isAnimatable = function(key, value) {
      return key === "zIndex" ? !1 : !!(typeof value == "number" || Array.isArray(value) || typeof value == "string" && // It's animatable if we have a string
      styleValueTypes.complex.test(value) && // And it contains numbers and/or colors
      !value.startsWith("url("));
    }, underDampedSpring = function() {
      return {
        type: "spring",
        stiffness: 500,
        damping: 25,
        restSpeed: 10
      };
    }, criticallyDampedSpring = function(to) {
      return {
        type: "spring",
        stiffness: 550,
        damping: to === 0 ? 2 * Math.sqrt(550) : 30,
        restSpeed: 10
      };
    }, linearTween = function() {
      return {
        type: "keyframes",
        ease: "linear",
        duration: 0.3
      };
    }, keyframes = function(values) {
      return {
        type: "keyframes",
        duration: 0.8,
        values
      };
    }, defaultTransitions = {
      x: underDampedSpring,
      y: underDampedSpring,
      z: underDampedSpring,
      rotate: underDampedSpring,
      rotateX: underDampedSpring,
      rotateY: underDampedSpring,
      rotateZ: underDampedSpring,
      scaleX: criticallyDampedSpring,
      scaleY: criticallyDampedSpring,
      scale: criticallyDampedSpring,
      opacity: linearTween,
      backgroundColor: linearTween,
      color: linearTween,
      default: criticallyDampedSpring
    }, getDefaultTransition = function(valueKey, to) {
      var transitionFactory;
      return isKeyframesTarget(to) ? transitionFactory = keyframes : transitionFactory = defaultTransitions[valueKey] || defaultTransitions.default, tslib.__assign({ to }, transitionFactory(to));
    }, defaultValueTypes = tslib.__assign(tslib.__assign({}, numberValueTypes), {
      // Color props
      color: styleValueTypes.color,
      backgroundColor: styleValueTypes.color,
      outlineColor: styleValueTypes.color,
      fill: styleValueTypes.color,
      stroke: styleValueTypes.color,
      // Border props
      borderColor: styleValueTypes.color,
      borderTopColor: styleValueTypes.color,
      borderRightColor: styleValueTypes.color,
      borderBottomColor: styleValueTypes.color,
      borderLeftColor: styleValueTypes.color,
      filter: styleValueTypes.filter,
      WebkitFilter: styleValueTypes.filter
    }), getDefaultValueType = function(key) {
      return defaultValueTypes[key];
    };
    function getAnimatableNone(key, value) {
      var _a2, defaultValueType = getDefaultValueType(key);
      return defaultValueType !== styleValueTypes.filter && (defaultValueType = styleValueTypes.complex), (_a2 = defaultValueType.getAnimatableNone) === null || _a2 === void 0 ? void 0 : _a2.call(defaultValueType, value);
    }
    var instantAnimationState = {
      current: !1
    };
    function isTransitionDefined(_a2) {
      _a2.when, _a2.delay, _a2.delayChildren, _a2.staggerChildren, _a2.staggerDirection, _a2.repeat, _a2.repeatType, _a2.repeatDelay, _a2.from;
      var transition = tslib.__rest(_a2, ["when", "delay", "delayChildren", "staggerChildren", "staggerDirection", "repeat", "repeatType", "repeatDelay", "from"]);
      return !!Object.keys(transition).length;
    }
    var legacyRepeatWarning = !1;
    function convertTransitionToAnimationOptions(_a2) {
      var ease = _a2.ease, times = _a2.times, yoyo = _a2.yoyo, flip = _a2.flip, loop = _a2.loop, transition = tslib.__rest(_a2, ["ease", "times", "yoyo", "flip", "loop"]), options = tslib.__assign({}, transition);
      return times && (options.offset = times), transition.duration && (options.duration = secondsToMilliseconds(transition.duration)), transition.repeatDelay && (options.repeatDelay = secondsToMilliseconds(transition.repeatDelay)), ease && (options.ease = isEasingArray(ease) ? ease.map(easingDefinitionToFunction) : easingDefinitionToFunction(ease)), transition.type === "tween" && (options.type = "keyframes"), (yoyo || loop || flip) && (heyListen.warning(!legacyRepeatWarning, "yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options."), legacyRepeatWarning = !0, yoyo ? options.repeatType = "reverse" : loop ? options.repeatType = "loop" : flip && (options.repeatType = "mirror"), options.repeat = loop || yoyo || flip || transition.repeat), transition.type !== "spring" && (options.type = "keyframes"), options;
    }
    function getDelayFromTransition(transition, key) {
      var _a2, _b, valueTransition = getValueTransition(transition, key) || {};
      return (_b = (_a2 = valueTransition.delay) !== null && _a2 !== void 0 ? _a2 : transition.delay) !== null && _b !== void 0 ? _b : 0;
    }
    function hydrateKeyframes2(options) {
      return Array.isArray(options.to) && options.to[0] === null && (options.to = tslib.__spreadArray([], tslib.__read(options.to), !1), options.to[0] = options.from), options;
    }
    function getPopmotionAnimationOptions(transition, options, key) {
      var _a2;
      return Array.isArray(options.to) && ((_a2 = transition.duration) !== null && _a2 !== void 0 || (transition.duration = 0.8)), hydrateKeyframes2(options), isTransitionDefined(transition) || (transition = tslib.__assign(tslib.__assign({}, transition), getDefaultTransition(key, options.to))), tslib.__assign(tslib.__assign({}, options), convertTransitionToAnimationOptions(transition));
    }
    function getAnimation(key, value, target, transition, onComplete) {
      var _a2, valueTransition = getValueTransition(transition, key), origin = (_a2 = valueTransition.from) !== null && _a2 !== void 0 ? _a2 : value.get(), isTargetAnimatable = isAnimatable(key, target);
      origin === "none" && isTargetAnimatable && typeof target == "string" ? origin = getAnimatableNone(key, target) : isZero(origin) && typeof target == "string" ? origin = getZeroUnit(target) : !Array.isArray(target) && isZero(target) && typeof origin == "string" && (target = getZeroUnit(origin));
      var isOriginAnimatable = isAnimatable(key, origin);
      heyListen.warning(isOriginAnimatable === isTargetAnimatable, "You are trying to animate ".concat(key, ' from "').concat(origin, '" to "').concat(target, '". ').concat(origin, " is not an animatable value - to enable this animation set ").concat(origin, " to a value animatable to ").concat(target, " via the `style` property."));
      function start() {
        var options = {
          from: origin,
          to: target,
          velocity: value.getVelocity(),
          onComplete,
          onUpdate: function(v4) {
            return value.set(v4);
          }
        };
        return valueTransition.type === "inertia" || valueTransition.type === "decay" ? popmotion.inertia(tslib.__assign(tslib.__assign({}, options), valueTransition)) : popmotion.animate(tslib.__assign(tslib.__assign({}, getPopmotionAnimationOptions(valueTransition, options, key)), { onUpdate: function(v4) {
          var _a3;
          options.onUpdate(v4), (_a3 = valueTransition.onUpdate) === null || _a3 === void 0 || _a3.call(valueTransition, v4);
        }, onComplete: function() {
          var _a3;
          options.onComplete(), (_a3 = valueTransition.onComplete) === null || _a3 === void 0 || _a3.call(valueTransition);
        } }));
      }
      function set() {
        var _a3, _b, finalTarget = resolveFinalValueInKeyframes(target);
        return value.set(finalTarget), onComplete(), (_a3 = valueTransition == null ? void 0 : valueTransition.onUpdate) === null || _a3 === void 0 || _a3.call(valueTransition, finalTarget), (_b = valueTransition == null ? void 0 : valueTransition.onComplete) === null || _b === void 0 || _b.call(valueTransition), { stop: function() {
        } };
      }
      return !isOriginAnimatable || !isTargetAnimatable || valueTransition.type === !1 ? set : start;
    }
    function isZero(value) {
      return value === 0 || typeof value == "string" && parseFloat(value) === 0 && value.indexOf(" ") === -1;
    }
    function getZeroUnit(potentialUnitType) {
      return typeof potentialUnitType == "number" ? 0 : getAnimatableNone("", potentialUnitType);
    }
    function getValueTransition(transition, key) {
      return transition[key] || transition.default || transition;
    }
    function startAnimation(key, value, target, transition) {
      return transition === void 0 && (transition = {}), instantAnimationState.current && (transition = { type: !1 }), value.start(function(onComplete) {
        var delayTimer, controls2, animation = getAnimation(key, value, target, transition, onComplete), delay = getDelayFromTransition(transition, key), start = function() {
          return controls2 = animation();
        };
        return delay ? delayTimer = window.setTimeout(start, secondsToMilliseconds(delay)) : start(), function() {
          clearTimeout(delayTimer), controls2 == null || controls2.stop();
        };
      });
    }
    var isNumericalString = function(v4) {
      return /^\-?\d*\.?\d+$/.test(v4);
    }, isZeroValueString = function(v4) {
      return /^0[^.\s]+$/.test(v4);
    };
    function addUniqueItem2(arr, item) {
      arr.indexOf(item) === -1 && arr.push(item);
    }
    function removeItem2(arr, item) {
      var index3 = arr.indexOf(item);
      index3 > -1 && arr.splice(index3, 1);
    }
    function moveItem(_a2, fromIndex, toIndex) {
      var _b = tslib.__read(_a2), arr = _b.slice(0), startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;
      if (startIndex >= 0 && startIndex < arr.length) {
        var endIndex = toIndex < 0 ? arr.length + toIndex : toIndex, _c = tslib.__read(arr.splice(fromIndex, 1), 1), item = _c[0];
        arr.splice(endIndex, 0, item);
      }
      return arr;
    }
    var SubscriptionManager = (
      /** @class */
      function() {
        function SubscriptionManager2() {
          this.subscriptions = [];
        }
        return SubscriptionManager2.prototype.add = function(handler) {
          var _this = this;
          return addUniqueItem2(this.subscriptions, handler), function() {
            return removeItem2(_this.subscriptions, handler);
          };
        }, SubscriptionManager2.prototype.notify = function(a13, b6, c13) {
          var numSubscriptions = this.subscriptions.length;
          if (numSubscriptions)
            if (numSubscriptions === 1)
              this.subscriptions[0](a13, b6, c13);
            else
              for (var i7 = 0; i7 < numSubscriptions; i7++) {
                var handler = this.subscriptions[i7];
                handler && handler(a13, b6, c13);
              }
        }, SubscriptionManager2.prototype.getSize = function() {
          return this.subscriptions.length;
        }, SubscriptionManager2.prototype.clear = function() {
          this.subscriptions.length = 0;
        }, SubscriptionManager2;
      }()
    ), isFloat = function(value) {
      return !isNaN(parseFloat(value));
    }, MotionValue2 = (
      /** @class */
      function() {
        function MotionValue3(init) {
          var _this = this;
          this.version = "6.5.1", this.timeDelta = 0, this.lastUpdated = 0, this.updateSubscribers = new SubscriptionManager(), this.velocityUpdateSubscribers = new SubscriptionManager(), this.renderSubscribers = new SubscriptionManager(), this.canTrackVelocity = !1, this.updateAndNotify = function(v4, render) {
            render === void 0 && (render = !0), _this.prev = _this.current, _this.current = v4;
            var _a2 = sync.getFrameData(), delta = _a2.delta, timestamp = _a2.timestamp;
            _this.lastUpdated !== timestamp && (_this.timeDelta = delta, _this.lastUpdated = timestamp, sync__default.default.postRender(_this.scheduleVelocityCheck)), _this.prev !== _this.current && _this.updateSubscribers.notify(_this.current), _this.velocityUpdateSubscribers.getSize() && _this.velocityUpdateSubscribers.notify(_this.getVelocity()), render && _this.renderSubscribers.notify(_this.current);
          }, this.scheduleVelocityCheck = function() {
            return sync__default.default.postRender(_this.velocityCheck);
          }, this.velocityCheck = function(_a2) {
            var timestamp = _a2.timestamp;
            timestamp !== _this.lastUpdated && (_this.prev = _this.current, _this.velocityUpdateSubscribers.notify(_this.getVelocity()));
          }, this.hasAnimated = !1, this.prev = this.current = init, this.canTrackVelocity = isFloat(this.current);
        }
        return MotionValue3.prototype.onChange = function(subscription) {
          return this.updateSubscribers.add(subscription);
        }, MotionValue3.prototype.clearListeners = function() {
          this.updateSubscribers.clear();
        }, MotionValue3.prototype.onRenderRequest = function(subscription) {
          return subscription(this.get()), this.renderSubscribers.add(subscription);
        }, MotionValue3.prototype.attach = function(passiveEffect) {
          this.passiveEffect = passiveEffect;
        }, MotionValue3.prototype.set = function(v4, render) {
          render === void 0 && (render = !0), !render || !this.passiveEffect ? this.updateAndNotify(v4, render) : this.passiveEffect(v4, this.updateAndNotify);
        }, MotionValue3.prototype.get = function() {
          return this.current;
        }, MotionValue3.prototype.getPrevious = function() {
          return this.prev;
        }, MotionValue3.prototype.getVelocity = function() {
          return this.canTrackVelocity ? (
            // These casts could be avoided if parseFloat would be typed better
            popmotion.velocityPerSecond(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta)
          ) : 0;
        }, MotionValue3.prototype.start = function(animation) {
          var _this = this;
          return this.stop(), new Promise(function(resolve) {
            _this.hasAnimated = !0, _this.stopAnimation = animation(resolve);
          }).then(function() {
            return _this.clearAnimation();
          });
        }, MotionValue3.prototype.stop = function() {
          this.stopAnimation && this.stopAnimation(), this.clearAnimation();
        }, MotionValue3.prototype.isAnimating = function() {
          return !!this.stopAnimation;
        }, MotionValue3.prototype.clearAnimation = function() {
          this.stopAnimation = null;
        }, MotionValue3.prototype.destroy = function() {
          this.updateSubscribers.clear(), this.renderSubscribers.clear(), this.stop();
        }, MotionValue3;
      }()
    );
    function motionValue(init) {
      return new MotionValue2(init);
    }
    var testValueType = function(v4) {
      return function(type) {
        return type.test(v4);
      };
    }, auto = {
      test: function(v4) {
        return v4 === "auto";
      },
      parse: function(v4) {
        return v4;
      }
    }, dimensionValueTypes = [styleValueTypes.number, styleValueTypes.px, styleValueTypes.percent, styleValueTypes.degrees, styleValueTypes.vw, styleValueTypes.vh, auto], findDimensionValueType = function(v4) {
      return dimensionValueTypes.find(testValueType(v4));
    }, valueTypes = tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(dimensionValueTypes), !1), [styleValueTypes.color, styleValueTypes.complex], !1), findValueType = function(v4) {
      return valueTypes.find(testValueType(v4));
    };
    function setMotionValue(visualElement2, key, value) {
      visualElement2.hasValue(key) ? visualElement2.getValue(key).set(value) : visualElement2.addValue(key, motionValue(value));
    }
    function setTarget(visualElement2, definition) {
      var resolved = resolveVariant2(visualElement2, definition), _a2 = resolved ? visualElement2.makeTargetAnimatable(resolved, !1) : {}, _b = _a2.transitionEnd, transitionEnd = _b === void 0 ? {} : _b;
      _a2.transition;
      var target = tslib.__rest(_a2, ["transitionEnd", "transition"]);
      target = tslib.__assign(tslib.__assign({}, target), transitionEnd);
      for (var key in target) {
        var value = resolveFinalValueInKeyframes(target[key]);
        setMotionValue(visualElement2, key, value);
      }
    }
    function setVariants(visualElement2, variantLabels) {
      var reversedLabels = tslib.__spreadArray([], tslib.__read(variantLabels), !1).reverse();
      reversedLabels.forEach(function(key) {
        var _a2, variant = visualElement2.getVariant(key);
        variant && setTarget(visualElement2, variant), (_a2 = visualElement2.variantChildren) === null || _a2 === void 0 || _a2.forEach(function(child) {
          setVariants(child, variantLabels);
        });
      });
    }
    function setValues(visualElement2, definition) {
      if (Array.isArray(definition))
        return setVariants(visualElement2, definition);
      if (typeof definition == "string")
        return setVariants(visualElement2, [definition]);
      setTarget(visualElement2, definition);
    }
    function checkTargetForNewValues(visualElement2, target, origin) {
      var _a2, _b, _c, _d, newValueKeys = Object.keys(target).filter(function(key2) {
        return !visualElement2.hasValue(key2);
      }), numNewValues = newValueKeys.length;
      if (numNewValues)
        for (var i7 = 0; i7 < numNewValues; i7++) {
          var key = newValueKeys[i7], targetValue = target[key], value = null;
          Array.isArray(targetValue) && (value = targetValue[0]), value === null && (value = (_b = (_a2 = origin[key]) !== null && _a2 !== void 0 ? _a2 : visualElement2.readValue(key)) !== null && _b !== void 0 ? _b : target[key]), value != null && (typeof value == "string" && (isNumericalString(value) || isZeroValueString(value)) ? value = parseFloat(value) : !findValueType(value) && styleValueTypes.complex.test(targetValue) && (value = getAnimatableNone(key, targetValue)), visualElement2.addValue(key, motionValue(value)), (_c = (_d = origin)[key]) !== null && _c !== void 0 || (_d[key] = value), visualElement2.setBaseTarget(key, value));
        }
    }
    function getOriginFromTransition(key, transition) {
      if (transition) {
        var valueTransition = transition[key] || transition.default || transition;
        return valueTransition.from;
      }
    }
    function getOrigin(target, transition, visualElement2) {
      var _a2, _b, origin = {};
      for (var key in target)
        origin[key] = (_a2 = getOriginFromTransition(key, transition)) !== null && _a2 !== void 0 ? _a2 : (_b = visualElement2.getValue(key)) === null || _b === void 0 ? void 0 : _b.get();
      return origin;
    }
    function animateVisualElement(visualElement2, definition, options) {
      options === void 0 && (options = {}), visualElement2.notifyAnimationStart(definition);
      var animation;
      if (Array.isArray(definition)) {
        var animations2 = definition.map(function(variant) {
          return animateVariant(visualElement2, variant, options);
        });
        animation = Promise.all(animations2);
      } else if (typeof definition == "string")
        animation = animateVariant(visualElement2, definition, options);
      else {
        var resolvedDefinition = typeof definition == "function" ? resolveVariant2(visualElement2, definition, options.custom) : definition;
        animation = animateTarget(visualElement2, resolvedDefinition, options);
      }
      return animation.then(function() {
        return visualElement2.notifyAnimationComplete(definition);
      });
    }
    function animateVariant(visualElement2, variant, options) {
      var _a2;
      options === void 0 && (options = {});
      var resolved = resolveVariant2(visualElement2, variant, options.custom), _b = (resolved || {}).transition, transition = _b === void 0 ? visualElement2.getDefaultTransition() || {} : _b;
      options.transitionOverride && (transition = options.transitionOverride);
      var getAnimation2 = resolved ? function() {
        return animateTarget(visualElement2, resolved, options);
      } : function() {
        return Promise.resolve();
      }, getChildAnimations = !((_a2 = visualElement2.variantChildren) === null || _a2 === void 0) && _a2.size ? function(forwardDelay) {
        forwardDelay === void 0 && (forwardDelay = 0);
        var _a3 = transition.delayChildren, delayChildren = _a3 === void 0 ? 0 : _a3, staggerChildren = transition.staggerChildren, staggerDirection = transition.staggerDirection;
        return animateChildren(visualElement2, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);
      } : function() {
        return Promise.resolve();
      }, when = transition.when;
      if (when) {
        var _c = tslib.__read(when === "beforeChildren" ? [getAnimation2, getChildAnimations] : [getChildAnimations, getAnimation2], 2), first = _c[0], last = _c[1];
        return first().then(last);
      } else
        return Promise.all([getAnimation2(), getChildAnimations(options.delay)]);
    }
    function animateTarget(visualElement2, definition, _a2) {
      var _b, _c = _a2 === void 0 ? {} : _a2, _d = _c.delay, delay = _d === void 0 ? 0 : _d, transitionOverride = _c.transitionOverride, type = _c.type, _e3 = visualElement2.makeTargetAnimatable(definition), _f = _e3.transition, transition = _f === void 0 ? visualElement2.getDefaultTransition() : _f, transitionEnd = _e3.transitionEnd, target = tslib.__rest(_e3, ["transition", "transitionEnd"]);
      transitionOverride && (transition = transitionOverride);
      var animations2 = [], animationTypeState = type && ((_b = visualElement2.animationState) === null || _b === void 0 ? void 0 : _b.getState()[type]);
      for (var key in target) {
        var value = visualElement2.getValue(key), valueTarget = target[key];
        if (!(!value || valueTarget === void 0 || animationTypeState && shouldBlockAnimation(animationTypeState, key))) {
          var valueTransition = tslib.__assign({ delay }, transition);
          visualElement2.shouldReduceMotion && isTransformProp(key) && (valueTransition = tslib.__assign(tslib.__assign({}, valueTransition), { type: !1, delay: 0 }));
          var animation = startAnimation(key, value, valueTarget, valueTransition);
          animations2.push(animation);
        }
      }
      return Promise.all(animations2).then(function() {
        transitionEnd && setTarget(visualElement2, transitionEnd);
      });
    }
    function animateChildren(visualElement2, variant, delayChildren, staggerChildren, staggerDirection, options) {
      delayChildren === void 0 && (delayChildren = 0), staggerChildren === void 0 && (staggerChildren = 0), staggerDirection === void 0 && (staggerDirection = 1);
      var animations2 = [], maxStaggerDuration = (visualElement2.variantChildren.size - 1) * staggerChildren, generateStaggerDuration = staggerDirection === 1 ? function(i7) {
        return i7 === void 0 && (i7 = 0), i7 * staggerChildren;
      } : function(i7) {
        return i7 === void 0 && (i7 = 0), maxStaggerDuration - i7 * staggerChildren;
      };
      return Array.from(visualElement2.variantChildren).sort(sortByTreeOrder).forEach(function(child, i7) {
        animations2.push(animateVariant(child, variant, tslib.__assign(tslib.__assign({}, options), { delay: delayChildren + generateStaggerDuration(i7) })).then(function() {
          return child.notifyAnimationComplete(variant);
        }));
      }), Promise.all(animations2);
    }
    function stopAnimation2(visualElement2) {
      visualElement2.forEachValue(function(value) {
        return value.stop();
      });
    }
    function sortByTreeOrder(a13, b6) {
      return a13.sortNodePosition(b6);
    }
    function shouldBlockAnimation(_a2, key) {
      var protectedKeys = _a2.protectedKeys, needsAnimating = _a2.needsAnimating, shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== !0;
      return needsAnimating[key] = !1, shouldBlock;
    }
    var variantPriorityOrder = [
      exports.AnimationType.Animate,
      exports.AnimationType.InView,
      exports.AnimationType.Focus,
      exports.AnimationType.Hover,
      exports.AnimationType.Tap,
      exports.AnimationType.Drag,
      exports.AnimationType.Exit
    ], reversePriorityOrder = tslib.__spreadArray([], tslib.__read(variantPriorityOrder), !1).reverse(), numAnimationTypes = variantPriorityOrder.length;
    function animateList(visualElement2) {
      return function(animations2) {
        return Promise.all(animations2.map(function(_a2) {
          var animation = _a2.animation, options = _a2.options;
          return animateVisualElement(visualElement2, animation, options);
        }));
      };
    }
    function createAnimationState(visualElement2) {
      var animate3 = animateList(visualElement2), state = createState(), allAnimatedKeys = {}, isInitialRender = !0, buildResolvedTypeValues = function(acc, definition) {
        var resolved = resolveVariant2(visualElement2, definition);
        if (resolved) {
          resolved.transition;
          var transitionEnd = resolved.transitionEnd, target = tslib.__rest(resolved, ["transition", "transitionEnd"]);
          acc = tslib.__assign(tslib.__assign(tslib.__assign({}, acc), target), transitionEnd);
        }
        return acc;
      };
      function isAnimated(key) {
        return allAnimatedKeys[key] !== void 0;
      }
      function setAnimateFunction(makeAnimator) {
        animate3 = makeAnimator(visualElement2);
      }
      function animateChanges(options, changedActiveType) {
        for (var _a2, props = visualElement2.getProps(), context = visualElement2.getVariantContext(!0) || {}, animations2 = [], removedKeys = /* @__PURE__ */ new Set(), encounteredKeys = {}, removedVariantIndex = 1 / 0, _loop_1 = function(i8) {
          var type = reversePriorityOrder[i8], typeState = state[type], prop = (_a2 = props[type]) !== null && _a2 !== void 0 ? _a2 : context[type], propIsVariant = isVariantLabel(prop), activeDelta = type === changedActiveType ? typeState.isActive : null;
          activeDelta === !1 && (removedVariantIndex = i8);
          var isInherited = prop === context[type] && prop !== props[type] && propIsVariant;
          if (isInherited && isInitialRender && visualElement2.manuallyAnimateOnMount && (isInherited = !1), typeState.protectedKeys = tslib.__assign({}, encounteredKeys), // If it isn't active and hasn't *just* been set as inactive
          !typeState.isActive && activeDelta === null || // If we didn't and don't have any defined prop for this animation type
          !prop && !typeState.prevProp || // Or if the prop doesn't define an animation
          isAnimationControls(prop) || typeof prop == "boolean")
            return "continue";
          var variantDidChange = checkVariantsDidChange(typeState.prevProp, prop), shouldAnimateType = variantDidChange || // If we're making this variant active, we want to always make it active
          type === changedActiveType && typeState.isActive && !isInherited && propIsVariant || // If we removed a higher-priority variant (i is in reverse order)
          i8 > removedVariantIndex && propIsVariant, definitionList = Array.isArray(prop) ? prop : [prop], resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});
          activeDelta === !1 && (resolvedValues = {});
          var _b = typeState.prevResolvedValues, prevResolvedValues = _b === void 0 ? {} : _b, allKeys = tslib.__assign(tslib.__assign({}, prevResolvedValues), resolvedValues), markToAnimate = function(key2) {
            shouldAnimateType = !0, removedKeys.delete(key2), typeState.needsAnimating[key2] = !0;
          };
          for (var key in allKeys) {
            var next = resolvedValues[key], prev = prevResolvedValues[key];
            encounteredKeys.hasOwnProperty(key) || (next !== prev ? isKeyframesTarget(next) && isKeyframesTarget(prev) ? !shallowCompare2(next, prev) || variantDidChange ? markToAnimate(key) : typeState.protectedKeys[key] = !0 : next !== void 0 ? markToAnimate(key) : removedKeys.add(key) : next !== void 0 && removedKeys.has(key) ? markToAnimate(key) : typeState.protectedKeys[key] = !0);
          }
          typeState.prevProp = prop, typeState.prevResolvedValues = resolvedValues, typeState.isActive && (encounteredKeys = tslib.__assign(tslib.__assign({}, encounteredKeys), resolvedValues)), isInitialRender && visualElement2.blockInitialAnimation && (shouldAnimateType = !1), shouldAnimateType && !isInherited && animations2.push.apply(animations2, tslib.__spreadArray([], tslib.__read(definitionList.map(function(animation) {
            return {
              animation,
              options: tslib.__assign({ type }, options)
            };
          })), !1));
        }, i7 = 0; i7 < numAnimationTypes; i7++)
          _loop_1(i7);
        if (allAnimatedKeys = tslib.__assign({}, encounteredKeys), removedKeys.size) {
          var fallbackAnimation_1 = {};
          removedKeys.forEach(function(key) {
            var fallbackTarget = visualElement2.getBaseTarget(key);
            fallbackTarget !== void 0 && (fallbackAnimation_1[key] = fallbackTarget);
          }), animations2.push({ animation: fallbackAnimation_1 });
        }
        var shouldAnimate = Boolean(animations2.length);
        return isInitialRender && props.initial === !1 && !visualElement2.manuallyAnimateOnMount && (shouldAnimate = !1), isInitialRender = !1, shouldAnimate ? animate3(animations2) : Promise.resolve();
      }
      function setActive(type, isActive, options) {
        var _a2;
        if (state[type].isActive === isActive)
          return Promise.resolve();
        (_a2 = visualElement2.variantChildren) === null || _a2 === void 0 || _a2.forEach(function(child) {
          var _a3;
          return (_a3 = child.animationState) === null || _a3 === void 0 ? void 0 : _a3.setActive(type, isActive);
        }), state[type].isActive = isActive;
        var animations2 = animateChanges(options, type);
        for (var key in state)
          state[key].protectedKeys = {};
        return animations2;
      }
      return {
        isAnimated,
        animateChanges,
        setActive,
        setAnimateFunction,
        getState: function() {
          return state;
        }
      };
    }
    function checkVariantsDidChange(prev, next) {
      return typeof next == "string" ? next !== prev : isVariantLabels(next) ? !shallowCompare2(next, prev) : !1;
    }
    function createTypeState(isActive) {
      return isActive === void 0 && (isActive = !1), {
        isActive,
        protectedKeys: {},
        needsAnimating: {},
        prevResolvedValues: {}
      };
    }
    function createState() {
      var _a2;
      return _a2 = {}, _a2[exports.AnimationType.Animate] = createTypeState(!0), _a2[exports.AnimationType.InView] = createTypeState(), _a2[exports.AnimationType.Hover] = createTypeState(), _a2[exports.AnimationType.Tap] = createTypeState(), _a2[exports.AnimationType.Drag] = createTypeState(), _a2[exports.AnimationType.Focus] = createTypeState(), _a2[exports.AnimationType.Exit] = createTypeState(), _a2;
    }
    var animations = {
      animation: makeRenderlessComponent(function(_a2) {
        var visualElement2 = _a2.visualElement, animate3 = _a2.animate;
        visualElement2.animationState || (visualElement2.animationState = createAnimationState(visualElement2)), isAnimationControls(animate3) && React26.useEffect(function() {
          return animate3.subscribe(visualElement2);
        }, [animate3]);
      }),
      exit: makeRenderlessComponent(function(props) {
        var custom = props.custom, visualElement2 = props.visualElement, _a2 = tslib.__read(usePresence(), 2), isPresent2 = _a2[0], safeToRemove = _a2[1], presenceContext = React26.useContext(PresenceContext);
        React26.useEffect(function() {
          var _a3, _b;
          visualElement2.isPresent = isPresent2;
          var animation = (_a3 = visualElement2.animationState) === null || _a3 === void 0 ? void 0 : _a3.setActive(exports.AnimationType.Exit, !isPresent2, { custom: (_b = presenceContext == null ? void 0 : presenceContext.custom) !== null && _b !== void 0 ? _b : custom });
          !isPresent2 && (animation == null || animation.then(safeToRemove));
        }, [isPresent2]);
      })
    }, PanSession = (
      /** @class */
      function() {
        function PanSession2(event, handlers, _a2) {
          var _this = this, _b = _a2 === void 0 ? {} : _a2, transformPagePoint = _b.transformPagePoint;
          if (this.startEvent = null, this.lastMoveEvent = null, this.lastMoveEventInfo = null, this.handlers = {}, this.updatePoint = function() {
            if (_this.lastMoveEvent && _this.lastMoveEventInfo) {
              var info2 = getPanInfo(_this.lastMoveEventInfo, _this.history), isPanStarted = _this.startEvent !== null, isDistancePastThreshold = popmotion.distance(info2.offset, { x: 0, y: 0 }) >= 3;
              if (!(!isPanStarted && !isDistancePastThreshold)) {
                var point3 = info2.point, timestamp2 = sync.getFrameData().timestamp;
                _this.history.push(tslib.__assign(tslib.__assign({}, point3), { timestamp: timestamp2 }));
                var _a3 = _this.handlers, onStart = _a3.onStart, onMove = _a3.onMove;
                isPanStarted || (onStart && onStart(_this.lastMoveEvent, info2), _this.startEvent = _this.lastMoveEvent), onMove && onMove(_this.lastMoveEvent, info2);
              }
            }
          }, this.handlePointerMove = function(event2, info2) {
            if (_this.lastMoveEvent = event2, _this.lastMoveEventInfo = transformPoint(info2, _this.transformPagePoint), isMouseEvent(event2) && event2.buttons === 0) {
              _this.handlePointerUp(event2, info2);
              return;
            }
            sync__default.default.update(_this.updatePoint, !0);
          }, this.handlePointerUp = function(event2, info2) {
            _this.end();
            var _a3 = _this.handlers, onEnd = _a3.onEnd, onSessionEnd = _a3.onSessionEnd, panInfo = getPanInfo(transformPoint(info2, _this.transformPagePoint), _this.history);
            _this.startEvent && onEnd && onEnd(event2, panInfo), onSessionEnd && onSessionEnd(event2, panInfo);
          }, !(isTouchEvent(event) && event.touches.length > 1)) {
            this.handlers = handlers, this.transformPagePoint = transformPagePoint;
            var info = extractEventInfo(event), initialInfo = transformPoint(info, this.transformPagePoint), point2 = initialInfo.point, timestamp = sync.getFrameData().timestamp;
            this.history = [tslib.__assign(tslib.__assign({}, point2), { timestamp })];
            var onSessionStart = handlers.onSessionStart;
            onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history)), this.removeListeners = popmotion.pipe(addPointerEvent(window, "pointermove", this.handlePointerMove), addPointerEvent(window, "pointerup", this.handlePointerUp), addPointerEvent(window, "pointercancel", this.handlePointerUp));
          }
        }
        return PanSession2.prototype.updateHandlers = function(handlers) {
          this.handlers = handlers;
        }, PanSession2.prototype.end = function() {
          this.removeListeners && this.removeListeners(), sync.cancelSync.update(this.updatePoint);
        }, PanSession2;
      }()
    );
    function transformPoint(info, transformPagePoint) {
      return transformPagePoint ? { point: transformPagePoint(info.point) } : info;
    }
    function subtractPoint(a13, b6) {
      return { x: a13.x - b6.x, y: a13.y - b6.y };
    }
    function getPanInfo(_a2, history2) {
      var point2 = _a2.point;
      return {
        point: point2,
        delta: subtractPoint(point2, lastDevicePoint(history2)),
        offset: subtractPoint(point2, startDevicePoint(history2)),
        velocity: getVelocity(history2, 0.1)
      };
    }
    function startDevicePoint(history2) {
      return history2[0];
    }
    function lastDevicePoint(history2) {
      return history2[history2.length - 1];
    }
    function getVelocity(history2, timeDelta) {
      if (history2.length < 2)
        return { x: 0, y: 0 };
      for (var i7 = history2.length - 1, timestampedPoint = null, lastPoint = lastDevicePoint(history2); i7 >= 0 && (timestampedPoint = history2[i7], !(lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta))); )
        i7--;
      if (!timestampedPoint)
        return { x: 0, y: 0 };
      var time2 = (lastPoint.timestamp - timestampedPoint.timestamp) / 1e3;
      if (time2 === 0)
        return { x: 0, y: 0 };
      var currentVelocity = {
        x: (lastPoint.x - timestampedPoint.x) / time2,
        y: (lastPoint.y - timestampedPoint.y) / time2
      };
      return currentVelocity.x === 1 / 0 && (currentVelocity.x = 0), currentVelocity.y === 1 / 0 && (currentVelocity.y = 0), currentVelocity;
    }
    function calcLength(axis) {
      return axis.max - axis.min;
    }
    function isNear(value, target, maxDistance) {
      return target === void 0 && (target = 0), maxDistance === void 0 && (maxDistance = 0.01), popmotion.distance(value, target) < maxDistance;
    }
    function calcAxisDelta(delta, source, target, origin) {
      origin === void 0 && (origin = 0.5), delta.origin = origin, delta.originPoint = popmotion.mix(source.min, source.max, delta.origin), delta.scale = calcLength(target) / calcLength(source), (isNear(delta.scale, 1, 1e-4) || isNaN(delta.scale)) && (delta.scale = 1), delta.translate = popmotion.mix(target.min, target.max, delta.origin) - delta.originPoint, (isNear(delta.translate) || isNaN(delta.translate)) && (delta.translate = 0);
    }
    function calcBoxDelta(delta, source, target, origin) {
      calcAxisDelta(delta.x, source.x, target.x, origin == null ? void 0 : origin.originX), calcAxisDelta(delta.y, source.y, target.y, origin == null ? void 0 : origin.originY);
    }
    function calcRelativeAxis(target, relative, parent) {
      target.min = parent.min + relative.min, target.max = target.min + calcLength(relative);
    }
    function calcRelativeBox(target, relative, parent) {
      calcRelativeAxis(target.x, relative.x, parent.x), calcRelativeAxis(target.y, relative.y, parent.y);
    }
    function calcRelativeAxisPosition(target, layout, parent) {
      target.min = layout.min - parent.min, target.max = target.min + calcLength(layout);
    }
    function calcRelativePosition(target, layout, parent) {
      calcRelativeAxisPosition(target.x, layout.x, parent.x), calcRelativeAxisPosition(target.y, layout.y, parent.y);
    }
    function applyConstraints(point2, _a2, elastic) {
      var min = _a2.min, max = _a2.max;
      return min !== void 0 && point2 < min ? point2 = elastic ? popmotion.mix(min, point2, elastic.min) : Math.max(point2, min) : max !== void 0 && point2 > max && (point2 = elastic ? popmotion.mix(max, point2, elastic.max) : Math.min(point2, max)), point2;
    }
    function calcRelativeAxisConstraints(axis, min, max) {
      return {
        min: min !== void 0 ? axis.min + min : void 0,
        max: max !== void 0 ? axis.max + max - (axis.max - axis.min) : void 0
      };
    }
    function calcRelativeConstraints(layoutBox, _a2) {
      var top = _a2.top, left = _a2.left, bottom = _a2.bottom, right = _a2.right;
      return {
        x: calcRelativeAxisConstraints(layoutBox.x, left, right),
        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom)
      };
    }
    function calcViewportAxisConstraints(layoutAxis, constraintsAxis) {
      var _a2, min = constraintsAxis.min - layoutAxis.min, max = constraintsAxis.max - layoutAxis.max;
      return constraintsAxis.max - constraintsAxis.min < layoutAxis.max - layoutAxis.min && (_a2 = tslib.__read([max, min], 2), min = _a2[0], max = _a2[1]), { min, max };
    }
    function calcViewportConstraints(layoutBox, constraintsBox) {
      return {
        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),
        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y)
      };
    }
    function calcOrigin(source, target) {
      var origin = 0.5, sourceLength = calcLength(source), targetLength = calcLength(target);
      return targetLength > sourceLength ? origin = popmotion.progress(target.min, target.max - sourceLength, source.min) : sourceLength > targetLength && (origin = popmotion.progress(source.min, source.max - targetLength, target.min)), popmotion.clamp(0, 1, origin);
    }
    function rebaseAxisConstraints(layout, constraints) {
      var relativeConstraints = {};
      return constraints.min !== void 0 && (relativeConstraints.min = constraints.min - layout.min), constraints.max !== void 0 && (relativeConstraints.max = constraints.max - layout.min), relativeConstraints;
    }
    var defaultElastic = 0.35;
    function resolveDragElastic(dragElastic) {
      return dragElastic === void 0 && (dragElastic = defaultElastic), dragElastic === !1 ? dragElastic = 0 : dragElastic === !0 && (dragElastic = defaultElastic), {
        x: resolveAxisElastic(dragElastic, "left", "right"),
        y: resolveAxisElastic(dragElastic, "top", "bottom")
      };
    }
    function resolveAxisElastic(dragElastic, minLabel, maxLabel) {
      return {
        min: resolvePointElastic(dragElastic, minLabel),
        max: resolvePointElastic(dragElastic, maxLabel)
      };
    }
    function resolvePointElastic(dragElastic, label) {
      var _a2;
      return typeof dragElastic == "number" ? dragElastic : (_a2 = dragElastic[label]) !== null && _a2 !== void 0 ? _a2 : 0;
    }
    var createAxisDelta = function() {
      return {
        translate: 0,
        scale: 1,
        origin: 0,
        originPoint: 0
      };
    }, createDelta = function() {
      return {
        x: createAxisDelta(),
        y: createAxisDelta()
      };
    }, createAxis = function() {
      return { min: 0, max: 0 };
    }, createBox = function() {
      return {
        x: createAxis(),
        y: createAxis()
      };
    };
    function eachAxis(callback) {
      return [callback("x"), callback("y")];
    }
    function convertBoundingBoxToBox(_a2) {
      var top = _a2.top, left = _a2.left, right = _a2.right, bottom = _a2.bottom;
      return {
        x: { min: left, max: right },
        y: { min: top, max: bottom }
      };
    }
    function convertBoxToBoundingBox(_a2) {
      var x5 = _a2.x, y6 = _a2.y;
      return { top: y6.min, right: x5.max, bottom: y6.max, left: x5.min };
    }
    function transformBoxPoints(point2, transformPoint2) {
      if (!transformPoint2)
        return point2;
      var topLeft = transformPoint2({ x: point2.left, y: point2.top }), bottomRight = transformPoint2({ x: point2.right, y: point2.bottom });
      return {
        top: topLeft.y,
        left: topLeft.x,
        bottom: bottomRight.y,
        right: bottomRight.x
      };
    }
    function isIdentityScale(scale) {
      return scale === void 0 || scale === 1;
    }
    function hasScale(_a2) {
      var scale = _a2.scale, scaleX = _a2.scaleX, scaleY = _a2.scaleY;
      return !isIdentityScale(scale) || !isIdentityScale(scaleX) || !isIdentityScale(scaleY);
    }
    function hasTransform(values) {
      return hasScale(values) || hasTranslate(values.x) || hasTranslate(values.y) || values.z || values.rotate || values.rotateX || values.rotateY;
    }
    function hasTranslate(value) {
      return value && value !== "0%";
    }
    function scalePoint(point2, scale, originPoint) {
      var distanceFromOrigin = point2 - originPoint, scaled = scale * distanceFromOrigin;
      return originPoint + scaled;
    }
    function applyPointDelta(point2, translate, scale, originPoint, boxScale) {
      return boxScale !== void 0 && (point2 = scalePoint(point2, boxScale, originPoint)), scalePoint(point2, scale, originPoint) + translate;
    }
    function applyAxisDelta(axis, translate, scale, originPoint, boxScale) {
      translate === void 0 && (translate = 0), scale === void 0 && (scale = 1), axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale), axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);
    }
    function applyBoxDelta(box, _a2) {
      var x5 = _a2.x, y6 = _a2.y;
      applyAxisDelta(box.x, x5.translate, x5.scale, x5.originPoint), applyAxisDelta(box.y, y6.translate, y6.scale, y6.originPoint);
    }
    function applyTreeDeltas(box, treeScale, treePath, isSharedTransition) {
      var _a2, _b;
      isSharedTransition === void 0 && (isSharedTransition = !1);
      var treeLength = treePath.length;
      if (treeLength) {
        treeScale.x = treeScale.y = 1;
        for (var node, delta, i7 = 0; i7 < treeLength; i7++)
          node = treePath[i7], delta = node.projectionDelta, ((_b = (_a2 = node.instance) === null || _a2 === void 0 ? void 0 : _a2.style) === null || _b === void 0 ? void 0 : _b.display) !== "contents" && (isSharedTransition && node.options.layoutScroll && node.scroll && node !== node.root && transformBox(box, { x: -node.scroll.x, y: -node.scroll.y }), delta && (treeScale.x *= delta.x.scale, treeScale.y *= delta.y.scale, applyBoxDelta(box, delta)), isSharedTransition && hasTransform(node.latestValues) && transformBox(box, node.latestValues));
      }
    }
    function translateAxis(axis, distance) {
      axis.min = axis.min + distance, axis.max = axis.max + distance;
    }
    function transformAxis(axis, transforms2, _a2) {
      var _b = tslib.__read(_a2, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2], axisOrigin = transforms2[originKey] !== void 0 ? transforms2[originKey] : 0.5, originPoint = popmotion.mix(axis.min, axis.max, axisOrigin);
      applyAxisDelta(axis, transforms2[key], transforms2[scaleKey], originPoint, transforms2.scale);
    }
    var xKeys$1 = ["x", "scaleX", "originX"], yKeys$1 = ["y", "scaleY", "originY"];
    function transformBox(box, transform2) {
      transformAxis(box.x, transform2, xKeys$1), transformAxis(box.y, transform2, yKeys$1);
    }
    function measureViewportBox(instance, transformPoint2) {
      return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint2));
    }
    function measurePageBox(element, rootProjectionNode2, transformPagePoint) {
      var viewportBox = measureViewportBox(element, transformPagePoint), scroll2 = rootProjectionNode2.scroll;
      return scroll2 && (translateAxis(viewportBox.x, scroll2.x), translateAxis(viewportBox.y, scroll2.y)), viewportBox;
    }
    var elementDragControls = /* @__PURE__ */ new WeakMap(), VisualElementDragControls = (
      /** @class */
      function() {
        function VisualElementDragControls2(visualElement2) {
          this.openGlobalLock = null, this.isDragging = !1, this.currentDirection = null, this.originPoint = { x: 0, y: 0 }, this.constraints = !1, this.hasMutatedConstraints = !1, this.elastic = createBox(), this.visualElement = visualElement2;
        }
        return VisualElementDragControls2.prototype.start = function(originEvent, _a2) {
          var _this = this, _b = _a2 === void 0 ? {} : _a2, _c = _b.snapToCursor, snapToCursor = _c === void 0 ? !1 : _c;
          if (this.visualElement.isPresent !== !1) {
            var onSessionStart = function(event) {
              _this.stopAnimation(), snapToCursor && _this.snapToCursor(extractEventInfo(event, "page").point);
            }, onStart = function(event, info) {
              var _a3, _b2 = _this.getProps(), drag2 = _b2.drag, dragPropagation = _b2.dragPropagation, onDragStart = _b2.onDragStart;
              drag2 && !dragPropagation && (_this.openGlobalLock && _this.openGlobalLock(), _this.openGlobalLock = getGlobalLock(drag2), !_this.openGlobalLock) || (_this.isDragging = !0, _this.currentDirection = null, _this.resolveConstraints(), _this.visualElement.projection && (_this.visualElement.projection.isAnimationBlocked = !0, _this.visualElement.projection.target = void 0), eachAxis(function(axis) {
                var _a4, _b3, current = _this.getAxisMotionValue(axis).get() || 0;
                if (styleValueTypes.percent.test(current)) {
                  var measuredAxis = (_b3 = (_a4 = _this.visualElement.projection) === null || _a4 === void 0 ? void 0 : _a4.layout) === null || _b3 === void 0 ? void 0 : _b3.actual[axis];
                  if (measuredAxis) {
                    var length_1 = calcLength(measuredAxis);
                    current = length_1 * (parseFloat(current) / 100);
                  }
                }
                _this.originPoint[axis] = current;
              }), onDragStart == null || onDragStart(event, info), (_a3 = _this.visualElement.animationState) === null || _a3 === void 0 || _a3.setActive(exports.AnimationType.Drag, !0));
            }, onMove = function(event, info) {
              var _a3 = _this.getProps(), dragPropagation = _a3.dragPropagation, dragDirectionLock = _a3.dragDirectionLock, onDirectionLock = _a3.onDirectionLock, onDrag = _a3.onDrag;
              if (!(!dragPropagation && !_this.openGlobalLock)) {
                var offset = info.offset;
                if (dragDirectionLock && _this.currentDirection === null) {
                  _this.currentDirection = getCurrentDirection(offset), _this.currentDirection !== null && (onDirectionLock == null || onDirectionLock(_this.currentDirection));
                  return;
                }
                _this.updateAxis("x", info.point, offset), _this.updateAxis("y", info.point, offset), _this.visualElement.syncRender(), onDrag == null || onDrag(event, info);
              }
            }, onSessionEnd = function(event, info) {
              return _this.stop(event, info);
            };
            this.panSession = new PanSession(originEvent, {
              onSessionStart,
              onStart,
              onMove,
              onSessionEnd
            }, { transformPagePoint: this.visualElement.getTransformPagePoint() });
          }
        }, VisualElementDragControls2.prototype.stop = function(event, info) {
          var isDragging = this.isDragging;
          if (this.cancel(), !!isDragging) {
            var velocity = info.velocity;
            this.startAnimation(velocity);
            var onDragEnd = this.getProps().onDragEnd;
            onDragEnd == null || onDragEnd(event, info);
          }
        }, VisualElementDragControls2.prototype.cancel = function() {
          var _a2, _b;
          this.isDragging = !1, this.visualElement.projection && (this.visualElement.projection.isAnimationBlocked = !1), (_a2 = this.panSession) === null || _a2 === void 0 || _a2.end(), this.panSession = void 0;
          var dragPropagation = this.getProps().dragPropagation;
          !dragPropagation && this.openGlobalLock && (this.openGlobalLock(), this.openGlobalLock = null), (_b = this.visualElement.animationState) === null || _b === void 0 || _b.setActive(exports.AnimationType.Drag, !1);
        }, VisualElementDragControls2.prototype.updateAxis = function(axis, _point, offset) {
          var drag2 = this.getProps().drag;
          if (!(!offset || !shouldDrag(axis, drag2, this.currentDirection))) {
            var axisValue = this.getAxisMotionValue(axis), next = this.originPoint[axis] + offset[axis];
            this.constraints && this.constraints[axis] && (next = applyConstraints(next, this.constraints[axis], this.elastic[axis])), axisValue.set(next);
          }
        }, VisualElementDragControls2.prototype.resolveConstraints = function() {
          var _this = this, _a2 = this.getProps(), dragConstraints = _a2.dragConstraints, dragElastic = _a2.dragElastic, layout = (this.visualElement.projection || {}).layout, prevConstraints = this.constraints;
          dragConstraints && isRefObject(dragConstraints) ? this.constraints || (this.constraints = this.resolveRefConstraints()) : dragConstraints && layout ? this.constraints = calcRelativeConstraints(layout.actual, dragConstraints) : this.constraints = !1, this.elastic = resolveDragElastic(dragElastic), prevConstraints !== this.constraints && layout && this.constraints && !this.hasMutatedConstraints && eachAxis(function(axis) {
            _this.getAxisMotionValue(axis) && (_this.constraints[axis] = rebaseAxisConstraints(layout.actual[axis], _this.constraints[axis]));
          });
        }, VisualElementDragControls2.prototype.resolveRefConstraints = function() {
          var _a2 = this.getProps(), constraints = _a2.dragConstraints, onMeasureDragConstraints = _a2.onMeasureDragConstraints;
          if (!constraints || !isRefObject(constraints))
            return !1;
          var constraintsElement = constraints.current;
          heyListen.invariant(constraintsElement !== null, "If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.");
          var projection = this.visualElement.projection;
          if (!projection || !projection.layout)
            return !1;
          var constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint()), measuredConstraints = calcViewportConstraints(projection.layout.actual, constraintsBox);
          if (onMeasureDragConstraints) {
            var userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));
            this.hasMutatedConstraints = !!userConstraints, userConstraints && (measuredConstraints = convertBoundingBoxToBox(userConstraints));
          }
          return measuredConstraints;
        }, VisualElementDragControls2.prototype.startAnimation = function(velocity) {
          var _this = this, _a2 = this.getProps(), drag2 = _a2.drag, dragMomentum = _a2.dragMomentum, dragElastic = _a2.dragElastic, dragTransition = _a2.dragTransition, dragSnapToOrigin = _a2.dragSnapToOrigin, onDragTransitionEnd = _a2.onDragTransitionEnd, constraints = this.constraints || {}, momentumAnimations = eachAxis(function(axis) {
            var _a3;
            if (shouldDrag(axis, drag2, _this.currentDirection)) {
              var transition = (_a3 = constraints == null ? void 0 : constraints[axis]) !== null && _a3 !== void 0 ? _a3 : {};
              dragSnapToOrigin && (transition = { min: 0, max: 0 });
              var bounceStiffness = dragElastic ? 200 : 1e6, bounceDamping = dragElastic ? 40 : 1e7, inertia = tslib.__assign(tslib.__assign({ type: "inertia", velocity: dragMomentum ? velocity[axis] : 0, bounceStiffness, bounceDamping, timeConstant: 750, restDelta: 1, restSpeed: 10 }, dragTransition), transition);
              return _this.startAxisValueAnimation(axis, inertia);
            }
          });
          return Promise.all(momentumAnimations).then(onDragTransitionEnd);
        }, VisualElementDragControls2.prototype.startAxisValueAnimation = function(axis, transition) {
          var axisValue = this.getAxisMotionValue(axis);
          return startAnimation(axis, axisValue, 0, transition);
        }, VisualElementDragControls2.prototype.stopAnimation = function() {
          var _this = this;
          eachAxis(function(axis) {
            return _this.getAxisMotionValue(axis).stop();
          });
        }, VisualElementDragControls2.prototype.getAxisMotionValue = function(axis) {
          var _a2, _b, dragKey = "_drag" + axis.toUpperCase(), externalMotionValue = this.visualElement.getProps()[dragKey];
          return externalMotionValue || this.visualElement.getValue(axis, (_b = (_a2 = this.visualElement.getProps().initial) === null || _a2 === void 0 ? void 0 : _a2[axis]) !== null && _b !== void 0 ? _b : 0);
        }, VisualElementDragControls2.prototype.snapToCursor = function(point2) {
          var _this = this;
          eachAxis(function(axis) {
            var drag2 = _this.getProps().drag;
            if (shouldDrag(axis, drag2, _this.currentDirection)) {
              var projection = _this.visualElement.projection, axisValue = _this.getAxisMotionValue(axis);
              if (projection && projection.layout) {
                var _a2 = projection.layout.actual[axis], min = _a2.min, max = _a2.max;
                axisValue.set(point2[axis] - popmotion.mix(min, max, 0.5));
              }
            }
          });
        }, VisualElementDragControls2.prototype.scalePositionWithinConstraints = function() {
          var _this = this, _a2, _b = this.getProps(), drag2 = _b.drag, dragConstraints = _b.dragConstraints, projection = this.visualElement.projection;
          if (!(!isRefObject(dragConstraints) || !projection || !this.constraints)) {
            this.stopAnimation();
            var boxProgress = { x: 0, y: 0 };
            eachAxis(function(axis) {
              var axisValue = _this.getAxisMotionValue(axis);
              if (axisValue) {
                var latest = axisValue.get();
                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, _this.constraints[axis]);
              }
            });
            var transformTemplate = this.visualElement.getProps().transformTemplate;
            this.visualElement.getInstance().style.transform = transformTemplate ? transformTemplate({}, "") : "none", (_a2 = projection.root) === null || _a2 === void 0 || _a2.updateScroll(), projection.updateLayout(), this.resolveConstraints(), eachAxis(function(axis) {
              if (shouldDrag(axis, drag2, null)) {
                var axisValue = _this.getAxisMotionValue(axis), _a3 = _this.constraints[axis], min = _a3.min, max = _a3.max;
                axisValue.set(popmotion.mix(min, max, boxProgress[axis]));
              }
            });
          }
        }, VisualElementDragControls2.prototype.addListeners = function() {
          var _this = this, _a2;
          elementDragControls.set(this.visualElement, this);
          var element = this.visualElement.getInstance(), stopPointerListener = addPointerEvent(element, "pointerdown", function(event) {
            var _a3 = _this.getProps(), drag2 = _a3.drag, _b = _a3.dragListener, dragListener = _b === void 0 ? !0 : _b;
            drag2 && dragListener && _this.start(event);
          }), measureDragConstraints = function() {
            var dragConstraints = _this.getProps().dragConstraints;
            isRefObject(dragConstraints) && (_this.constraints = _this.resolveRefConstraints());
          }, projection = this.visualElement.projection, stopMeasureLayoutListener = projection.addEventListener("measure", measureDragConstraints);
          projection && !projection.layout && ((_a2 = projection.root) === null || _a2 === void 0 || _a2.updateScroll(), projection.updateLayout()), measureDragConstraints();
          var stopResizeListener = addDomEvent(window, "resize", function() {
            return _this.scalePositionWithinConstraints();
          });
          return projection.addEventListener("didUpdate", function(_a3) {
            var delta = _a3.delta, hasLayoutChanged = _a3.hasLayoutChanged;
            _this.isDragging && hasLayoutChanged && (eachAxis(function(axis) {
              var motionValue2 = _this.getAxisMotionValue(axis);
              motionValue2 && (_this.originPoint[axis] += delta[axis].translate, motionValue2.set(motionValue2.get() + delta[axis].translate));
            }), _this.visualElement.syncRender());
          }), function() {
            stopResizeListener(), stopPointerListener(), stopMeasureLayoutListener();
          };
        }, VisualElementDragControls2.prototype.getProps = function() {
          var props = this.visualElement.getProps(), _a2 = props.drag, drag2 = _a2 === void 0 ? !1 : _a2, _b = props.dragDirectionLock, dragDirectionLock = _b === void 0 ? !1 : _b, _c = props.dragPropagation, dragPropagation = _c === void 0 ? !1 : _c, _d = props.dragConstraints, dragConstraints = _d === void 0 ? !1 : _d, _e3 = props.dragElastic, dragElastic = _e3 === void 0 ? defaultElastic : _e3, _f = props.dragMomentum, dragMomentum = _f === void 0 ? !0 : _f;
          return tslib.__assign(tslib.__assign({}, props), { drag: drag2, dragDirectionLock, dragPropagation, dragConstraints, dragElastic, dragMomentum });
        }, VisualElementDragControls2;
      }()
    );
    function shouldDrag(direction, drag2, currentDirection) {
      return (drag2 === !0 || drag2 === direction) && (currentDirection === null || currentDirection === direction);
    }
    function getCurrentDirection(offset, lockThreshold) {
      lockThreshold === void 0 && (lockThreshold = 10);
      var direction = null;
      return Math.abs(offset.y) > lockThreshold ? direction = "y" : Math.abs(offset.x) > lockThreshold && (direction = "x"), direction;
    }
    function useDrag(props) {
      var groupDragControls = props.dragControls, visualElement2 = props.visualElement, dragControls = useConstant(function() {
        return new VisualElementDragControls(visualElement2);
      });
      React26.useEffect(function() {
        return groupDragControls && groupDragControls.subscribe(dragControls);
      }, [dragControls, groupDragControls]), React26.useEffect(function() {
        return dragControls.addListeners();
      }, [dragControls]);
    }
    function usePanGesture(_a2) {
      var onPan = _a2.onPan, onPanStart = _a2.onPanStart, onPanEnd = _a2.onPanEnd, onPanSessionStart = _a2.onPanSessionStart, visualElement2 = _a2.visualElement, hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart, panSession = React26.useRef(null), transformPagePoint = React26.useContext(MotionConfigContext).transformPagePoint, handlers = {
        onSessionStart: onPanSessionStart,
        onStart: onPanStart,
        onMove: onPan,
        onEnd: function(event, info) {
          panSession.current = null, onPanEnd && onPanEnd(event, info);
        }
      };
      React26.useEffect(function() {
        panSession.current !== null && panSession.current.updateHandlers(handlers);
      });
      function onPointerDown(event) {
        panSession.current = new PanSession(event, handlers, {
          transformPagePoint
        });
      }
      usePointerEvent(visualElement2, "pointerdown", hasPanEvents && onPointerDown), useUnmountEffect(function() {
        return panSession.current && panSession.current.end();
      });
    }
    var drag = {
      pan: makeRenderlessComponent(usePanGesture),
      drag: makeRenderlessComponent(useDrag)
    }, names = [
      "LayoutMeasure",
      "BeforeLayoutMeasure",
      "LayoutUpdate",
      "ViewportBoxUpdate",
      "Update",
      "Render",
      "AnimationComplete",
      "LayoutAnimationComplete",
      "AnimationStart",
      "LayoutAnimationStart",
      "SetAxisTarget",
      "Unmount"
    ];
    function createLifecycles() {
      var managers = names.map(function() {
        return new SubscriptionManager();
      }), propSubscriptions = {}, lifecycles = {
        clearAllListeners: function() {
          return managers.forEach(function(manager) {
            return manager.clear();
          });
        },
        updatePropListeners: function(props) {
          names.forEach(function(name) {
            var _a2, on = "on" + name, propListener = props[on];
            (_a2 = propSubscriptions[name]) === null || _a2 === void 0 || _a2.call(propSubscriptions), propListener && (propSubscriptions[name] = lifecycles[on](propListener));
          });
        }
      };
      return managers.forEach(function(manager, i7) {
        lifecycles["on" + names[i7]] = function(handler) {
          return manager.add(handler);
        }, lifecycles["notify" + names[i7]] = function() {
          for (var args = [], _i = 0; _i < arguments.length; _i++)
            args[_i] = arguments[_i];
          return manager.notify.apply(manager, tslib.__spreadArray([], tslib.__read(args), !1));
        };
      }), lifecycles;
    }
    function updateMotionValuesFromProps(element, next, prev) {
      var _a2;
      for (var key in next) {
        var nextValue = next[key], prevValue = prev[key];
        if (isMotionValue(nextValue))
          element.addValue(key, nextValue), warnOnce4(nextValue.version === "6.5.1", "Attempting to mix Framer Motion versions ".concat(nextValue.version, " with 6.5.1 may not work as expected."));
        else if (isMotionValue(prevValue))
          element.addValue(key, motionValue(nextValue));
        else if (prevValue !== nextValue)
          if (element.hasValue(key)) {
            var existingValue = element.getValue(key);
            !existingValue.hasAnimated && existingValue.set(nextValue);
          } else
            element.addValue(key, motionValue((_a2 = element.getStaticValue(key)) !== null && _a2 !== void 0 ? _a2 : nextValue));
      }
      for (var key in prev)
        next[key] === void 0 && element.removeValue(key);
      return next;
    }
    var visualElement = function(_a2) {
      var _b = _a2.treeType, treeType = _b === void 0 ? "" : _b, build = _a2.build, getBaseTarget = _a2.getBaseTarget, makeTargetAnimatable = _a2.makeTargetAnimatable, measureViewportBox2 = _a2.measureViewportBox, renderInstance = _a2.render, readValueFromInstance = _a2.readValueFromInstance, removeValueFromRenderState = _a2.removeValueFromRenderState, sortNodePosition = _a2.sortNodePosition, scrapeMotionValuesFromProps2 = _a2.scrapeMotionValuesFromProps;
      return function(_a3, options) {
        var parent = _a3.parent, props = _a3.props, presenceId = _a3.presenceId, blockInitialAnimation = _a3.blockInitialAnimation, visualState = _a3.visualState, shouldReduceMotion = _a3.shouldReduceMotion;
        options === void 0 && (options = {});
        var isMounted = !1, latestValues = visualState.latestValues, renderState = visualState.renderState, instance, lifecycles = createLifecycles(), values = /* @__PURE__ */ new Map(), valueSubscriptions = /* @__PURE__ */ new Map(), prevMotionValues = {}, baseTarget = tslib.__assign({}, latestValues), removeFromVariantTree;
        function render() {
          !instance || !isMounted || (triggerBuild(), renderInstance(instance, renderState, props.style, element.projection));
        }
        function triggerBuild() {
          build(element, renderState, latestValues, options, props);
        }
        function update() {
          lifecycles.notifyUpdate(latestValues);
        }
        function bindToMotionValue(key2, value2) {
          var removeOnChange = value2.onChange(function(latestValue) {
            latestValues[key2] = latestValue, props.onUpdate && sync__default.default.update(update, !1, !0);
          }), removeOnRenderRequest = value2.onRenderRequest(element.scheduleRender);
          valueSubscriptions.set(key2, function() {
            removeOnChange(), removeOnRenderRequest();
          });
        }
        var initialMotionValues = scrapeMotionValuesFromProps2(props);
        for (var key in initialMotionValues) {
          var value = initialMotionValues[key];
          latestValues[key] !== void 0 && isMotionValue(value) && value.set(latestValues[key], !1);
        }
        var isControllingVariants = checkIfControllingVariants(props), isVariantNode = checkIfVariantNode(props), element = tslib.__assign(tslib.__assign({
          treeType,
          /**
           * This is a mirror of the internal instance prop, which keeps
           * VisualElement type-compatible with React's RefObject.
           */
          current: null,
          /**
           * The depth of this visual element within the visual element tree.
           */
          depth: parent ? parent.depth + 1 : 0,
          parent,
          children: /* @__PURE__ */ new Set(),
          /**
           *
           */
          presenceId,
          shouldReduceMotion,
          /**
           * If this component is part of the variant tree, it should track
           * any children that are also part of the tree. This is essentially
           * a shadow tree to simplify logic around how to stagger over children.
           */
          variantChildren: isVariantNode ? /* @__PURE__ */ new Set() : void 0,
          /**
           * Whether this instance is visible. This can be changed imperatively
           * by the projection tree, is analogous to CSS's visibility in that
           * hidden elements should take up layout, and needs enacting by the configured
           * render function.
           */
          isVisible: void 0,
          /**
           * Normally, if a component is controlled by a parent's variants, it can
           * rely on that ancestor to trigger animations further down the tree.
           * However, if a component is created after its parent is mounted, the parent
           * won't trigger that mount animation so the child needs to.
           *
           * TODO: This might be better replaced with a method isParentMounted
           */
          manuallyAnimateOnMount: Boolean(parent == null ? void 0 : parent.isMounted()),
          /**
           * This can be set by AnimatePresence to force components that mount
           * at the same time as it to mount as if they have initial={false} set.
           */
          blockInitialAnimation,
          /**
           * Determine whether this component has mounted yet. This is mostly used
           * by variant children to determine whether they need to trigger their
           * own animations on mount.
           */
          isMounted: function() {
            return Boolean(instance);
          },
          mount: function(newInstance) {
            isMounted = !0, instance = element.current = newInstance, element.projection && element.projection.mount(newInstance), isVariantNode && parent && !isControllingVariants && (removeFromVariantTree = parent == null ? void 0 : parent.addVariantChild(element)), values.forEach(function(value2, key2) {
              return bindToMotionValue(key2, value2);
            }), parent == null || parent.children.add(element), element.setProps(props);
          },
          /**
           *
           */
          unmount: function() {
            var _a4;
            (_a4 = element.projection) === null || _a4 === void 0 || _a4.unmount(), sync.cancelSync.update(update), sync.cancelSync.render(render), valueSubscriptions.forEach(function(remove) {
              return remove();
            }), removeFromVariantTree == null || removeFromVariantTree(), parent == null || parent.children.delete(element), lifecycles.clearAllListeners(), instance = void 0, isMounted = !1;
          },
          /**
           * Add a child visual element to our set of children.
           */
          addVariantChild: function(child) {
            var _a4, closestVariantNode = element.getClosestVariantNode();
            if (closestVariantNode)
              return (_a4 = closestVariantNode.variantChildren) === null || _a4 === void 0 || _a4.add(child), function() {
                return closestVariantNode.variantChildren.delete(child);
              };
          },
          sortNodePosition: function(other) {
            return !sortNodePosition || treeType !== other.treeType ? 0 : sortNodePosition(element.getInstance(), other.getInstance());
          },
          /**
           * Returns the closest variant node in the tree starting from
           * this visual element.
           */
          getClosestVariantNode: function() {
            return isVariantNode ? element : parent == null ? void 0 : parent.getClosestVariantNode();
          },
          /**
           * Expose the latest layoutId prop.
           */
          getLayoutId: function() {
            return props.layoutId;
          },
          /**
           * Returns the current instance.
           */
          getInstance: function() {
            return instance;
          },
          /**
           * Get/set the latest static values.
           */
          getStaticValue: function(key2) {
            return latestValues[key2];
          },
          setStaticValue: function(key2, value2) {
            return latestValues[key2] = value2;
          },
          /**
           * Returns the latest motion value state. Currently only used to take
           * a snapshot of the visual element - perhaps this can return the whole
           * visual state
           */
          getLatestValues: function() {
            return latestValues;
          },
          /**
           * Set the visiblity of the visual element. If it's changed, schedule
           * a render to reflect these changes.
           */
          setVisibility: function(visibility) {
            element.isVisible !== visibility && (element.isVisible = visibility, element.scheduleRender());
          },
          /**
           * Make a target animatable by Popmotion. For instance, if we're
           * trying to animate width from 100px to 100vw we need to measure 100vw
           * in pixels to determine what we really need to animate to. This is also
           * pluggable to support Framer's custom value types like Color,
           * and CSS variables.
           */
          makeTargetAnimatable: function(target, canMutate) {
            return canMutate === void 0 && (canMutate = !0), makeTargetAnimatable(element, target, props, canMutate);
          },
          /**
           * Measure the current viewport box with or without transforms.
           * Only measures axis-aligned boxes, rotate and skew must be manually
           * removed with a re-render to work.
           */
          measureViewportBox: function() {
            return measureViewportBox2(instance, props);
          },
          // Motion values ========================
          /**
           * Add a motion value and bind it to this visual element.
           */
          addValue: function(key2, value2) {
            element.hasValue(key2) && element.removeValue(key2), values.set(key2, value2), latestValues[key2] = value2.get(), bindToMotionValue(key2, value2);
          },
          /**
           * Remove a motion value and unbind any active subscriptions.
           */
          removeValue: function(key2) {
            var _a4;
            values.delete(key2), (_a4 = valueSubscriptions.get(key2)) === null || _a4 === void 0 || _a4(), valueSubscriptions.delete(key2), delete latestValues[key2], removeValueFromRenderState(key2, renderState);
          },
          /**
           * Check whether we have a motion value for this key
           */
          hasValue: function(key2) {
            return values.has(key2);
          },
          /**
           * Get a motion value for this key. If called with a default
           * value, we'll create one if none exists.
           */
          getValue: function(key2, defaultValue) {
            var value2 = values.get(key2);
            return value2 === void 0 && defaultValue !== void 0 && (value2 = motionValue(defaultValue), element.addValue(key2, value2)), value2;
          },
          /**
           * Iterate over our motion values.
           */
          forEachValue: function(callback) {
            return values.forEach(callback);
          },
          /**
           * If we're trying to animate to a previously unencountered value,
           * we need to check for it in our state and as a last resort read it
           * directly from the instance (which might have performance implications).
           */
          readValue: function(key2) {
            var _a4;
            return (_a4 = latestValues[key2]) !== null && _a4 !== void 0 ? _a4 : readValueFromInstance(instance, key2, options);
          },
          /**
           * Set the base target to later animate back to. This is currently
           * only hydrated on creation and when we first read a value.
           */
          setBaseTarget: function(key2, value2) {
            baseTarget[key2] = value2;
          },
          /**
           * Find the base target for a value thats been removed from all animation
           * props.
           */
          getBaseTarget: function(key2) {
            if (getBaseTarget) {
              var target = getBaseTarget(props, key2);
              if (target !== void 0 && !isMotionValue(target))
                return target;
            }
            return baseTarget[key2];
          }
        }, lifecycles), {
          /**
           * Build the renderer state based on the latest visual state.
           */
          build: function() {
            return triggerBuild(), renderState;
          },
          /**
           * Schedule a render on the next animation frame.
           */
          scheduleRender: function() {
            sync__default.default.render(render, !1, !0);
          },
          /**
           * Synchronously fire render. It's prefered that we batch renders but
           * in many circumstances, like layout measurement, we need to run this
           * synchronously. However in those instances other measures should be taken
           * to batch reads/writes.
           */
          syncRender: render,
          /**
           * Update the provided props. Ensure any newly-added motion values are
           * added to our map, old ones removed, and listeners updated.
           */
          setProps: function(newProps) {
            (newProps.transformTemplate || props.transformTemplate) && element.scheduleRender(), props = newProps, lifecycles.updatePropListeners(newProps), prevMotionValues = updateMotionValuesFromProps(element, scrapeMotionValuesFromProps2(props), prevMotionValues);
          },
          getProps: function() {
            return props;
          },
          // Variants ==============================
          /**
           * Returns the variant definition with a given name.
           */
          getVariant: function(name) {
            var _a4;
            return (_a4 = props.variants) === null || _a4 === void 0 ? void 0 : _a4[name];
          },
          /**
           * Returns the defined default transition on this component.
           */
          getDefaultTransition: function() {
            return props.transition;
          },
          getTransformPagePoint: function() {
            return props.transformPagePoint;
          },
          /**
           * Used by child variant nodes to get the closest ancestor variant props.
           */
          getVariantContext: function(startAtParent) {
            if (startAtParent === void 0 && (startAtParent = !1), startAtParent)
              return parent == null ? void 0 : parent.getVariantContext();
            if (!isControllingVariants) {
              var context_1 = (parent == null ? void 0 : parent.getVariantContext()) || {};
              return props.initial !== void 0 && (context_1.initial = props.initial), context_1;
            }
            for (var context = {}, i7 = 0; i7 < numVariantProps; i7++) {
              var name_1 = variantProps[i7], prop = props[name_1];
              (isVariantLabel(prop) || prop === !1) && (context[name_1] = prop);
            }
            return context;
          }
        });
        return element;
      };
    }, variantProps = tslib.__spreadArray(["initial"], tslib.__read(variantPriorityOrder), !1), numVariantProps = variantProps.length;
    function isCSSVariable(value) {
      return typeof value == "string" && value.startsWith("var(--");
    }
    var cssVariableRegex = /var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;
    function parseCSSVariable(current) {
      var match = cssVariableRegex.exec(current);
      if (!match)
        return [,];
      var _a2 = tslib.__read(match, 3), token = _a2[1], fallback = _a2[2];
      return [token, fallback];
    }
    var maxDepth = 4;
    function getVariableValue(current, element, depth) {
      depth === void 0 && (depth = 1), heyListen.invariant(depth <= maxDepth, 'Max CSS variable fallback depth detected in property "'.concat(current, '". This may indicate a circular fallback dependency.'));
      var _a2 = tslib.__read(parseCSSVariable(current), 2), token = _a2[0], fallback = _a2[1];
      if (token) {
        var resolved = window.getComputedStyle(element).getPropertyValue(token);
        return resolved ? resolved.trim() : isCSSVariable(fallback) ? getVariableValue(fallback, element, depth + 1) : fallback;
      }
    }
    function resolveCSSVariables(visualElement2, _a2, transitionEnd) {
      var _b, target = tslib.__rest(_a2, []), element = visualElement2.getInstance();
      if (!(element instanceof Element))
        return { target, transitionEnd };
      transitionEnd && (transitionEnd = tslib.__assign({}, transitionEnd)), visualElement2.forEachValue(function(value) {
        var current2 = value.get();
        if (isCSSVariable(current2)) {
          var resolved2 = getVariableValue(current2, element);
          resolved2 && value.set(resolved2);
        }
      });
      for (var key in target) {
        var current = target[key];
        if (isCSSVariable(current)) {
          var resolved = getVariableValue(current, element);
          resolved && (target[key] = resolved, transitionEnd && ((_b = transitionEnd[key]) !== null && _b !== void 0 || (transitionEnd[key] = current)));
        }
      }
      return { target, transitionEnd };
    }
    var positionalKeys = /* @__PURE__ */ new Set([
      "width",
      "height",
      "top",
      "left",
      "right",
      "bottom",
      "x",
      "y"
    ]), isPositionalKey = function(key) {
      return positionalKeys.has(key);
    }, hasPositionalKey = function(target) {
      return Object.keys(target).some(isPositionalKey);
    }, setAndResetVelocity = function(value, to) {
      value.set(to, !1), value.set(to);
    }, isNumOrPxType = function(v4) {
      return v4 === styleValueTypes.number || v4 === styleValueTypes.px;
    }, BoundingBoxDimension;
    (function(BoundingBoxDimension2) {
      BoundingBoxDimension2.width = "width", BoundingBoxDimension2.height = "height", BoundingBoxDimension2.left = "left", BoundingBoxDimension2.right = "right", BoundingBoxDimension2.top = "top", BoundingBoxDimension2.bottom = "bottom";
    })(BoundingBoxDimension || (BoundingBoxDimension = {}));
    var getPosFromMatrix = function(matrix, pos) {
      return parseFloat(matrix.split(", ")[pos]);
    }, getTranslateFromMatrix = function(pos2, pos3) {
      return function(_bbox, _a2) {
        var transform2 = _a2.transform;
        if (transform2 === "none" || !transform2)
          return 0;
        var matrix3d = transform2.match(/^matrix3d\((.+)\)$/);
        if (matrix3d)
          return getPosFromMatrix(matrix3d[1], pos3);
        var matrix = transform2.match(/^matrix\((.+)\)$/);
        return matrix ? getPosFromMatrix(matrix[1], pos2) : 0;
      };
    }, transformKeys = /* @__PURE__ */ new Set(["x", "y", "z"]), nonTranslationalTransformKeys = transformProps.filter(function(key) {
      return !transformKeys.has(key);
    });
    function removeNonTranslationalTransform(visualElement2) {
      var removedTransforms = [];
      return nonTranslationalTransformKeys.forEach(function(key) {
        var value = visualElement2.getValue(key);
        value !== void 0 && (removedTransforms.push([key, value.get()]), value.set(key.startsWith("scale") ? 1 : 0));
      }), removedTransforms.length && visualElement2.syncRender(), removedTransforms;
    }
    var positionalValues = {
      // Dimensions
      width: function(_a2, _b) {
        var x5 = _a2.x, _c = _b.paddingLeft, paddingLeft = _c === void 0 ? "0" : _c, _d = _b.paddingRight, paddingRight = _d === void 0 ? "0" : _d;
        return x5.max - x5.min - parseFloat(paddingLeft) - parseFloat(paddingRight);
      },
      height: function(_a2, _b) {
        var y6 = _a2.y, _c = _b.paddingTop, paddingTop = _c === void 0 ? "0" : _c, _d = _b.paddingBottom, paddingBottom = _d === void 0 ? "0" : _d;
        return y6.max - y6.min - parseFloat(paddingTop) - parseFloat(paddingBottom);
      },
      top: function(_bbox, _a2) {
        var top = _a2.top;
        return parseFloat(top);
      },
      left: function(_bbox, _a2) {
        var left = _a2.left;
        return parseFloat(left);
      },
      bottom: function(_a2, _b) {
        var y6 = _a2.y, top = _b.top;
        return parseFloat(top) + (y6.max - y6.min);
      },
      right: function(_a2, _b) {
        var x5 = _a2.x, left = _b.left;
        return parseFloat(left) + (x5.max - x5.min);
      },
      // Transform
      x: getTranslateFromMatrix(4, 13),
      y: getTranslateFromMatrix(5, 14)
    }, convertChangedValueTypes = function(target, visualElement2, changedKeys) {
      var originBbox = visualElement2.measureViewportBox(), element = visualElement2.getInstance(), elementComputedStyle = getComputedStyle(element), display = elementComputedStyle.display, origin = {};
      display === "none" && visualElement2.setStaticValue("display", target.display || "block"), changedKeys.forEach(function(key) {
        origin[key] = positionalValues[key](originBbox, elementComputedStyle);
      }), visualElement2.syncRender();
      var targetBbox = visualElement2.measureViewportBox();
      return changedKeys.forEach(function(key) {
        var value = visualElement2.getValue(key);
        setAndResetVelocity(value, origin[key]), target[key] = positionalValues[key](targetBbox, elementComputedStyle);
      }), target;
    }, checkAndConvertChangedValueTypes = function(visualElement2, target, origin, transitionEnd) {
      origin === void 0 && (origin = {}), transitionEnd === void 0 && (transitionEnd = {}), target = tslib.__assign({}, target), transitionEnd = tslib.__assign({}, transitionEnd);
      var targetPositionalKeys = Object.keys(target).filter(isPositionalKey), removedTransformValues = [], hasAttemptedToRemoveTransformValues = !1, changedValueTypeKeys = [];
      if (targetPositionalKeys.forEach(function(key) {
        var value = visualElement2.getValue(key);
        if (visualElement2.hasValue(key)) {
          var from = origin[key], fromType = findDimensionValueType(from), to = target[key], toType;
          if (isKeyframesTarget(to)) {
            var numKeyframes = to.length, fromIndex = to[0] === null ? 1 : 0;
            from = to[fromIndex], fromType = findDimensionValueType(from);
            for (var i7 = fromIndex; i7 < numKeyframes; i7++)
              toType ? heyListen.invariant(findDimensionValueType(to[i7]) === toType, "All keyframes must be of the same type") : (toType = findDimensionValueType(to[i7]), heyListen.invariant(toType === fromType || isNumOrPxType(fromType) && isNumOrPxType(toType), "Keyframes must be of the same dimension as the current value"));
          } else
            toType = findDimensionValueType(to);
          if (fromType !== toType)
            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {
              var current = value.get();
              typeof current == "string" && value.set(parseFloat(current)), typeof to == "string" ? target[key] = parseFloat(to) : Array.isArray(to) && toType === styleValueTypes.px && (target[key] = to.map(parseFloat));
            } else
              fromType != null && fromType.transform && (toType != null && toType.transform) && (from === 0 || to === 0) ? from === 0 ? value.set(toType.transform(from)) : target[key] = fromType.transform(to) : (hasAttemptedToRemoveTransformValues || (removedTransformValues = removeNonTranslationalTransform(visualElement2), hasAttemptedToRemoveTransformValues = !0), changedValueTypeKeys.push(key), transitionEnd[key] = transitionEnd[key] !== void 0 ? transitionEnd[key] : target[key], setAndResetVelocity(value, to));
        }
      }), changedValueTypeKeys.length) {
        var scrollY_1 = changedValueTypeKeys.indexOf("height") >= 0 ? window.pageYOffset : null, convertedTarget = convertChangedValueTypes(target, visualElement2, changedValueTypeKeys);
        return removedTransformValues.length && removedTransformValues.forEach(function(_a2) {
          var _b = tslib.__read(_a2, 2), key = _b[0], value = _b[1];
          visualElement2.getValue(key).set(value);
        }), visualElement2.syncRender(), scrollY_1 !== null && window.scrollTo({ top: scrollY_1 }), { target: convertedTarget, transitionEnd };
      } else
        return { target, transitionEnd };
    };
    function unitConversion(visualElement2, target, origin, transitionEnd) {
      return hasPositionalKey(target) ? checkAndConvertChangedValueTypes(visualElement2, target, origin, transitionEnd) : { target, transitionEnd };
    }
    var parseDomVariant = function(visualElement2, target, origin, transitionEnd) {
      var resolved = resolveCSSVariables(visualElement2, target, transitionEnd);
      return target = resolved.target, transitionEnd = resolved.transitionEnd, unitConversion(visualElement2, target, origin, transitionEnd);
    };
    function getComputedStyle$1(element) {
      return window.getComputedStyle(element);
    }
    var htmlConfig = {
      treeType: "dom",
      readValueFromInstance: function(domElement, key) {
        if (isTransformProp(key)) {
          var defaultType = getDefaultValueType(key);
          return defaultType && defaultType.default || 0;
        } else {
          var computedStyle = getComputedStyle$1(domElement);
          return (isCSSVariable$1(key) ? computedStyle.getPropertyValue(key) : computedStyle[key]) || 0;
        }
      },
      sortNodePosition: function(a13, b6) {
        return a13.compareDocumentPosition(b6) & 2 ? 1 : -1;
      },
      getBaseTarget: function(props, key) {
        var _a2;
        return (_a2 = props.style) === null || _a2 === void 0 ? void 0 : _a2[key];
      },
      measureViewportBox: function(element, _a2) {
        var transformPagePoint = _a2.transformPagePoint;
        return measureViewportBox(element, transformPagePoint);
      },
      /**
       * Reset the transform on the current Element. This is called as part
       * of a batched process across the entire layout tree. To remove this write
       * cycle it'd be interesting to see if it's possible to "undo" all the current
       * layout transforms up the tree in the same way this.getBoundingBoxWithoutTransforms
       * works
       */
      resetTransform: function(element, domElement, props) {
        var transformTemplate = props.transformTemplate;
        domElement.style.transform = transformTemplate ? transformTemplate({}, "") : "none", element.scheduleRender();
      },
      restoreTransform: function(instance, mutableState) {
        instance.style.transform = mutableState.style.transform;
      },
      removeValueFromRenderState: function(key, _a2) {
        var vars = _a2.vars, style2 = _a2.style;
        delete vars[key], delete style2[key];
      },
      /**
       * Ensure that HTML and Framer-specific value types like `px`->`%` and `Color`
       * can be animated by Motion.
       */
      makeTargetAnimatable: function(element, _a2, _b, isMounted) {
        var transformValues = _b.transformValues;
        isMounted === void 0 && (isMounted = !0);
        var transition = _a2.transition, transitionEnd = _a2.transitionEnd, target = tslib.__rest(_a2, ["transition", "transitionEnd"]), origin = getOrigin(target, transition || {}, element);
        if (transformValues && (transitionEnd && (transitionEnd = transformValues(transitionEnd)), target && (target = transformValues(target)), origin && (origin = transformValues(origin))), isMounted) {
          checkTargetForNewValues(element, target, origin);
          var parsed = parseDomVariant(element, target, origin, transitionEnd);
          transitionEnd = parsed.transitionEnd, target = parsed.target;
        }
        return tslib.__assign({ transition, transitionEnd }, target);
      },
      scrapeMotionValuesFromProps: scrapeMotionValuesFromProps$1,
      build: function(element, renderState, latestValues, options, props) {
        element.isVisible !== void 0 && (renderState.style.visibility = element.isVisible ? "visible" : "hidden"), buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);
      },
      render: renderHTML
    }, htmlVisualElement = visualElement(htmlConfig), svgVisualElement = visualElement(tslib.__assign(tslib.__assign({}, htmlConfig), { getBaseTarget: function(props, key) {
      return props[key];
    }, readValueFromInstance: function(domElement, key) {
      var _a2;
      return isTransformProp(key) ? ((_a2 = getDefaultValueType(key)) === null || _a2 === void 0 ? void 0 : _a2.default) || 0 : (key = camelCaseAttributes.has(key) ? key : camelToDash(key), domElement.getAttribute(key));
    }, scrapeMotionValuesFromProps, build: function(_element, renderState, latestValues, options, props) {
      buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);
    }, render: renderSVG })), createDomVisualElement = function(Component2, options) {
      return isSVGComponent(Component2) ? svgVisualElement(options, { enableHardwareAcceleration: !1 }) : htmlVisualElement(options, { enableHardwareAcceleration: !0 });
    };
    function pixelsToPercent(pixels, axis) {
      return axis.max === axis.min ? 0 : pixels / (axis.max - axis.min) * 100;
    }
    var correctBorderRadius = {
      correct: function(latest, node) {
        if (!node.target)
          return latest;
        if (typeof latest == "string")
          if (styleValueTypes.px.test(latest))
            latest = parseFloat(latest);
          else
            return latest;
        var x5 = pixelsToPercent(latest, node.target.x), y6 = pixelsToPercent(latest, node.target.y);
        return "".concat(x5, "% ").concat(y6, "%");
      }
    }, varToken = "_$css", correctBoxShadow = {
      correct: function(latest, _a2) {
        var treeScale = _a2.treeScale, projectionDelta = _a2.projectionDelta, original = latest, containsCSSVariables = latest.includes("var("), cssVariables = [];
        containsCSSVariables && (latest = latest.replace(cssVariableRegex, function(match) {
          return cssVariables.push(match), varToken;
        }));
        var shadow = styleValueTypes.complex.parse(latest);
        if (shadow.length > 5)
          return original;
        var template = styleValueTypes.complex.createTransformer(latest), offset = typeof shadow[0] != "number" ? 1 : 0, xScale = projectionDelta.x.scale * treeScale.x, yScale = projectionDelta.y.scale * treeScale.y;
        shadow[0 + offset] /= xScale, shadow[1 + offset] /= yScale;
        var averageScale = popmotion.mix(xScale, yScale, 0.5);
        typeof shadow[2 + offset] == "number" && (shadow[2 + offset] /= averageScale), typeof shadow[3 + offset] == "number" && (shadow[3 + offset] /= averageScale);
        var output = template(shadow);
        if (containsCSSVariables) {
          var i_1 = 0;
          output = output.replace(varToken, function() {
            var cssVariable = cssVariables[i_1];
            return i_1++, cssVariable;
          });
        }
        return output;
      }
    }, MeasureLayoutWithContext = (
      /** @class */
      function(_super) {
        tslib.__extends(MeasureLayoutWithContext2, _super);
        function MeasureLayoutWithContext2() {
          return _super !== null && _super.apply(this, arguments) || this;
        }
        return MeasureLayoutWithContext2.prototype.componentDidMount = function() {
          var _this = this, _a2 = this.props, visualElement2 = _a2.visualElement, layoutGroup = _a2.layoutGroup, switchLayoutGroup = _a2.switchLayoutGroup, layoutId = _a2.layoutId, projection = visualElement2.projection;
          addScaleCorrector(defaultScaleCorrectors), projection && (layoutGroup != null && layoutGroup.group && layoutGroup.group.add(projection), switchLayoutGroup != null && switchLayoutGroup.register && layoutId && switchLayoutGroup.register(projection), projection.root.didUpdate(), projection.addEventListener("animationComplete", function() {
            _this.safeToRemove();
          }), projection.setOptions(tslib.__assign(tslib.__assign({}, projection.options), { onExitComplete: function() {
            return _this.safeToRemove();
          } }))), globalProjectionState.hasEverUpdated = !0;
        }, MeasureLayoutWithContext2.prototype.getSnapshotBeforeUpdate = function(prevProps) {
          var _this = this, _a2 = this.props, layoutDependency = _a2.layoutDependency, visualElement2 = _a2.visualElement, drag2 = _a2.drag, isPresent2 = _a2.isPresent, projection = visualElement2.projection;
          return projection && (projection.isPresent = isPresent2, drag2 || prevProps.layoutDependency !== layoutDependency || layoutDependency === void 0 ? projection.willUpdate() : this.safeToRemove(), prevProps.isPresent !== isPresent2 && (isPresent2 ? projection.promote() : projection.relegate() || sync__default.default.postRender(function() {
            var _a3;
            !((_a3 = projection.getStack()) === null || _a3 === void 0) && _a3.members.length || _this.safeToRemove();
          }))), null;
        }, MeasureLayoutWithContext2.prototype.componentDidUpdate = function() {
          var projection = this.props.visualElement.projection;
          projection && (projection.root.didUpdate(), !projection.currentAnimation && projection.isLead() && this.safeToRemove());
        }, MeasureLayoutWithContext2.prototype.componentWillUnmount = function() {
          var _a2 = this.props, visualElement2 = _a2.visualElement, layoutGroup = _a2.layoutGroup, promoteContext = _a2.switchLayoutGroup, projection = visualElement2.projection;
          projection && (projection.scheduleCheckAfterUnmount(), layoutGroup != null && layoutGroup.group && layoutGroup.group.remove(projection), promoteContext != null && promoteContext.deregister && promoteContext.deregister(projection));
        }, MeasureLayoutWithContext2.prototype.safeToRemove = function() {
          var safeToRemove = this.props.safeToRemove;
          safeToRemove == null || safeToRemove();
        }, MeasureLayoutWithContext2.prototype.render = function() {
          return null;
        }, MeasureLayoutWithContext2;
      }(React__default2.default.Component)
    );
    function MeasureLayout(props) {
      var _a2 = tslib.__read(usePresence(), 2), isPresent2 = _a2[0], safeToRemove = _a2[1], layoutGroup = React26.useContext(LayoutGroupContext);
      return React__default2.default.createElement(MeasureLayoutWithContext, tslib.__assign({}, props, { layoutGroup, switchLayoutGroup: React26.useContext(SwitchLayoutGroupContext), isPresent: isPresent2, safeToRemove }));
    }
    var defaultScaleCorrectors = {
      borderRadius: tslib.__assign(tslib.__assign({}, correctBorderRadius), { applyTo: [
        "borderTopLeftRadius",
        "borderTopRightRadius",
        "borderBottomLeftRadius",
        "borderBottomRightRadius"
      ] }),
      borderTopLeftRadius: correctBorderRadius,
      borderTopRightRadius: correctBorderRadius,
      borderBottomLeftRadius: correctBorderRadius,
      borderBottomRightRadius: correctBorderRadius,
      boxShadow: correctBoxShadow
    }, layoutFeatures = {
      measureLayout: MeasureLayout
    };
    function animate2(from, to, transition) {
      transition === void 0 && (transition = {});
      var value = isMotionValue(from) ? from : motionValue(from);
      return startAnimation("", value, to, transition), {
        stop: function() {
          return value.stop();
        },
        isAnimating: function() {
          return value.isAnimating();
        }
      };
    }
    var borders = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"], numBorders = borders.length, asNumber = function(value) {
      return typeof value == "string" ? parseFloat(value) : value;
    }, isPx = function(value) {
      return typeof value == "number" || styleValueTypes.px.test(value);
    };
    function mixValues(target, follow, lead, progress2, shouldCrossfadeOpacity, isOnlyMember) {
      var _a2, _b, _c, _d;
      shouldCrossfadeOpacity ? (target.opacity = popmotion.mix(
        0,
        // (follow?.opacity as number) ?? 0,
        // TODO Reinstate this if only child
        (_a2 = lead.opacity) !== null && _a2 !== void 0 ? _a2 : 1,
        easeCrossfadeIn(progress2)
      ), target.opacityExit = popmotion.mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress2))) : isOnlyMember && (target.opacity = popmotion.mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress2));
      for (var i7 = 0; i7 < numBorders; i7++) {
        var borderLabel = "border".concat(borders[i7], "Radius"), followRadius = getRadius(follow, borderLabel), leadRadius = getRadius(lead, borderLabel);
        if (!(followRadius === void 0 && leadRadius === void 0)) {
          followRadius || (followRadius = 0), leadRadius || (leadRadius = 0);
          var canMix = followRadius === 0 || leadRadius === 0 || isPx(followRadius) === isPx(leadRadius);
          canMix ? (target[borderLabel] = Math.max(popmotion.mix(asNumber(followRadius), asNumber(leadRadius), progress2), 0), (styleValueTypes.percent.test(leadRadius) || styleValueTypes.percent.test(followRadius)) && (target[borderLabel] += "%")) : target[borderLabel] = leadRadius;
        }
      }
      (follow.rotate || lead.rotate) && (target.rotate = popmotion.mix(follow.rotate || 0, lead.rotate || 0, progress2));
    }
    function getRadius(values, radiusName) {
      var _a2;
      return (_a2 = values[radiusName]) !== null && _a2 !== void 0 ? _a2 : values.borderRadius;
    }
    var easeCrossfadeIn = compress(0, 0.5, popmotion.circOut), easeCrossfadeOut = compress(0.5, 0.95, popmotion.linear);
    function compress(min, max, easing) {
      return function(p7) {
        return p7 < min ? 0 : p7 > max ? 1 : easing(popmotion.progress(min, max, p7));
      };
    }
    function copyAxisInto(axis, originAxis) {
      axis.min = originAxis.min, axis.max = originAxis.max;
    }
    function copyBoxInto(box, originBox) {
      copyAxisInto(box.x, originBox.x), copyAxisInto(box.y, originBox.y);
    }
    function removePointDelta(point2, translate, scale, originPoint, boxScale) {
      return point2 -= translate, point2 = scalePoint(point2, 1 / scale, originPoint), boxScale !== void 0 && (point2 = scalePoint(point2, 1 / boxScale, originPoint)), point2;
    }
    function removeAxisDelta(axis, translate, scale, origin, boxScale, originAxis, sourceAxis) {
      if (translate === void 0 && (translate = 0), scale === void 0 && (scale = 1), origin === void 0 && (origin = 0.5), originAxis === void 0 && (originAxis = axis), sourceAxis === void 0 && (sourceAxis = axis), styleValueTypes.percent.test(translate)) {
        translate = parseFloat(translate);
        var relativeProgress = popmotion.mix(sourceAxis.min, sourceAxis.max, translate / 100);
        translate = relativeProgress - sourceAxis.min;
      }
      if (typeof translate == "number") {
        var originPoint = popmotion.mix(originAxis.min, originAxis.max, origin);
        axis === originAxis && (originPoint -= translate), axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale), axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);
      }
    }
    function removeAxisTransforms(axis, transforms2, _a2, origin, sourceAxis) {
      var _b = tslib.__read(_a2, 3), key = _b[0], scaleKey = _b[1], originKey = _b[2];
      removeAxisDelta(axis, transforms2[key], transforms2[scaleKey], transforms2[originKey], transforms2.scale, origin, sourceAxis);
    }
    var xKeys = ["x", "scaleX", "originX"], yKeys = ["y", "scaleY", "originY"];
    function removeBoxTransforms(box, transforms2, originBox, sourceBox) {
      removeAxisTransforms(box.x, transforms2, xKeys, originBox == null ? void 0 : originBox.x, sourceBox == null ? void 0 : sourceBox.x), removeAxisTransforms(box.y, transforms2, yKeys, originBox == null ? void 0 : originBox.y, sourceBox == null ? void 0 : sourceBox.y);
    }
    function isAxisDeltaZero(delta) {
      return delta.translate === 0 && delta.scale === 1;
    }
    function isDeltaZero(delta) {
      return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);
    }
    function boxEquals(a13, b6) {
      return a13.x.min === b6.x.min && a13.x.max === b6.x.max && a13.y.min === b6.y.min && a13.y.max === b6.y.max;
    }
    var NodeStack = (
      /** @class */
      function() {
        function NodeStack2() {
          this.members = [];
        }
        return NodeStack2.prototype.add = function(node) {
          addUniqueItem2(this.members, node), node.scheduleRender();
        }, NodeStack2.prototype.remove = function(node) {
          if (removeItem2(this.members, node), node === this.prevLead && (this.prevLead = void 0), node === this.lead) {
            var prevLead = this.members[this.members.length - 1];
            prevLead && this.promote(prevLead);
          }
        }, NodeStack2.prototype.relegate = function(node) {
          var indexOfNode = this.members.findIndex(function(member2) {
            return node === member2;
          });
          if (indexOfNode === 0)
            return !1;
          for (var prevLead, i7 = indexOfNode; i7 >= 0; i7--) {
            var member = this.members[i7];
            if (member.isPresent !== !1) {
              prevLead = member;
              break;
            }
          }
          return prevLead ? (this.promote(prevLead), !0) : !1;
        }, NodeStack2.prototype.promote = function(node, preserveFollowOpacity) {
          var _a2, prevLead = this.lead;
          if (node !== prevLead && (this.prevLead = prevLead, this.lead = node, node.show(), prevLead)) {
            prevLead.instance && prevLead.scheduleRender(), node.scheduleRender(), node.resumeFrom = prevLead, preserveFollowOpacity && (node.resumeFrom.preserveOpacity = !0), prevLead.snapshot && (node.snapshot = prevLead.snapshot, node.snapshot.latestValues = prevLead.animationValues || prevLead.latestValues, node.snapshot.isShared = !0), !((_a2 = node.root) === null || _a2 === void 0) && _a2.isUpdating && (node.isLayoutDirty = !0);
            var crossfade = node.options.crossfade;
            crossfade === !1 && prevLead.hide();
          }
        }, NodeStack2.prototype.exitAnimationComplete = function() {
          this.members.forEach(function(node) {
            var _a2, _b, _c, _d, _e3;
            (_b = (_a2 = node.options).onExitComplete) === null || _b === void 0 || _b.call(_a2), (_e3 = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e3 === void 0 || _e3.call(_d);
          });
        }, NodeStack2.prototype.scheduleRender = function() {
          this.members.forEach(function(node) {
            node.instance && node.scheduleRender(!1);
          });
        }, NodeStack2.prototype.removeLeadSnapshot = function() {
          this.lead && this.lead.snapshot && (this.lead.snapshot = void 0);
        }, NodeStack2;
      }()
    ), identityProjection = "translate3d(0px, 0px, 0) scale(1, 1) scale(1, 1)";
    function buildProjectionTransform(delta, treeScale, latestTransform) {
      var xTranslate = delta.x.translate / treeScale.x, yTranslate = delta.y.translate / treeScale.y, transform2 = "translate3d(".concat(xTranslate, "px, ").concat(yTranslate, "px, 0) ");
      if (transform2 += "scale(".concat(1 / treeScale.x, ", ").concat(1 / treeScale.y, ") "), latestTransform) {
        var rotate = latestTransform.rotate, rotateX = latestTransform.rotateX, rotateY = latestTransform.rotateY;
        rotate && (transform2 += "rotate(".concat(rotate, "deg) ")), rotateX && (transform2 += "rotateX(".concat(rotateX, "deg) ")), rotateY && (transform2 += "rotateY(".concat(rotateY, "deg) "));
      }
      var elementScaleX = delta.x.scale * treeScale.x, elementScaleY = delta.y.scale * treeScale.y;
      return transform2 += "scale(".concat(elementScaleX, ", ").concat(elementScaleY, ")"), transform2 === identityProjection ? "none" : transform2;
    }
    var compareByDepth2 = function(a13, b6) {
      return a13.depth - b6.depth;
    }, FlatTree = (
      /** @class */
      function() {
        function FlatTree2() {
          this.children = [], this.isDirty = !1;
        }
        return FlatTree2.prototype.add = function(child) {
          addUniqueItem2(this.children, child), this.isDirty = !0;
        }, FlatTree2.prototype.remove = function(child) {
          removeItem2(this.children, child), this.isDirty = !0;
        }, FlatTree2.prototype.forEach = function(callback) {
          this.isDirty && this.children.sort(compareByDepth2), this.isDirty = !1, this.children.forEach(callback);
        }, FlatTree2;
      }()
    ), animationTarget = 1e3;
    function createProjectionNode(_a2) {
      var attachResizeListener = _a2.attachResizeListener, defaultParent = _a2.defaultParent, measureScroll = _a2.measureScroll, checkIsScrollRoot = _a2.checkIsScrollRoot, resetTransform = _a2.resetTransform;
      return (
        /** @class */
        function() {
          function ProjectionNode(id2, latestValues, parent) {
            var _this = this;
            latestValues === void 0 && (latestValues = {}), parent === void 0 && (parent = defaultParent == null ? void 0 : defaultParent()), this.children = /* @__PURE__ */ new Set(), this.options = {}, this.isTreeAnimating = !1, this.isAnimationBlocked = !1, this.isLayoutDirty = !1, this.updateManuallyBlocked = !1, this.updateBlockedByResize = !1, this.isUpdating = !1, this.isSVG = !1, this.needsReset = !1, this.shouldResetTransform = !1, this.treeScale = { x: 1, y: 1 }, this.eventHandlers = /* @__PURE__ */ new Map(), this.potentialNodes = /* @__PURE__ */ new Map(), this.checkUpdateFailed = function() {
              _this.isUpdating && (_this.isUpdating = !1, _this.clearAllSnapshots());
            }, this.updateProjection = function() {
              _this.nodes.forEach(resolveTargetDelta), _this.nodes.forEach(calcProjection);
            }, this.hasProjected = !1, this.isVisible = !0, this.animationProgress = 0, this.sharedNodes = /* @__PURE__ */ new Map(), this.id = id2, this.latestValues = latestValues, this.root = parent ? parent.root || parent : this, this.path = parent ? tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(parent.path), !1), [parent], !1) : [], this.parent = parent, this.depth = parent ? parent.depth + 1 : 0, id2 && this.root.registerPotentialNode(id2, this);
            for (var i7 = 0; i7 < this.path.length; i7++)
              this.path[i7].shouldResetTransform = !0;
            this.root === this && (this.nodes = new FlatTree());
          }
          return ProjectionNode.prototype.addEventListener = function(name, handler) {
            return this.eventHandlers.has(name) || this.eventHandlers.set(name, new SubscriptionManager()), this.eventHandlers.get(name).add(handler);
          }, ProjectionNode.prototype.notifyListeners = function(name) {
            for (var args = [], _i = 1; _i < arguments.length; _i++)
              args[_i - 1] = arguments[_i];
            var subscriptionManager = this.eventHandlers.get(name);
            subscriptionManager == null || subscriptionManager.notify.apply(subscriptionManager, tslib.__spreadArray([], tslib.__read(args), !1));
          }, ProjectionNode.prototype.hasListeners = function(name) {
            return this.eventHandlers.has(name);
          }, ProjectionNode.prototype.registerPotentialNode = function(id2, node) {
            this.potentialNodes.set(id2, node);
          }, ProjectionNode.prototype.mount = function(instance, isLayoutDirty) {
            var _this = this, _a3;
            if (isLayoutDirty === void 0 && (isLayoutDirty = !1), !this.instance) {
              this.isSVG = instance instanceof SVGElement && instance.tagName !== "svg", this.instance = instance;
              var _b = this.options, layoutId = _b.layoutId, layout = _b.layout, visualElement2 = _b.visualElement;
              if (visualElement2 && !visualElement2.getInstance() && visualElement2.mount(instance), this.root.nodes.add(this), (_a3 = this.parent) === null || _a3 === void 0 || _a3.children.add(this), this.id && this.root.potentialNodes.delete(this.id), isLayoutDirty && (layout || layoutId) && (this.isLayoutDirty = !0), attachResizeListener) {
                var unblockTimeout_1, resizeUnblockUpdate_1 = function() {
                  return _this.root.updateBlockedByResize = !1;
                };
                attachResizeListener(instance, function() {
                  _this.root.updateBlockedByResize = !0, clearTimeout(unblockTimeout_1), unblockTimeout_1 = window.setTimeout(resizeUnblockUpdate_1, 250), globalProjectionState.hasAnimatedSinceResize && (globalProjectionState.hasAnimatedSinceResize = !1, _this.nodes.forEach(finishAnimation));
                });
              }
              layoutId && this.root.registerSharedNode(layoutId, this), this.options.animate !== !1 && visualElement2 && (layoutId || layout) && this.addEventListener("didUpdate", function(_a4) {
                var _b2, _c, _d, _e3, _f, delta = _a4.delta, hasLayoutChanged = _a4.hasLayoutChanged, hasRelativeTargetChanged = _a4.hasRelativeTargetChanged, newLayout = _a4.layout;
                if (_this.isTreeAnimationBlocked()) {
                  _this.target = void 0, _this.relativeTarget = void 0;
                  return;
                }
                var layoutTransition = (_c = (_b2 = _this.options.transition) !== null && _b2 !== void 0 ? _b2 : visualElement2.getDefaultTransition()) !== null && _c !== void 0 ? _c : defaultLayoutTransition, _g = visualElement2.getProps(), onLayoutAnimationStart = _g.onLayoutAnimationStart, onLayoutAnimationComplete = _g.onLayoutAnimationComplete, targetChanged = !_this.targetLayout || !boxEquals(_this.targetLayout, newLayout) || hasRelativeTargetChanged, hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;
                if (!((_d = _this.resumeFrom) === null || _d === void 0) && _d.instance || hasOnlyRelativeTargetChanged || hasLayoutChanged && (targetChanged || !_this.currentAnimation)) {
                  _this.resumeFrom && (_this.resumingFrom = _this.resumeFrom, _this.resumingFrom.resumingFrom = void 0), _this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);
                  var animationOptions = tslib.__assign(tslib.__assign({}, getValueTransition(layoutTransition, "layout")), { onPlay: onLayoutAnimationStart, onComplete: onLayoutAnimationComplete });
                  visualElement2.shouldReduceMotion && (animationOptions.delay = 0, animationOptions.type = !1), _this.startAnimation(animationOptions);
                } else
                  !hasLayoutChanged && _this.animationProgress === 0 && _this.finishAnimation(), _this.isLead() && ((_f = (_e3 = _this.options).onExitComplete) === null || _f === void 0 || _f.call(_e3));
                _this.targetLayout = newLayout;
              });
            }
          }, ProjectionNode.prototype.unmount = function() {
            var _a3, _b;
            this.options.layoutId && this.willUpdate(), this.root.nodes.remove(this), (_a3 = this.getStack()) === null || _a3 === void 0 || _a3.remove(this), (_b = this.parent) === null || _b === void 0 || _b.children.delete(this), this.instance = void 0, sync.cancelSync.preRender(this.updateProjection);
          }, ProjectionNode.prototype.blockUpdate = function() {
            this.updateManuallyBlocked = !0;
          }, ProjectionNode.prototype.unblockUpdate = function() {
            this.updateManuallyBlocked = !1;
          }, ProjectionNode.prototype.isUpdateBlocked = function() {
            return this.updateManuallyBlocked || this.updateBlockedByResize;
          }, ProjectionNode.prototype.isTreeAnimationBlocked = function() {
            var _a3;
            return this.isAnimationBlocked || ((_a3 = this.parent) === null || _a3 === void 0 ? void 0 : _a3.isTreeAnimationBlocked()) || !1;
          }, ProjectionNode.prototype.startUpdate = function() {
            var _a3;
            this.isUpdateBlocked() || (this.isUpdating = !0, (_a3 = this.nodes) === null || _a3 === void 0 || _a3.forEach(resetRotation));
          }, ProjectionNode.prototype.willUpdate = function(shouldNotifyListeners) {
            var _a3, _b, _c;
            if (shouldNotifyListeners === void 0 && (shouldNotifyListeners = !0), this.root.isUpdateBlocked()) {
              (_b = (_a3 = this.options).onExitComplete) === null || _b === void 0 || _b.call(_a3);
              return;
            }
            if (!this.root.isUpdating && this.root.startUpdate(), !this.isLayoutDirty) {
              this.isLayoutDirty = !0;
              for (var i7 = 0; i7 < this.path.length; i7++) {
                var node = this.path[i7];
                node.shouldResetTransform = !0, node.updateScroll();
              }
              var _d = this.options, layoutId = _d.layoutId, layout = _d.layout;
              if (!(layoutId === void 0 && !layout)) {
                var transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;
                this.prevTransformTemplateValue = transformTemplate == null ? void 0 : transformTemplate(this.latestValues, ""), this.updateSnapshot(), shouldNotifyListeners && this.notifyListeners("willUpdate");
              }
            }
          }, ProjectionNode.prototype.didUpdate = function() {
            var updateWasBlocked = this.isUpdateBlocked();
            if (updateWasBlocked) {
              this.unblockUpdate(), this.clearAllSnapshots(), this.nodes.forEach(clearMeasurements);
              return;
            }
            this.isUpdating && (this.isUpdating = !1, this.potentialNodes.size && (this.potentialNodes.forEach(mountNodeEarly), this.potentialNodes.clear()), this.nodes.forEach(resetTransformStyle), this.nodes.forEach(updateLayout), this.nodes.forEach(notifyLayoutUpdate), this.clearAllSnapshots(), sync.flushSync.update(), sync.flushSync.preRender(), sync.flushSync.render());
          }, ProjectionNode.prototype.clearAllSnapshots = function() {
            this.nodes.forEach(clearSnapshot), this.sharedNodes.forEach(removeLeadSnapshots);
          }, ProjectionNode.prototype.scheduleUpdateProjection = function() {
            sync__default.default.preRender(this.updateProjection, !1, !0);
          }, ProjectionNode.prototype.scheduleCheckAfterUnmount = function() {
            var _this = this;
            sync__default.default.postRender(function() {
              _this.isLayoutDirty ? _this.root.didUpdate() : _this.root.checkUpdateFailed();
            });
          }, ProjectionNode.prototype.updateSnapshot = function() {
            if (!(this.snapshot || !this.instance)) {
              var measured = this.measure(), layout = this.removeTransform(this.removeElementScroll(measured));
              roundBox(layout), this.snapshot = {
                measured,
                layout,
                latestValues: {}
              };
            }
          }, ProjectionNode.prototype.updateLayout = function() {
            var _a3;
            if (this.instance && (this.updateScroll(), !(!(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty))) {
              if (this.resumeFrom && !this.resumeFrom.instance)
                for (var i7 = 0; i7 < this.path.length; i7++) {
                  var node = this.path[i7];
                  node.updateScroll();
                }
              var measured = this.measure();
              roundBox(measured);
              var prevLayout = this.layout;
              this.layout = {
                measured,
                actual: this.removeElementScroll(measured)
              }, this.layoutCorrected = createBox(), this.isLayoutDirty = !1, this.projectionDelta = void 0, this.notifyListeners("measure", this.layout.actual), (_a3 = this.options.visualElement) === null || _a3 === void 0 || _a3.notifyLayoutMeasure(this.layout.actual, prevLayout == null ? void 0 : prevLayout.actual);
            }
          }, ProjectionNode.prototype.updateScroll = function() {
            this.options.layoutScroll && this.instance && (this.isScrollRoot = checkIsScrollRoot(this.instance), this.scroll = measureScroll(this.instance));
          }, ProjectionNode.prototype.resetTransform = function() {
            var _a3;
            if (resetTransform) {
              var isResetRequested = this.isLayoutDirty || this.shouldResetTransform, hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta), transformTemplate = (_a3 = this.options.visualElement) === null || _a3 === void 0 ? void 0 : _a3.getProps().transformTemplate, transformTemplateValue = transformTemplate == null ? void 0 : transformTemplate(this.latestValues, ""), transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;
              isResetRequested && (hasProjection || hasTransform(this.latestValues) || transformTemplateHasChanged) && (resetTransform(this.instance, transformTemplateValue), this.shouldResetTransform = !1, this.scheduleRender());
            }
          }, ProjectionNode.prototype.measure = function() {
            var visualElement2 = this.options.visualElement;
            if (!visualElement2)
              return createBox();
            var box = visualElement2.measureViewportBox(), scroll2 = this.root.scroll;
            return scroll2 && (translateAxis(box.x, scroll2.x), translateAxis(box.y, scroll2.y)), box;
          }, ProjectionNode.prototype.removeElementScroll = function(box) {
            var boxWithoutScroll = createBox();
            copyBoxInto(boxWithoutScroll, box);
            for (var i7 = 0; i7 < this.path.length; i7++) {
              var node = this.path[i7], scroll_1 = node.scroll, options = node.options, isScrollRoot = node.isScrollRoot;
              if (node !== this.root && scroll_1 && options.layoutScroll) {
                if (isScrollRoot) {
                  copyBoxInto(boxWithoutScroll, box);
                  var rootScroll = this.root.scroll;
                  rootScroll && (translateAxis(boxWithoutScroll.x, -rootScroll.x), translateAxis(boxWithoutScroll.y, -rootScroll.y));
                }
                translateAxis(boxWithoutScroll.x, scroll_1.x), translateAxis(boxWithoutScroll.y, scroll_1.y);
              }
            }
            return boxWithoutScroll;
          }, ProjectionNode.prototype.applyTransform = function(box, transformOnly) {
            transformOnly === void 0 && (transformOnly = !1);
            var withTransforms = createBox();
            copyBoxInto(withTransforms, box);
            for (var i7 = 0; i7 < this.path.length; i7++) {
              var node = this.path[i7];
              !transformOnly && node.options.layoutScroll && node.scroll && node !== node.root && transformBox(withTransforms, {
                x: -node.scroll.x,
                y: -node.scroll.y
              }), hasTransform(node.latestValues) && transformBox(withTransforms, node.latestValues);
            }
            return hasTransform(this.latestValues) && transformBox(withTransforms, this.latestValues), withTransforms;
          }, ProjectionNode.prototype.removeTransform = function(box) {
            var _a3, boxWithoutTransform = createBox();
            copyBoxInto(boxWithoutTransform, box);
            for (var i7 = 0; i7 < this.path.length; i7++) {
              var node = this.path[i7];
              if (node.instance && hasTransform(node.latestValues)) {
                hasScale(node.latestValues) && node.updateSnapshot();
                var sourceBox = createBox(), nodeBox = node.measure();
                copyBoxInto(sourceBox, nodeBox), removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a3 = node.snapshot) === null || _a3 === void 0 ? void 0 : _a3.layout, sourceBox);
              }
            }
            return hasTransform(this.latestValues) && removeBoxTransforms(boxWithoutTransform, this.latestValues), boxWithoutTransform;
          }, ProjectionNode.prototype.setTargetDelta = function(delta) {
            this.targetDelta = delta, this.root.scheduleUpdateProjection();
          }, ProjectionNode.prototype.setOptions = function(options) {
            var _a3;
            this.options = tslib.__assign(tslib.__assign(tslib.__assign({}, this.options), options), { crossfade: (_a3 = options.crossfade) !== null && _a3 !== void 0 ? _a3 : !0 });
          }, ProjectionNode.prototype.clearMeasurements = function() {
            this.scroll = void 0, this.layout = void 0, this.snapshot = void 0, this.prevTransformTemplateValue = void 0, this.targetDelta = void 0, this.target = void 0, this.isLayoutDirty = !1;
          }, ProjectionNode.prototype.resolveTargetDelta = function() {
            var _a3, _b = this.options, layout = _b.layout, layoutId = _b.layoutId;
            !this.layout || !(layout || layoutId) || (!this.targetDelta && !this.relativeTarget && (this.relativeParent = this.getClosestProjectingParent(), this.relativeParent && this.relativeParent.layout && (this.relativeTarget = createBox(), this.relativeTargetOrigin = createBox(), calcRelativePosition(this.relativeTargetOrigin, this.layout.actual, this.relativeParent.layout.actual), copyBoxInto(this.relativeTarget, this.relativeTargetOrigin))), !(!this.relativeTarget && !this.targetDelta) && (this.target || (this.target = createBox(), this.targetWithTransforms = createBox()), this.relativeTarget && this.relativeTargetOrigin && (!((_a3 = this.relativeParent) === null || _a3 === void 0) && _a3.target) ? calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target) : this.targetDelta ? (Boolean(this.resumingFrom) ? this.target = this.applyTransform(this.layout.actual) : copyBoxInto(this.target, this.layout.actual), applyBoxDelta(this.target, this.targetDelta)) : copyBoxInto(this.target, this.layout.actual), this.attemptToResolveRelativeTarget && (this.attemptToResolveRelativeTarget = !1, this.relativeParent = this.getClosestProjectingParent(), this.relativeParent && Boolean(this.relativeParent.resumingFrom) === Boolean(this.resumingFrom) && !this.relativeParent.options.layoutScroll && this.relativeParent.target && (this.relativeTarget = createBox(), this.relativeTargetOrigin = createBox(), calcRelativePosition(this.relativeTargetOrigin, this.target, this.relativeParent.target), copyBoxInto(this.relativeTarget, this.relativeTargetOrigin)))));
          }, ProjectionNode.prototype.getClosestProjectingParent = function() {
            if (!(!this.parent || hasTransform(this.parent.latestValues)))
              return (this.parent.relativeTarget || this.parent.targetDelta) && this.parent.layout ? this.parent : this.parent.getClosestProjectingParent();
          }, ProjectionNode.prototype.calcProjection = function() {
            var _a3, _b = this.options, layout = _b.layout, layoutId = _b.layoutId;
            if (this.isTreeAnimating = Boolean(((_a3 = this.parent) === null || _a3 === void 0 ? void 0 : _a3.isTreeAnimating) || this.currentAnimation || this.pendingAnimation), this.isTreeAnimating || (this.targetDelta = this.relativeTarget = void 0), !(!this.layout || !(layout || layoutId))) {
              var lead = this.getLead();
              copyBoxInto(this.layoutCorrected, this.layout.actual), applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, Boolean(this.resumingFrom) || this !== lead);
              var target = lead.target;
              if (target) {
                this.projectionDelta || (this.projectionDelta = createDelta(), this.projectionDeltaWithTransform = createDelta());
                var prevTreeScaleX = this.treeScale.x, prevTreeScaleY = this.treeScale.y, prevProjectionTransform = this.projectionTransform;
                calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues), this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale), (this.projectionTransform !== prevProjectionTransform || this.treeScale.x !== prevTreeScaleX || this.treeScale.y !== prevTreeScaleY) && (this.hasProjected = !0, this.scheduleRender(), this.notifyListeners("projectionUpdate", target));
              }
            }
          }, ProjectionNode.prototype.hide = function() {
            this.isVisible = !1;
          }, ProjectionNode.prototype.show = function() {
            this.isVisible = !0;
          }, ProjectionNode.prototype.scheduleRender = function(notifyAll2) {
            var _a3, _b, _c;
            notifyAll2 === void 0 && (notifyAll2 = !0), (_b = (_a3 = this.options).scheduleRender) === null || _b === void 0 || _b.call(_a3), notifyAll2 && ((_c = this.getStack()) === null || _c === void 0 || _c.scheduleRender()), this.resumingFrom && !this.resumingFrom.instance && (this.resumingFrom = void 0);
          }, ProjectionNode.prototype.setAnimationOrigin = function(delta, hasOnlyRelativeTargetChanged) {
            var _this = this, _a3;
            hasOnlyRelativeTargetChanged === void 0 && (hasOnlyRelativeTargetChanged = !1);
            var snapshot = this.snapshot, snapshotLatestValues = (snapshot == null ? void 0 : snapshot.latestValues) || {}, mixedValues = tslib.__assign({}, this.latestValues), targetDelta = createDelta();
            this.relativeTarget = this.relativeTargetOrigin = void 0, this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;
            var relativeLayout = createBox(), isSharedLayoutAnimation = snapshot == null ? void 0 : snapshot.isShared, isOnlyMember = (((_a3 = this.getStack()) === null || _a3 === void 0 ? void 0 : _a3.members.length) || 0) <= 1, shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation && !isOnlyMember && this.options.crossfade === !0 && !this.path.some(hasOpacityCrossfade));
            this.animationProgress = 0, this.mixTargetDelta = function(latest) {
              var _a4, progress2 = latest / 1e3;
              mixAxisDelta(targetDelta.x, delta.x, progress2), mixAxisDelta(targetDelta.y, delta.y, progress2), _this.setTargetDelta(targetDelta), _this.relativeTarget && _this.relativeTargetOrigin && _this.layout && (!((_a4 = _this.relativeParent) === null || _a4 === void 0) && _a4.layout) && (calcRelativePosition(relativeLayout, _this.layout.actual, _this.relativeParent.layout.actual), mixBox(_this.relativeTarget, _this.relativeTargetOrigin, relativeLayout, progress2)), isSharedLayoutAnimation && (_this.animationValues = mixedValues, mixValues(mixedValues, snapshotLatestValues, _this.latestValues, progress2, shouldCrossfadeOpacity, isOnlyMember)), _this.root.scheduleUpdateProjection(), _this.scheduleRender(), _this.animationProgress = progress2;
            }, this.mixTargetDelta(0);
          }, ProjectionNode.prototype.startAnimation = function(options) {
            var _this = this, _a3, _b;
            this.notifyListeners("animationStart"), (_a3 = this.currentAnimation) === null || _a3 === void 0 || _a3.stop(), this.resumingFrom && ((_b = this.resumingFrom.currentAnimation) === null || _b === void 0 || _b.stop()), this.pendingAnimation && (sync.cancelSync.update(this.pendingAnimation), this.pendingAnimation = void 0), this.pendingAnimation = sync__default.default.update(function() {
              globalProjectionState.hasAnimatedSinceResize = !0, _this.currentAnimation = animate2(0, animationTarget, tslib.__assign(tslib.__assign({}, options), { onUpdate: function(latest) {
                var _a4;
                _this.mixTargetDelta(latest), (_a4 = options.onUpdate) === null || _a4 === void 0 || _a4.call(options, latest);
              }, onComplete: function() {
                var _a4;
                (_a4 = options.onComplete) === null || _a4 === void 0 || _a4.call(options), _this.completeAnimation();
              } })), _this.resumingFrom && (_this.resumingFrom.currentAnimation = _this.currentAnimation), _this.pendingAnimation = void 0;
            });
          }, ProjectionNode.prototype.completeAnimation = function() {
            var _a3;
            this.resumingFrom && (this.resumingFrom.currentAnimation = void 0, this.resumingFrom.preserveOpacity = void 0), (_a3 = this.getStack()) === null || _a3 === void 0 || _a3.exitAnimationComplete(), this.resumingFrom = this.currentAnimation = this.animationValues = void 0, this.notifyListeners("animationComplete");
          }, ProjectionNode.prototype.finishAnimation = function() {
            var _a3;
            this.currentAnimation && ((_a3 = this.mixTargetDelta) === null || _a3 === void 0 || _a3.call(this, animationTarget), this.currentAnimation.stop()), this.completeAnimation();
          }, ProjectionNode.prototype.applyTransformsToTarget = function() {
            var _a3 = this.getLead(), targetWithTransforms = _a3.targetWithTransforms, target = _a3.target, layout = _a3.layout, latestValues = _a3.latestValues;
            !targetWithTransforms || !target || !layout || (copyBoxInto(targetWithTransforms, target), transformBox(targetWithTransforms, latestValues), calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues));
          }, ProjectionNode.prototype.registerSharedNode = function(layoutId, node) {
            var _a3, _b, _c;
            this.sharedNodes.has(layoutId) || this.sharedNodes.set(layoutId, new NodeStack());
            var stack = this.sharedNodes.get(layoutId);
            stack.add(node), node.promote({
              transition: (_a3 = node.options.initialPromotionConfig) === null || _a3 === void 0 ? void 0 : _a3.transition,
              preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node)
            });
          }, ProjectionNode.prototype.isLead = function() {
            var stack = this.getStack();
            return stack ? stack.lead === this : !0;
          }, ProjectionNode.prototype.getLead = function() {
            var _a3, layoutId = this.options.layoutId;
            return layoutId ? ((_a3 = this.getStack()) === null || _a3 === void 0 ? void 0 : _a3.lead) || this : this;
          }, ProjectionNode.prototype.getPrevLead = function() {
            var _a3, layoutId = this.options.layoutId;
            return layoutId ? (_a3 = this.getStack()) === null || _a3 === void 0 ? void 0 : _a3.prevLead : void 0;
          }, ProjectionNode.prototype.getStack = function() {
            var layoutId = this.options.layoutId;
            if (layoutId)
              return this.root.sharedNodes.get(layoutId);
          }, ProjectionNode.prototype.promote = function(_a3) {
            var _b = _a3 === void 0 ? {} : _a3, needsReset = _b.needsReset, transition = _b.transition, preserveFollowOpacity = _b.preserveFollowOpacity, stack = this.getStack();
            stack && stack.promote(this, preserveFollowOpacity), needsReset && (this.projectionDelta = void 0, this.needsReset = !0), transition && this.setOptions({ transition });
          }, ProjectionNode.prototype.relegate = function() {
            var stack = this.getStack();
            return stack ? stack.relegate(this) : !1;
          }, ProjectionNode.prototype.resetRotation = function() {
            var visualElement2 = this.options.visualElement;
            if (visualElement2) {
              for (var hasRotate = !1, resetValues = {}, i7 = 0; i7 < transformAxes.length; i7++) {
                var axis = transformAxes[i7], key = "rotate" + axis;
                visualElement2.getStaticValue(key) && (hasRotate = !0, resetValues[key] = visualElement2.getStaticValue(key), visualElement2.setStaticValue(key, 0));
              }
              if (hasRotate) {
                visualElement2 == null || visualElement2.syncRender();
                for (var key in resetValues)
                  visualElement2.setStaticValue(key, resetValues[key]);
                visualElement2.scheduleRender();
              }
            }
          }, ProjectionNode.prototype.getProjectionStyles = function(styleProp) {
            var _a3, _b, _c, _d, _e3, _f;
            styleProp === void 0 && (styleProp = {});
            var styles = {};
            if (!this.instance || this.isSVG)
              return styles;
            if (this.isVisible)
              styles.visibility = "";
            else
              return { visibility: "hidden" };
            var transformTemplate = (_a3 = this.options.visualElement) === null || _a3 === void 0 ? void 0 : _a3.getProps().transformTemplate;
            if (this.needsReset)
              return this.needsReset = !1, styles.opacity = "", styles.pointerEvents = resolveMotionValue(styleProp.pointerEvents) || "", styles.transform = transformTemplate ? transformTemplate(this.latestValues, "") : "none", styles;
            var lead = this.getLead();
            if (!this.projectionDelta || !this.layout || !lead.target) {
              var emptyStyles = {};
              return this.options.layoutId && (emptyStyles.opacity = (_b = this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1, emptyStyles.pointerEvents = resolveMotionValue(styleProp.pointerEvents) || ""), this.hasProjected && !hasTransform(this.latestValues) && (emptyStyles.transform = transformTemplate ? transformTemplate({}, "") : "none", this.hasProjected = !1), emptyStyles;
            }
            var valuesToRender = lead.animationValues || lead.latestValues;
            this.applyTransformsToTarget(), styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender), transformTemplate && (styles.transform = transformTemplate(valuesToRender, styles.transform));
            var _g = this.projectionDelta, x5 = _g.x, y6 = _g.y;
            styles.transformOrigin = "".concat(x5.origin * 100, "% ").concat(y6.origin * 100, "% 0"), lead.animationValues ? styles.opacity = lead === this ? (_d = (_c = valuesToRender.opacity) !== null && _c !== void 0 ? _c : this.latestValues.opacity) !== null && _d !== void 0 ? _d : 1 : this.preserveOpacity ? this.latestValues.opacity : valuesToRender.opacityExit : styles.opacity = lead === this ? (_e3 = valuesToRender.opacity) !== null && _e3 !== void 0 ? _e3 : "" : (_f = valuesToRender.opacityExit) !== null && _f !== void 0 ? _f : 0;
            for (var key in scaleCorrectors)
              if (valuesToRender[key] !== void 0) {
                var _h = scaleCorrectors[key], correct = _h.correct, applyTo = _h.applyTo, corrected = correct(valuesToRender[key], lead);
                if (applyTo)
                  for (var num = applyTo.length, i7 = 0; i7 < num; i7++)
                    styles[applyTo[i7]] = corrected;
                else
                  styles[key] = corrected;
              }
            return this.options.layoutId && (styles.pointerEvents = lead === this ? resolveMotionValue(styleProp.pointerEvents) || "" : "none"), styles;
          }, ProjectionNode.prototype.clearSnapshot = function() {
            this.resumeFrom = this.snapshot = void 0;
          }, ProjectionNode.prototype.resetTree = function() {
            this.root.nodes.forEach(function(node) {
              var _a3;
              return (_a3 = node.currentAnimation) === null || _a3 === void 0 ? void 0 : _a3.stop();
            }), this.root.nodes.forEach(clearMeasurements), this.root.sharedNodes.clear();
          }, ProjectionNode;
        }()
      );
    }
    function updateLayout(node) {
      node.updateLayout();
    }
    function notifyLayoutUpdate(node) {
      var _a2, _b, _c, _d, snapshot = (_b = (_a2 = node.resumeFrom) === null || _a2 === void 0 ? void 0 : _a2.snapshot) !== null && _b !== void 0 ? _b : node.snapshot;
      if (node.isLead() && node.layout && snapshot && node.hasListeners("didUpdate")) {
        var _e3 = node.layout, layout_1 = _e3.actual, measuredLayout = _e3.measured;
        node.options.animationType === "size" ? eachAxis(function(axis) {
          var axisSnapshot = snapshot.isShared ? snapshot.measured[axis] : snapshot.layout[axis], length2 = calcLength(axisSnapshot);
          axisSnapshot.min = layout_1[axis].min, axisSnapshot.max = axisSnapshot.min + length2;
        }) : node.options.animationType === "position" && eachAxis(function(axis) {
          var axisSnapshot = snapshot.isShared ? snapshot.measured[axis] : snapshot.layout[axis], length2 = calcLength(layout_1[axis]);
          axisSnapshot.max = axisSnapshot.min + length2;
        });
        var layoutDelta = createDelta();
        calcBoxDelta(layoutDelta, layout_1, snapshot.layout);
        var visualDelta = createDelta();
        snapshot.isShared ? calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, !0), snapshot.measured) : calcBoxDelta(visualDelta, layout_1, snapshot.layout);
        var hasLayoutChanged = !isDeltaZero(layoutDelta), hasRelativeTargetChanged = !1;
        if (!node.resumeFrom && (node.relativeParent = node.getClosestProjectingParent(), node.relativeParent && !node.relativeParent.resumeFrom)) {
          var _f = node.relativeParent, parentSnapshot = _f.snapshot, parentLayout = _f.layout;
          if (parentSnapshot && parentLayout) {
            var relativeSnapshot = createBox();
            calcRelativePosition(relativeSnapshot, snapshot.layout, parentSnapshot.layout);
            var relativeLayout = createBox();
            calcRelativePosition(relativeLayout, layout_1, parentLayout.actual), boxEquals(relativeSnapshot, relativeLayout) || (hasRelativeTargetChanged = !0);
          }
        }
        node.notifyListeners("didUpdate", {
          layout: layout_1,
          snapshot,
          delta: visualDelta,
          layoutDelta,
          hasLayoutChanged,
          hasRelativeTargetChanged
        });
      } else
        node.isLead() && ((_d = (_c = node.options).onExitComplete) === null || _d === void 0 || _d.call(_c));
      node.options.transition = void 0;
    }
    function clearSnapshot(node) {
      node.clearSnapshot();
    }
    function clearMeasurements(node) {
      node.clearMeasurements();
    }
    function resetTransformStyle(node) {
      var visualElement2 = node.options.visualElement;
      visualElement2 != null && visualElement2.getProps().onBeforeLayoutMeasure && visualElement2.notifyBeforeLayoutMeasure(), node.resetTransform();
    }
    function finishAnimation(node) {
      node.finishAnimation(), node.targetDelta = node.relativeTarget = node.target = void 0;
    }
    function resolveTargetDelta(node) {
      node.resolveTargetDelta();
    }
    function calcProjection(node) {
      node.calcProjection();
    }
    function resetRotation(node) {
      node.resetRotation();
    }
    function removeLeadSnapshots(stack) {
      stack.removeLeadSnapshot();
    }
    function mixAxisDelta(output, delta, p7) {
      output.translate = popmotion.mix(delta.translate, 0, p7), output.scale = popmotion.mix(delta.scale, 1, p7), output.origin = delta.origin, output.originPoint = delta.originPoint;
    }
    function mixAxis(output, from, to, p7) {
      output.min = popmotion.mix(from.min, to.min, p7), output.max = popmotion.mix(from.max, to.max, p7);
    }
    function mixBox(output, from, to, p7) {
      mixAxis(output.x, from.x, to.x, p7), mixAxis(output.y, from.y, to.y, p7);
    }
    function hasOpacityCrossfade(node) {
      return node.animationValues && node.animationValues.opacityExit !== void 0;
    }
    var defaultLayoutTransition = {
      duration: 0.45,
      ease: [0.4, 0, 0.1, 1]
    };
    function mountNodeEarly(node, id2) {
      for (var searchNode = node.root, i7 = node.path.length - 1; i7 >= 0; i7--)
        if (Boolean(node.path[i7].instance)) {
          searchNode = node.path[i7];
          break;
        }
      var searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document, element = searchElement.querySelector('[data-projection-id="'.concat(id2, '"]'));
      element && node.mount(element, !0);
    }
    function roundAxis(axis) {
      axis.min = Math.round(axis.min), axis.max = Math.round(axis.max);
    }
    function roundBox(box) {
      roundAxis(box.x), roundAxis(box.y);
    }
    var DocumentProjectionNode = createProjectionNode({
      attachResizeListener: function(ref, notify2) {
        return addDomEvent(ref, "resize", notify2);
      },
      measureScroll: function() {
        return {
          x: document.documentElement.scrollLeft || document.body.scrollLeft,
          y: document.documentElement.scrollTop || document.body.scrollTop
        };
      },
      checkIsScrollRoot: function() {
        return !0;
      }
    }), rootProjectionNode = {
      current: void 0
    }, HTMLProjectionNode = createProjectionNode({
      measureScroll: function(instance) {
        return {
          x: instance.scrollLeft,
          y: instance.scrollTop
        };
      },
      defaultParent: function() {
        if (!rootProjectionNode.current) {
          var documentNode = new DocumentProjectionNode(0, {});
          documentNode.mount(window), documentNode.setOptions({ layoutScroll: !0 }), rootProjectionNode.current = documentNode;
        }
        return rootProjectionNode.current;
      },
      resetTransform: function(instance, value) {
        instance.style.transform = value ?? "none";
      },
      checkIsScrollRoot: function(instance) {
        return Boolean(window.getComputedStyle(instance).position === "fixed");
      }
    }), featureBundle = tslib.__assign(tslib.__assign(tslib.__assign(tslib.__assign({}, animations), gestureAnimations), drag), layoutFeatures), motion = /* @__PURE__ */ createMotionProxy(function(Component2, config) {
      return createDomMotionConfig(Component2, config, featureBundle, createDomVisualElement, HTMLProjectionNode);
    });
    function createDomMotionComponent(key) {
      return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: !1 }, featureBundle, createDomVisualElement, HTMLProjectionNode));
    }
    var m10 = createMotionProxy(createDomMotionConfig);
    function useIsMounted2() {
      var isMounted = React26.useRef(!1);
      return useIsomorphicLayoutEffect2(function() {
        return isMounted.current = !0, function() {
          isMounted.current = !1;
        };
      }, []), isMounted;
    }
    function useForceUpdate() {
      var isMounted = useIsMounted2(), _a2 = tslib.__read(React26.useState(0), 2), forcedRenderCount = _a2[0], setForcedRenderCount = _a2[1], forceRender = React26.useCallback(function() {
        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);
      }, [forcedRenderCount]), deferredForceRender = React26.useCallback(function() {
        return sync__default.default.postRender(forceRender);
      }, [forceRender]);
      return [deferredForceRender, forcedRenderCount];
    }
    var PresenceChild = function(_a2) {
      var children = _a2.children, initial = _a2.initial, isPresent2 = _a2.isPresent, onExitComplete = _a2.onExitComplete, custom = _a2.custom, presenceAffectsLayout = _a2.presenceAffectsLayout, presenceChildren = useConstant(newChildrenMap), id2 = useId(), context = React26.useMemo(
        function() {
          return {
            id: id2,
            initial,
            isPresent: isPresent2,
            custom,
            onExitComplete: function(childId) {
              var e_1, _a3;
              presenceChildren.set(childId, !0);
              try {
                for (var _b = tslib.__values(presenceChildren.values()), _c = _b.next(); !_c.done; _c = _b.next()) {
                  var isComplete = _c.value;
                  if (!isComplete)
                    return;
                }
              } catch (e_1_1) {
                e_1 = { error: e_1_1 };
              } finally {
                try {
                  _c && !_c.done && (_a3 = _b.return) && _a3.call(_b);
                } finally {
                  if (e_1)
                    throw e_1.error;
                }
              }
              onExitComplete == null || onExitComplete();
            },
            register: function(childId) {
              return presenceChildren.set(childId, !1), function() {
                return presenceChildren.delete(childId);
              };
            }
          };
        },
        /**
         * If the presence of a child affects the layout of the components around it,
         * we want to make a new context value to ensure they get re-rendered
         * so they can detect that layout change.
         */
        presenceAffectsLayout ? void 0 : [isPresent2]
      );
      return React26.useMemo(function() {
        presenceChildren.forEach(function(_3, key) {
          return presenceChildren.set(key, !1);
        });
      }, [isPresent2]), React__namespace.useEffect(function() {
        !isPresent2 && !presenceChildren.size && (onExitComplete == null || onExitComplete());
      }, [isPresent2]), React__namespace.createElement(PresenceContext.Provider, { value: context }, children);
    };
    function newChildrenMap() {
      return /* @__PURE__ */ new Map();
    }
    var getChildKey = function(child) {
      return child.key || "";
    };
    function updateChildLookup(children, allChildren) {
      children.forEach(function(child) {
        var key = getChildKey(child);
        allChildren.set(key, child);
      });
    }
    function onlyElements(children) {
      var filtered = [];
      return React26.Children.forEach(children, function(child) {
        React26.isValidElement(child) && filtered.push(child);
      }), filtered;
    }
    var AnimatePresence = function(_a2) {
      var children = _a2.children, custom = _a2.custom, _b = _a2.initial, initial = _b === void 0 ? !0 : _b, onExitComplete = _a2.onExitComplete, exitBeforeEnter = _a2.exitBeforeEnter, _c = _a2.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? !0 : _c, _d = tslib.__read(useForceUpdate(), 1), forceRender = _d[0], forceRenderLayoutGroup = React26.useContext(LayoutGroupContext).forceRender;
      forceRenderLayoutGroup && (forceRender = forceRenderLayoutGroup);
      var isMounted = useIsMounted2(), filteredChildren = onlyElements(children), childrenToRender = filteredChildren, exiting = /* @__PURE__ */ new Set(), presentChildren = React26.useRef(childrenToRender), allChildren = React26.useRef(/* @__PURE__ */ new Map()).current, isInitialRender = React26.useRef(!0);
      if (useIsomorphicLayoutEffect2(function() {
        isInitialRender.current = !1, updateChildLookup(filteredChildren, allChildren), presentChildren.current = childrenToRender;
      }), useUnmountEffect(function() {
        isInitialRender.current = !0, allChildren.clear(), exiting.clear();
      }), isInitialRender.current)
        return React__namespace.createElement(React__namespace.Fragment, null, childrenToRender.map(function(child) {
          return React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: !0, initial: initial ? void 0 : !1, presenceAffectsLayout }, child);
        }));
      childrenToRender = tslib.__spreadArray([], tslib.__read(childrenToRender), !1);
      for (var presentKeys = presentChildren.current.map(getChildKey), targetKeys = filteredChildren.map(getChildKey), numPresent = presentKeys.length, i7 = 0; i7 < numPresent; i7++) {
        var key = presentKeys[i7];
        targetKeys.indexOf(key) === -1 && exiting.add(key);
      }
      return exitBeforeEnter && exiting.size && (childrenToRender = []), exiting.forEach(function(key2) {
        if (targetKeys.indexOf(key2) === -1) {
          var child = allChildren.get(key2);
          if (child) {
            var insertionIndex = presentKeys.indexOf(key2), onExit = function() {
              allChildren.delete(key2), exiting.delete(key2);
              var removeIndex = presentChildren.current.findIndex(function(presentChild) {
                return presentChild.key === key2;
              });
              if (presentChildren.current.splice(removeIndex, 1), !exiting.size) {
                if (presentChildren.current = filteredChildren, isMounted.current === !1)
                  return;
                forceRender(), onExitComplete && onExitComplete();
              }
            };
            childrenToRender.splice(insertionIndex, 0, React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: !1, onExitComplete: onExit, custom, presenceAffectsLayout }, child));
          }
        }
      }), childrenToRender = childrenToRender.map(function(child) {
        var key2 = child.key;
        return exiting.has(key2) ? child : React__namespace.createElement(PresenceChild, { key: getChildKey(child), isPresent: !0, presenceAffectsLayout }, child);
      }), env !== "production" && exitBeforeEnter && childrenToRender.length > 1 && console.warn("You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour."), React__namespace.createElement(React__namespace.Fragment, null, exiting.size ? childrenToRender : childrenToRender.map(function(child) {
        return React26.cloneElement(child);
      }));
    }, DeprecatedLayoutGroupContext = React26.createContext(null), notify = function(node) {
      return !node.isLayoutDirty && node.willUpdate(!1);
    };
    function nodeGroup() {
      var nodes = /* @__PURE__ */ new Set(), subscriptions = /* @__PURE__ */ new WeakMap(), dirtyAll = function() {
        return nodes.forEach(notify);
      };
      return {
        add: function(node) {
          nodes.add(node), subscriptions.set(node, node.addEventListener("willUpdate", dirtyAll));
        },
        remove: function(node) {
          var _a2;
          nodes.delete(node), (_a2 = subscriptions.get(node)) === null || _a2 === void 0 || _a2(), subscriptions.delete(node), dirtyAll();
        },
        dirty: dirtyAll
      };
    }
    var shouldInheritGroup = function(inherit) {
      return inherit === !0;
    }, shouldInheritId = function(inherit) {
      return shouldInheritGroup(inherit === !0) || inherit === "id";
    }, LayoutGroup = function(_a2) {
      var _b, _c, children = _a2.children, id2 = _a2.id, inheritId = _a2.inheritId, _d = _a2.inherit, inherit = _d === void 0 ? !0 : _d;
      inheritId !== void 0 && (inherit = inheritId);
      var layoutGroupContext = React26.useContext(LayoutGroupContext), deprecatedLayoutGroupContext = React26.useContext(DeprecatedLayoutGroupContext), _e3 = tslib.__read(useForceUpdate(), 2), forceRender = _e3[0], key = _e3[1], context = React26.useRef(null), upstreamId = (_b = layoutGroupContext.id) !== null && _b !== void 0 ? _b : deprecatedLayoutGroupContext;
      context.current === null && (shouldInheritId(inherit) && upstreamId && (id2 = id2 ? upstreamId + "-" + id2 : upstreamId), context.current = {
        id: id2,
        group: shouldInheritGroup(inherit) && (_c = layoutGroupContext == null ? void 0 : layoutGroupContext.group) !== null && _c !== void 0 ? _c : nodeGroup()
      });
      var memoizedContext = React26.useMemo(function() {
        return tslib.__assign(tslib.__assign({}, context.current), { forceRender });
      }, [key]);
      return React__namespace.createElement(LayoutGroupContext.Provider, { value: memoizedContext }, children);
    }, id = 0, AnimateSharedLayout = function(_a2) {
      var children = _a2.children;
      return React__namespace.useEffect(function() {
        heyListen.warning(!1, "AnimateSharedLayout is deprecated: https://www.framer.com/docs/guide-upgrade/##shared-layout-animations");
      }, []), React__namespace.createElement(LayoutGroup, { id: useConstant(function() {
        return "asl-".concat(id++);
      }) }, children);
    };
    function MotionConfig(_a2) {
      var children = _a2.children, isValidProp = _a2.isValidProp, config = tslib.__rest(_a2, ["children", "isValidProp"]);
      isValidProp && loadExternalIsValidProp(isValidProp), config = tslib.__assign(tslib.__assign({}, React26.useContext(MotionConfigContext)), config), config.isStatic = useConstant(function() {
        return config.isStatic;
      });
      var context = React26.useMemo(function() {
        return config;
      }, [JSON.stringify(config.transition), config.transformPagePoint, config.reducedMotion]);
      return React__namespace.createElement(MotionConfigContext.Provider, { value: context }, children);
    }
    function LazyMotion(_a2) {
      var children = _a2.children, features = _a2.features, _b = _a2.strict, strict = _b === void 0 ? !1 : _b, _c = tslib.__read(React26.useState(!isLazyBundle(features)), 2), setIsLoaded = _c[1], loadedRenderer = React26.useRef(void 0);
      if (!isLazyBundle(features)) {
        var renderer = features.renderer, loadedFeatures = tslib.__rest(features, ["renderer"]);
        loadedRenderer.current = renderer, loadFeatures(loadedFeatures);
      }
      return React26.useEffect(function() {
        isLazyBundle(features) && features().then(function(_a3) {
          var renderer2 = _a3.renderer, loadedFeatures2 = tslib.__rest(_a3, ["renderer"]);
          loadFeatures(loadedFeatures2), loadedRenderer.current = renderer2, setIsLoaded(!0);
        });
      }, []), React__namespace.createElement(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict } }, children);
    }
    function isLazyBundle(features) {
      return typeof features == "function";
    }
    var ReorderContext = React26.createContext(null);
    function checkReorder(order3, value, offset, velocity) {
      if (!velocity)
        return order3;
      var index3 = order3.findIndex(function(item2) {
        return item2.value === value;
      });
      if (index3 === -1)
        return order3;
      var nextOffset = velocity > 0 ? 1 : -1, nextItem = order3[index3 + nextOffset];
      if (!nextItem)
        return order3;
      var item = order3[index3], nextLayout = nextItem.layout, nextItemCenter = popmotion.mix(nextLayout.min, nextLayout.max, 0.5);
      return nextOffset === 1 && item.layout.max + offset > nextItemCenter || nextOffset === -1 && item.layout.min + offset < nextItemCenter ? moveItem(order3, index3, index3 + nextOffset) : order3;
    }
    function ReorderGroup(_a2, externalRef) {
      var children = _a2.children, _b = _a2.as, as = _b === void 0 ? "ul" : _b, _c = _a2.axis, axis = _c === void 0 ? "y" : _c, onReorder = _a2.onReorder, values = _a2.values, props = tslib.__rest(_a2, ["children", "as", "axis", "onReorder", "values"]), Component2 = useConstant(function() {
        return motion(as);
      }), order3 = [], isReordering = React26.useRef(!1);
      heyListen.invariant(Boolean(values), "Reorder.Group must be provided a values prop");
      var context = {
        axis,
        registerItem: function(value, layout) {
          layout && order3.findIndex(function(entry2) {
            return value === entry2.value;
          }) === -1 && (order3.push({ value, layout: layout[axis] }), order3.sort(compareMin));
        },
        updateOrder: function(id2, offset, velocity) {
          if (!isReordering.current) {
            var newOrder = checkReorder(order3, id2, offset, velocity);
            order3 !== newOrder && (isReordering.current = !0, onReorder(newOrder.map(getValue).filter(function(value) {
              return values.indexOf(value) !== -1;
            })));
          }
        }
      };
      return React26.useEffect(function() {
        isReordering.current = !1;
      }), React__namespace.createElement(
        Component2,
        tslib.__assign({}, props, { ref: externalRef }),
        React__namespace.createElement(ReorderContext.Provider, { value: context }, children)
      );
    }
    var Group = React26.forwardRef(ReorderGroup);
    function getValue(item) {
      return item.value;
    }
    function compareMin(a13, b6) {
      return a13.layout.min - b6.layout.min;
    }
    function useMotionValue(initial) {
      var value = useConstant(function() {
        return motionValue(initial);
      }), isStatic = React26.useContext(MotionConfigContext).isStatic;
      if (isStatic) {
        var _a2 = tslib.__read(React26.useState(initial), 2), setLatest_1 = _a2[1];
        React26.useEffect(function() {
          return value.onChange(setLatest_1);
        }, []);
      }
      return value;
    }
    var isCustomValueType = function(v4) {
      return typeof v4 == "object" && v4.mix;
    }, getMixer = function(v4) {
      return isCustomValueType(v4) ? v4.mix : void 0;
    };
    function transform() {
      for (var args = [], _i = 0; _i < arguments.length; _i++)
        args[_i] = arguments[_i];
      var useImmediate = !Array.isArray(args[0]), argOffset = useImmediate ? 0 : -1, inputValue = args[0 + argOffset], inputRange = args[1 + argOffset], outputRange = args[2 + argOffset], options = args[3 + argOffset], interpolator = popmotion.interpolate(inputRange, outputRange, tslib.__assign({ mixer: getMixer(outputRange[0]) }, options));
      return useImmediate ? interpolator(inputValue) : interpolator;
    }
    function useOnChange(value, callback) {
      useIsomorphicLayoutEffect2(function() {
        if (isMotionValue(value))
          return value.onChange(callback);
      }, [callback]);
    }
    function useMultiOnChange(values, handler) {
      useIsomorphicLayoutEffect2(function() {
        var subscriptions = values.map(function(value) {
          return value.onChange(handler);
        });
        return function() {
          return subscriptions.forEach(function(unsubscribe) {
            return unsubscribe();
          });
        };
      });
    }
    function useCombineMotionValues(values, combineValues) {
      var value = useMotionValue(combineValues()), updateValue = function() {
        return value.set(combineValues());
      };
      return updateValue(), useMultiOnChange(values, function() {
        return sync__default.default.update(updateValue, !1, !0);
      }), value;
    }
    function useTransform(input, inputRangeOrTransformer, outputRange, options) {
      var transformer = typeof inputRangeOrTransformer == "function" ? inputRangeOrTransformer : transform(inputRangeOrTransformer, outputRange, options);
      return Array.isArray(input) ? useListTransform(input, transformer) : useListTransform([input], function(_a2) {
        var _b = tslib.__read(_a2, 1), latest = _b[0];
        return transformer(latest);
      });
    }
    function useListTransform(values, transformer) {
      var latest = useConstant(function() {
        return [];
      });
      return useCombineMotionValues(values, function() {
        latest.length = 0;
        for (var numValues = values.length, i7 = 0; i7 < numValues; i7++)
          latest[i7] = values[i7].get();
        return transformer(latest);
      });
    }
    function useDefaultMotionValue(value, defaultValue) {
      return defaultValue === void 0 && (defaultValue = 0), isMotionValue(value) ? value : useMotionValue(defaultValue);
    }
    function ReorderItem(_a2, externalRef) {
      var children = _a2.children, style2 = _a2.style, value = _a2.value, _b = _a2.as, as = _b === void 0 ? "li" : _b, onDrag = _a2.onDrag, _c = _a2.layout, layout = _c === void 0 ? !0 : _c, props = tslib.__rest(_a2, ["children", "style", "value", "as", "onDrag", "layout"]), Component2 = useConstant(function() {
        return motion(as);
      }), context = React26.useContext(ReorderContext), point2 = {
        x: useDefaultMotionValue(style2 == null ? void 0 : style2.x),
        y: useDefaultMotionValue(style2 == null ? void 0 : style2.y)
      }, zIndex = useTransform([point2.x, point2.y], function(_a3) {
        var _b2 = tslib.__read(_a3, 2), latestX = _b2[0], latestY = _b2[1];
        return latestX || latestY ? 1 : "unset";
      }), measuredLayout = React26.useRef(null);
      heyListen.invariant(Boolean(context), "Reorder.Item must be a child of Reorder.Group");
      var _d = context, axis = _d.axis, registerItem = _d.registerItem, updateOrder = _d.updateOrder;
      return React26.useEffect(function() {
        registerItem(value, measuredLayout.current);
      }, [context]), React__namespace.createElement(Component2, tslib.__assign({ drag: axis }, props, { dragSnapToOrigin: !0, style: tslib.__assign(tslib.__assign({}, style2), { x: point2.x, y: point2.y, zIndex }), layout, onDrag: function(event, gesturePoint) {
        var velocity = gesturePoint.velocity;
        velocity[axis] && updateOrder(value, point2[axis].get(), velocity[axis]), onDrag == null || onDrag(event, gesturePoint);
      }, onLayoutMeasure: function(measured) {
        measuredLayout.current = measured;
      }, ref: externalRef }), children);
    }
    var Item = React26.forwardRef(ReorderItem), Reorder = {
      Group,
      Item
    }, domAnimation = tslib.__assign(tslib.__assign({ renderer: createDomVisualElement }, animations), gestureAnimations), domMax = tslib.__assign(tslib.__assign(tslib.__assign(tslib.__assign({}, domAnimation), drag), layoutFeatures), { projectionNodeConstructor: HTMLProjectionNode });
    function useMotionTemplate(fragments) {
      for (var values = [], _i = 1; _i < arguments.length; _i++)
        values[_i - 1] = arguments[_i];
      var numFragments = fragments.length;
      function buildValue() {
        for (var output = "", i7 = 0; i7 < numFragments; i7++) {
          output += fragments[i7];
          var value = values[i7];
          value && (output += values[i7].get());
        }
        return output;
      }
      return useCombineMotionValues(values, buildValue);
    }
    function useSpring(source, config) {
      config === void 0 && (config = {});
      var isStatic = React26.useContext(MotionConfigContext).isStatic, activeSpringAnimation = React26.useRef(null), value = useMotionValue(isMotionValue(source) ? source.get() : source);
      return React26.useMemo(function() {
        return value.attach(function(v4, set) {
          return isStatic ? set(v4) : (activeSpringAnimation.current && activeSpringAnimation.current.stop(), activeSpringAnimation.current = popmotion.animate(tslib.__assign(tslib.__assign({ from: value.get(), to: v4, velocity: value.getVelocity() }, config), { onUpdate: set })), value.get());
        });
      }, [JSON.stringify(config)]), useOnChange(source, function(v4) {
        return value.set(parseFloat(v4));
      }), value;
    }
    function useVelocity(value) {
      var velocity = useMotionValue(value.getVelocity());
      return React26.useEffect(function() {
        return value.velocityUpdateSubscribers.add(function(newVelocity) {
          velocity.set(newVelocity);
        });
      }, [value]), velocity;
    }
    var createScrollMotionValues = function() {
      return {
        scrollX: motionValue(0),
        scrollY: motionValue(0),
        scrollXProgress: motionValue(0),
        scrollYProgress: motionValue(0)
      };
    };
    function useScroll(_a2) {
      _a2 === void 0 && (_a2 = {});
      var container = _a2.container, target = _a2.target, options = tslib.__rest(_a2, ["container", "target"]), values = useConstant(createScrollMotionValues);
      return useIsomorphicLayoutEffect2(function() {
        return dom.scroll(function(_a3) {
          var x5 = _a3.x, y6 = _a3.y;
          values.scrollX.set(x5.current), values.scrollXProgress.set(x5.progress), values.scrollY.set(y6.current), values.scrollYProgress.set(y6.progress);
        }, tslib.__assign(tslib.__assign({}, options), { container: (container == null ? void 0 : container.current) || void 0, target: (target == null ? void 0 : target.current) || void 0 }));
      }, []), values;
    }
    function useElementScroll(ref) {
      return warnOnce4(!1, "useElementScroll is deprecated. Convert to useScroll({ container: ref })."), useScroll({ container: ref });
    }
    function useViewportScroll() {
      return warnOnce4(!1, "useViewportScroll is deprecated. Convert to useScroll()."), useScroll();
    }
    var getCurrentTime = typeof performance < "u" ? function() {
      return performance.now();
    } : function() {
      return Date.now();
    };
    function useAnimationFrame(callback) {
      var initialTimestamp = useConstant(getCurrentTime), isStatic = React26.useContext(MotionConfigContext).isStatic;
      React26.useEffect(function() {
        if (!isStatic) {
          var provideTimeSinceStart = function(_a2) {
            var timestamp = _a2.timestamp;
            callback(timestamp - initialTimestamp);
          };
          return sync__default.default.update(provideTimeSinceStart, !0), function() {
            return sync.cancelSync.update(provideTimeSinceStart);
          };
        }
      }, [callback]);
    }
    function useTime() {
      var time2 = useMotionValue(0);
      return useAnimationFrame(function(t18) {
        return time2.set(t18);
      }), time2;
    }
    function animationControls() {
      var hasMounted = !1, pendingAnimations = [], subscribers = /* @__PURE__ */ new Set(), controls2 = {
        subscribe: function(visualElement2) {
          return subscribers.add(visualElement2), function() {
            return void subscribers.delete(visualElement2);
          };
        },
        start: function(definition, transitionOverride) {
          if (hasMounted) {
            var animations_1 = [];
            return subscribers.forEach(function(visualElement2) {
              animations_1.push(animateVisualElement(visualElement2, definition, {
                transitionOverride
              }));
            }), Promise.all(animations_1);
          } else
            return new Promise(function(resolve) {
              pendingAnimations.push({
                animation: [definition, transitionOverride],
                resolve
              });
            });
        },
        set: function(definition) {
          return heyListen.invariant(hasMounted, "controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook."), subscribers.forEach(function(visualElement2) {
            setValues(visualElement2, definition);
          });
        },
        stop: function() {
          subscribers.forEach(function(visualElement2) {
            stopAnimation2(visualElement2);
          });
        },
        mount: function() {
          return hasMounted = !0, pendingAnimations.forEach(function(_a2) {
            var animation = _a2.animation, resolve = _a2.resolve;
            controls2.start.apply(controls2, tslib.__spreadArray([], tslib.__read(animation), !1)).then(resolve);
          }), function() {
            hasMounted = !1, controls2.stop();
          };
        }
      };
      return controls2;
    }
    function useAnimationControls() {
      var controls2 = useConstant(animationControls);
      return React26.useEffect(controls2.mount, []), controls2;
    }
    var useAnimation = useAnimationControls;
    function useCycle() {
      for (var items = [], _i = 0; _i < arguments.length; _i++)
        items[_i] = arguments[_i];
      var index3 = React26.useRef(0), _a2 = tslib.__read(React26.useState(items[index3.current]), 2), item = _a2[0], setItem2 = _a2[1], runCycle = React26.useCallback(function(next) {
        index3.current = typeof next != "number" ? popmotion.wrap(0, items.length, index3.current + 1) : next, setItem2(items[index3.current]);
      }, tslib.__spreadArray([items.length], tslib.__read(items), !1));
      return [item, runCycle];
    }
    function useInView(ref, _a2) {
      var _b = _a2 === void 0 ? {} : _a2, root = _b.root, margin = _b.margin, amount = _b.amount, _c = _b.once, once = _c === void 0 ? !1 : _c, _d = tslib.__read(React26.useState(!1), 2), isInView = _d[0], setInView = _d[1];
      return React26.useEffect(function() {
        var _a3;
        if (!(!ref.current || once && isInView)) {
          var onEnter = function() {
            return setInView(!0), once ? void 0 : function() {
              return setInView(!1);
            };
          }, options = {
            root: (_a3 = root == null ? void 0 : root.current) !== null && _a3 !== void 0 ? _a3 : void 0,
            margin,
            amount: amount === "some" ? "any" : amount
          };
          return dom.inView(ref.current, onEnter, options);
        }
      }, [root, ref, margin, once]), isInView;
    }
    var DragControls = (
      /** @class */
      function() {
        function DragControls2() {
          this.componentControls = /* @__PURE__ */ new Set();
        }
        return DragControls2.prototype.subscribe = function(controls2) {
          var _this = this;
          return this.componentControls.add(controls2), function() {
            return _this.componentControls.delete(controls2);
          };
        }, DragControls2.prototype.start = function(event, options) {
          this.componentControls.forEach(function(controls2) {
            controls2.start(event.nativeEvent || event, options);
          });
        }, DragControls2;
      }()
    ), createDragControls = function() {
      return new DragControls();
    };
    function useDragControls() {
      return useConstant(createDragControls);
    }
    function useInstantLayoutTransition() {
      return startTransition;
    }
    function startTransition(cb) {
      rootProjectionNode.current && (rootProjectionNode.current.isUpdating = !1, rootProjectionNode.current.blockUpdate(), cb == null || cb());
    }
    function useInstantTransition() {
      var _a2 = tslib.__read(useForceUpdate(), 2), forceUpdate = _a2[0], forcedRenderCount = _a2[1], startInstantLayoutTransition = useInstantLayoutTransition();
      return React26.useEffect(function() {
        sync__default.default.postRender(function() {
          return sync__default.default.postRender(function() {
            return instantAnimationState.current = !1;
          });
        });
      }, [forcedRenderCount]), function(callback) {
        startInstantLayoutTransition(function() {
          instantAnimationState.current = !0, forceUpdate(), callback();
        });
      };
    }
    function useResetProjection() {
      var reset = React__namespace.useCallback(function() {
        var root = rootProjectionNode.current;
        root && root.resetTree();
      }, []);
      return reset;
    }
    var createObject = function() {
      return {};
    }, stateVisualElement = visualElement({
      build: function() {
      },
      measureViewportBox: createBox,
      resetTransform: function() {
      },
      restoreTransform: function() {
      },
      removeValueFromRenderState: function() {
      },
      render: function() {
      },
      scrapeMotionValuesFromProps: createObject,
      readValueFromInstance: function(_state, key, options) {
        return options.initialState[key] || 0;
      },
      makeTargetAnimatable: function(element, _a2) {
        var transition = _a2.transition, transitionEnd = _a2.transitionEnd, target = tslib.__rest(_a2, ["transition", "transitionEnd"]), origin = getOrigin(target, transition || {}, element);
        return checkTargetForNewValues(element, target, origin), tslib.__assign({ transition, transitionEnd }, target);
      }
    }), useVisualState = makeUseVisualState({
      scrapeMotionValuesFromProps: createObject,
      createRenderState: createObject
    });
    function useAnimatedState(initialState) {
      var _a2 = tslib.__read(React26.useState(initialState), 2), animationState = _a2[0], setAnimationState = _a2[1], visualState = useVisualState({}, !1), element = useConstant(function() {
        return stateVisualElement({ props: {}, visualState }, { initialState });
      });
      React26.useEffect(function() {
        return element.mount({}), element.unmount;
      }, [element]), React26.useEffect(function() {
        element.setProps({
          onUpdate: function(v4) {
            setAnimationState(tslib.__assign({}, v4));
          }
        });
      }, [setAnimationState, element]);
      var startAnimation2 = useConstant(function() {
        return function(animationDefinition) {
          return animateVisualElement(element, animationDefinition);
        };
      });
      return [animationState, startAnimation2];
    }
    var maxScale = 1e5, invertScale = function(scale) {
      return scale > 1e-3 ? 1 / scale : maxScale;
    }, hasWarned = !1;
    function useInvertedScale(scale) {
      var parentScaleX = useMotionValue(1), parentScaleY = useMotionValue(1), visualElement2 = useVisualElementContext();
      heyListen.invariant(!!(scale || visualElement2), "If no scale values are provided, useInvertedScale must be used within a child of another motion component."), heyListen.warning(hasWarned, "useInvertedScale is deprecated and will be removed in 3.0. Use the layout prop instead."), hasWarned = !0, scale ? (parentScaleX = scale.scaleX || parentScaleX, parentScaleY = scale.scaleY || parentScaleY) : visualElement2 && (parentScaleX = visualElement2.getValue("scaleX", 1), parentScaleY = visualElement2.getValue("scaleY", 1));
      var scaleX = useTransform(parentScaleX, invertScale), scaleY = useTransform(parentScaleY, invertScale);
      return { scaleX, scaleY };
    }
    exports.AnimatePresence = AnimatePresence;
    exports.AnimateSharedLayout = AnimateSharedLayout;
    exports.DeprecatedLayoutGroupContext = DeprecatedLayoutGroupContext;
    exports.DragControls = DragControls;
    exports.FlatTree = FlatTree;
    exports.LayoutGroup = LayoutGroup;
    exports.LayoutGroupContext = LayoutGroupContext;
    exports.LazyMotion = LazyMotion;
    exports.MotionConfig = MotionConfig;
    exports.MotionConfigContext = MotionConfigContext;
    exports.MotionContext = MotionContext;
    exports.MotionValue = MotionValue2;
    exports.PresenceContext = PresenceContext;
    exports.Reorder = Reorder;
    exports.SwitchLayoutGroupContext = SwitchLayoutGroupContext;
    exports.addPointerEvent = addPointerEvent;
    exports.addScaleCorrector = addScaleCorrector;
    exports.animate = animate2;
    exports.animateVisualElement = animateVisualElement;
    exports.animationControls = animationControls;
    exports.animations = animations;
    exports.calcLength = calcLength;
    exports.checkTargetForNewValues = checkTargetForNewValues;
    exports.createBox = createBox;
    exports.createDomMotionComponent = createDomMotionComponent;
    exports.createMotionComponent = createMotionComponent;
    exports.domAnimation = domAnimation;
    exports.domMax = domMax;
    exports.filterProps = filterProps;
    exports.isBrowser = isBrowser3;
    exports.isDragActive = isDragActive;
    exports.isMotionValue = isMotionValue;
    exports.isValidMotionProp = isValidMotionProp;
    exports.m = m10;
    exports.makeUseVisualState = makeUseVisualState;
    exports.motion = motion;
    exports.motionValue = motionValue;
    exports.resolveMotionValue = resolveMotionValue;
    exports.transform = transform;
    exports.useAnimation = useAnimation;
    exports.useAnimationControls = useAnimationControls;
    exports.useAnimationFrame = useAnimationFrame;
    exports.useCycle = useCycle;
    exports.useDeprecatedAnimatedState = useAnimatedState;
    exports.useDeprecatedInvertedScale = useInvertedScale;
    exports.useDomEvent = useDomEvent;
    exports.useDragControls = useDragControls;
    exports.useElementScroll = useElementScroll;
    exports.useForceUpdate = useForceUpdate;
    exports.useInView = useInView;
    exports.useInstantLayoutTransition = useInstantLayoutTransition;
    exports.useInstantTransition = useInstantTransition;
    exports.useIsPresent = useIsPresent;
    exports.useIsomorphicLayoutEffect = useIsomorphicLayoutEffect2;
    exports.useMotionTemplate = useMotionTemplate;
    exports.useMotionValue = useMotionValue;
    exports.usePresence = usePresence;
    exports.useReducedMotion = useReducedMotion;
    exports.useReducedMotionConfig = useReducedMotionConfig;
    exports.useResetProjection = useResetProjection;
    exports.useScroll = useScroll;
    exports.useSpring = useSpring;
    exports.useTime = useTime;
    exports.useTransform = useTransform;
    exports.useUnmountEffect = useUnmountEffect;
    exports.useVelocity = useVelocity;
    exports.useViewportScroll = useViewportScroll;
    exports.useVisualElementContext = useVisualElementContext;
    exports.visualElement = visualElement;
    exports.wrapHandler = wrapHandler;
  }
});

// node_modules/@material-tailwind/react/components/Accordion/AccordionBody.js
var require_AccordionBody = __commonJS({
  "node_modules/@material-tailwind/react/components/Accordion/AccordionBody.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { AccordionBody: function() {
      return AccordionBody;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _framerMotion = require_cjs2(), _classnames = _interopRequireDefault(require_classnames()), _deepmerge = _interopRequireDefault(require_cjs()), _objectsToString = _interopRequireDefault(require_objectsToString()), _tailwindMerge = require_dist2(), _accordionContext = require_AccordionContext(), _theme = require_theme2(), _accordion = require_accordion2();
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var AccordionBody = _react.default.forwardRef(function(_param, ref) {
      var className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["className", "children"]), _useAccordion = (0, _accordionContext.useAccordion)(), open = _useAccordion.open, animate2 = _useAccordion.animate, accordion = (0, _theme.useTheme)().accordion, base = accordion.styles.base;
      className = className ?? "";
      var bodyClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.body)), className), heightAnimation = { unmount: { height: "0px", transition: { duration: 0.2, times: [0.4, 0, 0.2, 1] } }, mount: { height: "auto", transition: { duration: 0.2, times: [0.4, 0, 0.2, 1] } } }, mainAnimation = { unmount: { transition: { duration: 0.3, ease: "linear" } }, mount: { transition: { duration: 0.3, ease: "linear" } } }, appliedAnimation = (0, _deepmerge.default)(mainAnimation, animate2);
      return _react.default.createElement(_framerMotion.LazyMotion, { features: _framerMotion.domAnimation }, _react.default.createElement(_framerMotion.m.div, { className: "overflow-hidden", initial: "unmount", exit: "unmount", animate: open ? "mount" : "unmount", variants: heightAnimation }, _react.default.createElement(_framerMotion.m.div, _extends5({}, rest, { ref, className: bodyClasses, initial: "unmount", exit: "unmount", animate: open ? "mount" : "unmount", variants: appliedAnimation }), children)));
    });
    AccordionBody.propTypes = { className: _accordion.propTypesClassName, children: _accordion.propTypesChildren };
    AccordionBody.displayName = "MaterialTailwind.AccordionBody";
    var _default = AccordionBody;
  }
});

// node_modules/@material-tailwind/react/components/Accordion/index.js
var require_Accordion = __commonJS({
  "node_modules/@material-tailwind/react/components/Accordion/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Accordion: function() {
      return Accordion;
    }, AccordionHeader: function() {
      return _accordionHeader.AccordionHeader;
    }, AccordionBody: function() {
      return _accordionBody.AccordionBody;
    }, useAccordion: function() {
      return _accordionContext.useAccordion;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _accordionContext = require_AccordionContext(), _accordion = require_accordion2(), _accordionHeader = require_AccordionHeader(), _accordionBody = require_AccordionBody();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Accordion = _react.default.forwardRef(function(_param, ref) {
      var open = _param.open, icon = _param.icon, animate2 = _param.animate, className = _param.className, disabled = _param.disabled, children = _param.children, rest = _objectWithoutProperties(_param, ["open", "icon", "animate", "className", "disabled", "children"]), accordion = (0, _theme.useTheme)().accordion, defaultProps = accordion.defaultProps, base = accordion.styles.base;
      icon = icon ?? defaultProps.icon, animate2 = animate2 ?? defaultProps.animate, className = className ?? defaultProps.className, disabled = disabled ?? defaultProps.disabled;
      var accordionClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.container), _defineProperty2({}, (0, _objectsToString.default)(base.disabled), disabled)), className), contextValue = _react.default.useMemo(function() {
        return { open, icon, animate: animate2, disabled };
      }, [open, icon, animate2, disabled]);
      return _react.default.createElement(_accordionContext.AccordionContextProvider, { value: contextValue }, _react.default.createElement("div", _extends5({}, rest, { ref, className: accordionClasses }), children));
    });
    Accordion.propTypes = { open: _accordion.propTypesOpen, icon: _accordion.propTypesIcon, animate: _accordion.propTypesAnimate, disabled: _accordion.propTypesDisabled, className: _accordion.propTypesClassName, children: _accordion.propTypesChildren };
    Accordion.displayName = "MaterialTailwind.Accordion";
    var _default = Object.assign(Accordion, { Header: _accordionHeader.AccordionHeader, Body: _accordionBody.AccordionBody });
  }
});

// node_modules/@material-tailwind/react/utils/findMatch.js
var require_findMatch = __commonJS({
  "node_modules/@material-tailwind/react/utils/findMatch.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    Object.defineProperty(exports, "default", { enumerable: !0, get: function() {
      return _default;
    } });
    function findMatch(data2, find, defaultValue) {
      var founded = data2.findIndex(function(el) {
        return el === find;
      });
      return founded >= 0 ? find : defaultValue;
    }
    var _default = findMatch;
  }
});

// node_modules/material-ripple-effects/index.js
var require_material_ripple_effects = __commonJS({
  "node_modules/material-ripple-effects/index.js"(exports, module) {
    module.exports = class {
      constructor() {
        this.x = 0, this.y = 0, this.z = 0;
      }
      findFurthestPoint(clickPointX, elementWidth, offsetX, clickPointY, elementHeight, offsetY) {
        return this.x = clickPointX - offsetX > elementWidth / 2 ? 0 : elementWidth, this.y = clickPointY - offsetY > elementHeight / 2 ? 0 : elementHeight, this.z = Math.hypot(
          this.x - (clickPointX - offsetX),
          this.y - (clickPointY - offsetY)
        ), this.z;
      }
      appyStyles(element, color, rect, radius, event) {
        element.classList.add("ripple"), element.style.backgroundColor = color === "dark" ? "rgba(0,0,0, 0.2)" : "rgba(255,255,255, 0.3)", element.style.borderRadius = "50%", element.style.pointerEvents = "none", element.style.position = "absolute", element.style.left = event.clientX - rect.left - radius + "px", element.style.top = event.clientY - rect.top - radius + "px", element.style.width = element.style.height = radius * 2 + "px";
      }
      applyAnimation(element) {
        element.animate(
          [
            {
              transform: "scale(0)",
              opacity: 1
            },
            {
              transform: "scale(1.5)",
              opacity: 0
            }
          ],
          {
            duration: 500,
            easing: "linear"
          }
        );
      }
      create(event, color) {
        let element = event.currentTarget;
        element.style.position = "relative", element.style.overflow = "hidden";
        let rect = element.getBoundingClientRect(), radius = this.findFurthestPoint(
          event.clientX,
          element.offsetWidth,
          rect.left,
          event.clientY,
          element.offsetHeight,
          rect.top
        ), circle = document.createElement("span");
        this.appyStyles(circle, color, rect, radius, event), this.applyAnimation(circle), element.appendChild(circle), setTimeout(() => circle.remove(), 500);
      }
    };
  }
});

// node_modules/@material-tailwind/react/components/IconButton/index.js
var require_IconButton = __commonJS({
  "node_modules/@material-tailwind/react/components/IconButton/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { IconButton: function() {
      return IconButton2;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _materialRippleEffects = _interopRequireDefault(require_material_ripple_effects()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _button = require_button();
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var IconButton2 = _react.default.forwardRef(function(_param, ref) {
      var variant = _param.variant, size = _param.size, color = _param.color, ripple = _param.ripple, className = _param.className, children = _param.children, fullWidth = _param.fullWidth, rest = _objectWithoutProperties(_param, ["variant", "size", "color", "ripple", "className", "children", "fullWidth"]), iconButton = (0, _theme.useTheme)().iconButton, valid = iconButton.valid, defaultProps = iconButton.defaultProps, styles = iconButton.styles, base = styles.base, variants = styles.variants, sizes = styles.sizes;
      variant = variant ?? defaultProps.variant, size = size ?? defaultProps.size, color = color ?? defaultProps.color, ripple = ripple ?? defaultProps.ripple, className = className ?? defaultProps.className;
      var rippleEffect = ripple !== void 0 && new _materialRippleEffects.default(), buttonBase = (0, _objectsToString.default)(base), buttonVariant = (0, _objectsToString.default)(variants[(0, _findMatch.default)(valid.variants, variant, "filled")][(0, _findMatch.default)(valid.colors, color, "gray")]), buttonSize = (0, _objectsToString.default)(sizes[(0, _findMatch.default)(valid.sizes, size, "md")]), classes = (0, _tailwindMerge.twMerge)((0, _classnames.default)(buttonBase, buttonSize, buttonVariant), className);
      return _react.default.createElement("button", _extends5({}, rest, { ref, className: classes, type: rest.type || "button", onMouseDown: function(e5) {
        var onMouseDown = rest == null ? void 0 : rest.onMouseDown;
        return ripple && rippleEffect.create(e5, (variant === "filled" || variant === "gradient") && color !== "white" ? "light" : "dark"), typeof onMouseDown == "function" && onMouseDown(e5);
      } }), _react.default.createElement("span", { className: "absolute top-1/2 left-1/2 transform -translate-y-1/2 -translate-x-1/2" }, children));
    });
    IconButton2.propTypes = { variant: _propTypes.default.oneOf(_button.propTypesVariant), size: _propTypes.default.oneOf(_button.propTypesSize), color: _propTypes.default.oneOf(_button.propTypesColor), ripple: _button.propTypesRipple, className: _button.propTypesClassName, children: _button.propTypesChildren };
    IconButton2.displayName = "MaterialTailwind.IconButton";
    var _default = IconButton2;
  }
});

// node_modules/@material-tailwind/react/components/Alert/index.js
var require_Alert = __commonJS({
  "node_modules/@material-tailwind/react/components/Alert/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Alert: function() {
      return Alert;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _framerMotion = require_cjs2(), _classnames = _interopRequireDefault(require_classnames()), _deepmerge = _interopRequireDefault(require_cjs()), _tailwindMerge = require_dist2(), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _alert = require_alert(), _iconButton = _interopRequireDefault(require_IconButton());
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Alert = _react.default.forwardRef(function(_param, ref) {
      var variant = _param.variant, color = _param.color, icon = _param.icon, open = _param.open, action12 = _param.action, onClose = _param.onClose, animate2 = _param.animate, className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["variant", "color", "icon", "open", "action", "onClose", "animate", "className", "children"]), alert = (0, _theme.useTheme)().alert, defaultProps = alert.defaultProps, valid = alert.valid, styles = alert.styles, base = styles.base, variants = styles.variants;
      variant = variant ?? defaultProps.variant, color = color ?? defaultProps.color, className = className ?? defaultProps.className, animate2 = animate2 ?? defaultProps.animate, open = open ?? defaultProps.open, action12 = action12 ?? defaultProps.action, onClose = onClose ?? defaultProps.onClose;
      var alertBase = (0, _objectsToString.default)(base.alert), alertAction = (0, _objectsToString.default)(base.action), alertVariant = (0, _objectsToString.default)(variants[(0, _findMatch.default)(valid.variants, variant, "filled")][(0, _findMatch.default)(valid.colors, color, "gray")]), classes = (0, _tailwindMerge.twMerge)((0, _classnames.default)(alertBase, alertVariant), className), actionClasses = (0, _classnames.default)(alertAction), mainAnimation = { unmount: { opacity: 0 }, mount: { opacity: 1 } }, appliedAnimation = (0, _deepmerge.default)(mainAnimation, animate2), iconTemplate = _react.default.createElement("div", { className: "shrink-0" }, icon), NewAnimatePresence = _framerMotion.AnimatePresence;
      return _react.default.createElement(_framerMotion.LazyMotion, { features: _framerMotion.domAnimation }, _react.default.createElement(NewAnimatePresence, null, open && _react.default.createElement(_framerMotion.m.div, _extends5({}, rest, { ref, role: "alert", className: "".concat(classes, " flex"), initial: "unmount", exit: "unmount", animate: open ? "mount" : "unmount", variants: appliedAnimation }), icon && iconTemplate, _react.default.createElement("div", { className: "".concat(icon ? "ml-3" : "", " mr-12") }, children), onClose && !action12 && _react.default.createElement(_iconButton.default, { onClick: onClose, size: "sm", variant: "text", color: variant === "outlined" || variant === "ghost" ? color : "white", className: actionClasses }, _react.default.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 24 24", stroke: "currentColor", className: "h-6 w-6", strokeWidth: 2 }, _react.default.createElement("path", { strokeLinecap: "round", strokeLinejoin: "round", d: "M6 18L18 6M6 6l12 12" }))), action12 || null)));
    });
    Alert.propTypes = { variant: _propTypes.default.oneOf(_alert.propTypesVariant), color: _propTypes.default.oneOf(_alert.propTypesColor), icon: _alert.propTypesIcon, open: _alert.propTypesOpen, action: _alert.propTypesAction, onClose: _alert.propTypesOnClose, animate: _alert.propTypesAnimate, className: _alert.propTypesClassName, children: _alert.propTypesChildren };
    Alert.displayName = "MaterialTailwind.Alert";
    var _default = Alert;
  }
});

// node_modules/@material-tailwind/react/components/Avatar/index.js
var require_Avatar = __commonJS({
  "node_modules/@material-tailwind/react/components/Avatar/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Avatar: function() {
      return Avatar2;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _avatar = require_avatar();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Avatar2 = _react.default.forwardRef(function(_param, ref) {
      var variant = _param.variant, size = _param.size, className = _param.className, color = _param.color, withBorder = _param.withBorder, rest = _objectWithoutProperties(_param, ["variant", "size", "className", "color", "withBorder"]), avatar = (0, _theme.useTheme)().avatar, valid = avatar.valid, defaultProps = avatar.defaultProps, styles = avatar.styles, base = styles.base, variants = styles.variants, sizes = styles.sizes, borderColor = styles.borderColor;
      variant = variant ?? defaultProps.variant, size = size ?? defaultProps.size, className = className ?? defaultProps.className, withBorder = withBorder ?? defaultProps.withBorder, color = color ?? defaultProps.color;
      var avatarVariant = (0, _objectsToString.default)(variants[(0, _findMatch.default)(valid.variants, variant, "rounded")]), avatarSize = (0, _objectsToString.default)(sizes[(0, _findMatch.default)(valid.sizes, size, "md")]), avatarBorderColor = (0, _objectsToString.default)(borderColor[(0, _findMatch.default)(valid.colors, color, "gray")]), _obj, classes = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.initial), avatarVariant, avatarSize, (_obj = {}, _defineProperty2(_obj, (0, _objectsToString.default)(base.withBorder), withBorder), _defineProperty2(_obj, avatarBorderColor, withBorder), _obj)), className);
      return _react.default.createElement("img", _extends5({}, rest, { ref, className: classes }));
    });
    Avatar2.propTypes = { variant: _propTypes.default.oneOf(_avatar.propTypesVariant), size: _propTypes.default.oneOf(_avatar.propTypesSize), className: _avatar.propTypesClassName, withBorder: _avatar.propTypesWithBorder, color: _propTypes.default.oneOf(_avatar.propTypesColor) };
    Avatar2.displayName = "MaterialTailwind.Avatar";
    var _default = Avatar2;
  }
});

// node_modules/@material-tailwind/react/types/components/breadcrumbs.js
var require_breadcrumbs2 = __commonJS({
  "node_modules/@material-tailwind/react/types/components/breadcrumbs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesSeparator: function() {
      return propTypesSeparator;
    }, propTypesFullWidth: function() {
      return propTypesFullWidth;
    }, propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesChildren: function() {
      return propTypesChildren;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var propTypesSeparator = _propTypes.default.node, propTypesFullWidth = _propTypes.default.bool, propTypesClassName = _propTypes.default.string, propTypesChildren = _propTypes.default.node.isRequired;
  }
});

// node_modules/@material-tailwind/react/components/Breadcrumbs/index.js
var require_Breadcrumbs = __commonJS({
  "node_modules/@material-tailwind/react/components/Breadcrumbs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Breadcrumbs: function() {
      return Breadcrumbs;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireWildcard(require_react()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _breadcrumbs = require_breadcrumbs2();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap != "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap(), cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule)
        return obj;
      if (obj === null || typeof obj != "object" && typeof obj != "function")
        return { default: obj };
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj))
        return cache.get(obj);
      var newObj = {}, hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj)
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          desc && (desc.get || desc.set) ? Object.defineProperty(newObj, key, desc) : newObj[key] = obj[key];
        }
      return newObj.default = obj, cache && cache.set(obj, newObj), newObj;
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Breadcrumbs = (0, _react.forwardRef)(function(_param, ref) {
      var separator = _param.separator, fullWidth = _param.fullWidth, className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["separator", "fullWidth", "className", "children"]), breadcrumbs = (0, _theme.useTheme)().breadcrumbs, defaultProps = breadcrumbs.defaultProps, base = breadcrumbs.styles.base;
      separator = separator ?? defaultProps.separator, fullWidth = fullWidth ?? defaultProps.fullWidth, className = className ?? defaultProps.className;
      var breadcrumbsRootClasses = (0, _classnames.default)((0, _objectsToString.default)(base.root.initial), _defineProperty2({}, (0, _objectsToString.default)(base.root.fullWidth), fullWidth)), breadcrumbsListClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.list)), className), breadcrumbsItemClasses = (0, _classnames.default)((0, _objectsToString.default)(base.item.initial)), breadcrumbsSeparatorClasses = (0, _classnames.default)((0, _objectsToString.default)(base.separator));
      return _react.default.createElement("nav", { "aria-label": "breadcrumb", className: breadcrumbsRootClasses }, _react.default.createElement("ol", _extends5({}, rest, { ref, className: breadcrumbsListClasses }), _react.Children.map(children, function(child, index3) {
        if ((0, _react.isValidElement)(child)) {
          var _child_props;
          return _react.default.createElement("li", { className: (0, _classnames.default)(breadcrumbsItemClasses, _defineProperty2({}, (0, _objectsToString.default)(base.item.disabled), child == null || (_child_props = child.props) === null || _child_props === void 0 ? void 0 : _child_props.disabled)) }, child, index3 !== _react.Children.count(children) - 1 && _react.default.createElement("span", { className: breadcrumbsSeparatorClasses }, separator));
        }
        return null;
      })));
    });
    Breadcrumbs.propTypes = { separator: _breadcrumbs.propTypesSeparator, fullWidth: _breadcrumbs.propTypesFullWidth, className: _breadcrumbs.propTypesClassName, children: _breadcrumbs.propTypesChildren };
    Breadcrumbs.displayName = "MaterialTailwind.Breadcrumbs";
    var _default = Breadcrumbs;
  }
});

// node_modules/@material-tailwind/react/components/Button/index.js
var require_Button = __commonJS({
  "node_modules/@material-tailwind/react/components/Button/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Button: function() {
      return Button2;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _materialRippleEffects = _interopRequireDefault(require_material_ripple_effects()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _button = require_button();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Button2 = _react.default.forwardRef(function(_param, ref) {
      var variant = _param.variant, size = _param.size, color = _param.color, fullWidth = _param.fullWidth, ripple = _param.ripple, className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["variant", "size", "color", "fullWidth", "ripple", "className", "children"]), button = (0, _theme.useTheme)().button, valid = button.valid, defaultProps = button.defaultProps, styles = button.styles, base = styles.base, variants = styles.variants, sizes = styles.sizes;
      variant = variant ?? defaultProps.variant, size = size ?? defaultProps.size, color = color ?? defaultProps.color, fullWidth = fullWidth ?? defaultProps.fullWidth, ripple = ripple ?? defaultProps.ripple, className = className ?? defaultProps.className;
      var rippleEffect = ripple !== void 0 && new _materialRippleEffects.default(), buttonBase = (0, _objectsToString.default)(base.initial), buttonVariant = (0, _objectsToString.default)(variants[(0, _findMatch.default)(valid.variants, variant, "filled")][(0, _findMatch.default)(valid.colors, color, "gray")]), buttonSize = (0, _objectsToString.default)(sizes[(0, _findMatch.default)(valid.sizes, size, "md")]), classes = (0, _tailwindMerge.twMerge)((0, _classnames.default)(buttonBase, buttonSize, buttonVariant, _defineProperty2({}, (0, _objectsToString.default)(base.fullWidth), fullWidth)), className);
      return _react.default.createElement("button", _extends5({}, rest, { ref, className: classes, type: rest.type || "button", onMouseDown: function(e5) {
        var onMouseDown = rest == null ? void 0 : rest.onMouseDown;
        return ripple && rippleEffect.create(e5, (variant === "filled" || variant === "gradient") && color !== "white" ? "light" : "dark"), typeof onMouseDown == "function" && onMouseDown(e5);
      } }), children);
    });
    Button2.propTypes = { variant: _propTypes.default.oneOf(_button.propTypesVariant), size: _propTypes.default.oneOf(_button.propTypesSize), color: _propTypes.default.oneOf(_button.propTypesColor), fullWidth: _button.propTypesFullWidth, ripple: _button.propTypesRipple, className: _button.propTypesClassName, children: _button.propTypesChildren };
    Button2.displayName = "MaterialTailwind.Button";
    var _default = Button2;
  }
});

// node_modules/@material-tailwind/react/components/Card/CardHeader.js
var require_CardHeader = __commonJS({
  "node_modules/@material-tailwind/react/components/Card/CardHeader.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { CardHeader: function() {
      return CardHeader2;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _card = require_card();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var CardHeader2 = _react.default.forwardRef(function(_param, ref) {
      var variant = _param.variant, color = _param.color, shadow = _param.shadow, floated = _param.floated, className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["variant", "color", "shadow", "floated", "className", "children"]), cardHeader = (0, _theme.useTheme)().cardHeader, defaultProps = cardHeader.defaultProps, styles = cardHeader.styles, valid = cardHeader.valid, base = styles.base, variants = styles.variants;
      variant = variant ?? defaultProps.variant, color = color ?? defaultProps.color, shadow = shadow ?? defaultProps.shadow, floated = floated ?? defaultProps.floated, className = className ?? defaultProps.className;
      var cardHeaderRoot = (0, _objectsToString.default)(base.initial), cardHeaderVariant = (0, _objectsToString.default)(variants[(0, _findMatch.default)(valid.variants, variant, "filled")][(0, _findMatch.default)(valid.colors, color, "white")]), classes = (0, _tailwindMerge.twMerge)((0, _classnames.default)(cardHeaderRoot, cardHeaderVariant, _defineProperty2({}, (0, _objectsToString.default)(base.shadow), shadow), _defineProperty2({}, (0, _objectsToString.default)(base.floated), floated)), className);
      return _react.default.createElement("div", _extends5({}, rest, { ref, className: classes }), children);
    });
    CardHeader2.propTypes = { variant: _propTypes.default.oneOf(_card.propTypesVariant), color: _propTypes.default.oneOf(_card.propTypesColor), shadow: _card.propTypesShadow, floated: _card.propTypesFloated, className: _card.propTypesClassName, children: _card.propTypesChildren };
    CardHeader2.displayName = "MaterialTailwind.CardHeader";
    var _default = CardHeader2;
  }
});

// node_modules/@material-tailwind/react/components/Card/CardBody.js
var require_CardBody = __commonJS({
  "node_modules/@material-tailwind/react/components/Card/CardBody.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { CardBody: function() {
      return CardBody2;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _card = require_card();
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var CardBody2 = _react.default.forwardRef(function(_param, ref) {
      var className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["className", "children"]), cardBody = (0, _theme.useTheme)().cardBody, defaultProps = cardBody.defaultProps, base = cardBody.styles.base;
      className = className ?? defaultProps.className;
      var cardBodyClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base)), className);
      return _react.default.createElement("div", _extends5({}, rest, { ref, className: cardBodyClasses }), children);
    });
    CardBody2.propTypes = { className: _card.propTypesClassName, children: _card.propTypesChildren };
    CardBody2.displayName = "MaterialTailwind.CardBody";
    var _default = CardBody2;
  }
});

// node_modules/@material-tailwind/react/components/Card/CardFooter.js
var require_CardFooter = __commonJS({
  "node_modules/@material-tailwind/react/components/Card/CardFooter.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { CardFooter: function() {
      return CardFooter2;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _card = require_card();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var CardFooter2 = _react.default.forwardRef(function(_param, ref) {
      var divider = _param.divider, className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["divider", "className", "children"]), cardFooter = (0, _theme.useTheme)().cardFooter, defaultProps = cardFooter.defaultProps, base = cardFooter.styles.base;
      className = className ?? defaultProps.className, divider = divider ?? defaultProps.divider;
      var cardFooterClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.initial), _defineProperty2({}, (0, _objectsToString.default)(base.divider), divider)), className);
      return _react.default.createElement("div", _extends5({}, rest, { ref, className: cardFooterClasses }), children);
    });
    CardFooter2.propTypes = { divider: _card.propTypesDivider, className: _card.propTypesClassName, children: _card.propTypesChildren };
    CardFooter2.displayName = "MaterialTailwind.CardFooter";
    var _default = CardFooter2;
  }
});

// node_modules/@material-tailwind/react/components/Card/index.js
var require_Card = __commonJS({
  "node_modules/@material-tailwind/react/components/Card/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Card: function() {
      return Card4;
    }, CardHeader: function() {
      return _cardHeader.CardHeader;
    }, CardBody: function() {
      return _cardBody.CardBody;
    }, CardFooter: function() {
      return _cardFooter.CardFooter;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _cardHeader = require_CardHeader(), _cardBody = require_CardBody(), _cardFooter = require_CardFooter(), _card = require_card();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Card4 = _react.default.forwardRef(function(_param, ref) {
      var variant = _param.variant, color = _param.color, shadow = _param.shadow, className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["variant", "color", "shadow", "className", "children"]), card = (0, _theme.useTheme)().card, defaultProps = card.defaultProps, styles = card.styles, valid = card.valid, base = styles.base, variants = styles.variants;
      variant = variant ?? defaultProps.variant, color = color ?? defaultProps.color, shadow = shadow ?? defaultProps.shadow, className = className ?? defaultProps.className;
      var cardRoot = (0, _objectsToString.default)(base.initial), cardVariant = (0, _objectsToString.default)(variants[(0, _findMatch.default)(valid.variants, variant, "filled")][(0, _findMatch.default)(valid.colors, color, "white")]), classes = (0, _tailwindMerge.twMerge)((0, _classnames.default)(cardRoot, cardVariant, _defineProperty2({}, (0, _objectsToString.default)(base.shadow), shadow)), className);
      return _react.default.createElement("div", _extends5({}, rest, { ref, className: classes }), children);
    });
    Card4.propTypes = { variant: _propTypes.default.oneOf(_card.propTypesVariant), color: _propTypes.default.oneOf(_card.propTypesColor), shadow: _card.propTypesShadow, className: _card.propTypesClassName, children: _card.propTypesChildren };
    Card4.displayName = "MaterialTailwind.Card";
    var _default = Object.assign(Card4, { Header: _cardHeader.CardHeader, Body: _cardBody.CardBody, Footer: _cardFooter.CardFooter });
  }
});

// node_modules/@material-tailwind/react/components/Checkbox/index.js
var require_Checkbox = __commonJS({
  "node_modules/@material-tailwind/react/components/Checkbox/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Checkbox: function() {
      return Checkbox2;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _materialRippleEffects = _interopRequireDefault(require_material_ripple_effects()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _checkbox = require_checkbox();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Checkbox2 = _react.default.forwardRef(function(_param, ref) {
      var color = _param.color, label = _param.label, icon = _param.icon, ripple = _param.ripple, className = _param.className, disabled = _param.disabled, containerProps = _param.containerProps, labelProps = _param.labelProps, iconProps = _param.iconProps, inputRef = _param.inputRef, rest = _objectWithoutProperties(_param, ["color", "label", "icon", "ripple", "className", "disabled", "containerProps", "labelProps", "iconProps", "inputRef"]), checkbox = (0, _theme.useTheme)().checkbox, defaultProps = checkbox.defaultProps, valid = checkbox.valid, styles = checkbox.styles, base = styles.base, colors = styles.colors, checkboxId = _react.default.useId();
      color = color ?? defaultProps.color, label = label ?? defaultProps.label, icon = icon ?? defaultProps.icon, ripple = ripple ?? defaultProps.ripple, className = className ?? defaultProps.className, disabled = disabled ?? defaultProps.disabled, containerProps = containerProps ?? defaultProps.containerProps, labelProps = labelProps ?? defaultProps.labelProps, iconProps = iconProps ?? defaultProps.iconProps;
      var rippleEffect = ripple !== void 0 && new _materialRippleEffects.default(), rootClasses = (0, _classnames.default)((0, _objectsToString.default)(base.root), _defineProperty2({}, (0, _objectsToString.default)(base.disabled), disabled)), containerClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.container)), containerProps == null ? void 0 : containerProps.className), inputClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.input), (0, _objectsToString.default)(colors[(0, _findMatch.default)(valid.colors, color, "gray")])), className), labelClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.label)), labelProps == null ? void 0 : labelProps.className), iconContainerClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.icon)), iconProps == null ? void 0 : iconProps.className);
      return _react.default.createElement("div", { ref, className: rootClasses }, _react.default.createElement("label", _extends5({}, containerProps, { className: containerClasses, htmlFor: rest.id || checkboxId, onMouseDown: function(e5) {
        var onMouseDown = containerProps == null ? void 0 : containerProps.onMouseDown;
        return ripple && rippleEffect.create(e5, "dark"), typeof onMouseDown == "function" && onMouseDown(e5);
      } }), _react.default.createElement("input", _extends5({}, rest, { ref: inputRef, type: "checkbox", disabled, className: inputClasses, id: rest.id || checkboxId })), _react.default.createElement("span", { className: iconContainerClasses }, icon || _react.default.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", className: "h-3.5 w-3.5", viewBox: "0 0 20 20", fill: "currentColor", stroke: "currentColor", strokeWidth: 1 }, _react.default.createElement("path", { fillRule: "evenodd", d: "M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z", clipRule: "evenodd" })))), label && _react.default.createElement("label", _extends5({}, labelProps, { className: labelClasses, htmlFor: rest.id || checkboxId }), label));
    });
    Checkbox2.propTypes = { color: _propTypes.default.oneOf(_checkbox.propTypesColor), label: _checkbox.propTypesLabel, icon: _checkbox.propTypesIcon, ripple: _checkbox.propTypesRipple, className: _checkbox.propTypesClassName, disabled: _checkbox.propTypesDisabled, containerProps: _checkbox.propTypesObject, labelProps: _checkbox.propTypesObject };
    Checkbox2.displayName = "MaterialTailwind.Checkbox";
    var _default = Checkbox2;
  }
});

// node_modules/@material-tailwind/react/components/Chip/index.js
var require_Chip = __commonJS({
  "node_modules/@material-tailwind/react/components/Chip/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Chip: function() {
      return Chip3;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _framerMotion = require_cjs2(), _classnames = _interopRequireDefault(require_classnames()), _deepmerge = _interopRequireDefault(require_cjs()), _tailwindMerge = require_dist2(), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _chip = require_chip(), _iconButton = _interopRequireDefault(require_IconButton());
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Chip3 = _react.default.forwardRef(function(_param, ref) {
      var variant = _param.variant, size = _param.size, color = _param.color, icon = _param.icon, open = _param.open, onClose = _param.onClose, action12 = _param.action, animate2 = _param.animate, className = _param.className, value = _param.value, rest = _objectWithoutProperties(_param, ["variant", "size", "color", "icon", "open", "onClose", "action", "animate", "className", "value"]), chip = (0, _theme.useTheme)().chip, defaultProps = chip.defaultProps, valid = chip.valid, styles = chip.styles, base = styles.base, variants = styles.variants, sizes = styles.sizes;
      variant = variant ?? defaultProps.variant, size = size ?? defaultProps.size, color = color ?? defaultProps.color, className = className ?? defaultProps.className, animate2 = animate2 ?? defaultProps.animate, open = open ?? defaultProps.open, action12 = action12 ?? defaultProps.action, onClose = onClose ?? defaultProps.onClose;
      var chipBase = (0, _objectsToString.default)(base.chip), chipAction = (0, _objectsToString.default)(base.action), chipIcon = (0, _objectsToString.default)(base.icon), chipVariant = (0, _objectsToString.default)(variants[(0, _findMatch.default)(valid.variants, variant, "filled")][(0, _findMatch.default)(valid.colors, color, "gray")]), chipSize = (0, _objectsToString.default)(sizes[(0, _findMatch.default)(valid.sizes, size, "md")].chip), actionSize = (0, _objectsToString.default)(sizes[(0, _findMatch.default)(valid.sizes, size, "md")].action), iconSize = (0, _objectsToString.default)(sizes[(0, _findMatch.default)(valid.sizes, size, "md")].icon), classes = (0, _tailwindMerge.twMerge)((0, _classnames.default)(chipBase, chipVariant, chipSize), className), actionClasses = (0, _classnames.default)(chipAction, actionSize), iconClasses = (0, _classnames.default)(chipIcon, iconSize), contentClasses = (0, _classnames.default)({ "ml-4": icon && size === "sm", "ml-[18px]": icon && size === "md", "ml-5": icon && size === "lg", "mr-5": onClose }), mainAnimation = { unmount: { opacity: 0 }, mount: { opacity: 1 } }, appliedAnimation = (0, _deepmerge.default)(mainAnimation, animate2), iconTemplate = _react.default.createElement("div", { className: iconClasses }, icon), NewAnimatePresence = _framerMotion.AnimatePresence;
      return _react.default.createElement(_framerMotion.LazyMotion, { features: _framerMotion.domAnimation }, _react.default.createElement(NewAnimatePresence, null, open && _react.default.createElement(_framerMotion.m.div, _extends5({}, rest, { ref, className: classes, initial: "unmount", exit: "unmount", animate: open ? "mount" : "unmount", variants: appliedAnimation }), icon && iconTemplate, _react.default.createElement("span", { className: contentClasses }, value), onClose && !action12 && _react.default.createElement(_iconButton.default, { onClick: onClose, size: "sm", variant: "text", color: variant === "outlined" || variant === "ghost" ? color : "white", className: actionClasses }, _react.default.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", fill: "none", viewBox: "0 0 24 24", stroke: "currentColor", className: (0, _classnames.default)({ "h-3.5 w-3.5": size === "sm", "h-4 w-4": size === "md", "h-5 w-5": size === "lg" }), strokeWidth: 2 }, _react.default.createElement("path", { strokeLinecap: "round", strokeLinejoin: "round", d: "M6 18L18 6M6 6l12 12" }))), action12 || null)));
    });
    Chip3.propTypes = { variant: _propTypes.default.oneOf(_chip.propTypesVariant), size: _propTypes.default.oneOf(_chip.propTypesSize), color: _propTypes.default.oneOf(_chip.propTypesColor), icon: _chip.propTypesIcon, open: _chip.propTypesOpen, onClose: _chip.propTypesOnClose, action: _chip.propTypesAction, animate: _chip.propTypesAnimate, className: _chip.propTypesClassName, value: _chip.propTypesValue };
    Chip3.displayName = "MaterialTailwind.Chip";
    var _default = Chip3;
  }
});

// node_modules/@floating-ui/core/dist/floating-ui.core.umd.js
var require_floating_ui_core_umd = __commonJS({
  "node_modules/@floating-ui/core/dist/floating-ui.core.umd.js"(exports, module) {
    (function(global2, factory) {
      typeof exports == "object" && typeof module < "u" ? factory(exports) : typeof define == "function" && define.amd ? define(["exports"], factory) : (global2 = typeof globalThis < "u" ? globalThis : global2 || self, factory(global2.FloatingUICore = {}));
    })(exports, function(exports2) {
      "use strict";
      let sides = ["top", "right", "bottom", "left"], alignments = ["start", "end"], placements = /* @__PURE__ */ sides.reduce((acc, side) => acc.concat(side, side + "-" + alignments[0], side + "-" + alignments[1]), []), min = Math.min, max = Math.max, oppositeSideMap = {
        left: "right",
        right: "left",
        bottom: "top",
        top: "bottom"
      }, oppositeAlignmentMap = {
        start: "end",
        end: "start"
      };
      function clamp2(start, value, end) {
        return max(start, min(value, end));
      }
      function evaluate(value, param) {
        return typeof value == "function" ? value(param) : value;
      }
      function getSide(placement) {
        return placement.split("-")[0];
      }
      function getAlignment(placement) {
        return placement.split("-")[1];
      }
      function getOppositeAxis(axis) {
        return axis === "x" ? "y" : "x";
      }
      function getAxisLength(axis) {
        return axis === "y" ? "height" : "width";
      }
      function getSideAxis(placement) {
        return ["top", "bottom"].includes(getSide(placement)) ? "y" : "x";
      }
      function getAlignmentAxis(placement) {
        return getOppositeAxis(getSideAxis(placement));
      }
      function getAlignmentSides(placement, rects, rtl) {
        rtl === void 0 && (rtl = !1);
        let alignment = getAlignment(placement), alignmentAxis = getAlignmentAxis(placement), length2 = getAxisLength(alignmentAxis), mainAlignmentSide = alignmentAxis === "x" ? alignment === (rtl ? "end" : "start") ? "right" : "left" : alignment === "start" ? "bottom" : "top";
        return rects.reference[length2] > rects.floating[length2] && (mainAlignmentSide = getOppositePlacement(mainAlignmentSide)), [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];
      }
      function getExpandedPlacements(placement) {
        let oppositePlacement = getOppositePlacement(placement);
        return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
      }
      function getOppositeAlignmentPlacement(placement) {
        return placement.replace(/start|end/g, (alignment) => oppositeAlignmentMap[alignment]);
      }
      function getSideList(side, isStart, rtl) {
        let lr = ["left", "right"], rl = ["right", "left"], tb = ["top", "bottom"], bt = ["bottom", "top"];
        switch (side) {
          case "top":
          case "bottom":
            return rtl ? isStart ? rl : lr : isStart ? lr : rl;
          case "left":
          case "right":
            return isStart ? tb : bt;
          default:
            return [];
        }
      }
      function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {
        let alignment = getAlignment(placement), list2 = getSideList(getSide(placement), direction === "start", rtl);
        return alignment && (list2 = list2.map((side) => side + "-" + alignment), flipAlignment && (list2 = list2.concat(list2.map(getOppositeAlignmentPlacement)))), list2;
      }
      function getOppositePlacement(placement) {
        return placement.replace(/left|right|bottom|top/g, (side) => oppositeSideMap[side]);
      }
      function expandPaddingObject(padding) {
        return {
          top: 0,
          right: 0,
          bottom: 0,
          left: 0,
          ...padding
        };
      }
      function getPaddingObject(padding) {
        return typeof padding != "number" ? expandPaddingObject(padding) : {
          top: padding,
          right: padding,
          bottom: padding,
          left: padding
        };
      }
      function rectToClientRect(rect) {
        return {
          ...rect,
          top: rect.y,
          left: rect.x,
          right: rect.x + rect.width,
          bottom: rect.y + rect.height
        };
      }
      function computeCoordsFromPlacement(_ref, placement, rtl) {
        let {
          reference,
          floating
        } = _ref, sideAxis = getSideAxis(placement), alignmentAxis = getAlignmentAxis(placement), alignLength = getAxisLength(alignmentAxis), side = getSide(placement), isVertical = sideAxis === "y", commonX = reference.x + reference.width / 2 - floating.width / 2, commonY = reference.y + reference.height / 2 - floating.height / 2, commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2, coords;
        switch (side) {
          case "top":
            coords = {
              x: commonX,
              y: reference.y - floating.height
            };
            break;
          case "bottom":
            coords = {
              x: commonX,
              y: reference.y + reference.height
            };
            break;
          case "right":
            coords = {
              x: reference.x + reference.width,
              y: commonY
            };
            break;
          case "left":
            coords = {
              x: reference.x - floating.width,
              y: commonY
            };
            break;
          default:
            coords = {
              x: reference.x,
              y: reference.y
            };
        }
        switch (getAlignment(placement)) {
          case "start":
            coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
            break;
          case "end":
            coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
            break;
        }
        return coords;
      }
      let computePosition = async (reference, floating, config) => {
        let {
          placement = "bottom",
          strategy = "absolute",
          middleware = [],
          platform
        } = config, validMiddleware = middleware.filter(Boolean), rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating)), rects = await platform.getElementRects({
          reference,
          floating,
          strategy
        }), {
          x: x5,
          y: y6
        } = computeCoordsFromPlacement(rects, placement, rtl), statefulPlacement = placement, middlewareData = {}, resetCount = 0;
        for (let i7 = 0; i7 < validMiddleware.length; i7++) {
          let {
            name,
            fn
          } = validMiddleware[i7], {
            x: nextX,
            y: nextY,
            data: data2,
            reset
          } = await fn({
            x: x5,
            y: y6,
            initialPlacement: placement,
            placement: statefulPlacement,
            strategy,
            middlewareData,
            rects,
            platform,
            elements: {
              reference,
              floating
            }
          });
          if (x5 = nextX ?? x5, y6 = nextY ?? y6, middlewareData = {
            ...middlewareData,
            [name]: {
              ...middlewareData[name],
              ...data2
            }
          }, reset && resetCount <= 50) {
            resetCount++, typeof reset == "object" && (reset.placement && (statefulPlacement = reset.placement), reset.rects && (rects = reset.rects === !0 ? await platform.getElementRects({
              reference,
              floating,
              strategy
            }) : reset.rects), {
              x: x5,
              y: y6
            } = computeCoordsFromPlacement(rects, statefulPlacement, rtl)), i7 = -1;
            continue;
          }
        }
        return {
          x: x5,
          y: y6,
          placement: statefulPlacement,
          strategy,
          middlewareData
        };
      };
      async function detectOverflow(state, options) {
        var _await$platform$isEle;
        options === void 0 && (options = {});
        let {
          x: x5,
          y: y6,
          platform,
          rects,
          elements,
          strategy
        } = state, {
          boundary = "clippingAncestors",
          rootBoundary = "viewport",
          elementContext = "floating",
          altBoundary = !1,
          padding = 0
        } = evaluate(options, state), paddingObject = getPaddingObject(padding), element = elements[altBoundary ? elementContext === "floating" ? "reference" : "floating" : elementContext], clippingClientRect = rectToClientRect(await platform.getClippingRect({
          element: (_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) == null || _await$platform$isEle ? element : element.contextElement || await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating)),
          boundary,
          rootBoundary,
          strategy
        })), rect = elementContext === "floating" ? {
          ...rects.floating,
          x: x5,
          y: y6
        } : rects.reference, offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating)), offsetScale = await (platform.isElement == null ? void 0 : platform.isElement(offsetParent)) ? await (platform.getScale == null ? void 0 : platform.getScale(offsetParent)) || {
          x: 1,
          y: 1
        } : {
          x: 1,
          y: 1
        }, elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({
          rect,
          offsetParent,
          strategy
        }) : rect);
        return {
          top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,
          bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,
          left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,
          right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x
        };
      }
      let arrow = (options) => ({
        name: "arrow",
        options,
        async fn(state) {
          let {
            x: x5,
            y: y6,
            placement,
            rects,
            platform,
            elements,
            middlewareData
          } = state, {
            element,
            padding = 0
          } = evaluate(options, state) || {};
          if (element == null)
            return {};
          let paddingObject = getPaddingObject(padding), coords = {
            x: x5,
            y: y6
          }, axis = getAlignmentAxis(placement), length2 = getAxisLength(axis), arrowDimensions = await platform.getDimensions(element), isYAxis = axis === "y", minProp = isYAxis ? "top" : "left", maxProp = isYAxis ? "bottom" : "right", clientProp = isYAxis ? "clientHeight" : "clientWidth", endDiff = rects.reference[length2] + rects.reference[axis] - coords[axis] - rects.floating[length2], startDiff = coords[axis] - rects.reference[axis], arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element)), clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;
          (!clientSize || !await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent))) && (clientSize = elements.floating[clientProp] || rects.floating[length2]);
          let centerToReference = endDiff / 2 - startDiff / 2, largestPossiblePadding = clientSize / 2 - arrowDimensions[length2] / 2 - 1, minPadding = min(paddingObject[minProp], largestPossiblePadding), maxPadding = min(paddingObject[maxProp], largestPossiblePadding), min$1 = minPadding, max2 = clientSize - arrowDimensions[length2] - maxPadding, center = clientSize / 2 - arrowDimensions[length2] / 2 + centerToReference, offset2 = clamp2(min$1, center, max2), shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center != offset2 && rects.reference[length2] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length2] / 2 < 0, alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max2 : 0;
          return {
            [axis]: coords[axis] + alignmentOffset,
            data: {
              [axis]: offset2,
              centerOffset: center - offset2 - alignmentOffset,
              ...shouldAddOffset && {
                alignmentOffset
              }
            },
            reset: shouldAddOffset
          };
        }
      });
      function getPlacementList(alignment, autoAlignment, allowedPlacements) {
        return (alignment ? [...allowedPlacements.filter((placement) => getAlignment(placement) === alignment), ...allowedPlacements.filter((placement) => getAlignment(placement) !== alignment)] : allowedPlacements.filter((placement) => getSide(placement) === placement)).filter((placement) => alignment ? getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : !1) : !0);
      }
      let autoPlacement = function(options) {
        return options === void 0 && (options = {}), {
          name: "autoPlacement",
          options,
          async fn(state) {
            var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;
            let {
              rects,
              middlewareData,
              placement,
              platform,
              elements
            } = state, {
              crossAxis = !1,
              alignment,
              allowedPlacements = placements,
              autoAlignment = !0,
              ...detectOverflowOptions
            } = evaluate(options, state), placements$1 = alignment !== void 0 || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements, overflow = await detectOverflow(state, detectOverflowOptions), currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0, currentPlacement = placements$1[currentIndex];
            if (currentPlacement == null)
              return {};
            let alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));
            if (placement !== currentPlacement)
              return {
                reset: {
                  placement: placements$1[0]
                }
              };
            let currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]], allOverflows = [...((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || [], {
              placement: currentPlacement,
              overflows: currentOverflows
            }], nextPlacement = placements$1[currentIndex + 1];
            if (nextPlacement)
              return {
                data: {
                  index: currentIndex + 1,
                  overflows: allOverflows
                },
                reset: {
                  placement: nextPlacement
                }
              };
            let placementsSortedByMostSpace = allOverflows.map((d12) => {
              let alignment2 = getAlignment(d12.placement);
              return [d12.placement, alignment2 && crossAxis ? (
                // Check along the mainAxis and main crossAxis side.
                d12.overflows.slice(0, 2).reduce((acc, v4) => acc + v4, 0)
              ) : (
                // Check only the mainAxis.
                d12.overflows[0]
              ), d12.overflows];
            }).sort((a13, b6) => a13[1] - b6[1]), resetPlacement = ((_placementsThatFitOnE = placementsSortedByMostSpace.filter((d12) => d12[2].slice(
              0,
              // Aligned placements should not check their opposite crossAxis
              // side.
              getAlignment(d12[0]) ? 2 : 3
            ).every((v4) => v4 <= 0))[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];
            return resetPlacement !== placement ? {
              data: {
                index: currentIndex + 1,
                overflows: allOverflows
              },
              reset: {
                placement: resetPlacement
              }
            } : {};
          }
        };
      }, flip = function(options) {
        return options === void 0 && (options = {}), {
          name: "flip",
          options,
          async fn(state) {
            var _middlewareData$arrow, _middlewareData$flip;
            let {
              placement,
              middlewareData,
              rects,
              initialPlacement,
              platform,
              elements
            } = state, {
              mainAxis: checkMainAxis = !0,
              crossAxis: checkCrossAxis = !0,
              fallbackPlacements: specifiedFallbackPlacements,
              fallbackStrategy = "bestFit",
              fallbackAxisSideDirection = "none",
              flipAlignment = !0,
              ...detectOverflowOptions
            } = evaluate(options, state);
            if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset)
              return {};
            let side = getSide(placement), isBasePlacement = getSide(initialPlacement) === initialPlacement, rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)), fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));
            !specifiedFallbackPlacements && fallbackAxisSideDirection !== "none" && fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));
            let placements2 = [initialPlacement, ...fallbackPlacements], overflow = await detectOverflow(state, detectOverflowOptions), overflows = [], overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
            if (checkMainAxis && overflows.push(overflow[side]), checkCrossAxis) {
              let sides2 = getAlignmentSides(placement, rects, rtl);
              overflows.push(overflow[sides2[0]], overflow[sides2[1]]);
            }
            if (overflowsData = [...overflowsData, {
              placement,
              overflows
            }], !overflows.every((side2) => side2 <= 0)) {
              var _middlewareData$flip2, _overflowsData$filter;
              let nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1, nextPlacement = placements2[nextIndex];
              if (nextPlacement)
                return {
                  data: {
                    index: nextIndex,
                    overflows: overflowsData
                  },
                  reset: {
                    placement: nextPlacement
                  }
                };
              let resetPlacement = (_overflowsData$filter = overflowsData.filter((d12) => d12.overflows[0] <= 0).sort((a13, b6) => a13.overflows[1] - b6.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;
              if (!resetPlacement)
                switch (fallbackStrategy) {
                  case "bestFit": {
                    var _overflowsData$map$so;
                    let placement2 = (_overflowsData$map$so = overflowsData.map((d12) => [d12.placement, d12.overflows.filter((overflow2) => overflow2 > 0).reduce((acc, overflow2) => acc + overflow2, 0)]).sort((a13, b6) => a13[1] - b6[1])[0]) == null ? void 0 : _overflowsData$map$so[0];
                    placement2 && (resetPlacement = placement2);
                    break;
                  }
                  case "initialPlacement":
                    resetPlacement = initialPlacement;
                    break;
                }
              if (placement !== resetPlacement)
                return {
                  reset: {
                    placement: resetPlacement
                  }
                };
            }
            return {};
          }
        };
      };
      function getSideOffsets(overflow, rect) {
        return {
          top: overflow.top - rect.height,
          right: overflow.right - rect.width,
          bottom: overflow.bottom - rect.height,
          left: overflow.left - rect.width
        };
      }
      function isAnySideFullyClipped(overflow) {
        return sides.some((side) => overflow[side] >= 0);
      }
      let hide = function(options) {
        return options === void 0 && (options = {}), {
          name: "hide",
          options,
          async fn(state) {
            let {
              rects
            } = state, {
              strategy = "referenceHidden",
              ...detectOverflowOptions
            } = evaluate(options, state);
            switch (strategy) {
              case "referenceHidden": {
                let overflow = await detectOverflow(state, {
                  ...detectOverflowOptions,
                  elementContext: "reference"
                }), offsets = getSideOffsets(overflow, rects.reference);
                return {
                  data: {
                    referenceHiddenOffsets: offsets,
                    referenceHidden: isAnySideFullyClipped(offsets)
                  }
                };
              }
              case "escaped": {
                let overflow = await detectOverflow(state, {
                  ...detectOverflowOptions,
                  altBoundary: !0
                }), offsets = getSideOffsets(overflow, rects.floating);
                return {
                  data: {
                    escapedOffsets: offsets,
                    escaped: isAnySideFullyClipped(offsets)
                  }
                };
              }
              default:
                return {};
            }
          }
        };
      };
      function getBoundingRect(rects) {
        let minX = min(...rects.map((rect) => rect.left)), minY = min(...rects.map((rect) => rect.top)), maxX = max(...rects.map((rect) => rect.right)), maxY = max(...rects.map((rect) => rect.bottom));
        return {
          x: minX,
          y: minY,
          width: maxX - minX,
          height: maxY - minY
        };
      }
      function getRectsByLine(rects) {
        let sortedRects = rects.slice().sort((a13, b6) => a13.y - b6.y), groups = [], prevRect = null;
        for (let i7 = 0; i7 < sortedRects.length; i7++) {
          let rect = sortedRects[i7];
          !prevRect || rect.y - prevRect.y > prevRect.height / 2 ? groups.push([rect]) : groups[groups.length - 1].push(rect), prevRect = rect;
        }
        return groups.map((rect) => rectToClientRect(getBoundingRect(rect)));
      }
      let inline = function(options) {
        return options === void 0 && (options = {}), {
          name: "inline",
          options,
          async fn(state) {
            let {
              placement,
              elements,
              rects,
              platform,
              strategy
            } = state, {
              padding = 2,
              x: x5,
              y: y6
            } = evaluate(options, state), nativeClientRects = Array.from(await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference)) || []), clientRects = getRectsByLine(nativeClientRects), fallback = rectToClientRect(getBoundingRect(nativeClientRects)), paddingObject = getPaddingObject(padding);
            function getBoundingClientRect() {
              if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x5 != null && y6 != null)
                return clientRects.find((rect) => x5 > rect.left - paddingObject.left && x5 < rect.right + paddingObject.right && y6 > rect.top - paddingObject.top && y6 < rect.bottom + paddingObject.bottom) || fallback;
              if (clientRects.length >= 2) {
                if (getSideAxis(placement) === "y") {
                  let firstRect = clientRects[0], lastRect = clientRects[clientRects.length - 1], isTop = getSide(placement) === "top", top2 = firstRect.top, bottom2 = lastRect.bottom, left2 = isTop ? firstRect.left : lastRect.left, right2 = isTop ? firstRect.right : lastRect.right, width2 = right2 - left2, height2 = bottom2 - top2;
                  return {
                    top: top2,
                    bottom: bottom2,
                    left: left2,
                    right: right2,
                    width: width2,
                    height: height2,
                    x: left2,
                    y: top2
                  };
                }
                let isLeftSide = getSide(placement) === "left", maxRight = max(...clientRects.map((rect) => rect.right)), minLeft = min(...clientRects.map((rect) => rect.left)), measureRects = clientRects.filter((rect) => isLeftSide ? rect.left === minLeft : rect.right === maxRight), top = measureRects[0].top, bottom = measureRects[measureRects.length - 1].bottom, left = minLeft, right = maxRight, width = right - left, height = bottom - top;
                return {
                  top,
                  bottom,
                  left,
                  right,
                  width,
                  height,
                  x: left,
                  y: top
                };
              }
              return fallback;
            }
            let resetRects = await platform.getElementRects({
              reference: {
                getBoundingClientRect
              },
              floating: elements.floating,
              strategy
            });
            return rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height ? {
              reset: {
                rects: resetRects
              }
            } : {};
          }
        };
      };
      async function convertValueToCoords(state, options) {
        let {
          placement,
          platform,
          elements
        } = state, rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)), side = getSide(placement), alignment = getAlignment(placement), isVertical = getSideAxis(placement) === "y", mainAxisMulti = ["left", "top"].includes(side) ? -1 : 1, crossAxisMulti = rtl && isVertical ? -1 : 1, rawValue = evaluate(options, state), {
          mainAxis,
          crossAxis,
          alignmentAxis
        } = typeof rawValue == "number" ? {
          mainAxis: rawValue,
          crossAxis: 0,
          alignmentAxis: null
        } : {
          mainAxis: 0,
          crossAxis: 0,
          alignmentAxis: null,
          ...rawValue
        };
        return alignment && typeof alignmentAxis == "number" && (crossAxis = alignment === "end" ? alignmentAxis * -1 : alignmentAxis), isVertical ? {
          x: crossAxis * crossAxisMulti,
          y: mainAxis * mainAxisMulti
        } : {
          x: mainAxis * mainAxisMulti,
          y: crossAxis * crossAxisMulti
        };
      }
      let offset = function(options) {
        return options === void 0 && (options = 0), {
          name: "offset",
          options,
          async fn(state) {
            let {
              x: x5,
              y: y6
            } = state, diffCoords = await convertValueToCoords(state, options);
            return {
              x: x5 + diffCoords.x,
              y: y6 + diffCoords.y,
              data: diffCoords
            };
          }
        };
      }, shift = function(options) {
        return options === void 0 && (options = {}), {
          name: "shift",
          options,
          async fn(state) {
            let {
              x: x5,
              y: y6,
              placement
            } = state, {
              mainAxis: checkMainAxis = !0,
              crossAxis: checkCrossAxis = !1,
              limiter = {
                fn: (_ref) => {
                  let {
                    x: x6,
                    y: y7
                  } = _ref;
                  return {
                    x: x6,
                    y: y7
                  };
                }
              },
              ...detectOverflowOptions
            } = evaluate(options, state), coords = {
              x: x5,
              y: y6
            }, overflow = await detectOverflow(state, detectOverflowOptions), crossAxis = getSideAxis(getSide(placement)), mainAxis = getOppositeAxis(crossAxis), mainAxisCoord = coords[mainAxis], crossAxisCoord = coords[crossAxis];
            if (checkMainAxis) {
              let minSide = mainAxis === "y" ? "top" : "left", maxSide = mainAxis === "y" ? "bottom" : "right", min2 = mainAxisCoord + overflow[minSide], max2 = mainAxisCoord - overflow[maxSide];
              mainAxisCoord = clamp2(min2, mainAxisCoord, max2);
            }
            if (checkCrossAxis) {
              let minSide = crossAxis === "y" ? "top" : "left", maxSide = crossAxis === "y" ? "bottom" : "right", min2 = crossAxisCoord + overflow[minSide], max2 = crossAxisCoord - overflow[maxSide];
              crossAxisCoord = clamp2(min2, crossAxisCoord, max2);
            }
            let limitedCoords = limiter.fn({
              ...state,
              [mainAxis]: mainAxisCoord,
              [crossAxis]: crossAxisCoord
            });
            return {
              ...limitedCoords,
              data: {
                x: limitedCoords.x - x5,
                y: limitedCoords.y - y6
              }
            };
          }
        };
      }, limitShift = function(options) {
        return options === void 0 && (options = {}), {
          options,
          fn(state) {
            let {
              x: x5,
              y: y6,
              placement,
              rects,
              middlewareData
            } = state, {
              offset: offset2 = 0,
              mainAxis: checkMainAxis = !0,
              crossAxis: checkCrossAxis = !0
            } = evaluate(options, state), coords = {
              x: x5,
              y: y6
            }, crossAxis = getSideAxis(placement), mainAxis = getOppositeAxis(crossAxis), mainAxisCoord = coords[mainAxis], crossAxisCoord = coords[crossAxis], rawOffset = evaluate(offset2, state), computedOffset = typeof rawOffset == "number" ? {
              mainAxis: rawOffset,
              crossAxis: 0
            } : {
              mainAxis: 0,
              crossAxis: 0,
              ...rawOffset
            };
            if (checkMainAxis) {
              let len = mainAxis === "y" ? "height" : "width", limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis, limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;
              mainAxisCoord < limitMin ? mainAxisCoord = limitMin : mainAxisCoord > limitMax && (mainAxisCoord = limitMax);
            }
            if (checkCrossAxis) {
              var _middlewareData$offse, _middlewareData$offse2;
              let len = mainAxis === "y" ? "width" : "height", isOriginSide = ["top", "left"].includes(getSide(placement)), limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide && ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0) + (isOriginSide ? 0 : computedOffset.crossAxis), limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);
              crossAxisCoord < limitMin ? crossAxisCoord = limitMin : crossAxisCoord > limitMax && (crossAxisCoord = limitMax);
            }
            return {
              [mainAxis]: mainAxisCoord,
              [crossAxis]: crossAxisCoord
            };
          }
        };
      }, size = function(options) {
        return options === void 0 && (options = {}), {
          name: "size",
          options,
          async fn(state) {
            let {
              placement,
              rects,
              platform,
              elements
            } = state, {
              apply = () => {
              },
              ...detectOverflowOptions
            } = evaluate(options, state), overflow = await detectOverflow(state, detectOverflowOptions), side = getSide(placement), alignment = getAlignment(placement), isYAxis = getSideAxis(placement) === "y", {
              width,
              height
            } = rects.floating, heightSide, widthSide;
            side === "top" || side === "bottom" ? (heightSide = side, widthSide = alignment === (await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)) ? "start" : "end") ? "left" : "right") : (widthSide = side, heightSide = alignment === "end" ? "top" : "bottom");
            let overflowAvailableHeight = height - overflow[heightSide], overflowAvailableWidth = width - overflow[widthSide], noShift = !state.middlewareData.shift, availableHeight = overflowAvailableHeight, availableWidth = overflowAvailableWidth;
            if (isYAxis) {
              let maximumClippingWidth = width - overflow.left - overflow.right;
              availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;
            } else {
              let maximumClippingHeight = height - overflow.top - overflow.bottom;
              availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;
            }
            if (noShift && !alignment) {
              let xMin = max(overflow.left, 0), xMax = max(overflow.right, 0), yMin = max(overflow.top, 0), yMax = max(overflow.bottom, 0);
              isYAxis ? availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));
            }
            await apply({
              ...state,
              availableWidth,
              availableHeight
            });
            let nextDimensions = await platform.getDimensions(elements.floating);
            return width !== nextDimensions.width || height !== nextDimensions.height ? {
              reset: {
                rects: !0
              }
            } : {};
          }
        };
      };
      exports2.arrow = arrow, exports2.autoPlacement = autoPlacement, exports2.computePosition = computePosition, exports2.detectOverflow = detectOverflow, exports2.flip = flip, exports2.hide = hide, exports2.inline = inline, exports2.limitShift = limitShift, exports2.offset = offset, exports2.rectToClientRect = rectToClientRect, exports2.shift = shift, exports2.size = size;
    });
  }
});

// node_modules/@floating-ui/dom/dist/floating-ui.dom.umd.js
var require_floating_ui_dom_umd = __commonJS({
  "node_modules/@floating-ui/dom/dist/floating-ui.dom.umd.js"(exports, module) {
    (function(global2, factory) {
      typeof exports == "object" && typeof module < "u" ? factory(exports, require_floating_ui_core_umd()) : typeof define == "function" && define.amd ? define(["exports", "@floating-ui/core"], factory) : (global2 = typeof globalThis < "u" ? globalThis : global2 || self, factory(global2.FloatingUIDOM = {}, global2.FloatingUICore));
    })(exports, function(exports2, core) {
      "use strict";
      let min = Math.min, max = Math.max, round = Math.round, floor = Math.floor, createCoords = (v4) => ({
        x: v4,
        y: v4
      });
      function getNodeName(node) {
        return isNode(node) ? (node.nodeName || "").toLowerCase() : "#document";
      }
      function getWindow(node) {
        var _node$ownerDocument;
        return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
      }
      function getDocumentElement(node) {
        var _ref;
        return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;
      }
      function isNode(value) {
        return value instanceof Node || value instanceof getWindow(value).Node;
      }
      function isElement(value) {
        return value instanceof Element || value instanceof getWindow(value).Element;
      }
      function isHTMLElement(value) {
        return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;
      }
      function isShadowRoot(value) {
        return typeof ShadowRoot > "u" ? !1 : value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;
      }
      function isOverflowElement(element) {
        let {
          overflow,
          overflowX,
          overflowY,
          display
        } = getComputedStyle2(element);
        return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !["inline", "contents"].includes(display);
      }
      function isTableElement(element) {
        return ["table", "td", "th"].includes(getNodeName(element));
      }
      function isContainingBlock(element) {
        let webkit = isWebKit(), css = getComputedStyle2(element);
        return css.transform !== "none" || css.perspective !== "none" || (css.containerType ? css.containerType !== "normal" : !1) || !webkit && (css.backdropFilter ? css.backdropFilter !== "none" : !1) || !webkit && (css.filter ? css.filter !== "none" : !1) || ["transform", "perspective", "filter"].some((value) => (css.willChange || "").includes(value)) || ["paint", "layout", "strict", "content"].some((value) => (css.contain || "").includes(value));
      }
      function getContainingBlock(element) {
        let currentNode = getParentNode(element);
        for (; isHTMLElement(currentNode) && !isLastTraversableNode(currentNode); ) {
          if (isContainingBlock(currentNode))
            return currentNode;
          currentNode = getParentNode(currentNode);
        }
        return null;
      }
      function isWebKit() {
        return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none");
      }
      function isLastTraversableNode(node) {
        return ["html", "body", "#document"].includes(getNodeName(node));
      }
      function getComputedStyle2(element) {
        return getWindow(element).getComputedStyle(element);
      }
      function getNodeScroll(element) {
        return isElement(element) ? {
          scrollLeft: element.scrollLeft,
          scrollTop: element.scrollTop
        } : {
          scrollLeft: element.pageXOffset,
          scrollTop: element.pageYOffset
        };
      }
      function getParentNode(node) {
        if (getNodeName(node) === "html")
          return node;
        let result = (
          // Step into the shadow DOM of the parent of a slotted node.
          node.assignedSlot || // DOM Element detected.
          node.parentNode || // ShadowRoot detected.
          isShadowRoot(node) && node.host || // Fallback.
          getDocumentElement(node)
        );
        return isShadowRoot(result) ? result.host : result;
      }
      function getNearestOverflowAncestor(node) {
        let parentNode = getParentNode(node);
        return isLastTraversableNode(parentNode) ? node.ownerDocument ? node.ownerDocument.body : node.body : isHTMLElement(parentNode) && isOverflowElement(parentNode) ? parentNode : getNearestOverflowAncestor(parentNode);
      }
      function getOverflowAncestors(node, list2, traverseIframes) {
        var _node$ownerDocument2;
        list2 === void 0 && (list2 = []), traverseIframes === void 0 && (traverseIframes = !0);
        let scrollableAncestor = getNearestOverflowAncestor(node), isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body), win = getWindow(scrollableAncestor);
        return isBody ? list2.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []) : list2.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));
      }
      function getCssDimensions(element) {
        let css = getComputedStyle2(element), width = parseFloat(css.width) || 0, height = parseFloat(css.height) || 0, hasOffset = isHTMLElement(element), offsetWidth = hasOffset ? element.offsetWidth : width, offsetHeight = hasOffset ? element.offsetHeight : height, shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;
        return shouldFallback && (width = offsetWidth, height = offsetHeight), {
          width,
          height,
          $: shouldFallback
        };
      }
      function unwrapElement(element) {
        return isElement(element) ? element : element.contextElement;
      }
      function getScale(element) {
        let domElement = unwrapElement(element);
        if (!isHTMLElement(domElement))
          return createCoords(1);
        let rect = domElement.getBoundingClientRect(), {
          width,
          height,
          $: $4
        } = getCssDimensions(domElement), x5 = ($4 ? round(rect.width) : rect.width) / width, y6 = ($4 ? round(rect.height) : rect.height) / height;
        return (!x5 || !Number.isFinite(x5)) && (x5 = 1), (!y6 || !Number.isFinite(y6)) && (y6 = 1), {
          x: x5,
          y: y6
        };
      }
      let noOffsets = /* @__PURE__ */ createCoords(0);
      function getVisualOffsets(element) {
        let win = getWindow(element);
        return !isWebKit() || !win.visualViewport ? noOffsets : {
          x: win.visualViewport.offsetLeft,
          y: win.visualViewport.offsetTop
        };
      }
      function shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {
        return isFixed === void 0 && (isFixed = !1), !floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element) ? !1 : isFixed;
      }
      function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {
        includeScale === void 0 && (includeScale = !1), isFixedStrategy === void 0 && (isFixedStrategy = !1);
        let clientRect = element.getBoundingClientRect(), domElement = unwrapElement(element), scale = createCoords(1);
        includeScale && (offsetParent ? isElement(offsetParent) && (scale = getScale(offsetParent)) : scale = getScale(element));
        let visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0), x5 = (clientRect.left + visualOffsets.x) / scale.x, y6 = (clientRect.top + visualOffsets.y) / scale.y, width = clientRect.width / scale.x, height = clientRect.height / scale.y;
        if (domElement) {
          let win = getWindow(domElement), offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent, currentIFrame = win.frameElement;
          for (; currentIFrame && offsetParent && offsetWin !== win; ) {
            let iframeScale = getScale(currentIFrame), iframeRect = currentIFrame.getBoundingClientRect(), css = getComputedStyle2(currentIFrame), left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x, top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;
            x5 *= iframeScale.x, y6 *= iframeScale.y, width *= iframeScale.x, height *= iframeScale.y, x5 += left, y6 += top, currentIFrame = getWindow(currentIFrame).frameElement;
          }
        }
        return core.rectToClientRect({
          width,
          height,
          x: x5,
          y: y6
        });
      }
      function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
        let {
          rect,
          offsetParent,
          strategy
        } = _ref, isOffsetParentAnElement = isHTMLElement(offsetParent), documentElement = getDocumentElement(offsetParent);
        if (offsetParent === documentElement)
          return rect;
        let scroll2 = {
          scrollLeft: 0,
          scrollTop: 0
        }, scale = createCoords(1), offsets = createCoords(0);
        if ((isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== "fixed") && ((getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) && (scroll2 = getNodeScroll(offsetParent)), isHTMLElement(offsetParent))) {
          let offsetRect = getBoundingClientRect(offsetParent);
          scale = getScale(offsetParent), offsets.x = offsetRect.x + offsetParent.clientLeft, offsets.y = offsetRect.y + offsetParent.clientTop;
        }
        return {
          width: rect.width * scale.x,
          height: rect.height * scale.y,
          x: rect.x * scale.x - scroll2.scrollLeft * scale.x + offsets.x,
          y: rect.y * scale.y - scroll2.scrollTop * scale.y + offsets.y
        };
      }
      function getClientRects(element) {
        return Array.from(element.getClientRects());
      }
      function getWindowScrollBarX(element) {
        return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;
      }
      function getDocumentRect(element) {
        let html = getDocumentElement(element), scroll2 = getNodeScroll(element), body = element.ownerDocument.body, width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth), height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight), x5 = -scroll2.scrollLeft + getWindowScrollBarX(element), y6 = -scroll2.scrollTop;
        return getComputedStyle2(body).direction === "rtl" && (x5 += max(html.clientWidth, body.clientWidth) - width), {
          width,
          height,
          x: x5,
          y: y6
        };
      }
      function getViewportRect(element, strategy) {
        let win = getWindow(element), html = getDocumentElement(element), visualViewport = win.visualViewport, width = html.clientWidth, height = html.clientHeight, x5 = 0, y6 = 0;
        if (visualViewport) {
          width = visualViewport.width, height = visualViewport.height;
          let visualViewportBased = isWebKit();
          (!visualViewportBased || visualViewportBased && strategy === "fixed") && (x5 = visualViewport.offsetLeft, y6 = visualViewport.offsetTop);
        }
        return {
          width,
          height,
          x: x5,
          y: y6
        };
      }
      function getInnerBoundingClientRect(element, strategy) {
        let clientRect = getBoundingClientRect(element, !0, strategy === "fixed"), top = clientRect.top + element.clientTop, left = clientRect.left + element.clientLeft, scale = isHTMLElement(element) ? getScale(element) : createCoords(1), width = element.clientWidth * scale.x, height = element.clientHeight * scale.y, x5 = left * scale.x, y6 = top * scale.y;
        return {
          width,
          height,
          x: x5,
          y: y6
        };
      }
      function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {
        let rect;
        if (clippingAncestor === "viewport")
          rect = getViewportRect(element, strategy);
        else if (clippingAncestor === "document")
          rect = getDocumentRect(getDocumentElement(element));
        else if (isElement(clippingAncestor))
          rect = getInnerBoundingClientRect(clippingAncestor, strategy);
        else {
          let visualOffsets = getVisualOffsets(element);
          rect = {
            ...clippingAncestor,
            x: clippingAncestor.x - visualOffsets.x,
            y: clippingAncestor.y - visualOffsets.y
          };
        }
        return core.rectToClientRect(rect);
      }
      function hasFixedPositionAncestor(element, stopNode) {
        let parentNode = getParentNode(element);
        return parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode) ? !1 : getComputedStyle2(parentNode).position === "fixed" || hasFixedPositionAncestor(parentNode, stopNode);
      }
      function getClippingElementAncestors(element, cache) {
        let cachedResult = cache.get(element);
        if (cachedResult)
          return cachedResult;
        let result = getOverflowAncestors(element, [], !1).filter((el) => isElement(el) && getNodeName(el) !== "body"), currentContainingBlockComputedStyle = null, elementIsFixed = getComputedStyle2(element).position === "fixed", currentNode = elementIsFixed ? getParentNode(element) : element;
        for (; isElement(currentNode) && !isLastTraversableNode(currentNode); ) {
          let computedStyle = getComputedStyle2(currentNode), currentNodeIsContaining = isContainingBlock(currentNode);
          !currentNodeIsContaining && computedStyle.position === "fixed" && (currentContainingBlockComputedStyle = null), (elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === "static" && !!currentContainingBlockComputedStyle && ["absolute", "fixed"].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode)) ? result = result.filter((ancestor) => ancestor !== currentNode) : currentContainingBlockComputedStyle = computedStyle, currentNode = getParentNode(currentNode);
        }
        return cache.set(element, result), result;
      }
      function getClippingRect(_ref) {
        let {
          element,
          boundary,
          rootBoundary,
          strategy
        } = _ref, clippingAncestors = [...boundary === "clippingAncestors" ? getClippingElementAncestors(element, this._c) : [].concat(boundary), rootBoundary], firstClippingAncestor = clippingAncestors[0], clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {
          let rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
          return accRect.top = max(rect.top, accRect.top), accRect.right = min(rect.right, accRect.right), accRect.bottom = min(rect.bottom, accRect.bottom), accRect.left = max(rect.left, accRect.left), accRect;
        }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));
        return {
          width: clippingRect.right - clippingRect.left,
          height: clippingRect.bottom - clippingRect.top,
          x: clippingRect.left,
          y: clippingRect.top
        };
      }
      function getDimensions(element) {
        return getCssDimensions(element);
      }
      function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
        let isOffsetParentAnElement = isHTMLElement(offsetParent), documentElement = getDocumentElement(offsetParent), isFixed = strategy === "fixed", rect = getBoundingClientRect(element, !0, isFixed, offsetParent), scroll2 = {
          scrollLeft: 0,
          scrollTop: 0
        }, offsets = createCoords(0);
        if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed)
          if ((getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) && (scroll2 = getNodeScroll(offsetParent)), isOffsetParentAnElement) {
            let offsetRect = getBoundingClientRect(offsetParent, !0, isFixed, offsetParent);
            offsets.x = offsetRect.x + offsetParent.clientLeft, offsets.y = offsetRect.y + offsetParent.clientTop;
          } else
            documentElement && (offsets.x = getWindowScrollBarX(documentElement));
        return {
          x: rect.left + scroll2.scrollLeft - offsets.x,
          y: rect.top + scroll2.scrollTop - offsets.y,
          width: rect.width,
          height: rect.height
        };
      }
      function getTrueOffsetParent(element, polyfill) {
        return !isHTMLElement(element) || getComputedStyle2(element).position === "fixed" ? null : polyfill ? polyfill(element) : element.offsetParent;
      }
      function getOffsetParent(element, polyfill) {
        let window2 = getWindow(element);
        if (!isHTMLElement(element))
          return window2;
        let offsetParent = getTrueOffsetParent(element, polyfill);
        for (; offsetParent && isTableElement(offsetParent) && getComputedStyle2(offsetParent).position === "static"; )
          offsetParent = getTrueOffsetParent(offsetParent, polyfill);
        return offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle2(offsetParent).position === "static" && !isContainingBlock(offsetParent)) ? window2 : offsetParent || getContainingBlock(element) || window2;
      }
      let getElementRects = async function(_ref) {
        let {
          reference,
          floating,
          strategy
        } = _ref, getOffsetParentFn = this.getOffsetParent || getOffsetParent, getDimensionsFn = this.getDimensions;
        return {
          reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),
          floating: {
            x: 0,
            y: 0,
            ...await getDimensionsFn(floating)
          }
        };
      };
      function isRTL(element) {
        return getComputedStyle2(element).direction === "rtl";
      }
      let platform = {
        convertOffsetParentRelativeRectToViewportRelativeRect,
        getDocumentElement,
        getClippingRect,
        getOffsetParent,
        getElementRects,
        getClientRects,
        getDimensions,
        getScale,
        isElement,
        isRTL
      };
      function observeMove(element, onMove) {
        let io = null, timeoutId, root = getDocumentElement(element);
        function cleanup() {
          clearTimeout(timeoutId), io && io.disconnect(), io = null;
        }
        function refresh(skip, threshold) {
          skip === void 0 && (skip = !1), threshold === void 0 && (threshold = 1), cleanup();
          let {
            left,
            top,
            width,
            height
          } = element.getBoundingClientRect();
          if (skip || onMove(), !width || !height)
            return;
          let insetTop = floor(top), insetRight = floor(root.clientWidth - (left + width)), insetBottom = floor(root.clientHeight - (top + height)), insetLeft = floor(left), options = {
            rootMargin: -insetTop + "px " + -insetRight + "px " + -insetBottom + "px " + -insetLeft + "px",
            threshold: max(0, min(1, threshold)) || 1
          }, isFirstUpdate = !0;
          function handleObserve(entries) {
            let ratio = entries[0].intersectionRatio;
            if (ratio !== threshold) {
              if (!isFirstUpdate)
                return refresh();
              ratio ? refresh(!1, ratio) : timeoutId = setTimeout(() => {
                refresh(!1, 1e-7);
              }, 100);
            }
            isFirstUpdate = !1;
          }
          try {
            io = new IntersectionObserver(handleObserve, {
              ...options,
              // Handle <iframe>s
              root: root.ownerDocument
            });
          } catch {
            io = new IntersectionObserver(handleObserve, options);
          }
          io.observe(element);
        }
        return refresh(!0), cleanup;
      }
      function autoUpdate(reference, floating, update, options) {
        options === void 0 && (options = {});
        let {
          ancestorScroll = !0,
          ancestorResize = !0,
          elementResize = typeof ResizeObserver == "function",
          layoutShift = typeof IntersectionObserver == "function",
          animationFrame = !1
        } = options, referenceEl = unwrapElement(reference), ancestors = ancestorScroll || ancestorResize ? [...referenceEl ? getOverflowAncestors(referenceEl) : [], ...getOverflowAncestors(floating)] : [];
        ancestors.forEach((ancestor) => {
          ancestorScroll && ancestor.addEventListener("scroll", update, {
            passive: !0
          }), ancestorResize && ancestor.addEventListener("resize", update);
        });
        let cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null, reobserveFrame = -1, resizeObserver = null;
        elementResize && (resizeObserver = new ResizeObserver((_ref) => {
          let [firstEntry] = _ref;
          firstEntry && firstEntry.target === referenceEl && resizeObserver && (resizeObserver.unobserve(floating), cancelAnimationFrame(reobserveFrame), reobserveFrame = requestAnimationFrame(() => {
            resizeObserver && resizeObserver.observe(floating);
          })), update();
        }), referenceEl && !animationFrame && resizeObserver.observe(referenceEl), resizeObserver.observe(floating));
        let frameId, prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;
        animationFrame && frameLoop();
        function frameLoop() {
          let nextRefRect = getBoundingClientRect(reference);
          prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height) && update(), prevRefRect = nextRefRect, frameId = requestAnimationFrame(frameLoop);
        }
        return update(), () => {
          ancestors.forEach((ancestor) => {
            ancestorScroll && ancestor.removeEventListener("scroll", update), ancestorResize && ancestor.removeEventListener("resize", update);
          }), cleanupIo && cleanupIo(), resizeObserver && resizeObserver.disconnect(), resizeObserver = null, animationFrame && cancelAnimationFrame(frameId);
        };
      }
      let computePosition = (reference, floating, options) => {
        let cache = /* @__PURE__ */ new Map(), mergedOptions = {
          platform,
          ...options
        }, platformWithCache = {
          ...mergedOptions.platform,
          _c: cache
        };
        return core.computePosition(reference, floating, {
          ...mergedOptions,
          platform: platformWithCache
        });
      };
      Object.defineProperty(exports2, "arrow", {
        enumerable: !0,
        get: function() {
          return core.arrow;
        }
      }), Object.defineProperty(exports2, "autoPlacement", {
        enumerable: !0,
        get: function() {
          return core.autoPlacement;
        }
      }), Object.defineProperty(exports2, "detectOverflow", {
        enumerable: !0,
        get: function() {
          return core.detectOverflow;
        }
      }), Object.defineProperty(exports2, "flip", {
        enumerable: !0,
        get: function() {
          return core.flip;
        }
      }), Object.defineProperty(exports2, "hide", {
        enumerable: !0,
        get: function() {
          return core.hide;
        }
      }), Object.defineProperty(exports2, "inline", {
        enumerable: !0,
        get: function() {
          return core.inline;
        }
      }), Object.defineProperty(exports2, "limitShift", {
        enumerable: !0,
        get: function() {
          return core.limitShift;
        }
      }), Object.defineProperty(exports2, "offset", {
        enumerable: !0,
        get: function() {
          return core.offset;
        }
      }), Object.defineProperty(exports2, "shift", {
        enumerable: !0,
        get: function() {
          return core.shift;
        }
      }), Object.defineProperty(exports2, "size", {
        enumerable: !0,
        get: function() {
          return core.size;
        }
      }), exports2.autoUpdate = autoUpdate, exports2.computePosition = computePosition, exports2.getOverflowAncestors = getOverflowAncestors, exports2.platform = platform;
    });
  }
});

// node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.umd.js
var require_floating_ui_react_dom_umd = __commonJS({
  "node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.umd.js"(exports, module) {
    (function(global2, factory) {
      typeof exports == "object" && typeof module < "u" ? factory(exports, require_floating_ui_dom_umd(), require_react(), require_react_dom()) : typeof define == "function" && define.amd ? define(["exports", "@floating-ui/dom", "react", "react-dom"], factory) : (global2 = typeof globalThis < "u" ? globalThis : global2 || self, factory(global2.FloatingUIReactDOM = {}, global2.FloatingUIDOM, global2.React, global2.ReactDOM));
    })(exports, function(exports2, dom, React26, ReactDOM) {
      "use strict";
      function _interopNamespace(e5) {
        if (e5 && e5.__esModule)
          return e5;
        var n7 = /* @__PURE__ */ Object.create(null);
        return e5 && Object.keys(e5).forEach(function(k2) {
          if (k2 !== "default") {
            var d12 = Object.getOwnPropertyDescriptor(e5, k2);
            Object.defineProperty(n7, k2, d12.get ? d12 : {
              enumerable: !0,
              get: function() {
                return e5[k2];
              }
            });
          }
        }), n7.default = e5, Object.freeze(n7);
      }
      var React__namespace = /* @__PURE__ */ _interopNamespace(React26), ReactDOM__namespace = /* @__PURE__ */ _interopNamespace(ReactDOM);
      let arrow = (options) => {
        let {
          element,
          padding
        } = options;
        function isRef(value) {
          return Object.prototype.hasOwnProperty.call(value, "current");
        }
        return {
          name: "arrow",
          options,
          fn(args) {
            return isRef(element) ? element.current != null ? dom.arrow({
              element: element.current,
              padding
            }).fn(args) : {} : element ? dom.arrow({
              element,
              padding
            }).fn(args) : {};
          }
        };
      };
      var index3 = typeof document < "u" ? React26.useLayoutEffect : React26.useEffect;
      function deepEqual(a13, b6) {
        if (a13 === b6)
          return !0;
        if (typeof a13 != typeof b6)
          return !1;
        if (typeof a13 == "function" && a13.toString() === b6.toString())
          return !0;
        let length2, i7, keys2;
        if (a13 && b6 && typeof a13 == "object") {
          if (Array.isArray(a13)) {
            if (length2 = a13.length, length2 != b6.length)
              return !1;
            for (i7 = length2; i7-- !== 0; )
              if (!deepEqual(a13[i7], b6[i7]))
                return !1;
            return !0;
          }
          if (keys2 = Object.keys(a13), length2 = keys2.length, length2 !== Object.keys(b6).length)
            return !1;
          for (i7 = length2; i7-- !== 0; )
            if (!Object.prototype.hasOwnProperty.call(b6, keys2[i7]))
              return !1;
          for (i7 = length2; i7-- !== 0; ) {
            let key = keys2[i7];
            if (!(key === "_owner" && a13.$$typeof) && !deepEqual(a13[key], b6[key]))
              return !1;
          }
          return !0;
        }
        return a13 !== a13 && b6 !== b6;
      }
      function useLatestRef(value) {
        let ref = React__namespace.useRef(value);
        return index3(() => {
          ref.current = value;
        }), ref;
      }
      function useFloating(options) {
        options === void 0 && (options = {});
        let {
          placement = "bottom",
          strategy = "absolute",
          middleware = [],
          platform,
          whileElementsMounted,
          open
        } = options, [data2, setData] = React__namespace.useState({
          x: null,
          y: null,
          strategy,
          placement,
          middlewareData: {},
          isPositioned: !1
        }), [latestMiddleware, setLatestMiddleware] = React__namespace.useState(middleware);
        deepEqual(latestMiddleware, middleware) || setLatestMiddleware(middleware);
        let referenceRef = React__namespace.useRef(null), floatingRef = React__namespace.useRef(null), dataRef = React__namespace.useRef(data2), whileElementsMountedRef = useLatestRef(whileElementsMounted), platformRef = useLatestRef(platform), [reference, _setReference] = React__namespace.useState(null), [floating, _setFloating] = React__namespace.useState(null), setReference = React__namespace.useCallback((node) => {
          referenceRef.current !== node && (referenceRef.current = node, _setReference(node));
        }, []), setFloating = React__namespace.useCallback((node) => {
          floatingRef.current !== node && (floatingRef.current = node, _setFloating(node));
        }, []), update = React__namespace.useCallback(() => {
          if (!referenceRef.current || !floatingRef.current)
            return;
          let config = {
            placement,
            strategy,
            middleware: latestMiddleware
          };
          platformRef.current && (config.platform = platformRef.current), dom.computePosition(referenceRef.current, floatingRef.current, config).then((data3) => {
            let fullData = {
              ...data3,
              isPositioned: !0
            };
            isMountedRef.current && !deepEqual(dataRef.current, fullData) && (dataRef.current = fullData, ReactDOM__namespace.flushSync(() => {
              setData(fullData);
            }));
          });
        }, [latestMiddleware, placement, strategy, platformRef]);
        index3(() => {
          open === !1 && dataRef.current.isPositioned && (dataRef.current.isPositioned = !1, setData((data3) => ({
            ...data3,
            isPositioned: !1
          })));
        }, [open]);
        let isMountedRef = React__namespace.useRef(!1);
        index3(() => (isMountedRef.current = !0, () => {
          isMountedRef.current = !1;
        }), []), index3(() => {
          if (reference && floating) {
            if (whileElementsMountedRef.current)
              return whileElementsMountedRef.current(reference, floating, update);
            update();
          }
        }, [reference, floating, update, whileElementsMountedRef]);
        let refs = React__namespace.useMemo(() => ({
          reference: referenceRef,
          floating: floatingRef,
          setReference,
          setFloating
        }), [setReference, setFloating]), elements = React__namespace.useMemo(() => ({
          reference,
          floating
        }), [reference, floating]);
        return React__namespace.useMemo(() => ({
          ...data2,
          update,
          refs,
          elements,
          reference: setReference,
          floating: setFloating
        }), [data2, update, refs, elements, setReference, setFloating]);
      }
      Object.defineProperty(exports2, "autoPlacement", {
        enumerable: !0,
        get: function() {
          return dom.autoPlacement;
        }
      }), Object.defineProperty(exports2, "autoUpdate", {
        enumerable: !0,
        get: function() {
          return dom.autoUpdate;
        }
      }), Object.defineProperty(exports2, "computePosition", {
        enumerable: !0,
        get: function() {
          return dom.computePosition;
        }
      }), Object.defineProperty(exports2, "detectOverflow", {
        enumerable: !0,
        get: function() {
          return dom.detectOverflow;
        }
      }), Object.defineProperty(exports2, "flip", {
        enumerable: !0,
        get: function() {
          return dom.flip;
        }
      }), Object.defineProperty(exports2, "getOverflowAncestors", {
        enumerable: !0,
        get: function() {
          return dom.getOverflowAncestors;
        }
      }), Object.defineProperty(exports2, "hide", {
        enumerable: !0,
        get: function() {
          return dom.hide;
        }
      }), Object.defineProperty(exports2, "inline", {
        enumerable: !0,
        get: function() {
          return dom.inline;
        }
      }), Object.defineProperty(exports2, "limitShift", {
        enumerable: !0,
        get: function() {
          return dom.limitShift;
        }
      }), Object.defineProperty(exports2, "offset", {
        enumerable: !0,
        get: function() {
          return dom.offset;
        }
      }), Object.defineProperty(exports2, "platform", {
        enumerable: !0,
        get: function() {
          return dom.platform;
        }
      }), Object.defineProperty(exports2, "shift", {
        enumerable: !0,
        get: function() {
          return dom.shift;
        }
      }), Object.defineProperty(exports2, "size", {
        enumerable: !0,
        get: function() {
          return dom.size;
        }
      }), exports2.arrow = arrow, exports2.useFloating = useFloating, Object.defineProperty(exports2, "__esModule", { value: !0 });
    });
  }
});

// node_modules/@floating-ui/react/dist/floating-ui.react.umd.js
var require_floating_ui_react_umd = __commonJS({
  "node_modules/@floating-ui/react/dist/floating-ui.react.umd.js"(exports, module) {
    (function(global2, factory) {
      typeof exports == "object" && typeof module < "u" ? factory(exports, require_react(), require_react_dom(), require_floating_ui_react_dom_umd(), require_floating_ui_dom_umd()) : typeof define == "function" && define.amd ? define(["exports", "react", "react-dom", "@floating-ui/react-dom", "@floating-ui/dom"], factory) : (global2 = typeof globalThis < "u" ? globalThis : global2 || self, factory(global2.FloatingUIReactDOM = {}, global2.React, global2.ReactDOM, global2.FloatingUIReactDOM, global2.FloatingUIDOM));
    })(exports, function(exports2, React26, reactDom$1, reactDom, dom) {
      "use strict";
      function _interopNamespace(e5) {
        if (e5 && e5.__esModule)
          return e5;
        var n7 = /* @__PURE__ */ Object.create(null);
        return e5 && Object.keys(e5).forEach(function(k2) {
          if (k2 !== "default") {
            var d12 = Object.getOwnPropertyDescriptor(e5, k2);
            Object.defineProperty(n7, k2, d12.get ? d12 : {
              enumerable: !0,
              get: function() {
                return e5[k2];
              }
            });
          }
        }), n7.default = e5, Object.freeze(n7);
      }
      var React__namespace = /* @__PURE__ */ _interopNamespace(React26), index3 = typeof document < "u" ? React26.useLayoutEffect : React26.useEffect;
      let serverHandoffComplete = !1, count = 0, genId = () => "floating-ui-" + count++;
      function useFloatingId() {
        let [id, setId] = React__namespace.useState(() => serverHandoffComplete ? genId() : void 0);
        return index3(() => {
          id == null && setId(genId());
        }, []), React__namespace.useEffect(() => {
          serverHandoffComplete || (serverHandoffComplete = !0);
        }, []), id;
      }
      let useId = React__namespace[/* @__PURE__ */ "useId".toString()] || useFloatingId;
      function createPubSub() {
        let map = /* @__PURE__ */ new Map();
        return {
          emit(event, data2) {
            var _map$get;
            (_map$get = map.get(event)) == null || _map$get.forEach((handler) => handler(data2));
          },
          on(event, listener) {
            map.set(event, [...map.get(event) || [], listener]);
          },
          off(event, listener) {
            map.set(event, (map.get(event) || []).filter((l13) => l13 !== listener));
          }
        };
      }
      let FloatingNodeContext = /* @__PURE__ */ React__namespace.createContext(null), FloatingTreeContext = /* @__PURE__ */ React__namespace.createContext(null), useFloatingParentNodeId = () => {
        var _React$useContext;
        return ((_React$useContext = React__namespace.useContext(FloatingNodeContext)) == null ? void 0 : _React$useContext.id) || null;
      }, useFloatingTree = () => React__namespace.useContext(FloatingTreeContext), useFloatingNodeId = (customParentId) => {
        let id = useId(), tree = useFloatingTree(), reactParentId = useFloatingParentNodeId(), parentId = customParentId || reactParentId;
        return index3(() => {
          let node = {
            id,
            parentId
          };
          return tree == null || tree.addNode(node), () => {
            tree == null || tree.removeNode(node);
          };
        }, [tree, id, parentId]), id;
      }, FloatingNode = (_ref) => {
        let {
          children,
          id
        } = _ref, parentId = useFloatingParentNodeId();
        return /* @__PURE__ */ React__namespace.createElement(FloatingNodeContext.Provider, {
          value: React__namespace.useMemo(() => ({
            id,
            parentId
          }), [id, parentId])
        }, children);
      }, FloatingTree = (_ref2) => {
        let {
          children
        } = _ref2, nodesRef = React__namespace.useRef([]), addNode = React__namespace.useCallback((node) => {
          nodesRef.current = [...nodesRef.current, node];
        }, []), removeNode = React__namespace.useCallback((node) => {
          nodesRef.current = nodesRef.current.filter((n7) => n7 !== node);
        }, []), events = React__namespace.useState(() => createPubSub())[0];
        return /* @__PURE__ */ React__namespace.createElement(FloatingTreeContext.Provider, {
          value: React__namespace.useMemo(() => ({
            nodesRef,
            addNode,
            removeNode,
            events
          }), [nodesRef, addNode, removeNode, events])
        }, children);
      };
      function getDocument(node) {
        return (node == null ? void 0 : node.ownerDocument) || document;
      }
      function getPlatform() {
        let uaData = navigator.userAgentData;
        return uaData != null && uaData.platform ? uaData.platform : navigator.platform;
      }
      function getUserAgent() {
        let uaData = navigator.userAgentData;
        return uaData && Array.isArray(uaData.brands) ? uaData.brands.map((_ref) => {
          let {
            brand,
            version
          } = _ref;
          return brand + "/" + version;
        }).join(" ") : navigator.userAgent;
      }
      function getWindow(value) {
        return getDocument(value).defaultView || window;
      }
      function isElement(value) {
        return value ? value instanceof getWindow(value).Element : !1;
      }
      function isHTMLElement(value) {
        return value ? value instanceof getWindow(value).HTMLElement : !1;
      }
      function isShadowRoot(node) {
        if (typeof ShadowRoot > "u")
          return !1;
        let OwnElement = getWindow(node).ShadowRoot;
        return node instanceof OwnElement || node instanceof ShadowRoot;
      }
      function isVirtualClick(event) {
        if (event.mozInputSource === 0 && event.isTrusted)
          return !0;
        let androidRe = /Android/i;
        return (androidRe.test(getPlatform()) || androidRe.test(getUserAgent())) && event.pointerType ? event.type === "click" && event.buttons === 1 : event.detail === 0 && !event.pointerType;
      }
      function isVirtualPointerEvent(event) {
        return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType !== "mouse" || // iOS VoiceOver returns 0.333• for width/height.
        event.width < 1 && event.height < 1 && event.pressure === 0 && event.detail === 0;
      }
      function isSafari() {
        return /apple/i.test(navigator.vendor);
      }
      function isMac() {
        return getPlatform().toLowerCase().startsWith("mac") && !navigator.maxTouchPoints;
      }
      function isMouseLikePointerType(pointerType, strict) {
        let values = ["mouse", "pen"];
        return strict || values.push("", void 0), values.includes(pointerType);
      }
      function useLatestRef(value) {
        let ref = React26.useRef(value);
        return index3(() => {
          ref.current = value;
        }), ref;
      }
      let safePolygonIdentifier = "data-floating-ui-safe-polygon";
      function getDelay(value, prop, pointerType) {
        return pointerType && !isMouseLikePointerType(pointerType) ? 0 : typeof value == "number" ? value : value == null ? void 0 : value[prop];
      }
      let useHover = function(context, _temp) {
        let {
          enabled = !0,
          delay = 0,
          handleClose = null,
          mouseOnly = !1,
          restMs = 0,
          move = !0
        } = _temp === void 0 ? {} : _temp, {
          open,
          onOpenChange,
          dataRef,
          events,
          elements: {
            domReference,
            floating
          },
          refs
        } = context, tree = useFloatingTree(), parentId = useFloatingParentNodeId(), handleCloseRef = useLatestRef(handleClose), delayRef = useLatestRef(delay), pointerTypeRef = React__namespace.useRef(), timeoutRef = React__namespace.useRef(), handlerRef = React__namespace.useRef(), restTimeoutRef = React__namespace.useRef(), blockMouseMoveRef = React__namespace.useRef(!0), performedPointerEventsMutationRef = React__namespace.useRef(!1), unbindMouseMoveRef = React__namespace.useRef(() => {
        }), isHoverOpen = React__namespace.useCallback(() => {
          var _dataRef$current$open;
          let type = (_dataRef$current$open = dataRef.current.openEvent) == null ? void 0 : _dataRef$current$open.type;
          return (type == null ? void 0 : type.includes("mouse")) && type !== "mousedown";
        }, [dataRef]);
        React__namespace.useEffect(() => {
          if (!enabled)
            return;
          function onDismiss() {
            clearTimeout(timeoutRef.current), clearTimeout(restTimeoutRef.current), blockMouseMoveRef.current = !0;
          }
          return events.on("dismiss", onDismiss), () => {
            events.off("dismiss", onDismiss);
          };
        }, [enabled, events]), React__namespace.useEffect(() => {
          if (!enabled || !handleCloseRef.current || !open)
            return;
          function onLeave() {
            isHoverOpen() && onOpenChange(!1);
          }
          let html = getDocument(floating).documentElement;
          return html.addEventListener("mouseleave", onLeave), () => {
            html.removeEventListener("mouseleave", onLeave);
          };
        }, [floating, open, onOpenChange, enabled, handleCloseRef, dataRef, isHoverOpen]);
        let closeWithDelay = React__namespace.useCallback(function(runElseBranch) {
          runElseBranch === void 0 && (runElseBranch = !0);
          let closeDelay = getDelay(delayRef.current, "close", pointerTypeRef.current);
          closeDelay && !handlerRef.current ? (clearTimeout(timeoutRef.current), timeoutRef.current = setTimeout(() => onOpenChange(!1), closeDelay)) : runElseBranch && (clearTimeout(timeoutRef.current), onOpenChange(!1));
        }, [delayRef, onOpenChange]), cleanupMouseMoveHandler = React__namespace.useCallback(() => {
          unbindMouseMoveRef.current(), handlerRef.current = void 0;
        }, []), clearPointerEvents = React__namespace.useCallback(() => {
          if (performedPointerEventsMutationRef.current) {
            let body = getDocument(refs.floating.current).body;
            body.style.pointerEvents = "", body.removeAttribute(safePolygonIdentifier), performedPointerEventsMutationRef.current = !1;
          }
        }, [refs]);
        return React__namespace.useEffect(() => {
          if (!enabled)
            return;
          function isClickLikeOpenEvent() {
            return dataRef.current.openEvent ? ["click", "mousedown"].includes(dataRef.current.openEvent.type) : !1;
          }
          function onMouseEnter(event) {
            if (clearTimeout(timeoutRef.current), blockMouseMoveRef.current = !1, mouseOnly && !isMouseLikePointerType(pointerTypeRef.current) || restMs > 0 && getDelay(delayRef.current, "open") === 0)
              return;
            dataRef.current.openEvent = event;
            let openDelay = getDelay(delayRef.current, "open", pointerTypeRef.current);
            openDelay ? timeoutRef.current = setTimeout(() => {
              onOpenChange(!0);
            }, openDelay) : onOpenChange(!0);
          }
          function onMouseLeave(event) {
            if (isClickLikeOpenEvent())
              return;
            unbindMouseMoveRef.current();
            let doc = getDocument(floating);
            if (clearTimeout(restTimeoutRef.current), handleCloseRef.current) {
              clearTimeout(timeoutRef.current), handlerRef.current = handleCloseRef.current({
                ...context,
                tree,
                x: event.clientX,
                y: event.clientY,
                onClose() {
                  clearPointerEvents(), cleanupMouseMoveHandler(), closeWithDelay();
                }
              });
              let handler = handlerRef.current;
              doc.addEventListener("mousemove", handler), unbindMouseMoveRef.current = () => {
                doc.removeEventListener("mousemove", handler);
              };
              return;
            }
            closeWithDelay();
          }
          function onScrollMouseLeave(event) {
            isClickLikeOpenEvent() || handleCloseRef.current == null || handleCloseRef.current({
              ...context,
              tree,
              x: event.clientX,
              y: event.clientY,
              onClose() {
                cleanupMouseMoveHandler(), closeWithDelay();
              }
            })(event);
          }
          if (isElement(domReference)) {
            let ref = domReference;
            return open && ref.addEventListener("mouseleave", onScrollMouseLeave), floating == null || floating.addEventListener("mouseleave", onScrollMouseLeave), move && ref.addEventListener("mousemove", onMouseEnter, {
              once: !0
            }), ref.addEventListener("mouseenter", onMouseEnter), ref.addEventListener("mouseleave", onMouseLeave), () => {
              open && ref.removeEventListener("mouseleave", onScrollMouseLeave), floating == null || floating.removeEventListener("mouseleave", onScrollMouseLeave), move && ref.removeEventListener("mousemove", onMouseEnter), ref.removeEventListener("mouseenter", onMouseEnter), ref.removeEventListener("mouseleave", onMouseLeave);
            };
          }
        }, [domReference, floating, enabled, context, mouseOnly, restMs, move, closeWithDelay, cleanupMouseMoveHandler, clearPointerEvents, onOpenChange, open, tree, delayRef, handleCloseRef, dataRef]), index3(() => {
          var _handleCloseRef$curre;
          if (enabled && open && (_handleCloseRef$curre = handleCloseRef.current) != null && _handleCloseRef$curre.__options.blockPointerEvents && isHoverOpen()) {
            let body = getDocument(floating).body;
            if (body.setAttribute(safePolygonIdentifier, ""), body.style.pointerEvents = "none", performedPointerEventsMutationRef.current = !0, isElement(domReference) && floating) {
              var _tree$nodesRef$curren, _tree$nodesRef$curren2;
              let ref = domReference, parentFloating = tree == null || (_tree$nodesRef$curren = tree.nodesRef.current.find((node) => node.id === parentId)) == null || (_tree$nodesRef$curren2 = _tree$nodesRef$curren.context) == null ? void 0 : _tree$nodesRef$curren2.elements.floating;
              return parentFloating && (parentFloating.style.pointerEvents = ""), ref.style.pointerEvents = "auto", floating.style.pointerEvents = "auto", () => {
                ref.style.pointerEvents = "", floating.style.pointerEvents = "";
              };
            }
          }
        }, [enabled, open, parentId, floating, domReference, tree, handleCloseRef, dataRef, isHoverOpen]), index3(() => {
          open || (pointerTypeRef.current = void 0, cleanupMouseMoveHandler(), clearPointerEvents());
        }, [open, cleanupMouseMoveHandler, clearPointerEvents]), React__namespace.useEffect(() => () => {
          cleanupMouseMoveHandler(), clearTimeout(timeoutRef.current), clearTimeout(restTimeoutRef.current), clearPointerEvents();
        }, [enabled, cleanupMouseMoveHandler, clearPointerEvents]), React__namespace.useMemo(() => {
          if (!enabled)
            return {};
          function setPointerRef(event) {
            pointerTypeRef.current = event.pointerType;
          }
          return {
            reference: {
              onPointerDown: setPointerRef,
              onPointerEnter: setPointerRef,
              onMouseMove() {
                open || restMs === 0 || (clearTimeout(restTimeoutRef.current), restTimeoutRef.current = setTimeout(() => {
                  blockMouseMoveRef.current || onOpenChange(!0);
                }, restMs));
              }
            },
            floating: {
              onMouseEnter() {
                clearTimeout(timeoutRef.current);
              },
              onMouseLeave() {
                events.emit("dismiss", {
                  type: "mouseLeave",
                  data: {
                    returnFocus: !1
                  }
                }), closeWithDelay(!1);
              }
            }
          };
        }, [events, enabled, restMs, open, onOpenChange, closeWithDelay]);
      }, FloatingDelayGroupContext = /* @__PURE__ */ React__namespace.createContext({
        delay: 0,
        initialDelay: 0,
        timeoutMs: 0,
        currentId: null,
        setCurrentId: () => {
        },
        setState: () => {
        },
        isInstantPhase: !1
      }), useDelayGroupContext = () => React__namespace.useContext(FloatingDelayGroupContext), FloatingDelayGroup = (_ref) => {
        let {
          children,
          delay,
          timeoutMs = 0
        } = _ref, [state, setState] = React__namespace.useReducer((prev, next) => ({
          ...prev,
          ...next
        }), {
          delay,
          timeoutMs,
          initialDelay: delay,
          currentId: null,
          isInstantPhase: !1
        }), initialCurrentIdRef = React__namespace.useRef(null), setCurrentId = React__namespace.useCallback((currentId) => {
          setState({
            currentId
          });
        }, []);
        return index3(() => {
          state.currentId ? initialCurrentIdRef.current === null ? initialCurrentIdRef.current = state.currentId : setState({
            isInstantPhase: !0
          }) : (setState({
            isInstantPhase: !1
          }), initialCurrentIdRef.current = null);
        }, [state.currentId]), /* @__PURE__ */ React__namespace.createElement(FloatingDelayGroupContext.Provider, {
          value: React__namespace.useMemo(() => ({
            ...state,
            setState,
            setCurrentId
          }), [state, setState, setCurrentId])
        }, children);
      }, useDelayGroup = (_ref2, _ref3) => {
        let {
          open,
          onOpenChange
        } = _ref2, {
          id
        } = _ref3, {
          currentId,
          setCurrentId,
          initialDelay,
          setState,
          timeoutMs
        } = useDelayGroupContext();
        React__namespace.useEffect(() => {
          currentId && (setState({
            delay: {
              open: 1,
              close: getDelay(initialDelay, "close")
            }
          }), currentId !== id && onOpenChange(!1));
        }, [id, onOpenChange, setState, currentId, initialDelay]), React__namespace.useEffect(() => {
          function unset() {
            onOpenChange(!1), setState({
              delay: initialDelay,
              currentId: null
            });
          }
          if (!open && currentId === id)
            if (timeoutMs) {
              let timeout = window.setTimeout(unset, timeoutMs);
              return () => {
                clearTimeout(timeout);
              };
            } else
              unset();
        }, [open, setState, currentId, id, onOpenChange, initialDelay, timeoutMs]), React__namespace.useEffect(() => {
          open && setCurrentId(id);
        }, [open, setCurrentId, id]);
      };
      function _extends5() {
        return _extends5 = Object.assign || function(target) {
          for (var i7 = 1; i7 < arguments.length; i7++) {
            var source = arguments[i7];
            for (var key in source)
              Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
          }
          return target;
        }, _extends5.apply(this, arguments);
      }
      var getDefaultParent = function(originalTarget) {
        if (typeof document > "u")
          return null;
        var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;
        return sampleTarget.ownerDocument.body;
      }, counterMap = /* @__PURE__ */ new WeakMap(), uncontrolledNodes = /* @__PURE__ */ new WeakMap(), markerMap = {}, lockCount = 0, hideOthers = function(originalTarget, parentNode, markerName) {
        parentNode === void 0 && (parentNode = getDefaultParent(originalTarget)), markerName === void 0 && (markerName = "data-aria-hidden");
        var targets = Array.isArray(originalTarget) ? originalTarget : [originalTarget];
        markerMap[markerName] || (markerMap[markerName] = /* @__PURE__ */ new WeakMap());
        var markerCounter = markerMap[markerName], hiddenNodes = [], elementsToKeep = /* @__PURE__ */ new Set(), keep = function(el) {
          !el || elementsToKeep.has(el) || (elementsToKeep.add(el), keep(el.parentNode));
        };
        targets.forEach(keep);
        var deep = function(parent) {
          !parent || targets.indexOf(parent) >= 0 || Array.prototype.forEach.call(parent.children, function(node) {
            if (elementsToKeep.has(node))
              deep(node);
            else {
              var attr = node.getAttribute("aria-hidden"), alreadyHidden = attr !== null && attr !== "false", counterValue = (counterMap.get(node) || 0) + 1, markerValue = (markerCounter.get(node) || 0) + 1;
              counterMap.set(node, counterValue), markerCounter.set(node, markerValue), hiddenNodes.push(node), counterValue === 1 && alreadyHidden && uncontrolledNodes.set(node, !0), markerValue === 1 && node.setAttribute(markerName, "true"), alreadyHidden || node.setAttribute("aria-hidden", "true");
            }
          });
        };
        return deep(parentNode), elementsToKeep.clear(), lockCount++, function() {
          hiddenNodes.forEach(function(node) {
            var counterValue = counterMap.get(node) - 1, markerValue = markerCounter.get(node) - 1;
            counterMap.set(node, counterValue), markerCounter.set(node, markerValue), counterValue || (uncontrolledNodes.has(node) || node.removeAttribute("aria-hidden"), uncontrolledNodes.delete(node)), markerValue || node.removeAttribute(markerName);
          }), lockCount--, lockCount || (counterMap = /* @__PURE__ */ new WeakMap(), counterMap = /* @__PURE__ */ new WeakMap(), uncontrolledNodes = /* @__PURE__ */ new WeakMap(), markerMap = {});
        };
      };
      var candidateSelectors = ["input", "select", "textarea", "a[href]", "button", "[tabindex]:not(slot)", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])', "details>summary:first-of-type", "details"], candidateSelector = /* @__PURE__ */ candidateSelectors.join(","), NoElement = typeof Element > "u", matches = NoElement ? function() {
      } : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector, getRootNode = !NoElement && Element.prototype.getRootNode ? function(element) {
        return element.getRootNode();
      } : function(element) {
        return element.ownerDocument;
      }, getCandidates = function(el, includeContainer, filter) {
        var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));
        return includeContainer && matches.call(el, candidateSelector) && candidates.unshift(el), candidates = candidates.filter(filter), candidates;
      }, getCandidatesIteratively = function getCandidatesIteratively2(elements, includeContainer, options) {
        for (var candidates = [], elementsToCheck = Array.from(elements); elementsToCheck.length; ) {
          var element = elementsToCheck.shift();
          if (element.tagName === "SLOT") {
            var assigned = element.assignedElements(), content = assigned.length ? assigned : element.children, nestedCandidates = getCandidatesIteratively2(content, !0, options);
            options.flatten ? candidates.push.apply(candidates, nestedCandidates) : candidates.push({
              scopeParent: element,
              candidates: nestedCandidates
            });
          } else {
            var validCandidate = matches.call(element, candidateSelector);
            validCandidate && options.filter(element) && (includeContainer || !elements.includes(element)) && candidates.push(element);
            var shadowRoot = element.shadowRoot || // check for an undisclosed shadow
            typeof options.getShadowRoot == "function" && options.getShadowRoot(element), validShadowRoot = !options.shadowRootFilter || options.shadowRootFilter(element);
            if (shadowRoot && validShadowRoot) {
              var _nestedCandidates = getCandidatesIteratively2(shadowRoot === !0 ? element.children : shadowRoot.children, !0, options);
              options.flatten ? candidates.push.apply(candidates, _nestedCandidates) : candidates.push({
                scopeParent: element,
                candidates: _nestedCandidates
              });
            } else
              elementsToCheck.unshift.apply(elementsToCheck, element.children);
          }
        }
        return candidates;
      }, getTabindex = function(node, isScope) {
        return node.tabIndex < 0 && (isScope || /^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) || node.isContentEditable) && isNaN(parseInt(node.getAttribute("tabindex"), 10)) ? 0 : node.tabIndex;
      }, sortOrderedTabbables = function(a13, b6) {
        return a13.tabIndex === b6.tabIndex ? a13.documentOrder - b6.documentOrder : a13.tabIndex - b6.tabIndex;
      }, isInput = function(node) {
        return node.tagName === "INPUT";
      }, isHiddenInput = function(node) {
        return isInput(node) && node.type === "hidden";
      }, isDetailsWithSummary = function(node) {
        var r9 = node.tagName === "DETAILS" && Array.prototype.slice.apply(node.children).some(function(child) {
          return child.tagName === "SUMMARY";
        });
        return r9;
      }, getCheckedRadio = function(nodes, form) {
        for (var i7 = 0; i7 < nodes.length; i7++)
          if (nodes[i7].checked && nodes[i7].form === form)
            return nodes[i7];
      }, isTabbableRadio = function(node) {
        if (!node.name)
          return !0;
        var radioScope = node.form || getRootNode(node), queryRadios = function(name) {
          return radioScope.querySelectorAll('input[type="radio"][name="' + name + '"]');
        }, radioSet;
        if (typeof window < "u" && typeof window.CSS < "u" && typeof window.CSS.escape == "function")
          radioSet = queryRadios(window.CSS.escape(node.name));
        else
          try {
            radioSet = queryRadios(node.name);
          } catch (err) {
            return console.error("Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s", err.message), !1;
          }
        var checked = getCheckedRadio(radioSet, node.form);
        return !checked || checked === node;
      }, isRadio = function(node) {
        return isInput(node) && node.type === "radio";
      }, isNonTabbableRadio = function(node) {
        return isRadio(node) && !isTabbableRadio(node);
      }, isNodeAttached = function(node) {
        for (var _nodeRootHost, nodeRootHost = getRootNode(node).host, attached = !!((_nodeRootHost = nodeRootHost) !== null && _nodeRootHost !== void 0 && _nodeRootHost.ownerDocument.contains(nodeRootHost) || node.ownerDocument.contains(node)); !attached && nodeRootHost; ) {
          var _nodeRootHost2;
          nodeRootHost = getRootNode(nodeRootHost).host, attached = !!((_nodeRootHost2 = nodeRootHost) !== null && _nodeRootHost2 !== void 0 && _nodeRootHost2.ownerDocument.contains(nodeRootHost));
        }
        return attached;
      }, isZeroArea = function(node) {
        var _node$getBoundingClie = node.getBoundingClientRect(), width = _node$getBoundingClie.width, height = _node$getBoundingClie.height;
        return width === 0 && height === 0;
      }, isHidden = function(node, _ref) {
        var displayCheck = _ref.displayCheck, getShadowRoot = _ref.getShadowRoot;
        if (getComputedStyle(node).visibility === "hidden")
          return !0;
        var isDirectSummary = matches.call(node, "details>summary:first-of-type"), nodeUnderDetails = isDirectSummary ? node.parentElement : node;
        if (matches.call(nodeUnderDetails, "details:not([open]) *"))
          return !0;
        if (!displayCheck || displayCheck === "full" || displayCheck === "legacy-full") {
          if (typeof getShadowRoot == "function") {
            for (var originalNode = node; node; ) {
              var parentElement = node.parentElement, rootNode = getRootNode(node);
              if (parentElement && !parentElement.shadowRoot && getShadowRoot(parentElement) === !0)
                return isZeroArea(node);
              node.assignedSlot ? node = node.assignedSlot : !parentElement && rootNode !== node.ownerDocument ? node = rootNode.host : node = parentElement;
            }
            node = originalNode;
          }
          if (isNodeAttached(node))
            return !node.getClientRects().length;
          if (displayCheck !== "legacy-full")
            return !0;
        } else if (displayCheck === "non-zero-area")
          return isZeroArea(node);
        return !1;
      }, isDisabledFromFieldset = function(node) {
        if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName))
          for (var parentNode = node.parentElement; parentNode; ) {
            if (parentNode.tagName === "FIELDSET" && parentNode.disabled) {
              for (var i7 = 0; i7 < parentNode.children.length; i7++) {
                var child = parentNode.children.item(i7);
                if (child.tagName === "LEGEND")
                  return matches.call(parentNode, "fieldset[disabled] *") ? !0 : !child.contains(node);
              }
              return !0;
            }
            parentNode = parentNode.parentElement;
          }
        return !1;
      }, isNodeMatchingSelectorFocusable = function(options, node) {
        return !(node.disabled || isHiddenInput(node) || isHidden(node, options) || // For a details element with a summary, the summary element gets the focus
        isDetailsWithSummary(node) || isDisabledFromFieldset(node));
      }, isNodeMatchingSelectorTabbable = function(options, node) {
        return !(isNonTabbableRadio(node) || getTabindex(node) < 0 || !isNodeMatchingSelectorFocusable(options, node));
      }, isValidShadowRootTabbable = function(shadowHostNode) {
        var tabIndex = parseInt(shadowHostNode.getAttribute("tabindex"), 10);
        return !!(isNaN(tabIndex) || tabIndex >= 0);
      }, sortByOrder = function sortByOrder2(candidates) {
        var regularTabbables = [], orderedTabbables = [];
        return candidates.forEach(function(item, i7) {
          var isScope = !!item.scopeParent, element = isScope ? item.scopeParent : item, candidateTabindex = getTabindex(element, isScope), elements = isScope ? sortByOrder2(item.candidates) : element;
          candidateTabindex === 0 ? isScope ? regularTabbables.push.apply(regularTabbables, elements) : regularTabbables.push(element) : orderedTabbables.push({
            documentOrder: i7,
            tabIndex: candidateTabindex,
            item,
            isScope,
            content: elements
          });
        }), orderedTabbables.sort(sortOrderedTabbables).reduce(function(acc, sortable) {
          return sortable.isScope ? acc.push.apply(acc, sortable.content) : acc.push(sortable.content), acc;
        }, []).concat(regularTabbables);
      }, tabbable = function(el, options) {
        options = options || {};
        var candidates;
        return options.getShadowRoot ? candidates = getCandidatesIteratively([el], options.includeContainer, {
          filter: isNodeMatchingSelectorTabbable.bind(null, options),
          flatten: !1,
          getShadowRoot: options.getShadowRoot,
          shadowRootFilter: isValidShadowRootTabbable
        }) : candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options)), sortByOrder(candidates);
      };
      function activeElement$1(doc) {
        let activeElement2 = doc.activeElement;
        for (; ((_activeElement = activeElement2) == null || (_activeElement$shadow = _activeElement.shadowRoot) == null ? void 0 : _activeElement$shadow.activeElement) != null; ) {
          var _activeElement, _activeElement$shadow;
          activeElement2 = activeElement2.shadowRoot.activeElement;
        }
        return activeElement2;
      }
      function contains(parent, child) {
        if (!parent || !child)
          return !1;
        let rootNode = child.getRootNode && child.getRootNode();
        if (parent.contains(child))
          return !0;
        if (rootNode && isShadowRoot(rootNode)) {
          let next = child;
          do {
            if (next && parent === next)
              return !0;
            next = next.parentNode || next.host;
          } while (next);
        }
        return !1;
      }
      let rafId = 0;
      function enqueueFocus(el, options) {
        options === void 0 && (options = {});
        let {
          preventScroll = !1,
          cancelPrevious = !0,
          sync = !1
        } = options;
        cancelPrevious && cancelAnimationFrame(rafId);
        let exec = () => el == null ? void 0 : el.focus({
          preventScroll
        });
        sync ? exec() : rafId = requestAnimationFrame(exec);
      }
      function getAncestors(nodes, id) {
        var _nodes$find;
        let allAncestors = [], currentParentId = (_nodes$find = nodes.find((node) => node.id === id)) == null ? void 0 : _nodes$find.parentId;
        for (; currentParentId; ) {
          let currentNode = nodes.find((node) => node.id === currentParentId);
          currentParentId = currentNode == null ? void 0 : currentNode.parentId, currentNode && (allAncestors = allAncestors.concat(currentNode));
        }
        return allAncestors;
      }
      function getChildren(nodes, id) {
        let allChildren = nodes.filter((node) => {
          var _node$context;
          return node.parentId === id && ((_node$context = node.context) == null ? void 0 : _node$context.open);
        }) || [], currentChildren = allChildren;
        for (; currentChildren.length; )
          currentChildren = nodes.filter((node) => {
            var _currentChildren;
            return (_currentChildren = currentChildren) == null ? void 0 : _currentChildren.some((n7) => {
              var _node$context2;
              return node.parentId === n7.id && ((_node$context2 = node.context) == null ? void 0 : _node$context2.open);
            });
          }) || [], allChildren = allChildren.concat(currentChildren);
        return allChildren;
      }
      function getTarget(event) {
        return "composedPath" in event ? event.composedPath()[0] : event.target;
      }
      let TYPEABLE_SELECTOR = "input:not([type='hidden']):not([disabled]),[contenteditable]:not([contenteditable='false']),textarea:not([disabled])";
      function isTypeableElement(element) {
        return isHTMLElement(element) && element.matches(TYPEABLE_SELECTOR);
      }
      function stopEvent(event) {
        event.preventDefault(), event.stopPropagation();
      }
      let getTabbableOptions = () => ({
        getShadowRoot: !0,
        displayCheck: (
          // JSDOM does not support the `tabbable` library. To solve this we can
          // check if `ResizeObserver` is a real function (not polyfilled), which
          // determines if the current environment is JSDOM-like.
          typeof ResizeObserver == "function" && ResizeObserver.toString().includes("[native code]") ? "full" : "none"
        )
      });
      function getTabbableIn(container, direction) {
        let allTabbable = tabbable(container, getTabbableOptions());
        direction === "prev" && allTabbable.reverse();
        let activeIndex = allTabbable.indexOf(activeElement$1(getDocument(container)));
        return allTabbable.slice(activeIndex + 1)[0];
      }
      function getNextTabbable() {
        return getTabbableIn(document.body, "next");
      }
      function getPreviousTabbable() {
        return getTabbableIn(document.body, "prev");
      }
      function isOutsideEvent(event, container) {
        let containerElement = container || event.currentTarget, relatedTarget = event.relatedTarget;
        return !relatedTarget || !contains(containerElement, relatedTarget);
      }
      function disableFocusInside(container) {
        tabbable(container, getTabbableOptions()).forEach((element) => {
          element.dataset.tabindex = element.getAttribute("tabindex") || "", element.setAttribute("tabindex", "-1");
        });
      }
      function enableFocusInside(container) {
        container.querySelectorAll("[data-tabindex]").forEach((element) => {
          let tabindex = element.dataset.tabindex;
          delete element.dataset.tabindex, tabindex ? element.setAttribute("tabindex", tabindex) : element.removeAttribute("tabindex");
        });
      }
      let useSafeInsertionEffect = React__namespace[/* @__PURE__ */ "useInsertionEffect".toString()] || ((fn) => fn());
      function useEvent(callback) {
        let ref = React__namespace.useRef(() => {
          throw new Error("Cannot call an event handler while rendering.");
        });
        return useSafeInsertionEffect(() => {
          ref.current = callback;
        }), React__namespace.useCallback(function() {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
            args[_key] = arguments[_key];
          return ref.current == null ? void 0 : ref.current(...args);
        }, []);
      }
      let HIDDEN_STYLES = {
        border: 0,
        clip: "rect(0 0 0 0)",
        height: "1px",
        margin: "-1px",
        overflow: "hidden",
        padding: 0,
        position: "fixed",
        whiteSpace: "nowrap",
        width: "1px",
        top: 0,
        left: 0
      }, activeElement, timeoutId;
      function setActiveElementOnTab(event) {
        event.key === "Tab" && (activeElement = event.target, clearTimeout(timeoutId));
      }
      function isTabFocus(event) {
        let result = activeElement === event.relatedTarget;
        return activeElement = event.relatedTarget, clearTimeout(timeoutId), result;
      }
      let FocusGuard = /* @__PURE__ */ React__namespace.forwardRef(function(props, ref) {
        let onFocus = useEvent(props.onFocus), [role, setRole] = React__namespace.useState();
        return index3(() => (isSafari() && setRole("button"), document.addEventListener("keydown", setActiveElementOnTab), () => {
          document.removeEventListener("keydown", setActiveElementOnTab);
        }), []), /* @__PURE__ */ React__namespace.createElement("span", _extends5({}, props, {
          ref,
          tabIndex: 0,
          role,
          "aria-hidden": role ? void 0 : !0,
          "data-floating-ui-focus-guard": "",
          style: HIDDEN_STYLES,
          onFocus: (event) => {
            isSafari() && isMac() && !isTabFocus(event) ? (event.persist(), timeoutId = window.setTimeout(() => {
              onFocus(event);
            }, 50)) : onFocus(event);
          }
        }));
      }), PortalContext = /* @__PURE__ */ React__namespace.createContext(null), useFloatingPortalNode = function(_temp) {
        let {
          id,
          enabled = !0
        } = _temp === void 0 ? {} : _temp, [portalEl, setPortalEl] = React__namespace.useState(null), uniqueId = useId(), portalContext = usePortalContext();
        return index3(() => {
          if (!enabled)
            return;
          let rootNode = id ? document.getElementById(id) : null;
          if (rootNode)
            rootNode.setAttribute("data-floating-ui-portal", ""), setPortalEl(rootNode);
          else {
            let newPortalEl = document.createElement("div");
            id !== "" && (newPortalEl.id = id || uniqueId), newPortalEl.setAttribute("data-floating-ui-portal", ""), setPortalEl(newPortalEl);
            let container = (portalContext == null ? void 0 : portalContext.portalNode) || document.body;
            return container.appendChild(newPortalEl), () => {
              container.removeChild(newPortalEl);
            };
          }
        }, [id, portalContext, uniqueId, enabled]), portalEl;
      }, FloatingPortal = (_ref) => {
        let {
          children,
          id,
          root = null,
          preserveTabOrder = !0
        } = _ref, portalNode = useFloatingPortalNode({
          id,
          enabled: !root
        }), [focusManagerState, setFocusManagerState] = React__namespace.useState(null), beforeOutsideRef = React__namespace.useRef(null), afterOutsideRef = React__namespace.useRef(null), beforeInsideRef = React__namespace.useRef(null), afterInsideRef = React__namespace.useRef(null), shouldRenderGuards = (
          // The FocusManager and therefore floating element are currently open/
          // rendered.
          !!focusManagerState && // Guards are only for non-modal focus management.
          !focusManagerState.modal && !!(root || portalNode) && preserveTabOrder
        );
        return React__namespace.useEffect(() => {
          if (!portalNode || !preserveTabOrder || focusManagerState != null && focusManagerState.modal)
            return;
          function onFocus(event) {
            portalNode && isOutsideEvent(event) && (event.type === "focusin" ? enableFocusInside : disableFocusInside)(portalNode);
          }
          return portalNode.addEventListener("focusin", onFocus, !0), portalNode.addEventListener("focusout", onFocus, !0), () => {
            portalNode.removeEventListener("focusin", onFocus, !0), portalNode.removeEventListener("focusout", onFocus, !0);
          };
        }, [portalNode, preserveTabOrder, focusManagerState == null ? void 0 : focusManagerState.modal]), /* @__PURE__ */ React__namespace.createElement(PortalContext.Provider, {
          value: React__namespace.useMemo(() => ({
            preserveTabOrder,
            beforeOutsideRef,
            afterOutsideRef,
            beforeInsideRef,
            afterInsideRef,
            portalNode,
            setFocusManagerState
          }), [preserveTabOrder, portalNode])
        }, shouldRenderGuards && portalNode && /* @__PURE__ */ React__namespace.createElement(FocusGuard, {
          "data-type": "outside",
          ref: beforeOutsideRef,
          onFocus: (event) => {
            if (isOutsideEvent(event, portalNode)) {
              var _beforeInsideRef$curr;
              (_beforeInsideRef$curr = beforeInsideRef.current) == null || _beforeInsideRef$curr.focus();
            } else {
              let prevTabbable = getPreviousTabbable() || (focusManagerState == null ? void 0 : focusManagerState.refs.domReference.current);
              prevTabbable == null || prevTabbable.focus();
            }
          }
        }), shouldRenderGuards && portalNode && /* @__PURE__ */ React__namespace.createElement("span", {
          "aria-owns": portalNode.id,
          style: HIDDEN_STYLES
        }), root ? /* @__PURE__ */ reactDom$1.createPortal(children, root) : portalNode ? /* @__PURE__ */ reactDom$1.createPortal(children, portalNode) : null, shouldRenderGuards && portalNode && /* @__PURE__ */ React__namespace.createElement(FocusGuard, {
          "data-type": "outside",
          ref: afterOutsideRef,
          onFocus: (event) => {
            if (isOutsideEvent(event, portalNode)) {
              var _afterInsideRef$curre;
              (_afterInsideRef$curre = afterInsideRef.current) == null || _afterInsideRef$curre.focus();
            } else {
              let nextTabbable = getNextTabbable() || (focusManagerState == null ? void 0 : focusManagerState.refs.domReference.current);
              nextTabbable == null || nextTabbable.focus(), focusManagerState != null && focusManagerState.closeOnFocusOut && (focusManagerState == null || focusManagerState.onOpenChange(!1));
            }
          }
        }));
      }, usePortalContext = () => React__namespace.useContext(PortalContext), VisuallyHiddenDismiss = /* @__PURE__ */ React__namespace.forwardRef(function(props, ref) {
        return /* @__PURE__ */ React__namespace.createElement("button", _extends5({}, props, {
          type: "button",
          ref,
          tabIndex: -1,
          style: HIDDEN_STYLES
        }));
      });
      function FloatingFocusManager(_ref) {
        let {
          context,
          children,
          order: order2 = ["content"],
          guards = !0,
          initialFocus = 0,
          returnFocus = !0,
          modal = !0,
          visuallyHiddenDismiss = !1,
          closeOnFocusOut = !0
        } = _ref, {
          refs,
          nodeId,
          onOpenChange,
          events,
          dataRef,
          elements: {
            domReference,
            floating
          }
        } = context, orderRef = useLatestRef(order2), tree = useFloatingTree(), portalContext = usePortalContext(), [tabbableContentLength, setTabbableContentLength] = React__namespace.useState(null), ignoreInitialFocus = typeof initialFocus == "number" && initialFocus < 0, startDismissButtonRef = React__namespace.useRef(null), endDismissButtonRef = React__namespace.useRef(null), preventReturnFocusRef = React__namespace.useRef(!1), previouslyFocusedElementRef = React__namespace.useRef(null), isPointerDownRef = React__namespace.useRef(!1), isInsidePortal = portalContext != null, isTypeableCombobox = domReference && domReference.getAttribute("role") === "combobox" && isTypeableElement(domReference), getTabbableContent = React__namespace.useCallback(function(container) {
          return container === void 0 && (container = floating), container ? tabbable(container, getTabbableOptions()) : [];
        }, [floating]), getTabbableElements = React__namespace.useCallback((container) => {
          let content = getTabbableContent(container);
          return orderRef.current.map((type) => domReference && type === "reference" ? domReference : floating && type === "floating" ? floating : content).filter(Boolean).flat();
        }, [domReference, floating, orderRef, getTabbableContent]);
        React__namespace.useEffect(() => {
          if (!modal)
            return;
          function onKeyDown(event) {
            if (event.key === "Tab") {
              getTabbableContent().length === 0 && !isTypeableCombobox && stopEvent(event);
              let els = getTabbableElements(), target = getTarget(event);
              orderRef.current[0] === "reference" && target === domReference && (stopEvent(event), event.shiftKey ? enqueueFocus(els[els.length - 1]) : enqueueFocus(els[1])), orderRef.current[1] === "floating" && target === floating && event.shiftKey && (stopEvent(event), enqueueFocus(els[0]));
            }
          }
          let doc = getDocument(floating);
          return doc.addEventListener("keydown", onKeyDown), () => {
            doc.removeEventListener("keydown", onKeyDown);
          };
        }, [domReference, floating, modal, orderRef, refs, isTypeableCombobox, getTabbableContent, getTabbableElements]), React__namespace.useEffect(() => {
          if (!closeOnFocusOut)
            return;
          function handlePointerDown() {
            isPointerDownRef.current = !0, setTimeout(() => {
              isPointerDownRef.current = !1;
            });
          }
          function handleFocusOutside(event) {
            let relatedTarget = event.relatedTarget, movedToUnrelatedNode = !(contains(domReference, relatedTarget) || contains(floating, relatedTarget) || contains(relatedTarget, floating) || contains(portalContext == null ? void 0 : portalContext.portalNode, relatedTarget) || relatedTarget != null && relatedTarget.hasAttribute("data-floating-ui-focus-guard") || tree && (getChildren(tree.nodesRef.current, nodeId).find((node) => {
              var _node$context, _node$context2;
              return contains((_node$context = node.context) == null ? void 0 : _node$context.elements.floating, relatedTarget) || contains((_node$context2 = node.context) == null ? void 0 : _node$context2.elements.domReference, relatedTarget);
            }) || getAncestors(tree.nodesRef.current, nodeId).find((node) => {
              var _node$context3, _node$context4;
              return ((_node$context3 = node.context) == null ? void 0 : _node$context3.elements.floating) === relatedTarget || ((_node$context4 = node.context) == null ? void 0 : _node$context4.elements.domReference) === relatedTarget;
            })));
            relatedTarget && movedToUnrelatedNode && !isPointerDownRef.current && // Fix React 18 Strict Mode returnFocus due to double rendering.
            relatedTarget !== previouslyFocusedElementRef.current && (preventReturnFocusRef.current = !0, setTimeout(() => onOpenChange(!1)));
          }
          if (floating && isHTMLElement(domReference))
            return domReference.addEventListener("focusout", handleFocusOutside), domReference.addEventListener("pointerdown", handlePointerDown), !modal && floating.addEventListener("focusout", handleFocusOutside), () => {
              domReference.removeEventListener("focusout", handleFocusOutside), domReference.removeEventListener("pointerdown", handlePointerDown), !modal && floating.removeEventListener("focusout", handleFocusOutside);
            };
        }, [domReference, floating, modal, nodeId, tree, portalContext, onOpenChange, closeOnFocusOut]), React__namespace.useEffect(() => {
          var _portalContext$portal;
          let portalNodes = Array.from((portalContext == null || (_portalContext$portal = portalContext.portalNode) == null ? void 0 : _portalContext$portal.querySelectorAll("[data-floating-ui-portal]")) || []);
          function getDismissButtons() {
            return [startDismissButtonRef.current, endDismissButtonRef.current].filter(Boolean);
          }
          if (floating && modal) {
            let insideNodes = [floating, ...portalNodes, ...getDismissButtons()], cleanup = hideOthers(orderRef.current.includes("reference") || isTypeableCombobox ? insideNodes.concat(domReference || []) : insideNodes);
            return () => {
              cleanup();
            };
          }
        }, [domReference, floating, modal, orderRef, portalContext, isTypeableCombobox]), React__namespace.useEffect(() => {
          if (modal && !guards && floating) {
            let tabIndexValues = [], options = getTabbableOptions(), allTabbable = tabbable(getDocument(floating).body, options), floatingTabbable = getTabbableElements(), elements = allTabbable.filter((el) => !floatingTabbable.includes(el));
            return elements.forEach((el, i7) => {
              tabIndexValues[i7] = el.getAttribute("tabindex"), el.setAttribute("tabindex", "-1");
            }), () => {
              elements.forEach((el, i7) => {
                let value = tabIndexValues[i7];
                value == null ? el.removeAttribute("tabindex") : el.setAttribute("tabindex", value);
              });
            };
          }
        }, [floating, modal, guards, getTabbableElements]), index3(() => {
          if (!floating)
            return;
          let doc = getDocument(floating), returnFocusValue = returnFocus, preventReturnFocusScroll = !1, previouslyFocusedElement = activeElement$1(doc), contextData = dataRef.current;
          previouslyFocusedElementRef.current = previouslyFocusedElement;
          let focusableElements = getTabbableElements(floating), elToFocus = (typeof initialFocus == "number" ? focusableElements[initialFocus] : initialFocus.current) || floating;
          !ignoreInitialFocus && enqueueFocus(elToFocus, {
            preventScroll: elToFocus === floating
          });
          function onDismiss(payload) {
            if (payload.type === "escapeKey" && refs.domReference.current && (previouslyFocusedElementRef.current = refs.domReference.current), ["referencePress", "escapeKey"].includes(payload.type))
              return;
            let returnFocus2 = payload.data.returnFocus;
            typeof returnFocus2 == "object" ? (returnFocusValue = !0, preventReturnFocusScroll = returnFocus2.preventScroll) : returnFocusValue = returnFocus2;
          }
          return events.on("dismiss", onDismiss), () => {
            if (events.off("dismiss", onDismiss), contains(floating, activeElement$1(doc)) && refs.domReference.current && (previouslyFocusedElementRef.current = refs.domReference.current), returnFocusValue && isHTMLElement(previouslyFocusedElementRef.current) && !preventReturnFocusRef.current)
              if (!refs.domReference.current || isPointerDownRef.current)
                enqueueFocus(previouslyFocusedElementRef.current, {
                  // When dismissing nested floating elements, by the time the rAF has
                  // executed, the menus will all have been unmounted. When they try
                  // to get focused, the calls get ignored — leaving the root
                  // reference focused as desired.
                  cancelPrevious: !1,
                  preventScroll: preventReturnFocusScroll
                });
              else {
                var _previouslyFocusedEle;
                contextData.__syncReturnFocus = !0, (_previouslyFocusedEle = previouslyFocusedElementRef.current) == null || _previouslyFocusedEle.focus({
                  preventScroll: preventReturnFocusScroll
                }), setTimeout(() => {
                  delete contextData.__syncReturnFocus;
                });
              }
          };
        }, [floating, getTabbableElements, initialFocus, returnFocus, dataRef, refs, events, ignoreInitialFocus]), index3(() => {
          if (portalContext)
            return portalContext.setFocusManagerState({
              ...context,
              modal,
              closeOnFocusOut
              // Not concerned about the <RT> generic type.
            }), () => {
              portalContext.setFocusManagerState(null);
            };
        }, [portalContext, modal, closeOnFocusOut, context]), index3(() => {
          if (ignoreInitialFocus || !floating)
            return;
          function setState() {
            setTabbableContentLength(getTabbableContent().length);
          }
          if (setState(), typeof MutationObserver == "function") {
            let observer2 = new MutationObserver(setState);
            return observer2.observe(floating, {
              childList: !0,
              subtree: !0
            }), () => {
              observer2.disconnect();
            };
          }
        }, [floating, getTabbableContent, ignoreInitialFocus, refs]);
        let shouldRenderGuards = guards && (isInsidePortal || modal) && !isTypeableCombobox;
        function renderDismissButton(location) {
          return visuallyHiddenDismiss && modal ? /* @__PURE__ */ React__namespace.createElement(VisuallyHiddenDismiss, {
            ref: location === "start" ? startDismissButtonRef : endDismissButtonRef,
            onClick: () => onOpenChange(!1)
          }, typeof visuallyHiddenDismiss == "string" ? visuallyHiddenDismiss : "Dismiss") : null;
        }
        return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, shouldRenderGuards && /* @__PURE__ */ React__namespace.createElement(FocusGuard, {
          "data-type": "inside",
          ref: portalContext == null ? void 0 : portalContext.beforeInsideRef,
          onFocus: (event) => {
            if (modal) {
              let els = getTabbableElements();
              enqueueFocus(order2[0] === "reference" ? els[0] : els[els.length - 1]);
            } else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode)
              if (preventReturnFocusRef.current = !1, isOutsideEvent(event, portalContext.portalNode)) {
                let nextTabbable = getNextTabbable() || domReference;
                nextTabbable == null || nextTabbable.focus();
              } else {
                var _portalContext$before;
                (_portalContext$before = portalContext.beforeOutsideRef.current) == null || _portalContext$before.focus();
              }
          }
        }), isTypeableCombobox ? null : renderDismissButton("start"), /* @__PURE__ */ React__namespace.cloneElement(children, tabbableContentLength === 0 || order2.includes("floating") ? {
          tabIndex: 0
        } : {}), renderDismissButton("end"), shouldRenderGuards && /* @__PURE__ */ React__namespace.createElement(FocusGuard, {
          "data-type": "inside",
          ref: portalContext == null ? void 0 : portalContext.afterInsideRef,
          onFocus: (event) => {
            if (modal)
              enqueueFocus(getTabbableElements()[0]);
            else if (portalContext != null && portalContext.preserveTabOrder && portalContext.portalNode)
              if (preventReturnFocusRef.current = !0, isOutsideEvent(event, portalContext.portalNode)) {
                let prevTabbable = getPreviousTabbable() || domReference;
                prevTabbable == null || prevTabbable.focus();
              } else {
                var _portalContext$afterO;
                (_portalContext$afterO = portalContext.afterOutsideRef.current) == null || _portalContext$afterO.focus();
              }
          }
        }));
      }
      let identifier = "data-floating-ui-scroll-lock", FloatingOverlay = /* @__PURE__ */ React__namespace.forwardRef(function(_ref, ref) {
        let {
          lockScroll = !1,
          ...rest
        } = _ref;
        return index3(() => {
          var _window$visualViewpor, _window$visualViewpor2;
          if (!lockScroll || document.body.hasAttribute(identifier))
            return;
          document.body.setAttribute(identifier, "");
          let paddingProp = Math.round(document.documentElement.getBoundingClientRect().left) + document.documentElement.scrollLeft ? "paddingLeft" : "paddingRight", scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;
          if (!/iP(hone|ad|od)|iOS/.test(getPlatform()))
            return Object.assign(document.body.style, {
              overflow: "hidden",
              [paddingProp]: scrollbarWidth + "px"
            }), () => {
              document.body.removeAttribute(identifier), Object.assign(document.body.style, {
                overflow: "",
                [paddingProp]: ""
              });
            };
          let offsetLeft = ((_window$visualViewpor = window.visualViewport) == null ? void 0 : _window$visualViewpor.offsetLeft) || 0, offsetTop = ((_window$visualViewpor2 = window.visualViewport) == null ? void 0 : _window$visualViewpor2.offsetTop) || 0, scrollX = window.pageXOffset, scrollY = window.pageYOffset;
          return Object.assign(document.body.style, {
            position: "fixed",
            overflow: "hidden",
            top: -(scrollY - Math.floor(offsetTop)) + "px",
            left: -(scrollX - Math.floor(offsetLeft)) + "px",
            right: "0",
            [paddingProp]: scrollbarWidth + "px"
          }), () => {
            Object.assign(document.body.style, {
              position: "",
              overflow: "",
              top: "",
              left: "",
              right: "",
              [paddingProp]: ""
            }), document.body.removeAttribute(identifier), window.scrollTo(scrollX, scrollY);
          };
        }, [lockScroll]), /* @__PURE__ */ React__namespace.createElement("div", _extends5({
          ref
        }, rest, {
          style: {
            position: "fixed",
            overflow: "auto",
            top: 0,
            right: 0,
            bottom: 0,
            left: 0,
            ...rest.style
          }
        }));
      });
      function isButtonTarget(event) {
        return isHTMLElement(event.target) && event.target.tagName === "BUTTON";
      }
      function isSpaceIgnored(element) {
        return isTypeableElement(element);
      }
      let useClick = function(_ref, _temp) {
        let {
          open,
          onOpenChange,
          dataRef,
          elements: {
            domReference
          }
        } = _ref, {
          enabled = !0,
          event: eventOption = "click",
          toggle = !0,
          ignoreMouse = !1,
          keyboardHandlers = !0
        } = _temp === void 0 ? {} : _temp, pointerTypeRef = React__namespace.useRef();
        return React__namespace.useMemo(() => enabled ? {
          reference: {
            onPointerDown(event) {
              pointerTypeRef.current = event.pointerType;
            },
            onMouseDown(event) {
              event.button === 0 && (isMouseLikePointerType(pointerTypeRef.current, !0) && ignoreMouse || eventOption !== "click" && (open ? toggle && (!dataRef.current.openEvent || dataRef.current.openEvent.type === "mousedown") && onOpenChange(!1) : (event.preventDefault(), onOpenChange(!0)), dataRef.current.openEvent = event.nativeEvent));
            },
            onClick(event) {
              if (!dataRef.current.__syncReturnFocus) {
                if (eventOption === "mousedown" && pointerTypeRef.current) {
                  pointerTypeRef.current = void 0;
                  return;
                }
                isMouseLikePointerType(pointerTypeRef.current, !0) && ignoreMouse || (open ? toggle && (!dataRef.current.openEvent || dataRef.current.openEvent.type === "click") && onOpenChange(!1) : onOpenChange(!0), dataRef.current.openEvent = event.nativeEvent);
              }
            },
            onKeyDown(event) {
              pointerTypeRef.current = void 0, keyboardHandlers && (isButtonTarget(event) || (event.key === " " && !isSpaceIgnored(domReference) && event.preventDefault(), event.key === "Enter" && (open ? toggle && onOpenChange(!1) : onOpenChange(!0))));
            },
            onKeyUp(event) {
              keyboardHandlers && (isButtonTarget(event) || isSpaceIgnored(domReference) || event.key === " " && (open ? toggle && onOpenChange(!1) : onOpenChange(!0)));
            }
          }
        } : {}, [enabled, dataRef, eventOption, ignoreMouse, keyboardHandlers, domReference, toggle, open, onOpenChange]);
      };
      function isEventTargetWithin(event, node) {
        if (node == null)
          return !1;
        if ("composedPath" in event)
          return event.composedPath().includes(node);
        let e5 = event;
        return e5.target != null && node.contains(e5.target);
      }
      let bubbleHandlerKeys = {
        pointerdown: "onPointerDown",
        mousedown: "onMouseDown",
        click: "onClick"
      }, captureHandlerKeys = {
        pointerdown: "onPointerDownCapture",
        mousedown: "onMouseDownCapture",
        click: "onClickCapture"
      }, normalizeBubblesProp = function(bubbles) {
        var _bubbles$escapeKey, _bubbles$outsidePress;
        return bubbles === void 0 && (bubbles = !0), {
          escapeKeyBubbles: typeof bubbles == "boolean" ? bubbles : (_bubbles$escapeKey = bubbles.escapeKey) != null ? _bubbles$escapeKey : !0,
          outsidePressBubbles: typeof bubbles == "boolean" ? bubbles : (_bubbles$outsidePress = bubbles.outsidePress) != null ? _bubbles$outsidePress : !0
        };
      }, useDismiss = function(_ref, _temp) {
        let {
          open,
          onOpenChange,
          events,
          nodeId,
          elements: {
            reference,
            domReference,
            floating
          },
          dataRef
        } = _ref, {
          enabled = !0,
          escapeKey = !0,
          outsidePress: unstable_outsidePress = !0,
          outsidePressEvent = "pointerdown",
          referencePress = !1,
          referencePressEvent = "pointerdown",
          ancestorScroll = !1,
          bubbles = !0
        } = _temp === void 0 ? {} : _temp, tree = useFloatingTree(), nested = useFloatingParentNodeId() != null, outsidePressFn = useEvent(typeof unstable_outsidePress == "function" ? unstable_outsidePress : () => !1), outsidePress = typeof unstable_outsidePress == "function" ? outsidePressFn : unstable_outsidePress, insideReactTreeRef = React__namespace.useRef(!1), {
          escapeKeyBubbles,
          outsidePressBubbles
        } = normalizeBubblesProp(bubbles);
        return React__namespace.useEffect(() => {
          if (!open || !enabled)
            return;
          dataRef.current.__escapeKeyBubbles = escapeKeyBubbles, dataRef.current.__outsidePressBubbles = outsidePressBubbles;
          function onKeyDown(event) {
            if (event.key === "Escape") {
              let children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];
              if (children.length > 0) {
                let shouldDismiss = !0;
                if (children.forEach((child) => {
                  var _child$context;
                  if ((_child$context = child.context) != null && _child$context.open && !child.context.dataRef.current.__escapeKeyBubbles) {
                    shouldDismiss = !1;
                    return;
                  }
                }), !shouldDismiss)
                  return;
              }
              events.emit("dismiss", {
                type: "escapeKey",
                data: {
                  returnFocus: {
                    preventScroll: !1
                  }
                }
              }), onOpenChange(!1);
            }
          }
          function onOutsidePress(event) {
            let insideReactTree = insideReactTreeRef.current;
            if (insideReactTreeRef.current = !1, insideReactTree || typeof outsidePress == "function" && !outsidePress(event))
              return;
            let target = getTarget(event);
            if (isHTMLElement(target) && floating) {
              let win = floating.ownerDocument.defaultView || window, canScrollX = target.scrollWidth > target.clientWidth, canScrollY = target.scrollHeight > target.clientHeight, xCond = canScrollY && event.offsetX > target.clientWidth;
              if (canScrollY && win.getComputedStyle(target).direction === "rtl" && (xCond = event.offsetX <= target.offsetWidth - target.clientWidth), xCond || canScrollX && event.offsetY > target.clientHeight)
                return;
            }
            let targetIsInsideChildren = tree && getChildren(tree.nodesRef.current, nodeId).some((node) => {
              var _node$context;
              return isEventTargetWithin(event, (_node$context = node.context) == null ? void 0 : _node$context.elements.floating);
            });
            if (isEventTargetWithin(event, floating) || isEventTargetWithin(event, domReference) || targetIsInsideChildren)
              return;
            let children = tree ? getChildren(tree.nodesRef.current, nodeId) : [];
            if (children.length > 0) {
              let shouldDismiss = !0;
              if (children.forEach((child) => {
                var _child$context2;
                if ((_child$context2 = child.context) != null && _child$context2.open && !child.context.dataRef.current.__outsidePressBubbles) {
                  shouldDismiss = !1;
                  return;
                }
              }), !shouldDismiss)
                return;
            }
            events.emit("dismiss", {
              type: "outsidePress",
              data: {
                returnFocus: nested ? {
                  preventScroll: !0
                } : isVirtualClick(event) || isVirtualPointerEvent(event)
              }
            }), onOpenChange(!1);
          }
          function onScroll() {
            onOpenChange(!1);
          }
          let doc = getDocument(floating);
          escapeKey && doc.addEventListener("keydown", onKeyDown), outsidePress && doc.addEventListener(outsidePressEvent, onOutsidePress);
          let ancestors = [];
          return ancestorScroll && (isElement(domReference) && (ancestors = reactDom.getOverflowAncestors(domReference)), isElement(floating) && (ancestors = ancestors.concat(reactDom.getOverflowAncestors(floating))), !isElement(reference) && reference && reference.contextElement && (ancestors = ancestors.concat(reactDom.getOverflowAncestors(reference.contextElement)))), ancestors = ancestors.filter((ancestor) => {
            var _doc$defaultView;
            return ancestor !== ((_doc$defaultView = doc.defaultView) == null ? void 0 : _doc$defaultView.visualViewport);
          }), ancestors.forEach((ancestor) => {
            ancestor.addEventListener("scroll", onScroll, {
              passive: !0
            });
          }), () => {
            escapeKey && doc.removeEventListener("keydown", onKeyDown), outsidePress && doc.removeEventListener(outsidePressEvent, onOutsidePress), ancestors.forEach((ancestor) => {
              ancestor.removeEventListener("scroll", onScroll);
            });
          };
        }, [dataRef, floating, domReference, reference, escapeKey, outsidePress, outsidePressEvent, events, tree, nodeId, open, onOpenChange, ancestorScroll, enabled, escapeKeyBubbles, outsidePressBubbles, nested]), React__namespace.useEffect(() => {
          insideReactTreeRef.current = !1;
        }, [outsidePress, outsidePressEvent]), React__namespace.useMemo(() => enabled ? {
          reference: {
            [bubbleHandlerKeys[referencePressEvent]]: () => {
              referencePress && (events.emit("dismiss", {
                type: "referencePress",
                data: {
                  returnFocus: !1
                }
              }), onOpenChange(!1));
            }
          },
          floating: {
            [captureHandlerKeys[outsidePressEvent]]: () => {
              insideReactTreeRef.current = !0;
            }
          }
        } : {}, [enabled, events, referencePress, outsidePressEvent, referencePressEvent, onOpenChange]);
      }, useFocus = function(_ref, _temp) {
        let {
          open,
          onOpenChange,
          dataRef,
          events,
          refs,
          elements: {
            floating,
            domReference
          }
        } = _ref, {
          enabled = !0,
          keyboardOnly = !0
        } = _temp === void 0 ? {} : _temp, pointerTypeRef = React__namespace.useRef(""), blockFocusRef = React__namespace.useRef(!1), timeoutRef = React__namespace.useRef();
        return React__namespace.useEffect(() => {
          if (!enabled)
            return;
          let win = getDocument(floating).defaultView || window;
          function onBlur() {
            !open && isHTMLElement(domReference) && domReference === activeElement$1(getDocument(domReference)) && (blockFocusRef.current = !0);
          }
          return win.addEventListener("blur", onBlur), () => {
            win.removeEventListener("blur", onBlur);
          };
        }, [floating, domReference, open, enabled]), React__namespace.useEffect(() => {
          if (!enabled)
            return;
          function onDismiss(payload) {
            (payload.type === "referencePress" || payload.type === "escapeKey") && (blockFocusRef.current = !0);
          }
          return events.on("dismiss", onDismiss), () => {
            events.off("dismiss", onDismiss);
          };
        }, [events, enabled]), React__namespace.useEffect(() => () => {
          clearTimeout(timeoutRef.current);
        }, []), React__namespace.useMemo(() => enabled ? {
          reference: {
            onPointerDown(_ref2) {
              let {
                pointerType
              } = _ref2;
              pointerTypeRef.current = pointerType, blockFocusRef.current = !!(pointerType && keyboardOnly);
            },
            onMouseLeave() {
              blockFocusRef.current = !1;
            },
            onFocus(event) {
              var _dataRef$current$open;
              blockFocusRef.current || event.type === "focus" && ((_dataRef$current$open = dataRef.current.openEvent) == null ? void 0 : _dataRef$current$open.type) === "mousedown" && dataRef.current.openEvent && isEventTargetWithin(dataRef.current.openEvent, domReference) || (dataRef.current.openEvent = event.nativeEvent, onOpenChange(!0));
            },
            onBlur(event) {
              blockFocusRef.current = !1;
              let relatedTarget = event.relatedTarget, movedToFocusGuard = isElement(relatedTarget) && relatedTarget.hasAttribute("data-floating-ui-focus-guard") && relatedTarget.getAttribute("data-type") === "outside";
              timeoutRef.current = setTimeout(() => {
                contains(refs.floating.current, relatedTarget) || contains(domReference, relatedTarget) || movedToFocusGuard || onOpenChange(!1);
              });
            }
          }
        } : {}, [enabled, keyboardOnly, domReference, refs, dataRef, onOpenChange]);
      }, isPreventScrollSupported = !1, ARROW_UP = "ArrowUp", ARROW_DOWN = "ArrowDown", ARROW_LEFT = "ArrowLeft", ARROW_RIGHT = "ArrowRight";
      function isDifferentRow(index4, cols, prevRow) {
        return Math.floor(index4 / cols) !== prevRow;
      }
      function isIndexOutOfBounds(listRef, index4) {
        return index4 < 0 || index4 >= listRef.current.length;
      }
      function findNonDisabledIndex(listRef, _temp) {
        let {
          startingIndex = -1,
          decrement = !1,
          disabledIndices,
          amount = 1
        } = _temp === void 0 ? {} : _temp, list2 = listRef.current, index4 = startingIndex;
        do {
          var _list$index, _list$index2;
          index4 = index4 + (decrement ? -amount : amount);
        } while (index4 >= 0 && index4 <= list2.length - 1 && (disabledIndices ? disabledIndices.includes(index4) : list2[index4] == null || (_list$index = list2[index4]) != null && _list$index.hasAttribute("disabled") || ((_list$index2 = list2[index4]) == null ? void 0 : _list$index2.getAttribute("aria-disabled")) === "true"));
        return index4;
      }
      function doSwitch(orientation, vertical, horizontal) {
        switch (orientation) {
          case "vertical":
            return vertical;
          case "horizontal":
            return horizontal;
          default:
            return vertical || horizontal;
        }
      }
      function isMainOrientationKey(key, orientation) {
        return doSwitch(orientation, key === ARROW_UP || key === ARROW_DOWN, key === ARROW_LEFT || key === ARROW_RIGHT);
      }
      function isMainOrientationToEndKey(key, orientation, rtl) {
        return doSwitch(orientation, key === ARROW_DOWN, rtl ? key === ARROW_LEFT : key === ARROW_RIGHT) || key === "Enter" || key == " " || key === "";
      }
      function isCrossOrientationOpenKey(key, orientation, rtl) {
        return doSwitch(orientation, rtl ? key === ARROW_LEFT : key === ARROW_RIGHT, key === ARROW_DOWN);
      }
      function isCrossOrientationCloseKey(key, orientation, rtl) {
        return doSwitch(orientation, rtl ? key === ARROW_RIGHT : key === ARROW_LEFT, key === ARROW_UP);
      }
      function getMinIndex(listRef, disabledIndices) {
        return findNonDisabledIndex(listRef, {
          disabledIndices
        });
      }
      function getMaxIndex(listRef, disabledIndices) {
        return findNonDisabledIndex(listRef, {
          decrement: !0,
          startingIndex: listRef.current.length,
          disabledIndices
        });
      }
      let useListNavigation = function(_ref, _temp2) {
        let {
          open,
          onOpenChange,
          refs,
          elements: {
            domReference
          }
        } = _ref, {
          listRef,
          activeIndex,
          onNavigate: unstable_onNavigate = () => {
          },
          enabled = !0,
          selectedIndex = null,
          allowEscape = !1,
          loop = !1,
          nested = !1,
          rtl = !1,
          virtual = !1,
          focusItemOnOpen = "auto",
          focusItemOnHover = !0,
          openOnArrowKeyDown = !0,
          disabledIndices = void 0,
          orientation = "vertical",
          cols = 1,
          scrollItemIntoView = !0
        } = _temp2 === void 0 ? {
          listRef: {
            current: []
          },
          activeIndex: null,
          onNavigate: () => {
          }
        } : _temp2;
        allowEscape && (loop || console.warn(["Floating UI: `useListNavigation` looping must be enabled to allow", "escaping."].join(" ")), virtual || console.warn(["Floating UI: `useListNavigation` must be virtual to allow", "escaping."].join(" "))), orientation === "vertical" && cols > 1 && console.warn(["Floating UI: In grid list navigation mode (`cols` > 1), the", '`orientation` should be either "horizontal" or "both".'].join(" "));
        let parentId = useFloatingParentNodeId(), tree = useFloatingTree(), onNavigate = useEvent(unstable_onNavigate), focusItemOnOpenRef = React__namespace.useRef(focusItemOnOpen), indexRef = React__namespace.useRef(selectedIndex ?? -1), keyRef = React__namespace.useRef(null), isPointerModalityRef = React__namespace.useRef(!0), previousOnNavigateRef = React__namespace.useRef(onNavigate), previousOpenRef = React__namespace.useRef(open), forceSyncFocus = React__namespace.useRef(!1), forceScrollIntoViewRef = React__namespace.useRef(!1), disabledIndicesRef = useLatestRef(disabledIndices), latestOpenRef = useLatestRef(open), scrollItemIntoViewRef = useLatestRef(scrollItemIntoView), [activeId, setActiveId] = React__namespace.useState(), focusItem = React__namespace.useCallback(function(listRef2, indexRef2, forceScrollIntoView) {
          forceScrollIntoView === void 0 && (forceScrollIntoView = !1);
          let item2 = listRef2.current[indexRef2.current];
          virtual ? setActiveId(item2 == null ? void 0 : item2.id) : enqueueFocus(item2, {
            preventScroll: !0,
            // Mac Safari does not move the virtual cursor unless the focus call
            // is sync. However, for the very first focus call, we need to wait
            // for the position to be ready in order to prevent unwanted
            // scrolling. This means the virtual cursor will not move to the first
            // item when first opening the floating element, but will on
            // subsequent calls. `preventScroll` is supported in modern Safari,
            // so we can use that instead.
            // iOS Safari must be async or the first item will not be focused.
            sync: isMac() && isSafari() ? isPreventScrollSupported || forceSyncFocus.current : !1
          }), requestAnimationFrame(() => {
            let scrollIntoViewOptions = scrollItemIntoViewRef.current;
            scrollIntoViewOptions && item2 && (forceScrollIntoView || !isPointerModalityRef.current) && (item2.scrollIntoView == null || item2.scrollIntoView(typeof scrollIntoViewOptions == "boolean" ? {
              block: "nearest",
              inline: "nearest"
            } : scrollIntoViewOptions));
          });
        }, [virtual, scrollItemIntoViewRef]);
        index3(() => {
          document.createElement("div").focus({
            get preventScroll() {
              return isPreventScrollSupported = !0, !1;
            }
          });
        }, []), index3(() => {
          enabled && (open ? focusItemOnOpenRef.current && selectedIndex != null && (forceScrollIntoViewRef.current = !0, onNavigate(selectedIndex)) : previousOpenRef.current && (indexRef.current = -1, previousOnNavigateRef.current(null)));
        }, [enabled, open, selectedIndex, onNavigate]), index3(() => {
          if (enabled && open)
            if (activeIndex == null) {
              if (forceSyncFocus.current = !1, selectedIndex != null)
                return;
              previousOpenRef.current && (indexRef.current = -1, focusItem(listRef, indexRef)), !previousOpenRef.current && focusItemOnOpenRef.current && (keyRef.current != null || focusItemOnOpenRef.current === !0 && keyRef.current == null) && (indexRef.current = keyRef.current == null || isMainOrientationToEndKey(keyRef.current, orientation, rtl) || nested ? getMinIndex(listRef, disabledIndicesRef.current) : getMaxIndex(listRef, disabledIndicesRef.current), onNavigate(indexRef.current));
            } else
              isIndexOutOfBounds(listRef, activeIndex) || (indexRef.current = activeIndex, focusItem(listRef, indexRef, forceScrollIntoViewRef.current), forceScrollIntoViewRef.current = !1);
        }, [enabled, open, activeIndex, selectedIndex, nested, listRef, orientation, rtl, onNavigate, focusItem, disabledIndicesRef]), index3(() => {
          if (enabled && previousOpenRef.current && !open) {
            var _tree$nodesRef$curren, _tree$nodesRef$curren2;
            let parentFloating = tree == null || (_tree$nodesRef$curren = tree.nodesRef.current.find((node) => node.id === parentId)) == null || (_tree$nodesRef$curren2 = _tree$nodesRef$curren.context) == null ? void 0 : _tree$nodesRef$curren2.elements.floating;
            parentFloating && !contains(parentFloating, activeElement$1(getDocument(parentFloating))) && parentFloating.focus({
              preventScroll: !0
            });
          }
        }, [enabled, open, tree, parentId]), index3(() => {
          keyRef.current = null, previousOnNavigateRef.current = onNavigate, previousOpenRef.current = open;
        });
        let hasActiveIndex = activeIndex != null, item = React__namespace.useMemo(() => {
          function syncCurrentTarget(currentTarget) {
            if (!open)
              return;
            let index4 = listRef.current.indexOf(currentTarget);
            index4 !== -1 && onNavigate(index4);
          }
          return {
            onFocus(_ref2) {
              let {
                currentTarget
              } = _ref2;
              syncCurrentTarget(currentTarget);
            },
            onClick: (_ref3) => {
              let {
                currentTarget
              } = _ref3;
              return currentTarget.focus({
                preventScroll: !0
              });
            },
            // Safari
            ...focusItemOnHover && {
              onMouseMove(_ref4) {
                let {
                  currentTarget
                } = _ref4;
                syncCurrentTarget(currentTarget);
              },
              onPointerLeave() {
                if (isPointerModalityRef.current && (indexRef.current = -1, focusItem(listRef, indexRef), reactDom$1.flushSync(() => onNavigate(null)), !virtual)) {
                  var _refs$floating$curren;
                  (_refs$floating$curren = refs.floating.current) == null || _refs$floating$curren.focus({
                    preventScroll: !0
                  });
                }
              }
            }
          };
        }, [open, refs, focusItem, focusItemOnHover, listRef, onNavigate, virtual]);
        return React__namespace.useMemo(() => {
          if (!enabled)
            return {};
          let disabledIndices2 = disabledIndicesRef.current;
          function onKeyDown(event) {
            if (isPointerModalityRef.current = !1, forceSyncFocus.current = !0, !latestOpenRef.current && event.currentTarget === refs.floating.current)
              return;
            if (nested && isCrossOrientationCloseKey(event.key, orientation, rtl)) {
              stopEvent(event), onOpenChange(!1), isHTMLElement(domReference) && domReference.focus();
              return;
            }
            let currentIndex = indexRef.current, minIndex = getMinIndex(listRef, disabledIndices2), maxIndex = getMaxIndex(listRef, disabledIndices2);
            if (event.key === "Home" && (indexRef.current = minIndex, onNavigate(indexRef.current)), event.key === "End" && (indexRef.current = maxIndex, onNavigate(indexRef.current)), cols > 1) {
              let prevIndex = indexRef.current;
              if (event.key === ARROW_UP) {
                if (stopEvent(event), prevIndex === -1)
                  indexRef.current = maxIndex;
                else if (indexRef.current = findNonDisabledIndex(listRef, {
                  startingIndex: prevIndex,
                  amount: cols,
                  decrement: !0,
                  disabledIndices: disabledIndices2
                }), loop && (prevIndex - cols < minIndex || indexRef.current < 0)) {
                  let col = prevIndex % cols, maxCol = maxIndex % cols, offset = maxIndex - (maxCol - col);
                  maxCol === col ? indexRef.current = maxIndex : indexRef.current = maxCol > col ? offset : offset - cols;
                }
                isIndexOutOfBounds(listRef, indexRef.current) && (indexRef.current = prevIndex), onNavigate(indexRef.current);
              }
              if (event.key === ARROW_DOWN && (stopEvent(event), prevIndex === -1 ? indexRef.current = minIndex : (indexRef.current = findNonDisabledIndex(listRef, {
                startingIndex: prevIndex,
                amount: cols,
                disabledIndices: disabledIndices2
              }), loop && prevIndex + cols > maxIndex && (indexRef.current = findNonDisabledIndex(listRef, {
                startingIndex: prevIndex % cols - cols,
                amount: cols,
                disabledIndices: disabledIndices2
              }))), isIndexOutOfBounds(listRef, indexRef.current) && (indexRef.current = prevIndex), onNavigate(indexRef.current)), orientation === "both") {
                let prevRow = Math.floor(prevIndex / cols);
                event.key === ARROW_RIGHT && (stopEvent(event), prevIndex % cols !== cols - 1 ? (indexRef.current = findNonDisabledIndex(listRef, {
                  startingIndex: prevIndex,
                  disabledIndices: disabledIndices2
                }), loop && isDifferentRow(indexRef.current, cols, prevRow) && (indexRef.current = findNonDisabledIndex(listRef, {
                  startingIndex: prevIndex - prevIndex % cols - 1,
                  disabledIndices: disabledIndices2
                }))) : loop && (indexRef.current = findNonDisabledIndex(listRef, {
                  startingIndex: prevIndex - prevIndex % cols - 1,
                  disabledIndices: disabledIndices2
                })), isDifferentRow(indexRef.current, cols, prevRow) && (indexRef.current = prevIndex)), event.key === ARROW_LEFT && (stopEvent(event), prevIndex % cols !== 0 ? (indexRef.current = findNonDisabledIndex(listRef, {
                  startingIndex: prevIndex,
                  disabledIndices: disabledIndices2,
                  decrement: !0
                }), loop && isDifferentRow(indexRef.current, cols, prevRow) && (indexRef.current = findNonDisabledIndex(listRef, {
                  startingIndex: prevIndex + (cols - prevIndex % cols),
                  decrement: !0,
                  disabledIndices: disabledIndices2
                }))) : loop && (indexRef.current = findNonDisabledIndex(listRef, {
                  startingIndex: prevIndex + (cols - prevIndex % cols),
                  decrement: !0,
                  disabledIndices: disabledIndices2
                })), isDifferentRow(indexRef.current, cols, prevRow) && (indexRef.current = prevIndex));
                let lastRow = Math.floor(maxIndex / cols) === prevRow;
                isIndexOutOfBounds(listRef, indexRef.current) && (loop && lastRow ? indexRef.current = event.key === ARROW_LEFT ? maxIndex : findNonDisabledIndex(listRef, {
                  startingIndex: prevIndex - prevIndex % cols - 1,
                  disabledIndices: disabledIndices2
                }) : indexRef.current = prevIndex), onNavigate(indexRef.current);
                return;
              }
            }
            if (isMainOrientationKey(event.key, orientation)) {
              if (stopEvent(event), open && !virtual && activeElement$1(event.currentTarget.ownerDocument) === event.currentTarget) {
                indexRef.current = isMainOrientationToEndKey(event.key, orientation, rtl) ? minIndex : maxIndex, onNavigate(indexRef.current);
                return;
              }
              isMainOrientationToEndKey(event.key, orientation, rtl) ? loop ? indexRef.current = currentIndex >= maxIndex ? allowEscape && currentIndex !== listRef.current.length ? -1 : minIndex : findNonDisabledIndex(listRef, {
                startingIndex: currentIndex,
                disabledIndices: disabledIndices2
              }) : indexRef.current = Math.min(maxIndex, findNonDisabledIndex(listRef, {
                startingIndex: currentIndex,
                disabledIndices: disabledIndices2
              })) : loop ? indexRef.current = currentIndex <= minIndex ? allowEscape && currentIndex !== -1 ? listRef.current.length : maxIndex : findNonDisabledIndex(listRef, {
                startingIndex: currentIndex,
                decrement: !0,
                disabledIndices: disabledIndices2
              }) : indexRef.current = Math.max(minIndex, findNonDisabledIndex(listRef, {
                startingIndex: currentIndex,
                decrement: !0,
                disabledIndices: disabledIndices2
              })), isIndexOutOfBounds(listRef, indexRef.current) ? onNavigate(null) : onNavigate(indexRef.current);
            }
          }
          function checkVirtualMouse(event) {
            focusItemOnOpen === "auto" && isVirtualClick(event.nativeEvent) && (focusItemOnOpenRef.current = !0);
          }
          function checkVirtualPointer(event) {
            focusItemOnOpenRef.current = focusItemOnOpen, focusItemOnOpen === "auto" && isVirtualPointerEvent(event.nativeEvent) && (focusItemOnOpenRef.current = !0);
          }
          let ariaActiveDescendantProp = virtual && open && hasActiveIndex && {
            "aria-activedescendant": activeId
          };
          return {
            reference: {
              ...ariaActiveDescendantProp,
              onKeyDown(event) {
                isPointerModalityRef.current = !1;
                let isArrowKey = event.key.indexOf("Arrow") === 0;
                if (virtual && open)
                  return onKeyDown(event);
                if (!open && !openOnArrowKeyDown && isArrowKey)
                  return;
                if ((isArrowKey || event.key === "Enter" || event.key === " " || event.key === "") && (keyRef.current = event.key), nested) {
                  isCrossOrientationOpenKey(event.key, orientation, rtl) && (stopEvent(event), open ? (indexRef.current = getMinIndex(listRef, disabledIndices2), onNavigate(indexRef.current)) : onOpenChange(!0));
                  return;
                }
                isMainOrientationKey(event.key, orientation) && (selectedIndex != null && (indexRef.current = selectedIndex), stopEvent(event), !open && openOnArrowKeyDown ? onOpenChange(!0) : onKeyDown(event), open && onNavigate(indexRef.current));
              },
              onFocus() {
                open && onNavigate(null);
              },
              onPointerDown: checkVirtualPointer,
              onMouseDown: checkVirtualMouse,
              onClick: checkVirtualMouse
            },
            floating: {
              "aria-orientation": orientation === "both" ? void 0 : orientation,
              ...ariaActiveDescendantProp,
              onKeyDown,
              onPointerMove() {
                isPointerModalityRef.current = !0;
              }
            },
            item
          };
        }, [domReference, refs, activeId, disabledIndicesRef, latestOpenRef, listRef, enabled, orientation, rtl, virtual, open, hasActiveIndex, nested, selectedIndex, openOnArrowKeyDown, allowEscape, cols, loop, focusItemOnOpen, onNavigate, onOpenChange, item]);
      };
      function useMergeRefs(refs) {
        return React__namespace.useMemo(() => refs.every((ref) => ref == null) ? null : (value) => {
          refs.forEach((ref) => {
            typeof ref == "function" ? ref(value) : ref != null && (ref.current = value);
          });
        }, refs);
      }
      let useRole = function(_ref, _temp) {
        let {
          open
        } = _ref, {
          enabled = !0,
          role = "dialog"
        } = _temp === void 0 ? {} : _temp, rootId = useId(), referenceId = useId();
        return React__namespace.useMemo(() => {
          let floatingProps = {
            id: rootId,
            role
          };
          return enabled ? role === "tooltip" ? {
            reference: {
              "aria-describedby": open ? rootId : void 0
            },
            floating: floatingProps
          } : {
            reference: {
              "aria-expanded": open ? "true" : "false",
              "aria-haspopup": role === "alertdialog" ? "dialog" : role,
              "aria-controls": open ? rootId : void 0,
              ...role === "listbox" && {
                role: "combobox"
              },
              ...role === "menu" && {
                id: referenceId
              }
            },
            floating: {
              ...floatingProps,
              ...role === "menu" && {
                "aria-labelledby": referenceId
              }
            }
          } : {};
        }, [enabled, role, open, rootId, referenceId]);
      }, camelCaseToKebabCase = (str) => str.replace(/[A-Z]+(?![a-z])|[A-Z]/g, ($4, ofs) => (ofs ? "-" : "") + $4.toLowerCase());
      function useDelayUnmount(open, durationMs) {
        let [isMounted, setIsMounted] = React__namespace.useState(open);
        return open && !isMounted && setIsMounted(!0), React__namespace.useEffect(() => {
          if (!open) {
            let timeout = setTimeout(() => setIsMounted(!1), durationMs);
            return () => clearTimeout(timeout);
          }
        }, [open, durationMs]), isMounted;
      }
      function useTransitionStatus(_ref, _temp) {
        let {
          open,
          elements: {
            floating
          }
        } = _ref, {
          duration = 250
        } = _temp === void 0 ? {} : _temp, closeDuration = (typeof duration == "number" ? duration : duration.close) || 0, [initiated, setInitiated] = React__namespace.useState(!1), [status, setStatus] = React__namespace.useState("unmounted"), isMounted = useDelayUnmount(open, closeDuration);
        return index3(() => {
          initiated && !isMounted && setStatus("unmounted");
        }, [initiated, isMounted]), index3(() => {
          if (floating)
            if (open) {
              setStatus("initial");
              let frame = requestAnimationFrame(() => {
                setStatus("open");
              });
              return () => {
                cancelAnimationFrame(frame);
              };
            } else
              setInitiated(!0), setStatus("close");
        }, [open, floating]), {
          isMounted,
          status
        };
      }
      function useTransitionStyles(context, _temp2) {
        let {
          initial: unstable_initial = {
            opacity: 0
          },
          open: unstable_open,
          close: unstable_close,
          common: unstable_common,
          duration = 250
        } = _temp2 === void 0 ? {} : _temp2, placement = context.placement, side = placement.split("-")[0], [styles, setStyles] = React__namespace.useState({}), {
          isMounted,
          status
        } = useTransitionStatus(context, {
          duration
        }), initialRef = useLatestRef(unstable_initial), openRef = useLatestRef(unstable_open), closeRef = useLatestRef(unstable_close), commonRef = useLatestRef(unstable_common), isNumberDuration = typeof duration == "number", openDuration = (isNumberDuration ? duration : duration.open) || 0, closeDuration = (isNumberDuration ? duration : duration.close) || 0;
        return index3(() => {
          let fnArgs = {
            side,
            placement
          }, initial = initialRef.current, close = closeRef.current, open = openRef.current, common = commonRef.current, initialStyles = typeof initial == "function" ? initial(fnArgs) : initial, closeStyles = typeof close == "function" ? close(fnArgs) : close, commonStyles = typeof common == "function" ? common(fnArgs) : common, openStyles = (typeof open == "function" ? open(fnArgs) : open) || Object.keys(initialStyles).reduce((acc, key) => (acc[key] = "", acc), {});
          if (status === "initial" && setStyles((styles2) => ({
            transitionProperty: styles2.transitionProperty,
            ...commonStyles,
            ...initialStyles
          })), status === "open" && setStyles({
            transitionProperty: Object.keys(openStyles).map(camelCaseToKebabCase).join(","),
            transitionDuration: openDuration + "ms",
            ...commonStyles,
            ...openStyles
          }), status === "close") {
            let styles2 = closeStyles || initialStyles;
            setStyles({
              transitionProperty: Object.keys(styles2).map(camelCaseToKebabCase).join(","),
              transitionDuration: closeDuration + "ms",
              ...commonStyles,
              ...styles2
            });
          }
        }, [side, placement, closeDuration, closeRef, initialRef, openRef, commonRef, openDuration, status]), {
          isMounted,
          styles
        };
      }
      let useTypeahead = function(_ref, _temp) {
        var _ref2;
        let {
          open,
          dataRef
        } = _ref, {
          listRef,
          activeIndex,
          onMatch: unstable_onMatch = () => {
          },
          enabled = !0,
          findMatch = null,
          resetMs = 1e3,
          ignoreKeys = [],
          selectedIndex = null
        } = _temp === void 0 ? {
          listRef: {
            current: []
          },
          activeIndex: null
        } : _temp, timeoutIdRef = React__namespace.useRef(), stringRef = React__namespace.useRef(""), prevIndexRef = React__namespace.useRef((_ref2 = selectedIndex ?? activeIndex) != null ? _ref2 : -1), matchIndexRef = React__namespace.useRef(null), onMatch = useEvent(unstable_onMatch), findMatchRef = useLatestRef(findMatch), ignoreKeysRef = useLatestRef(ignoreKeys);
        return index3(() => {
          open && (clearTimeout(timeoutIdRef.current), matchIndexRef.current = null, stringRef.current = "");
        }, [open]), index3(() => {
          if (open && stringRef.current === "") {
            var _ref3;
            prevIndexRef.current = (_ref3 = selectedIndex ?? activeIndex) != null ? _ref3 : -1;
          }
        }, [open, selectedIndex, activeIndex]), React__namespace.useMemo(() => {
          if (!enabled)
            return {};
          function onKeyDown(event) {
            let target = getTarget(event.nativeEvent);
            if (isElement(target) && (activeElement$1(getDocument(target)) !== event.currentTarget && target.closest('[role="dialog"],[role="menu"],[role="listbox"],[role="tree"],[role="grid"]') !== event.currentTarget))
              return;
            stringRef.current.length > 0 && stringRef.current[0] !== " " && (dataRef.current.typing = !0, event.key === " " && stopEvent(event));
            let listContent = listRef.current;
            if (listContent == null || ignoreKeysRef.current.includes(event.key) || // Character key.
            event.key.length !== 1 || // Modifier key.
            event.ctrlKey || event.metaKey || event.altKey)
              return;
            listContent.every((text) => {
              var _text$, _text$2;
              return text ? ((_text$ = text[0]) == null ? void 0 : _text$.toLocaleLowerCase()) !== ((_text$2 = text[1]) == null ? void 0 : _text$2.toLocaleLowerCase()) : !0;
            }) && stringRef.current === event.key && (stringRef.current = "", prevIndexRef.current = matchIndexRef.current), stringRef.current += event.key, clearTimeout(timeoutIdRef.current), timeoutIdRef.current = setTimeout(() => {
              stringRef.current = "", prevIndexRef.current = matchIndexRef.current, dataRef.current.typing = !1;
            }, resetMs);
            let prevIndex = prevIndexRef.current, orderedList = [...listContent.slice((prevIndex || 0) + 1), ...listContent.slice(0, (prevIndex || 0) + 1)], str = findMatchRef.current ? findMatchRef.current(orderedList, stringRef.current) : orderedList.find((text) => (text == null ? void 0 : text.toLocaleLowerCase().indexOf(stringRef.current.toLocaleLowerCase())) === 0), index4 = str ? listContent.indexOf(str) : -1;
            index4 !== -1 && (onMatch(index4), matchIndexRef.current = index4);
          }
          return {
            reference: {
              onKeyDown
            },
            floating: {
              onKeyDown
            }
          };
        }, [enabled, dataRef, listRef, resetMs, ignoreKeysRef, findMatchRef, onMatch]);
      };
      function getArgsWithCustomFloatingHeight(args, height) {
        return {
          ...args,
          rects: {
            ...args.rects,
            floating: {
              ...args.rects.floating,
              height
            }
          }
        };
      }
      let inner = (props) => ({
        name: "inner",
        options: props,
        async fn(middlewareArguments) {
          let {
            listRef,
            overflowRef,
            onFallbackChange,
            offset: innerOffset = 0,
            index: index4 = 0,
            minItemsVisible = 4,
            referenceOverflowThreshold = 0,
            scrollRef,
            ...detectOverflowOptions
          } = props, {
            rects,
            elements: {
              floating
            }
          } = middlewareArguments, item = listRef.current[index4];
          if (middlewareArguments.placement.startsWith("bottom") || console.warn(['Floating UI: `placement` side must be "bottom" when using the', "`inner` middleware."].join(" ")), !item)
            return {};
          let nextArgs = {
            ...middlewareArguments,
            ...await reactDom.offset(-item.offsetTop - rects.reference.height / 2 - item.offsetHeight / 2 - innerOffset).fn(middlewareArguments)
          }, el = (scrollRef == null ? void 0 : scrollRef.current) || floating, overflow = await reactDom.detectOverflow(getArgsWithCustomFloatingHeight(nextArgs, el.scrollHeight), detectOverflowOptions), refOverflow = await reactDom.detectOverflow(nextArgs, {
            ...detectOverflowOptions,
            elementContext: "reference"
          }), diffY = Math.max(0, overflow.top), nextY = nextArgs.y + diffY, maxHeight = Math.max(0, el.scrollHeight - diffY - Math.max(0, overflow.bottom));
          return el.style.maxHeight = maxHeight + "px", el.scrollTop = diffY, onFallbackChange && (el.offsetHeight < item.offsetHeight * Math.min(minItemsVisible, listRef.current.length - 1) - 1 || refOverflow.top >= -referenceOverflowThreshold || refOverflow.bottom >= -referenceOverflowThreshold ? reactDom$1.flushSync(() => onFallbackChange(!0)) : reactDom$1.flushSync(() => onFallbackChange(!1))), overflowRef && (overflowRef.current = await reactDom.detectOverflow(getArgsWithCustomFloatingHeight({
            ...nextArgs,
            y: nextY
          }, el.offsetHeight), detectOverflowOptions)), {
            y: nextY
          };
        }
      }), useInnerOffset = (_ref, _ref2) => {
        let {
          open,
          elements
        } = _ref, {
          enabled = !0,
          overflowRef,
          scrollRef,
          onChange: unstable_onChange
        } = _ref2, onChange = useEvent(unstable_onChange), controlledScrollingRef = React__namespace.useRef(!1), prevScrollTopRef = React__namespace.useRef(null), initialOverflowRef = React__namespace.useRef(null);
        return React__namespace.useEffect(() => {
          if (!enabled)
            return;
          function onWheel(e5) {
            if (e5.ctrlKey || !el || overflowRef.current == null)
              return;
            let dY = e5.deltaY, isAtTop = overflowRef.current.top >= -0.5, isAtBottom = overflowRef.current.bottom >= -0.5, remainingScroll = el.scrollHeight - el.clientHeight, sign2 = dY < 0 ? -1 : 1, method = dY < 0 ? "max" : "min";
            el.scrollHeight <= el.clientHeight || (!isAtTop && dY > 0 || !isAtBottom && dY < 0 ? (e5.preventDefault(), reactDom$1.flushSync(() => {
              onChange((d12) => d12 + Math[method](dY, remainingScroll * sign2));
            })) : /firefox/i.test(getUserAgent()) && (el.scrollTop += dY));
          }
          let el = (scrollRef == null ? void 0 : scrollRef.current) || elements.floating;
          if (open && el)
            return el.addEventListener("wheel", onWheel), requestAnimationFrame(() => {
              prevScrollTopRef.current = el.scrollTop, overflowRef.current != null && (initialOverflowRef.current = {
                ...overflowRef.current
              });
            }), () => {
              prevScrollTopRef.current = null, initialOverflowRef.current = null, el.removeEventListener("wheel", onWheel);
            };
        }, [enabled, open, elements.floating, overflowRef, scrollRef, onChange]), React__namespace.useMemo(() => enabled ? {
          floating: {
            onKeyDown() {
              controlledScrollingRef.current = !0;
            },
            onWheel() {
              controlledScrollingRef.current = !1;
            },
            onPointerMove() {
              controlledScrollingRef.current = !1;
            },
            onScroll() {
              let el = (scrollRef == null ? void 0 : scrollRef.current) || elements.floating;
              if (!(!overflowRef.current || !el || !controlledScrollingRef.current)) {
                if (prevScrollTopRef.current !== null) {
                  let scrollDiff = el.scrollTop - prevScrollTopRef.current;
                  (overflowRef.current.bottom < -0.5 && scrollDiff < -1 || overflowRef.current.top < -0.5 && scrollDiff > 1) && reactDom$1.flushSync(() => onChange((d12) => d12 + scrollDiff));
                }
                requestAnimationFrame(() => {
                  prevScrollTopRef.current = el.scrollTop;
                });
              }
            }
          }
        } : {}, [enabled, overflowRef, elements.floating, scrollRef, onChange]);
      };
      function isPointInPolygon(point2, polygon) {
        let [x5, y6] = point2, isInside2 = !1, length2 = polygon.length;
        for (let i7 = 0, j5 = length2 - 1; i7 < length2; j5 = i7++) {
          let [xi, yi] = polygon[i7] || [0, 0], [xj, yj] = polygon[j5] || [0, 0];
          yi >= y6 != yj >= y6 && x5 <= (xj - xi) * (y6 - yi) / (yj - yi) + xi && (isInside2 = !isInside2);
        }
        return isInside2;
      }
      function isInside(point2, rect) {
        return point2[0] >= rect.x && point2[0] <= rect.x + rect.width && point2[1] >= rect.y && point2[1] <= rect.y + rect.height;
      }
      function safePolygon(_temp) {
        let {
          restMs = 0,
          buffer = 0.5,
          blockPointerEvents = !1
        } = _temp === void 0 ? {} : _temp, timeoutId2, isInsideRect = !1, hasLanded = !1, fn = (_ref) => {
          let {
            x: x5,
            y: y6,
            placement,
            elements,
            onClose,
            nodeId,
            tree
          } = _ref;
          return function(event) {
            function close() {
              clearTimeout(timeoutId2), onClose();
            }
            if (clearTimeout(timeoutId2), !elements.domReference || !elements.floating || placement == null || x5 == null || y6 == null)
              return;
            let {
              clientX,
              clientY
            } = event, clientPoint = [clientX, clientY], target = getTarget(event), isLeave = event.type === "mouseleave", isOverFloatingEl = contains(elements.floating, target), isOverReferenceEl = contains(elements.domReference, target), refRect = elements.domReference.getBoundingClientRect(), rect = elements.floating.getBoundingClientRect(), side = placement.split("-")[0], cursorLeaveFromRight = x5 > rect.right - rect.width / 2, cursorLeaveFromBottom = y6 > rect.bottom - rect.height / 2, isOverReferenceRect = isInside(clientPoint, refRect);
            if (isOverFloatingEl && (hasLanded = !0), isOverReferenceEl && (hasLanded = !1), isOverReferenceEl && !isLeave) {
              hasLanded = !0;
              return;
            }
            if (isLeave && isElement(event.relatedTarget) && contains(elements.floating, event.relatedTarget) || tree && getChildren(tree.nodesRef.current, nodeId).some((_ref2) => {
              let {
                context
              } = _ref2;
              return context == null ? void 0 : context.open;
            }))
              return;
            if (side === "top" && y6 >= refRect.bottom - 1 || side === "bottom" && y6 <= refRect.top + 1 || side === "left" && x5 >= refRect.right - 1 || side === "right" && x5 <= refRect.left + 1)
              return close();
            let rectPoly = [];
            switch (side) {
              case "top":
                rectPoly = [[rect.left, refRect.top + 1], [rect.left, rect.bottom - 1], [rect.right, rect.bottom - 1], [rect.right, refRect.top + 1]], isInsideRect = clientX >= rect.left && clientX <= rect.right && clientY >= rect.top && clientY <= refRect.top + 1;
                break;
              case "bottom":
                rectPoly = [[rect.left, rect.top + 1], [rect.left, refRect.bottom - 1], [rect.right, refRect.bottom - 1], [rect.right, rect.top + 1]], isInsideRect = clientX >= rect.left && clientX <= rect.right && clientY >= refRect.bottom - 1 && clientY <= rect.bottom;
                break;
              case "left":
                rectPoly = [[rect.right - 1, rect.bottom], [rect.right - 1, rect.top], [refRect.left + 1, rect.top], [refRect.left + 1, rect.bottom]], isInsideRect = clientX >= rect.left && clientX <= refRect.left + 1 && clientY >= rect.top && clientY <= rect.bottom;
                break;
              case "right":
                rectPoly = [[refRect.right - 1, rect.bottom], [refRect.right - 1, rect.top], [rect.left + 1, rect.top], [rect.left + 1, rect.bottom]], isInsideRect = clientX >= refRect.right - 1 && clientX <= rect.right && clientY >= rect.top && clientY <= rect.bottom;
                break;
            }
            function getPolygon(_ref3) {
              let [x6, y7] = _ref3, isFloatingWider = rect.width > refRect.width, isFloatingTaller = rect.height > refRect.height;
              switch (side) {
                case "top": {
                  let cursorPointOne = [isFloatingWider ? x6 + buffer / 2 : cursorLeaveFromRight ? x6 + buffer * 4 : x6 - buffer * 4, y7 + buffer + 1], cursorPointTwo = [isFloatingWider ? x6 - buffer / 2 : cursorLeaveFromRight ? x6 + buffer * 4 : x6 - buffer * 4, y7 + buffer + 1], commonPoints = [[rect.left, cursorLeaveFromRight || isFloatingWider ? rect.bottom - buffer : rect.top], [rect.right, cursorLeaveFromRight ? isFloatingWider ? rect.bottom - buffer : rect.top : rect.bottom - buffer]];
                  return [cursorPointOne, cursorPointTwo, ...commonPoints];
                }
                case "bottom": {
                  let cursorPointOne = [isFloatingWider ? x6 + buffer / 2 : cursorLeaveFromRight ? x6 + buffer * 4 : x6 - buffer * 4, y7 - buffer], cursorPointTwo = [isFloatingWider ? x6 - buffer / 2 : cursorLeaveFromRight ? x6 + buffer * 4 : x6 - buffer * 4, y7 - buffer], commonPoints = [[rect.left, cursorLeaveFromRight || isFloatingWider ? rect.top + buffer : rect.bottom], [rect.right, cursorLeaveFromRight ? isFloatingWider ? rect.top + buffer : rect.bottom : rect.top + buffer]];
                  return [cursorPointOne, cursorPointTwo, ...commonPoints];
                }
                case "left": {
                  let cursorPointOne = [x6 + buffer + 1, isFloatingTaller ? y7 + buffer / 2 : cursorLeaveFromBottom ? y7 + buffer * 4 : y7 - buffer * 4], cursorPointTwo = [x6 + buffer + 1, isFloatingTaller ? y7 - buffer / 2 : cursorLeaveFromBottom ? y7 + buffer * 4 : y7 - buffer * 4];
                  return [...[[cursorLeaveFromBottom || isFloatingTaller ? rect.right - buffer : rect.left, rect.top], [cursorLeaveFromBottom ? isFloatingTaller ? rect.right - buffer : rect.left : rect.right - buffer, rect.bottom]], cursorPointOne, cursorPointTwo];
                }
                case "right": {
                  let cursorPointOne = [x6 - buffer, isFloatingTaller ? y7 + buffer / 2 : cursorLeaveFromBottom ? y7 + buffer * 4 : y7 - buffer * 4], cursorPointTwo = [x6 - buffer, isFloatingTaller ? y7 - buffer / 2 : cursorLeaveFromBottom ? y7 + buffer * 4 : y7 - buffer * 4], commonPoints = [[cursorLeaveFromBottom || isFloatingTaller ? rect.left + buffer : rect.right, rect.top], [cursorLeaveFromBottom ? isFloatingTaller ? rect.left + buffer : rect.right : rect.left + buffer, rect.bottom]];
                  return [cursorPointOne, cursorPointTwo, ...commonPoints];
                }
              }
            }
            let poly = isInsideRect ? rectPoly : getPolygon([x5, y6]);
            if (!isInsideRect) {
              if (hasLanded && !isOverReferenceRect)
                return close();
              isPointInPolygon([clientX, clientY], poly) ? restMs && !hasLanded && (timeoutId2 = setTimeout(close, restMs)) : close();
            }
          };
        };
        return fn.__options = {
          blockPointerEvents
        }, fn;
      }
      function useFloating(options) {
        options === void 0 && (options = {});
        let {
          open = !1,
          onOpenChange: unstable_onOpenChange,
          nodeId
        } = options, position = reactDom.useFloating(options), tree = useFloatingTree(), domReferenceRef = React__namespace.useRef(null), dataRef = React__namespace.useRef({}), events = React__namespace.useState(() => createPubSub())[0], [domReference, setDomReference] = React__namespace.useState(null), setPositionReference = React__namespace.useCallback((node) => {
          let positionReference = isElement(node) ? {
            getBoundingClientRect: () => node.getBoundingClientRect(),
            contextElement: node
          } : node;
          position.refs.setReference(positionReference);
        }, [position.refs]), setReference = React__namespace.useCallback((node) => {
          (isElement(node) || node === null) && (domReferenceRef.current = node, setDomReference(node)), (isElement(position.refs.reference.current) || position.refs.reference.current === null || // Don't allow setting virtual elements using the old technique back to
          // `null` to support `positionReference` + an unstable `reference`
          // callback ref.
          node !== null && !isElement(node)) && position.refs.setReference(node);
        }, [position.refs]), refs = React__namespace.useMemo(() => ({
          ...position.refs,
          setReference,
          setPositionReference,
          domReference: domReferenceRef
        }), [position.refs, setReference, setPositionReference]), elements = React__namespace.useMemo(() => ({
          ...position.elements,
          domReference
        }), [position.elements, domReference]), onOpenChange = useEvent(unstable_onOpenChange), context = React__namespace.useMemo(() => ({
          ...position,
          refs,
          elements,
          dataRef,
          nodeId,
          events,
          open,
          onOpenChange
        }), [position, nodeId, events, open, onOpenChange, refs, elements]);
        return index3(() => {
          let node = tree == null ? void 0 : tree.nodesRef.current.find((node2) => node2.id === nodeId);
          node && (node.context = context);
        }), React__namespace.useMemo(() => ({
          ...position,
          context,
          refs,
          reference: setReference,
          positionReference: setPositionReference
        }), [position, refs, context, setReference, setPositionReference]);
      }
      function mergeProps(userProps, propsList, elementKey) {
        let map = /* @__PURE__ */ new Map();
        return {
          ...elementKey === "floating" && {
            tabIndex: -1
          },
          ...userProps,
          ...propsList.map((value) => value ? value[elementKey] : null).concat(userProps).reduce((acc, props) => (props && Object.entries(props).forEach((_ref) => {
            let [key, value] = _ref;
            if (key.indexOf("on") === 0) {
              if (map.has(key) || map.set(key, []), typeof value == "function") {
                var _map$get;
                (_map$get = map.get(key)) == null || _map$get.push(value), acc[key] = function() {
                  for (var _map$get2, _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)
                    args[_key] = arguments[_key];
                  (_map$get2 = map.get(key)) == null || _map$get2.forEach((fn) => fn(...args));
                };
              }
            } else
              acc[key] = value;
          }), acc), {})
        };
      }
      let useInteractions = function(propsList) {
        propsList === void 0 && (propsList = []);
        let deps = propsList, getReferenceProps = React__namespace.useCallback(
          (userProps) => mergeProps(userProps, propsList, "reference"),
          // eslint-disable-next-line react-hooks/exhaustive-deps
          deps
        ), getFloatingProps = React__namespace.useCallback(
          (userProps) => mergeProps(userProps, propsList, "floating"),
          // eslint-disable-next-line react-hooks/exhaustive-deps
          deps
        ), getItemProps = React__namespace.useCallback(
          (userProps) => mergeProps(userProps, propsList, "item"),
          // Granularly check for `item` changes, because the `getItemProps` getter
          // should be as referentially stable as possible since it may be passed as
          // a prop to many components. All `item` key values must therefore be
          // memoized.
          // eslint-disable-next-line react-hooks/exhaustive-deps
          propsList.map((key) => key == null ? void 0 : key.item)
        );
        return React__namespace.useMemo(() => ({
          getReferenceProps,
          getFloatingProps,
          getItemProps
        }), [getReferenceProps, getFloatingProps, getItemProps]);
      };
      Object.defineProperty(exports2, "arrow", {
        enumerable: !0,
        get: function() {
          return reactDom.arrow;
        }
      }), Object.defineProperty(exports2, "autoPlacement", {
        enumerable: !0,
        get: function() {
          return dom.autoPlacement;
        }
      }), Object.defineProperty(exports2, "autoUpdate", {
        enumerable: !0,
        get: function() {
          return dom.autoUpdate;
        }
      }), Object.defineProperty(exports2, "computePosition", {
        enumerable: !0,
        get: function() {
          return dom.computePosition;
        }
      }), Object.defineProperty(exports2, "detectOverflow", {
        enumerable: !0,
        get: function() {
          return dom.detectOverflow;
        }
      }), Object.defineProperty(exports2, "flip", {
        enumerable: !0,
        get: function() {
          return dom.flip;
        }
      }), Object.defineProperty(exports2, "getOverflowAncestors", {
        enumerable: !0,
        get: function() {
          return dom.getOverflowAncestors;
        }
      }), Object.defineProperty(exports2, "hide", {
        enumerable: !0,
        get: function() {
          return dom.hide;
        }
      }), Object.defineProperty(exports2, "inline", {
        enumerable: !0,
        get: function() {
          return dom.inline;
        }
      }), Object.defineProperty(exports2, "limitShift", {
        enumerable: !0,
        get: function() {
          return dom.limitShift;
        }
      }), Object.defineProperty(exports2, "offset", {
        enumerable: !0,
        get: function() {
          return dom.offset;
        }
      }), Object.defineProperty(exports2, "platform", {
        enumerable: !0,
        get: function() {
          return dom.platform;
        }
      }), Object.defineProperty(exports2, "shift", {
        enumerable: !0,
        get: function() {
          return dom.shift;
        }
      }), Object.defineProperty(exports2, "size", {
        enumerable: !0,
        get: function() {
          return dom.size;
        }
      }), exports2.FloatingDelayGroup = FloatingDelayGroup, exports2.FloatingFocusManager = FloatingFocusManager, exports2.FloatingNode = FloatingNode, exports2.FloatingOverlay = FloatingOverlay, exports2.FloatingPortal = FloatingPortal, exports2.FloatingTree = FloatingTree, exports2.inner = inner, exports2.safePolygon = safePolygon, exports2.useClick = useClick, exports2.useDelayGroup = useDelayGroup, exports2.useDelayGroupContext = useDelayGroupContext, exports2.useDismiss = useDismiss, exports2.useFloating = useFloating, exports2.useFloatingNodeId = useFloatingNodeId, exports2.useFloatingParentNodeId = useFloatingParentNodeId, exports2.useFloatingPortalNode = useFloatingPortalNode, exports2.useFloatingTree = useFloatingTree, exports2.useFocus = useFocus, exports2.useHover = useHover, exports2.useId = useId, exports2.useInnerOffset = useInnerOffset, exports2.useInteractions = useInteractions, exports2.useListNavigation = useListNavigation, exports2.useMergeRefs = useMergeRefs, exports2.useRole = useRole, exports2.useTransitionStatus = useTransitionStatus, exports2.useTransitionStyles = useTransitionStyles, exports2.useTypeahead = useTypeahead, Object.defineProperty(exports2, "__esModule", { value: !0 });
    });
  }
});

// node_modules/@material-tailwind/react/components/Dialog/DialogHeader.js
var require_DialogHeader = __commonJS({
  "node_modules/@material-tailwind/react/components/Dialog/DialogHeader.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { DialogHeader: function() {
      return DialogHeader;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _dialog = require_dialog();
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var DialogHeader = _react.default.forwardRef(function(_param, ref) {
      var className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["className", "children"]), dialogHeader = (0, _theme.useTheme)().dialogHeader, defaultProps = dialogHeader.defaultProps, base = dialogHeader.styles.base;
      className = className ?? defaultProps.className;
      var dialogHeaderClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base)), className);
      return _react.default.createElement("div", _extends5({}, rest, { ref, className: dialogHeaderClasses }), children);
    });
    DialogHeader.propTypes = { className: _dialog.propTypesClassName, children: _dialog.propTypesChildren };
    DialogHeader.displayName = "MaterialTailwind.DialogHeader";
    var _default = DialogHeader;
  }
});

// node_modules/@material-tailwind/react/components/Dialog/DialogBody.js
var require_DialogBody = __commonJS({
  "node_modules/@material-tailwind/react/components/Dialog/DialogBody.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { DialogBody: function() {
      return DialogBody;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _dialog = require_dialog();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var DialogBody = _react.default.forwardRef(function(_param, ref) {
      var divider = _param.divider, className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["divider", "className", "children"]), dialogBody = (0, _theme.useTheme)().dialogBody, defaultProps = dialogBody.defaultProps, base = dialogBody.styles.base;
      className = className ?? defaultProps.className;
      var dialogBodyClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.initial), _defineProperty2({}, (0, _objectsToString.default)(base.divider), divider)), className);
      return _react.default.createElement("div", _extends5({}, rest, { ref, className: dialogBodyClasses }), children);
    });
    DialogBody.propTypes = { divider: _dialog.propTypesDivider, className: _dialog.propTypesClassName, children: _dialog.propTypesChildren };
    DialogBody.displayName = "MaterialTailwind.DialogBody";
    var _default = DialogBody;
  }
});

// node_modules/@material-tailwind/react/components/Dialog/DialogFooter.js
var require_DialogFooter = __commonJS({
  "node_modules/@material-tailwind/react/components/Dialog/DialogFooter.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { DialogFooter: function() {
      return DialogFooter;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _dialog = require_dialog();
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var DialogFooter = _react.default.forwardRef(function(_param, ref) {
      var className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["className", "children"]), dialogFooter = (0, _theme.useTheme)().dialogFooter, defaultProps = dialogFooter.defaultProps, base = dialogFooter.styles.base;
      className = className ?? defaultProps.className;
      var dialogFooterClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base)), className);
      return _react.default.createElement("div", _extends5({}, rest, { ref, className: dialogFooterClasses }), children);
    });
    DialogFooter.propTypes = { className: _dialog.propTypesClassName, children: _dialog.propTypesChildren };
    DialogFooter.displayName = "MaterialTailwind.DialogFooter";
    var _default = DialogFooter;
  }
});

// node_modules/@material-tailwind/react/components/Dialog/index.js
var require_Dialog = __commonJS({
  "node_modules/@material-tailwind/react/components/Dialog/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Dialog: function() {
      return Dialog;
    }, DialogHeader: function() {
      return _dialogHeader.DialogHeader;
    }, DialogBody: function() {
      return _dialogBody.DialogBody;
    }, DialogFooter: function() {
      return _dialogFooter.DialogFooter;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _react1 = require_floating_ui_react_umd(), _framerMotion = require_cjs2(), _classnames = _interopRequireDefault(require_classnames()), _deepmerge = _interopRequireDefault(require_cjs()), _tailwindMerge = require_dist2(), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _dialog = require_dialog(), _dialogHeader = require_DialogHeader(), _dialogBody = require_DialogBody(), _dialogFooter = require_DialogFooter();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectSpread(target) {
      for (var i7 = 1; i7 < arguments.length; i7++) {
        var source = arguments[i7] != null ? arguments[i7] : {}, ownKeys2 = Object.keys(source);
        typeof Object.getOwnPropertySymbols == "function" && (ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }))), ownKeys2.forEach(function(key) {
          _defineProperty2(target, key, source[key]);
        });
      }
      return target;
    }
    function ownKeys(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        })), keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpreadProps(target, source) {
      return source = source ?? {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      }), target;
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Dialog = _react.default.forwardRef(function(_param, ref) {
      var open = _param.open, handler = _param.handler, size = _param.size, dismiss = _param.dismiss, animate2 = _param.animate, className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["open", "handler", "size", "dismiss", "animate", "className", "children"]), dialog = (0, _theme.useTheme)().dialog, defaultProps = dialog.defaultProps, valid = dialog.valid, _dialog_styles = dialog.styles, base = _dialog_styles.base, sizes = _dialog_styles.sizes;
      handler = handler ?? void 0, size = size ?? defaultProps.size, dismiss = dismiss ?? defaultProps.dismiss, animate2 = animate2 ?? defaultProps.animate, className = className ?? defaultProps.className;
      var backdropClasses = (0, _classnames.default)((0, _objectsToString.default)(base.backdrop)), dialogClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.container), (0, _objectsToString.default)(sizes[(0, _findMatch.default)(valid.sizes, size, "md")])), className), animation = { unmount: { opacity: 0, y: -50, transition: { duration: 0.3 } }, mount: { opacity: 1, y: 0, transition: { duration: 0.3 } } }, backdropAnimation = { unmount: { opacity: 0, transition: { delay: 0.2 } }, mount: { opacity: 1 } }, appliedAnimation = (0, _deepmerge.default)(animation, animate2), _useFloating = (0, _react1.useFloating)({ open, onOpenChange: handler }), floating = _useFloating.floating, context = _useFloating.context, id = (0, _react1.useId)(), labelId = "".concat(id, "-label"), descriptionId = "".concat(id, "-description"), getFloatingProps = (0, _react1.useInteractions)([(0, _react1.useClick)(context), (0, _react1.useRole)(context), (0, _react1.useDismiss)(context, dismiss)]).getFloatingProps, mergedRef = (0, _react1.useMergeRefs)([ref, floating]), NewAnimatePresence = _framerMotion.AnimatePresence;
      return _react.default.createElement(_framerMotion.LazyMotion, { features: _framerMotion.domAnimation }, _react.default.createElement(_react1.FloatingPortal, null, _react.default.createElement(NewAnimatePresence, null, open && _react.default.createElement(_react1.FloatingOverlay, { style: { zIndex: 9999 }, lockScroll: !0 }, _react.default.createElement(_react1.FloatingFocusManager, { context }, _react.default.createElement(_framerMotion.m.div, { className: size === "xxl" ? "" : backdropClasses, initial: "unmount", exit: "unmount", animate: open ? "mount" : "unmount", variants: backdropAnimation, transition: { duration: 0.2 } }, _react.default.createElement(_framerMotion.m.div, _extends5({}, getFloatingProps(_objectSpreadProps(_objectSpread({}, rest), { ref: mergedRef, className: dialogClasses, "aria-labelledby": labelId, "aria-describedby": descriptionId })), { initial: "unmount", exit: "unmount", animate: open ? "mount" : "unmount", variants: appliedAnimation }), children)))))));
    });
    Dialog.propTypes = { open: _dialog.propTypesOpen, handler: _dialog.propTypesHandler, size: _propTypes.default.oneOf(_dialog.propTypesSize), dismiss: _dialog.propTypesDismiss, animate: _dialog.propTypesAnimate, className: _dialog.propTypesClassName, children: _dialog.propTypesChildren };
    Dialog.displayName = "MaterialTailwind.Dialog";
    var _default = Object.assign(Dialog, { Header: _dialogHeader.DialogHeader, Body: _dialogBody.DialogBody, Footer: _dialogFooter.DialogFooter });
  }
});

// node_modules/@material-tailwind/react/components/Input/index.js
var require_Input = __commonJS({
  "node_modules/@material-tailwind/react/components/Input/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Input: function() {
      return Input3;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _classnames = _interopRequireDefault(require_classnames()), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _input = require_input();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Input3 = _react.default.forwardRef(function(_param, ref) {
      var variant = _param.variant, color = _param.color, size = _param.size, label = _param.label, error = _param.error, success = _param.success, icon = _param.icon, containerProps = _param.containerProps, labelProps = _param.labelProps, className = _param.className, shrink = _param.shrink, inputRef = _param.inputRef, rest = _objectWithoutProperties(_param, ["variant", "color", "size", "label", "error", "success", "icon", "containerProps", "labelProps", "className", "shrink", "inputRef"]), input = (0, _theme.useTheme)().input, defaultProps = input.defaultProps, valid = input.valid, styles = input.styles, base = styles.base, variants = styles.variants;
      variant = variant ?? defaultProps.variant, size = size ?? defaultProps.size, color = color ?? defaultProps.color, label = label ?? defaultProps.label, labelProps = labelProps ?? defaultProps.labelProps, containerProps = containerProps ?? defaultProps.containerProps, className = className ?? defaultProps.className, shrink = shrink ?? defaultProps.shrink, icon = icon ?? defaultProps.icon;
      var inputVariant = variants[(0, _findMatch.default)(valid.variants, variant, "outlined")], inputSize = inputVariant.sizes[(0, _findMatch.default)(valid.sizes, size, "md")], inputError = (0, _objectsToString.default)(inputVariant.error.input), inputSuccess = (0, _objectsToString.default)(inputVariant.success.input), inputShrink = (0, _objectsToString.default)(inputVariant.shrink.input), inputColor = (0, _objectsToString.default)(inputVariant.colors.input[(0, _findMatch.default)(valid.colors, color, "gray")]), labelError = (0, _objectsToString.default)(inputVariant.error.label), labelSuccess = (0, _objectsToString.default)(inputVariant.success.label), labelShrink = (0, _objectsToString.default)(inputVariant.shrink.label), labelColor = (0, _objectsToString.default)(inputVariant.colors.label[(0, _findMatch.default)(valid.colors, color, "gray")]), containerClasses = (0, _classnames.default)((0, _objectsToString.default)(base.container), (0, _objectsToString.default)(inputSize.container), containerProps == null ? void 0 : containerProps.className), inputClasses = (0, _classnames.default)((0, _objectsToString.default)(base.input), (0, _objectsToString.default)(inputVariant.base.input), (0, _objectsToString.default)(inputSize.input), _defineProperty2({}, (0, _objectsToString.default)(inputVariant.base.inputWithIcon), icon), _defineProperty2({}, inputColor, !error && !success), _defineProperty2({}, inputError, error), _defineProperty2({}, inputSuccess, success), _defineProperty2({}, inputShrink, shrink), className), labelClasses = (0, _classnames.default)((0, _objectsToString.default)(base.label), (0, _objectsToString.default)(inputVariant.base.label), (0, _objectsToString.default)(inputSize.label), _defineProperty2({}, labelColor, !error && !success), _defineProperty2({}, labelError, error), _defineProperty2({}, labelSuccess, success), _defineProperty2({}, labelShrink, shrink), labelProps == null ? void 0 : labelProps.className), iconClasses = (0, _classnames.default)((0, _objectsToString.default)(base.icon), (0, _objectsToString.default)(inputVariant.base.icon), (0, _objectsToString.default)(inputSize.icon)), asteriskClasses = (0, _classnames.default)((0, _objectsToString.default)(base.asterisk));
      return _react.default.createElement("div", _extends5({}, containerProps, { ref, className: containerClasses }), icon && _react.default.createElement("div", { className: iconClasses }, icon), _react.default.createElement("input", _extends5({}, rest, { ref: inputRef, className: inputClasses, placeholder: (rest == null ? void 0 : rest.placeholder) || " " })), _react.default.createElement("label", _extends5({}, labelProps, { className: labelClasses }), label, " ", rest.required ? _react.default.createElement("span", { className: asteriskClasses }, "*") : ""));
    });
    Input3.propTypes = { variant: _propTypes.default.oneOf(_input.propTypesVariant), size: _propTypes.default.oneOf(_input.propTypesSize), color: _propTypes.default.oneOf(_input.propTypesColor), label: _input.propTypesLabel, error: _input.propTypesError, success: _input.propTypesSuccess, icon: _input.propTypesIcon, labelProps: _input.propTypesLabelProps, containerProps: _input.propTypesContainerProps, shrink: _input.propTypesShrink, className: _input.propTypesClassName };
    Input3.displayName = "MaterialTailwind.Input";
    var _default = Input3;
  }
});

// node_modules/@material-tailwind/react/types/components/menu.js
var require_menu2 = __commonJS({
  "node_modules/@material-tailwind/react/types/components/menu.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesOpen: function() {
      return propTypesOpen;
    }, propTypesHandler: function() {
      return propTypesHandler;
    }, propTypesPlacement: function() {
      return propTypesPlacement;
    }, propTypesOffset: function() {
      return propTypesOffset;
    }, propTypesDismiss: function() {
      return propTypesDismiss;
    }, propTypesAnimate: function() {
      return propTypesAnimate;
    }, propTypesLockScroll: function() {
      return propTypesLockScroll;
    }, propTypesDisabled: function() {
      return propTypesDisabled;
    }, propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesChildren: function() {
      return propTypesChildren;
    }, propTypesContextValue: function() {
      return propTypesContextValue;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectSpread(target) {
      for (var i7 = 1; i7 < arguments.length; i7++) {
        var source = arguments[i7] != null ? arguments[i7] : {}, ownKeys2 = Object.keys(source);
        typeof Object.getOwnPropertySymbols == "function" && (ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }))), ownKeys2.forEach(function(key) {
          _defineProperty2(target, key, source[key]);
        });
      }
      return target;
    }
    function ownKeys(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        })), keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpreadProps(target, source) {
      return source = source ?? {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      }), target;
    }
    var propTypesOpen = _propTypes.default.bool, propTypesHandler = _propTypes.default.func, propTypesPlacement = _generic.propTypesPlacements, propTypesOffset = _generic.propTypesOffsetType, propTypesDismiss = _propTypes.default.shape(_objectSpreadProps(_objectSpread({}, _generic.propTypesDismissType), { itemPress: _propTypes.default.bool })), propTypesAnimate = _generic.propTypesAnimation, propTypesLockScroll = _propTypes.default.bool, propTypesDisabled = _propTypes.default.bool, propTypesClassName = _propTypes.default.string, propTypesChildren = _propTypes.default.node.isRequired, propTypesContextValue = _propTypes.default.shape({ open: _propTypes.default.bool.isRequired, handler: _propTypes.default.func.isRequired, setInternalOpen: _propTypes.default.func.isRequired, strategy: _propTypes.default.oneOf(["fixed", "absolute"]).isRequired, x: _propTypes.default.number.isRequired, y: _propTypes.default.number.isRequired, reference: _propTypes.default.func.isRequired, floating: _propTypes.default.func.isRequired, listItemsRef: _propTypes.default.instanceOf(Object).isRequired, getReferenceProps: _propTypes.default.func.isRequired, getFloatingProps: _propTypes.default.func.isRequired, getItemProps: _propTypes.default.func.isRequired, appliedAnimation: propTypesAnimate.isRequired, lockScroll: _propTypes.default.bool.isRequired, context: _propTypes.default.instanceOf(Object).isRequired, tree: _propTypes.default.any.isRequired, allowHover: _propTypes.default.bool.isRequired, activeIndex: _propTypes.default.number.isRequired, setActiveIndex: _propTypes.default.func.isRequired, nested: _propTypes.default.bool.isRequired });
  }
});

// node_modules/@material-tailwind/react/components/Menu/MenuContext.js
var require_MenuContext = __commonJS({
  "node_modules/@material-tailwind/react/components/Menu/MenuContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { MenuContext: function() {
      return MenuContext;
    }, useMenu: function() {
      return useMenu;
    }, MenuContextProvider: function() {
      return MenuContextProvider;
    } });
    var _react = _interopRequireDefault(require_react()), _menu = require_menu2();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var MenuContext = _react.default.createContext(null);
    MenuContext.displayName = "MaterialTailwind.MenuContext";
    function useMenu() {
      var context = _react.default.useContext(MenuContext);
      if (!context)
        throw new Error("useMenu() must be used within a Menu. It happens when you use MenuCore, MenuHandler, MenuItem or MenuList components outside the Menu component.");
      return context;
    }
    var MenuContextProvider = function(param) {
      var value = param.value, children = param.children;
      return _react.default.createElement(MenuContext.Provider, { value }, children);
    };
    MenuContextProvider.prototypes = { value: _menu.propTypesContextValue, children: _menu.propTypesChildren };
    MenuContextProvider.displayName = "MaterialTailwind.MenuContextProvider";
  }
});

// node_modules/@material-tailwind/react/components/Menu/MenuCore.js
var require_MenuCore = __commonJS({
  "node_modules/@material-tailwind/react/components/Menu/MenuCore.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { MenuCore: function() {
      return MenuCore;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _react1 = require_floating_ui_react_umd(), _deepmerge = _interopRequireDefault(require_cjs()), _theme = require_theme2(), _menuContext = require_MenuContext(), _menu = require_menu2();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithHoles2(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArrayLimit2(arr, i7) {
      var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i != null) {
        var _arr = [], _n = !0, _d = !1, _s, _e3;
        try {
          for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i7 && _arr.length === i7)); _n = !0)
            ;
        } catch (err) {
          _d = !0, _e3 = err;
        } finally {
          try {
            !_n && _i.return != null && _i.return();
          } finally {
            if (_d)
              throw _e3;
          }
        }
        return _arr;
      }
    }
    function _nonIterableRest2() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _slicedToArray2(arr, i7) {
      return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i7) || _unsupportedIterableToArray2(arr, i7) || _nonIterableRest2();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var MenuCore = _react.default.forwardRef(function(param, ref) {
      var open = param.open, handler = param.handler, placement = param.placement, offset = param.offset, dismiss = param.dismiss, animate2 = param.animate, lockScroll = param.lockScroll, allowHover = param.allowHover, children = param.children, menu = (0, _theme.useTheme)().menu, defaultProps = menu.defaultProps, _React_useState = _slicedToArray2(_react.default.useState(!1), 2), internalOpen = _React_useState[0], setInternalOpen = _React_useState[1], _React_useState1 = _slicedToArray2(_react.default.useState(!1), 2), internalAllowHover = _React_useState1[0], setInternalAllowHover = _React_useState1[1];
      open = open ?? internalOpen, handler = handler ?? setInternalOpen, placement = placement ?? defaultProps.placement, offset = offset ?? defaultProps.offset, dismiss = dismiss ?? defaultProps.dismiss, animate2 = animate2 ?? defaultProps.animate, lockScroll = lockScroll ?? defaultProps.lockScroll;
      var animation = { unmount: { opacity: 0, transformOrigin: "top", transform: "scale(0.95)", transition: { duration: 0.2, times: [0.4, 0, 0.2, 1] } }, mount: { opacity: 1, transformOrigin: "top", transform: "scale(1)", transition: { duration: 0.2, times: [0.4, 0, 0.2, 1] } } }, appliedAnimation = (0, _deepmerge.default)(animation, animate2), _React_useState2 = _slicedToArray2(_react.default.useState(null), 2), activeIndex = _React_useState2[0], setActiveIndex = _React_useState2[1], listItemsRef = _react.default.useRef([]), listContentRef = _react.default.useRef(_react.default.Children.map(children, function(child) {
        return _react.default.isValidElement(child) ? child.props.label : null;
      })), tree = (0, _react1.useFloatingTree)(), nodeId = (0, _react1.useFloatingNodeId)(), parentId = (0, _react1.useFloatingParentNodeId)(), nested = parentId != null, _useFloating = (0, _react1.useFloating)({ open, nodeId, placement, onOpenChange: handler, middleware: [(0, _react1.offset)(offset), (0, _react1.flip)(), (0, _react1.shift)()], whileElementsMounted: _react1.autoUpdate }), x5 = _useFloating.x, y6 = _useFloating.y, strategy = _useFloating.strategy, refs = _useFloating.refs, context = _useFloating.context, _useInteractions = (0, _react1.useInteractions)([(0, _react1.useHover)(context, { handleClose: (0, _react1.safePolygon)({ restMs: 25, blockPointerEvents: !0 }), enabled: allowHover || nested && internalAllowHover, delay: { open: 75 } }), (0, _react1.useClick)(context, { toggle: !nested || !internalAllowHover, event: "mousedown", ignoreMouse: nested }), (0, _react1.useRole)(context, { role: "menu" }), (0, _react1.useDismiss)(context, dismiss), (0, _react1.useListNavigation)(context, { listRef: listItemsRef, activeIndex, nested, onNavigate: setActiveIndex }), (0, _react1.useTypeahead)(context, { listRef: listContentRef, onMatch: open ? setActiveIndex : void 0, activeIndex })]), getReferenceProps = _useInteractions.getReferenceProps, getFloatingProps = _useInteractions.getFloatingProps, getItemProps = _useInteractions.getItemProps;
      _react.default.useEffect(function() {
        var handleTreeClick = function() {
          dismiss.itemPress && handler(!1);
        }, onSubMenuOpen = function(event) {
          event.nodeId !== nodeId && event.parentId === parentId && handler(!1);
        };
        return tree == null || tree.events.on("click", handleTreeClick), tree == null || tree.events.on("menuopen", onSubMenuOpen), function() {
          tree == null || tree.events.off("click", handleTreeClick), tree == null || tree.events.off("menuopen", onSubMenuOpen);
        };
      }, [tree, nodeId, parentId, handler, dismiss]), _react.default.useEffect(function() {
        open && (tree == null || tree.events.emit("menuopen", { parentId, nodeId }));
      }, [tree, open, nodeId, parentId]), _react.default.useEffect(function() {
        var onPointerMove = function(param2) {
          var pointerType = param2.pointerType;
          pointerType !== "touch" && setInternalAllowHover(!0);
        }, onKeyDown = function() {
          setInternalAllowHover(!1);
        };
        return window.addEventListener("pointermove", onPointerMove, { once: !0, capture: !0 }), window.addEventListener("keydown", onKeyDown, !0), function() {
          window.removeEventListener("pointermove", onPointerMove, { capture: !0 }), window.removeEventListener("keydown", onKeyDown, !0);
        };
      }, [internalAllowHover]);
      var referenceRef = (0, _react1.useMergeRefs)([refs.setReference, ref]), contextValue = _react.default.useMemo(function() {
        return { open, handler, setInternalOpen, strategy, x: x5, y: y6, reference: referenceRef, floating: refs.setFloating, listItemsRef, getReferenceProps, getFloatingProps, getItemProps, appliedAnimation, lockScroll, context, activeIndex, tree, allowHover, internalAllowHover, nested, setActiveIndex };
      }, [open, handler, setInternalOpen, strategy, x5, y6, referenceRef, refs, getReferenceProps, getFloatingProps, getItemProps, appliedAnimation, lockScroll, context, activeIndex, tree, allowHover, internalAllowHover, nested, setActiveIndex]);
      return _react.default.createElement(_menuContext.MenuContextProvider, { value: contextValue }, _react.default.createElement(_react1.FloatingNode, { id: nodeId }, children));
    });
    MenuCore.propTypes = { open: _menu.propTypesOpen, handler: _menu.propTypesHandler, placement: _propTypes.default.oneOf(_menu.propTypesPlacement), offset: _menu.propTypesOffset, dismiss: _menu.propTypesDismiss, animate: _menu.propTypesAnimate, lockScroll: _menu.propTypesLockScroll, children: _menu.propTypesChildren };
    MenuCore.displayName = "MaterialTailwind.MenuCore";
    var _default = MenuCore;
  }
});

// node_modules/@material-tailwind/react/components/Menu/MenuHandler.js
var require_MenuHandler = __commonJS({
  "node_modules/@material-tailwind/react/components/Menu/MenuHandler.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { MenuHandler: function() {
      return MenuHandler;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _react1 = require_floating_ui_react_umd(), _menuContext = require_MenuContext(), _menu = require_menu2();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectSpread(target) {
      for (var i7 = 1; i7 < arguments.length; i7++) {
        var source = arguments[i7] != null ? arguments[i7] : {}, ownKeys2 = Object.keys(source);
        typeof Object.getOwnPropertySymbols == "function" && (ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }))), ownKeys2.forEach(function(key) {
          _defineProperty2(target, key, source[key]);
        });
      }
      return target;
    }
    function ownKeys(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        })), keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpreadProps(target, source) {
      return source = source ?? {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      }), target;
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var MenuHandler = _react.default.forwardRef(function(_param, ref) {
      var children = _param.children, rest = _objectWithoutProperties(_param, ["children"]), _useMenu = (0, _menuContext.useMenu)(), getReferenceProps = _useMenu.getReferenceProps, reference = _useMenu.reference, nested = _useMenu.nested, mergedRef = (0, _react1.useMergeRefs)([ref, reference]);
      return _react.default.cloneElement(children, _objectSpread({}, getReferenceProps(_objectSpread(_objectSpreadProps(_objectSpread({}, rest), { ref: mergedRef, onClick: function(event) {
        event.stopPropagation();
      } }), nested && { role: "menuitem" }))));
    });
    MenuHandler.propTypes = { children: _menu.propTypesChildren };
    MenuHandler.displayName = "MaterialTailwind.MenuHandler";
    var _default = MenuHandler;
  }
});

// node_modules/@material-tailwind/react/components/Menu/MenuList.js
var require_MenuList = __commonJS({
  "node_modules/@material-tailwind/react/components/Menu/MenuList.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { MenuList: function() {
      return MenuList;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _react1 = require_floating_ui_react_umd(), _framerMotion = require_cjs2(), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _menuContext = require_MenuContext(), _menu = require_menu2();
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var MenuList = _react.default.forwardRef(function(_param, ref) {
      var children = _param.children, className = _param.className, rest = _objectWithoutProperties(_param, ["children", "className"]), menu = (0, _theme.useTheme)().menu, base = menu.styles.base, _useMenu = (0, _menuContext.useMenu)(), open = _useMenu.open, handler = _useMenu.handler, strategy = _useMenu.strategy, x5 = _useMenu.x, y6 = _useMenu.y, floating = _useMenu.floating, listItemsRef = _useMenu.listItemsRef, getFloatingProps = _useMenu.getFloatingProps, getItemProps = _useMenu.getItemProps, appliedAnimation = _useMenu.appliedAnimation, lockScroll = _useMenu.lockScroll, context = _useMenu.context, activeIndex = _useMenu.activeIndex, tree = _useMenu.tree, allowHover = _useMenu.allowHover, internalAllowHover = _useMenu.internalAllowHover, setActiveIndex = _useMenu.setActiveIndex, nested = _useMenu.nested;
      className = className ?? "";
      var menuClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.menu)), className), mergedRef = (0, _react1.useMergeRefs)([ref, floating]), NewAnimatePresence = _framerMotion.AnimatePresence, menuComponent = _react.default.createElement(_framerMotion.m.div, _extends5({}, rest, { ref: mergedRef, style: { position: strategy, top: y6 ?? 0, left: x5 ?? 0 }, className: menuClasses }, getFloatingProps({ onKeyDown: function(event) {
        event.key === "Tab" && (handler(!1), event.shiftKey && event.preventDefault());
      } }), { initial: "unmount", exit: "unmount", animate: open ? "mount" : "unmount", variants: appliedAnimation }), _react.default.Children.map(children, function(child, index3) {
        return _react.default.isValidElement(child) && _react.default.cloneElement(child, getItemProps({ tabIndex: activeIndex === index3 ? 0 : -1, role: "menuitem", className: child.props.className, ref: function(node) {
          listItemsRef.current[index3] = node;
        }, onClick: function(event) {
          if (child.props.onClick) {
            var _child_props, _child_props_onClick;
            (_child_props_onClick = (_child_props = child.props).onClick) === null || _child_props_onClick === void 0 || _child_props_onClick.call(_child_props, event);
          }
          tree == null || tree.events.emit("click");
        }, onMouseEnter: function() {
          (allowHover && open || internalAllowHover && open) && setActiveIndex(index3);
        } }));
      }));
      return _react.default.createElement(_framerMotion.LazyMotion, { features: _framerMotion.domAnimation }, _react.default.createElement(_react1.FloatingPortal, null, _react.default.createElement(NewAnimatePresence, null, open && _react.default.createElement(_react.default.Fragment, null, lockScroll ? _react.default.createElement(_react1.FloatingOverlay, { lockScroll: !0 }, _react.default.createElement(_react1.FloatingFocusManager, { context, modal: !nested, initialFocus: nested ? -1 : 0, returnFocus: !nested, visuallyHiddenDismiss: !0 }, menuComponent)) : _react.default.createElement(_react1.FloatingFocusManager, { context, modal: !nested, initialFocus: nested ? -1 : 0, returnFocus: !nested, visuallyHiddenDismiss: !0 }, menuComponent)))));
    });
    MenuList.propTypes = { className: _menu.propTypesClassName, children: _menu.propTypesChildren };
    MenuList.displayName = "MaterialTailwind.MenuList";
    var _default = MenuList;
  }
});

// node_modules/@material-tailwind/react/components/Menu/MenuItem.js
var require_MenuItem = __commonJS({
  "node_modules/@material-tailwind/react/components/Menu/MenuItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { MenuItem: function() {
      return MenuItem;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _menu = require_menu2();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var MenuItem = _react.default.forwardRef(function(_param, ref) {
      var _param_className = _param.className, className = _param_className === void 0 ? "" : _param_className, _param_disabled = _param.disabled, disabled = _param_disabled === void 0 ? !1 : _param_disabled, children = _param.children, rest = _objectWithoutProperties(_param, ["className", "disabled", "children"]), menu = (0, _theme.useTheme)().menu, base = menu.styles.base, menuItemClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.item.initial), _defineProperty2({}, (0, _objectsToString.default)(base.item.disabled), disabled)), className);
      return _react.default.createElement("button", _extends5({}, rest, { ref, role: "menuitem", className: menuItemClasses }), children);
    });
    MenuItem.propTypes = { className: _menu.propTypesClassName, disabled: _menu.propTypesDisabled, children: _menu.propTypesChildren };
    MenuItem.displayName = "MaterialTailwind.MenuItem";
    var _default = MenuItem;
  }
});

// node_modules/@material-tailwind/react/components/Menu/index.js
var require_Menu = __commonJS({
  "node_modules/@material-tailwind/react/components/Menu/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Menu: function() {
      return Menu;
    }, MenuHandler: function() {
      return _menuHandler.MenuHandler;
    }, MenuList: function() {
      return _menuList.MenuList;
    }, MenuItem: function() {
      return _menuItem.MenuItem;
    }, useMenu: function() {
      return _menuContext.useMenu;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _react1 = require_floating_ui_react_umd(), _menuContext = require_MenuContext(), _menuCore = require_MenuCore(), _menuHandler = require_MenuHandler(), _menuList = require_MenuList(), _menuItem = require_MenuItem();
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var Menu = _react.default.forwardRef(function(param, ref) {
      var open = param.open, handler = param.handler, placement = param.placement, offset = param.offset, dismiss = param.dismiss, animate2 = param.animate, lockScroll = param.lockScroll, allowHover = param.allowHover, children = param.children, parentId = (0, _react1.useFloatingParentNodeId)(), props = { open, handler, placement, offset, dismiss, animate: animate2, lockScroll, allowHover };
      return parentId == null ? _react.default.createElement(_react1.FloatingTree, null, _react.default.createElement(_menuCore.MenuCore, _extends5({ ref }, props), children)) : _react.default.createElement(_menuCore.MenuCore, _extends5({ ref }, props), children);
    });
    Menu.propTypes = _menuCore.MenuCore.propTypes;
    Menu.displayName = "MaterialTailwind.Menu";
    var _default = Object.assign(Menu, { Handler: _menuHandler.MenuHandler, List: _menuList.MenuList, Item: _menuItem.MenuItem });
  }
});

// node_modules/@material-tailwind/react/components/Navbar/MobileNav.js
var require_MobileNav = __commonJS({
  "node_modules/@material-tailwind/react/components/Navbar/MobileNav.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { MobileNav: function() {
      return MobileNav;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _framerMotion = require_cjs2(), _react1 = require_floating_ui_react_umd(), _deepmerge = _interopRequireDefault(require_cjs()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _navbar = require_navbar();
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var MobileNav = _react.default.forwardRef(function(_param, ref) {
      var open = _param.open, animate2 = _param.animate, className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["open", "animate", "className", "children"]), _mobileNavRef_current;
      console.error(`<MobileNav /> will be deprecated in the future versions of @material-tailwind/react use <Collapse /> instead.
      
More details: https://www.material-tailwind.com/docs/react/collapse
      `);
      var mobileNavRef = _react.default.useRef(null), navbar = (0, _theme.useTheme)().navbar, styles = navbar.styles, mobileNav = styles.base.mobileNav;
      animate2 = animate2 ?? {}, className = className ?? "";
      var classes = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(mobileNav)), className), mainAnimation = { unmount: { height: 0, opacity: 0, transition: { duration: 0.3, times: "[0.4, 0, 0.2, 1]" } }, mount: { opacity: 1, height: "".concat((_mobileNavRef_current = mobileNavRef.current) === null || _mobileNavRef_current === void 0 ? void 0 : _mobileNavRef_current.scrollHeight, "px"), transition: { duration: 0.3, times: "[0.4, 0, 0.2, 1]" } } }, appliedAnimation = (0, _deepmerge.default)(mainAnimation, animate2), NewAnimatePresence = _framerMotion.AnimatePresence, mergedRef = (0, _react1.useMergeRefs)([ref, mobileNavRef]);
      return _react.default.createElement(_framerMotion.LazyMotion, { features: _framerMotion.domAnimation }, _react.default.createElement(NewAnimatePresence, null, _react.default.createElement(_framerMotion.m.div, _extends5({}, rest, { ref: mergedRef, className: classes, initial: "unmount", exit: "unmount", animate: open ? "mount" : "unmount", variants: appliedAnimation }), children)));
    });
    MobileNav.displayName = "MaterialTailwind.MobileNav";
    MobileNav.propTypes = { open: _navbar.propTypesOpen, animate: _navbar.propTypesAnimate, className: _navbar.propTypesClassName, children: _navbar.propTypesChildren };
    var _default = MobileNav;
  }
});

// node_modules/@material-tailwind/react/components/Navbar/index.js
var require_Navbar = __commonJS({
  "node_modules/@material-tailwind/react/components/Navbar/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Navbar: function() {
      return Navbar;
    }, MobileNav: function() {
      return _mobileNav.MobileNav;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _mobileNav = require_MobileNav(), _navbar = require_navbar();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Navbar = _react.default.forwardRef(function(_param, ref) {
      var variant = _param.variant, color = _param.color, shadow = _param.shadow, blurred = _param.blurred, fullWidth = _param.fullWidth, className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["variant", "color", "shadow", "blurred", "fullWidth", "className", "children"]), navbar = (0, _theme.useTheme)().navbar, defaultProps = navbar.defaultProps, valid = navbar.valid, styles = navbar.styles, base = styles.base, variants = styles.variants;
      variant = variant ?? defaultProps.variant, color = color ?? defaultProps.color, shadow = shadow ?? defaultProps.shadow, blurred = blurred ?? defaultProps.blurred, fullWidth = fullWidth ?? defaultProps.fullWidth, className = className ?? defaultProps.className;
      var _obj, navbarRoot = (0, _classnames.default)((0, _objectsToString.default)(base.navbar.initial), (_obj = {}, _defineProperty2(_obj, (0, _objectsToString.default)(base.navbar.shadow), shadow), _defineProperty2(_obj, (0, _objectsToString.default)(base.navbar.blurred), blurred && color === "white"), _defineProperty2(_obj, (0, _objectsToString.default)(base.navbar.fullWidth), fullWidth), _obj)), navbarVariant = (0, _classnames.default)((0, _objectsToString.default)(variants[(0, _findMatch.default)(valid.variants, variant, "filled")][(0, _findMatch.default)(valid.colors, color, "white")])), navbarClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)(navbarRoot, navbarVariant), className);
      return _react.default.createElement("nav", _extends5({}, rest, { ref, className: navbarClasses }), children);
    });
    Navbar.propTypes = { variant: _propTypes.default.oneOf(_navbar.propTypesVariant), color: _propTypes.default.oneOf(_navbar.propTypesColor), shadow: _navbar.propTypesShadow, blurred: _navbar.propTypesBlurred, fullWidth: _navbar.propTypesFullWidth, className: _navbar.propTypesClassName, children: _navbar.propTypesChildren };
    Navbar.displayName = "MaterialTailwind.Navbar";
    var _default = Object.assign(Navbar, { MobileNav: _mobileNav.MobileNav });
  }
});

// node_modules/@material-tailwind/react/types/components/popover.js
var require_popover2 = __commonJS({
  "node_modules/@material-tailwind/react/types/components/popover.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesOpen: function() {
      return propTypesOpen;
    }, propTypesHandler: function() {
      return propTypesHandler;
    }, propTypesPlacement: function() {
      return propTypesPlacement;
    }, propTypesOffset: function() {
      return propTypesOffset;
    }, propTypesDismiss: function() {
      return propTypesDismiss;
    }, propTypesAnimate: function() {
      return propTypesAnimate;
    }, propTypesContent: function() {
      return propTypesContent;
    }, propTypesInteractive: function() {
      return propTypesInteractive;
    }, propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesChildren: function() {
      return propTypesChildren;
    }, propTypesContextValue: function() {
      return propTypesContextValue;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var propTypesOpen = _propTypes.default.bool, propTypesHandler = _propTypes.default.func, propTypesPlacement = _generic.propTypesPlacements, propTypesOffset = _generic.propTypesOffsetType, propTypesDismiss = _generic.propTypesDismissType, propTypesAnimate = _generic.propTypesAnimation, propTypesContent = _propTypes.default.node, propTypesInteractive = _propTypes.default.bool, propTypesClassName = _propTypes.default.string, propTypesChildren = _propTypes.default.node.isRequired, propTypesContextValue = _propTypes.default.shape({ open: _propTypes.default.bool.isRequired, strategy: _propTypes.default.oneOf(["fixed", "absolute"]).isRequired, x: _propTypes.default.number, y: _propTypes.default.number, context: _propTypes.default.instanceOf(Object).isRequired, reference: _propTypes.default.func.isRequired, floating: _propTypes.default.func.isRequired, getReferenceProps: _propTypes.default.func.isRequired, getFloatingProps: _propTypes.default.func.isRequired, appliedAnimation: propTypesAnimate.isRequired, labelId: _propTypes.default.string.isRequired, descriptionId: _propTypes.default.string.isRequired }).isRequired;
  }
});

// node_modules/@material-tailwind/react/components/Popover/PopoverContext.js
var require_PopoverContext = __commonJS({
  "node_modules/@material-tailwind/react/components/Popover/PopoverContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { PopoverContext: function() {
      return PopoverContext;
    }, usePopover: function() {
      return usePopover;
    }, PopoverContextProvider: function() {
      return PopoverContextProvider;
    } });
    var _react = _interopRequireDefault(require_react()), _popover = require_popover2();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var PopoverContext = _react.default.createContext(null);
    PopoverContext.displayName = "MaterialTailwind.PopoverContext";
    function usePopover() {
      var context = _react.default.useContext(PopoverContext);
      if (!context)
        throw new Error("usePopover() must be used within a Popover. It happens when you use PopoverHandler or PopoverContent components outside the Popover component.");
      return context;
    }
    var PopoverContextProvider = function(param) {
      var value = param.value, children = param.children;
      return _react.default.createElement(PopoverContext.Provider, { value }, children);
    };
    PopoverContextProvider.propTypes = { value: _popover.propTypesContextValue, children: _popover.propTypesChildren };
    PopoverContextProvider.displayName = "MaterialTailwind.PopoverContextProvider";
  }
});

// node_modules/@material-tailwind/react/components/Popover/PopoverHandler.js
var require_PopoverHandler = __commonJS({
  "node_modules/@material-tailwind/react/components/Popover/PopoverHandler.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { PopoverHandler: function() {
      return PopoverHandler;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _react1 = require_floating_ui_react_umd(), _popoverContext = require_PopoverContext(), _popover = require_popover2();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectSpread(target) {
      for (var i7 = 1; i7 < arguments.length; i7++) {
        var source = arguments[i7] != null ? arguments[i7] : {}, ownKeys2 = Object.keys(source);
        typeof Object.getOwnPropertySymbols == "function" && (ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }))), ownKeys2.forEach(function(key) {
          _defineProperty2(target, key, source[key]);
        });
      }
      return target;
    }
    function ownKeys(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        })), keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpreadProps(target, source) {
      return source = source ?? {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      }), target;
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var PopoverHandler = _react.default.forwardRef(function(_param, ref) {
      var children = _param.children, rest = _objectWithoutProperties(_param, ["children"]), _usePopover = (0, _popoverContext.usePopover)(), getReferenceProps = _usePopover.getReferenceProps, reference = _usePopover.reference, mergedRef = (0, _react1.useMergeRefs)([ref, reference]);
      return _react.default.cloneElement(children, _objectSpread({}, getReferenceProps(_objectSpreadProps(_objectSpread({}, rest), { ref: mergedRef }))));
    });
    PopoverHandler.propTypes = { children: _popover.propTypesChildren };
    PopoverHandler.displayName = "MaterialTailwind.PopoverHandler";
    var _default = PopoverHandler;
  }
});

// node_modules/@material-tailwind/react/components/Popover/PopoverContent.js
var require_PopoverContent = __commonJS({
  "node_modules/@material-tailwind/react/components/Popover/PopoverContent.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { PopoverContent: function() {
      return PopoverContent;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _react1 = require_floating_ui_react_umd(), _framerMotion = require_cjs2(), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _popoverContext = require_PopoverContext(), _popover = require_popover2();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectSpread(target) {
      for (var i7 = 1; i7 < arguments.length; i7++) {
        var source = arguments[i7] != null ? arguments[i7] : {}, ownKeys2 = Object.keys(source);
        typeof Object.getOwnPropertySymbols == "function" && (ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }))), ownKeys2.forEach(function(key) {
          _defineProperty2(target, key, source[key]);
        });
      }
      return target;
    }
    function ownKeys(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        })), keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpreadProps(target, source) {
      return source = source ?? {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      }), target;
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var PopoverContent = _react.default.forwardRef(function(_param, ref) {
      var children = _param.children, className = _param.className, rest = _objectWithoutProperties(_param, ["children", "className"]), popover = (0, _theme.useTheme)().popover, defaultProps = popover.defaultProps, base = popover.styles.base, _usePopover = (0, _popoverContext.usePopover)(), open = _usePopover.open, strategy = _usePopover.strategy, x5 = _usePopover.x, y6 = _usePopover.y, context = _usePopover.context, floating = _usePopover.floating, getFloatingProps = _usePopover.getFloatingProps, appliedAnimation = _usePopover.appliedAnimation, labelId = _usePopover.labelId, descriptionId = _usePopover.descriptionId;
      className = className ?? defaultProps.className;
      var popoverClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base)), className), mergedRef = (0, _react1.useMergeRefs)([ref, floating]), NewAnimatePresence = _framerMotion.AnimatePresence;
      return _react.default.createElement(_framerMotion.LazyMotion, { features: _framerMotion.domAnimation }, _react.default.createElement(_react1.FloatingPortal, null, _react.default.createElement(NewAnimatePresence, null, open && _react.default.createElement(_react1.FloatingFocusManager, { context }, _react.default.createElement(_framerMotion.m.div, _extends5({}, getFloatingProps(_objectSpreadProps(_objectSpread({}, rest), { ref: mergedRef, className: popoverClasses, style: { position: strategy, top: y6 ?? "", left: x5 ?? "" }, "aria-labelledby": labelId, "aria-describedby": descriptionId })), { initial: "unmount", exit: "unmount", animate: open ? "mount" : "unmount", variants: appliedAnimation }), children)))));
    });
    PopoverContent.propTypes = { className: _popover.propTypesClassName, children: _popover.propTypesChildren };
    PopoverContent.displayName = "MaterialTailwind.PopoverContent";
    var _default = PopoverContent;
  }
});

// node_modules/@material-tailwind/react/components/Popover/index.js
var require_Popover = __commonJS({
  "node_modules/@material-tailwind/react/components/Popover/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Popover: function() {
      return Popover;
    }, PopoverHandler: function() {
      return _popoverHandler.PopoverHandler;
    }, PopoverContent: function() {
      return _popoverContent.PopoverContent;
    }, usePopover: function() {
      return _popoverContext.usePopover;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _react1 = require_floating_ui_react_umd(), _deepmerge = _interopRequireDefault(require_cjs()), _theme = require_theme2(), _popoverContext = require_PopoverContext(), _popover = require_popover2(), _popoverHandler = require_PopoverHandler(), _popoverContent = require_PopoverContent();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithHoles2(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArrayLimit2(arr, i7) {
      var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i != null) {
        var _arr = [], _n = !0, _d = !1, _s, _e3;
        try {
          for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i7 && _arr.length === i7)); _n = !0)
            ;
        } catch (err) {
          _d = !0, _e3 = err;
        } finally {
          try {
            !_n && _i.return != null && _i.return();
          } finally {
            if (_d)
              throw _e3;
          }
        }
        return _arr;
      }
    }
    function _nonIterableRest2() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _slicedToArray2(arr, i7) {
      return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i7) || _unsupportedIterableToArray2(arr, i7) || _nonIterableRest2();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var Popover = function(param) {
      var open = param.open, handler = param.handler, placement = param.placement, offset = param.offset, dismiss = param.dismiss, animate2 = param.animate, children = param.children, popover = (0, _theme.useTheme)().popover, defaultProps = popover.defaultProps, _React_useState = _slicedToArray2(_react.default.useState(!1), 2), internalOpen = _React_useState[0], setInternalOpen = _React_useState[1];
      open = open ?? internalOpen, handler = handler ?? setInternalOpen, placement = placement ?? defaultProps.placement, offset = offset ?? defaultProps.offset, dismiss = dismiss ?? defaultProps.dismiss, animate2 = animate2 ?? defaultProps.animate;
      var animation = { unmount: { opacity: 0 }, mount: { opacity: 1 } }, appliedAnimation = (0, _deepmerge.default)(animation, animate2), _useFloating = (0, _react1.useFloating)({ open, onOpenChange: handler, middleware: [(0, _react1.offset)(offset), (0, _react1.flip)(), (0, _react1.shift)()], placement }), x5 = _useFloating.x, y6 = _useFloating.y, reference = _useFloating.reference, floating = _useFloating.floating, strategy = _useFloating.strategy, refs = _useFloating.refs, update = _useFloating.update, context = _useFloating.context, id = (0, _react1.useId)(), labelId = "".concat(id, "-label"), descriptionId = "".concat(id, "-description"), _useInteractions = (0, _react1.useInteractions)([(0, _react1.useClick)(context), (0, _react1.useRole)(context), (0, _react1.useDismiss)(context, dismiss)]), getReferenceProps = _useInteractions.getReferenceProps, getFloatingProps = _useInteractions.getFloatingProps;
      _react.default.useEffect(function() {
        if (refs.reference.current && refs.floating.current && open)
          return (0, _react1.autoUpdate)(refs.reference.current, refs.floating.current, update);
      }, [open, update, refs.reference, refs.floating]);
      var contextValue = _react.default.useMemo(function() {
        return { open, strategy, x: x5, y: y6, context, reference, floating, getReferenceProps, getFloatingProps, appliedAnimation, labelId, descriptionId };
      }, [open, strategy, x5, y6, context, reference, floating, getFloatingProps, getReferenceProps, appliedAnimation, labelId, descriptionId]);
      return _react.default.createElement(_popoverContext.PopoverContextProvider, { value: contextValue }, children);
    };
    Popover.propTypes = { open: _popover.propTypesOpen, handler: _popover.propTypesHandler, placement: _propTypes.default.oneOf(_popover.propTypesPlacement), offset: _popover.propTypesOffset, dismiss: _popover.propTypesDismiss, animate: _popover.propTypesAnimate, children: _popover.propTypesChildren };
    Popover.displayName = "MaterialTailwind.Popover";
    var _default = Object.assign(Popover, { Handler: _popoverHandler.PopoverHandler, Content: _popoverContent.PopoverContent });
  }
});

// node_modules/@material-tailwind/react/components/Progress/index.js
var require_Progress = __commonJS({
  "node_modules/@material-tailwind/react/components/Progress/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Progress: function() {
      return Progress;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _progress = require_progress();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Progress = _react.default.forwardRef(function(_param, ref) {
      var variant = _param.variant, color = _param.color, size = _param.size, value = _param.value, label = _param.label, className = _param.className, barProps = _param.barProps, rest = _objectWithoutProperties(_param, ["variant", "color", "size", "value", "label", "className", "barProps"]), progress2 = (0, _theme.useTheme)().progress, defaultProps = progress2.defaultProps, valid = progress2.valid, styles = progress2.styles, base = styles.base, variants = styles.variants, sizes = styles.sizes;
      variant = variant ?? defaultProps.variant, color = color ?? defaultProps.color, size = size ?? defaultProps.size, label = label ?? defaultProps.label, className = className ?? defaultProps.className, barProps = barProps ?? defaultProps.barProps;
      var progressVariant = (0, _objectsToString.default)(variants[(0, _findMatch.default)(valid.variants, variant, "filled")][(0, _findMatch.default)(valid.colors, color, "gray")]), progressContainerSize = (0, _objectsToString.default)(sizes[(0, _findMatch.default)(valid.sizes, size, "md")].container.initial), progressContainer = (0, _classnames.default)((0, _objectsToString.default)(base.container.initial), progressContainerSize), progressWithLabelSize = (0, _objectsToString.default)(sizes[(0, _findMatch.default)(valid.sizes, size, "md")].container.withLabel), progressWithLabel = (0, _classnames.default)((0, _objectsToString.default)(base.container.withLabel), progressWithLabelSize), progressBarSize = (0, _objectsToString.default)(sizes[(0, _findMatch.default)(valid.sizes, size, "md")].bar), progressBar = (0, _classnames.default)((0, _objectsToString.default)(base.bar), progressBarSize), containerClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)(progressContainer, _defineProperty2({}, progressWithLabel, label)), className), barClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)(progressBar, progressVariant), barProps == null ? void 0 : barProps.className);
      return _react.default.createElement("div", _extends5({}, rest, { ref, className: containerClasses }), _react.default.createElement("div", _extends5({}, barProps, { className: barClasses, style: { width: "".concat(value, "%") } }), label && "".concat(value, "% ").concat(typeof label == "string" ? label : "")));
    });
    Progress.propTypes = { variant: _propTypes.default.oneOf(_progress.propTypesVariant), color: _propTypes.default.oneOf(_progress.propTypesColor), size: _propTypes.default.oneOf(_progress.propTypesSize), value: _progress.propTypesValue, label: _progress.propTypesLabel, barProps: _progress.propTypesBarProps, className: _progress.propTypesClassName };
    Progress.displayName = "MaterialTailwind.Progress";
    var _default = Progress;
  }
});

// node_modules/@material-tailwind/react/components/Radio/index.js
var require_Radio = __commonJS({
  "node_modules/@material-tailwind/react/components/Radio/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Radio: function() {
      return Radio;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _materialRippleEffects = _interopRequireDefault(require_material_ripple_effects()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _checkbox = require_checkbox();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Radio = _react.default.forwardRef(function(_param, ref) {
      var color = _param.color, label = _param.label, icon = _param.icon, ripple = _param.ripple, className = _param.className, disabled = _param.disabled, containerProps = _param.containerProps, labelProps = _param.labelProps, iconProps = _param.iconProps, inputRef = _param.inputRef, rest = _objectWithoutProperties(_param, ["color", "label", "icon", "ripple", "className", "disabled", "containerProps", "labelProps", "iconProps", "inputRef"]), radio = (0, _theme.useTheme)().radio, defaultProps = radio.defaultProps, valid = radio.valid, styles = radio.styles, base = styles.base, colors = styles.colors, radioId = _react.default.useId();
      color = color ?? defaultProps.color, label = label ?? defaultProps.label, icon = icon ?? defaultProps.icon, ripple = ripple ?? defaultProps.ripple, className = className ?? defaultProps.className, disabled = disabled ?? defaultProps.disabled, containerProps = containerProps ?? defaultProps.containerProps, labelProps = labelProps ?? defaultProps.labelProps, iconProps = iconProps ?? defaultProps.iconProps;
      var rippleEffect = ripple !== void 0 && new _materialRippleEffects.default(), rootClasses = (0, _classnames.default)((0, _objectsToString.default)(base.root), _defineProperty2({}, (0, _objectsToString.default)(base.disabled), disabled)), containerClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.container)), containerProps == null ? void 0 : containerProps.className), inputClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.input), (0, _objectsToString.default)(colors[(0, _findMatch.default)(valid.colors, color, "gray")])), className), labelClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.label)), labelProps == null ? void 0 : labelProps.className), radioIconClasses = (0, _classnames.default)((0, _classnames.default)((0, _objectsToString.default)(base.icon)), colors[(0, _findMatch.default)(valid.colors, color, "gray")].color, iconProps == null ? void 0 : iconProps.className);
      return _react.default.createElement("div", { ref, className: rootClasses }, _react.default.createElement("label", _extends5({}, containerProps, { className: containerClasses, htmlFor: rest.id || radioId, onMouseDown: function(e5) {
        var onMouseDown = containerProps == null ? void 0 : containerProps.onMouseDown;
        return ripple && rippleEffect.create(e5, "dark"), typeof onMouseDown == "function" && onMouseDown(e5);
      } }), _react.default.createElement("input", _extends5({}, rest, { ref: inputRef, type: "radio", disabled, className: inputClasses, id: rest.id || radioId })), _react.default.createElement("span", { className: radioIconClasses }, icon || _react.default.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", className: "h-3.5 w-3.5", viewBox: "0 0 16 16", fill: "currentColor" }, _react.default.createElement("circle", { "data-name": "ellipse", cx: "8", cy: "8", r: "8" })))), label && _react.default.createElement("label", _extends5({}, labelProps, { className: labelClasses, htmlFor: rest.id || radioId }), label));
    });
    Radio.propTypes = { color: _propTypes.default.oneOf(_checkbox.propTypesColor), label: _checkbox.propTypesLabel, icon: _checkbox.propTypesIcon, ripple: _checkbox.propTypesRipple, className: _checkbox.propTypesClassName, disabled: _checkbox.propTypesDisabled, containerProps: _checkbox.propTypesObject, labelProps: _checkbox.propTypesObject };
    Radio.displayName = "MaterialTailwind.Radio";
    var _default = Radio;
  }
});

// node_modules/@material-tailwind/react/components/Select/SelectContext.js
var require_SelectContext = __commonJS({
  "node_modules/@material-tailwind/react/components/Select/SelectContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { SelectContext: function() {
      return SelectContext;
    }, useSelect: function() {
      return useSelect;
    }, usePrevious: function() {
      return usePrevious;
    }, SelectContextProvider: function() {
      return SelectContextProvider;
    } });
    var _react = _interopRequireDefault(require_react()), _framerMotion = require_cjs2(), _select = require_select();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var SelectContext = _react.default.createContext(null);
    SelectContext.displayName = "MaterialTailwind.SelectContext";
    function useSelect() {
      var context = _react.default.useContext(SelectContext);
      if (context === null)
        throw new Error("useSelect() must be used within a Select. It happens when you use SelectOption component outside the Select component.");
      return context;
    }
    function usePrevious(value) {
      var ref = _react.default.useRef();
      return (0, _framerMotion.useIsomorphicLayoutEffect)(function() {
        ref.current = value;
      }, [value]), ref.current;
    }
    var SelectContextProvider = function(param) {
      var value = param.value, children = param.children;
      return _react.default.createElement(SelectContext.Provider, { value }, children);
    };
    SelectContextProvider.propTypes = { value: _select.propTypesContextValue, children: _select.propTypesChildren };
    SelectContextProvider.displayName = "MaterialTailwind.SelectContextProvider";
  }
});

// node_modules/@material-tailwind/react/components/Select/SelectOption.js
var require_SelectOption = __commonJS({
  "node_modules/@material-tailwind/react/components/Select/SelectOption.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { SelectOption: function() {
      return SelectOption;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _selectContext = require_SelectContext(), _select = require_select();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var SelectOption = function(_param) {
      var handleSelect = function() {
        setSelectedIndex(index3), onChange(value), setOpen(!1), setActiveIndex(null);
      }, handleKeyDown = function(event) {
        (event.key === "Enter" || event.key === " " && !dataRef.current.typing) && (event.preventDefault(), handleSelect());
      }, _param_value = _param.value, value = _param_value === void 0 ? "" : _param_value, _param_index = _param.index, index3 = _param_index === void 0 ? 0 : _param_index, _param_disabled = _param.disabled, disabled = _param_disabled === void 0 ? !1 : _param_disabled, _param_className = _param.className, className = _param_className === void 0 ? "" : _param_className, children = _param.children, rest = _objectWithoutProperties(_param, ["value", "index", "disabled", "className", "children"]), select = (0, _theme.useTheme)().select, styles = select.styles, base = styles.base, _useSelect = (0, _selectContext.useSelect)(), selectedIndex = _useSelect.selectedIndex, setSelectedIndex = _useSelect.setSelectedIndex, listRef = _useSelect.listRef, setOpen = _useSelect.setOpen, onChange = _useSelect.onChange, activeIndex = _useSelect.activeIndex, setActiveIndex = _useSelect.setActiveIndex, getItemProps = _useSelect.getItemProps, dataRef = _useSelect.dataRef, optionBaseClasses = (0, _objectsToString.default)(base.option.initial), optionActiveClasses = (0, _objectsToString.default)(base.option.active), optionDisabledClasses = (0, _objectsToString.default)(base.option.disabled), _obj, classes = (0, _tailwindMerge.twMerge)((0, _classnames.default)(optionBaseClasses, (_obj = {}, _defineProperty2(_obj, optionActiveClasses, selectedIndex === index3), _defineProperty2(_obj, optionDisabledClasses, disabled), _obj)), className ?? "");
      return _react.default.createElement("li", _extends5({}, rest, { role: "option", ref: function(node) {
        return listRef.current[index3] = node;
      }, className: classes, disabled, tabIndex: activeIndex === index3 ? 0 : 1, "aria-selected": activeIndex === index3 && selectedIndex === index3, "data-selected": selectedIndex === index3 }, getItemProps({ onClick: function(e5) {
        var onClick = rest == null ? void 0 : rest.onClick;
        typeof onClick == "function" && (onClick(e5), handleSelect()), handleSelect();
      }, onKeyDown: function(e5) {
        var onKeyDown = rest == null ? void 0 : rest.onKeyDown;
        typeof onKeyDown == "function" && (onKeyDown(e5), handleKeyDown(e5)), handleKeyDown(e5);
      } })), children);
    };
    SelectOption.propTypes = { value: _select.propTypesValue, index: _select.propTypesIndex, disabled: _select.propTypesDisabled, className: _select.propTypesClassName, children: _select.propTypesChildren };
    SelectOption.displayName = "MaterialTailwind.SelectOption";
    var _default = SelectOption;
  }
});

// node_modules/@material-tailwind/react/components/Select/index.js
var require_Select = __commonJS({
  "node_modules/@material-tailwind/react/components/Select/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Select: function() {
      return Select;
    }, Option: function() {
      return _selectOption.SelectOption;
    }, useSelect: function() {
      return _selectContext.useSelect;
    }, usePrevious: function() {
      return _selectContext.usePrevious;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _react1 = require_floating_ui_react_umd(), _framerMotion = require_cjs2(), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _deepmerge = _interopRequireDefault(require_cjs()), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _selectContext = require_SelectContext(), _select = require_select(), _selectOption = require_SelectOption();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithHoles2(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray2(arr);
    }
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArray(iter) {
      if (typeof Symbol < "u" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _iterableToArrayLimit2(arr, i7) {
      var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i != null) {
        var _arr = [], _n = !0, _d = !1, _s, _e3;
        try {
          for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i7 && _arr.length === i7)); _n = !0)
            ;
        } catch (err) {
          _d = !0, _e3 = err;
        } finally {
          try {
            !_n && _i.return != null && _i.return();
          } finally {
            if (_d)
              throw _e3;
          }
        }
        return _arr;
      }
    }
    function _nonIterableRest2() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _objectSpread(target) {
      for (var i7 = 1; i7 < arguments.length; i7++) {
        var source = arguments[i7] != null ? arguments[i7] : {}, ownKeys2 = Object.keys(source);
        typeof Object.getOwnPropertySymbols == "function" && (ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }))), ownKeys2.forEach(function(key) {
          _defineProperty2(target, key, source[key]);
        });
      }
      return target;
    }
    function ownKeys(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        })), keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpreadProps(target, source) {
      return source = source ?? {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      }), target;
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    function _slicedToArray2(arr, i7) {
      return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i7) || _unsupportedIterableToArray2(arr, i7) || _nonIterableRest2();
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var Select = _react.default.forwardRef(function(_param, ref) {
      var variant = _param.variant, color = _param.color, size = _param.size, label = _param.label, error = _param.error, success = _param.success, arrow = _param.arrow, value = _param.value, onChange = _param.onChange, selected = _param.selected, offset = _param.offset, dismiss = _param.dismiss, animate2 = _param.animate, lockScroll = _param.lockScroll, labelProps = _param.labelProps, menuProps = _param.menuProps, className = _param.className, disabled = _param.disabled, name = _param.name, children = _param.children, containerProps = _param.containerProps, rest = _objectWithoutProperties(_param, ["variant", "color", "size", "label", "error", "success", "arrow", "value", "onChange", "selected", "offset", "dismiss", "animate", "lockScroll", "labelProps", "menuProps", "className", "disabled", "name", "children", "containerProps"]), _children_, select = (0, _theme.useTheme)().select, defaultProps = select.defaultProps, valid = select.valid, styles = select.styles, base = styles.base, variants = styles.variants, _React_useState = _slicedToArray2(_react.default.useState("close"), 2), state = _React_useState[0], setState = _React_useState[1];
      variant = variant ?? defaultProps.variant, color = color ?? defaultProps.color, size = size ?? defaultProps.size, label = label ?? defaultProps.label, error = error ?? defaultProps.error, success = success ?? defaultProps.success, arrow = arrow ?? defaultProps.arrow, value = value ?? defaultProps.value, onChange = onChange ?? defaultProps.onChange, selected = selected ?? defaultProps.selected, offset = offset ?? defaultProps.offset, dismiss = dismiss ?? defaultProps.dismiss, animate2 = animate2 ?? defaultProps.animate, labelProps = labelProps ?? defaultProps.labelProps, menuProps = menuProps ?? defaultProps.menuProps;
      var _merge;
      containerProps = (_merge = (0, _deepmerge.default)(containerProps, (defaultProps == null ? void 0 : defaultProps.containerProps) || {})) !== null && _merge !== void 0 ? _merge : defaultProps.containerProps, className = className ?? defaultProps.className;
      var listItemsRef = _react.default.useRef([]), _React_Children_map, listContentRef = _react.default.useRef(_toConsumableArray((_React_Children_map = _react.default.Children.map(children, function(child) {
        var props = child.props;
        return props == null ? void 0 : props.value;
      })) !== null && _React_Children_map !== void 0 ? _React_Children_map : [])), _React_useState1 = _slicedToArray2(_react.default.useState(!1), 2), open = _React_useState1[0], setOpen = _React_useState1[1], _React_useState2 = _slicedToArray2(_react.default.useState(null), 2), activeIndex = _React_useState2[0], setActiveIndex = _React_useState2[1], _React_useState3 = _slicedToArray2(_react.default.useState(0), 2), selectedIndex = _React_useState3[0], setSelectedIndex = _React_useState3[1], _React_useState4 = _slicedToArray2(_react.default.useState(!1), 2), controlledScrolling = _React_useState4[0], setControlledScrolling = _React_useState4[1], prevActiveIndex = (0, _selectContext.usePrevious)(activeIndex), _useFloating = (0, _react1.useFloating)({ placement: "bottom-start", open, onOpenChange: setOpen, whileElementsMounted: _react1.autoUpdate, middleware: [(0, _react1.offset)(5), (0, _react1.flip)({ padding: 10 }), (0, _react1.size)({ apply: function(param) {
        var rects = param.rects, elements = param.elements, _elements_floating, _rects_reference;
        Object.assign(elements == null || (_elements_floating = elements.floating) === null || _elements_floating === void 0 ? void 0 : _elements_floating.style, { width: "".concat(rects == null || (_rects_reference = rects.reference) === null || _rects_reference === void 0 ? void 0 : _rects_reference.width, "px"), zIndex: 99 });
      }, padding: 20 })] }), x5 = _useFloating.x, y6 = _useFloating.y, strategy = _useFloating.strategy, refs = _useFloating.refs, context = _useFloating.context;
      _react.default.useEffect(function() {
        setSelectedIndex(Math.max(0, listContentRef.current.indexOf(value) + 1));
      }, [value]);
      var floatingRef = refs.floating, _useInteractions = (0, _react1.useInteractions)([(0, _react1.useClick)(context), (0, _react1.useRole)(context, { role: "listbox" }), (0, _react1.useDismiss)(context, _objectSpread({}, dismiss)), (0, _react1.useListNavigation)(context, { listRef: listItemsRef, activeIndex, selectedIndex, onNavigate: setActiveIndex, loop: !0 }), (0, _react1.useTypeahead)(context, { listRef: listContentRef, activeIndex, selectedIndex, onMatch: open ? setActiveIndex : setSelectedIndex })]), getReferenceProps = _useInteractions.getReferenceProps, getFloatingProps = _useInteractions.getFloatingProps, getItemProps = _useInteractions.getItemProps;
      (0, _framerMotion.useIsomorphicLayoutEffect)(function() {
        var floating = floatingRef.current;
        if (open && controlledScrolling && floating) {
          var item = activeIndex != null ? listItemsRef.current[activeIndex] : selectedIndex != null ? listItemsRef.current[selectedIndex] : null;
          if (item && prevActiveIndex != null) {
            var _listItemsRef_current_prevActiveIndex, _listItemsRef_current_prevActiveIndex_offsetHeight, itemHeight = (_listItemsRef_current_prevActiveIndex_offsetHeight = (_listItemsRef_current_prevActiveIndex = listItemsRef.current[prevActiveIndex]) === null || _listItemsRef_current_prevActiveIndex === void 0 ? void 0 : _listItemsRef_current_prevActiveIndex.offsetHeight) !== null && _listItemsRef_current_prevActiveIndex_offsetHeight !== void 0 ? _listItemsRef_current_prevActiveIndex_offsetHeight : 0, floatingHeight = floating.offsetHeight, top = item.offsetTop, bottom = top + itemHeight;
            top < floating.scrollTop ? floating.scrollTop -= floating.scrollTop - top + 5 : bottom > floatingHeight + floating.scrollTop && (floating.scrollTop += bottom - floatingHeight - floating.scrollTop + 5);
          }
        }
      }, [open, controlledScrolling, prevActiveIndex, activeIndex]);
      var contextValue = _react.default.useMemo(function() {
        return { selectedIndex, setSelectedIndex, listRef: listItemsRef, setOpen, onChange: onChange || function() {
        }, activeIndex, setActiveIndex, getItemProps, dataRef: context.dataRef };
      }, [selectedIndex, onChange, activeIndex, getItemProps, context.dataRef]);
      _react.default.useEffect(function() {
        setState(open ? "open" : !open && selectedIndex || !open && value ? "withValue" : "close");
      }, [open, value, selectedIndex, selected]);
      var selectVariant = variants[(0, _findMatch.default)(valid.variants, variant, "outlined")], selectSize = selectVariant.sizes[(0, _findMatch.default)(valid.sizes, size, "md")], selectError = selectVariant.error.select, selectSuccess = selectVariant.success.select, selectColor = selectVariant.colors.select[(0, _findMatch.default)(valid.colors, color, "gray")], labelError = selectVariant.error.label, labelSuccess = selectVariant.success.label, labelColor = selectVariant.colors.label[(0, _findMatch.default)(valid.colors, color, "gray")], stateClasses = selectVariant.states[state], containerClasses = (0, _classnames.default)((0, _objectsToString.default)(base.container), (0, _objectsToString.default)(selectSize.container), containerProps == null ? void 0 : containerProps.className), selectClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.select), (0, _objectsToString.default)(selectVariant.base.select), (0, _objectsToString.default)(stateClasses.select), (0, _objectsToString.default)(selectSize.select), _defineProperty2({}, (0, _objectsToString.default)(selectColor[state]), !error && !success), _defineProperty2({}, (0, _objectsToString.default)(selectError.initial), error), _defineProperty2({}, (0, _objectsToString.default)(selectError.states[state]), error), _defineProperty2({}, (0, _objectsToString.default)(selectSuccess.initial), success), _defineProperty2({}, (0, _objectsToString.default)(selectSuccess.states[state]), success)), className), _labelProps_className, labelClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.label), (0, _objectsToString.default)(selectVariant.base.label), (0, _objectsToString.default)(stateClasses.label), (0, _objectsToString.default)(selectSize.label.initial), (0, _objectsToString.default)(selectSize.label.states[state]), _defineProperty2({}, (0, _objectsToString.default)(labelColor[state]), !error && !success), _defineProperty2({}, (0, _objectsToString.default)(labelError.initial), error), _defineProperty2({}, (0, _objectsToString.default)(labelError.states[state]), error), _defineProperty2({}, (0, _objectsToString.default)(labelSuccess.initial), success), _defineProperty2({}, (0, _objectsToString.default)(labelSuccess.states[state]), success)), (_labelProps_className = labelProps.className) !== null && _labelProps_className !== void 0 ? _labelProps_className : ""), arrowClasses = (0, _classnames.default)((0, _objectsToString.default)(base.arrow.initial), _defineProperty2({}, (0, _objectsToString.default)(base.arrow.active), open)), _menuProps_className, menuClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.menu)), (_menuProps_className = menuProps.className) !== null && _menuProps_className !== void 0 ? _menuProps_className : ""), buttonContentClasses = (0, _classnames.default)("absolute top-2/4 -translate-y-2/4", variant === "outlined" ? "left-3 pt-0.5" : "left-0 pt-3"), animation = { unmount: { opacity: 0, transformOrigin: "top", transform: "scale(0.95)", transition: { duration: 0.2, times: [0.4, 0, 0.2, 1] } }, mount: { opacity: 1, transformOrigin: "top", transform: "scale(1)", transition: { duration: 0.2, times: [0.4, 0, 0.2, 1] } } }, appliedAnimation = (0, _deepmerge.default)(animation, animate2), NewAnimatePresence = _framerMotion.AnimatePresence;
      _react.default.useEffect(function() {
        value && !onChange && console.error("Warning: You provided a `value` prop to a select component without an `onChange` handler. This will render a read-only select. If the field should be mutable use `onChange` handler with `value` together.");
      }, [value, onChange]);
      var selectMenu = _react.default.createElement(_react1.FloatingFocusManager, { context, modal: !1 }, _react.default.createElement(_framerMotion.m.ul, _extends5({}, getFloatingProps(_objectSpreadProps(_objectSpread({}, menuProps), { ref: refs.setFloating, role: "listbox", className: menuClasses, style: { position: strategy, top: y6 ?? 0, left: x5 ?? 0, overflow: "auto" }, onPointerEnter: function(e5) {
        var onPointerEnter2 = menuProps == null ? void 0 : menuProps.onPointerEnter;
        typeof onPointerEnter2 == "function" && (onPointerEnter2(e5), setControlledScrolling(!1)), setControlledScrolling(!1);
      }, onPointerMove: function(e5) {
        var onPointerMove2 = menuProps == null ? void 0 : menuProps.onPointerMove;
        typeof onPointerMove2 == "function" && (onPointerMove2(e5), setControlledScrolling(!1)), setControlledScrolling(!1);
      }, onKeyDown: function(e5) {
        var onKeyDown2 = menuProps == null ? void 0 : menuProps.onKeyDown;
        typeof onKeyDown2 == "function" && (onKeyDown2(e5), setControlledScrolling(!0)), setControlledScrolling(!0);
      } })), { initial: "unmount", exit: "unmount", animate: open ? "mount" : "unmount", variants: appliedAnimation }), _react.default.Children.map(children, function(child, index3) {
        var _child_props;
        return _react.default.isValidElement(child) && _react.default.cloneElement(child, _objectSpreadProps(_objectSpread({}, child.props), { index: ((_child_props = child.props) === null || _child_props === void 0 ? void 0 : _child_props.index) || index3 + 1, id: "material-tailwind-select-".concat(index3) }));
      })));
      return _react.default.createElement(_selectContext.SelectContextProvider, { value: contextValue }, _react.default.createElement("div", _extends5({}, containerProps, { ref, className: containerClasses }), _react.default.createElement("button", _extends5({ type: "button" }, getReferenceProps(_objectSpreadProps(_objectSpread({}, rest), { ref: refs.setReference, className: selectClasses, disabled, name }))), typeof selected == "function" ? _react.default.createElement("span", { className: buttonContentClasses }, selected(children[selectedIndex - 1], selectedIndex - 1)) : value && !onChange ? _react.default.createElement("span", { className: buttonContentClasses }, value) : _react.default.createElement("span", _extends5({}, (_children_ = children[selectedIndex - 1]) === null || _children_ === void 0 ? void 0 : _children_.props, { className: buttonContentClasses })), _react.default.createElement("div", { className: arrowClasses }, arrow ?? _react.default.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 20 20", fill: "currentColor" }, _react.default.createElement("path", { fillRule: "evenodd", d: "M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z", clipRule: "evenodd" })))), _react.default.createElement("label", _extends5({}, labelProps, { className: labelClasses }), label), _react.default.createElement(_framerMotion.LazyMotion, { features: _framerMotion.domAnimation }, _react.default.createElement(NewAnimatePresence, null, open && _react.default.createElement(_react.default.Fragment, null, lockScroll ? _react.default.createElement(_react1.FloatingOverlay, { lockScroll: !0 }, selectMenu) : selectMenu)))));
    });
    Select.propTypes = { variant: _propTypes.default.oneOf(_select.propTypesVariant), color: _propTypes.default.oneOf(_select.propTypesColor), size: _propTypes.default.oneOf(_select.propTypesSize), label: _select.propTypesLabel, error: _select.propTypesError, success: _select.propTypesSuccess, arrow: _select.propTypesArrow, value: _select.propTypesValue, onChange: _select.propTypesOnChange, selected: _select.propTypesSelected, offset: _select.propTypesOffset, dismiss: _select.propTypesDismiss, animate: _select.propTypesAnimate, lockScroll: _select.propTypesLockScroll, labelProps: _select.propTypesLabelProps, menuProps: _select.propTypesMenuProps, className: _select.propTypesClassName, disabled: _select.propTypesDisabled, name: _select.propTypesName, children: _select.propTypesChildren, containerProps: _select.propTypesContainerProps };
    Select.displayName = "MaterialTailwind.Select";
    var _default = Object.assign(Select, { Option: _selectOption.SelectOption });
  }
});

// node_modules/@material-tailwind/react/components/Switch/index.js
var require_Switch = __commonJS({
  "node_modules/@material-tailwind/react/components/Switch/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Switch: function() {
      return Switch;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _materialRippleEffects = _interopRequireDefault(require_material_ripple_effects()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _checkbox = require_checkbox();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Switch = _react.default.forwardRef(function(_param, ref) {
      var color = _param.color, label = _param.label, ripple = _param.ripple, className = _param.className, disabled = _param.disabled, containerProps = _param.containerProps, circleProps = _param.circleProps, labelProps = _param.labelProps, inputRef = _param.inputRef, rest = _objectWithoutProperties(_param, ["color", "label", "ripple", "className", "disabled", "containerProps", "circleProps", "labelProps", "inputRef"]), _useTheme = (0, _theme.useTheme)(), toggle = _useTheme.switch, defaultProps = toggle.defaultProps, valid = toggle.valid, styles = toggle.styles, base = styles.base, colors = styles.colors, switchId = _react.default.useId();
      color = color ?? defaultProps.color, ripple = ripple ?? defaultProps.ripple, className = className ?? defaultProps.className, disabled = disabled ?? defaultProps.disabled, containerProps = containerProps ?? defaultProps.containerProps, labelProps = labelProps ?? defaultProps.labelProps, circleProps = circleProps ?? defaultProps.circleProps;
      var rippleEffect = ripple !== void 0 && new _materialRippleEffects.default(), rootClasses = (0, _classnames.default)((0, _objectsToString.default)(base.root), _defineProperty2({}, (0, _objectsToString.default)(base.disabled), disabled)), containerClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.container)), containerProps == null ? void 0 : containerProps.className), inputClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.input), (0, _objectsToString.default)(colors[(0, _findMatch.default)(valid.colors, color, "gray")])), className), circleClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.circle), colors[(0, _findMatch.default)(valid.colors, color, "gray")].circle, colors[(0, _findMatch.default)(valid.colors, color, "gray")].before), circleProps == null ? void 0 : circleProps.className), rippleClasses = (0, _classnames.default)((0, _objectsToString.default)(base.ripple)), labelClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.label)), labelProps == null ? void 0 : labelProps.className);
      return _react.default.createElement("div", { ref, className: rootClasses }, _react.default.createElement("div", _extends5({}, containerProps, { className: containerClasses }), _react.default.createElement("input", _extends5({}, rest, { ref: inputRef, type: "checkbox", disabled, id: rest.id || switchId, className: inputClasses })), _react.default.createElement("label", _extends5({}, circleProps, { htmlFor: rest.id || switchId, className: circleClasses }), ripple && _react.default.createElement("div", { className: rippleClasses, onMouseDown: function(e5) {
        var onMouseDown = containerProps == null ? void 0 : containerProps.onMouseDown;
        return ripple && rippleEffect.create(e5, "dark"), typeof onMouseDown == "function" && onMouseDown(e5);
      } }))), label && _react.default.createElement("label", _extends5({}, labelProps, { htmlFor: rest.id || switchId, className: labelClasses }), label));
    });
    Switch.propTypes = { color: _propTypes.default.oneOf(_checkbox.propTypesColor), label: _checkbox.propTypesLabel, ripple: _checkbox.propTypesRipple, className: _checkbox.propTypesClassName, disabled: _checkbox.propTypesDisabled, containerProps: _checkbox.propTypesObject, labelProps: _checkbox.propTypesObject, circleProps: _checkbox.propTypesObject };
    Switch.displayName = "MaterialTailwind.Switch";
    var _default = Switch;
  }
});

// node_modules/@material-tailwind/react/types/components/tabs.js
var require_tabs2 = __commonJS({
  "node_modules/@material-tailwind/react/types/components/tabs.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesId: function() {
      return propTypesId;
    }, propTypesValue: function() {
      return propTypesValue;
    }, propTypesAnimate: function() {
      return propTypesAnimate;
    }, propTypesDisabled: function() {
      return propTypesDisabled;
    }, propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesOrientation: function() {
      return propTypesOrientation;
    }, propTypesIndicator: function() {
      return propTypesIndicator;
    }, propTypesChildren: function() {
      return propTypesChildren;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var propTypesId = _propTypes.default.string, propTypesValue = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]).isRequired, propTypesAnimate = _generic.propTypesAnimation, propTypesDisabled = _propTypes.default.bool, propTypesClassName = _propTypes.default.string, propTypesOrientation = _propTypes.default.oneOf(["horizontal", "vertical"]), propTypesIndicator = _propTypes.default.instanceOf(Object), propTypesChildren = _propTypes.default.node.isRequired;
  }
});

// node_modules/@material-tailwind/react/components/Tabs/TabsContext.js
var require_TabsContext = __commonJS({
  "node_modules/@material-tailwind/react/components/Tabs/TabsContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { TabsContext: function() {
      return TabsContext;
    }, useTabs: function() {
      return useTabs;
    }, TabsContextProvider: function() {
      return TabsContextProvider;
    }, setId: function() {
      return setId;
    }, setActive: function() {
      return setActive;
    }, setAnimation: function() {
      return setAnimation;
    }, setIndicator: function() {
      return setIndicator;
    }, setIsInitial: function() {
      return setIsInitial;
    }, setOrientation: function() {
      return setOrientation;
    } });
    var _react = _interopRequireDefault(require_react()), _tabs = require_tabs2();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithHoles2(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArrayLimit2(arr, i7) {
      var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i != null) {
        var _arr = [], _n = !0, _d = !1, _s, _e3;
        try {
          for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i7 && _arr.length === i7)); _n = !0)
            ;
        } catch (err) {
          _d = !0, _e3 = err;
        } finally {
          try {
            !_n && _i.return != null && _i.return();
          } finally {
            if (_d)
              throw _e3;
          }
        }
        return _arr;
      }
    }
    function _nonIterableRest2() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _objectSpread(target) {
      for (var i7 = 1; i7 < arguments.length; i7++) {
        var source = arguments[i7] != null ? arguments[i7] : {}, ownKeys2 = Object.keys(source);
        typeof Object.getOwnPropertySymbols == "function" && (ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }))), ownKeys2.forEach(function(key) {
          _defineProperty2(target, key, source[key]);
        });
      }
      return target;
    }
    function ownKeys(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        })), keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpreadProps(target, source) {
      return source = source ?? {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      }), target;
    }
    function _slicedToArray2(arr, i7) {
      return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i7) || _unsupportedIterableToArray2(arr, i7) || _nonIterableRest2();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    function reducer(state, action12) {
      switch (action12.type) {
        case "SET_ID":
          return _objectSpreadProps(_objectSpread({}, state), { id: action12.value });
        case "SET_ACTIVE":
          return _objectSpreadProps(_objectSpread({}, state), { active: action12.value });
        case "SET_ANIMATION":
          return _objectSpreadProps(_objectSpread({}, state), { appliedAnimation: action12.value });
        case "SET_INDICATOR":
          return _objectSpreadProps(_objectSpread({}, state), { indicatorProps: action12.value });
        case "SET_IS_INITIAL":
          return _objectSpreadProps(_objectSpread({}, state), { isInitial: action12.value });
        case "SET_ORIENTATION":
          return _objectSpreadProps(_objectSpread({}, state), { orientation: action12.value });
        default:
          throw new Error("Unhandled action type: ".concat(action12.type));
      }
    }
    var TabsContext = _react.default.createContext(null);
    TabsContext.displayName = "MaterialTailwind.TabsContext";
    function useTabs() {
      var context = _react.default.useContext(TabsContext);
      if (!context)
        throw new Error("useTabs() must be used within a Tabs. It happens when you use TabsHeader, TabsBody, Tab or TabPanel outside the Tabs component.");
      return context;
    }
    var TabsContextProvider = function(param) {
      var id = param.id, value = param.value, orientation = param.orientation, children = param.children, initialState = _react.default.useMemo(function() {
        return { id: id ?? "indicator", active: value, orientation, isInitial: !0, appliedAnimation: { initial: {}, unmount: {}, mount: {} }, indicatorProps: void 0 };
      }, [id, value, orientation]), _React_useReducer = _slicedToArray2(_react.default.useReducer(reducer, initialState), 2), state = _React_useReducer[0], dispatch = _React_useReducer[1], contextValue = _react.default.useMemo(function() {
        return { state, dispatch };
      }, [state]);
      return _react.default.createElement(TabsContext.Provider, { value: contextValue }, children);
    }, setId = function(dispatch, value) {
      return dispatch({ type: "SET_ID", value });
    }, setActive = function(dispatch, value) {
      return dispatch({ type: "SET_ACTIVE", value });
    }, setAnimation = function(dispatch, value) {
      return dispatch({ type: "SET_ANIMATION", value });
    }, setIndicator = function(dispatch, value) {
      return dispatch({ type: "SET_INDICATOR", value });
    }, setIsInitial = function(dispatch, value) {
      return dispatch({ type: "SET_IS_INITIAL", value });
    }, setOrientation = function(dispatch, value) {
      return dispatch({ type: "SET_ORIENTATION", value });
    };
    TabsContextProvider.propTypes = { id: _tabs.propTypesId, value: _tabs.propTypesValue, orientation: _tabs.propTypesOrientation, children: _tabs.propTypesChildren };
    TabsContextProvider.displayName = "MaterialTailwind.TabsContextProvider";
  }
});

// node_modules/@material-tailwind/react/components/Tabs/Tab.js
var require_Tab = __commonJS({
  "node_modules/@material-tailwind/react/components/Tabs/Tab.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Tab: function() {
      return Tab;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _framerMotion = require_cjs2(), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _tabsContext = require_TabsContext(), _tabs = require_tabs2();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Tab = _react.default.forwardRef(function(_param, ref) {
      var value = _param.value, className = _param.className, activeClassName = _param.activeClassName, disabled = _param.disabled, children = _param.children, rest = _objectWithoutProperties(_param, ["value", "className", "activeClassName", "disabled", "children"]), _useTheme = (0, _theme.useTheme)(), tabTheme = _useTheme.tab, defaultProps = tabTheme.defaultProps, base = tabTheme.styles.base, _useTabs = (0, _tabsContext.useTabs)(), state = _useTabs.state, dispatch = _useTabs.dispatch, id = state.id, active = state.active, indicatorProps = state.indicatorProps;
      className = className ?? defaultProps.className, activeClassName = activeClassName ?? defaultProps.activeClassName, disabled = disabled ?? defaultProps.disabled;
      var _obj, tabClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.tab.initial), (_obj = {}, _defineProperty2(_obj, (0, _objectsToString.default)(base.tab.disabled), disabled), _defineProperty2(_obj, activeClassName, active === value), _obj)), className), _indicatorProps_className, indicatorClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.indicator)), (_indicatorProps_className = indicatorProps == null ? void 0 : indicatorProps.className) !== null && _indicatorProps_className !== void 0 ? _indicatorProps_className : "");
      return _react.default.createElement("li", _extends5({}, rest, { ref, role: "tab", className: tabClasses, onClick: function(e5) {
        var onClick = rest == null ? void 0 : rest.onClick;
        typeof onClick == "function" && ((0, _tabsContext.setActive)(dispatch, value), (0, _tabsContext.setIsInitial)(dispatch, !1), onClick(e5)), (0, _tabsContext.setIsInitial)(dispatch, !1), (0, _tabsContext.setActive)(dispatch, value);
      }, "data-value": value }), _react.default.createElement("div", { className: "z-20 text-inherit" }, children), active === value && _react.default.createElement(_framerMotion.motion.div, _extends5({}, indicatorProps, { transition: { duration: 0.5 }, className: indicatorClasses, layoutId: id })));
    });
    Tab.propTypes = { value: _tabs.propTypesValue, className: _tabs.propTypesClassName, disabled: _tabs.propTypesDisabled, children: _tabs.propTypesChildren };
    Tab.displayName = "MaterialTailwind.Tab";
    var _default = Tab;
  }
});

// node_modules/@material-tailwind/react/components/Tabs/TabsBody.js
var require_TabsBody = __commonJS({
  "node_modules/@material-tailwind/react/components/Tabs/TabsBody.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { TabsBody: function() {
      return TabsBody;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _framerMotion = require_cjs2(), _deepmerge = _interopRequireDefault(require_cjs()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _tabsContext = require_TabsContext(), _tabs = require_tabs2();
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var TabsBody = _react.default.forwardRef(function(_param, ref) {
      var animate2 = _param.animate, className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["animate", "className", "children"]), tabsBody = (0, _theme.useTheme)().tabsBody, defaultProps = tabsBody.defaultProps, base = tabsBody.styles.base, dispatch = (0, _tabsContext.useTabs)().dispatch;
      className = className ?? defaultProps.className, animate2 = animate2 ?? defaultProps.animate;
      var tabsBodyClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base)), className), mainAnimation = _react.default.useMemo(function() {
        return { initial: { opacity: 0, position: "absolute", top: "0", left: "0", zIndex: 1, transition: { duration: 0 } }, unmount: { opacity: 0, position: "absolute", top: "0", left: "0", zIndex: 1, transition: { duration: 0.5, times: [0.4, 0, 0.2, 1] } }, mount: { opacity: 1, position: "relative", zIndex: 2, transition: { duration: 0.5, times: [0.4, 0, 0.2, 1] } } };
      }, []), appliedAnimation = _react.default.useMemo(function() {
        return (0, _deepmerge.default)(mainAnimation, animate2);
      }, [animate2, mainAnimation]);
      return (0, _framerMotion.useIsomorphicLayoutEffect)(function() {
        (0, _tabsContext.setAnimation)(dispatch, appliedAnimation);
      }, [appliedAnimation, dispatch]), _react.default.createElement("div", _extends5({}, rest, { ref, className: tabsBodyClasses }), children);
    });
    TabsBody.propTypes = { animate: _tabs.propTypesAnimate, className: _tabs.propTypesClassName, children: _tabs.propTypesChildren };
    TabsBody.displayName = "MaterialTailwind.TabsBody";
    var _default = TabsBody;
  }
});

// node_modules/@material-tailwind/react/components/Tabs/TabsHeader.js
var require_TabsHeader = __commonJS({
  "node_modules/@material-tailwind/react/components/Tabs/TabsHeader.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { TabsHeader: function() {
      return TabsHeader;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _tabsContext = require_TabsContext(), _tabs = require_tabs2();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var TabsHeader = _react.default.forwardRef(function(_param, ref) {
      var indicatorProps = _param.indicatorProps, className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["indicatorProps", "className", "children"]), tabsHeader = (0, _theme.useTheme)().tabsHeader, defaultProps = tabsHeader.defaultProps, styles = tabsHeader.styles, _useTabs = (0, _tabsContext.useTabs)(), state = _useTabs.state, dispatch = _useTabs.dispatch, orientation = state.orientation;
      _react.default.useEffect(function() {
        (0, _tabsContext.setIndicator)(dispatch, indicatorProps);
      }, [dispatch, indicatorProps]), className = className ?? defaultProps.className;
      var tabsHeaderClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(styles.base), _defineProperty2({}, styles[orientation] && (0, _objectsToString.default)(styles[orientation]), orientation)), className);
      return _react.default.createElement("nav", null, _react.default.createElement("ul", _extends5({}, rest, { ref, role: "tablist", className: tabsHeaderClasses }), children));
    });
    TabsHeader.propTypes = { indicatorProps: _tabs.propTypesIndicator, className: _tabs.propTypesClassName, children: _tabs.propTypesChildren };
    TabsHeader.displayName = "MaterialTailwind.TabsHeader";
    var _default = TabsHeader;
  }
});

// node_modules/@material-tailwind/react/components/Tabs/TabPanel.js
var require_TabPanel = __commonJS({
  "node_modules/@material-tailwind/react/components/Tabs/TabPanel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { TabPanel: function() {
      return TabPanel;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _framerMotion = require_cjs2(), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _tabsContext = require_TabsContext(), _tabs = require_tabs2();
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var TabPanel = _react.default.forwardRef(function(_param, ref) {
      var value = _param.value, className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["value", "className", "children"]), tabPanel = (0, _theme.useTheme)().tabPanel, defaultProps = tabPanel.defaultProps, base = tabPanel.styles.base, state = (0, _tabsContext.useTabs)().state, active = state.active, appliedAnimation = state.appliedAnimation, isInitial = state.isInitial;
      className = className ?? defaultProps.className;
      var tabPanelClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base)), className), NewAnimatePresence = _framerMotion.AnimatePresence;
      return _react.default.createElement(_framerMotion.LazyMotion, { features: _framerMotion.domAnimation }, _react.default.createElement(NewAnimatePresence, { exitBeforeEnter: !0 }, _react.default.createElement(_framerMotion.m.div, _extends5({}, rest, { ref, role: "tabpanel", className: tabPanelClasses, initial: "unmount", exit: "unmount", animate: active === value ? "mount" : isInitial ? "initial" : "unmount", variants: appliedAnimation, "data-value": value }), children)));
    });
    TabPanel.propTypes = { value: _tabs.propTypesValue, className: _tabs.propTypesClassName, children: _tabs.propTypesChildren };
    TabPanel.displayName = "MaterialTailwind.TabPanel";
    var _default = TabPanel;
  }
});

// node_modules/@material-tailwind/react/components/Tabs/index.js
var require_Tabs = __commonJS({
  "node_modules/@material-tailwind/react/components/Tabs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Tabs: function() {
      return Tabs;
    }, Tab: function() {
      return _tab.Tab;
    }, TabsBody: function() {
      return _tabsBody.TabsBody;
    }, TabsHeader: function() {
      return _tabsHeader.TabsHeader;
    }, TabPanel: function() {
      return _tabPanel.TabPanel;
    }, useTabs: function() {
      return _tabsContext.useTabs;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _tabsContext = require_TabsContext(), _tab = require_Tab(), _tabsBody = require_TabsBody(), _tabsHeader = require_TabsHeader(), _tabPanel = require_TabPanel(), _tabs = require_tabs2();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Tabs = _react.default.forwardRef(function(_param, ref) {
      var value = _param.value, className = _param.className, orientation = _param.orientation, children = _param.children, rest = _objectWithoutProperties(_param, ["value", "className", "orientation", "children"]), tabs = (0, _theme.useTheme)().tabs, defaultProps = tabs.defaultProps, styles = tabs.styles, tabsId = _react.default.useId();
      className = className ?? defaultProps.className, orientation = orientation ?? defaultProps.orientation;
      var tabsClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(styles.base), _defineProperty2({}, styles[orientation] && (0, _objectsToString.default)(styles[orientation]), orientation)), className);
      return _react.default.createElement(_tabsContext.TabsContextProvider, { id: tabsId, value, orientation }, _react.default.createElement("div", _extends5({}, rest, { ref, className: tabsClasses }), children));
    });
    Tabs.propTypes = { id: _tabs.propTypesId, value: _tabs.propTypesValue, className: _tabs.propTypesClassName, orientation: _tabs.propTypesOrientation, children: _tabs.propTypesChildren };
    Tabs.displayName = "MaterialTailwind.Tabs";
    var _default = Object.assign(Tabs, { Tab: _tab.Tab, Body: _tabsBody.TabsBody, Header: _tabsHeader.TabsHeader, Panel: _tabPanel.TabPanel });
  }
});

// node_modules/@material-tailwind/react/components/Textarea/index.js
var require_Textarea = __commonJS({
  "node_modules/@material-tailwind/react/components/Textarea/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Textarea: function() {
      return Textarea;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _classnames = _interopRequireDefault(require_classnames()), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _input = require_input();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Textarea = _react.default.forwardRef(function(_param, ref) {
      var variant = _param.variant, color = _param.color, size = _param.size, label = _param.label, error = _param.error, success = _param.success, resize2 = _param.resize, labelProps = _param.labelProps, containerProps = _param.containerProps, shrink = _param.shrink, className = _param.className, rest = _objectWithoutProperties(_param, ["variant", "color", "size", "label", "error", "success", "resize", "labelProps", "containerProps", "shrink", "className"]), textarea = (0, _theme.useTheme)().textarea, defaultProps = textarea.defaultProps, valid = textarea.valid, styles = textarea.styles, base = styles.base, variants = styles.variants;
      variant = variant ?? defaultProps.variant, size = size ?? defaultProps.size, color = color ?? defaultProps.color, label = label ?? defaultProps.label, labelProps = labelProps ?? defaultProps.labelProps, containerProps = containerProps ?? defaultProps.containerProps, shrink = shrink ?? defaultProps.shrink, className = className ?? defaultProps.className;
      var textareaVariant = variants[(0, _findMatch.default)(valid.variants, variant, "outlined")], textareaError = (0, _objectsToString.default)(textareaVariant.error.textarea), textareaSuccess = (0, _objectsToString.default)(textareaVariant.success.textarea), textareaShrink = (0, _objectsToString.default)(textareaVariant.shrink.textarea), textareaColor = (0, _objectsToString.default)(textareaVariant.colors.textarea[(0, _findMatch.default)(valid.colors, color, "gray")]), labelError = (0, _objectsToString.default)(textareaVariant.error.label), labelSuccess = (0, _objectsToString.default)(textareaVariant.success.label), labelShrink = (0, _objectsToString.default)(textareaVariant.shrink.label), labelColor = (0, _objectsToString.default)(textareaVariant.colors.label[(0, _findMatch.default)(valid.colors, color, "gray")]), containerClasses = (0, _classnames.default)((0, _objectsToString.default)(base.container), containerProps == null ? void 0 : containerProps.className), textareaClasses = (0, _classnames.default)((0, _objectsToString.default)(base.textarea), (0, _objectsToString.default)(textareaVariant.base.textarea), (0, _objectsToString.default)(textareaVariant.sizes[(0, _findMatch.default)(valid.sizes, size, "md")].textarea), _defineProperty2({}, textareaColor, !error && !success), _defineProperty2({}, textareaError, error), _defineProperty2({}, textareaSuccess, success), _defineProperty2({}, textareaShrink, shrink), resize2 ? "" : "!resize-none", className), labelClasses = (0, _classnames.default)((0, _objectsToString.default)(base.label), (0, _objectsToString.default)(textareaVariant.base.label), (0, _objectsToString.default)(textareaVariant.sizes[(0, _findMatch.default)(valid.sizes, size, "md")].label), _defineProperty2({}, labelColor, !error && !success), _defineProperty2({}, labelError, error), _defineProperty2({}, labelSuccess, success), _defineProperty2({}, labelShrink, shrink), labelProps == null ? void 0 : labelProps.className);
      return _react.default.createElement("div", { ref, className: containerClasses }, _react.default.createElement("textarea", _extends5({}, rest, { className: textareaClasses, placeholder: (rest == null ? void 0 : rest.placeholder) || " " })), _react.default.createElement("label", { className: labelClasses }, label));
    });
    Textarea.propTypes = { variant: _propTypes.default.oneOf(_input.propTypesVariant), size: _propTypes.default.oneOf(_input.propTypesSize), color: _propTypes.default.oneOf(_input.propTypesColor), label: _input.propTypesLabel, error: _input.propTypesError, success: _input.propTypesSuccess, resize: _input.propTypesResize, labelProps: _input.propTypesLabelProps, containerProps: _input.propTypesContainerProps, shrink: _input.propTypesShrink, className: _input.propTypesClassName };
    Textarea.displayName = "MaterialTailwind.Textarea";
    var _default = Textarea;
  }
});

// node_modules/@material-tailwind/react/components/Tooltip/index.js
var require_Tooltip = __commonJS({
  "node_modules/@material-tailwind/react/components/Tooltip/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Tooltip: function() {
      return Tooltip2;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _react1 = require_floating_ui_react_umd(), _framerMotion = require_cjs2(), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _deepmerge = _interopRequireDefault(require_cjs()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _popover = require_popover2();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithHoles2(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArrayLimit2(arr, i7) {
      var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i != null) {
        var _arr = [], _n = !0, _d = !1, _s, _e3;
        try {
          for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i7 && _arr.length === i7)); _n = !0)
            ;
        } catch (err) {
          _d = !0, _e3 = err;
        } finally {
          try {
            !_n && _i.return != null && _i.return();
          } finally {
            if (_d)
              throw _e3;
          }
        }
        return _arr;
      }
    }
    function _nonIterableRest2() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _objectSpread(target) {
      for (var i7 = 1; i7 < arguments.length; i7++) {
        var source = arguments[i7] != null ? arguments[i7] : {}, ownKeys2 = Object.keys(source);
        typeof Object.getOwnPropertySymbols == "function" && (ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }))), ownKeys2.forEach(function(key) {
          _defineProperty2(target, key, source[key]);
        });
      }
      return target;
    }
    function ownKeys(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        })), keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpreadProps(target, source) {
      return source = source ?? {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      }), target;
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    function _slicedToArray2(arr, i7) {
      return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i7) || _unsupportedIterableToArray2(arr, i7) || _nonIterableRest2();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var Tooltip2 = _react.default.forwardRef(function(_param, ref) {
      var open = _param.open, handler = _param.handler, content = _param.content, interactive = _param.interactive, placement = _param.placement, offset = _param.offset, dismiss = _param.dismiss, animate2 = _param.animate, className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["open", "handler", "content", "interactive", "placement", "offset", "dismiss", "animate", "className", "children"]), tooltip = (0, _theme.useTheme)().tooltip, defaultProps = tooltip.defaultProps, base = tooltip.styles.base, _React_useState = _slicedToArray2(_react.default.useState(!1), 2), internalOpen = _React_useState[0], setInternalOpen = _React_useState[1];
      open = open ?? internalOpen, handler = handler ?? setInternalOpen, interactive = interactive ?? defaultProps.interactive, placement = placement ?? defaultProps.placement, offset = offset ?? defaultProps.offset, dismiss = dismiss ?? defaultProps.dismiss, animate2 = animate2 ?? defaultProps.animate, className = className ?? defaultProps.className;
      var tooltipClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base)), className), animation = { unmount: { opacity: 0 }, mount: { opacity: 1 } }, appliedAnimation = (0, _deepmerge.default)(animation, animate2), _useFloating = (0, _react1.useFloating)({ open, onOpenChange: handler, middleware: [(0, _react1.offset)(offset), (0, _react1.flip)(), (0, _react1.shift)()], placement }), x5 = _useFloating.x, y6 = _useFloating.y, reference = _useFloating.reference, floating = _useFloating.floating, strategy = _useFloating.strategy, refs = _useFloating.refs, update = _useFloating.update, context = _useFloating.context, _useInteractions = (0, _react1.useInteractions)([(0, _react1.useClick)(context, { enabled: interactive }), (0, _react1.useFocus)(context), (0, _react1.useHover)(context), (0, _react1.useRole)(context, { role: "tooltip" }), (0, _react1.useDismiss)(context, dismiss)]), getReferenceProps = _useInteractions.getReferenceProps, getFloatingProps = _useInteractions.getFloatingProps;
      _react.default.useEffect(function() {
        if (refs.reference.current && refs.floating.current && open)
          return (0, _react1.autoUpdate)(refs.reference.current, refs.floating.current, update);
      }, [open, update, refs.reference, refs.floating]);
      var mergedRef = (0, _react1.useMergeRefs)([ref, floating]), childMergedRef = (0, _react1.useMergeRefs)([ref, reference]), NewAnimatePresence = _framerMotion.AnimatePresence;
      return _react.default.createElement(_react.default.Fragment, null, typeof children == "string" ? _react.default.createElement("span", _extends5({}, getReferenceProps({ ref: childMergedRef })), children) : _react.default.cloneElement(children, _objectSpread({}, getReferenceProps(_objectSpreadProps(_objectSpread({}, children == null ? void 0 : children.props), { ref: childMergedRef })))), _react.default.createElement(_framerMotion.LazyMotion, { features: _framerMotion.domAnimation }, _react.default.createElement(_react1.FloatingPortal, null, _react.default.createElement(NewAnimatePresence, null, open && _react.default.createElement(_framerMotion.m.div, _extends5({}, getFloatingProps(_objectSpreadProps(_objectSpread({}, rest), { ref: mergedRef, className: tooltipClasses, style: { position: strategy, top: y6 ?? "", left: x5 ?? "" } })), { initial: "unmount", exit: "unmount", animate: open ? "mount" : "unmount", variants: appliedAnimation }), content)))));
    });
    Tooltip2.propTypes = { open: _popover.propTypesOpen, handler: _popover.propTypesHandler, content: _popover.propTypesContent, interactive: _popover.propTypesInteractive, placement: _propTypes.default.oneOf(_popover.propTypesPlacement), offset: _popover.propTypesOffset, dismiss: _popover.propTypesDismiss, animate: _popover.propTypesAnimate, className: _popover.propTypesClassName, children: _popover.propTypesChildren };
    Tooltip2.displayName = "MaterialTailwind.Tooltip";
    var _default = Tooltip2;
  }
});

// node_modules/@material-tailwind/react/components/Typography/index.js
var require_Typography = __commonJS({
  "node_modules/@material-tailwind/react/components/Typography/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Typography: function() {
      return Typography4;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _typography = require_typography();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectSpread(target) {
      for (var i7 = 1; i7 < arguments.length; i7++) {
        var source = arguments[i7] != null ? arguments[i7] : {}, ownKeys2 = Object.keys(source);
        typeof Object.getOwnPropertySymbols == "function" && (ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }))), ownKeys2.forEach(function(key) {
          _defineProperty2(target, key, source[key]);
        });
      }
      return target;
    }
    function ownKeys(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        })), keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpreadProps(target, source) {
      return source = source ?? {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      }), target;
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Typography4 = _react.default.forwardRef(function(_param, ref) {
      var variant = _param.variant, color = _param.color, textGradient = _param.textGradient, as = _param.as, className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["variant", "color", "textGradient", "as", "className", "children"]), typography = (0, _theme.useTheme)().typography, defaultProps = typography.defaultProps, valid = typography.valid, styles = typography.styles, variants = styles.variants, colors = styles.colors, gradient = styles.textGradient;
      variant = variant ?? defaultProps.variant, color = color ?? defaultProps.color, textGradient = textGradient || defaultProps.textGradient, as = as ?? void 0, className = className ?? defaultProps.className;
      var typographyVariant = (0, _objectsToString.default)(variants[(0, _findMatch.default)(valid.variants, variant, "paragraph")]), typographyColor = colors[(0, _findMatch.default)(valid.colors, color, "inherit")], gradientTextClasses = (0, _objectsToString.default)(gradient), classes = (0, _tailwindMerge.twMerge)((0, _classnames.default)(typographyVariant, _defineProperty2({}, typographyColor.color, !textGradient), _defineProperty2({}, gradientTextClasses, textGradient), _defineProperty2({}, typographyColor.gradient, textGradient)), className), template;
      switch (variant) {
        case "h1":
          template = _react.default.createElement(as || "h1", _objectSpreadProps(_objectSpread({}, rest), { ref, className: classes }), children);
          break;
        case "h2":
          template = _react.default.createElement(as || "h2", _objectSpreadProps(_objectSpread({}, rest), { ref, className: classes }), children);
          break;
        case "h3":
          template = _react.default.createElement(as || "h3", _objectSpreadProps(_objectSpread({}, rest), { ref, className: classes }), children);
          break;
        case "h4":
          template = _react.default.createElement(as || "h4", _objectSpreadProps(_objectSpread({}, rest), { ref, className: classes }), children);
          break;
        case "h5":
          template = _react.default.createElement(as || "h5", _objectSpreadProps(_objectSpread({}, rest), { ref, className: classes }), children);
          break;
        case "h6":
          template = _react.default.createElement(as || "h6", _objectSpreadProps(_objectSpread({}, rest), { ref, className: classes }), children);
          break;
        case "lead":
          template = _react.default.createElement(as || "p", _objectSpreadProps(_objectSpread({}, rest), { ref, className: classes }), children);
          break;
        case "paragraph":
          template = _react.default.createElement(as || "p", _objectSpreadProps(_objectSpread({}, rest), { ref, className: classes }), children);
          break;
        case "small":
          template = _react.default.createElement(as || "p", _objectSpreadProps(_objectSpread({}, rest), { ref, className: classes }), children);
          break;
        default:
          template = _react.default.createElement(as || "p", _objectSpreadProps(_objectSpread({}, rest), { ref, className: classes }), children);
          break;
      }
      return template;
    });
    Typography4.propTypes = { variant: _propTypes.default.oneOf(_typography.propTypesVariant), color: _propTypes.default.oneOf(_typography.propTypesColor), as: _typography.propTypesAs, textGradient: _typography.propTypesTextGradient, className: _typography.propTypesClassName, children: _typography.propTypesChildren };
    Typography4.displayName = "MaterialTailwind.Typography";
    var _default = Typography4;
  }
});

// node_modules/@material-tailwind/react/types/components/collapse.js
var require_collapse2 = __commonJS({
  "node_modules/@material-tailwind/react/types/components/collapse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesChildren: function() {
      return propTypesChildren;
    }, propTypesOpen: function() {
      return propTypesOpen;
    }, propTypesAnimate: function() {
      return propTypesAnimate;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var propTypesClassName = _propTypes.default.string, propTypesChildren = _propTypes.default.node.isRequired, propTypesOpen = _propTypes.default.bool.isRequired, propTypesAnimate = _generic.propTypesAnimation;
  }
});

// node_modules/@material-tailwind/react/components/Collapse/index.js
var require_Collapse = __commonJS({
  "node_modules/@material-tailwind/react/components/Collapse/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Collapse: function() {
      return Collapse;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _framerMotion = require_cjs2(), _react1 = require_floating_ui_react_umd(), _deepmerge = _interopRequireDefault(require_cjs()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _collapse = require_collapse2();
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Collapse = _react.default.forwardRef(function(_param, ref) {
      var open = _param.open, animate2 = _param.animate, className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["open", "animate", "className", "children"]), mobileNavRef = _react.default.useRef(null), collapse = (0, _theme.useTheme)().collapse, styles = collapse.styles, base = styles.base;
      animate2 = animate2 ?? {}, className = className ?? "";
      var classes = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base)), className), mainAnimation = { unmount: { height: "0px", transition: { duration: 0.3, times: [0.4, 0, 0.2, 1] } }, mount: { height: "auto", transition: { duration: 0.3, times: [0.4, 0, 0.2, 1] } } }, appliedAnimation = (0, _deepmerge.default)(mainAnimation, animate2), NewAnimatePresence = _framerMotion.AnimatePresence, mergedRef = (0, _react1.useMergeRefs)([ref, mobileNavRef]);
      return _react.default.createElement(_framerMotion.LazyMotion, { features: _framerMotion.domAnimation }, _react.default.createElement(NewAnimatePresence, null, _react.default.createElement(_framerMotion.m.div, _extends5({}, rest, { ref: mergedRef, className: classes, initial: "unmount", exit: "unmount", animate: open ? "mount" : "unmount", variants: appliedAnimation }), children)));
    });
    Collapse.displayName = "MaterialTailwind.Collapse";
    Collapse.propTypes = { open: _collapse.propTypesOpen, animate: _collapse.propTypesAnimate, className: _collapse.propTypesClassName, children: _collapse.propTypesChildren };
    var _default = Collapse;
  }
});

// node_modules/@material-tailwind/react/types/components/list.js
var require_list2 = __commonJS({
  "node_modules/@material-tailwind/react/types/components/list.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesDisabled: function() {
      return propTypesDisabled;
    }, propTypesSelected: function() {
      return propTypesSelected;
    }, propTypesRipple: function() {
      return propTypesRipple;
    }, propTypesChildren: function() {
      return propTypesChildren;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var propTypesClassName = _propTypes.default.string, propTypesDisabled = _propTypes.default.bool, propTypesSelected = _propTypes.default.bool, propTypesRipple = _propTypes.default.bool, propTypesChildren = _propTypes.default.node.isRequired;
  }
});

// node_modules/@material-tailwind/react/components/List/ListItemPrefix.js
var require_ListItemPrefix = __commonJS({
  "node_modules/@material-tailwind/react/components/List/ListItemPrefix.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { ListItemPrefix: function() {
      return ListItemPrefix2;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _theme = require_theme2(), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _list2 = require_list2();
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var ListItemPrefix2 = _react.default.forwardRef(function(_param, ref) {
      var className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["className", "children"]), list2 = (0, _theme.useTheme)().list, base = list2.styles.base, listItemPrefixClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.itemPrefix)), className);
      return _react.default.createElement("div", _extends5({}, rest, { ref, className: listItemPrefixClasses }), children);
    });
    ListItemPrefix2.propTypes = { className: _list2.propTypesClassName, children: _list2.propTypesChildren };
    ListItemPrefix2.displayName = "MaterialTailwind.ListItemPrefix";
    var _default = ListItemPrefix2;
  }
});

// node_modules/@material-tailwind/react/components/List/ListItemSuffix.js
var require_ListItemSuffix = __commonJS({
  "node_modules/@material-tailwind/react/components/List/ListItemSuffix.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { ListItemSuffix: function() {
      return ListItemSuffix2;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _theme = require_theme2(), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _list2 = require_list2();
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var ListItemSuffix2 = _react.default.forwardRef(function(_param, ref) {
      var className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["className", "children"]), list2 = (0, _theme.useTheme)().list, base = list2.styles.base, listItemSuffixClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.itemSuffix)), className);
      return _react.default.createElement("div", _extends5({}, rest, { ref, className: listItemSuffixClasses }), children);
    });
    ListItemSuffix2.propTypes = { className: _list2.propTypesClassName, children: _list2.propTypesChildren };
    ListItemSuffix2.displayName = "MaterialTailwind.ListItemSuffix";
    var _default = ListItemSuffix2;
  }
});

// node_modules/@material-tailwind/react/components/List/ListItem.js
var require_ListItem = __commonJS({
  "node_modules/@material-tailwind/react/components/List/ListItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { ListItem: function() {
      return ListItem2;
    }, ListItemPrefix: function() {
      return _listItemPrefix.ListItemPrefix;
    }, ListItemSuffix: function() {
      return _listItemSuffix.ListItemSuffix;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _theme = require_theme2(), _materialRippleEffects = _interopRequireDefault(require_material_ripple_effects()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _list2 = require_list2(), _listItemPrefix = require_ListItemPrefix(), _listItemSuffix = require_ListItemSuffix();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var ListItem2 = _react.default.forwardRef(function(_param, ref) {
      var className = _param.className, disabled = _param.disabled, selected = _param.selected, ripple = _param.ripple, children = _param.children, rest = _objectWithoutProperties(_param, ["className", "disabled", "selected", "ripple", "children"]), list2 = (0, _theme.useTheme)().list, defaultProps = list2.defaultProps, base = list2.styles.base;
      ripple = ripple ?? defaultProps.ripple;
      var rippleEffect = ripple !== void 0 && new _materialRippleEffects.default(), _obj, listItemClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.item.initial), (_obj = {}, _defineProperty2(_obj, (0, _objectsToString.default)(base.item.disabled), disabled), _defineProperty2(_obj, (0, _objectsToString.default)(base.item.selected), selected && !disabled), _obj)), className);
      return _react.default.createElement("div", _extends5({}, rest, { ref, role: "button", tabIndex: 0, className: listItemClasses, onMouseDown: function(e5) {
        var onMouseDown = rest == null ? void 0 : rest.onMouseDown;
        return ripple && rippleEffect.create(e5, "dark"), typeof onMouseDown == "function" && onMouseDown(e5);
      } }), children);
    });
    ListItem2.propTypes = { className: _list2.propTypesClassName, selected: _list2.propTypesSelected, disabled: _list2.propTypesDisabled, ripple: _list2.propTypesRipple, children: _list2.propTypesChildren };
    ListItem2.displayName = "MaterialTailwind.ListItem";
    var _default = Object.assign(ListItem2, { Prefix: _listItemPrefix.ListItemPrefix, Suffix: _listItemSuffix.ListItemSuffix });
  }
});

// node_modules/@material-tailwind/react/components/List/index.js
var require_List = __commonJS({
  "node_modules/@material-tailwind/react/components/List/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { List: function() {
      return List2;
    }, ListItem: function() {
      return _listItem.ListItem;
    }, ListItemPrefix: function() {
      return _listItemPrefix.ListItemPrefix;
    }, ListItemSuffix: function() {
      return _listItemSuffix.ListItemSuffix;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _theme = require_theme2(), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _list2 = require_list2(), _listItem = require_ListItem(), _listItemPrefix = require_ListItemPrefix(), _listItemSuffix = require_ListItemSuffix();
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var List2 = _react.default.forwardRef(function(_param, ref) {
      var className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["className", "children"]), list2 = (0, _theme.useTheme)().list, defaultProps = list2.defaultProps, base = list2.styles.base;
      className = className ?? defaultProps.className;
      var listClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.list)), className);
      return _react.default.createElement("nav", _extends5({}, rest, { ref, className: listClasses }), children);
    });
    List2.propTypes = { className: _list2.propTypesClassName, children: _list2.propTypesChildren };
    List2.displayName = "MaterialTailwind.List";
    var _default = Object.assign(List2, { Item: _listItem.ListItem, ItemPrefix: _listItemPrefix.ListItemPrefix, ItemSuffix: _listItemSuffix.ListItemSuffix });
  }
});

// node_modules/@material-tailwind/react/components/ButtonGroup/index.js
var require_ButtonGroup = __commonJS({
  "node_modules/@material-tailwind/react/components/ButtonGroup/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { ButtonGroup: function() {
      return ButtonGroup;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _button = require_button();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var ButtonGroup = _react.default.forwardRef(function(_param, ref) {
      var variant = _param.variant, size = _param.size, color = _param.color, fullWidth = _param.fullWidth, ripple = _param.ripple, className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["variant", "size", "color", "fullWidth", "ripple", "className", "children"]), buttonGroup = (0, _theme.useTheme)().buttonGroup, defaultProps = buttonGroup.defaultProps, styles = buttonGroup.styles, valid = buttonGroup.valid, base = styles.base, dividerColor = styles.dividerColor;
      variant = variant ?? defaultProps.variant, size = size ?? defaultProps.size, color = color ?? defaultProps.color, ripple = ripple ?? defaultProps.ripple, fullWidth = fullWidth ?? defaultProps.fullWidth, className = className ?? defaultProps.className;
      var _obj, classes = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.initial), (_obj = {}, _defineProperty2(_obj, (0, _objectsToString.default)(base.fullWidth), fullWidth), _defineProperty2(_obj, "divide-x", variant !== "outlined"), _defineProperty2(_obj, (0, _objectsToString.default)(dividerColor[(0, _findMatch.default)(valid.colors, color, "gray")]), variant !== "outlined"), _obj)), className);
      return _react.default.createElement("div", _extends5({}, rest, { ref, className: classes }), _react.default.Children.map(children, function(child, index3) {
        var _child_props;
        return _react.default.isValidElement(child) && _react.default.cloneElement(child, { variant, size, color, ripple, fullWidth, className: (0, _tailwindMerge.twMerge)((0, _classnames.default)({ "rounded-r-none": index3 !== _react.default.Children.count(children) - 1, "border-r-0": index3 !== _react.default.Children.count(children) - 1, "rounded-l-none": index3 !== 0 }), (_child_props = child.props) === null || _child_props === void 0 ? void 0 : _child_props.className) });
      }));
    });
    ButtonGroup.propTypes = { variant: _propTypes.default.oneOf(_button.propTypesVariant), size: _propTypes.default.oneOf(_button.propTypesSize), color: _propTypes.default.oneOf(_button.propTypesColor), fullWidth: _button.propTypesFullWidth, ripple: _button.propTypesRipple, className: _button.propTypesClassName, children: _button.propTypesChildren };
    ButtonGroup.displayName = "MaterialTailwind.ButtonGroup";
    var _default = ButtonGroup;
  }
});

// node_modules/@material-tailwind/react/types/components/carousel.js
var require_carousel2 = __commonJS({
  "node_modules/@material-tailwind/react/types/components/carousel.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesPrevArrow: function() {
      return propTypesPrevArrow;
    }, propTypesNextArrow: function() {
      return propTypesNextArrow;
    }, propTypesNavigation: function() {
      return propTypesNavigation;
    }, propTypesAutoplay: function() {
      return propTypesAutoplay;
    }, propTypesAutoplayDelay: function() {
      return propTypesAutoplayDelay;
    }, propTypesTransition: function() {
      return propTypesTransition;
    }, propTypesLoop: function() {
      return propTypesLoop;
    }, propTypesChildren: function() {
      return propTypesChildren;
    }, propTypesSlideRef: function() {
      return propTypesSlideRef;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var propTypesClassName = _propTypes.default.string, propTypesPrevArrow = _propTypes.default.func, propTypesNextArrow = _propTypes.default.func, propTypesNavigation = _propTypes.default.func, propTypesAutoplay = _propTypes.default.bool, propTypesAutoplayDelay = _propTypes.default.number, propTypesTransition = _propTypes.default.object, propTypesLoop = _propTypes.default.bool, propTypesChildren = _propTypes.default.node.isRequired, propTypesSlideRef = _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.shape({ current: _propTypes.default.any })]);
  }
});

// node_modules/@material-tailwind/react/components/Carousel/index.js
var require_Carousel = __commonJS({
  "node_modules/@material-tailwind/react/components/Carousel/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Carousel: function() {
      return Carousel;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _framerMotion = require_cjs2(), _react1 = require_floating_ui_react_umd(), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _carousel = require_carousel2();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithHoles2(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArrayLimit2(arr, i7) {
      var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i != null) {
        var _arr = [], _n = !0, _d = !1, _s, _e3;
        try {
          for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i7 && _arr.length === i7)); _n = !0)
            ;
        } catch (err) {
          _d = !0, _e3 = err;
        } finally {
          try {
            !_n && _i.return != null && _i.return();
          } finally {
            if (_d)
              throw _e3;
          }
        }
        return _arr;
      }
    }
    function _nonIterableRest2() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    function _slicedToArray2(arr, i7) {
      return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i7) || _unsupportedIterableToArray2(arr, i7) || _nonIterableRest2();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var Carousel = _react.default.forwardRef(function(_param, ref) {
      var children = _param.children, prevArrow = _param.prevArrow, nextArrow = _param.nextArrow, navigation = _param.navigation, autoplay = _param.autoplay, autoplayDelay = _param.autoplayDelay, transition = _param.transition, loop = _param.loop, className = _param.className, slideRef = _param.slideRef, rest = _objectWithoutProperties(_param, ["children", "prevArrow", "nextArrow", "navigation", "autoplay", "autoplayDelay", "transition", "loop", "className", "slideRef"]), carousel = (0, _theme.useTheme)().carousel, defaultProps = carousel.defaultProps, base = carousel.styles.base, x5 = (0, _framerMotion.useMotionValue)(0), containerRef = _react.default.useRef(null), _React_useState = _slicedToArray2(_react.default.useState(0), 2), index3 = _React_useState[0], setIndex = _React_useState[1], childrens = _react.default.Children.toArray(children);
      className = className ?? defaultProps.className, prevArrow = prevArrow ?? defaultProps.prevArrow, nextArrow = nextArrow ?? defaultProps.nextArrow, navigation = navigation ?? defaultProps.navigation, autoplay = autoplay ?? defaultProps.autoplay, autoplayDelay = autoplayDelay ?? defaultProps.autoplayDelay, transition = transition ?? defaultProps.transition, loop = loop ?? defaultProps.loop;
      var carouselClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.carousel)), className), slideClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.slide))), calculateNewX = _react.default.useCallback(function() {
        var _containerRef_current;
        return -index3 * (((_containerRef_current = containerRef.current) === null || _containerRef_current === void 0 ? void 0 : _containerRef_current.clientWidth) || 0);
      }, [index3]), handleNext = _react.default.useCallback(function() {
        var idx = loop ? 0 : index3;
        setIndex(index3 + 1 === childrens.length ? idx : index3 + 1);
      }, [index3, loop, childrens.length]), handlePrev = function() {
        var idx = loop ? childrens.length - 1 : 0;
        setIndex(index3 - 1 < 0 ? idx : index3 - 1);
      };
      _react.default.useEffect(function() {
        var controls2 = (0, _framerMotion.animate)(x5, calculateNewX(), transition);
        return controls2.stop;
      }, [calculateNewX, index3, x5, transition]), _react.default.useEffect(function() {
        window.addEventListener("resize", function() {
          (0, _framerMotion.animate)(x5, calculateNewX(), transition);
        });
      }, [calculateNewX, transition, x5]), _react.default.useEffect(function() {
        if (autoplay) {
          var timer = setInterval(function() {
            return handleNext();
          }, autoplayDelay);
          return function() {
            return clearInterval(timer);
          };
        }
      }, [autoplay, handleNext, autoplayDelay]);
      var mergedRefs = (0, _react1.useMergeRefs)([containerRef, ref]);
      return _react.default.createElement("div", _extends5({}, rest, { ref: mergedRefs, className: carouselClasses }), childrens.map(function(child, i7) {
        return _react.default.createElement(_framerMotion.LazyMotion, { key: i7, features: _framerMotion.domAnimation }, _react.default.createElement(_framerMotion.m.div, { ref: slideRef, className: slideClasses, style: { x: x5, left: "".concat(i7 * 100, "%"), right: "".concat(i7 * 100, "%") } }, child));
      }), prevArrow && prevArrow({ loop, handlePrev, activeIndex: index3, firstIndex: index3 === 0 }), nextArrow && nextArrow({ loop, handleNext, activeIndex: index3, lastIndex: index3 === childrens.length - 1 }), navigation && navigation({ setActiveIndex: setIndex, activeIndex: index3, length: childrens.length }));
    });
    Carousel.propTypes = { className: _carousel.propTypesClassName, children: _carousel.propTypesChildren, nextArrow: _carousel.propTypesNextArrow, prevArrow: _carousel.propTypesPrevArrow, navigation: _carousel.propTypesNavigation, autoplay: _carousel.propTypesAutoplay, autoplayDelay: _carousel.propTypesAutoplayDelay, transition: _carousel.propTypesTransition, loop: _carousel.propTypesLoop, slideRef: _carousel.propTypesSlideRef };
    Carousel.displayName = "MaterialTailwind.Carousel";
    var _default = Carousel;
  }
});

// node_modules/@material-tailwind/react/types/components/drawer.js
var require_drawer2 = __commonJS({
  "node_modules/@material-tailwind/react/types/components/drawer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesOpen: function() {
      return propTypesOpen;
    }, propTypesSize: function() {
      return propTypesSize;
    }, propTypesOverlay: function() {
      return propTypesOverlay;
    }, propTypesChildren: function() {
      return propTypesChildren;
    }, propTypesPlacement: function() {
      return propTypesPlacement;
    }, propTypesOverlayProps: function() {
      return propTypesOverlayProps;
    }, propTypesClassName: function() {
      return propTypesClassName;
    }, propTypesOnClose: function() {
      return propTypesOnClose;
    }, propTypesDismiss: function() {
      return propTypesDismiss;
    }, propTypesTransition: function() {
      return propTypesTransition;
    }, propTypesOverlayRef: function() {
      return propTypesOverlayRef;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var propTypesOpen = _propTypes.default.bool.isRequired, propTypesSize = _propTypes.default.number, propTypesOverlay = _propTypes.default.bool, propTypesChildren = _propTypes.default.node.isRequired, propTypesPlacement = ["top", "right", "bottom", "left"], propTypesOverlayProps = _propTypes.default.object, propTypesClassName = _propTypes.default.string, propTypesOnClose = _propTypes.default.func, propTypesDismiss = _generic.propTypesDismissType, propTypesTransition = _propTypes.default.object, propTypesOverlayRef = _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.shape({ current: _propTypes.default.any })]);
  }
});

// node_modules/@material-tailwind/react/components/Drawer/index.js
var require_Drawer = __commonJS({
  "node_modules/@material-tailwind/react/components/Drawer/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Drawer: function() {
      return Drawer;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _framerMotion = require_cjs2(), _react1 = require_floating_ui_react_umd(), _deepmerge = _interopRequireDefault(require_cjs()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _drawer = require_drawer2();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectSpread(target) {
      for (var i7 = 1; i7 < arguments.length; i7++) {
        var source = arguments[i7] != null ? arguments[i7] : {}, ownKeys = Object.keys(source);
        typeof Object.getOwnPropertySymbols == "function" && (ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }))), ownKeys.forEach(function(key) {
          _defineProperty2(target, key, source[key]);
        });
      }
      return target;
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Drawer = _react.default.forwardRef(function(_param, ref) {
      var open = _param.open, size = _param.size, overlay = _param.overlay, children = _param.children, placement = _param.placement, overlayProps = _param.overlayProps, className = _param.className, onClose = _param.onClose, dismiss = _param.dismiss, transition = _param.transition, overlayRef = _param.overlayRef, rest = _objectWithoutProperties(_param, ["open", "size", "overlay", "children", "placement", "overlayProps", "className", "onClose", "dismiss", "transition", "overlayRef"]), drawer = (0, _theme.useTheme)().drawer, defaultProps = drawer.defaultProps, base = drawer.styles.base, constrols = (0, _framerMotion.useAnimation)();
      size = size ?? defaultProps.size, overlay = overlay ?? defaultProps.overlay, placement = placement ?? defaultProps.placement, className = className ?? defaultProps.className, overlayProps = overlayProps ?? defaultProps.overlayProps, onClose = onClose ?? defaultProps.onClose;
      var _merge;
      dismiss = (_merge = (0, _deepmerge.default)(defaultProps.dismiss, dismiss || {})) !== null && _merge !== void 0 ? _merge : defaultProps.dismiss, transition = transition ?? defaultProps.transition;
      var drawerClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.drawer), { "top-0 right-0": placement === "right", "bottom-0 left-0": placement === "bottom", "top-0 left-0": placement === "top" || placement === "left" }), className), overlayClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.overlay)), overlayProps == null ? void 0 : overlayProps.className), context = (0, _react1.useFloating)({ open, onOpenChange: onClose }).context, getFloatingProps = (0, _react1.useInteractions)([(0, _react1.useDismiss)(context, dismiss)]).getFloatingProps;
      _react.default.useEffect(function() {
        constrols.start(open ? "open" : "close");
      }, [open, constrols, placement]);
      var drawerAnimation = { open: { x: 0, y: 0 }, close: { x: placement === "left" ? -size : placement === "right" ? size : 0, y: placement === "top" ? -size : placement === "bottom" ? size : 0 } }, backdropAnimation = { unmount: { opacity: 0, transition: { delay: 0.3 } }, mount: { opacity: 1 } };
      return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_framerMotion.LazyMotion, { features: _framerMotion.domAnimation }, _react.default.createElement(_framerMotion.AnimatePresence, null, overlay && open && _react.default.createElement(_framerMotion.m.div, { ref: overlayRef, className: overlayClasses, initial: "unmount", exit: "unmount", animate: open ? "mount" : "unmount", variants: backdropAnimation, transition: { duration: 0.3 } })), _react.default.createElement(_framerMotion.m.div, _extends5({}, getFloatingProps(_objectSpread({ ref }, rest)), { className: drawerClasses, style: { maxWidth: placement === "left" || placement === "right" ? size : "100%", maxHeight: placement === "top" || placement === "bottom" ? size : "100%", height: placement === "left" || placement === "right" ? "100vh" : "100%" }, initial: "close", animate: constrols, variants: drawerAnimation, transition }), children)));
    });
    Drawer.propTypes = { open: _drawer.propTypesOpen, size: _drawer.propTypesSize, overlay: _drawer.propTypesOverlay, children: _drawer.propTypesChildren, placement: _propTypes.default.oneOf(_drawer.propTypesPlacement), overlayProps: _drawer.propTypesOverlayProps, className: _drawer.propTypesClassName, onClose: _drawer.propTypesOnClose, dismiss: _drawer.propTypesDismiss, transition: _drawer.propTypesTransition, overlayRef: _drawer.propTypesOverlayRef };
    Drawer.displayName = "MaterialTailwind.Drawer";
    var _default = Drawer;
  }
});

// node_modules/@material-tailwind/react/components/Badge/index.js
var require_Badge = __commonJS({
  "node_modules/@material-tailwind/react/components/Badge/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Badge: function() {
      return Badge;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _deepmerge = _interopRequireDefault(require_cjs()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _badge = require_badge();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Badge = _react.default.forwardRef(function(_param, ref) {
      var color = _param.color, invisible = _param.invisible, withBorder = _param.withBorder, overlap = _param.overlap, placement = _param.placement, className = _param.className, content = _param.content, children = _param.children, containerProps = _param.containerProps, containerRef = _param.containerRef, rest = _objectWithoutProperties(_param, ["color", "invisible", "withBorder", "overlap", "placement", "className", "content", "children", "containerProps", "containerRef"]), badge = (0, _theme.useTheme)().badge, valid = badge.valid, defaultProps = badge.defaultProps, styles = badge.styles, base = styles.base, placements = styles.placements, colors = styles.colors;
      color = color ?? defaultProps.color, invisible = invisible ?? defaultProps.invisible, withBorder = withBorder ?? defaultProps.withBorder, overlap = overlap ?? defaultProps.overlap, placement = placement ?? defaultProps.placement;
      var _classnames1;
      className = (_classnames1 = (0, _classnames.default)(className, defaultProps.className)) !== null && _classnames1 !== void 0 ? _classnames1 : defaultProps.className;
      var _merge;
      containerProps = (_merge = (0, _deepmerge.default)(containerProps, defaultProps.containerProps || {})) !== null && _merge !== void 0 ? _merge : defaultProps.containerProps;
      var badgeInitialClasses = (0, _objectsToString.default)(base.badge.initial), badgeWithBorderClasses = (0, _objectsToString.default)(base.badge.withBorder), badgeWithContentClasses = (0, _objectsToString.default)(base.badge.withContent), badgeColorClasses = (0, _objectsToString.default)(colors[(0, _findMatch.default)(valid.colors, color, "red")]), badgePlacementClasses = (0, _objectsToString.default)(placements[(0, _findMatch.default)(valid.placements, placement, "top-end")][(0, _findMatch.default)(valid.overlaps, overlap, "square")]), _obj, badgeClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)(badgeInitialClasses, badgePlacementClasses, badgeColorClasses, (_obj = {}, _defineProperty2(_obj, badgeWithBorderClasses, withBorder), _defineProperty2(_obj, badgeWithContentClasses, content), _obj)), className), badgeContainerClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.container), containerProps == null ? void 0 : containerProps.className));
      return _react.default.createElement("div", _extends5({ ref: containerRef }, containerProps, { className: badgeContainerClasses }), children, !invisible && _react.default.createElement("span", _extends5({}, rest, { ref, className: badgeClasses }), content));
    });
    Badge.propTypes = { color: _propTypes.default.oneOf(_badge.propTypesColor), invisible: _badge.propTypesInvisible, withBorder: _badge.propTypesWithBorder, overlap: _propTypes.default.oneOf(_badge.propTypesOverlap), className: _badge.propTypesClassName, content: _badge.propTypesContent, children: _badge.propTypesChildren, placement: _propTypes.default.oneOf(_badge.propTypesPlacement), containerProps: _badge.propTypesContainerProps, containerRef: _badge.propTypesContainerRef };
    Badge.displayName = "MaterialTailwind.Badge";
    var _default = Badge;
  }
});

// node_modules/@material-tailwind/react/components/Rating/index.js
var require_Rating = __commonJS({
  "node_modules/@material-tailwind/react/components/Rating/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Rating: function() {
      return Rating;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _rating = require_rating();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithHoles2(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray2(arr);
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArray(iter) {
      if (typeof Symbol < "u" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _iterableToArrayLimit2(arr, i7) {
      var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i != null) {
        var _arr = [], _n = !0, _d = !1, _s, _e3;
        try {
          for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i7 && _arr.length === i7)); _n = !0)
            ;
        } catch (err) {
          _d = !0, _e3 = err;
        } finally {
          try {
            !_n && _i.return != null && _i.return();
          } finally {
            if (_d)
              throw _e3;
          }
        }
        return _arr;
      }
    }
    function _nonIterableRest2() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    function _slicedToArray2(arr, i7) {
      return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i7) || _unsupportedIterableToArray2(arr, i7) || _nonIterableRest2();
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var Rating = _react.default.forwardRef(function(_param, ref) {
      var count = _param.count, value = _param.value, ratedIcon = _param.ratedIcon, unratedIcon = _param.unratedIcon, ratedColor = _param.ratedColor, unratedColor = _param.unratedColor, className = _param.className, onChange = _param.onChange, readonly = _param.readonly, rest = _objectWithoutProperties(_param, ["count", "value", "ratedIcon", "unratedIcon", "ratedColor", "unratedColor", "className", "onChange", "readonly"]), _ratedIconInstance_props, _unratedIconInstance_props, rating = (0, _theme.useTheme)().rating, valid = rating.valid, defaultProps = rating.defaultProps, styles = rating.styles, base = styles.base, colors = styles.colors;
      count = count ?? defaultProps.count, value = value ?? defaultProps.value, ratedIcon = ratedIcon ?? defaultProps.ratedIcon, ratedIcon = ratedIcon ?? defaultProps.ratedIcon, unratedIcon = unratedIcon ?? defaultProps.unratedIcon, ratedColor = ratedColor ?? defaultProps.ratedColor, unratedColor = unratedColor ?? defaultProps.unratedColor, className = className ?? defaultProps.className, onChange = onChange ?? defaultProps.onChange, readonly = readonly ?? defaultProps.readonly;
      var _React_useState = _slicedToArray2(_react.default.useState(function() {
        return _toConsumableArray(Array(value).fill("rated")).concat(_toConsumableArray(Array(count - value).fill("un_rated")));
      }), 2), ratingValue = _React_useState[0], setRatingValue = _React_useState[1], _React_useState1 = _slicedToArray2(_react.default.useState(function() {
        return _toConsumableArray(Array(count).fill("un_rated"));
      }), 2), ratingOnHover = _React_useState1[0], setRatingOnHover = _React_useState1[1], _React_useState2 = _slicedToArray2(_react.default.useState(!1), 2), isHover = _React_useState2[0], setIsHover = _React_useState2[1], ratedColorClasses = (0, _objectsToString.default)(colors[(0, _findMatch.default)(valid.colors, ratedColor, "yellow")]), unratedColorClasses = (0, _objectsToString.default)(colors[(0, _findMatch.default)(valid.colors, unratedColor, "blue-gray")]), ratingClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.rating), className)), ratingIconClasses = (0, _objectsToString.default)(base.icon), ratedIconInstance = ratedIcon, unratedIconInstance = unratedIcon, customRatedIcon = _react.default.isValidElement(ratedIcon) && _react.default.cloneElement(ratedIconInstance, { className: (0, _tailwindMerge.twMerge)((0, _classnames.default)(ratingIconClasses, ratedColorClasses, ratedIconInstance == null || (_ratedIconInstance_props = ratedIconInstance.props) === null || _ratedIconInstance_props === void 0 ? void 0 : _ratedIconInstance_props.className)) }), customUnratedIcon = _react.default.isValidElement(ratedIcon) && _react.default.cloneElement(unratedIconInstance, { className: (0, _tailwindMerge.twMerge)((0, _classnames.default)(ratingIconClasses, unratedColorClasses, unratedIconInstance == null || (_unratedIconInstance_props = unratedIconInstance.props) === null || _unratedIconInstance_props === void 0 ? void 0 : _unratedIconInstance_props.className)) }), ratedIconEl = !_react.default.isValidElement(ratedIcon) && _react.default.createElement(ratedIcon, { className: (0, _tailwindMerge.twMerge)((0, _classnames.default)(ratingIconClasses, ratedColorClasses)) }), unratedIconEl = !_react.default.isValidElement(ratedIcon) && _react.default.createElement(unratedIcon, { className: (0, _tailwindMerge.twMerge)((0, _classnames.default)(ratingIconClasses, unratedColorClasses)) }), renderRating = function(data2) {
        return data2.map(function(el, index3) {
          return _react.default.createElement("span", { key: index3, onClick: function() {
            if (!readonly) {
              var nextRating = ratingValue.map(function(el2, i7) {
                return i7 <= index3 ? "rated" : "un_rated";
              });
              setRatingValue(nextRating), onChange && typeof onChange == "function" && onChange(nextRating.filter(function(el2) {
                return el2 === "rated";
              }).length);
            }
          }, onMouseEnter: function() {
            if (!readonly) {
              var nextRating = ratingOnHover.map(function(el2, i7) {
                return i7 <= index3 ? "rated" : "un_rated";
              });
              setIsHover(!0), setRatingOnHover(nextRating);
            }
          }, onMouseLeave: function() {
            return !readonly && setIsHover(!1);
          } }, _react.default.isValidElement(el === "rated" ? ratedIcon : unratedIcon) ? el === "rated" ? customRatedIcon : customUnratedIcon : el === "rated" ? ratedIconEl : unratedIconEl);
        });
      };
      return _react.default.createElement("div", _extends5({}, rest, { ref, className: ratingClasses }), renderRating(isHover ? ratingOnHover : ratingValue));
    });
    Rating.propTypes = { count: _rating.propTypesCount, value: _rating.propTypesValue, ratedIcon: _rating.propTypesRatedIcon, unratedIcon: _rating.propTypesUnratedIcon, ratedColor: _propTypes.default.oneOf(_rating.propTypesColor), unratedColor: _propTypes.default.oneOf(_rating.propTypesColor), className: _rating.propTypesClassName, onChange: _rating.propTypesOnChange, readonly: _rating.propTypesReadonly };
    Rating.displayName = "MaterialTailwind.Rating";
    var _default = Rating;
  }
});

// node_modules/@material-tailwind/react/components/Slider/index.js
var require_Slider = __commonJS({
  "node_modules/@material-tailwind/react/components/Slider/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Slider: function() {
      return Slider8;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _deepmerge = _interopRequireDefault(require_cjs()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _slider = require_slider2();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithHoles2(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArrayLimit2(arr, i7) {
      var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i != null) {
        var _arr = [], _n = !0, _d = !1, _s, _e3;
        try {
          for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i7 && _arr.length === i7)); _n = !0)
            ;
        } catch (err) {
          _d = !0, _e3 = err;
        } finally {
          try {
            !_n && _i.return != null && _i.return();
          } finally {
            if (_d)
              throw _e3;
          }
        }
        return _arr;
      }
    }
    function _nonIterableRest2() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    function _slicedToArray2(arr, i7) {
      return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i7) || _unsupportedIterableToArray2(arr, i7) || _nonIterableRest2();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var Slider8 = _react.default.forwardRef(function(_param, ref) {
      var color = _param.color, size = _param.size, className = _param.className, trackClassName = _param.trackClassName, thumbClassName = _param.thumbClassName, barClassName = _param.barClassName, value = _param.value, defaultValue = _param.defaultValue, onChange = _param.onChange, min = _param.min, max = _param.max, step = _param.step, inputRef = _param.inputRef, inputProps = _param.inputProps, rest = _objectWithoutProperties(_param, ["color", "size", "className", "trackClassName", "thumbClassName", "barClassName", "value", "defaultValue", "onChange", "min", "max", "step", "inputRef", "inputProps"]), slider = (0, _theme.useTheme)().slider, valid = slider.valid, defaultProps = slider.defaultProps, styles = slider.styles, base = styles.base, sizes = styles.sizes, colors = styles.colors, _React_useState = _slicedToArray2(_react.default.useState(defaultValue || 0), 2), innerValue = _React_useState[0], setInnerValue = _React_useState[1];
      _react.default.useMemo(function() {
        defaultValue && setInnerValue(defaultValue);
      }, [defaultValue]), color = color ?? defaultProps.color, size = size ?? defaultProps.size, min = min ?? defaultProps.min, max = max ?? defaultProps.max, step = step ?? defaultProps.step;
      var _classnames1;
      className = (_classnames1 = (0, _classnames.default)(defaultProps.className, className)) !== null && _classnames1 !== void 0 ? _classnames1 : defaultProps.className;
      var _classnames2;
      thumbClassName = (_classnames2 = (0, _classnames.default)(defaultProps.thumbClassName, thumbClassName)) !== null && _classnames2 !== void 0 ? _classnames2 : defaultProps.thumbClassName;
      var _classnames3;
      trackClassName = (_classnames3 = (0, _classnames.default)(defaultProps.trackClassName, trackClassName)) !== null && _classnames3 !== void 0 ? _classnames3 : defaultProps.trackClassName;
      var _classnames4;
      barClassName = (_classnames4 = (0, _classnames.default)(defaultProps.barClassName, barClassName)) !== null && _classnames4 !== void 0 ? _classnames4 : defaultProps.barClassName;
      var _merge;
      inputProps = (_merge = (0, _deepmerge.default)(inputProps, (defaultProps == null ? void 0 : defaultProps.inputProps) || {})) !== null && _merge !== void 0 ? _merge : defaultProps.inputProps;
      var sliderContainerClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.container), (0, _objectsToString.default)(colors[(0, _findMatch.default)(valid.colors, color, "gray")]), (0, _objectsToString.default)(sizes[(0, _findMatch.default)(valid.sizes, size, "md")].container), className)), sliderBarClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base.bar), barClassName)), sliderTrackClasses = (0, _classnames.default)((0, _objectsToString.default)(base.track), (0, _objectsToString.default)(sizes[(0, _findMatch.default)(valid.sizes, size, "md")].track)), sliderThumbClasses = (0, _classnames.default)((0, _objectsToString.default)(base.thumb), (0, _objectsToString.default)(sizes[(0, _findMatch.default)(valid.sizes, size, "md")].thumb)), sliderClasses = (0, _classnames.default)((0, _objectsToString.default)(base.slider), (0, _tailwindMerge.twMerge)(sliderTrackClasses, trackClassName), (0, _tailwindMerge.twMerge)(sliderThumbClasses, thumbClassName));
      return _react.default.createElement("div", _extends5({}, rest, { ref, className: sliderContainerClasses }), _react.default.createElement("label", { className: sliderBarClasses, style: { width: "".concat(value || innerValue, "%") } }), _react.default.createElement("input", _extends5({ ref: inputRef, type: "range", max, min, step, className: sliderClasses }, value ? { value } : null, { defaultValue, onChange: function(e5) {
        return onChange ? onChange(e5) : setInnerValue(Number(e5.target.value));
      } })));
    });
    Slider8.propTypes = { color: _propTypes.default.oneOf(_slider.propTypesColor), size: _propTypes.default.oneOf(_slider.propTypesSize), className: _slider.propTypesClassName, trackClassName: _slider.propTypesTrackClassName, thumbClassName: _slider.propTypesThumbClassName, barClassName: _slider.propTypesBarClassName, defaultValue: _slider.propTypesDefaultValue, value: _slider.propTypesValue, onChange: _slider.propTypesOnChange, min: _slider.propTypesMin, max: _slider.propTypesMax, step: _slider.propTypesStep, inputRef: _slider.propTypesInputRef, inputProps: _slider.propTypesInputProps };
    Slider8.displayName = "MaterialTailwind.Slider";
    var _default = Slider8;
  }
});

// node_modules/@material-tailwind/react/components/Spinner/index.js
var require_Spinner = __commonJS({
  "node_modules/@material-tailwind/react/components/Spinner/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Spinner: function() {
      return Spinner;
    }, default: function() {
      return _default;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _react = _interopRequireWildcard(require_react()), _classnames = _interopRequireDefault(require_classnames()), _tailwindMerge = require_dist2(), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _spinner = require_spinner();
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap != "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap(), cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule)
        return obj;
      if (obj === null || typeof obj != "object" && typeof obj != "function")
        return { default: obj };
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj))
        return cache.get(obj);
      var newObj = {}, hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj)
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          desc && (desc.get || desc.set) ? Object.defineProperty(newObj, key, desc) : newObj[key] = obj[key];
        }
      return newObj.default = obj, cache && cache.set(obj, newObj), newObj;
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Spinner = (0, _react.forwardRef)(function(_param, ref) {
      var color = _param.color, className = _param.className, rest = _objectWithoutProperties(_param, ["color", "className"]), spinner = (0, _theme.useTheme)().spinner, defaultProps = spinner.defaultProps, valid = spinner.valid, _spinner_styles = spinner.styles, base = _spinner_styles.base, colors = _spinner_styles.colors;
      color = color ?? defaultProps.color;
      var _classnames1;
      className = (_classnames1 = (0, _classnames.default)(defaultProps.className, className)) !== null && _classnames1 !== void 0 ? _classnames1 : defaultProps.className;
      var spinnerColor = (0, _objectsToString.default)(colors[(0, _findMatch.default)(valid.colors, color, "gray")]), spinnerClasses = (0, _tailwindMerge.twMerge)((0, _classnames.default)((0, _objectsToString.default)(base)), className), _rest_width, _rest_height;
      return _react.default.createElement("svg", _extends5({}, rest, { ref, className: spinnerClasses, viewBox: "0 0 64 64", fill: "none", xmlns: "http://www.w3.org/2000/svg", width: (_rest_width = rest == null ? void 0 : rest.width) !== null && _rest_width !== void 0 ? _rest_width : 24, height: (_rest_height = rest == null ? void 0 : rest.height) !== null && _rest_height !== void 0 ? _rest_height : 24 }), _react.default.createElement("path", { d: "M32 3C35.8083 3 39.5794 3.75011 43.0978 5.20749C46.6163 6.66488 49.8132 8.80101 52.5061 11.4939C55.199 14.1868 57.3351 17.3837 58.7925 20.9022C60.2499 24.4206 61 28.1917 61 32C61 35.8083 60.2499 39.5794 58.7925 43.0978C57.3351 46.6163 55.199 49.8132 52.5061 52.5061C49.8132 55.199 46.6163 57.3351 43.0978 58.7925C39.5794 60.2499 35.8083 61 32 61C28.1917 61 24.4206 60.2499 20.9022 58.7925C17.3837 57.3351 14.1868 55.199 11.4939 52.5061C8.801 49.8132 6.66487 46.6163 5.20749 43.0978C3.7501 39.5794 3 35.8083 3 32C3 28.1917 3.75011 24.4206 5.2075 20.9022C6.66489 17.3837 8.80101 14.1868 11.4939 11.4939C14.1868 8.80099 17.3838 6.66487 20.9022 5.20749C24.4206 3.7501 28.1917 3 32 3L32 3Z", stroke: "currentColor", strokeWidth: "5", strokeLinecap: "round", strokeLinejoin: "round" }), _react.default.createElement("path", { d: "M32 3C36.5778 3 41.0906 4.08374 45.1692 6.16256C49.2477 8.24138 52.7762 11.2562 55.466 14.9605C58.1558 18.6647 59.9304 22.9531 60.6448 27.4748C61.3591 31.9965 60.9928 36.6232 59.5759 40.9762", stroke: "currentColor", strokeWidth: "5", strokeLinecap: "round", strokeLinejoin: "round", className: spinnerColor }));
    });
    Spinner.propTypes = { color: _propTypes.default.oneOf(_spinner.propTypesColor), className: _spinner.propTypesClassName };
    Spinner.displayName = "MaterialTailwind.Spinner";
    var _default = Spinner;
  }
});

// node_modules/@material-tailwind/react/components/Timeline/TimelineItem.js
var require_TimelineItem = __commonJS({
  "node_modules/@material-tailwind/react/components/Timeline/TimelineItem.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { useTimelineItem: function() {
      return useTimelineItem;
    }, TimelineItem: function() {
      return TimelineItem;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _timeline = require_timeline2();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithHoles2(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArrayLimit2(arr, i7) {
      var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i != null) {
        var _arr = [], _n = !0, _d = !1, _s, _e3;
        try {
          for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i7 && _arr.length === i7)); _n = !0)
            ;
        } catch (err) {
          _d = !0, _e3 = err;
        } finally {
          try {
            !_n && _i.return != null && _i.return();
          } finally {
            if (_d)
              throw _e3;
          }
        }
        return _arr;
      }
    }
    function _nonIterableRest2() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    function _slicedToArray2(arr, i7) {
      return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i7) || _unsupportedIterableToArray2(arr, i7) || _nonIterableRest2();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var TimelineItemContext = _react.default.createContext(0);
    TimelineItemContext.displayName = "MaterialTailwind.TimelineItemContext";
    function useTimelineItem() {
      var context = _react.default.useContext(TimelineItemContext);
      if (!context)
        throw new Error("useTimelineItemContext() must be used within a TimelineItem. It happens when you use TimelineIcon, TimelineConnector or TimelineBody components outside the TimelineItem component.");
      return context;
    }
    var TimelineItem = _react.default.forwardRef(function(_param, ref) {
      var className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["className", "children"]), timelineItem = (0, _theme.useTheme)().timelineItem, styles = timelineItem.styles, base = styles.base, _React_useState = _slicedToArray2(_react.default.useState(0), 2), width = _React_useState[0], setWidth = _React_useState[1], contextValue = _react.default.useMemo(function() {
        return [width, setWidth];
      }, [width, setWidth]), classes = (0, _tailwindMerge.twMerge)((0, _objectsToString.default)(base), className);
      return _react.default.createElement(TimelineItemContext.Provider, { value: contextValue }, _react.default.createElement("li", _extends5({ ref }, rest, { className: classes }), children));
    });
    TimelineItem.propTypes = { className: _timeline.propTypeClassName, children: _timeline.propTypeChildren.isRequired };
    TimelineItem.displayName = "MaterialTailwind.TimelineItem";
    var _default = TimelineItem;
  }
});

// node_modules/@material-tailwind/react/components/Timeline/TimelineIcon.js
var require_TimelineIcon = __commonJS({
  "node_modules/@material-tailwind/react/components/Timeline/TimelineIcon.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { TimelineIcon: function() {
      return TimelineIcon;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _propTypes = _interopRequireDefault(require_prop_types()), _react1 = require_floating_ui_react_umd(), _tailwindMerge = require_dist2(), _findMatch = _interopRequireDefault(require_findMatch()), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _timelineItem = require_TimelineItem(), _timeline = require_timeline2();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithHoles2(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArrayLimit2(arr, i7) {
      var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i != null) {
        var _arr = [], _n = !0, _d = !1, _s, _e3;
        try {
          for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i7 && _arr.length === i7)); _n = !0)
            ;
        } catch (err) {
          _d = !0, _e3 = err;
        } finally {
          try {
            !_n && _i.return != null && _i.return();
          } finally {
            if (_d)
              throw _e3;
          }
        }
        return _arr;
      }
    }
    function _nonIterableRest2() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    function _slicedToArray2(arr, i7) {
      return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i7) || _unsupportedIterableToArray2(arr, i7) || _nonIterableRest2();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var TimelineIcon = _react.default.forwardRef(function(_param, ref) {
      var color = _param.color, variant = _param.variant, className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["color", "variant", "className", "children"]), timelineIcon = (0, _theme.useTheme)().timelineIcon, styles = timelineIcon.styles, valid = timelineIcon.valid, base = styles.base, variants = styles.variants, _useTimelineItem = _slicedToArray2((0, _timelineItem.useTimelineItem)(), 2), setWidth = _useTimelineItem[1], innerRef = _react.default.useRef(null), mergedRef = (0, _react1.useMergeRefs)([ref, innerRef]);
      _react.default.useEffect(function() {
        var iconElement = innerRef.current;
        if (iconElement) {
          var width = iconElement.getBoundingClientRect().width;
          return setWidth(width), function() {
            setWidth(0);
          };
        }
      }, [setWidth, className, children]);
      var variantClasses = (0, _objectsToString.default)(variants[(0, _findMatch.default)(valid.variants, variant, "filled")][(0, _findMatch.default)(valid.colors, color, "gray")]), classes = (0, _tailwindMerge.twMerge)((0, _objectsToString.default)(base), variantClasses, className);
      return _react.default.createElement("span", _extends5({ ref: mergedRef }, rest, { className: classes }), children);
    });
    TimelineIcon.propTypes = { children: _timeline.propTypeChildren, className: _timeline.propTypeClassName, color: _propTypes.default.oneOf(_timeline.propTypeColor), variant: _propTypes.default.oneOf(_timeline.propTypeVariant) };
    TimelineIcon.displayName = "MaterialTailwind.TimelineIcon";
    var _default = TimelineIcon;
  }
});

// node_modules/@material-tailwind/react/components/Timeline/TimelineBody.js
var require_TimelineBody = __commonJS({
  "node_modules/@material-tailwind/react/components/Timeline/TimelineBody.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { TimelineHeader: function() {
      return TimelineHeader;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _timelineItem = require_TimelineItem(), _timeline = require_timeline2();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithHoles2(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArrayLimit2(arr, i7) {
      var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i != null) {
        var _arr = [], _n = !0, _d = !1, _s, _e3;
        try {
          for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i7 && _arr.length === i7)); _n = !0)
            ;
        } catch (err) {
          _d = !0, _e3 = err;
        } finally {
          try {
            !_n && _i.return != null && _i.return();
          } finally {
            if (_d)
              throw _e3;
          }
        }
        return _arr;
      }
    }
    function _nonIterableRest2() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    function _slicedToArray2(arr, i7) {
      return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i7) || _unsupportedIterableToArray2(arr, i7) || _nonIterableRest2();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var TimelineHeader = _react.default.forwardRef(function(_param, ref) {
      var className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["className", "children"]), timelineBody = (0, _theme.useTheme)().timelineBody, styles = timelineBody.styles, base = styles.base, _useTimelineItem = _slicedToArray2((0, _timelineItem.useTimelineItem)(), 1), width = _useTimelineItem[0], classes = (0, _tailwindMerge.twMerge)((0, _objectsToString.default)(base), className);
      return _react.default.createElement("div", _extends5({}, rest, { ref, className: classes }), _react.default.createElement("span", { className: "pointer-events-none invisible h-full flex-shrink-0", style: { width: "".concat(width, "px") } }), _react.default.createElement("div", null, children));
    });
    TimelineHeader.propTypes = { children: _timeline.propTypeChildren, className: _timeline.propTypeClassName };
    TimelineHeader.displayName = "MaterialTailwind.TimelineHeader";
    var _default = TimelineHeader;
  }
});

// node_modules/@material-tailwind/react/components/Timeline/TimelineHeader.js
var require_TimelineHeader = __commonJS({
  "node_modules/@material-tailwind/react/components/Timeline/TimelineHeader.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { TimelineHeader: function() {
      return TimelineHeader;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _timeline = require_timeline2();
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var TimelineHeader = _react.default.forwardRef(function(_param, ref) {
      var className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["className", "children"]), timelineHeader = (0, _theme.useTheme)().timelineHeader, styles = timelineHeader.styles, base = styles.base, classes = (0, _tailwindMerge.twMerge)((0, _objectsToString.default)(base), className);
      return _react.default.createElement("div", _extends5({}, rest, { ref, className: classes }), children);
    });
    TimelineHeader.propTypes = { children: _timeline.propTypeChildren, className: _timeline.propTypeClassName };
    TimelineHeader.displayName = "MaterialTailwind.TimelineHeader";
    var _default = TimelineHeader;
  }
});

// node_modules/@material-tailwind/react/components/Timeline/TimelineConnector.js
var require_TimelineConnector = __commonJS({
  "node_modules/@material-tailwind/react/components/Timeline/TimelineConnector.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { TimelineConnector: function() {
      return TimelineConnector;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _timelineItem = require_TimelineItem(), _timeline = require_timeline2();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithHoles2(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArrayLimit2(arr, i7) {
      var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i != null) {
        var _arr = [], _n = !0, _d = !1, _s, _e3;
        try {
          for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i7 && _arr.length === i7)); _n = !0)
            ;
        } catch (err) {
          _d = !0, _e3 = err;
        } finally {
          try {
            !_n && _i.return != null && _i.return();
          } finally {
            if (_d)
              throw _e3;
          }
        }
        return _arr;
      }
    }
    function _nonIterableRest2() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    function _slicedToArray2(arr, i7) {
      return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i7) || _unsupportedIterableToArray2(arr, i7) || _nonIterableRest2();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var TimelineConnector = _react.default.forwardRef(function(_param, ref) {
      var className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["className", "children"]), _children_props, timelineConnector = (0, _theme.useTheme)().timelineConnector, styles = timelineConnector.styles, base = styles.base, _useTimelineItem = _slicedToArray2((0, _timelineItem.useTimelineItem)(), 1), width = _useTimelineItem[0], lineClasses = (0, _objectsToString.default)(base.line), containerClasses = (0, _tailwindMerge.twMerge)((0, _objectsToString.default)(base.container), className);
      return _react.default.createElement("span", _extends5({}, rest, { ref, className: containerClasses, style: { top: "".concat(width, "px"), width: "".concat(width, "px"), opacity: width ? 1 : 0, height: "calc(100% - ".concat(width, "px)") } }), children && _react.default.isValidElement(children) ? _react.default.cloneElement(children, { className: (0, _tailwindMerge.twMerge)(lineClasses, (_children_props = children.props) === null || _children_props === void 0 ? void 0 : _children_props.className) }) : _react.default.createElement("span", { className: lineClasses }));
    });
    TimelineConnector.propTypes = { children: _timeline.propTypeChildren, className: _timeline.propTypeClassName };
    TimelineConnector.displayName = "MaterialTailwind.TimelineConnector";
    var _default = TimelineConnector;
  }
});

// node_modules/@material-tailwind/react/components/Timeline/index.js
var require_Timeline = __commonJS({
  "node_modules/@material-tailwind/react/components/Timeline/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Timeline: function() {
      return Timeline;
    }, TimelineItem: function() {
      return _timelineItem.default;
    }, TimelineIcon: function() {
      return _timelineIcon.default;
    }, TimelineBody: function() {
      return _timelineBody.default;
    }, TimelineHeader: function() {
      return _timelineHeader.default;
    }, TimelineConnector: function() {
      return _timelineConnector.default;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _timeline = require_timeline2(), _timelineItem = _interopRequireDefault(require_TimelineItem()), _timelineIcon = _interopRequireDefault(require_TimelineIcon()), _timelineBody = _interopRequireDefault(require_TimelineBody()), _timelineHeader = _interopRequireDefault(require_TimelineHeader()), _timelineConnector = _interopRequireDefault(require_TimelineConnector());
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Timeline = _react.default.forwardRef(function(_param, ref) {
      var className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["className", "children"]), timeline2 = (0, _theme.useTheme)().timeline, styles = timeline2.styles, base = styles.base, classes = (0, _tailwindMerge.twMerge)((0, _objectsToString.default)(base), className);
      return _react.default.createElement("ul", _extends5({ ref }, rest, { className: classes }), children);
    });
    Timeline.propTypes = { className: _timeline.propTypeClassName, children: _timeline.propTypeChildren };
    Timeline.displayName = "MaterialTailwind.Timeline";
    var _default = Object.assign(Timeline, { Item: _timelineItem.default, Icon: _timelineIcon.default, Header: _timelineHeader.default, Body: _timelineBody.default, Connector: _timelineConnector.default });
  }
});

// node_modules/@material-tailwind/react/types/components/stepper.js
var require_stepper3 = __commonJS({
  "node_modules/@material-tailwind/react/types/components/stepper.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesActiveStep: function() {
      return propTypesActiveStep;
    }, propTypesIsLastStep: function() {
      return propTypesIsLastStep;
    }, propTypesIsFirstStep: function() {
      return propTypesIsFirstStep;
    }, propTypesChildren: function() {
      return propTypesChildren;
    }, propTypesClassName: function() {
      return propTypesClassName;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var propTypesActiveStep = _propTypes.default.number, propTypesIsLastStep = _propTypes.default.func, propTypesIsFirstStep = _propTypes.default.func, propTypesChildren = _propTypes.default.node, propTypesClassName = _propTypes.default.string;
  }
});

// node_modules/@material-tailwind/react/components/Stepper/Step.js
var require_Step = __commonJS({
  "node_modules/@material-tailwind/react/components/Stepper/Step.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Step: function() {
      return Step;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _stepper = require_stepper3();
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var Step = _react.default.forwardRef(function(_param, ref) {
      var className = _param.className, activeClassName = _param.activeClassName, completedClassName = _param.completedClassName, children = _param.children, rest = _objectWithoutProperties(_param, ["className", "activeClassName", "completedClassName", "children"]), step = (0, _theme.useTheme)().step, base = step.styles.base, stepClasses = (0, _tailwindMerge.twMerge)((0, _objectsToString.default)(base.initial), className);
      return _react.default.createElement("div", _extends5({}, rest, { ref, className: stepClasses }), children);
    });
    Step.propTypes = { className: _stepper.propTypesClassName, activeClassName: _stepper.propTypesClassName, completedClassName: _stepper.propTypesClassName, children: _stepper.propTypesChildren };
    Step.displayName = "MaterialTailwind.Step";
    var _default = Step;
  }
});

// node_modules/@material-tailwind/react/components/Stepper/index.js
var require_Stepper = __commonJS({
  "node_modules/@material-tailwind/react/components/Stepper/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { Stepper: function() {
      return Stepper;
    }, Step: function() {
      return _step.default;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _react1 = require_floating_ui_react_umd(), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _theme = require_theme2(), _step = _interopRequireDefault(require_Step()), _stepper = require_stepper3();
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithHoles2(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArrayLimit2(arr, i7) {
      var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i != null) {
        var _arr = [], _n = !0, _d = !1, _s, _e3;
        try {
          for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i7 && _arr.length === i7)); _n = !0)
            ;
        } catch (err) {
          _d = !0, _e3 = err;
        } finally {
          try {
            !_n && _i.return != null && _i.return();
          } finally {
            if (_d)
              throw _e3;
          }
        }
        return _arr;
      }
    }
    function _nonIterableRest2() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _objectSpread(target) {
      for (var i7 = 1; i7 < arguments.length; i7++) {
        var source = arguments[i7] != null ? arguments[i7] : {}, ownKeys2 = Object.keys(source);
        typeof Object.getOwnPropertySymbols == "function" && (ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }))), ownKeys2.forEach(function(key) {
          _defineProperty2(target, key, source[key]);
        });
      }
      return target;
    }
    function ownKeys(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        })), keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpreadProps(target, source) {
      return source = source ?? {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      }), target;
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    function _slicedToArray2(arr, i7) {
      return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i7) || _unsupportedIterableToArray2(arr, i7) || _nonIterableRest2();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var Stepper = _react.default.forwardRef(function(_param, ref) {
      var activeStep = _param.activeStep, isFirstStep = _param.isFirstStep, isLastStep = _param.isLastStep, className = _param.className, lineClassName = _param.lineClassName, activeLineClassName = _param.activeLineClassName, children = _param.children, rest = _objectWithoutProperties(_param, ["activeStep", "isFirstStep", "isLastStep", "className", "lineClassName", "activeLineClassName", "children"]), _useTheme = (0, _theme.useTheme)(), stepper = _useTheme.stepper, step = _useTheme.step, base = stepper.styles.base, _step_styles = step.styles, stepBase = _step_styles.base, containerRef = _react.default.useRef(null), _React_useState = _slicedToArray2(_react.default.useState(0), 2), widthPerStep = _React_useState[0], setWidthPerStep = _React_useState[1], isFirstStepValue = activeStep === 0, isLastStepValue = Array.isArray(children) && activeStep === children.length - 1, isReachEnd = Array.isArray(children) && activeStep > children.length - 1;
      _react.default.useEffect(function() {
        if (containerRef.current) {
          var childrenInstance = children, width2 = containerRef.current.getBoundingClientRect().width, widthPerStepCalc = width2 / (childrenInstance.length - 1);
          setWidthPerStep(widthPerStepCalc);
        }
      }, [children]);
      var width = _react.default.useMemo(function() {
        if (!isReachEnd)
          return widthPerStep * activeStep;
      }, [activeStep, isReachEnd, widthPerStep]), mergedRef = (0, _react1.useMergeRefs)([ref, containerRef]), stepperClasses = (0, _tailwindMerge.twMerge)((0, _objectsToString.default)(base.stepper), className), lineClasses = (0, _tailwindMerge.twMerge)((0, _objectsToString.default)(base.line.initial), lineClassName), activeLineClasses = (0, _tailwindMerge.twMerge)(lineClasses, (0, _objectsToString.default)(base.line.active), activeLineClassName), activeStepClasses = (0, _objectsToString.default)(stepBase.active), completedStepClasses = (0, _objectsToString.default)(stepBase.completed);
      return _react.default.useEffect(function() {
        isLastStep && typeof isLastStep == "function" && isLastStep(isLastStepValue), isFirstStep && typeof isFirstStep == "function" && isFirstStep(isFirstStepValue);
      }, [isFirstStep, isFirstStepValue, isLastStep, isLastStepValue]), _react.default.createElement("div", _extends5({}, rest, { ref: containerRef, className: stepperClasses }), _react.default.createElement("div", { className: lineClasses }), _react.default.createElement("div", { className: activeLineClasses, style: { width: "".concat(width, "px") } }), Array.isArray(children) ? children.map(function(child, index3) {
        var _child_props, _child_props1;
        return _react.default.cloneElement(child, _objectSpreadProps(_objectSpread({ key: index3 }, child.props), { className: (0, _tailwindMerge.twMerge)(child.props.className, index3 === activeStep ? (0, _tailwindMerge.twMerge)(activeStepClasses, (_child_props = child.props) === null || _child_props === void 0 ? void 0 : _child_props.activeClassName) : index3 < activeStep ? (0, _tailwindMerge.twMerge)(completedStepClasses, (_child_props1 = child.props) === null || _child_props1 === void 0 ? void 0 : _child_props1.completedClassName) : "") }));
      }) : children);
    });
    Stepper.propTypes = { activeStep: _stepper.propTypesActiveStep, isFirstStep: _stepper.propTypesIsFirstStep, isLastStep: _stepper.propTypesIsLastStep, className: _stepper.propTypesClassName, lineClassName: _stepper.propTypesClassName, activeLineClassName: _stepper.propTypesClassName, children: _stepper.propTypesChildren };
    Stepper.displayName = "MaterialTailwind.Stepper";
    var _default = Object.assign(Stepper, { Step: _step.default });
  }
});

// node_modules/@material-tailwind/react/types/components/speedDial.js
var require_speedDial3 = __commonJS({
  "node_modules/@material-tailwind/react/types/components/speedDial.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { propTypesOpen: function() {
      return propTypesOpen;
    }, propTypesHanlder: function() {
      return propTypesHanlder;
    }, propTypesPlacement: function() {
      return propTypesPlacement;
    }, propTypesOffset: function() {
      return propTypesOffset;
    }, propTypesDismiss: function() {
      return propTypesDismiss;
    }, propTypesChildren: function() {
      return propTypesChildren;
    }, propTypesAnimate: function() {
      return propTypesAnimate;
    }, propTypesClassName: function() {
      return propTypesClassName;
    } });
    var _propTypes = _interopRequireDefault(require_prop_types()), _generic = require_generic();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var propTypesOpen = _propTypes.default.bool, propTypesHanlder = _propTypes.default.func, propTypesPlacement = _propTypes.default.oneOf(_generic.propTypesPlacements), propTypesOffset = _generic.propTypesOffsetType, propTypesDismiss = _generic.propTypesDismissType, propTypesChildren = _propTypes.default.node.isRequired, propTypesAnimate = _generic.propTypesAnimation, propTypesClassName = _propTypes.default.string;
  }
});

// node_modules/@material-tailwind/react/components/SpeedDial/SpeedDialHandler.js
var require_SpeedDialHandler = __commonJS({
  "node_modules/@material-tailwind/react/components/SpeedDial/SpeedDialHandler.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { SpeedDialHandler: function() {
      return SpeedDialHandler;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _react1 = require_floating_ui_react_umd(), _index3 = require_SpeedDial(), _tailwindMerge = require_dist2(), _speedDial = require_speedDial3();
    function _defineProperty2(obj, key, value) {
      return key in obj ? Object.defineProperty(obj, key, { value, enumerable: !0, configurable: !0, writable: !0 }) : obj[key] = value, obj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectSpread(target) {
      for (var i7 = 1; i7 < arguments.length; i7++) {
        var source = arguments[i7] != null ? arguments[i7] : {}, ownKeys2 = Object.keys(source);
        typeof Object.getOwnPropertySymbols == "function" && (ownKeys2 = ownKeys2.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
          return Object.getOwnPropertyDescriptor(source, sym).enumerable;
        }))), ownKeys2.forEach(function(key) {
          _defineProperty2(target, key, source[key]);
        });
      }
      return target;
    }
    function ownKeys(object, enumerableOnly) {
      var keys2 = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter(function(sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        })), keys2.push.apply(keys2, symbols);
      }
      return keys2;
    }
    function _objectSpreadProps(target, source) {
      return source = source ?? {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      }), target;
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var SpeedDialHandler = _react.default.forwardRef(function(_param, ref) {
      var children = _param.children, rest = _objectWithoutProperties(_param, ["children"]), _children_props, _useSpeedDial = (0, _index3.useSpeedDial)(), getReferenceProps = _useSpeedDial.getReferenceProps, refs = _useSpeedDial.refs, mergedRef = (0, _react1.useMergeRefs)([ref, refs.setReference]);
      return _react.default.cloneElement(children, _objectSpread({}, getReferenceProps(_objectSpreadProps(_objectSpread({}, rest), { ref: mergedRef, className: (0, _tailwindMerge.twMerge)(children == null || (_children_props = children.props) === null || _children_props === void 0 ? void 0 : _children_props.className, rest == null ? void 0 : rest.className) }))));
    });
    SpeedDialHandler.propTypes = { children: _speedDial.propTypesChildren };
    SpeedDialHandler.displayName = "MaterialTailwind.SpeedDialHandler";
    var _default = SpeedDialHandler;
  }
});

// node_modules/@material-tailwind/react/components/SpeedDial/SpeedDialContent.js
var require_SpeedDialContent = __commonJS({
  "node_modules/@material-tailwind/react/components/SpeedDial/SpeedDialContent.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { SpeedDialContent: function() {
      return SpeedDialContent;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _framerMotion = require_cjs2(), _react1 = require_floating_ui_react_umd(), _index3 = require_SpeedDial(), _theme = require_theme2(), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _speedDial = require_speedDial3();
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var SpeedDialContent = _react.default.forwardRef(function(_param, ref) {
      var children = _param.children, className = _param.className, rest = _objectWithoutProperties(_param, ["children", "className"]), _useTheme = (0, _theme.useTheme)(), styles = _useTheme.speedDialContent.styles, _useSpeedDial = (0, _index3.useSpeedDial)(), x5 = _useSpeedDial.x, y6 = _useSpeedDial.y, refs = _useSpeedDial.refs, open = _useSpeedDial.open, strategy = _useSpeedDial.strategy, getFloatingProps = _useSpeedDial.getFloatingProps, animation = _useSpeedDial.animation, mergedRefs = (0, _react1.useMergeRefs)([ref, refs.setFloating]), classes = (0, _tailwindMerge.twMerge)((0, _objectsToString.default)(styles), className), NewAnimatePresence = _framerMotion.AnimatePresence;
      return _react.default.createElement(_framerMotion.LazyMotion, { features: _framerMotion.domAnimation }, _react.default.createElement(NewAnimatePresence, null, open && _react.default.createElement("div", _extends5({}, rest, { ref: mergedRefs, className: classes, style: { position: strategy, top: y6 ?? 0, left: x5 ?? 0 } }, getFloatingProps()), _react.default.Children.map(children, function(child) {
        return _react.default.createElement(_framerMotion.m.div, { initial: "unmount", exit: "unmount", animate: open ? "mount" : "unmount", variants: animation }, child);
      }))));
    });
    SpeedDialContent.propTypes = { children: _speedDial.propTypesChildren, className: _speedDial.propTypesClassName };
    SpeedDialContent.displayName = "MaterialTailwind.SpeedDialContent";
    var _default = SpeedDialContent;
  }
});

// node_modules/@material-tailwind/react/components/SpeedDial/SpeedDialAction.js
var require_SpeedDialAction = __commonJS({
  "node_modules/@material-tailwind/react/components/SpeedDial/SpeedDialAction.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { SpeedDialAction: function() {
      return SpeedDialAction;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _theme = require_theme2(), _tailwindMerge = require_dist2(), _objectsToString = _interopRequireDefault(require_objectsToString()), _speedDial = require_speedDial3();
    function _extends5() {
      return _extends5 = Object.assign || function(target) {
        for (var i7 = 1; i7 < arguments.length; i7++) {
          var source = arguments[i7];
          for (var key in source)
            Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
        }
        return target;
      }, _extends5.apply(this, arguments);
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose2(source, excluded), key, i7;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i7 = 0; i7 < sourceSymbolKeys.length; i7++)
          key = sourceSymbolKeys[i7], !(excluded.indexOf(key) >= 0) && Object.prototype.propertyIsEnumerable.call(source, key) && (target[key] = source[key]);
      }
      return target;
    }
    function _objectWithoutPropertiesLoose2(source, excluded) {
      if (source == null)
        return {};
      var target = {}, sourceKeys = Object.keys(source), key, i7;
      for (i7 = 0; i7 < sourceKeys.length; i7++)
        key = sourceKeys[i7], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
      return target;
    }
    var SpeedDialAction = _react.default.forwardRef(function(_param, ref) {
      var className = _param.className, children = _param.children, rest = _objectWithoutProperties(_param, ["className", "children"]), _useTheme = (0, _theme.useTheme)(), styles = _useTheme.speedDialAction.styles, classes = (0, _tailwindMerge.twMerge)((0, _objectsToString.default)(styles), className);
      return _react.default.createElement("button", _extends5({}, rest, { ref, className: classes }), children);
    });
    SpeedDialAction.propTypes = { children: _speedDial.propTypesChildren, className: _speedDial.propTypesClassName };
    SpeedDialAction.displayName = "SpeedDialAction";
    var _default = SpeedDialAction;
  }
});

// node_modules/@material-tailwind/react/components/SpeedDial/index.js
var require_SpeedDial = __commonJS({
  "node_modules/@material-tailwind/react/components/SpeedDial/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function _export(target, all) {
      for (var name in all)
        Object.defineProperty(target, name, { enumerable: !0, get: all[name] });
    }
    _export(exports, { SpeedDialContext: function() {
      return SpeedDialContext;
    }, useSpeedDial: function() {
      return useSpeedDial;
    }, SpeedDial: function() {
      return SpeedDial;
    }, SpeedDialHandler: function() {
      return _speedDialHandler.default;
    }, SpeedDialContent: function() {
      return _speedDialContent.default;
    }, SpeedDialAction: function() {
      return _speedDialAction.default;
    }, default: function() {
      return _default;
    } });
    var _react = _interopRequireDefault(require_react()), _react1 = require_floating_ui_react_umd(), _theme = require_theme2(), _deepmerge = _interopRequireDefault(require_cjs()), _speedDial = require_speedDial3(), _speedDialHandler = _interopRequireDefault(require_SpeedDialHandler()), _speedDialContent = _interopRequireDefault(require_SpeedDialContent()), _speedDialAction = _interopRequireDefault(require_SpeedDialAction());
    function _arrayLikeToArray2(arr, len) {
      (len == null || len > arr.length) && (len = arr.length);
      for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
        arr2[i7] = arr[i7];
      return arr2;
    }
    function _arrayWithHoles2(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _iterableToArrayLimit2(arr, i7) {
      var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i != null) {
        var _arr = [], _n = !0, _d = !1, _s, _e3;
        try {
          for (_i = _i.call(arr); !(_n = (_s = _i.next()).done) && (_arr.push(_s.value), !(i7 && _arr.length === i7)); _n = !0)
            ;
        } catch (err) {
          _d = !0, _e3 = err;
        } finally {
          try {
            !_n && _i.return != null && _i.return();
          } finally {
            if (_d)
              throw _e3;
          }
        }
        return _arr;
      }
    }
    function _nonIterableRest2() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _slicedToArray2(arr, i7) {
      return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i7) || _unsupportedIterableToArray2(arr, i7) || _nonIterableRest2();
    }
    function _unsupportedIterableToArray2(o11, minLen) {
      if (o11) {
        if (typeof o11 == "string")
          return _arrayLikeToArray2(o11, minLen);
        var n7 = Object.prototype.toString.call(o11).slice(8, -1);
        if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
          return Array.from(n7);
        if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
          return _arrayLikeToArray2(o11, minLen);
      }
    }
    var SpeedDialContext = _react.default.createContext(null);
    function useSpeedDial() {
      var context = _react.default.useContext(SpeedDialContext);
      if (!context)
        throw new Error("useSpeedDial must be used within a <SpeedDial />.");
      return context;
    }
    function SpeedDial(param) {
      var open = param.open, handler = param.handler, placement = param.placement, offset = param.offset, dismiss = param.dismiss, animate2 = param.animate, children = param.children, _useTheme = (0, _theme.useTheme)(), defaultProps = _useTheme.speedDial.defaultProps, _React_useState = _slicedToArray2(_react.default.useState(!1), 2), internalOpen = _React_useState[0], setInternalOpen = _React_useState[1];
      open = open ?? internalOpen, handler = handler ?? setInternalOpen, placement = placement ?? defaultProps.placement, offset = offset ?? defaultProps.offset, dismiss = dismiss ?? defaultProps.dismiss, animate2 = animate2 ?? defaultProps.animate;
      var animation = { unmount: { opacity: 0, transform: "scale(0.5)", transition: { duration: 0.2, times: [0.4, 0, 0.2, 1] } }, mount: { opacity: 1, transform: "scale(1)", transition: { duration: 0.2, times: [0.4, 0, 0.2, 1] } } }, appliedAnimation = (0, _deepmerge.default)(animation, animate2), nodeId = (0, _react1.useFloatingNodeId)(), _useFloating = (0, _react1.useFloating)({ open, nodeId, placement, onOpenChange: handler, whileElementsMounted: _react1.autoUpdate, middleware: [(0, _react1.offset)(offset), (0, _react1.flip)(), (0, _react1.shift)()] }), x5 = _useFloating.x, y6 = _useFloating.y, strategy = _useFloating.strategy, refs = _useFloating.refs, context = _useFloating.context, _useInteractions = (0, _react1.useInteractions)([(0, _react1.useHover)(context, { handleClose: (0, _react1.safePolygon)() }), (0, _react1.useDismiss)(context, dismiss)]), getReferenceProps = _useInteractions.getReferenceProps, getFloatingProps = _useInteractions.getFloatingProps, contextValue = _react.default.useMemo(function() {
        return { x: x5, y: y6, strategy, refs, open, context, getReferenceProps, getFloatingProps, animation: appliedAnimation };
      }, [context, getFloatingProps, getReferenceProps, refs, strategy, x5, y6, open, appliedAnimation]);
      return _react.default.createElement(SpeedDialContext.Provider, { value: contextValue }, _react.default.createElement("div", { className: "group" }, _react.default.createElement(_react1.FloatingNode, { id: nodeId }, children)));
    }
    SpeedDial.propTypes = { open: _speedDial.propTypesOpen, handler: _speedDial.propTypesHanlder, placement: _speedDial.propTypesPlacement, offset: _speedDial.propTypesOffset, dismiss: _speedDial.propTypesDismiss, className: _speedDial.propTypesClassName, children: _speedDial.propTypesChildren, animate: _speedDial.propTypesAnimate };
    SpeedDial.displayName = "MaterialTailwind.SpeedDial";
    var _default = Object.assign(SpeedDial, { Handler: _speedDialHandler.default, Content: _speedDialContent.default, Action: _speedDialAction.default });
  }
});

// node_modules/@material-tailwind/react/index.js
var require_react2 = __commonJS({
  "node_modules/@material-tailwind/react/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    _exportStar(require_Accordion(), exports);
    _exportStar(require_Alert(), exports);
    _exportStar(require_Avatar(), exports);
    _exportStar(require_Breadcrumbs(), exports);
    _exportStar(require_Button(), exports);
    _exportStar(require_Card(), exports);
    _exportStar(require_Checkbox(), exports);
    _exportStar(require_Chip(), exports);
    _exportStar(require_Dialog(), exports);
    _exportStar(require_IconButton(), exports);
    _exportStar(require_Input(), exports);
    _exportStar(require_Menu(), exports);
    _exportStar(require_Navbar(), exports);
    _exportStar(require_Popover(), exports);
    _exportStar(require_Progress(), exports);
    _exportStar(require_Radio(), exports);
    _exportStar(require_Select(), exports);
    _exportStar(require_Switch(), exports);
    _exportStar(require_Tabs(), exports);
    _exportStar(require_Textarea(), exports);
    _exportStar(require_Tooltip(), exports);
    _exportStar(require_Typography(), exports);
    _exportStar(require_Collapse(), exports);
    _exportStar(require_List(), exports);
    _exportStar(require_ButtonGroup(), exports);
    _exportStar(require_Carousel(), exports);
    _exportStar(require_Drawer(), exports);
    _exportStar(require_Badge(), exports);
    _exportStar(require_Rating(), exports);
    _exportStar(require_Slider(), exports);
    _exportStar(require_Spinner(), exports);
    _exportStar(require_Timeline(), exports);
    _exportStar(require_Stepper(), exports);
    _exportStar(require_SpeedDial(), exports);
    _exportStar(require_theme2(), exports);
    _exportStar(require_theme(), exports);
    function _exportStar(from, to) {
      return Object.keys(from).forEach(function(k2) {
        k2 !== "default" && !Object.prototype.hasOwnProperty.call(to, k2) && Object.defineProperty(to, k2, { enumerable: !0, get: function() {
          return from[k2];
        } });
      }), from;
    }
  }
});

// node_modules/jsonp/node_modules/ms/index.js
var require_ms = __commonJS({
  "node_modules/jsonp/node_modules/ms/index.js"(exports, module) {
    var s15 = 1e3, m10 = s15 * 60, h10 = m10 * 60, d12 = h10 * 24, y6 = d12 * 365.25;
    module.exports = function(val, options) {
      options = options || {};
      var type = typeof val;
      if (type === "string" && val.length > 0)
        return parse2(val);
      if (type === "number" && isNaN(val) === !1)
        return options.long ? fmtLong(val) : fmtShort(val);
      throw new Error(
        "val is not a non-empty string or a valid number. val=" + JSON.stringify(val)
      );
    };
    function parse2(str) {
      if (str = String(str), !(str.length > 100)) {
        var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
          str
        );
        if (match) {
          var n7 = parseFloat(match[1]), type = (match[2] || "ms").toLowerCase();
          switch (type) {
            case "years":
            case "year":
            case "yrs":
            case "yr":
            case "y":
              return n7 * y6;
            case "days":
            case "day":
            case "d":
              return n7 * d12;
            case "hours":
            case "hour":
            case "hrs":
            case "hr":
            case "h":
              return n7 * h10;
            case "minutes":
            case "minute":
            case "mins":
            case "min":
            case "m":
              return n7 * m10;
            case "seconds":
            case "second":
            case "secs":
            case "sec":
            case "s":
              return n7 * s15;
            case "milliseconds":
            case "millisecond":
            case "msecs":
            case "msec":
            case "ms":
              return n7;
            default:
              return;
          }
        }
      }
    }
    function fmtShort(ms) {
      return ms >= d12 ? Math.round(ms / d12) + "d" : ms >= h10 ? Math.round(ms / h10) + "h" : ms >= m10 ? Math.round(ms / m10) + "m" : ms >= s15 ? Math.round(ms / s15) + "s" : ms + "ms";
    }
    function fmtLong(ms) {
      return plural(ms, d12, "day") || plural(ms, h10, "hour") || plural(ms, m10, "minute") || plural(ms, s15, "second") || ms + " ms";
    }
    function plural(ms, n7, name) {
      if (!(ms < n7))
        return ms < n7 * 1.5 ? Math.floor(ms / n7) + " " + name : Math.ceil(ms / n7) + " " + name + "s";
    }
  }
});

// node_modules/jsonp/node_modules/debug/src/debug.js
var require_debug = __commonJS({
  "node_modules/jsonp/node_modules/debug/src/debug.js"(exports, module) {
    exports = module.exports = createDebug.debug = createDebug.default = createDebug;
    exports.coerce = coerce;
    exports.disable = disable;
    exports.enable = enable;
    exports.enabled = enabled;
    exports.humanize = require_ms();
    exports.names = [];
    exports.skips = [];
    exports.formatters = {};
    var prevTime;
    function selectColor(namespace) {
      var hash = 0, i7;
      for (i7 in namespace)
        hash = (hash << 5) - hash + namespace.charCodeAt(i7), hash |= 0;
      return exports.colors[Math.abs(hash) % exports.colors.length];
    }
    function createDebug(namespace) {
      function debug() {
        if (debug.enabled) {
          var self2 = debug, curr = +/* @__PURE__ */ new Date(), ms = curr - (prevTime || curr);
          self2.diff = ms, self2.prev = prevTime, self2.curr = curr, prevTime = curr;
          for (var args = new Array(arguments.length), i7 = 0; i7 < args.length; i7++)
            args[i7] = arguments[i7];
          args[0] = exports.coerce(args[0]), typeof args[0] != "string" && args.unshift("%O");
          var index3 = 0;
          args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
            if (match === "%%")
              return match;
            index3++;
            var formatter = exports.formatters[format];
            if (typeof formatter == "function") {
              var val = args[index3];
              match = formatter.call(self2, val), args.splice(index3, 1), index3--;
            }
            return match;
          }), exports.formatArgs.call(self2, args);
          var logFn = debug.log || exports.log || console.log.bind(console);
          logFn.apply(self2, args);
        }
      }
      return debug.namespace = namespace, debug.enabled = exports.enabled(namespace), debug.useColors = exports.useColors(), debug.color = selectColor(namespace), typeof exports.init == "function" && exports.init(debug), debug;
    }
    function enable(namespaces) {
      exports.save(namespaces), exports.names = [], exports.skips = [];
      for (var split = (typeof namespaces == "string" ? namespaces : "").split(/[\s,]+/), len = split.length, i7 = 0; i7 < len; i7++)
        split[i7] && (namespaces = split[i7].replace(/\*/g, ".*?"), namespaces[0] === "-" ? exports.skips.push(new RegExp("^" + namespaces.substr(1) + "$")) : exports.names.push(new RegExp("^" + namespaces + "$")));
    }
    function disable() {
      exports.enable("");
    }
    function enabled(name) {
      var i7, len;
      for (i7 = 0, len = exports.skips.length; i7 < len; i7++)
        if (exports.skips[i7].test(name))
          return !1;
      for (i7 = 0, len = exports.names.length; i7 < len; i7++)
        if (exports.names[i7].test(name))
          return !0;
      return !1;
    }
    function coerce(val) {
      return val instanceof Error ? val.stack || val.message : val;
    }
  }
});

// node_modules/jsonp/node_modules/debug/src/browser.js
var require_browser = __commonJS({
  "node_modules/jsonp/node_modules/debug/src/browser.js"(exports, module) {
    exports = module.exports = require_debug();
    exports.log = log;
    exports.formatArgs = formatArgs;
    exports.save = save;
    exports.load = load;
    exports.useColors = useColors;
    exports.storage = typeof chrome < "u" && typeof chrome.storage < "u" ? chrome.storage.local : localstorage();
    exports.colors = [
      "lightseagreen",
      "forestgreen",
      "goldenrod",
      "dodgerblue",
      "darkorchid",
      "crimson"
    ];
    function useColors() {
      return typeof window < "u" && window.process && window.process.type === "renderer" ? !0 : typeof document < "u" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // is firebug? http://stackoverflow.com/a/398120/376773
      typeof window < "u" && window.console && (window.console.firebug || window.console.exception && window.console.table) || // is firefox >= v31?
      // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
      typeof navigator < "u" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // double check webkit in userAgent just in case we are in a worker
      typeof navigator < "u" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
    }
    exports.formatters.j = function(v4) {
      try {
        return JSON.stringify(v4);
      } catch (err) {
        return "[UnexpectedJSONParseError]: " + err.message;
      }
    };
    function formatArgs(args) {
      var useColors2 = this.useColors;
      if (args[0] = (useColors2 ? "%c" : "") + this.namespace + (useColors2 ? " %c" : " ") + args[0] + (useColors2 ? "%c " : " ") + "+" + exports.humanize(this.diff), !!useColors2) {
        var c13 = "color: " + this.color;
        args.splice(1, 0, c13, "color: inherit");
        var index3 = 0, lastC = 0;
        args[0].replace(/%[a-zA-Z%]/g, function(match) {
          match !== "%%" && (index3++, match === "%c" && (lastC = index3));
        }), args.splice(lastC, 0, c13);
      }
    }
    function log() {
      return typeof console == "object" && console.log && Function.prototype.apply.call(console.log, console, arguments);
    }
    function save(namespaces) {
      try {
        namespaces == null ? exports.storage.removeItem("debug") : exports.storage.debug = namespaces;
      } catch {
      }
    }
    function load() {
      var r9;
      try {
        r9 = exports.storage.debug;
      } catch {
      }
      return !r9 && typeof process < "u" && "env" in process && (r9 = process.env.DEBUG), r9;
    }
    exports.enable(load());
    function localstorage() {
      try {
        return window.localStorage;
      } catch {
      }
    }
  }
});

// node_modules/jsonp/index.js
var require_jsonp = __commonJS({
  "node_modules/jsonp/index.js"(exports, module) {
    var debug = require_browser()("jsonp");
    module.exports = jsonp2;
    var count = 0;
    function noop2() {
    }
    function jsonp2(url, opts, fn) {
      typeof opts == "function" && (fn = opts, opts = {}), opts || (opts = {});
      var prefix = opts.prefix || "__jp", id = opts.name || prefix + count++, param = opts.param || "callback", timeout = opts.timeout != null ? opts.timeout : 6e4, enc = encodeURIComponent, target = document.getElementsByTagName("script")[0] || document.head, script, timer;
      timeout && (timer = setTimeout(function() {
        cleanup(), fn && fn(new Error("Timeout"));
      }, timeout));
      function cleanup() {
        script.parentNode && script.parentNode.removeChild(script), window[id] = noop2, timer && clearTimeout(timer);
      }
      function cancel() {
        window[id] && cleanup();
      }
      return window[id] = function(data2) {
        debug("jsonp got", data2), cleanup(), fn && fn(null, data2);
      }, url += (~url.indexOf("?") ? "&" : "?") + param + "=" + enc(id), url = url.replace("?&", "?"), debug('jsonp req "%s"', url), script = document.createElement("script"), script.src = url, target.parentNode.insertBefore(script, target), cancel;
    }
  }
});

// server-entry-module:@remix-run/dev/server-build
var server_build_exports = {};
__export(server_build_exports, {
  assets: () => assets_manifest_default,
  assetsBuildDirectory: () => assetsBuildDirectory,
  entry: () => entry,
  future: () => future,
  publicPath: () => publicPath,
  routes: () => routes
});

// app/entry.server.jsx
var entry_server_exports = {};
__export(entry_server_exports, {
  default: () => handleRequest
});

// node_modules/@remix-run/react/dist/esm/_virtual/_rollupPluginBabelHelpers.js
function _extends4() {
  return _extends4 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i7 = 1; i7 < arguments.length; i7++) {
      var source = arguments[i7];
      for (var key in source)
        Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
    }
    return target;
  }, _extends4.apply(this, arguments);
}

// node_modules/@remix-run/react/dist/esm/components.js
var React3 = __toESM(require_react());
init_dist2();

// node_modules/@remix-run/react/dist/esm/errorBoundaries.js
var import_react = __toESM(require_react());
init_dist2();
var RemixErrorBoundary = class extends import_react.default.Component {
  constructor(props) {
    super(props), this.state = {
      error: props.error || null,
      location: props.location
    };
  }
  static getDerivedStateFromError(error) {
    return {
      error
    };
  }
  static getDerivedStateFromProps(props, state) {
    return state.location !== props.location ? {
      error: props.error || null,
      location: props.location
    } : {
      error: props.error || state.error,
      location: state.location
    };
  }
  render() {
    return this.state.error ? /* @__PURE__ */ import_react.default.createElement(this.props.component, {
      error: this.state.error
    }) : this.props.children;
  }
};
function RemixRootDefaultErrorBoundary({
  error
}) {
  return import_react.default.useEffect(() => {
    console.error(error);
  }, [error]), /* @__PURE__ */ import_react.default.createElement("html", {
    lang: "en"
  }, /* @__PURE__ */ import_react.default.createElement("head", null, /* @__PURE__ */ import_react.default.createElement("meta", {
    charSet: "utf-8"
  }), /* @__PURE__ */ import_react.default.createElement("meta", {
    name: "viewport",
    content: "width=device-width, initial-scale=1, viewport-fit=cover"
  }), /* @__PURE__ */ import_react.default.createElement("title", null, "Application Error!")), /* @__PURE__ */ import_react.default.createElement("body", null, /* @__PURE__ */ import_react.default.createElement("main", {
    style: {
      fontFamily: "system-ui, sans-serif",
      padding: "2rem"
    }
  }, /* @__PURE__ */ import_react.default.createElement("h1", {
    style: {
      fontSize: "24px"
    }
  }, "Application Error"), error.stack ? /* @__PURE__ */ import_react.default.createElement("pre", {
    style: {
      padding: "2rem",
      background: "hsla(10, 50%, 50%, 0.1)",
      color: "red",
      overflow: "auto"
    }
  }, error.stack) : null), /* @__PURE__ */ import_react.default.createElement("script", {
    dangerouslySetInnerHTML: {
      __html: `
              console.log(
                "\u{1F4BF} Hey developer\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information."
              );
            `
    }
  })));
}
function V2_RemixRootDefaultErrorBoundary() {
  let error = useRouteError();
  if (isRouteErrorResponse(error))
    return /* @__PURE__ */ import_react.default.createElement(RemixRootDefaultCatchBoundaryImpl, {
      caught: error
    });
  if (error instanceof Error)
    return /* @__PURE__ */ import_react.default.createElement(RemixRootDefaultErrorBoundary, {
      error
    });
  {
    let errorString = error == null ? "Unknown Error" : typeof error == "object" && "toString" in error ? error.toString() : JSON.stringify(error);
    return /* @__PURE__ */ import_react.default.createElement(RemixRootDefaultErrorBoundary, {
      error: new Error(errorString)
    });
  }
}
var RemixCatchContext = /* @__PURE__ */ import_react.default.createContext(void 0);
function useCatch() {
  return (0, import_react.useContext)(RemixCatchContext);
}
function RemixCatchBoundary({
  catch: catchVal,
  component: Component2,
  children
}) {
  return catchVal ? /* @__PURE__ */ import_react.default.createElement(RemixCatchContext.Provider, {
    value: catchVal
  }, /* @__PURE__ */ import_react.default.createElement(Component2, null)) : /* @__PURE__ */ import_react.default.createElement(import_react.default.Fragment, null, children);
}
function RemixRootDefaultCatchBoundary() {
  let caught = useCatch();
  return /* @__PURE__ */ import_react.default.createElement(RemixRootDefaultCatchBoundaryImpl, {
    caught
  });
}
function RemixRootDefaultCatchBoundaryImpl({
  caught
}) {
  return /* @__PURE__ */ import_react.default.createElement("html", {
    lang: "en"
  }, /* @__PURE__ */ import_react.default.createElement("head", null, /* @__PURE__ */ import_react.default.createElement("meta", {
    charSet: "utf-8"
  }), /* @__PURE__ */ import_react.default.createElement("meta", {
    name: "viewport",
    content: "width=device-width, initial-scale=1, viewport-fit=cover"
  }), /* @__PURE__ */ import_react.default.createElement("title", null, "Unhandled Thrown Response!")), /* @__PURE__ */ import_react.default.createElement("body", null, /* @__PURE__ */ import_react.default.createElement("h1", {
    style: {
      fontFamily: "system-ui, sans-serif",
      padding: "2rem"
    }
  }, caught.status, " ", caught.statusText), /* @__PURE__ */ import_react.default.createElement("script", {
    dangerouslySetInnerHTML: {
      __html: `
              console.log(
                "\u{1F4BF} Hey developer\u{1F44B}. You can provide a way better UX than this when your app throws 404s (and other responses). Check out https://remix.run/guides/not-found for more information."
              );
            `
    }
  })));
}

// node_modules/@remix-run/react/dist/esm/invariant.js
function invariant2(value, message) {
  if (value === !1 || value === null || typeof value > "u")
    throw new Error(message);
}

// node_modules/@remix-run/react/dist/esm/links.js
init_dist2();

// node_modules/@remix-run/react/dist/esm/routeModules.js
async function loadRouteModule(route, routeModulesCache) {
  if (route.id in routeModulesCache)
    return routeModulesCache[route.id];
  try {
    let routeModule = await import(
      /* webpackIgnore: true */
      route.module
    );
    return routeModulesCache[route.id] = routeModule, routeModule;
  } catch {
    return window.location.reload(), new Promise(() => {
    });
  }
}

// node_modules/@remix-run/react/dist/esm/links.js
function getLinksForMatches(matches, routeModules, manifest) {
  let descriptors = matches.map((match) => {
    var _module$links;
    let module = routeModules[match.route.id];
    return ((_module$links = module.links) === null || _module$links === void 0 ? void 0 : _module$links.call(module)) || [];
  }).flat(1), preloads = getCurrentPageModulePreloadHrefs(matches, manifest);
  return dedupe(descriptors, preloads);
}
function isPageLinkDescriptor(object) {
  return object != null && typeof object.page == "string";
}
function isHtmlLinkDescriptor(object) {
  return object == null ? !1 : object.href == null ? object.rel === "preload" && (typeof object.imageSrcSet == "string" || typeof object.imagesrcset == "string") && (typeof object.imageSizes == "string" || typeof object.imagesizes == "string") : typeof object.rel == "string" && typeof object.href == "string";
}
async function getStylesheetPrefetchLinks(matches, manifest, routeModules) {
  return (await Promise.all(matches.map(async (match) => {
    let mod = await loadRouteModule(manifest.routes[match.route.id], routeModules);
    return mod.links ? mod.links() : [];
  }))).flat(1).filter(isHtmlLinkDescriptor).filter((link) => link.rel === "stylesheet" || link.rel === "preload").map((link) => link.rel === "preload" ? {
    ...link,
    rel: "prefetch"
  } : {
    ...link,
    rel: "prefetch",
    as: "style"
  });
}
function getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {
  let path = parsePathPatch(page), isNew = (match, index3) => currentMatches[index3] ? match.route.id !== currentMatches[index3].route.id : !0, matchPathChanged = (match, index3) => {
    var _currentMatches$index;
    return (
      // param change, /users/123 -> /users/456
      currentMatches[index3].pathname !== match.pathname || // splat param changed, which is not present in match.path
      // e.g. /files/images/avatar.jpg -> files/finances.xls
      ((_currentMatches$index = currentMatches[index3].route.path) === null || _currentMatches$index === void 0 ? void 0 : _currentMatches$index.endsWith("*")) && currentMatches[index3].params["*"] !== match.params["*"]
    );
  };
  return mode === "data" && location.search !== path.search ? (
    // this is really similar to stuff in transition.ts, maybe somebody smarter
    // than me (or in less of a hurry) can share some of it. You're the best.
    nextMatches.filter((match, index3) => {
      if (!manifest.routes[match.route.id].hasLoader)
        return !1;
      if (isNew(match, index3) || matchPathChanged(match, index3))
        return !0;
      if (match.route.shouldRevalidate) {
        var _currentMatches$;
        let routeChoice = match.route.shouldRevalidate({
          currentUrl: new URL(location.pathname + location.search + location.hash, window.origin),
          currentParams: ((_currentMatches$ = currentMatches[0]) === null || _currentMatches$ === void 0 ? void 0 : _currentMatches$.params) || {},
          nextUrl: new URL(page, window.origin),
          nextParams: match.params,
          defaultShouldRevalidate: !0
        });
        if (typeof routeChoice == "boolean")
          return routeChoice;
      }
      return !0;
    })
  ) : nextMatches.filter((match, index3) => {
    let manifestRoute = manifest.routes[match.route.id];
    return (mode === "assets" || manifestRoute.hasLoader) && (isNew(match, index3) || matchPathChanged(match, index3));
  });
}
function getDataLinkHrefs(page, matches, manifest) {
  let path = parsePathPatch(page);
  return dedupeHrefs(matches.filter((match) => manifest.routes[match.route.id].hasLoader).map((match) => {
    let {
      pathname,
      search
    } = path, searchParams = new URLSearchParams(search);
    return searchParams.set("_data", match.route.id), `${pathname}?${searchParams}`;
  }));
}
function getModuleLinkHrefs(matches, manifestPatch) {
  return dedupeHrefs(matches.map((match) => {
    let route = manifestPatch.routes[match.route.id], hrefs = [route.module];
    return route.imports && (hrefs = hrefs.concat(route.imports)), hrefs;
  }).flat(1));
}
function getCurrentPageModulePreloadHrefs(matches, manifest) {
  return dedupeHrefs(matches.map((match) => {
    let route = manifest.routes[match.route.id], hrefs = [route.module];
    return route.imports && (hrefs = hrefs.concat(route.imports)), hrefs;
  }).flat(1));
}
function dedupeHrefs(hrefs) {
  return [...new Set(hrefs)];
}
function dedupe(descriptors, preloads) {
  let set = /* @__PURE__ */ new Set(), preloadsSet = new Set(preloads);
  return descriptors.reduce((deduped, descriptor) => {
    if (!isPageLinkDescriptor(descriptor) && descriptor.as === "script" && descriptor.href && preloadsSet.has(descriptor.href))
      return deduped;
    let str = JSON.stringify(descriptor);
    return set.has(str) || (set.add(str), deduped.push(descriptor)), deduped;
  }, []);
}
function parsePathPatch(href) {
  let path = parsePath(href);
  return path.search === void 0 && (path.search = ""), path;
}

// node_modules/@remix-run/react/dist/esm/markup.js
var ESCAPE_LOOKUP = {
  "&": "\\u0026",
  ">": "\\u003e",
  "<": "\\u003c",
  "\u2028": "\\u2028",
  "\u2029": "\\u2029"
}, ESCAPE_REGEX = /[&><\u2028\u2029]/g;
function escapeHtml(html) {
  return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);
}
function createHtml(html) {
  return {
    __html: html
  };
}

// node_modules/@remix-run/react/dist/esm/transition.js
var IDLE_FETCHER2 = {
  state: "idle",
  type: "init",
  data: void 0,
  formMethod: void 0,
  formAction: void 0,
  formEncType: void 0,
  formData: void 0,
  json: void 0,
  text: void 0,
  submission: void 0
};

// node_modules/@remix-run/react/dist/esm/warnings.js
var alreadyWarned2 = {};
function logDeprecationOnce(message, key = message) {
  alreadyWarned2[key] || (alreadyWarned2[key] = !0, console.warn(message));
}

// node_modules/@remix-run/react/dist/esm/components.js
function useDataRouterContext3() {
  let context = React3.useContext(DataRouterContext);
  return invariant2(context, "You must render this element inside a <DataRouterContext.Provider> element"), context;
}
function useDataRouterStateContext() {
  let context = React3.useContext(DataRouterStateContext);
  return invariant2(context, "You must render this element inside a <DataRouterStateContext.Provider> element"), context;
}
var RemixContext = /* @__PURE__ */ React3.createContext(void 0);
RemixContext.displayName = "Remix";
function useRemixContext() {
  let context = React3.useContext(RemixContext);
  return invariant2(context, "You must render this element inside a <Remix> element"), context;
}
function RemixRoute({
  id
}) {
  let {
    routeModules,
    future: future2
  } = useRemixContext();
  invariant2(routeModules, `Cannot initialize 'routeModules'. This normally occurs when you have server code in your client modules.
Check this link for more details:
https://remix.run/pages/gotchas#server-code-in-client-bundles`);
  let {
    default: Component2,
    ErrorBoundary: ErrorBoundary4,
    CatchBoundary
  } = routeModules[id];
  return !Component2 && (ErrorBoundary4 || !future2.v2_errorBoundary && CatchBoundary) && (Component2 = Outlet), invariant2(Component2, `Route "${id}" has no component! Please go add a \`default\` export in the route module file.
If you were trying to navigate or submit to a resource route, use \`<a>\` instead of \`<Link>\` or \`<Form reloadDocument>\`.`), /* @__PURE__ */ React3.createElement(Component2, null);
}
function RemixRouteError({
  id
}) {
  let {
    future: future2,
    routeModules
  } = useRemixContext();
  invariant2(routeModules, `Cannot initialize 'routeModules'. This normally occurs when you have server code in your client modules.
Check this link for more details:
https://remix.run/pages/gotchas#server-code-in-client-bundles`);
  let error = useRouteError(), {
    CatchBoundary,
    ErrorBoundary: ErrorBoundary4
  } = routeModules[id];
  if (future2.v2_errorBoundary) {
    if (id === "root" && (ErrorBoundary4 || (ErrorBoundary4 = V2_RemixRootDefaultErrorBoundary)), ErrorBoundary4)
      return /* @__PURE__ */ React3.createElement(ErrorBoundary4, null);
    throw error;
  }
  if (id === "root" && (CatchBoundary || (CatchBoundary = RemixRootDefaultCatchBoundary), ErrorBoundary4 || (ErrorBoundary4 = RemixRootDefaultErrorBoundary)), isRouteErrorResponse(error)) {
    let tError = error;
    if (tError != null && tError.error && tError.status !== 404 && ErrorBoundary4)
      return /* @__PURE__ */ React3.createElement(ErrorBoundary4, {
        error: tError.error
      });
    if (CatchBoundary)
      return /* @__PURE__ */ React3.createElement(RemixCatchBoundary, {
        catch: error,
        component: CatchBoundary
      });
  }
  if (error instanceof Error && ErrorBoundary4)
    return /* @__PURE__ */ React3.createElement(ErrorBoundary4, {
      error
    });
  throw error;
}
function usePrefetchBehavior(prefetch, theirElementProps) {
  let [maybePrefetch, setMaybePrefetch] = React3.useState(!1), [shouldPrefetch, setShouldPrefetch] = React3.useState(!1), {
    onFocus,
    onBlur,
    onMouseEnter,
    onMouseLeave,
    onTouchStart
  } = theirElementProps, ref = React3.useRef(null);
  React3.useEffect(() => {
    if (prefetch === "render" && setShouldPrefetch(!0), prefetch === "viewport") {
      let callback = (entries) => {
        entries.forEach((entry2) => {
          setShouldPrefetch(entry2.isIntersecting);
        });
      }, observer2 = new IntersectionObserver(callback, {
        threshold: 0.5
      });
      return ref.current && observer2.observe(ref.current), () => {
        observer2.disconnect();
      };
    }
  }, [prefetch]);
  let setIntent = () => {
    prefetch === "intent" && setMaybePrefetch(!0);
  }, cancelIntent = () => {
    prefetch === "intent" && (setMaybePrefetch(!1), setShouldPrefetch(!1));
  };
  return React3.useEffect(() => {
    if (maybePrefetch) {
      let id = setTimeout(() => {
        setShouldPrefetch(!0);
      }, 100);
      return () => {
        clearTimeout(id);
      };
    }
  }, [maybePrefetch]), [shouldPrefetch, ref, {
    onFocus: composeEventHandlers(onFocus, setIntent),
    onBlur: composeEventHandlers(onBlur, cancelIntent),
    onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),
    onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),
    onTouchStart: composeEventHandlers(onTouchStart, setIntent)
  }];
}
var ABSOLUTE_URL_REGEX3 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, NavLink2 = /* @__PURE__ */ React3.forwardRef(({
  to,
  prefetch = "none",
  ...props
}, forwardedRef) => {
  let isAbsolute = typeof to == "string" && ABSOLUTE_URL_REGEX3.test(to), href = useHref(to), [shouldPrefetch, ref, prefetchHandlers] = usePrefetchBehavior(prefetch, props);
  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(NavLink, _extends4({}, props, prefetchHandlers, {
    ref: mergeRefs(forwardedRef, ref),
    to
  })), shouldPrefetch && !isAbsolute ? /* @__PURE__ */ React3.createElement(PrefetchPageLinks, {
    page: href
  }) : null);
});
NavLink2.displayName = "NavLink";
var Link2 = /* @__PURE__ */ React3.forwardRef(({
  to,
  prefetch = "none",
  ...props
}, forwardedRef) => {
  let isAbsolute = typeof to == "string" && ABSOLUTE_URL_REGEX3.test(to), href = useHref(to), [shouldPrefetch, ref, prefetchHandlers] = usePrefetchBehavior(prefetch, props);
  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(Link, _extends4({}, props, prefetchHandlers, {
    ref: mergeRefs(forwardedRef, ref),
    to
  })), shouldPrefetch && !isAbsolute ? /* @__PURE__ */ React3.createElement(PrefetchPageLinks, {
    page: href
  }) : null);
});
Link2.displayName = "Link";
function composeEventHandlers(theirHandler, ourHandler) {
  return (event) => {
    theirHandler && theirHandler(event), event.defaultPrevented || ourHandler(event);
  };
}
var linksWarning = "\u26A0\uFE0F REMIX FUTURE CHANGE: The behavior of links `imagesizes` and `imagesrcset` will be changing in v2. Only the React camel case versions will be valid. Please change to `imageSizes` and `imageSrcSet`. For instructions on making this change see https://remix.run/docs/en/v1.15.0/pages/v2#links-imagesizes-and-imagesrcset";
var fetcherTypeWarning = "\u26A0\uFE0F REMIX FUTURE CHANGE: `fetcher.type` will be removed in v2. Please use `fetcher.state`, `fetcher.formData`, and `fetcher.data` to achieve the same UX. For instructions on making this change see https://remix.run/docs/en/v1.15.0/pages/v2#usefetcher", fetcherSubmissionWarning = "\u26A0\uFE0F REMIX FUTURE CHANGE : `fetcher.submission` will be removed in v2. The submission fields are now part of the fetcher object itself (`fetcher.formData`). For instructions on making this change see https://remix.run/docs/en/v1.15.0/pages/v2#usefetcher";
function Links() {
  let {
    manifest,
    routeModules
  } = useRemixContext(), {
    errors,
    matches: routerMatches
  } = useDataRouterStateContext(), matches = errors ? routerMatches.slice(0, routerMatches.findIndex((m10) => errors[m10.route.id]) + 1) : routerMatches, links4 = React3.useMemo(() => getLinksForMatches(matches, routeModules, manifest), [matches, routeModules, manifest]);
  return React3.useEffect(() => {
    links4.some((link) => "imagesizes" in link || "imagesrcset" in link) && logDeprecationOnce(linksWarning);
  }, [links4]), /* @__PURE__ */ React3.createElement(React3.Fragment, null, links4.map((link) => {
    if (isPageLinkDescriptor(link))
      return /* @__PURE__ */ React3.createElement(PrefetchPageLinks, _extends4({
        key: link.page
      }, link));
    let imageSrcSet = null;
    return "useId" in React3 ? (link.imagesrcset && (link.imageSrcSet = imageSrcSet = link.imagesrcset, delete link.imagesrcset), link.imagesizes && (link.imageSizes = link.imagesizes, delete link.imagesizes)) : (link.imageSrcSet && (link.imagesrcset = imageSrcSet = link.imageSrcSet, delete link.imageSrcSet), link.imageSizes && (link.imagesizes = link.imageSizes, delete link.imageSizes)), /* @__PURE__ */ React3.createElement("link", _extends4({
      key: link.rel + (link.href || "") + (imageSrcSet || "")
    }, link));
  }));
}
function PrefetchPageLinks({
  page,
  ...dataLinkProps
}) {
  let {
    router
  } = useDataRouterContext3(), matches = React3.useMemo(() => matchRoutes(router.routes, page), [router.routes, page]);
  return matches ? /* @__PURE__ */ React3.createElement(PrefetchPageLinksImpl, _extends4({
    page,
    matches
  }, dataLinkProps)) : (console.warn(`Tried to prefetch ${page} but no routes matched.`), null);
}
function usePrefetchedStylesheets(matches) {
  let {
    manifest,
    routeModules
  } = useRemixContext(), [styleLinks, setStyleLinks] = React3.useState([]);
  return React3.useEffect(() => {
    let interrupted = !1;
    return getStylesheetPrefetchLinks(matches, manifest, routeModules).then((links4) => {
      interrupted || setStyleLinks(links4);
    }), () => {
      interrupted = !0;
    };
  }, [matches, manifest, routeModules]), styleLinks;
}
function PrefetchPageLinksImpl({
  page,
  matches: nextMatches,
  ...linkProps
}) {
  let location = useLocation(), {
    manifest
  } = useRemixContext(), {
    matches
  } = useDataRouterStateContext(), newMatchesForData = React3.useMemo(() => getNewMatchesForLinks(page, nextMatches, matches, manifest, location, "data"), [page, nextMatches, matches, manifest, location]), newMatchesForAssets = React3.useMemo(() => getNewMatchesForLinks(page, nextMatches, matches, manifest, location, "assets"), [page, nextMatches, matches, manifest, location]), dataHrefs = React3.useMemo(() => getDataLinkHrefs(page, newMatchesForData, manifest), [newMatchesForData, page, manifest]), moduleHrefs = React3.useMemo(() => getModuleLinkHrefs(newMatchesForAssets, manifest), [newMatchesForAssets, manifest]), styleLinks = usePrefetchedStylesheets(newMatchesForAssets);
  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, dataHrefs.map((href) => /* @__PURE__ */ React3.createElement("link", _extends4({
    key: href,
    rel: "prefetch",
    as: "fetch",
    href
  }, linkProps))), moduleHrefs.map((href) => /* @__PURE__ */ React3.createElement("link", _extends4({
    key: href,
    rel: "modulepreload",
    href
  }, linkProps))), styleLinks.map((link) => (
    // these don't spread `linkProps` because they are full link descriptors
    // already with their own props
    /* @__PURE__ */ React3.createElement("link", _extends4({
      key: link.href
    }, link))
  )));
}
function V1Meta() {
  let {
    routeModules
  } = useRemixContext(), {
    errors,
    matches: routerMatches,
    loaderData
  } = useDataRouterStateContext(), location = useLocation(), matches = errors ? routerMatches.slice(0, routerMatches.findIndex((m10) => errors[m10.route.id]) + 1) : routerMatches, meta21 = {}, parentsData = {};
  for (let match of matches) {
    let routeId = match.route.id, data2 = loaderData[routeId], params = match.params, routeModule = routeModules[routeId];
    if (routeModule.meta) {
      let routeMeta = typeof routeModule.meta == "function" ? routeModule.meta({
        data: data2,
        parentsData,
        params,
        location
      }) : routeModule.meta;
      if (routeMeta && Array.isArray(routeMeta))
        throw new Error(
          "The route at " + match.route.path + " returns an array. This is only supported with the `v2_meta` future flag in the Remix config. Either set the flag to `true` or update the route's meta function to return an object.\n\nTo reference the v1 meta function API, see https://remix.run/route/meta"
          // TODO: Add link to the docs once they are written
          // + "\n\nTo reference future flags and the v2 meta API, see https://remix.run/file-conventions/remix-config#future-v2-meta."
        );
      Object.assign(meta21, routeMeta);
    }
    parentsData[routeId] = data2;
  }
  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, Object.entries(meta21).map(([name, value]) => {
    if (!value)
      return null;
    if (["charset", "charSet"].includes(name))
      return /* @__PURE__ */ React3.createElement("meta", {
        key: "charSet",
        charSet: value
      });
    if (name === "title")
      return /* @__PURE__ */ React3.createElement("title", {
        key: "title"
      }, String(value));
    let isOpenGraphTag = /^(og|music|video|article|book|profile|fb):.+$/.test(name);
    return [value].flat().map((content) => isOpenGraphTag ? /* @__PURE__ */ React3.createElement("meta", {
      property: name,
      content,
      key: name + content
    }) : typeof content == "string" ? /* @__PURE__ */ React3.createElement("meta", {
      name,
      content,
      key: name + content
    }) : /* @__PURE__ */ React3.createElement("meta", _extends4({
      key: name + JSON.stringify(content)
    }, content)));
  }));
}
function V2Meta() {
  let {
    routeModules
  } = useRemixContext(), {
    errors,
    matches: routerMatches,
    loaderData
  } = useDataRouterStateContext(), location = useLocation(), _matches = errors ? routerMatches.slice(0, routerMatches.findIndex((m10) => errors[m10.route.id]) + 1) : routerMatches, meta21 = [], leafMeta = null, matches = [];
  for (let i7 = 0; i7 < _matches.length; i7++) {
    let _match = _matches[i7], routeId = _match.route.id, data2 = loaderData[routeId], params = _match.params, routeModule = routeModules[routeId], routeMeta = [], match = {
      id: routeId,
      data: data2,
      meta: [],
      params: _match.params,
      pathname: _match.pathname,
      handle: _match.route.handle,
      // TODO: Remove in v2. Only leaving it for now because we used it in
      // examples and there's no reason to crash someone's build for one line.
      // They'll get a TS error from the type updates anyway.
      // @ts-expect-error
      get route() {
        return console.warn("The meta function in " + _match.route.path + " accesses the `route` property on `matches`. This is deprecated and will be removed in Remix version 2. See"), _match.route;
      }
    };
    if (matches[i7] = match, routeModule != null && routeModule.meta ? routeMeta = typeof routeModule.meta == "function" ? routeModule.meta({
      data: data2,
      params,
      location,
      matches
    }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta : leafMeta && (routeMeta = [...leafMeta]), routeMeta = routeMeta || [], !Array.isArray(routeMeta))
      throw new Error("The `v2_meta` API is enabled in the Remix config, but the route at " + _match.route.path + ` returns an invalid value. In v2, all route meta functions must return an array of meta objects.

To reference the v1 meta function API, see https://remix.run/route/meta`);
    match.meta = routeMeta, matches[i7] = match, meta21 = [...routeMeta], leafMeta = meta21;
  }
  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, meta21.flat().map((metaProps) => {
    if (!metaProps)
      return null;
    if ("tagName" in metaProps) {
      let tagName = metaProps.tagName;
      return delete metaProps.tagName, isValidMetaTag(tagName) ? /* @__PURE__ */ React3.createElement(tagName, _extends4({
        key: JSON.stringify(metaProps)
      }, metaProps)) : (console.warn(`A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`), null);
    }
    if ("title" in metaProps)
      return /* @__PURE__ */ React3.createElement("title", {
        key: "title"
      }, String(metaProps.title));
    if ("charset" in metaProps && (metaProps.charSet ?? (metaProps.charSet = metaProps.charset), delete metaProps.charset), "charSet" in metaProps && metaProps.charSet != null)
      return typeof metaProps.charSet == "string" ? /* @__PURE__ */ React3.createElement("meta", {
        key: "charSet",
        charSet: metaProps.charSet
      }) : null;
    if ("script:ld+json" in metaProps) {
      let json4 = null;
      try {
        json4 = JSON.stringify(metaProps["script:ld+json"]);
      } catch {
      }
      return json4 != null && /* @__PURE__ */ React3.createElement("script", {
        key: "script:ld+json",
        type: "application/ld+json",
        dangerouslySetInnerHTML: {
          __html: JSON.stringify(metaProps["script:ld+json"])
        }
      });
    }
    return /* @__PURE__ */ React3.createElement("meta", _extends4({
      key: JSON.stringify(metaProps)
    }, metaProps));
  }));
}
function isValidMetaTag(tagName) {
  return typeof tagName == "string" && /^(meta|link)$/.test(tagName);
}
function Meta() {
  let {
    future: future2
  } = useRemixContext();
  return future2 != null && future2.v2_meta ? /* @__PURE__ */ React3.createElement(V2Meta, null) : /* @__PURE__ */ React3.createElement(V1Meta, null);
}
function Await2(props) {
  return /* @__PURE__ */ React3.createElement(Await, props);
}
var isHydrated = !1;
function Scripts(props) {
  let {
    manifest,
    serverHandoffString,
    abortDelay,
    serializeError: serializeError2
  } = useRemixContext(), {
    router,
    static: isStatic,
    staticContext
  } = useDataRouterContext3(), {
    matches
  } = useDataRouterStateContext(), navigation = useNavigation();
  React3.useEffect(() => {
    isHydrated = !0;
  }, []);
  let serializePreResolvedErrorImp = (key, error) => {
    let toSerialize;
    return serializeError2 && error instanceof Error ? toSerialize = serializeError2(error) : toSerialize = error, `${JSON.stringify(key)}:__remixContext.p(!1, ${escapeHtml(JSON.stringify(toSerialize))})`;
  }, serializePreresolvedDataImp = (routeId, key, data2) => {
    let serializedData;
    try {
      serializedData = JSON.stringify(data2);
    } catch (error) {
      return serializePreResolvedErrorImp(key, error);
    }
    return `${JSON.stringify(key)}:__remixContext.p(${escapeHtml(serializedData)})`;
  }, serializeErrorImp = (routeId, key, error) => {
    let toSerialize;
    return serializeError2 && error instanceof Error ? toSerialize = serializeError2(error) : toSerialize = error, `__remixContext.r(${JSON.stringify(routeId)}, ${JSON.stringify(key)}, !1, ${escapeHtml(JSON.stringify(toSerialize))})`;
  }, serializeDataImp = (routeId, key, data2) => {
    let serializedData;
    try {
      serializedData = JSON.stringify(data2);
    } catch (error) {
      return serializeErrorImp(routeId, key, error);
    }
    return `__remixContext.r(${JSON.stringify(routeId)}, ${JSON.stringify(key)}, ${escapeHtml(serializedData)})`;
  }, deferredScripts = [], initialScripts = React3.useMemo(() => {
    var _manifest$hmr;
    let contextScript = staticContext ? `window.__remixContext = ${serverHandoffString};` : " ", activeDeferreds = staticContext == null ? void 0 : staticContext.activeDeferreds;
    contextScript += activeDeferreds ? ["__remixContext.p = function(v,e,p,x) {", "  if (typeof e !== 'undefined') {", `    x=new Error(e.message);
    x.stack=e.stack;`, "    p=Promise.reject(x);", "  } else {", "    p=Promise.resolve(v);", "  }", "  return p;", "};", "__remixContext.n = function(i,k) {", "  __remixContext.t = __remixContext.t || {};", "  __remixContext.t[i] = __remixContext.t[i] || {};", "  let p = new Promise((r, e) => {__remixContext.t[i][k] = {r:(v)=>{r(v);},e:(v)=>{e(v);}};});", typeof abortDelay == "number" ? `setTimeout(() => {if(typeof p._error !== "undefined" || typeof p._data !== "undefined"){return;} __remixContext.t[i][k].e(new Error("Server timeout."))}, ${abortDelay});` : "", "  return p;", "};", "__remixContext.r = function(i,k,v,e,p,x) {", "  p = __remixContext.t[i][k];", "  if (typeof e !== 'undefined') {", `    x=new Error(e.message);
    x.stack=e.stack;`, "    p.e(x);", "  } else {", "    p.r(v);", "  }", "};"].join(`
`) + Object.entries(activeDeferreds).map(([routeId, deferredData]) => {
      let pendingKeys = new Set(deferredData.pendingKeys), promiseKeyValues = deferredData.deferredKeys.map((key) => {
        if (pendingKeys.has(key))
          return deferredScripts.push(/* @__PURE__ */ React3.createElement(DeferredHydrationScript, {
            key: `${routeId} | ${key}`,
            deferredData,
            routeId,
            dataKey: key,
            scriptProps: props,
            serializeData: serializeDataImp,
            serializeError: serializeErrorImp
          })), `${JSON.stringify(key)}:__remixContext.n(${JSON.stringify(routeId)}, ${JSON.stringify(key)})`;
        {
          let trackedPromise = deferredData.data[key];
          return typeof trackedPromise._error < "u" ? serializePreResolvedErrorImp(key, trackedPromise._error) : serializePreresolvedDataImp(routeId, key, trackedPromise._data);
        }
      }).join(`,
`);
      return `Object.assign(__remixContext.state.loaderData[${JSON.stringify(routeId)}], {${promiseKeyValues}});`;
    }).join(`
`) + (deferredScripts.length > 0 ? `__remixContext.a=${deferredScripts.length};` : "") : "";
    let routeModulesScript = isStatic ? `${(_manifest$hmr = manifest.hmr) !== null && _manifest$hmr !== void 0 && _manifest$hmr.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : ""}import ${JSON.stringify(manifest.url)};
${matches.map((match, index3) => `import * as route${index3} from ${JSON.stringify(manifest.routes[match.route.id].module)};`).join(`
`)}
window.__remixRouteModules = {${matches.map((match, index3) => `${JSON.stringify(match.route.id)}:route${index3}`).join(",")}};

import(${JSON.stringify(manifest.entry.module)});` : " ";
    return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement("script", _extends4({}, props, {
      suppressHydrationWarning: !0,
      dangerouslySetInnerHTML: createHtml(contextScript),
      type: void 0
    })), /* @__PURE__ */ React3.createElement("script", _extends4({}, props, {
      suppressHydrationWarning: !0,
      dangerouslySetInnerHTML: createHtml(routeModulesScript),
      type: "module",
      async: !0
    })));
  }, []);
  if (!isStatic && typeof __remixContext == "object" && __remixContext.a)
    for (let i7 = 0; i7 < __remixContext.a; i7++)
      deferredScripts.push(/* @__PURE__ */ React3.createElement(DeferredHydrationScript, {
        key: i7,
        scriptProps: props,
        serializeData: serializeDataImp,
        serializeError: serializeErrorImp
      }));
  let nextMatches = React3.useMemo(() => {
    if (navigation.location) {
      let matches2 = matchRoutes(router.routes, navigation.location);
      return invariant2(matches2, `No routes match path "${navigation.location.pathname}"`), matches2;
    }
    return [];
  }, [navigation.location, router.routes]), routePreloads = matches.concat(nextMatches).map((match) => {
    let route = manifest.routes[match.route.id];
    return (route.imports || []).concat([route.module]);
  }).flat(1), preloads = isHydrated ? [] : manifest.entry.imports.concat(routePreloads);
  return isHydrated ? null : /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement("link", {
    rel: "modulepreload",
    href: manifest.entry.module,
    crossOrigin: props.crossOrigin
  }), dedupe2(preloads).map((path) => /* @__PURE__ */ React3.createElement("link", {
    key: path,
    rel: "modulepreload",
    href: path,
    crossOrigin: props.crossOrigin
  })), initialScripts, deferredScripts);
}
function DeferredHydrationScript({
  dataKey,
  deferredData,
  routeId,
  scriptProps,
  serializeData,
  serializeError: serializeError2
}) {
  return typeof document > "u" && deferredData && dataKey && routeId && invariant2(deferredData.pendingKeys.includes(dataKey), `Deferred data for route ${routeId} with key ${dataKey} was not pending but tried to render a script for it.`), /* @__PURE__ */ React3.createElement(React3.Suspense, {
    fallback: (
      // This makes absolutely no sense. The server renders null as a fallback,
      // but when hydrating, we need to render a script tag to avoid a hydration issue.
      // To reproduce a hydration mismatch, just render null as a fallback.
      typeof document > "u" && deferredData && dataKey && routeId ? null : /* @__PURE__ */ React3.createElement("script", _extends4({}, scriptProps, {
        async: !0,
        suppressHydrationWarning: !0,
        dangerouslySetInnerHTML: {
          __html: " "
        }
      }))
    )
  }, typeof document > "u" && deferredData && dataKey && routeId ? /* @__PURE__ */ React3.createElement(Await2, {
    resolve: deferredData.data[dataKey],
    errorElement: /* @__PURE__ */ React3.createElement(ErrorDeferredHydrationScript, {
      dataKey,
      routeId,
      scriptProps,
      serializeError: serializeError2
    }),
    children: (data2) => /* @__PURE__ */ React3.createElement("script", _extends4({}, scriptProps, {
      async: !0,
      suppressHydrationWarning: !0,
      dangerouslySetInnerHTML: {
        __html: serializeData(routeId, dataKey, data2)
      }
    }))
  }) : /* @__PURE__ */ React3.createElement("script", _extends4({}, scriptProps, {
    async: !0,
    suppressHydrationWarning: !0,
    dangerouslySetInnerHTML: {
      __html: " "
    }
  })));
}
function ErrorDeferredHydrationScript({
  dataKey,
  routeId,
  scriptProps,
  serializeError: serializeError2
}) {
  let error = useAsyncError();
  return /* @__PURE__ */ React3.createElement("script", _extends4({}, scriptProps, {
    suppressHydrationWarning: !0,
    dangerouslySetInnerHTML: {
      __html: serializeError2(routeId, dataKey, error)
    }
  }));
}
function dedupe2(array) {
  return [...new Set(array)];
}
function useMatches2() {
  let {
    routeModules
  } = useRemixContext(), matches = useMatches();
  return React3.useMemo(() => matches.map((match) => ({
    id: match.id,
    pathname: match.pathname,
    params: match.params,
    data: match.data,
    // Need to grab handle here since we don't have it at client-side route
    // creation time
    handle: routeModules[match.id].handle
  })), [matches, routeModules]);
}
function useLoaderData2() {
  return useLoaderData();
}
function useActionData2() {
  return useActionData();
}
function useFetchers2() {
  return useFetchers().map((f10) => {
    let fetcher = convertRouterFetcherToRemixFetcher({
      state: f10.state,
      data: f10.data,
      formMethod: f10.formMethod,
      formAction: f10.formAction,
      formEncType: f10.formEncType,
      formData: f10.formData,
      json: f10.json,
      text: f10.text,
      " _hasFetcherDoneAnything ": f10[" _hasFetcherDoneAnything "]
    });
    return addFetcherDeprecationWarnings(fetcher), fetcher;
  });
}
function useFetcher2() {
  let fetcherRR = useFetcher();
  return React3.useMemo(() => {
    let fetcherWithComponents = {
      ...convertRouterFetcherToRemixFetcher({
        state: fetcherRR.state,
        data: fetcherRR.data,
        formMethod: fetcherRR.formMethod,
        formAction: fetcherRR.formAction,
        formEncType: fetcherRR.formEncType,
        formData: fetcherRR.formData,
        json: fetcherRR.json,
        text: fetcherRR.text,
        " _hasFetcherDoneAnything ": fetcherRR[" _hasFetcherDoneAnything "]
      }),
      load: fetcherRR.load,
      submit: fetcherRR.submit,
      Form: fetcherRR.Form
    };
    return addFetcherDeprecationWarnings(fetcherWithComponents), fetcherWithComponents;
  }, [fetcherRR]);
}
function addFetcherDeprecationWarnings(fetcher) {
  let type = fetcher.type;
  Object.defineProperty(fetcher, "type", {
    get() {
      return logDeprecationOnce(fetcherTypeWarning), type;
    },
    set(value) {
      type = value;
    },
    // These settings should make this behave like a normal object `type` field
    configurable: !0,
    enumerable: !0
  });
  let submission = fetcher.submission;
  Object.defineProperty(fetcher, "submission", {
    get() {
      return logDeprecationOnce(fetcherSubmissionWarning), submission;
    },
    set(value) {
      submission = value;
    },
    // These settings should make this behave like a normal object `type` field
    configurable: !0,
    enumerable: !0
  });
}
function convertRouterFetcherToRemixFetcher(fetcherRR) {
  let {
    state,
    formMethod,
    formAction,
    formEncType,
    formData,
    json: json4,
    text,
    data: data2
  } = fetcherRR, isActionSubmission = formMethod != null && ["POST", "PUT", "PATCH", "DELETE"].includes(formMethod.toUpperCase());
  if (state === "idle")
    return fetcherRR[" _hasFetcherDoneAnything "] === !0 ? {
      state: "idle",
      type: "done",
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0,
      json: void 0,
      text: void 0,
      submission: void 0,
      data: data2
    } : IDLE_FETCHER2;
  if (state === "submitting" && formMethod && formAction && formEncType && (formData || json4 !== void 0 || text !== void 0)) {
    if (isActionSubmission)
      return {
        state,
        type: "actionSubmission",
        formMethod: formMethod.toUpperCase(),
        formAction,
        formEncType,
        formData,
        json: json4,
        text,
        // @ts-expect-error formData/json/text are mutually exclusive in the type,
        // so TS can't be sure these meet that criteria, but as a straight
        // assignment from the RR fetcher we know they will
        submission: {
          method: formMethod.toUpperCase(),
          action: formAction,
          encType: formEncType,
          formData,
          json: json4,
          text,
          key: ""
        },
        data: data2
      };
    invariant2(!1, "Encountered an unexpected fetcher scenario in useFetcher()");
  }
  if (state === "loading" && formMethod && formAction && formEncType) {
    if (isActionSubmission)
      return data2 ? {
        state,
        type: "actionReload",
        formMethod: formMethod.toUpperCase(),
        formAction,
        formEncType,
        formData,
        json: json4,
        text,
        // @ts-expect-error formData/json/text are mutually exclusive in the type,
        // so TS can't be sure these meet that criteria, but as a straight
        // assignment from the RR fetcher we know they will
        submission: {
          method: formMethod.toUpperCase(),
          action: formAction,
          encType: formEncType,
          formData,
          json: json4,
          text,
          key: ""
        },
        data: data2
      } : {
        state,
        type: "actionRedirect",
        formMethod: formMethod.toUpperCase(),
        formAction,
        formEncType,
        formData,
        json: json4,
        text,
        // @ts-expect-error formData/json/text are mutually exclusive in the type,
        // so TS can't be sure these meet that criteria, but as a straight
        // assignment from the RR fetcher we know they will
        submission: {
          method: formMethod.toUpperCase(),
          action: formAction,
          encType: formEncType,
          formData,
          json: json4,
          text,
          key: ""
        },
        data: void 0
      };
    {
      let url = new URL(formAction, window.location.origin);
      return formData && (url.search = new URLSearchParams(formData.entries()).toString()), {
        state: "submitting",
        type: "loaderSubmission",
        formMethod: formMethod.toUpperCase(),
        formAction,
        formEncType,
        formData,
        json: json4,
        text,
        // @ts-expect-error formData/json/text are mutually exclusive in the type,
        // so TS can't be sure these meet that criteria, but as a straight
        // assignment from the RR fetcher we know they will
        submission: {
          method: formMethod.toUpperCase(),
          action: url.pathname + url.search,
          encType: formEncType,
          formData,
          json: json4,
          text,
          key: ""
        },
        data: data2
      };
    }
  }
  return {
    state: "loading",
    type: "normalLoad",
    formMethod: void 0,
    formAction: void 0,
    formData: void 0,
    json: void 0,
    text: void 0,
    formEncType: void 0,
    submission: void 0,
    data: data2
  };
}
function mergeRefs(...refs) {
  return (value) => {
    refs.forEach((ref) => {
      typeof ref == "function" ? ref(value) : ref != null && (ref.current = value);
    });
  };
}

// node_modules/@remix-run/react/dist/esm/routes.js
var React4 = __toESM(require_react());
function groupRoutesByParentId(manifest) {
  let routes2 = {};
  return Object.values(manifest).forEach((route) => {
    let parentId = route.parentId || "";
    routes2[parentId] || (routes2[parentId] = []), routes2[parentId].push(route);
  }), routes2;
}
function createServerRoutes(manifest, routeModules, future2, parentId = "", routesByParentId = groupRoutesByParentId(manifest)) {
  return (routesByParentId[parentId] || []).map((route) => {
    let hasErrorBoundary = future2.v2_errorBoundary === !0 ? route.id === "root" || route.hasErrorBoundary : route.id === "root" || route.hasCatchBoundary || route.hasErrorBoundary, dataRoute = {
      caseSensitive: route.caseSensitive,
      element: /* @__PURE__ */ React4.createElement(RemixRoute, {
        id: route.id
      }),
      errorElement: hasErrorBoundary ? /* @__PURE__ */ React4.createElement(RemixRouteError, {
        id: route.id
      }) : void 0,
      id: route.id,
      index: route.index,
      path: route.path,
      handle: routeModules[route.id].handle
      // Note: we don't need loader/action/shouldRevalidate on these routes
      // since they're for a static render
    }, children = createServerRoutes(manifest, routeModules, future2, route.id, routesByParentId);
    return children.length > 0 && (dataRoute.children = children), dataRoute;
  });
}

// node_modules/@remix-run/react/dist/esm/index.js
init_dist2();

// node_modules/@remix-run/react/dist/esm/scroll-restoration.js
var React5 = __toESM(require_react());
init_dist2();
var STORAGE_KEY = "positions";
function ScrollRestoration2({
  getKey,
  ...props
}) {
  let location = useLocation(), matches = useMatches2();
  useScrollRestoration({
    getKey,
    storageKey: STORAGE_KEY
  });
  let key = React5.useMemo(
    () => {
      if (!getKey)
        return null;
      let userKey = getKey(location, matches);
      return userKey !== location.key ? userKey : null;
    },
    // Nah, we only need this the first time for the SSR render
    // eslint-disable-next-line react-hooks/exhaustive-deps
    []
  ), restoreScroll = ((STORAGE_KEY2, restoreKey) => {
    if (!window.history.state || !window.history.state.key) {
      let key2 = Math.random().toString(32).slice(2);
      window.history.replaceState({
        key: key2
      }, "");
    }
    try {
      let storedY = JSON.parse(sessionStorage.getItem(STORAGE_KEY2) || "{}")[restoreKey || window.history.state.key];
      typeof storedY == "number" && window.scrollTo(0, storedY);
    } catch (error) {
      console.error(error), sessionStorage.removeItem(STORAGE_KEY2);
    }
  }).toString();
  return /* @__PURE__ */ React5.createElement("script", _extends4({}, props, {
    suppressHydrationWarning: !0,
    dangerouslySetInnerHTML: {
      __html: `(${restoreScroll})(${JSON.stringify(STORAGE_KEY)}, ${JSON.stringify(key)})`
    }
  }));
}

// node_modules/@remix-run/react/dist/esm/server.js
var React6 = __toESM(require_react()), import_server = __toESM(require_server());
function RemixServer({
  context,
  url,
  abortDelay
}) {
  typeof url == "string" && (url = new URL(url));
  let {
    manifest,
    routeModules,
    serverHandoffString
  } = context, routes2 = createServerRoutes(manifest.routes, routeModules, context.future), router = (0, import_server.createStaticRouter)(routes2, context.staticHandlerContext);
  return /* @__PURE__ */ React6.createElement(RemixContext.Provider, {
    value: {
      manifest,
      routeModules,
      serverHandoffString,
      future: context.future,
      serializeError: context.serializeError,
      abortDelay
    }
  }, /* @__PURE__ */ React6.createElement(RemixErrorBoundary, {
    location: router.state.location,
    component: RemixRootDefaultErrorBoundary
  }, /* @__PURE__ */ React6.createElement(import_server.StaticRouterProvider, {
    router,
    context: context.staticHandlerContext,
    hydrate: !1
  })));
}

// node_modules/isbot/index.mjs
function _iterableToArrayLimit(arr, i7) {
  var _i = arr == null ? null : typeof Symbol < "u" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i != null) {
    var _s, _e3, _x, _r, _arr = [], _n = !0, _d = !1;
    try {
      if (_x = (_i = _i.call(arr)).next, i7 === 0) {
        if (Object(_i) !== _i)
          return;
        _n = !1;
      } else
        for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i7); _n = !0)
          ;
    } catch (err) {
      _d = !0, _e3 = err;
    } finally {
      try {
        if (!_n && _i.return != null && (_r = _i.return(), Object(_r) !== _r))
          return;
      } finally {
        if (_d)
          throw _e3;
      }
    }
    return _arr;
  }
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
  for (var i7 = 0; i7 < props.length; i7++) {
    var descriptor = props[i7];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", {
    writable: !1
  }), Constructor;
}
function _defineProperty(obj, key, value) {
  return key = _toPropertyKey(key), key in obj ? Object.defineProperty(obj, key, {
    value,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : obj[key] = value, obj;
}
function _slicedToArray(arr, i7) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i7) || _unsupportedIterableToArray(arr, i7) || _nonIterableRest();
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _unsupportedIterableToArray(o11, minLen) {
  if (o11) {
    if (typeof o11 == "string")
      return _arrayLikeToArray(o11, minLen);
    var n7 = Object.prototype.toString.call(o11).slice(8, -1);
    if (n7 === "Object" && o11.constructor && (n7 = o11.constructor.name), n7 === "Map" || n7 === "Set")
      return Array.from(o11);
    if (n7 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n7))
      return _arrayLikeToArray(o11, minLen);
  }
}
function _arrayLikeToArray(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i7 = 0, arr2 = new Array(len); i7 < len; i7++)
    arr2[i7] = arr[i7];
  return arr2;
}
function _nonIterableRest() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function _toPrimitive(input, hint) {
  if (typeof input != "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res != "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return typeof key == "symbol" ? key : String(key);
}
function _classPrivateFieldGet(receiver, privateMap) {
  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get");
  return _classApplyDescriptorGet(receiver, descriptor);
}
function _classPrivateFieldSet(receiver, privateMap, value) {
  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set");
  return _classApplyDescriptorSet(receiver, descriptor, value), value;
}
function _classExtractFieldDescriptor(receiver, privateMap, action12) {
  if (!privateMap.has(receiver))
    throw new TypeError("attempted to " + action12 + " private field on non-instance");
  return privateMap.get(receiver);
}
function _classApplyDescriptorGet(receiver, descriptor) {
  return descriptor.get ? descriptor.get.call(receiver) : descriptor.value;
}
function _classApplyDescriptorSet(receiver, descriptor, value) {
  if (descriptor.set)
    descriptor.set.call(receiver, value);
  else {
    if (!descriptor.writable)
      throw new TypeError("attempted to set read only private field");
    descriptor.value = value;
  }
}
function _classPrivateMethodGet(receiver, privateSet, fn) {
  if (!privateSet.has(receiver))
    throw new TypeError("attempted to get private field on non-instance");
  return fn;
}
function _checkPrivateRedeclaration(obj, privateCollection) {
  if (privateCollection.has(obj))
    throw new TypeError("Cannot initialize the same private elements twice on an object");
}
function _classPrivateFieldInitSpec(obj, privateMap, value) {
  _checkPrivateRedeclaration(obj, privateMap), privateMap.set(obj, value);
}
function _classPrivateMethodInitSpec(obj, privateSet) {
  _checkPrivateRedeclaration(obj, privateSet), privateSet.add(obj);
}
var list = [
  " daum[ /]",
  " deusu/",
  " yadirectfetcher",
  "(?:^| )site",
  "(?:^|[^g])news",
  "@[a-z]",
  "\\(at\\)[a-z]",
  "\\(github\\.com/",
  "\\[at\\][a-z]",
  "^12345",
  "^<",
  "^[\\w \\.\\-\\(\\)]+(/v?\\d+(\\.\\d+)?(\\.\\d{1,10})?)?$",
  "^[^ ]{50,}$",
  "^active",
  "^ad muncher",
  "^amaya",
  "^anglesharp/",
  "^anonymous",
  "^avsdevicesdk/",
  "^axios/",
  "^bidtellect/",
  "^biglotron",
  "^btwebclient/",
  "^castro",
  "^clamav[ /]",
  "^client/",
  "^cobweb/",
  "^coccoc",
  "^custom",
  "^ddg[_-]android",
  "^discourse",
  "^dispatch/\\d",
  "^downcast/",
  "^duckduckgo",
  "^facebook",
  "^fdm[ /]\\d",
  "^getright/",
  "^gozilla/",
  "^hatena",
  "^hobbit",
  "^hotzonu",
  "^hwcdn/",
  "^jeode/",
  "^jetty/",
  "^jigsaw",
  "^linkdex",
  "^lwp[-: ]",
  "^metauri",
  "^microsoft bits",
  "^movabletype",
  "^mozilla/\\d\\.\\d \\(compatible;?\\)$",
  "^mozilla/\\d\\.\\d \\w*$",
  "^navermailapp",
  "^netsurf",
  "^offline explorer",
  "^php",
  "^postman",
  "^postrank",
  "^python",
  "^read",
  "^reed",
  "^restsharp/",
  "^snapchat",
  "^space bison",
  "^svn",
  "^swcd ",
  "^taringa",
  "^test certificate info",
  "^thumbor/",
  "^tumblr/",
  "^user-agent:mozilla",
  "^valid",
  "^venus/fedoraplanet",
  "^w3c",
  "^webbandit/",
  "^webcopier",
  "^wget",
  "^whatsapp",
  "^xenu link sleuth",
  "^yahoo",
  "^yandex",
  "^zdm/\\d",
  "^zoom marketplace/",
  "^{{.*}}$",
  "adbeat\\.com",
  "appinsights",
  "archive",
  "ask jeeves/teoma",
  "bit\\.ly/",
  "bluecoat drtr",
  "bot",
  "browsex",
  "burpcollaborator",
  "capture",
  "catch",
  "check",
  "chrome-lighthouse",
  "chromeframe",
  "cloud",
  "crawl",
  "cryptoapi",
  "dareboost",
  "datanyze",
  "dataprovider",
  "dejaclick",
  "dmbrowser",
  "download",
  "evc-batch/",
  "feed",
  "firephp",
  "freesafeip",
  "ghost",
  "gomezagent",
  "google",
  "headlesschrome/",
  "http",
  "httrack",
  "hubspot marketing grader",
  "hydra",
  "ibisbrowser",
  "images",
  "iplabel",
  "ips-agent",
  "java",
  "library",
  "mail\\.ru/",
  "manager",
  "monitor",
  "morningscore/",
  "neustar wpm",
  "nutch",
  "offbyone",
  "optimize",
  "pageburst",
  "pagespeed",
  "perl",
  "phantom",
  "pingdom",
  "powermarks",
  "preview",
  "proxy",
  "ptst[ /]\\d",
  "reader",
  "rexx;",
  "rigor",
  "rss",
  "scan",
  "scrape",
  "search",
  "serp ?reputation ?management",
  "server",
  "sogou",
  "sparkler/",
  "speedcurve",
  "spider",
  "splash",
  "statuscake",
  "stumbleupon\\.com",
  "supercleaner",
  "synapse",
  "synthetic",
  "taginspector/",
  "torrent",
  "tracemyfile",
  "transcoder",
  "trendsmapresolver",
  "twingly recon",
  "url",
  "virtuoso",
  "wappalyzer",
  "webglance",
  "webkit2png",
  "websitemetadataretriever",
  "whatcms/",
  "wordpress",
  "zgrab"
];
function amend(list2) {
  try {
    new RegExp("(?<! cu)bot").test("dangerbot");
  } catch {
    return list2;
  }
  return [
    // Addresses: Cubot device
    ["bot", "(?<! cu)bot"],
    // Addresses: Android webview
    ["google", "(?<! (?:channel/|google/))google(?!(app|/google| pixel))"],
    // Addresses: libhttp browser
    ["http", "(?<!(?:lib))http"],
    // Addresses: java based browsers
    ["java", "java(?!;)"],
    // Addresses: Yandex Search App
    ["search", "(?<! ya(?:yandex)?)search"]
  ].forEach(function(_ref) {
    var _ref2 = _slicedToArray(_ref, 2), search = _ref2[0], replace = _ref2[1], index3 = list2.lastIndexOf(search);
    ~index3 && list2.splice(index3, 1, replace);
  }), list2;
}
amend(list);
var flags = "i", _list = /* @__PURE__ */ new WeakMap(), _pattern = /* @__PURE__ */ new WeakMap(), _update = /* @__PURE__ */ new WeakSet(), _index = /* @__PURE__ */ new WeakSet(), Isbot = /* @__PURE__ */ function() {
  function Isbot2(patterns) {
    var _this = this;
    _classCallCheck(this, Isbot2), _classPrivateMethodInitSpec(this, _index), _classPrivateMethodInitSpec(this, _update), _classPrivateFieldInitSpec(this, _list, {
      writable: !0,
      value: void 0
    }), _classPrivateFieldInitSpec(this, _pattern, {
      writable: !0,
      value: void 0
    }), _classPrivateFieldSet(this, _list, patterns || list.slice()), _classPrivateMethodGet(this, _update, _update2).call(this);
    var isbot2 = function(ua) {
      return _this.test(ua);
    };
    return Object.defineProperties(isbot2, Object.entries(Object.getOwnPropertyDescriptors(Isbot2.prototype)).reduce(function(accumulator, _ref) {
      var _ref2 = _slicedToArray(_ref, 2), prop = _ref2[0], descriptor = _ref2[1];
      return typeof descriptor.value == "function" && Object.assign(accumulator, _defineProperty({}, prop, {
        value: _this[prop].bind(_this)
      })), typeof descriptor.get == "function" && Object.assign(accumulator, _defineProperty({}, prop, {
        get: function() {
          return _this[prop];
        }
      })), accumulator;
    }, {}));
  }
  return _createClass(Isbot2, [{
    key: "pattern",
    get: (
      /**
       * Get a clone of the pattern
       * @type RegExp
       */
      function() {
        return new RegExp(_classPrivateFieldGet(this, _pattern));
      }
    )
    /**
     * Match given string against out pattern
     * @param  {string} ua User Agent string
     * @returns {boolean}
     */
  }, {
    key: "test",
    value: function(ua) {
      return Boolean(ua) && _classPrivateFieldGet(this, _pattern).test(ua);
    }
    /**
     * Get the match for strings' known crawler pattern
     * @param  {string} ua User Agent string
     * @returns {string|null}
     */
  }, {
    key: "find",
    value: function() {
      var ua = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", match = ua.match(_classPrivateFieldGet(this, _pattern));
      return match && match[0];
    }
    /**
     * Get the patterns that match user agent string if any
     * @param  {string} ua User Agent string
     * @returns {string[]}
     */
  }, {
    key: "matches",
    value: function() {
      var ua = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
      return _classPrivateFieldGet(this, _list).filter(function(entry2) {
        return new RegExp(entry2, flags).test(ua);
      });
    }
    /**
     * Clear all patterns that match user agent
     * @param  {string} ua User Agent string
     * @returns {void}
     */
  }, {
    key: "clear",
    value: function() {
      var ua = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
      this.exclude(this.matches(ua));
    }
    /**
     * Extent patterns for known crawlers
     * @param  {string[]} filters
     * @returns {void}
     */
  }, {
    key: "extend",
    value: function() {
      var _this2 = this, filters2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      [].push.apply(_classPrivateFieldGet(this, _list), filters2.filter(function(rule) {
        return _classPrivateMethodGet(_this2, _index, _index2).call(_this2, rule) === -1;
      }).map(function(filter) {
        return filter.toLowerCase();
      })), _classPrivateMethodGet(this, _update, _update2).call(this);
    }
    /**
     * Exclude patterns from bot pattern rule
     * @param  {string[]} filters
     * @returns {void}
     */
  }, {
    key: "exclude",
    value: function() {
      for (var filters2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], length2 = filters2.length; length2--; ) {
        var index3 = _classPrivateMethodGet(this, _index, _index2).call(this, filters2[length2]);
        index3 > -1 && _classPrivateFieldGet(this, _list).splice(index3, 1);
      }
      _classPrivateMethodGet(this, _update, _update2).call(this);
    }
    /**
     * Create a new Isbot instance using given list or self's list
     * @param  {string[]} [list]
     * @returns {Isbot}
     */
  }, {
    key: "spawn",
    value: function(list2) {
      return new Isbot2(list2 || _classPrivateFieldGet(this, _list));
    }
  }]), Isbot2;
}();
function _update2() {
  _classPrivateFieldSet(this, _pattern, new RegExp(_classPrivateFieldGet(this, _list).join("|"), flags));
}
function _index2(rule) {
  return _classPrivateFieldGet(this, _list).indexOf(rule.toLowerCase());
}
var isbot = new Isbot();

// app/entry.server.jsx
var import_server3 = __toESM(require_server_browser()), import_jsx_dev_runtime = __toESM(require_jsx_dev_runtime());
async function handleRequest(request, responseStatusCode, responseHeaders, remixContext) {
  let body = await (0, import_server3.renderToReadableStream)(
    /* @__PURE__ */ (0, import_jsx_dev_runtime.jsxDEV)(RemixServer, { context: remixContext, url: request.url }, void 0, !1, {
      fileName: "app/entry.server.jsx",
      lineNumber: 13,
      columnNumber: 5
    }, this),
    {
      signal: request.signal,
      onError(error) {
        console.error(error), responseStatusCode = 500;
      }
    }
  );
  return isbot(request.headers.get("user-agent")) && await body.allReady, responseHeaders.set("Content-Type", "text/html"), new Response(body, {
    headers: responseHeaders,
    status: responseStatusCode
  });
}

// app/root.jsx
var root_exports = {};
__export(root_exports, {
  ErrorBoundary: () => ErrorBoundary,
  default: () => App,
  links: () => links,
  loader: () => loader
});

// node_modules/@remix-run/server-runtime/dist/esm/cookies.js
var import_cookie = __toESM(require_cookie());

// node_modules/@remix-run/server-runtime/dist/esm/warnings.js
var alreadyWarned3 = {};
function warnOnce(condition, message) {
  !condition && !alreadyWarned3[message] && (alreadyWarned3[message] = !0, console.warn(message));
}

// node_modules/@remix-run/server-runtime/dist/esm/cookies.js
var createCookieFactory = ({
  sign: sign2,
  unsign: unsign2
}) => (name, cookieOptions = {}) => {
  let {
    secrets = [],
    ...options
  } = {
    path: "/",
    sameSite: "lax",
    ...cookieOptions
  };
  return warnOnceAboutExpiresCookie(name, options.expires), {
    get name() {
      return name;
    },
    get isSigned() {
      return secrets.length > 0;
    },
    get expires() {
      return typeof options.maxAge < "u" ? new Date(Date.now() + options.maxAge * 1e3) : options.expires;
    },
    async parse(cookieHeader, parseOptions) {
      if (!cookieHeader)
        return null;
      let cookies = (0, import_cookie.parse)(cookieHeader, {
        ...options,
        ...parseOptions
      });
      return name in cookies ? cookies[name] === "" ? "" : await decodeCookieValue(unsign2, cookies[name], secrets) : null;
    },
    async serialize(value, serializeOptions) {
      return (0, import_cookie.serialize)(name, value === "" ? "" : await encodeCookieValue(sign2, value, secrets), {
        ...options,
        ...serializeOptions
      });
    }
  };
}, isCookie = (object) => object != null && typeof object.name == "string" && typeof object.isSigned == "boolean" && typeof object.parse == "function" && typeof object.serialize == "function";
async function encodeCookieValue(sign2, value, secrets) {
  let encoded = encodeData(value);
  return secrets.length > 0 && (encoded = await sign2(encoded, secrets[0])), encoded;
}
async function decodeCookieValue(unsign2, value, secrets) {
  if (secrets.length > 0) {
    for (let secret of secrets) {
      let unsignedValue = await unsign2(value, secret);
      if (unsignedValue !== !1)
        return decodeData(unsignedValue);
    }
    return null;
  }
  return decodeData(value);
}
function encodeData(value) {
  return btoa(myUnescape(encodeURIComponent(JSON.stringify(value))));
}
function decodeData(value) {
  try {
    return JSON.parse(decodeURIComponent(myEscape(atob(value))));
  } catch {
    return {};
  }
}
function myEscape(value) {
  let str = value.toString(), result = "", index3 = 0, chr, code;
  for (; index3 < str.length; )
    chr = str.charAt(index3++), /[\w*+\-./@]/.exec(chr) ? result += chr : (code = chr.charCodeAt(0), code < 256 ? result += "%" + hex(code, 2) : result += "%u" + hex(code, 4).toUpperCase());
  return result;
}
function hex(code, length2) {
  let result = code.toString(16);
  for (; result.length < length2; )
    result = "0" + result;
  return result;
}
function myUnescape(value) {
  let str = value.toString(), result = "", index3 = 0, chr, part;
  for (; index3 < str.length; ) {
    if (chr = str.charAt(index3++), chr === "%") {
      if (str.charAt(index3) === "u") {
        if (part = str.slice(index3 + 1, index3 + 5), /^[\da-f]{4}$/i.exec(part)) {
          result += String.fromCharCode(parseInt(part, 16)), index3 += 5;
          continue;
        }
      } else if (part = str.slice(index3, index3 + 2), /^[\da-f]{2}$/i.exec(part)) {
        result += String.fromCharCode(parseInt(part, 16)), index3 += 2;
        continue;
      }
    }
    result += chr;
  }
  return result;
}
function warnOnceAboutExpiresCookie(name, expires) {
  warnOnce(!expires, `The "${name}" cookie has an "expires" property set. This will cause the expires value to not be updated when the session is committed. Instead, you should set the expires value when serializing the cookie. You can use \`commitSession(session, { expires })\` if using a session storage object, or \`cookie.serialize("value", { expires })\` if you're using the cookie directly.`);
}

// node_modules/@remix-run/server-runtime/dist/esm/responses.js
init_router();

// node_modules/@remix-run/server-runtime/dist/esm/errors.js
init_router();

// node_modules/@remix-run/server-runtime/dist/esm/mode.js
var ServerMode = /* @__PURE__ */ function(ServerMode2) {
  return ServerMode2.Development = "development", ServerMode2.Production = "production", ServerMode2.Test = "test", ServerMode2;
}({});
function isServerMode(value) {
  return value === ServerMode.Development || value === ServerMode.Production || value === ServerMode.Test;
}

// node_modules/@remix-run/server-runtime/dist/esm/errors.js
function sanitizeError(error, serverMode) {
  if (error instanceof Error && serverMode !== ServerMode.Development) {
    let sanitized = new Error("Unexpected Server Error");
    return sanitized.stack = void 0, sanitized;
  }
  return error;
}
function sanitizeErrors(errors, serverMode) {
  return Object.entries(errors).reduce((acc, [routeId, error]) => Object.assign(acc, {
    [routeId]: sanitizeError(error, serverMode)
  }), {});
}
function serializeError(error, serverMode) {
  let sanitized = sanitizeError(error, serverMode);
  return {
    message: sanitized.message,
    stack: sanitized.stack
  };
}
function serializeErrors(errors, serverMode) {
  if (!errors)
    return null;
  let entries = Object.entries(errors), serialized = {};
  for (let [key, val] of entries)
    if (isRouteErrorResponse(val))
      serialized[key] = {
        ...val,
        __type: "RouteErrorResponse"
      };
    else if (val instanceof Error) {
      let sanitized = sanitizeError(val, serverMode);
      serialized[key] = {
        message: sanitized.message,
        stack: sanitized.stack,
        __type: "Error",
        // If this is a subclass (i.e., ReferenceError), send up the type so we
        // can re-create the same type during hydration.  This will only apply
        // in dev mode since all production errors are sanitized to normal
        // Error instances
        ...sanitized.name !== "Error" ? {
          __subType: sanitized.name
        } : {}
      };
    } else
      serialized[key] = val;
  return serialized;
}

// node_modules/@remix-run/server-runtime/dist/esm/responses.js
var json3 = (data2, init = {}) => json(data2, init), defer3 = (data2, init = {}) => defer(data2, init), redirect4 = (url, init = 302) => redirect2(url, init);
function isDeferredData2(value) {
  let deferred = value;
  return deferred && typeof deferred == "object" && typeof deferred.data == "object" && typeof deferred.subscribe == "function" && typeof deferred.cancel == "function" && typeof deferred.resolveData == "function";
}
function isResponse2(value) {
  return value != null && typeof value.status == "number" && typeof value.statusText == "string" && typeof value.headers == "object" && typeof value.body < "u";
}
var redirectStatusCodes2 = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);
function isRedirectStatusCode(statusCode) {
  return redirectStatusCodes2.has(statusCode);
}
function isRedirectResponse2(response) {
  return isRedirectStatusCode(response.status);
}
function isTrackedPromise2(value) {
  return value != null && typeof value.then == "function" && value._tracked === !0;
}
var DEFERRED_VALUE_PLACEHOLDER_PREFIX = "__deferred_promise:";
function createDeferredReadableStream(deferredData, signal, serverMode) {
  let encoder2 = new TextEncoder();
  return new ReadableStream({
    async start(controller) {
      let criticalData = {}, preresolvedKeys = [];
      for (let [key, value] of Object.entries(deferredData.data))
        isTrackedPromise2(value) ? (criticalData[key] = `${DEFERRED_VALUE_PLACEHOLDER_PREFIX}${key}`, (typeof value._data < "u" || typeof value._error < "u") && preresolvedKeys.push(key)) : criticalData[key] = value;
      controller.enqueue(encoder2.encode(JSON.stringify(criticalData) + `

`));
      for (let preresolvedKey of preresolvedKeys)
        enqueueTrackedPromise(controller, encoder2, preresolvedKey, deferredData.data[preresolvedKey], serverMode);
      let unsubscribe = deferredData.subscribe((aborted, settledKey) => {
        settledKey && enqueueTrackedPromise(controller, encoder2, settledKey, deferredData.data[settledKey], serverMode);
      });
      await deferredData.resolveData(signal), unsubscribe(), controller.close();
    }
  });
}
function enqueueTrackedPromise(controller, encoder2, settledKey, promise, serverMode) {
  "_error" in promise ? controller.enqueue(encoder2.encode("error:" + JSON.stringify({
    [settledKey]: promise._error instanceof Error ? serializeError(promise._error, serverMode) : promise._error
  }) + `

`)) : controller.enqueue(encoder2.encode("data:" + JSON.stringify({
    [settledKey]: promise._data ?? null
  }) + `

`));
}

// node_modules/@remix-run/server-runtime/dist/esm/server.js
init_router();

// node_modules/@remix-run/server-runtime/dist/esm/entry.js
function createEntryRouteModules(manifest) {
  return Object.keys(manifest).reduce((memo, routeId) => (memo[routeId] = manifest[routeId].module, memo), {});
}

// node_modules/@remix-run/server-runtime/dist/esm/headers.js
var import_set_cookie_parser = __toESM(require_set_cookie());
function getDocumentHeadersRR(build, context) {
  let boundaryIdx = context.errors ? context.matches.findIndex((m10) => context.errors[m10.route.id]) : -1, matches = boundaryIdx >= 0 ? context.matches.slice(0, boundaryIdx + 1) : context.matches, errorHeaders;
  if (boundaryIdx >= 0) {
    let {
      actionHeaders,
      actionData,
      loaderHeaders,
      loaderData
    } = context;
    context.matches.slice(boundaryIdx).some((match) => {
      let id = match.route.id;
      return actionHeaders[id] && (!actionData || actionData[id] === void 0) ? errorHeaders = actionHeaders[id] : loaderHeaders[id] && loaderData[id] === void 0 && (errorHeaders = loaderHeaders[id]), errorHeaders != null;
    });
  }
  return matches.reduce((parentHeaders, match, idx) => {
    let {
      id
    } = match.route, routeModule = build.routes[id].module, loaderHeaders = context.loaderHeaders[id] || new Headers(), actionHeaders = context.actionHeaders[id] || new Headers(), includeErrorHeaders = errorHeaders != null && idx === matches.length - 1, includeErrorCookies = includeErrorHeaders && errorHeaders !== loaderHeaders && errorHeaders !== actionHeaders;
    if (routeModule.headers == null && build.future.v2_headers) {
      let headers2 = new Headers(parentHeaders);
      return includeErrorCookies && prependCookies(errorHeaders, headers2), prependCookies(actionHeaders, headers2), prependCookies(loaderHeaders, headers2), headers2;
    }
    let headers = new Headers(routeModule.headers ? typeof routeModule.headers == "function" ? routeModule.headers({
      loaderHeaders,
      parentHeaders,
      actionHeaders,
      errorHeaders: includeErrorHeaders ? errorHeaders : void 0
    }) : routeModule.headers : void 0);
    return includeErrorCookies && prependCookies(errorHeaders, headers), prependCookies(actionHeaders, headers), prependCookies(loaderHeaders, headers), prependCookies(parentHeaders, headers), headers;
  }, new Headers());
}
function prependCookies(parentHeaders, childHeaders) {
  let parentSetCookieString = parentHeaders.get("Set-Cookie");
  parentSetCookieString && (0, import_set_cookie_parser.splitCookiesString)(parentSetCookieString).forEach((cookie) => {
    childHeaders.append("Set-Cookie", cookie);
  });
}

// node_modules/@remix-run/server-runtime/dist/esm/invariant.js
function invariant3(value, message) {
  if (value === !1 || value === null || typeof value > "u")
    throw console.error("The following error is a bug in Remix; please open an issue! https://github.com/remix-run/remix/issues/new"), new Error(message);
}

// node_modules/@remix-run/server-runtime/dist/esm/routeMatching.js
init_router();
function matchServerRoutes(routes2, pathname) {
  let matches = matchRoutes(routes2, pathname);
  return matches ? matches.map((match) => ({
    params: match.params,
    pathname: match.pathname,
    route: match.route
  })) : null;
}

// node_modules/@remix-run/server-runtime/dist/esm/data.js
async function callRouteActionRR({
  loadContext,
  action: action12,
  params,
  request,
  routeId
}) {
  let result = await action12({
    request: stripDataParam(stripIndexParam(request)),
    context: loadContext,
    params
  });
  if (result === void 0)
    throw new Error(`You defined an action for route "${routeId}" but didn't return anything from your \`action\` function. Please return a value or \`null\`.`);
  return isResponse2(result) ? result : json3(result);
}
async function callRouteLoaderRR({
  loadContext,
  loader: loader33,
  params,
  request,
  routeId
}) {
  let result = await loader33({
    request: stripDataParam(stripIndexParam(request)),
    context: loadContext,
    params
  });
  if (result === void 0)
    throw new Error(`You defined a loader for route "${routeId}" but didn't return anything from your \`loader\` function. Please return a value or \`null\`.`);
  return isDeferredData2(result) ? result.init && isRedirectStatusCode(result.init.status || 200) ? redirect4(new Headers(result.init.headers).get("Location"), result.init) : result : isResponse2(result) ? result : json3(result);
}
function stripIndexParam(request) {
  let url = new URL(request.url), indexValues = url.searchParams.getAll("index");
  url.searchParams.delete("index");
  let indexValuesToKeep = [];
  for (let indexValue of indexValues)
    indexValue && indexValuesToKeep.push(indexValue);
  for (let toKeep of indexValuesToKeep)
    url.searchParams.append("index", toKeep);
  return new Request(url.href, request);
}
function stripDataParam(request) {
  let url = new URL(request.url);
  return url.searchParams.delete("_data"), new Request(url.href, request);
}

// node_modules/@remix-run/server-runtime/dist/esm/routes.js
function groupRoutesByParentId2(manifest) {
  let routes2 = {};
  return Object.values(manifest).forEach((route) => {
    let parentId = route.parentId || "";
    routes2[parentId] || (routes2[parentId] = []), routes2[parentId].push(route);
  }), routes2;
}
function createRoutes(manifest, parentId = "", routesByParentId = groupRoutesByParentId2(manifest)) {
  return (routesByParentId[parentId] || []).map((route) => ({
    ...route,
    children: createRoutes(manifest, route.id, routesByParentId)
  }));
}
function createStaticHandlerDataRoutes(manifest, future2, parentId = "", routesByParentId = groupRoutesByParentId2(manifest)) {
  return (routesByParentId[parentId] || []).map((route) => {
    let commonRoute = {
      // Always include root due to default boundaries
      hasErrorBoundary: future2.v2_errorBoundary === !0 ? route.id === "root" || route.module.ErrorBoundary != null : route.id === "root" || route.module.CatchBoundary != null || route.module.ErrorBoundary != null,
      id: route.id,
      path: route.path,
      loader: route.module.loader ? (args) => callRouteLoaderRR({
        request: args.request,
        params: args.params,
        loadContext: args.context,
        loader: route.module.loader,
        routeId: route.id
      }) : void 0,
      action: route.module.action ? (args) => callRouteActionRR({
        request: args.request,
        params: args.params,
        loadContext: args.context,
        action: route.module.action,
        routeId: route.id
      }) : void 0,
      handle: route.module.handle
    };
    return route.index ? {
      index: !0,
      ...commonRoute
    } : {
      caseSensitive: route.caseSensitive,
      children: createStaticHandlerDataRoutes(manifest, future2, route.id, routesByParentId),
      ...commonRoute
    };
  });
}

// node_modules/@remix-run/server-runtime/dist/esm/markup.js
var ESCAPE_LOOKUP2 = {
  "&": "\\u0026",
  ">": "\\u003e",
  "<": "\\u003c",
  "\u2028": "\\u2028",
  "\u2029": "\\u2029"
}, ESCAPE_REGEX2 = /[&><\u2028\u2029]/g;
function escapeHtml2(html) {
  return html.replace(ESCAPE_REGEX2, (match) => ESCAPE_LOOKUP2[match]);
}

// node_modules/@remix-run/server-runtime/dist/esm/serverHandoff.js
function createServerHandoffString(serverHandoff) {
  return escapeHtml2(JSON.stringify(serverHandoff));
}

// node_modules/@remix-run/server-runtime/dist/esm/server.js
var createRequestHandler = (build, mode) => {
  let routes2 = createRoutes(build.routes), dataRoutes = createStaticHandlerDataRoutes(build.routes, build.future), serverMode = isServerMode(mode) ? mode : ServerMode.Production, staticHandler = createStaticHandler(dataRoutes), errorHandler = build.entry.module.handleError || ((error, {
    request
  }) => {
    serverMode !== ServerMode.Test && !request.signal.aborted && console.error(error);
  });
  return async function(request, loadContext = {}) {
    let url = new URL(request.url), matches = matchServerRoutes(routes2, url.pathname), handleError = (error) => errorHandler(error, {
      context: loadContext,
      params: matches && matches.length > 0 ? matches[0].params : {},
      request
    }), response;
    if (url.searchParams.has("_data")) {
      let routeId = url.searchParams.get("_data");
      if (response = await handleDataRequestRR(serverMode, staticHandler, routeId, request, loadContext, handleError), build.entry.module.handleDataRequest) {
        var _matches$find;
        response = await build.entry.module.handleDataRequest(response, {
          context: loadContext,
          params: (matches == null || (_matches$find = matches.find((m10) => m10.route.id == routeId)) === null || _matches$find === void 0 ? void 0 : _matches$find.params) || {},
          request
        });
      }
    } else
      matches && matches[matches.length - 1].route.module.default == null ? response = await handleResourceRequestRR(serverMode, staticHandler, matches.slice(-1)[0].route.id, request, loadContext, handleError) : response = await handleDocumentRequestRR(serverMode, build, staticHandler, request, loadContext, handleError);
    return request.method === "HEAD" ? new Response(null, {
      headers: response.headers,
      status: response.status,
      statusText: response.statusText
    }) : response;
  };
};
async function handleDataRequestRR(serverMode, staticHandler, routeId, request, loadContext, handleError) {
  try {
    let response = await staticHandler.queryRoute(request, {
      routeId,
      requestContext: loadContext
    });
    if (isRedirectResponse2(response)) {
      let headers = new Headers(response.headers);
      return headers.set("X-Remix-Redirect", headers.get("Location")), headers.set("X-Remix-Status", response.status), headers.delete("Location"), response.headers.get("Set-Cookie") !== null && headers.set("X-Remix-Revalidate", "yes"), new Response(null, {
        status: 204,
        headers
      });
    }
    if (UNSAFE_DEFERRED_SYMBOL in response) {
      let deferredData = response[UNSAFE_DEFERRED_SYMBOL], body = createDeferredReadableStream(deferredData, request.signal, serverMode), init = deferredData.init || {}, headers = new Headers(init.headers);
      return headers.set("Content-Type", "text/remix-deferred"), headers.set("X-Remix-Response", "yes"), init.headers = headers, new Response(body, init);
    }
    return response.headers.set("X-Remix-Response", "yes"), response;
  } catch (error) {
    if (isResponse2(error))
      return error.headers.set("X-Remix-Catch", "yes"), error;
    if (isRouteErrorResponse(error))
      return error.error && handleError(error.error), errorResponseToJson(error, serverMode);
    let errorInstance = error instanceof Error ? error : new Error("Unexpected Server Error");
    return handleError(errorInstance), json(serializeError(errorInstance, serverMode), {
      status: 500,
      headers: {
        "X-Remix-Error": "yes"
      }
    });
  }
}
function findParentBoundary(routes2, routeId, error) {
  let route = routes2[routeId] || routes2.root, isCatch = isRouteErrorResponse(error) && (!error.error || error.status === 404);
  return isCatch && route.module.CatchBoundary || !isCatch && route.module.ErrorBoundary || !route.parentId ? route.id : findParentBoundary(routes2, route.parentId, error);
}
function differentiateCatchVersusErrorBoundaries(build, context) {
  if (!context.errors)
    return;
  let errors = {};
  for (let routeId of Object.keys(context.errors)) {
    let error = context.errors[routeId], handlingRouteId = findParentBoundary(build.routes, routeId, error);
    errors[handlingRouteId] = error;
  }
  context.errors = errors;
}
async function handleDocumentRequestRR(serverMode, build, staticHandler, request, loadContext, handleError) {
  let context;
  try {
    context = await staticHandler.query(request, {
      requestContext: loadContext
    });
  } catch (error) {
    return handleError(error), new Response(null, {
      status: 500
    });
  }
  if (isResponse2(context))
    return context;
  context.errors && (Object.values(context.errors).forEach((err) => {
    (!isRouteErrorResponse(err) || err.error) && handleError(err);
  }), context.errors = sanitizeErrors(context.errors, serverMode)), build.future.v2_errorBoundary !== !0 && differentiateCatchVersusErrorBoundaries(build, context);
  let headers = getDocumentHeadersRR(build, context), entryContext = {
    manifest: build.assets,
    routeModules: createEntryRouteModules(build.routes),
    staticHandlerContext: context,
    serverHandoffString: createServerHandoffString({
      url: context.location.pathname,
      state: {
        loaderData: context.loaderData,
        actionData: context.actionData,
        errors: serializeErrors(context.errors, serverMode)
      },
      future: build.future
    }),
    future: build.future,
    serializeError: (err) => serializeError(err, serverMode)
  }, handleDocumentRequestFunction = build.entry.module.default;
  try {
    return await handleDocumentRequestFunction(request, context.statusCode, headers, entryContext, loadContext);
  } catch (error) {
    handleError(error), context = getStaticContextFromError(staticHandler.dataRoutes, context, error), context.errors && (context.errors = sanitizeErrors(context.errors, serverMode)), build.future.v2_errorBoundary !== !0 && differentiateCatchVersusErrorBoundaries(build, context), entryContext = {
      ...entryContext,
      staticHandlerContext: context,
      serverHandoffString: createServerHandoffString({
        url: context.location.pathname,
        state: {
          loaderData: context.loaderData,
          actionData: context.actionData,
          errors: serializeErrors(context.errors, serverMode)
        },
        future: build.future
      })
    };
    try {
      return await handleDocumentRequestFunction(request, context.statusCode, headers, entryContext, loadContext);
    } catch (error2) {
      return handleError(error2), returnLastResortErrorResponse(error2, serverMode);
    }
  }
}
async function handleResourceRequestRR(serverMode, staticHandler, routeId, request, loadContext, handleError) {
  try {
    let response = await staticHandler.queryRoute(request, {
      routeId,
      requestContext: loadContext
    });
    return invariant3(isResponse2(response), "Expected a Response to be returned from queryRoute"), response;
  } catch (error) {
    return isResponse2(error) ? (error.headers.set("X-Remix-Catch", "yes"), error) : isRouteErrorResponse(error) ? (error.error && handleError(error.error), errorResponseToJson(error, serverMode)) : (handleError(error), returnLastResortErrorResponse(error, serverMode));
  }
}
function errorResponseToJson(errorResponse, serverMode) {
  return json(serializeError(errorResponse.error || new Error("Unexpected Server Error"), serverMode), {
    status: errorResponse.status,
    statusText: errorResponse.statusText,
    headers: {
      "X-Remix-Error": "yes"
    }
  });
}
function returnLastResortErrorResponse(error, serverMode) {
  let message = "Unexpected Server Error";
  return serverMode !== ServerMode.Production && (message += `

${String(error)}`), new Response(message, {
    status: 500,
    headers: {
      "Content-Type": "text/plain"
    }
  });
}

// node_modules/@remix-run/server-runtime/dist/esm/sessions.js
function flash(name) {
  return `__flash_${name}__`;
}
var createSession = (initialData = {}, id = "") => {
  let map = new Map(Object.entries(initialData));
  return {
    get id() {
      return id;
    },
    get data() {
      return Object.fromEntries(map);
    },
    has(name) {
      return map.has(name) || map.has(flash(name));
    },
    get(name) {
      if (map.has(name))
        return map.get(name);
      let flashName = flash(name);
      if (map.has(flashName)) {
        let value = map.get(flashName);
        return map.delete(flashName), value;
      }
    },
    set(name, value) {
      map.set(name, value);
    },
    flash(name, value) {
      map.set(flash(name), value);
    },
    unset(name) {
      map.delete(name);
    }
  };
};
var createSessionStorageFactory = (createCookie2) => ({
  cookie: cookieArg,
  createData,
  readData,
  updateData,
  deleteData
}) => {
  let cookie = isCookie(cookieArg) ? cookieArg : createCookie2((cookieArg == null ? void 0 : cookieArg.name) || "__session", cookieArg);
  return warnOnceAboutSigningSessionCookie(cookie), {
    async getSession(cookieHeader, options) {
      let id = cookieHeader && await cookie.parse(cookieHeader, options), data2 = id && await readData(id);
      return createSession(data2 || {}, id || "");
    },
    async commitSession(session, options) {
      let {
        id,
        data: data2
      } = session;
      return id ? await updateData(id, data2, cookie.expires) : id = await createData(data2, cookie.expires), cookie.serialize(id, options);
    },
    async destroySession(session, options) {
      return await deleteData(session.id), cookie.serialize("", {
        ...options,
        expires: /* @__PURE__ */ new Date(0)
      });
    }
  };
};
function warnOnceAboutSigningSessionCookie(cookie) {
  warnOnce(cookie.isSigned, `The "${cookie.name}" cookie is not signed, but session cookies should be signed to prevent tampering on the client before they are sent back to the server. See https://remix.run/utils/cookies#signing-cookies for more information.`);
}

// node_modules/@remix-run/server-runtime/dist/esm/sessions/cookieStorage.js
var createCookieSessionStorageFactory = (createCookie2) => ({
  cookie: cookieArg
} = {}) => {
  let cookie = isCookie(cookieArg) ? cookieArg : createCookie2((cookieArg == null ? void 0 : cookieArg.name) || "__session", cookieArg);
  return warnOnceAboutSigningSessionCookie(cookie), {
    async getSession(cookieHeader, options) {
      return createSession(cookieHeader && await cookie.parse(cookieHeader, options) || {});
    },
    async commitSession(session, options) {
      let serializedCookie = await cookie.serialize(session.data, options);
      if (serializedCookie.length > 4096)
        throw new Error("Cookie length will exceed browser maximum. Length: " + serializedCookie.length);
      return serializedCookie;
    },
    async destroySession(_session, options) {
      return cookie.serialize("", {
        ...options,
        expires: /* @__PURE__ */ new Date(0)
      });
    }
  };
};

// node_modules/@remix-run/server-runtime/dist/esm/sessions/memoryStorage.js
var createMemorySessionStorageFactory = (createSessionStorage2) => ({
  cookie
} = {}) => {
  let uniqueId = 0, map = /* @__PURE__ */ new Map();
  return createSessionStorage2({
    cookie,
    async createData(data2, expires) {
      let id = (++uniqueId).toString();
      return map.set(id, {
        data: data2,
        expires
      }), id;
    },
    async readData(id) {
      if (map.has(id)) {
        let {
          data: data2,
          expires
        } = map.get(id);
        if (!expires || expires > /* @__PURE__ */ new Date())
          return data2;
        expires && map.delete(id);
      }
      return null;
    },
    async updateData(id, data2, expires) {
      map.set(id, {
        data: data2,
        expires
      });
    },
    async deleteData(id) {
      map.delete(id);
    }
  });
};

// node_modules/@shopify/remix-oxygen/dist/development/index.js
var encoder = new TextEncoder(), sign = async (value, secret) => {
  let key = await createKey2(secret, ["sign"]), data2 = encoder.encode(value), signature = await crypto.subtle.sign("HMAC", key, data2), hash = btoa(String.fromCharCode(...new Uint8Array(signature))).replace(
    /=+$/,
    ""
  );
  return value + "." + hash;
}, unsign = async (signed, secret) => {
  let index3 = signed.lastIndexOf("."), value = signed.slice(0, index3), hash = signed.slice(index3 + 1), key = await createKey2(secret, ["verify"]), data2 = encoder.encode(value), signature = byteStringToUint8Array(atob(hash));
  return await crypto.subtle.verify("HMAC", key, signature, data2) ? value : !1;
};
async function createKey2(secret, usages) {
  return await crypto.subtle.importKey(
    "raw",
    encoder.encode(secret),
    { name: "HMAC", hash: "SHA-256" },
    !1,
    usages
  );
}
function byteStringToUint8Array(byteString) {
  let array = new Uint8Array(byteString.length);
  for (let i7 = 0; i7 < byteString.length; i7++)
    array[i7] = byteString.charCodeAt(i7);
  return array;
}
var createCookie = createCookieFactory({ sign, unsign }), createCookieSessionStorage = createCookieSessionStorageFactory(createCookie), createSessionStorage = createSessionStorageFactory(createCookie), createMemorySessionStorage = createMemorySessionStorageFactory(createSessionStorage);
function createRequestHandler2({
  build,
  mode,
  poweredByHeader = !0,
  getLoadContext
}) {
  let handleRequest2 = createRequestHandler(build, mode);
  return async (request) => {
    let response = await handleRequest2(
      request,
      await (getLoadContext == null ? void 0 : getLoadContext(request))
    );
    return poweredByHeader && response.headers.append("powered-by", "Shopify, Hydrogen"), response;
  };
}
function getStorefrontHeaders(request) {
  let headers = request.headers;
  return {
    requestGroupId: headers.get("request-id"),
    buyerIp: headers.get("oxygen-buyer-ip"),
    cookie: headers.get("cookie")
  };
}

// app/root.jsx
var import_react28 = __toESM(require_react());

// public/favicon.svg
var favicon_default = "/build/_assets/favicon-IN6DMKSS.svg";

// app/styles/reset.css
var reset_default = "/build/_assets/reset-FEGHSTUV.css";

// app/styles/app.css
var app_default = "/build/_assets/app-PE6NVHW7.css";

// app/components/Layout.jsx
var import_react25 = __toESM(require_react());

// app/components/Aside.jsx
var import_jsx_dev_runtime2 = __toESM(require_jsx_dev_runtime());
function Aside({ children, heading, id = "aside" }) {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime2.jsxDEV)("div", { "aria-modal": !0, className: "overlay", id, role: "dialog", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime2.jsxDEV)(
      "button",
      {
        className: "close-outside",
        onClick: () => {
          history.go(-1), window.location.hash = "";
        }
      },
      void 0,
      !1,
      {
        fileName: "app/components/Aside.jsx",
        lineNumber: 15,
        columnNumber: 7
      },
      this
    ),
    /* @__PURE__ */ (0, import_jsx_dev_runtime2.jsxDEV)("aside", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime2.jsxDEV)("header", { children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime2.jsxDEV)("h3", { className: "font-semibold", children: heading }, void 0, !1, {
          fileName: "app/components/Aside.jsx",
          lineNumber: 24,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime2.jsxDEV)(CloseAside, {}, void 0, !1, {
          fileName: "app/components/Aside.jsx",
          lineNumber: 25,
          columnNumber: 11
        }, this)
      ] }, void 0, !0, {
        fileName: "app/components/Aside.jsx",
        lineNumber: 23,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime2.jsxDEV)("main", { children }, void 0, !1, {
        fileName: "app/components/Aside.jsx",
        lineNumber: 27,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/components/Aside.jsx",
      lineNumber: 22,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/Aside.jsx",
    lineNumber: 14,
    columnNumber: 5
  }, this);
}
function CloseAside() {
  return (
    /* eslint-disable-next-line jsx-a11y/anchor-is-valid */
    /* @__PURE__ */ (0, import_jsx_dev_runtime2.jsxDEV)("a", { className: "close", href: "", onChange: () => history.go(-1), children: "\xD7" }, void 0, !1, {
      fileName: "app/components/Aside.jsx",
      lineNumber: 36,
      columnNumber: 5
    }, this)
  );
}

// app/components/Footer.jsx
var import_jsx_dev_runtime3 = __toESM(require_jsx_dev_runtime()), currentYear = (/* @__PURE__ */ new Date()).getFullYear();
function Footer({ menu }) {
  function getPath(url_path) {
    return new URL(url_path).pathname;
  }
  let viewLinksArr = ["Lips", "Face", "Eyes"], navigateTo = (url_path) => {
    let url = getPath(url_path);
    window.location.href = url;
  }, goToCollection = (url) => {
    window.location.href = `/collections/${url}`;
  }, goToPage = (url) => {
    window.location.href = url;
  };
  return /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)(import_jsx_dev_runtime3.Fragment, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("footer", { className: "mt-8", children: /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { className: "m-4 p-4", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { className: "footer-section  text-xl font-semibold border-y-4 py-4", children: /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { className: "grid grid-cols-3 md:grid-cols-3 gap-1", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { className: "cursor-pointer", onClick: () => goToPage("/"), children: "Stores" }, void 0, !1, {
        fileName: "app/components/Footer.jsx",
        lineNumber: 32,
        columnNumber: 13
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { className: "cursor-pointer", onClick: () => goToPage("/pages/terms-conditions"), children: "Terms & Conditions" }, void 0, !1, {
        fileName: "app/components/Footer.jsx",
        lineNumber: 33,
        columnNumber: 15
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { className: "cursor-pointer", onClick: () => goToPage("/pages/refund-policy"), children: "Return & Refund Policy" }, void 0, !1, {
        fileName: "app/components/Footer.jsx",
        lineNumber: 34,
        columnNumber: 15
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { className: "cursor-pointer", onClick: () => goToPage("/pages/shipping-delivery"), children: "Shipping & Delivery" }, void 0, !1, {
        fileName: "app/components/Footer.jsx",
        lineNumber: 35,
        columnNumber: 15
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { className: "cursor-pointer", onClick: () => goToPage("/pages/privacy-policy"), children: "Privacy Policy" }, void 0, !1, {
        fileName: "app/components/Footer.jsx",
        lineNumber: 36,
        columnNumber: 15
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { className: "cursor-pointer", onClick: () => goToPage("/pages/terms-conditions"), children: "FAQs" }, void 0, !1, {
        fileName: "app/components/Footer.jsx",
        lineNumber: 37,
        columnNumber: 15
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { className: "cursor-pointer", onClick: () => goToPage("/pages/about-us"), children: "About Us" }, void 0, !1, {
        fileName: "app/components/Footer.jsx",
        lineNumber: 38,
        columnNumber: 15
      }, this)
    ] }, void 0, !0, {
      fileName: "app/components/Footer.jsx",
      lineNumber: 31,
      columnNumber: 11
    }, this) }, void 0, !1, {
      fileName: "app/components/Footer.jsx",
      lineNumber: 30,
      columnNumber: 11
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { className: "py-6 footer-contact m-auto", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { className: "sm:flex gap-4", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { className: "sm:w-[75%] w-[100%] grid grid-cols-4 gap-4 border-b-mobile footer_shop_brand", children: [
          menu.items.length && menu.items.map((cat, indexx) => /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { children: cat.items.length && viewLinksArr.indexOf(cat.title) >= 0 ? /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { className: "footer_link_title", children: cat.title }, void 0, !1, {
              fileName: "app/components/Footer.jsx",
              lineNumber: 50,
              columnNumber: 23
            }, this),
            /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { children: cat.items.map((subMenu, index3) => /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("li", { className: "cursor-pointer list-none", onClick: () => navigateTo(subMenu.url), children: subMenu.title }, `sub_menu_${index3}`, !1, {
              fileName: "app/components/Footer.jsx",
              lineNumber: 53,
              columnNumber: 34
            }, this)) }, void 0, !1, {
              fileName: "app/components/Footer.jsx",
              lineNumber: 51,
              columnNumber: 23
            }, this)
          ] }, void 0, !0, {
            fileName: "app/components/Footer.jsx",
            lineNumber: 49,
            columnNumber: 21
          }, this) : null }, `wrapper_sub_menu_${indexx}`, !1, {
            fileName: "app/components/Footer.jsx",
            lineNumber: 47,
            columnNumber: 21
          }, this)),
          /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { children: [
            /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { className: "footer_link_title", children: "Shop by sub-brands" }, void 0, !1, {
              fileName: "app/components/Footer.jsx",
              lineNumber: 67,
              columnNumber: 15
            }, this),
            /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("li", { className: "cursor-pointer list-none", onClick: () => goToCollection("pro-studio-mjk"), children: " Pro Studio " }, void 0, !1, {
              fileName: "app/components/Footer.jsx",
              lineNumber: 68,
              columnNumber: 15
            }, this),
            /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("li", { className: "cursor-pointer list-none", onClick: () => goToCollection("way-2-slay-mjk"), children: " Way 2 Slay " }, void 0, !1, {
              fileName: "app/components/Footer.jsx",
              lineNumber: 69,
              columnNumber: 15
            }, this),
            /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("li", { className: "cursor-pointer list-none", onClick: () => goToCollection("rizz-roll-mjk"), children: " Rizz and Roll " }, void 0, !1, {
              fileName: "app/components/Footer.jsx",
              lineNumber: 70,
              columnNumber: 15
            }, this)
          ] }, void 0, !0, {
            fileName: "app/components/Footer.jsx",
            lineNumber: 66,
            columnNumber: 13
          }, this)
        ] }, void 0, !0, {
          fileName: "app/components/Footer.jsx",
          lineNumber: 43,
          columnNumber: 15
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { className: "sm:w-[25%] w-[100%] cursor-pointer grid", children: /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("h2", { className: "font-semibold text-xl mt-2 sm:mt-0", children: "GET IN TOUCH" }, void 0, !1, {
            fileName: "app/components/Footer.jsx",
            lineNumber: 76,
            columnNumber: 15
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("p", { className: "mt-2 font-semibold text-[#969696]", children: " info@maryjok.com " }, void 0, !1, {
            fileName: "app/components/Footer.jsx",
            lineNumber: 81,
            columnNumber: 15
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("p", { className: "mt-2 font-semibold text-[#969696]", children: "Monday to Saturday: 10 Am to 7 Pm" }, void 0, !1, {
            fileName: "app/components/Footer.jsx",
            lineNumber: 82,
            columnNumber: 15
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { className: "flex mt-4 sm:gap-1", children: [
            /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("a", { className: "flex-none w-10 sm:w-14", href: "https://www.instagram.com/maryjokofficial/?hl=en", children: [
              /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("img", { src: "/insta_icon.png" }, void 0, !1, {
                fileName: "app/components/Footer.jsx",
                lineNumber: 86,
                columnNumber: 111
              }, this),
              " "
            ] }, void 0, !0, {
              fileName: "app/components/Footer.jsx",
              lineNumber: 86,
              columnNumber: 17
            }, this),
            /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("a", { className: "flex-none w-10 sm:w-14", href: "https://www.facebook.com/profile.php?id=100064798900233&is_tour_dismissed", children: [
              /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("img", { src: "/facebook_icon.png" }, void 0, !1, {
                fileName: "app/components/Footer.jsx",
                lineNumber: 87,
                columnNumber: 136
              }, this),
              " "
            ] }, void 0, !0, {
              fileName: "app/components/Footer.jsx",
              lineNumber: 87,
              columnNumber: 17
            }, this),
            /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("a", { className: "flex-none w-10 sm:w-14", href: "https://www.youtube.com/channel/UCPI8xp_XDecCmYh90hCxH3Q", children: [
              /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("img", { src: "/youtube_icon.png" }, void 0, !1, {
                fileName: "app/components/Footer.jsx",
                lineNumber: 88,
                columnNumber: 119
              }, this),
              " "
            ] }, void 0, !0, {
              fileName: "app/components/Footer.jsx",
              lineNumber: 88,
              columnNumber: 17
            }, this)
          ] }, void 0, !0, {
            fileName: "app/components/Footer.jsx",
            lineNumber: 85,
            columnNumber: 15
          }, this)
        ] }, void 0, !0, {
          fileName: "app/components/Footer.jsx",
          lineNumber: 75,
          columnNumber: 13
        }, this) }, void 0, !1, {
          fileName: "app/components/Footer.jsx",
          lineNumber: 74,
          columnNumber: 11
        }, this)
      ] }, void 0, !0, {
        fileName: "app/components/Footer.jsx",
        lineNumber: 42,
        columnNumber: 13
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("div", { className: "flex justify-center", children: [
        " ",
        /* @__PURE__ */ (0, import_jsx_dev_runtime3.jsxDEV)("span", { className: "footer_txt sm:border-0 text-center", children: " \xA9 2024 Maryjo K Cult Makeup | PP Consumer Pvt Ltd. All Rights Reserved " }, void 0, !1, {
          fileName: "app/components/Footer.jsx",
          lineNumber: 93,
          columnNumber: 49
        }, this),
        " "
      ] }, void 0, !0, {
        fileName: "app/components/Footer.jsx",
        lineNumber: 93,
        columnNumber: 11
      }, this)
    ] }, void 0, !0, {
      fileName: "app/components/Footer.jsx",
      lineNumber: 41,
      columnNumber: 11
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/Footer.jsx",
    lineNumber: 29,
    columnNumber: 9
  }, this) }, void 0, !1, {
    fileName: "app/components/Footer.jsx",
    lineNumber: 28,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/components/Footer.jsx",
    lineNumber: 27,
    columnNumber: 5
  }, this);
}

// node_modules/tw-elements-react/dist/js/tw-elements-react.es.min.js
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1), import_react3 = __toESM(require_react(), 1), import_react_dom = __toESM(require_react_dom(), 1);
function re(t18) {
  var r9, e5, a13 = "";
  if (typeof t18 == "string" || typeof t18 == "number")
    a13 += t18;
  else if (typeof t18 == "object")
    if (Array.isArray(t18))
      for (r9 = 0; r9 < t18.length; r9++)
        t18[r9] && (e5 = re(t18[r9])) && (a13 && (a13 += " "), a13 += e5);
    else
      for (r9 in t18)
        t18[r9] && (a13 && (a13 += " "), a13 += r9);
  return a13;
}
function C() {
  for (var t18, r9, e5 = 0, a13 = ""; e5 < arguments.length; )
    (t18 = arguments[e5++]) && (r9 = re(t18)) && (a13 && (a13 += " "), a13 += r9);
  return a13;
}
var le = ({ theme: t18, style: r9 }) => {
  let [e5, a13] = (0, import_react3.useState)(!1), c13 = C(
    t18.rippleWave,
    e5 ? t18.rippleWaveActive : t18.rippleWaveInactive
  );
  return (0, import_react3.useEffect)(() => {
    a13(!0);
  }, []), /* @__PURE__ */ (0, import_jsx_runtime.jsx)("div", { style: r9, className: c13 });
}, ce = {
  ripple: "relative inline-block align-bottom",
  rippleOverflow: "absolute left-0 top-0 overflow-hidden w-full h-full pointer-events-none",
  rippleWave: "block rounded-[50%] pointer-events-none absolute touch-none transition-[transform,_opacity] ease-[cubic-bezier(0,0,0.15,1),_cubic-bezier(0,0,0.15,1)] z-[999] scale-0",
  rippleWaveActive: "scale-100 opacity-0",
  rippleWaveInactive: "scale-0 opacity-50",
  unbound: "overflow-visible"
}, de = (...t18) => {
  let r9 = import_react3.default.useRef();
  return import_react3.default.useEffect(() => {
    t18.forEach((e5) => {
      e5 && (typeof e5 == "function" ? e5(r9.current) : e5.current = r9.current);
    });
  }, [t18]), r9;
}, De = import_react3.default.forwardRef(
  ({
    className: t18,
    rippleTag: r9 = "div",
    rippleCentered: e5,
    rippleDuration: a13 = 500,
    rippleUnbound: c13,
    rippleRadius: l13 = 0,
    rippleColor: i7 = "dark",
    rippleColorDark: d12 = "",
    children: u10,
    onMouseDown: n7,
    theme: m10,
    ...S9
  }, v4) => {
    let y6 = (0, import_react3.useRef)(null), s15 = de(v4, y6), p7 = { ...ce, ...m10 }, g7 = "rgba({{color}}, 0.2) 0, rgba({{color}}, 0.3) 40%, rgba({{color}}, 0.4) 50%, rgba({{color}}, 0.5) 60%, rgba({{color}}, 0) 70%", L2 = [0, 0, 0], k2 = [
      { name: "primary", gradientColor: "#3B71CA" },
      { name: "secondary", gradientColor: "#9FA6B2" },
      { name: "success", gradientColor: "#14A44D" },
      { name: "danger", gradientColor: "#DC4C64" },
      { name: "warning", gradientColor: "#E4A11B" },
      { name: "info", gradientColor: "#54B4D3" },
      { name: "light", gradientColor: "#fbfbfb" },
      { name: "dark", gradientColor: "#262626" }
    ], [_3, z4] = (0, import_react3.useState)([]), [R3, P4] = (0, import_react3.useState)([]), M7 = C(p7.ripple, t18), I6 = C(
      c13 ? p7.unbound : p7.rippleOverflow,
      R3
    ), X4 = () => {
      let b6 = i7 || "rgb(0,0,0)";
      (localStorage.theme === "dark" || !("theme" in localStorage) && window.matchMedia("(prefers-color-scheme: dark)").matches) && (b6 = d12 || i7 || "rgb(0,0,0)");
      let x5 = k2.find(
        (f10) => f10.name === (b6 == null ? void 0 : b6.toLowerCase())
      ), N6 = x5 ? q3(x5.gradientColor).join(",") : q3(b6).join(",");
      return `radial-gradient(circle, ${g7.split("{{color}}").join(`${N6}`)})`;
    }, q3 = (b6) => {
      let x5 = (f10) => (f10.length < 7 && (f10 = `#${f10[1]}${f10[1]}${f10[2]}${f10[2]}${f10[3]}${f10[3]}`), [
        parseInt(f10.substr(1, 2), 16),
        parseInt(f10.substr(3, 2), 16),
        parseInt(f10.substr(5, 2), 16)
      ]), N6 = (f10) => {
        let T7 = document.body.appendChild(
          document.createElement("fictum")
        ), W2 = "rgb(1, 2, 3)";
        return T7.style.color = W2, T7.style.color !== W2 || (T7.style.color = f10, T7.style.color === W2 || T7.style.color === "") ? L2 : (f10 = getComputedStyle(T7).color, document.body.removeChild(T7), f10);
      }, $4 = (f10) => (f10 = f10.match(/[.\d]+/g).map((T7) => +Number(T7)), f10.length = 3, f10);
      return b6.toLowerCase() === "transparent" ? L2 : b6[0] === "#" ? x5(b6) : (b6.indexOf("rgb") === -1 && (b6 = N6(b6)), b6.indexOf("rgb") === 0 ? $4(b6) : L2);
    }, F6 = (b6) => {
      let { offsetX: x5, offsetY: N6, height: $4, width: f10 } = b6, T7 = N6 <= $4 / 2, W2 = x5 <= f10 / 2, B2 = (Q3, ne2) => Math.sqrt(Q3 ** 2 + ne2 ** 2), U4 = N6 === $4 / 2 && x5 === f10 / 2, j5 = {
        first: T7 === !0 && W2 === !1,
        second: T7 === !0 && W2 === !0,
        third: T7 === !1 && W2 === !0,
        fourth: T7 === !1 && W2 === !1
      }, Y4 = {
        topLeft: B2(x5, N6),
        topRight: B2(f10 - x5, N6),
        bottomLeft: B2(x5, $4 - N6),
        bottomRight: B2(f10 - x5, $4 - N6)
      }, w6 = 0;
      return U4 || j5.fourth ? w6 = Y4.topLeft : j5.third ? w6 = Y4.topRight : j5.second ? w6 = Y4.bottomRight : j5.first && (w6 = Y4.bottomLeft), w6 * 2;
    }, o11 = () => !u10 || !import_react3.default.isValidElement(u10) || Array.isArray(u10) ? [] : u10.props.className.split(" ").filter((x5) => x5.includes("rounded")), K3 = (b6) => {
      var w6;
      let x5 = (w6 = s15.current) == null ? void 0 : w6.getBoundingClientRect(), N6 = b6.clientX - x5.left, $4 = b6.clientY - x5.top, f10 = x5.height, T7 = x5.width, W2 = {
        offsetX: e5 ? f10 / 2 : N6,
        offsetY: e5 ? T7 / 2 : $4,
        height: f10,
        width: T7
      }, B2 = {
        delay: a13 && a13 * 0.5,
        duration: a13 && a13 - a13 * 0.5
      }, U4 = F6(W2), j5 = l13 || U4 / 2, Y4 = {
        left: e5 ? `${T7 / 2 - j5}px` : `${N6 - j5}px`,
        top: e5 ? `${f10 / 2 - j5}px` : `${$4 - j5}px`,
        height: l13 ? `${l13 * 2}px` : `${U4}px`,
        width: l13 ? `${l13 * 2}px` : `${U4}px`,
        transitionDelay: `0s, ${B2.delay}ms`,
        transitionDuration: `${a13}ms, ${B2.duration}ms`
      };
      return P4(o11()), { ...Y4, backgroundImage: `${X4()}` };
    }, G2 = (b6) => {
      let x5 = K3(b6), N6 = _3.concat(x5);
      z4(N6), n7 && n7(b6);
    };
    return (0, import_react3.useEffect)(() => {
      let b6 = setTimeout(() => {
        _3.length > 0 && z4(_3.splice(1, _3.length - 1));
      }, a13);
      return () => {
        clearTimeout(b6);
      };
    }, [a13, _3]), /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(
      r9,
      {
        className: M7,
        onMouseDown: (b6) => G2(b6),
        ref: s15,
        ...S9,
        children: [
          u10,
          /* @__PURE__ */ (0, import_jsx_runtime.jsx)("div", { className: I6, children: _3.map((b6, x5) => /* @__PURE__ */ (0, import_jsx_runtime.jsx)(le, { theme: p7, style: b6 }, x5)) })
        ]
      }
    );
  }
), ee = (0, import_react3.createContext)({
  isOpenModal: !1,
  setTransitionDuration: null,
  scrollable: !1
});
var he = {
  wrapper: "min-[576px]:shadow-[0_0.5rem_1rem_rgba(#000, 0.15)] pointer-events-auto relative flex w-full flex-col rounded-md border-none bg-white bg-clip-padding text-current shadow-lg outline-none dark:bg-neutral-600",
  scrollable: "max-h-full"
}, Pe = import_react3.default.forwardRef(
  ({ className: t18, children: r9, theme: e5, tag: a13 = "div", ...c13 }, l13) => {
    let i7 = { ...he, ...e5 }, { scrollable: d12 } = (0, import_react3.useContext)(ee), u10 = C(
      i7.wrapper,
      d12 && i7.scrollable,
      t18
    );
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(a13, { className: u10, ...c13, ref: l13, children: r9 });
  }
), ve = {
  wrapper: "flex flex-shrink-0 items-center justify-between rounded-t-md border-b-2 border-neutral-100 border-opacity-100 p-4 dark:border-opacity-50"
}, Oe = import_react3.default.forwardRef(
  ({ className: t18, children: r9, theme: e5, tag: a13 = "div", ...c13 }, l13) => {
    let i7 = { ...ve, ...e5 }, d12 = C(i7.wrapper, t18);
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(a13, { className: d12, ...c13, ref: l13, children: r9 });
  }
), xe = {
  scrollable: "overflow-y-auto",
  wrapper: "relative flex-auto p-4"
}, We = import_react3.default.forwardRef(
  ({ className: t18, children: r9, theme: e5, tag: a13 = "div", ...c13 }, l13) => {
    let i7 = { ...xe, ...e5 }, { scrollable: d12 } = (0, import_react3.useContext)(ee), u10 = C(
      i7.wrapper,
      d12 && i7.scrollable,
      t18
    );
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(a13, { className: u10, ...c13, ref: l13, children: r9 });
  }
), Te = {
  wrapper: "flex flex-shrink-0 flex-wrap items-center justify-end rounded-b-md border-t-2 border-neutral-100 border-opacity-100 p-4 dark:border-opacity-50"
}, Be = import_react3.default.forwardRef(
  ({ className: t18, children: r9, theme: e5, tag: a13 = "div", ...c13 }, l13) => {
    let i7 = { ...Te, ...e5 }, d12 = C(i7.wrapper, t18);
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(a13, { className: d12, ...c13, ref: l13, children: r9 });
  }
), ye = {
  wrapper: "relative",
  input: "peer block min-h-[auto] w-full rounded border-0 bg-transparent outline-none transition-all duration-200 ease-linear focus:placeholder:opacity-100 peer-focus:text-primary motion-reduce:transition-none placeholder:opacity-0 disabled:bg-neutral-100 read-only:bg-neutral-100 dark:disabled:bg-neutral-700 dark:read-only:bg-neutral-700 dark:text-neutral-200 dark:placeholder:text-neutral-200 dark:peer-focus:text-primary",
  activeInput: "placeholder:opacity-100",
  label: "pointer-events-none absolute left-3 top-0 mb-0 max-w-[90%] origin-[0_0] truncate text-neutral-500 transition-all duration-200 ease-out peer-focus:scale-[0.8] peer-focus:text-primary motion-reduce:transition-none dark:text-neutral-200 dark:peer-focus:text-primary",
  activeLabel: "scale-[0.8]",
  notch: "group flex absolute left-0 top-0 w-full max-w-full h-full text-left pointer-events-none",
  notchLeading: "pointer-events-none border border-solid box-border bg-transparent transition-all duration-200 ease-linear motion-reduce:transition-none left-0 top-0 h-full w-2 border-r-0 rounded-l-[0.25rem]",
  activeNotchLeading: "border-r-0",
  focusedNotchLeading: "border-r-0",
  notchLeadingDefault: "border-neutral-300 dark:border-neutral-600",
  focusedNotchLeadingDefault: "shadow-[-1px_0_0_#3b71ca,_0_1px_0_0_#3b71ca,_0_-1px_0_0_#3b71ca] border-primary dark:border-primary",
  notchLeadingWhite: "border-neutral-200",
  focusedNotchLeadingWhite: "shadow-[-1px_0_0_#ffffff,_0_1px_0_0_#ffffff,_0_-1px_0_0_#ffffff] border-white",
  notchMiddle: "pointer-events-none border border-solid box-border bg-transparent transition-all duration-200 ease-linear motion-reduce:transition-none grow-0 shrink-0 basis-auto w-auto max-w-[calc(100%-1rem)] h-full border-r-0 border-l-0",
  activeNotchMiddle: "border-x-0 border-t border-solid border-t-transparent dark:border-t-transparent",
  focusedNotchMiddle: "border-x-0 border-t border-solid border-t-transparent dark:border-t-transparent",
  notchMiddleDefault: "border-neutral-300 dark:border-neutral-600",
  focusedNotchMiddleDefault: "shadow-[0_1px_0_0_#3b71ca] border-primary dark:border-primary",
  notchMiddleWhite: "border-neutral-200",
  focusedNotchMiddleWhite: "shadow-[0_1px_0_0_#ffffff] border-white",
  notchTrailing: "pointer-events-none border border-solid box-border bg-transparent transition-all duration-200 ease-linear motion-reduce:transition-none grow h-full border-l-0 rounded-r-[0.25rem]",
  activeNotchTrailing: "border-l-0",
  focusedNotchTrailing: "border-l-0",
  notchTrailingDefault: "border-neutral-300 dark:border-neutral-600",
  focusedNotchTrailingDefault: "shadow-[1px_0_0_#3b71ca,_0_-1px_0_0_#3b71ca,_0_1px_0_0_#3b71ca] border-primary dark:border-primary",
  notchTrailingWhite: "border-neutral-200",
  focusedNotchTrailingWhite: "shadow-[1px_0_0_#ffffff,_0_-1px_0_0_#ffffff,_0_1px_0_0_#ffffff] border-white",
  counter: "text-right leading-[1.6]",
  inputSizeLg: "px-3 py-[0.32rem] leading-[2.15]",
  inputSizeBase: "px-3 py-[0.32rem] leading-[1.6]",
  inputSizeSm: "px-3 py-[0.33rem] text-xs leading-[1.5]",
  labelSizeLg: "pt-[0.36rem] leading-[2.15] peer-focus:-translate-y-[1.15rem]",
  activeLabelSizeLg: "-translate-y-[1.15rem]",
  labelSizeBase: "pt-[0.30rem] leading-[1.6] peer-focus:-translate-y-[0.9rem]",
  activeLabelSizeBase: "-translate-y-[0.9rem]",
  labelSizeSm: "pt-[0.36rem] text-xs leading-[1.5] peer-focus:-translate-y-[0.75rem]",
  activeLabelSizeSm: "-translate-y-[0.75rem]"
}, $e = import_react3.default.forwardRef(
  ({
    className: t18,
    size: r9 = "base",
    value: e5,
    defaultValue: a13,
    id: c13,
    wrapperTag: l13 = "div",
    label: i7,
    onChange: d12,
    children: u10,
    labelRef: n7,
    type: m10,
    onBlur: S9,
    readonly: v4 = !1,
    theme: y6,
    formWhite: s15 = !1,
    counter: p7 = !1,
    maxLength: g7,
    ...L2
  }, k2) => {
    var j5, Y4;
    let [_3, z4] = (0, import_react3.useState)(e5 || a13), [R3, P4] = (0, import_react3.useState)(0), [M7, I6] = (0, import_react3.useState)(!1), [X4, q3] = (0, import_react3.useState)(!1), F6 = (0, import_react3.useRef)(null);
    (0, import_react3.useImperativeHandle)(k2, () => F6.current);
    let o11 = { ...ye, ...y6 }, K3 = (0, import_react3.useRef)(null), G2 = n7 || K3, b6 = C(
      o11.input,
      M7 && o11.activeInput,
      r9 === "lg" ? o11.inputSizeLg : r9 === "base" ? o11.inputSizeBase : r9 === "sm" ? o11.inputSizeSm : o11.inputSizeBase,
      t18
    ), x5 = C(
      o11.label,
      M7 && o11.activeLabel,
      M7 && (r9 === "lg" ? o11.activeLabelSizeLg : r9 === "base" ? o11.activeLabelSizeBase : r9 === "sm" ? o11.activeLabelSizeSm : o11.activeLabelSizeBase),
      r9 === "lg" ? o11.labelSizeLg : r9 === "base" ? o11.labelSizeBase : r9 === "sm" ? o11.labelSizeSm : o11.labelSizeBase
    ), N6 = C(
      o11.notchLeading,
      s15 ? o11.notchLeadingWhite : o11.notchLeadingDefault,
      M7 && o11.activeNotchLeading,
      X4 && o11.focusedNotchLeading,
      X4 && (s15 ? o11.focusedNotchLeadingWhite : o11.focusedNotchLeadingDefault)
    ), $4 = C(
      o11.notchMiddle,
      s15 ? o11.notchMiddleWhite : o11.notchMiddleDefault,
      M7 && o11.activeNotchMiddle,
      X4 && o11.focusedNotchMiddle,
      X4 && (s15 ? o11.focusedNotchMiddleWhite : o11.focusedNotchMiddleDefault)
    ), f10 = C(
      o11.notchTrailing,
      s15 ? o11.notchTrailingWhite : o11.notchTrailingDefault,
      M7 && o11.activeNotchTrailing,
      X4 && o11.focusedNotchTrailing,
      X4 && (s15 ? o11.focusedNotchTrailingWhite : o11.focusedNotchTrailingDefault)
    );
    (0, import_react3.useEffect)(() => {
      if (!F6.current)
        return;
      let { value: w6 } = F6.current;
      w6 != "" ? I6(!0) : I6(!1);
    }, [(j5 = F6.current) == null ? void 0 : j5.value]), (0, import_react3.useEffect)(() => {
      e5 !== void 0 && (e5 != "" ? I6(!0) : I6(!1));
    }, [e5]), (0, import_react3.useEffect)(() => {
      a13 !== void 0 && (a13 != "" ? I6(!0) : I6(!1));
    }, [a13]);
    let T7 = (0, import_react3.useCallback)(() => {
      var w6;
      (w6 = G2.current) != null && w6.clientWidth && P4(G2.current.clientWidth * 0.8 + 8);
    }, [G2]);
    (0, import_react3.useEffect)(() => {
      T7();
    }, [(Y4 = G2.current) == null ? void 0 : Y4.clientWidth, T7]);
    let W2 = (w6) => {
      p7 ? B2(w6) : z4(w6.target.value), d12 == null || d12(w6);
    }, B2 = (w6) => {
      let Q3 = w6.target.value;
      g7 === void 0 || g7 <= 0 || Q3.length <= g7 && z4(Q3);
    }, U4 = (0, import_react3.useCallback)(
      (w6) => {
        F6.current && (_3 !== void 0 && _3 != "" || e5 !== void 0 && e5 != "" || F6.current.value != "" ? I6(!0) : I6(!1), S9 && S9(w6));
      },
      [_3, e5, S9]
    );
    return /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(l13, { children: [
      /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(l13, { className: o11.wrapper, children: [
        /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
          "input",
          {
            type: m10,
            readOnly: v4,
            className: b6,
            onBlur: (w6) => {
              U4(w6), q3(!1);
            },
            onChange: W2,
            onFocus: () => {
              q3(!0);
            },
            value: e5,
            defaultValue: a13,
            id: c13,
            ref: F6,
            maxLength: g7,
            ...L2
          }
        ),
        i7 && /* @__PURE__ */ (0, import_jsx_runtime.jsx)("label", { className: x5, htmlFor: c13, ref: G2, children: i7 }),
        /* @__PURE__ */ (0, import_jsx_runtime.jsxs)("div", { className: o11.notch, children: [
          /* @__PURE__ */ (0, import_jsx_runtime.jsx)("div", { className: N6 }),
          /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
            "div",
            {
              className: $4,
              style: { width: R3 }
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime.jsx)("div", { className: f10 })
        ] }),
        u10
      ] }),
      p7 && g7 !== void 0 && g7 > 0 && /* @__PURE__ */ (0, import_jsx_runtime.jsx)("div", { className: o11.counter, children: /* @__PURE__ */ (0, import_jsx_runtime.jsxs)("span", { children: [
        (_3 == null ? void 0 : _3.toString().length) || 0,
        " / ",
        g7
      ] }) })
    ] });
  }
), ke = {
  defaultTabs: "mb-5 flex list-none flex-row flex-wrap border-b-0 pl-0",
  verticalTabs: "mr-4 flex list-none flex-col flex-wrap pl-0",
  pillsTabs: "mb-5 flex list-none flex-col flex-wrap pl-0 md:flex-row"
}, ae = import_react3.default.createContext({}), Ae = import_react3.default.forwardRef(
  ({
    className: t18,
    children: r9,
    theme: e5,
    fill: a13 = !1,
    justify: c13 = !1,
    vertical: l13 = !1,
    pills: i7 = !1,
    ...d12
  }, u10) => {
    let n7 = {
      ...ke,
      ...e5
    }, m10 = C(
      i7 ? l13 ? n7.verticalTabs : n7.pillsTabs : l13 ? n7.verticalTabs : n7.defaultTabs,
      t18
    );
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(
      ae.Provider,
      {
        value: {
          fill: a13,
          justify: c13,
          vertical: l13,
          pills: i7
        },
        children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)("ul", { className: m10, ref: u10, ...d12, children: r9 })
      }
    );
  }
), we = {
  fillTabsItem: "flex-auto text-center",
  justifyTabsItem: "flex-grow basis-0 text-center",
  verticalTabsItem: "flex-grow text-center",
  disabledTabsItem: "disabled pointer-events-none",
  tabsLink: "mt-2 block cursor-pointer border-x-0 border-b-2 border-t-0 px-7 pb-3.5 pt-4 text-xs font-medium uppercase leading-tight hover:isolate hover:border-x-0 hover:bg-neutral-100 dark:hover:bg-transparent focus:isolate",
  pillsLink: "mt-2 block cursor-pointer rounded bg-neutral-100 px-7 pb-3.5 pt-4 text-xs font-medium uppercase leading-tight text-neutral-500 dark:bg-neutral-700 dark:text-white md:mr-4",
  inactiveTabsLink: "border-transparent text-neutral-500 focus:border-transparent dark:text-neutral-400",
  inactivePillsLink: "bg-neutral-100 dark:bg-neutral-700 dark:text-white md:mr-4",
  disabledTabsLink: "!text-neutral-400 dark:!text-neutral-600",
  disabledPillsLink: "!bg-neutral-200 !text-neutral-400 dark:!text-neutral-500 dark:!bg-neutral-600",
  activePrimaryPillsLink: "!bg-primary-100 !text-primary-700 dark:text-primary-700 ",
  activeSecondaryPillsLink: "!bg-secondary-200 !text-secondary-900 dark:text-secondary-900",
  activeSuccessPillsLink: "!bg-success-100 !text-success-700 dark:text-success-700",
  activeDangerPillsLink: "!bg-danger-100 !text-danger-700 dark:text-danger-700",
  activeWarningPillsLink: "!bg-warning-100 !text-warning-800 dark:text-warning-800",
  activeInfoPillsLink: "!bg-info-100 !text-info-800 dark:text-info-800",
  activeLightPillsLink: "!bg-neutral-50 !text-neutral-600 dark:text-neutral-600",
  activeDarkPillsLink: "!bg-neutral-800 !text-neutral-50 dark:!bg-neutral-900 dark:text-neutral-50",
  activePrimaryTabsLink: "text-primary border-primary dark:border-primary-400 dark:text-primary-400",
  activeSecondaryTabsLink: "text-secondary border-secondary dark:text-secondary",
  activeSuccessTabsLink: "border-success text-success dark:text-success",
  activeDangerTabsLink: "border-danger text-danger dark:text-danger",
  activeWarningTabsLink: "border-warning text-warning dark:text-warning",
  activeInfoTabsLink: "border-info text-info dark:text-info",
  activeLightTabsLink: "border-neutral-50 text-neutral-50 dark:text-neutral-50",
  activeDarkTabsLink: "border-neutral-800 text-neutral-800 dark:border-neutral-600 dark:text-neutral-600"
}, ze = import_react3.default.forwardRef(
  ({
    className: t18,
    wrapperClass: r9,
    active: e5 = !1,
    disabled: a13 = !1,
    color: c13 = "primary",
    children: l13,
    theme: i7,
    tag: d12 = "a",
    ...u10
  }, n7) => {
    let { fill: m10, justify: S9, vertical: v4, pills: y6 } = (0, import_react3.useContext)(ae), s15 = {
      ...we,
      ...i7
    }, p7 = C(
      m10 && s15.fillTabsItem,
      S9 && s15.justifyTabsItem,
      v4 && s15.verticalTabsItem,
      a13 && s15.disabledTabsItem,
      r9
    ), g7 = {
      primary: {
        tabs: s15.activePrimaryTabsLink,
        pills: s15.activePrimaryPillsLink
      },
      secondary: {
        tabs: s15.activeSecondaryTabsLink,
        pills: s15.activeSecondaryPillsLink
      },
      success: {
        tabs: s15.activeSuccessTabsLink,
        pills: s15.activeSuccessPillsLink
      },
      danger: {
        tabs: s15.activeDangerTabsLink,
        pills: s15.activeDangerPillsLink
      },
      warning: {
        tabs: s15.activeWarningTabsLink,
        pills: s15.activeWarningPillsLink
      },
      info: {
        tabs: s15.activeInfoTabsLink,
        pills: s15.activeInfoPillsLink
      },
      light: {
        tabs: s15.activeLightTabsLink,
        pills: s15.activeLightPillsLink
      },
      dark: {
        tabs: s15.activeDarkTabsLink,
        pills: s15.activeDarkPillsLink
      }
    }, L2 = C(
      y6 ? s15.pillsLink : s15.tabsLink,
      a13 ? y6 ? s15.disabledPillsLink : s15.disabledTabsLink : "",
      y6 && !a13 ? e5 ? g7[c13].pills : s15.inactivePillsLink : e5 ? g7[c13].tabs : s15.inactiveTabsLink,
      t18
    );
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)("li", { className: p7, role: "presentation", ref: n7, ...u10, children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(d12, { className: L2, ref: n7, role: "tab", ...u10, children: l13 }) });
  }
), Le = {
  tabsContent: "my-2"
}, Fe = import_react3.default.forwardRef(
  ({ className: t18, tag: r9 = "div", children: e5, theme: a13, ...c13 }, l13) => {
    let i7 = {
      ...Le,
      ...a13
    }, d12 = C(i7.tabsContent, t18);
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(r9, { className: d12, ref: l13, ...c13, children: e5 });
  }
), _e = {
  tabsPane: "transition-opacity duration-150 ease-linear",
  isShown: "block",
  isHidden: "hidden",
  activeTabsPane: "opacity-100",
  inactiveTabsPane: "opacity-0"
}, Re = (...t18) => {
  let r9 = import_react3.default.useRef();
  return import_react3.default.useEffect(() => {
    t18.forEach((e5) => {
      e5 && (typeof e5 == "function" ? e5(r9.current) : e5.current = r9.current);
    });
  }, [t18]), r9;
}, je = import_react3.default.forwardRef(
  ({
    className: t18,
    tag: r9 = "div",
    show: e5 = !1,
    theme: a13,
    onShow: c13,
    onShown: l13,
    onHide: i7,
    onHidden: d12,
    children: u10,
    ...n7
  }, m10) => {
    let [S9, v4] = (0, import_react3.useState)(!1), y6 = (0, import_react3.useRef)(null), s15 = Re(m10, y6), p7 = (0, import_react3.useRef)(0), g7 = {
      ..._e,
      ...a13
    }, L2 = C(
      g7.tabsPane,
      e5 ? g7.isShown : g7.isHidden,
      S9 ? g7.activeTabsPane : g7.inactiveTabsPane,
      t18
    );
    return (0, import_react3.useEffect)(() => {
      if (y6.current) {
        let { transitionDuration: k2 } = window.getComputedStyle(
          y6.current
        ), _3 = Number(k2.replace("s", "")) * 1e3;
        p7.current = _3;
      }
    }, []), (0, import_react3.useEffect)(() => {
      let k2;
      return e5 ? (c13 == null || c13(), k2 = setTimeout(() => {
        v4(!0), l13 == null || l13();
      }, 100)) : (i7 == null || i7(), v4(!1), k2 = setTimeout(() => {
        d12 == null || d12();
      }, p7.current)), () => {
        clearTimeout(k2);
      };
    }, [e5]), /* @__PURE__ */ (0, import_jsx_runtime.jsx)(r9, { className: L2, role: "tabpanel", ref: s15, ...n7, children: u10 });
  }
);

// app/components/Header.jsx
var import_react13 = __toESM(require_react()), import_react_responsive = __toESM(require_react_responsive());

// node_modules/@shopify/hydrogen/node_modules/@shopify/hydrogen-react/dist/browser-dev/flatten-connection.mjs
function flattenConnection(connection) {
  if (!connection) {
    let noConnectionErr = `flattenConnection(): needs a 'connection' to flatten, but received '${connection ?? ""}' instead.`;
    throw new Error(noConnectionErr);
  }
  return "nodes" in connection ? connection.nodes : "edges" in connection && Array.isArray(connection.edges) ? connection.edges.map((edge) => {
    if (!(edge != null && edge.node))
      throw new Error(
        "flattenConnection(): Connection edges must contain nodes"
      );
    return edge.node;
  }) : (console.warn(
    'flattenConnection(): The connection did not contain either "nodes" or "edges.node". Returning an empty array.'
  ), []);
}

// node_modules/@shopify/hydrogen/node_modules/@shopify/hydrogen-react/dist/browser-dev/ShopifyProvider.mjs
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1), import_react4 = __toESM(require_react(), 1);

// node_modules/@shopify/hydrogen/node_modules/@shopify/hydrogen-react/dist/browser-dev/storefront-api-constants.mjs
var SFAPI_VERSION = "2024-07";

// node_modules/@shopify/hydrogen/node_modules/@shopify/hydrogen-react/dist/browser-dev/storefront-client.mjs
var MOCK_SHOP_DOMAIN = "mock.shop", isMockShop = (domain) => domain.includes(MOCK_SHOP_DOMAIN);
function createStorefrontClient({
  storeDomain,
  privateStorefrontToken,
  publicStorefrontToken,
  storefrontApiVersion = SFAPI_VERSION,
  contentType
}) {
  storeDomain || (storeDomain = MOCK_SHOP_DOMAIN, warnOnce2(
    `storeDomain missing, defaulting to ${MOCK_SHOP_DOMAIN}`,
    "info"
  )), storefrontApiVersion !== SFAPI_VERSION && warnOnce2(
    `The Storefront API version that you're using is different than the version this build of Hydrogen React is targeting.
You may run into unexpected errors if these versions don't match. Received version: "${storefrontApiVersion}"; expected version "${SFAPI_VERSION}"`
  ), !privateStorefrontToken && !globalThis.document && !isMockShop(storeDomain) && warnOnce2(
    `Using a private storefront token is recommended for server environments.
Refer to the authentication https://shopify.dev/api/storefront#authentication documentation for more details.`
  ), privateStorefrontToken && globalThis.document && warnOnce2(
    "You are attempting to use a private token in an environment where it can be easily accessed by anyone.\nThis is a security risk; please use the public token and the `publicStorefrontToken` prop"
  );
  let getShopifyDomain = (overrideProps) => {
    let domain = (overrideProps == null ? void 0 : overrideProps.storeDomain) ?? storeDomain;
    return domain.includes("://") ? domain : `https://${domain}`;
  };
  return {
    getShopifyDomain,
    getStorefrontApiUrl(overrideProps) {
      let domain = getShopifyDomain(overrideProps), apiUrl = domain + (domain.endsWith("/") ? "api" : "/api");
      return isMockShop(domain) ? apiUrl : `${apiUrl}/${(overrideProps == null ? void 0 : overrideProps.storefrontApiVersion) ?? storefrontApiVersion}/graphql.json`;
    },
    getPrivateTokenHeaders(overrideProps) {
      if (!privateStorefrontToken && !(overrideProps != null && overrideProps.privateStorefrontToken) && !isMockShop(storeDomain))
        throw new Error(
          H2_PREFIX_ERROR + "You did not pass in a `privateStorefrontToken` while using `createStorefrontClient()` or `getPrivateTokenHeaders()`"
        );
      return overrideProps != null && overrideProps.buyerIp || warnOnce2(
        "It is recommended to pass in the `buyerIp` property which improves analytics and data in the admin."
      ), {
        // default to json
        "content-type": ((overrideProps == null ? void 0 : overrideProps.contentType) ?? contentType) === "graphql" ? "application/graphql" : "application/json",
        "X-SDK-Variant": "hydrogen-react",
        "X-SDK-Variant-Source": "react",
        "X-SDK-Version": storefrontApiVersion,
        "Shopify-Storefront-Private-Token": (overrideProps == null ? void 0 : overrideProps.privateStorefrontToken) ?? privateStorefrontToken ?? "",
        ...overrideProps != null && overrideProps.buyerIp ? { "Shopify-Storefront-Buyer-IP": overrideProps.buyerIp } : {}
      };
    },
    getPublicTokenHeaders(overrideProps) {
      if (!publicStorefrontToken && !(overrideProps != null && overrideProps.publicStorefrontToken) && !isMockShop(storeDomain))
        throw new Error(
          H2_PREFIX_ERROR + "You did not pass in a `publicStorefrontToken` while using `createStorefrontClient()` or `getPublicTokenHeaders()`"
        );
      let finalContentType = (overrideProps == null ? void 0 : overrideProps.contentType) ?? contentType ?? "json";
      return getPublicTokenHeadersRaw(
        finalContentType,
        storefrontApiVersion,
        (overrideProps == null ? void 0 : overrideProps.publicStorefrontToken) ?? publicStorefrontToken ?? ""
      );
    }
  };
}
function getPublicTokenHeadersRaw(contentType, storefrontApiVersion, accessToken) {
  return {
    // default to json
    "content-type": contentType === "graphql" ? "application/graphql" : "application/json",
    "X-SDK-Variant": "hydrogen-react",
    "X-SDK-Variant-Source": "react",
    "X-SDK-Version": storefrontApiVersion,
    "X-Shopify-Storefront-Access-Token": accessToken
  };
}
var warnings = /* @__PURE__ */ new Set(), H2_PREFIX_ERROR = "[h2:error:createStorefrontClient] ", warnOnce2 = (string, type = "warn") => {
  warnings.has(string) || (console[type](`[h2:${type}:createStorefrontClient] ` + string), warnings.add(string));
};

// node_modules/@shopify/hydrogen/node_modules/@shopify/hydrogen-react/dist/browser-dev/ShopifyProvider.mjs
var defaultShopifyContext = {
  storeDomain: "test",
  storefrontToken: "abc123",
  storefrontApiVersion: SFAPI_VERSION,
  countryIsoCode: "US",
  languageIsoCode: "EN",
  getStorefrontApiUrl() {
    return "";
  },
  getPublicTokenHeaders() {
    return {};
  },
  getShopifyDomain() {
    return "";
  }
}, ShopifyContext = (0, import_react4.createContext)(
  defaultShopifyContext
);
function useShop() {
  let shopContext = (0, import_react4.useContext)(ShopifyContext);
  if (!shopContext)
    throw new Error("'useShop()' must be a descendent of <ShopifyProvider/>");
  return shopContext;
}

// node_modules/@shopify/hydrogen/node_modules/@shopify/hydrogen-react/dist/browser-dev/cart-constants.mjs
var SHOPIFY_STOREFRONT_ID_HEADER = "Shopify-Storefront-Id", SHOPIFY_STOREFRONT_Y_HEADER = "Shopify-Storefront-Y", SHOPIFY_STOREFRONT_S_HEADER = "Shopify-Storefront-S", SHOPIFY_Y = "_shopify_y", SHOPIFY_S = "_shopify_s";

// node_modules/worktop/cookie/index.mjs
var g = /* @__PURE__ */ new Set([
  "domain",
  "path",
  "max-age",
  "expires",
  "samesite",
  "secure",
  "httponly"
]);
function u(a13) {
  let r9 = {}, e5, t18, n7 = 0, m10 = a13.split(/;\s*/g), s15, i7;
  for (; n7 < m10.length; n7++)
    if (t18 = m10[n7], e5 = t18.indexOf("="), ~e5) {
      if (s15 = t18.substring(0, e5++).trim(), i7 = t18.substring(e5).trim(), i7[0] === '"' && (i7 = i7.substring(1, i7.length - 1)), ~i7.indexOf("%"))
        try {
          i7 = decodeURIComponent(i7);
        } catch {
        }
      g.has(t18 = s15.toLowerCase()) ? t18 === "expires" ? r9.expires = new Date(i7) : t18 === "max-age" ? r9.maxage = +i7 : r9[t18] = i7 : r9[s15] = i7;
    } else
      (s15 = t18.trim().toLowerCase()) && (s15 === "httponly" || s15 === "secure") && (r9[s15] = !0);
  return r9;
}
function l(a13, r9, e5 = {}) {
  let t18 = a13 + "=" + encodeURIComponent(r9);
  return e5.expires && (t18 += "; Expires=" + new Date(e5.expires).toUTCString()), e5.maxage != null && e5.maxage >= 0 && (t18 += "; Max-Age=" + (e5.maxage | 0)), e5.domain && (t18 += "; Domain=" + e5.domain), e5.path && (t18 += "; Path=" + e5.path), e5.samesite && (t18 += "; SameSite=" + e5.samesite), (e5.secure || e5.samesite === "None") && (t18 += "; Secure"), e5.httponly && (t18 += "; HttpOnly"), t18;
}

// node_modules/@shopify/hydrogen/node_modules/@shopify/hydrogen-react/dist/browser-dev/cookies-utils.mjs
function getShopifyCookies(cookies) {
  let cookieData = u(cookies);
  return {
    [SHOPIFY_Y]: cookieData[SHOPIFY_Y] || "",
    [SHOPIFY_S]: cookieData[SHOPIFY_S] || ""
  };
}

// node_modules/@shopify/hydrogen/node_modules/@shopify/hydrogen-react/dist/browser-dev/analytics-utils.mjs
function parseGid(gid) {
  let defaultReturn = {
    id: "",
    resource: null,
    resourceId: null,
    search: "",
    searchParams: new URLSearchParams(),
    hash: ""
  };
  if (typeof gid != "string")
    return defaultReturn;
  try {
    let { search, searchParams, pathname, hash } = new URL(gid), pathnameParts = pathname.split("/"), lastPathnamePart = pathnameParts[pathnameParts.length - 1], resourcePart = pathnameParts[pathnameParts.length - 2];
    return !lastPathnamePart || !resourcePart ? defaultReturn : { id: `${lastPathnamePart}${search}${hash}` || "", resource: resourcePart ?? null, resourceId: lastPathnamePart || null, search, searchParams, hash };
  } catch {
    return defaultReturn;
  }
}

// node_modules/@shopify/hydrogen/node_modules/@shopify/hydrogen-react/dist/browser-dev/Money.mjs
var import_jsx_runtime3 = __toESM(require_jsx_runtime(), 1);

// node_modules/@shopify/hydrogen/node_modules/@shopify/hydrogen-react/dist/browser-dev/useMoney.mjs
var import_react5 = __toESM(require_react(), 1);
function useMoney(money) {
  let { countryIsoCode, languageIsoCode } = useShop(), locale = languageIsoCode.includes("_") ? languageIsoCode.replace("_", "-") : `${languageIsoCode}-${countryIsoCode}`;
  if (!locale)
    throw new Error(
      "useMoney(): Unable to get 'locale' from 'useShop()', which means that 'locale' was not passed to '<ShopifyProvider/>'. 'locale' is required for 'useMoney()' to work"
    );
  let amount = parseFloat(money.amount), {
    defaultFormatter,
    nameFormatter,
    narrowSymbolFormatter,
    withoutTrailingZerosFormatter,
    withoutCurrencyFormatter,
    withoutTrailingZerosOrCurrencyFormatter
  } = (0, import_react5.useMemo)(() => {
    let options = {
      style: "currency",
      currency: money.currencyCode
    };
    return {
      defaultFormatter: getLazyFormatter(locale, options),
      nameFormatter: getLazyFormatter(locale, {
        ...options,
        currencyDisplay: "name"
      }),
      narrowSymbolFormatter: getLazyFormatter(locale, {
        ...options,
        currencyDisplay: "narrowSymbol"
      }),
      withoutTrailingZerosFormatter: getLazyFormatter(locale, {
        ...options,
        minimumFractionDigits: 0,
        maximumFractionDigits: 0
      }),
      withoutCurrencyFormatter: getLazyFormatter(locale),
      withoutTrailingZerosOrCurrencyFormatter: getLazyFormatter(locale, {
        minimumFractionDigits: 0,
        maximumFractionDigits: 0
      })
    };
  }, [money.currencyCode, locale]), isPartCurrency = (part) => part.type === "currency", lazyFormatters = (0, import_react5.useMemo)(
    () => ({
      original: () => money,
      currencyCode: () => money.currencyCode,
      localizedString: () => defaultFormatter().format(amount),
      parts: () => defaultFormatter().formatToParts(amount),
      withoutTrailingZeros: () => amount % 1 === 0 ? withoutTrailingZerosFormatter().format(amount) : defaultFormatter().format(amount),
      withoutTrailingZerosAndCurrency: () => amount % 1 === 0 ? withoutTrailingZerosOrCurrencyFormatter().format(amount) : withoutCurrencyFormatter().format(amount),
      currencyName: () => {
        var _a2;
        return ((_a2 = nameFormatter().formatToParts(amount).find(isPartCurrency)) == null ? void 0 : _a2.value) ?? money.currencyCode;
      },
      // e.g. "US dollars"
      currencySymbol: () => {
        var _a2;
        return ((_a2 = defaultFormatter().formatToParts(amount).find(isPartCurrency)) == null ? void 0 : _a2.value) ?? money.currencyCode;
      },
      // e.g. "USD"
      currencyNarrowSymbol: () => {
        var _a2;
        return ((_a2 = narrowSymbolFormatter().formatToParts(amount).find(isPartCurrency)) == null ? void 0 : _a2.value) ?? "";
      },
      // e.g. "$"
      amount: () => defaultFormatter().formatToParts(amount).filter(
        (part) => ["decimal", "fraction", "group", "integer", "literal"].includes(
          part.type
        )
      ).map((part) => part.value).join("")
    }),
    [
      money,
      amount,
      nameFormatter,
      defaultFormatter,
      narrowSymbolFormatter,
      withoutCurrencyFormatter,
      withoutTrailingZerosFormatter,
      withoutTrailingZerosOrCurrencyFormatter
    ]
  );
  return (0, import_react5.useMemo)(
    () => new Proxy(lazyFormatters, {
      // eslint-disable-next-line @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call
      get: (target, key) => {
        var _a2;
        return (_a2 = Reflect.get(target, key)) == null ? void 0 : _a2.call(null);
      }
    }),
    [lazyFormatters]
  );
}
var formatterCache = /* @__PURE__ */ new Map();
function getLazyFormatter(locale, options) {
  let key = JSON.stringify([locale, options]);
  return function() {
    let formatter = formatterCache.get(key);
    return formatter || (formatter = new Intl.NumberFormat(locale, options), formatterCache.set(key, formatter)), formatter;
  };
}

// node_modules/@shopify/hydrogen/node_modules/@shopify/hydrogen-react/dist/browser-dev/Money.mjs
function Money({
  data: data2,
  as,
  withoutCurrency,
  withoutTrailingZeros,
  measurement,
  measurementSeparator = "/",
  ...passthroughProps
}) {
  if (!isMoney(data2))
    throw new Error(
      "<Money/> needs a valid 'data' prop that has 'amount' and 'currencyCode'"
    );
  let moneyObject = useMoney(data2), Wrapper = as ?? "div", output = moneyObject.localizedString;
  return (withoutCurrency || withoutTrailingZeros) && (withoutCurrency && !withoutTrailingZeros ? output = moneyObject.amount : !withoutCurrency && withoutTrailingZeros ? output = moneyObject.withoutTrailingZeros : output = moneyObject.withoutTrailingZerosAndCurrency), /* @__PURE__ */ (0, import_jsx_runtime3.jsxs)(Wrapper, { ...passthroughProps, children: [
    output,
    measurement && measurement.referenceUnit && /* @__PURE__ */ (0, import_jsx_runtime3.jsxs)(import_jsx_runtime3.Fragment, { children: [
      measurementSeparator,
      measurement.referenceUnit
    ] })
  ] });
}
function isMoney(maybeMoney) {
  return typeof maybeMoney.amount == "string" && !!maybeMoney.amount && typeof maybeMoney.currencyCode == "string" && !!maybeMoney.currencyCode;
}

// node_modules/@shopify/hydrogen/node_modules/@shopify/hydrogen-react/dist/browser-dev/Image.mjs
var import_jsx_runtime4 = __toESM(require_jsx_runtime(), 1), React7 = __toESM(require_react(), 1);
var Image = React7.forwardRef(
  ({
    alt,
    aspectRatio,
    crop = "center",
    data: data2,
    decoding = "async",
    height = "auto",
    loader: loader33 = shopifyLoader,
    loading = "lazy",
    sizes,
    src,
    srcSetOptions = {
      intervals: 15,
      startingWidth: 200,
      incrementSize: 200,
      placeholderWidth: 100
    },
    width = "100%",
    ...passthroughProps
  }, ref) => {
    let normalizedData = React7.useMemo(() => {
      let dataWidth = data2 != null && data2.width && (data2 != null && data2.height) ? data2 == null ? void 0 : data2.width : void 0, dataHeight = data2 != null && data2.width && (data2 != null && data2.height) ? data2 == null ? void 0 : data2.height : void 0;
      return {
        width: dataWidth,
        height: dataHeight,
        unitsMatch: Boolean(unitsMatch(dataWidth, dataHeight))
      };
    }, [data2]), normalizedProps = React7.useMemo(() => {
      let widthParts = getUnitValueParts((width || "100%").toString()), nWidth = `${widthParts.number}${widthParts.unit}`, autoHeight = height == null, heightParts = autoHeight ? null : getUnitValueParts(height.toString()), fixedHeight = heightParts ? `${heightParts.number}${heightParts.unit}` : "", nHeight = autoHeight ? "auto" : fixedHeight, nSrc = src || (data2 == null ? void 0 : data2.url);
      nSrc || console.warn(
        "No src or data.url provided to Image component.",
        (passthroughProps == null ? void 0 : passthroughProps.key) || ""
      );
      let nAlt = data2 != null && data2.altText && !alt ? data2 == null ? void 0 : data2.altText : alt || "", nAspectRatio = aspectRatio || (normalizedData.unitsMatch ? [
        getNormalizedFixedUnit(normalizedData.width),
        getNormalizedFixedUnit(normalizedData.height)
      ].join("/") : void 0);
      return {
        width: nWidth,
        height: nHeight,
        src: nSrc,
        alt: nAlt,
        aspectRatio: nAspectRatio
      };
    }, [
      width,
      height,
      src,
      data2,
      alt,
      aspectRatio,
      normalizedData,
      passthroughProps == null ? void 0 : passthroughProps.key
    ]), { intervals, startingWidth, incrementSize, placeholderWidth } = srcSetOptions, imageWidths = React7.useMemo(() => generateImageWidths(
      width,
      intervals,
      startingWidth,
      incrementSize
    ), [width, intervals, startingWidth, incrementSize]), fixedWidth = isFixedWidth(normalizedProps.width);
    return !sizes && !fixedWidth && console.warn(
      [
        "No sizes prop provided to Image component,",
        "you may be loading unnecessarily large images.",
        `Image used is ${src || (data2 == null ? void 0 : data2.url) || (passthroughProps == null ? void 0 : passthroughProps.key) || "unknown"}`
      ].join(" ")
    ), fixedWidth ? /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(
      FixedWidthImage,
      {
        aspectRatio,
        crop,
        decoding,
        height,
        imageWidths,
        loader: loader33,
        loading,
        normalizedProps,
        passthroughProps,
        ref,
        width,
        data: data2
      }
    ) : /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(
      FluidImage,
      {
        aspectRatio,
        crop,
        decoding,
        imageWidths,
        loader: loader33,
        loading,
        normalizedProps,
        passthroughProps,
        placeholderWidth,
        ref,
        sizes,
        data: data2
      }
    );
  }
), FixedWidthImage = React7.forwardRef(
  ({
    aspectRatio,
    crop,
    decoding,
    height,
    imageWidths,
    loader: loader33 = shopifyLoader,
    loading,
    normalizedProps,
    passthroughProps,
    width,
    data: data2
  }, ref) => {
    let fixed = React7.useMemo(() => {
      let intWidth = getNormalizedFixedUnit(width), intHeight = getNormalizedFixedUnit(height), fixedAspectRatio = aspectRatio || (unitsMatch(normalizedProps.width, normalizedProps.height) ? [intWidth, intHeight].join("/") : normalizedProps.aspectRatio ? normalizedProps.aspectRatio : void 0), sizesArray = imageWidths === void 0 ? void 0 : generateSizes(imageWidths, fixedAspectRatio, crop, {
        width: (data2 == null ? void 0 : data2.width) ?? void 0,
        height: (data2 == null ? void 0 : data2.height) ?? void 0
      }), fixedHeight = intHeight || (fixedAspectRatio && intWidth ? intWidth * (parseAspectRatio(fixedAspectRatio) ?? 1) : void 0), srcSet = generateSrcSet(normalizedProps.src, sizesArray, loader33), src = loader33({
        src: normalizedProps.src,
        width: intWidth,
        height: fixedHeight,
        crop: normalizedProps.height === "auto" ? void 0 : crop
      });
      return {
        width: intWidth,
        aspectRatio: fixedAspectRatio,
        height: fixedHeight,
        srcSet,
        src
      };
    }, [
      aspectRatio,
      crop,
      data2,
      height,
      imageWidths,
      loader33,
      normalizedProps,
      width
    ]);
    return /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(
      "img",
      {
        ref,
        alt: normalizedProps.alt,
        decoding,
        height: fixed.height,
        loading,
        src: fixed.src,
        srcSet: fixed.srcSet,
        width: fixed.width,
        style: {
          aspectRatio: fixed.aspectRatio,
          ...passthroughProps.style
        },
        ...passthroughProps
      }
    );
  }
), FluidImage = React7.forwardRef(
  ({
    crop,
    decoding,
    imageWidths,
    loader: loader33 = shopifyLoader,
    loading,
    normalizedProps,
    passthroughProps,
    placeholderWidth,
    sizes,
    data: data2
  }, ref) => {
    let fluid = React7.useMemo(() => {
      let sizesArray = imageWidths === void 0 ? void 0 : generateSizes(imageWidths, normalizedProps.aspectRatio, crop, {
        width: (data2 == null ? void 0 : data2.width) ?? void 0,
        height: (data2 == null ? void 0 : data2.height) ?? void 0
      }), placeholderHeight = normalizedProps.aspectRatio && placeholderWidth ? placeholderWidth * (parseAspectRatio(normalizedProps.aspectRatio) ?? 1) : void 0, srcSet = generateSrcSet(normalizedProps.src, sizesArray, loader33), src = loader33({
        src: normalizedProps.src,
        width: placeholderWidth,
        height: placeholderHeight,
        crop
      });
      return {
        placeholderHeight,
        srcSet,
        src
      };
    }, [crop, data2, imageWidths, loader33, normalizedProps, placeholderWidth]);
    return /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(
      "img",
      {
        ref,
        alt: normalizedProps.alt,
        decoding,
        height: fluid.placeholderHeight,
        loading,
        sizes,
        src: fluid.src,
        srcSet: fluid.srcSet,
        width: placeholderWidth,
        ...passthroughProps,
        style: {
          width: normalizedProps.width,
          aspectRatio: normalizedProps.aspectRatio,
          ...passthroughProps.style
        }
      }
    );
  }
), PLACEHOLDER_DOMAIN = "https://placeholder.shopify.com";
function shopifyLoader({ src, width, height, crop }) {
  if (!src)
    return "";
  let url = new URL(src, PLACEHOLDER_DOMAIN);
  return width && url.searchParams.append("width", Math.round(width).toString()), height && url.searchParams.append("height", Math.round(height).toString()), crop && url.searchParams.append("crop", crop), url.href.replace(PLACEHOLDER_DOMAIN, "");
}
function unitsMatch(width = "100%", height = "auto") {
  return getUnitValueParts(width.toString()).unit === getUnitValueParts(height.toString()).unit;
}
function getUnitValueParts(value) {
  let unit = value.replace(/[0-9.]/g, ""), number = parseFloat(value.replace(unit, ""));
  return {
    unit: unit === "" ? number === void 0 ? "auto" : "px" : unit,
    number
  };
}
function getNormalizedFixedUnit(value) {
  if (value === void 0)
    return;
  let { unit, number } = getUnitValueParts(value.toString());
  switch (unit) {
    case "em":
      return number * 16;
    case "rem":
      return number * 16;
    case "px":
      return number;
    case "":
      return number;
    default:
      return;
  }
}
function isFixedWidth(width) {
  return typeof width == "number" || /\d(px|em|rem)$/.test(width);
}
function generateSrcSet(src, sizesArray, loader33 = shopifyLoader) {
  return src ? (sizesArray == null ? void 0 : sizesArray.length) === 0 || !sizesArray ? src : sizesArray.map(
    (size, i7) => `${loader33({
      src,
      width: size.width,
      height: size.height,
      crop: size.crop
    })} ${sizesArray.length === 3 ? `${i7 + 1}x` : `${size.width ?? 0}w`}`
  ).join(", ") : "";
}
function generateImageWidths(width = "100%", intervals, startingWidth, incrementSize) {
  let responsive = Array.from(
    { length: intervals },
    (_3, i7) => i7 * incrementSize + startingWidth
  ), fixed = Array.from(
    { length: 3 },
    (_3, i7) => (i7 + 1) * (getNormalizedFixedUnit(width) ?? 0)
  );
  return isFixedWidth(width) ? fixed : responsive;
}
function parseAspectRatio(aspectRatio) {
  if (!aspectRatio)
    return;
  let [width, height] = aspectRatio.split("/");
  return 1 / (Number(width) / Number(height));
}
function generateSizes(imageWidths, aspectRatio, crop = "center", sourceDimensions) {
  if (imageWidths)
    return imageWidths.map((width) => ({
      width,
      height: aspectRatio ? width * (parseAspectRatio(aspectRatio) ?? 1) : void 0,
      crop
    })).filter(({ width, height }) => !(sourceDimensions != null && sourceDimensions.width && width > sourceDimensions.width || sourceDimensions != null && sourceDimensions.height && height && height > sourceDimensions.height));
}

// node_modules/@shopify/hydrogen/node_modules/@shopify/hydrogen-react/dist/browser-dev/load-script.mjs
var import_react6 = __toESM(require_react(), 1), SCRIPTS_LOADED = {};
function loadScript(src, options) {
  let isScriptLoaded = SCRIPTS_LOADED[src];
  if (isScriptLoaded)
    return isScriptLoaded;
  let promise = new Promise((resolve, reject) => {
    let script = document.createElement("script");
    options != null && options.module ? script.type = "module" : script.type = "text/javascript", script.src = src, script.onload = () => {
      resolve(!0);
    }, script.onerror = () => {
      reject(!1);
    }, (options == null ? void 0 : options.in) === "head" ? document.head.appendChild(script) : document.body.appendChild(script);
    let attributes = options == null ? void 0 : options.attributes;
    attributes && Object.keys(attributes).forEach((key) => {
      script.setAttribute(key, attributes[key]);
    });
  });
  return SCRIPTS_LOADED[src] = promise, promise;
}
function useLoadScript(url, options) {
  let [status, setStatus] = (0, import_react6.useState)("loading");
  return (0, import_react6.useEffect)(
    () => {
      loadScript(url, options).then(() => setStatus("done")).catch(() => setStatus("error"));
    },
    // Ignore options changes since it won't trigger a new load.
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [url]
  ), status;
}

// node_modules/@shopify/hydrogen/dist/development/index.js
var import_react7 = __toESM(require_react(), 1);
var import_jsx_runtime5 = __toESM(require_jsx_runtime(), 1);
var PUBLIC = "public", PRIVATE = "private", NO_STORE = "no-store", optionMapping = {
  maxAge: "max-age",
  staleWhileRevalidate: "stale-while-revalidate",
  sMaxAge: "s-maxage",
  staleIfError: "stale-if-error"
};
function generateCacheControlHeader(cacheOptions) {
  let cacheControl = [];
  return Object.keys(cacheOptions).forEach((key) => {
    key === "mode" ? cacheControl.push(cacheOptions[key]) : optionMapping[key] && cacheControl.push(
      `${optionMapping[key]}=${cacheOptions[key]}`
    );
  }), cacheControl.join(", ");
}
function CacheNone() {
  return {
    mode: NO_STORE
  };
}
function guardExpirableModeType(overrideOptions) {
  if (overrideOptions != null && overrideOptions.mode && (overrideOptions == null ? void 0 : overrideOptions.mode) !== PUBLIC && (overrideOptions == null ? void 0 : overrideOptions.mode) !== PRIVATE)
    throw Error("'mode' must be either 'public' or 'private'");
}
function CacheShort(overrideOptions) {
  return guardExpirableModeType(overrideOptions), {
    mode: PUBLIC,
    maxAge: 1,
    staleWhileRevalidate: 9,
    ...overrideOptions
  };
}
function CacheLong(overrideOptions) {
  return guardExpirableModeType(overrideOptions), {
    mode: PUBLIC,
    maxAge: 3600,
    // 1 hour
    staleWhileRevalidate: 82800,
    // 23 Hours
    ...overrideOptions
  };
}
function CacheDefault(overrideOptions) {
  return guardExpirableModeType(overrideOptions), {
    mode: PUBLIC,
    maxAge: 1,
    staleWhileRevalidate: 86399,
    // 1 second less than 24 hours
    ...overrideOptions
  };
}
function CacheCustom(overrideOptions) {
  return overrideOptions;
}
function parseJSON(json4) {
  return String(json4).includes("__proto__") ? JSON.parse(json4, noproto) : JSON.parse(json4);
}
function noproto(k2, v4) {
  if (k2 !== "__proto__")
    return v4;
}
function getCacheControlSetting(userCacheOptions, options) {
  return userCacheOptions && options ? {
    ...userCacheOptions,
    ...options
  } : userCacheOptions || CacheDefault();
}
function generateDefaultCacheControlHeader(userCacheOptions) {
  return generateCacheControlHeader(getCacheControlSetting(userCacheOptions));
}
async function getItem(cache, request) {
  if (!cache)
    return;
  let response = await cache.match(request);
  if (response)
    return response;
}
async function setItem(cache, request, response, userCacheOptions) {
  if (!cache)
    return;
  let cacheControl = getCacheControlSetting(userCacheOptions), paddedCacheControlString = generateDefaultCacheControlHeader(
    getCacheControlSetting(cacheControl, {
      maxAge: (cacheControl.maxAge || 0) + (cacheControl.staleWhileRevalidate || 0)
    })
  ), cacheControlString = generateDefaultCacheControlHeader(
    getCacheControlSetting(cacheControl)
  );
  response.headers.set("cache-control", paddedCacheControlString), response.headers.set("real-cache-control", cacheControlString), response.headers.set("cache-put-date", String(Date.now())), await cache.put(request, response);
}
async function deleteItem(cache, request) {
  cache && await cache.delete(request);
}
function calculateAge(response, responseDate) {
  let cacheControl = response.headers.get("real-cache-control"), responseMaxAge = 0;
  if (cacheControl) {
    let maxAgeMatch = cacheControl.match(/max-age=(\d*)/);
    maxAgeMatch && maxAgeMatch.length > 1 && (responseMaxAge = parseFloat(maxAgeMatch[1]));
  }
  return [(Date.now() - Number(responseDate)) / 1e3, responseMaxAge];
}
function isStale(request, response) {
  let responseDate = response.headers.get("cache-put-date");
  if (!responseDate)
    return !1;
  let [age, responseMaxAge] = calculateAge(response, responseDate);
  return age > responseMaxAge;
}
var CacheAPI = {
  get: getItem,
  set: setItem,
  delete: deleteItem,
  generateDefaultCacheControlHeader,
  isStale
};
function getKeyUrl(key) {
  return `https://shopify.dev/?${key}`;
}
function getCacheOption(userCacheOptions) {
  return userCacheOptions || CacheDefault();
}
async function getItemFromCache(cache, key) {
  if (!cache)
    return;
  let url = getKeyUrl(key), request = new Request(url), response = await CacheAPI.get(cache, request);
  if (!response)
    return;
  let text = await response.text();
  try {
    return [parseJSON(text), response];
  } catch {
    return [text, response];
  }
}
async function setItemInCache(cache, key, value, userCacheOptions) {
  if (!cache)
    return;
  let url = getKeyUrl(key), request = new Request(url), response = new Response(JSON.stringify(value));
  await CacheAPI.set(
    cache,
    request,
    response,
    getCacheOption(userCacheOptions)
  );
}
function isStale2(key, response) {
  return CacheAPI.isStale(new Request(getKeyUrl(key)), response);
}
function hashKey(queryKey) {
  let rawKeys = Array.isArray(queryKey) ? queryKey : [queryKey], hash = "";
  for (let key of rawKeys)
    key != null && (typeof key == "object" ? hash += JSON.stringify(key) : hash += key.toString());
  return encodeURIComponent(hash);
}
var swrLock = /* @__PURE__ */ new Set();
async function runWithCache(cacheKey, actionFn, {
  strategy = CacheShort(),
  cacheInstance,
  shouldCacheResult = () => !0,
  waitUntil,
  debugInfo
}) {
  let startTime = Date.now(), key = hashKey(
    [
      // '__HYDROGEN_CACHE_ID__', // TODO purgeQueryCacheOnBuild
      ...typeof cacheKey == "string" ? [cacheKey] : cacheKey
    ]
  ), cachedDebugInfo, userDebugInfo, addDebugData = (info) => {
    var _a2, _b, _c, _d;
    userDebugInfo = {
      displayName: info.displayName,
      url: (_a2 = info.response) == null ? void 0 : _a2.url,
      responseInit: {
        status: ((_b = info.response) == null ? void 0 : _b.status) || 0,
        statusText: ((_c = info.response) == null ? void 0 : _c.statusText) || "",
        headers: Array.from(((_d = info.response) == null ? void 0 : _d.headers.entries()) || [])
      }
    };
  }, mergeDebugInfo = () => ({
    ...cachedDebugInfo,
    ...debugInfo,
    url: (userDebugInfo == null ? void 0 : userDebugInfo.url) || (debugInfo == null ? void 0 : debugInfo.url) || (cachedDebugInfo == null ? void 0 : cachedDebugInfo.url) || getKeyUrl(key),
    displayName: (debugInfo == null ? void 0 : debugInfo.displayName) || (userDebugInfo == null ? void 0 : userDebugInfo.displayName) || (cachedDebugInfo == null ? void 0 : cachedDebugInfo.displayName)
  }), logSubRequestEvent2 = ({
    result: result2,
    cacheStatus,
    overrideStartTime
  }) => {
    var _a2;
    (_a2 = globalThis.__H2O_LOG_EVENT) == null || _a2.call(globalThis, {
      ...mergeDebugInfo(),
      eventType: "subrequest",
      startTime: overrideStartTime || startTime,
      endTime: Date.now(),
      cacheStatus,
      responsePayload: result2 && result2[0] || result2,
      responseInit: result2 && result2[1] || (userDebugInfo == null ? void 0 : userDebugInfo.responseInit),
      cache: {
        status: cacheStatus,
        strategy: generateCacheControlHeader(strategy || {}),
        key
      },
      waitUntil
    });
  };
  if (!cacheInstance || !strategy || strategy.mode === NO_STORE) {
    let result2 = await actionFn({ addDebugData });
    return logSubRequestEvent2 == null || logSubRequestEvent2({ result: result2 }), result2;
  }
  let storeInCache = (value) => setItemInCache(
    cacheInstance,
    key,
    {
      value,
      debugInfo: mergeDebugInfo()
    },
    strategy
  ), cachedItem = await getItemFromCache(cacheInstance, key);
  if (cachedItem && typeof cachedItem[0] != "string") {
    let [{ value: cachedResult, debugInfo: debugInfo2 }, cacheInfo] = cachedItem;
    cachedDebugInfo = debugInfo2;
    let cacheStatus = isStale2(key, cacheInfo) ? "STALE" : "HIT";
    if (!swrLock.has(key) && cacheStatus === "STALE") {
      swrLock.add(key);
      let revalidatingPromise = Promise.resolve().then(async () => {
        let revalidateStartTime = Date.now();
        try {
          let result2 = await actionFn({ addDebugData });
          shouldCacheResult(result2) && (await storeInCache(result2), logSubRequestEvent2 == null || logSubRequestEvent2({
            result: result2,
            cacheStatus: "PUT",
            overrideStartTime: revalidateStartTime
          }));
        } catch (error) {
          error.message && (error.message = "SWR in sub-request failed: " + error.message), console.error(error);
        } finally {
          swrLock.delete(key);
        }
      });
      waitUntil == null || waitUntil(revalidatingPromise);
    }
    return logSubRequestEvent2 == null || logSubRequestEvent2({
      result: cachedResult,
      cacheStatus
    }), cachedResult;
  }
  let result = await actionFn({ addDebugData });
  if (logSubRequestEvent2 == null || logSubRequestEvent2({
    result,
    cacheStatus: "MISS"
  }), shouldCacheResult(result)) {
    let cacheStoringPromise = Promise.resolve().then(async () => {
      let putStartTime = Date.now();
      await storeInCache(result), logSubRequestEvent2 == null || logSubRequestEvent2({
        result,
        cacheStatus: "PUT",
        overrideStartTime: putStartTime
      });
    });
    waitUntil == null || waitUntil(cacheStoringPromise);
  }
  return result;
}
function toSerializableResponse(body, response) {
  return [
    body,
    {
      status: response.status,
      statusText: response.statusText,
      headers: Array.from(response.headers.entries())
    }
  ];
}
function fromSerializableResponse([body, init]) {
  return [body, new Response(body, init)];
}
var checkGraphQLErrors = (body, response) => !(body != null && body.errors) && response.status < 400;
async function fetchWithServerCache(url, requestInit, {
  cacheInstance,
  cache: cacheOptions,
  cacheKey = [url, requestInit],
  shouldCacheResponse = () => !0,
  waitUntil,
  returnType = "json",
  debugInfo
} = {}) {
  return !cacheOptions && (!requestInit.method || requestInit.method === "GET") && (cacheOptions = CacheShort()), runWithCache(
    cacheKey,
    async () => {
      let response = await fetch(url, requestInit), data2;
      try {
        data2 = await response[returnType]();
      } catch {
        try {
          data2 = await response.text();
        } catch {
          return toSerializableResponse("", response);
        }
      }
      return toSerializableResponse(data2, response);
    },
    {
      cacheInstance,
      waitUntil,
      strategy: cacheOptions ?? null,
      debugInfo,
      shouldCacheResult: (result) => shouldCacheResponse(...fromSerializableResponse(result))
    }
  ).then(fromSerializableResponse);
}
var STOREFRONT_REQUEST_GROUP_ID_HEADER = "Custom-Storefront-Request-Group-ID", STOREFRONT_ACCESS_TOKEN_HEADER = "X-Shopify-Storefront-Access-Token", SDK_VARIANT_HEADER = "X-SDK-Variant", SDK_VARIANT_SOURCE_HEADER = "X-SDK-Variant-Source", SDK_VERSION_HEADER = "X-SDK-Version";
function generateUUID() {
  return typeof crypto < "u" && crypto.randomUUID ? crypto.randomUUID() : `weak-${Math.random().toString(16).substring(2)}`;
}
var warnings2 = /* @__PURE__ */ new Set(), warnOnce3 = (string) => {
  warnings2.has(string) || (console.warn(string), warnings2.add(string));
};
var LIB_VERSION = "2024.7.9";
function minifyQuery(string) {
  return string.replace(/\s*#.*$/gm, "").replace(/\s+/gm, " ").trim();
}
var IS_QUERY_RE = /(^|}\s)query[\s({]/im, IS_MUTATION_RE = /(^|}\s)mutation[\s({]/im;
function assertQuery(query, callerName) {
  if (!IS_QUERY_RE.test(query))
    throw new Error(`[h2:error:${callerName}] Can only execute queries`);
}
function assertMutation(query, callerName) {
  if (!IS_MUTATION_RE.test(query))
    throw new Error(`[h2:error:${callerName}] Can only execute mutations`);
}
var GraphQLError = class extends Error {
  /**
   * If an error can be associated to a particular point in the requested
   * GraphQL document, it should contain a list of locations.
   */
  locations;
  /**
   * If an error can be associated to a particular field in the GraphQL result,
   * it _must_ contain an entry with the key `path` that details the path of
   * the response field which experienced the error. This allows clients to
   * identify whether a null result is intentional or caused by a runtime error.
   */
  path;
  /**
   * Reserved for implementors to extend the protocol however they see fit,
   * and hence there are no additional restrictions on its contents.
   */
  extensions;
  constructor(message, options = {}) {
    let h2Prefix = options.clientOperation ? `[h2:error:${options.clientOperation}] ` : "", enhancedMessage = h2Prefix + message + (options.requestId ? ` - Request ID: ${options.requestId}` : "");
    super(enhancedMessage), this.name = "GraphQLError", this.extensions = options.extensions, this.locations = options.locations, this.path = options.path, this.stack = options.stack || void 0;
    try {
      this.cause = JSON.stringify({
        ...typeof options.cause == "object" ? options.cause : {},
        requestId: options.requestId,
        path: options.path,
        extensions: options.extensions,
        graphql: h2Prefix && options.query && {
          query: options.query,
          variables: JSON.stringify(options.queryVariables)
        }
      });
    } catch {
      options.cause && (this.cause = options.cause);
    }
  }
  get [Symbol.toStringTag]() {
    return this.name;
  }
  /**
   * Note: `toString()` is internally used by `console.log(...)` / `console.error(...)`
   * when ingesting logs in Oxygen production. Therefore, we want to make sure that
   * the error message is as informative as possible instead of `[object Object]`.
   */
  toString() {
    let result = `${this.name}: ${this.message}`;
    if (this.path)
      try {
        result += ` | path: ${JSON.stringify(this.path)}`;
      } catch {
      }
    if (this.extensions)
      try {
        result += ` | extensions: ${JSON.stringify(this.extensions)}`;
      } catch {
      }
    return result += `
`, this.stack && (result += `${this.stack.slice(this.stack.indexOf(`
`) + 1)}
`), result;
  }
  /**
   * Note: toJSON` is internally used by `JSON.stringify(...)`.
   * The most common scenario when this error instance is going to be stringified is
   * when it's passed to Remix' `json` and `defer` functions: e.g. `defer({promise: storefront.query(...)})`.
   * In this situation, we don't want to expose private error information to the browser so we only
   * do it in development.
   */
  toJSON() {
    let formatted = { name: "Error", message: "" };
    return formatted.name = this.name, formatted.message = "Development: " + this.message, this.path && (formatted.path = this.path), this.locations && (formatted.locations = this.locations), this.extensions && (formatted.extensions = this.extensions), formatted;
  }
};
function throwErrorWithGqlLink({
  url,
  response,
  errors: errors2,
  type,
  query,
  queryVariables,
  ErrorConstructor = Error,
  client = "storefront"
}) {
  var _a2;
  let errorMessage = (typeof errors2 == "string" ? errors2 : (_a2 = errors2 == null ? void 0 : errors2.map) == null ? void 0 : _a2.call(errors2, (error) => error.message).join(`
`)) || `URL: ${url}
API response error: ${response.status}`, gqlError = new GraphQLError(errorMessage, {
    query,
    queryVariables,
    cause: { errors: errors2 },
    clientOperation: `${client}.${type}`,
    requestId: response.headers.get("x-request-id")
  });
  throw new ErrorConstructor(gqlError.message, { cause: gqlError.cause });
}
function withSyncStack(promise, options = {}) {
  let syncError = new Error(), getSyncStack = (message, name = "Error") => {
    let syncStack = (syncError.stack ?? "").split(`
`).slice(3 + (options.stackOffset ?? 0)).join(`
`).replace(/ at loader(\d+) \(/, (all, m1) => all.replace(m1, ""));
    return `${name}: ${message}
` + syncStack;
  };
  return promise.then((result) => {
    if (result != null && result.errors && Array.isArray(result.errors)) {
      let logErrors = typeof options.logErrors == "function" ? options.logErrors : () => options.logErrors ?? !1;
      result.errors.forEach((error) => {
        error && (error.stack = getSyncStack(error.message, error.name), logErrors(error) && console.error(error));
      });
    }
    return result;
  }).catch((error) => {
    throw error && (error.stack = getSyncStack(error.message, error.name)), error;
  });
}
var getCallerStackLine = (stackOffset = 0) => {
  let stackInfo, original = Error.prepareStackTrace;
  Error.prepareStackTrace = (_3, callsites) => {
    let cs = callsites[2 + stackOffset];
    return stackInfo = cs && {
      file: cs.getFileName() ?? void 0,
      func: cs.getFunctionName() ?? void 0,
      line: cs.getLineNumber() ?? void 0,
      column: cs.getColumnNumber() ?? void 0
    }, "";
  };
  let err = { stack: "" };
  return Error.captureStackTrace(err), err.stack, Error.prepareStackTrace = original, stackInfo;
}, defaultI18n = { language: "EN", country: "US" };
function createStorefrontClient2(options) {
  let {
    storefrontHeaders,
    cache,
    waitUntil,
    i18n,
    storefrontId,
    logErrors = !0,
    ...clientOptions
  } = options;
  cache || warnOnce3(
    "[h2:warn:createStorefrontClient] " + "Storefront API client created without a cache instance. This may slow down your sub-requests."
  );
  let {
    getPublicTokenHeaders,
    getPrivateTokenHeaders,
    getStorefrontApiUrl,
    getShopifyDomain
  } = createStorefrontClient(clientOptions), defaultHeaders = (clientOptions.privateStorefrontToken ? getPrivateTokenHeaders : getPublicTokenHeaders)({
    contentType: "json",
    buyerIp: (storefrontHeaders == null ? void 0 : storefrontHeaders.buyerIp) || ""
  });
  if (defaultHeaders[STOREFRONT_REQUEST_GROUP_ID_HEADER] = (storefrontHeaders == null ? void 0 : storefrontHeaders.requestGroupId) || generateUUID(), storefrontId && (defaultHeaders[SHOPIFY_STOREFRONT_ID_HEADER] = storefrontId), defaultHeaders["user-agent"] = `Hydrogen ${LIB_VERSION}`, storefrontHeaders && storefrontHeaders.cookie) {
    let cookies = getShopifyCookies(storefrontHeaders.cookie ?? "");
    cookies[SHOPIFY_Y] && (defaultHeaders[SHOPIFY_STOREFRONT_Y_HEADER] = cookies[SHOPIFY_Y]), cookies[SHOPIFY_S] && (defaultHeaders[SHOPIFY_STOREFRONT_S_HEADER] = cookies[SHOPIFY_S]);
  }
  let cacheKeyHeader = JSON.stringify({
    "content-type": defaultHeaders["content-type"],
    "user-agent": defaultHeaders["user-agent"],
    [SDK_VARIANT_HEADER]: defaultHeaders[SDK_VARIANT_HEADER],
    [SDK_VARIANT_SOURCE_HEADER]: defaultHeaders[SDK_VARIANT_SOURCE_HEADER],
    [SDK_VERSION_HEADER]: defaultHeaders[SDK_VERSION_HEADER],
    [STOREFRONT_ACCESS_TOKEN_HEADER]: defaultHeaders[STOREFRONT_ACCESS_TOKEN_HEADER]
  });
  async function fetchStorefrontApi({
    query,
    mutation,
    variables,
    cache: cacheOptions,
    headers = [],
    storefrontApiVersion,
    displayName,
    stackInfo
  }) {
    let userHeaders = headers instanceof Headers ? Object.fromEntries(headers.entries()) : Array.isArray(headers) ? Object.fromEntries(headers) : headers, document2 = query ?? mutation, queryVariables = { ...variables };
    i18n && (!(variables != null && variables.country) && /\$country/.test(document2) && (queryVariables.country = i18n.country), !(variables != null && variables.language) && /\$language/.test(document2) && (queryVariables.language = i18n.language));
    let url = getStorefrontApiUrl({ storefrontApiVersion }), graphqlData = JSON.stringify({
      query: document2,
      variables: queryVariables
    }), requestInit = {
      method: "POST",
      headers: { ...defaultHeaders, ...userHeaders },
      body: graphqlData
    }, cacheKey = [
      url,
      requestInit.method,
      cacheKeyHeader,
      requestInit.body
    ], [body, response] = await fetchWithServerCache(url, requestInit, {
      cacheInstance: mutation ? void 0 : cache,
      cache: cacheOptions || CacheDefault(),
      cacheKey,
      shouldCacheResponse: checkGraphQLErrors,
      waitUntil,
      debugInfo: {
        requestId: requestInit.headers[STOREFRONT_REQUEST_GROUP_ID_HEADER],
        displayName,
        url,
        stackInfo,
        graphql: graphqlData,
        purpose: storefrontHeaders == null ? void 0 : storefrontHeaders.purpose
      }
    }), errorOptions = {
      url,
      response,
      type: mutation ? "mutation" : "query",
      query: document2,
      queryVariables,
      errors: void 0
    };
    if (!response.ok) {
      let errors3;
      try {
        errors3 = parseJSON(body);
      } catch {
        errors3 = [{ message: body }];
      }
      throwErrorWithGqlLink({ ...errorOptions, errors: errors3 });
    }
    let { data: data2, errors: errors2 } = body, gqlErrors = errors2 == null ? void 0 : errors2.map(
      ({ message, ...rest }) => new GraphQLError(message, {
        ...rest,
        clientOperation: `storefront.${errorOptions.type}`,
        requestId: response.headers.get("x-request-id"),
        queryVariables,
        query: document2
      })
    );
    return formatAPIResult(data2, gqlErrors);
  }
  return {
    storefront: {
      /**
       * Sends a GraphQL query to the Storefront API.
       *
       * Example:
       *
       * ```js
       * async function loader ({context: {storefront}}) {
       *   const data = await storefront.query('query { ... }', {
       *     variables: {},
       *     cache: storefront.CacheLong()
       *   });
       * }
       * ```
       */
      query(query, options2) {
        query = minifyQuery(query), assertQuery(query, "storefront.query");
        let stackOffset = getStackOffset == null ? void 0 : getStackOffset(query);
        return withSyncStack(
          fetchStorefrontApi({
            ...options2,
            query,
            stackInfo: getCallerStackLine == null ? void 0 : getCallerStackLine(stackOffset)
          }),
          { stackOffset, logErrors }
        );
      },
      /**
       * Sends a GraphQL mutation to the Storefront API.
       *
       * Example:
       *
       * ```js
       * async function loader ({context: {storefront}}) {
       *   await storefront.mutate('mutation { ... }', {
       *     variables: {},
       *   });
       * }
       * ```
       */
      mutate(mutation, options2) {
        mutation = minifyQuery(mutation), assertMutation(mutation, "storefront.mutate");
        let stackOffset = getStackOffset == null ? void 0 : getStackOffset(mutation);
        return withSyncStack(
          fetchStorefrontApi({
            ...options2,
            mutation,
            stackInfo: getCallerStackLine == null ? void 0 : getCallerStackLine(stackOffset)
          }),
          { stackOffset, logErrors }
        );
      },
      cache,
      CacheNone,
      CacheLong,
      CacheShort,
      CacheCustom,
      generateCacheControlHeader,
      getPublicTokenHeaders,
      getPrivateTokenHeaders,
      getShopifyDomain,
      getApiUrl: getStorefrontApiUrl,
      i18n: i18n ?? defaultI18n
    }
  };
}
var getStackOffset = (query) => {
  let stackOffset = 0;
  return /fragment CartApi(Query|Mutation) on Cart/.test(query) && (stackOffset = 1), stackOffset;
};
function formatAPIResult(data2, errors2) {
  return {
    ...data2,
    ...errors2 && { errors: errors2 }
  };
}
function getHeaderValue(headers, key) {
  var _a2;
  let value = ((_a2 = headers == null ? void 0 : headers.get) == null ? void 0 : _a2.call(headers, key)) ?? (headers == null ? void 0 : headers[key]);
  return typeof value == "string" ? value : null;
}
var _store, _a, InMemoryCache = (_a = class {
  constructor() {
    __privateAdd(this, _store, void 0);
    __privateSet(this, _store, /* @__PURE__ */ new Map());
  }
  add(request) {
    throw new Error("Method not implemented. Use `put` instead.");
  }
  addAll(requests) {
    throw new Error("Method not implemented. Use `put` instead.");
  }
  matchAll(request, options) {
    throw new Error("Method not implemented. Use `match` instead.");
  }
  async put(request, response) {
    var _a2;
    if (request.method !== "GET")
      throw new TypeError("Cannot cache response to non-GET request.");
    if (response.status === 206)
      throw new TypeError(
        "Cannot cache response to a range request (206 Partial Content)."
      );
    if ((_a2 = response.headers.get("vary")) != null && _a2.includes("*"))
      throw new TypeError("Cannot cache response with 'Vary: *' header.");
    __privateGet(this, _store).set(request.url, {
      body: new Uint8Array(await response.arrayBuffer()),
      status: response.status,
      headers: [...response.headers],
      timestamp: Date.now()
    });
  }
  async match(request) {
    var _a2, _b;
    if (request.method !== "GET")
      return;
    let match = __privateGet(this, _store).get(request.url);
    if (!match)
      return;
    let { body, timestamp, ...metadata } = match, headers = new Headers(metadata.headers), cacheControl = headers.get("cache-control") || headers.get("real-cache-control") || "", maxAge = parseInt(
      ((_a2 = cacheControl.match(/max-age=(\d+)/)) == null ? void 0 : _a2[1]) || "0",
      10
    ), swr = parseInt(
      ((_b = cacheControl.match(/stale-while-revalidate=(\d+)/)) == null ? void 0 : _b[1]) || "0",
      10
    ), age = (Date.now() - timestamp) / 1e3;
    if (age > maxAge + swr) {
      __privateGet(this, _store).delete(request.url);
      return;
    }
    let isStale3 = age > maxAge;
    return headers.set("cache", isStale3 ? "STALE" : "HIT"), headers.set("date", new Date(timestamp).toUTCString()), new Response(body, {
      status: metadata.status ?? 200,
      headers
    });
  }
  async delete(request) {
    return __privateGet(this, _store).has(request.url) ? (__privateGet(this, _store).delete(request.url), !0) : !1;
  }
  keys(request) {
    let cacheKeys = [];
    for (let url of __privateGet(this, _store).keys())
      (!request || request.url === url) && cacheKeys.push(new Request(url));
    return Promise.resolve(cacheKeys);
  }
}, _store = new WeakMap(), _a);
function getRedirectUrl(requestUrl) {
  if (!requestUrl)
    return;
  let { pathname, search } = new URL(requestUrl), redirectFrom = pathname + search, searchParams = new URLSearchParams(search), redirectTo = searchParams.get("return_to") || searchParams.get("redirect");
  if (redirectTo) {
    if (isLocalPath(requestUrl, redirectTo))
      return redirectTo;
    console.warn(
      `Cross-domain redirects are not supported. Tried to redirect from ${redirectFrom} to ${redirectTo}`
    );
  }
}
function isLocalPath(requestUrl, redirectUrl) {
  try {
    return new URL(requestUrl).origin === new URL(redirectUrl, requestUrl).origin;
  } catch {
    return !1;
  }
}
async function storefrontRedirect(options) {
  var _a2, _b, _c;
  let {
    storefront,
    request,
    noAdminRedirect,
    matchQueryParams,
    response = new Response("Not Found", { status: 404 })
  } = options, url = new URL(request.url), { pathname, searchParams } = url, isSoftNavigation = searchParams.has("_data");
  searchParams.delete("redirect"), searchParams.delete("return_to"), searchParams.delete("_data");
  let redirectFrom = (matchQueryParams ? url.toString().replace(url.origin, "") : pathname).toLowerCase();
  if (url.pathname === "/admin" && !noAdminRedirect)
    return createRedirectResponse(
      `${storefront.getShopifyDomain()}/admin`,
      isSoftNavigation,
      searchParams,
      matchQueryParams
    );
  try {
    let { urlRedirects } = await storefront.query(REDIRECT_QUERY, {
      // The admin doesn't allow redirects to have a
      // trailing slash, so strip them all off
      variables: { query: "path:" + redirectFrom.replace(/\/+$/, "") }
    }), location = (_c = (_b = (_a2 = urlRedirects == null ? void 0 : urlRedirects.edges) == null ? void 0 : _a2[0]) == null ? void 0 : _b.node) == null ? void 0 : _c.target;
    if (location)
      return createRedirectResponse(
        location,
        isSoftNavigation,
        searchParams,
        matchQueryParams
      );
    let redirectTo = getRedirectUrl(request.url);
    if (redirectTo)
      return createRedirectResponse(
        redirectTo,
        isSoftNavigation,
        searchParams,
        matchQueryParams
      );
  } catch (error) {
    console.error(
      `Failed to fetch redirects from Storefront API for route ${redirectFrom}`,
      error
    );
  }
  return response;
}
var TEMP_DOMAIN = "https://example.com";
function createRedirectResponse(location, isSoftNavigation, searchParams, matchQueryParams) {
  let url = new URL(location, TEMP_DOMAIN);
  if (!matchQueryParams)
    for (let [key, value] of searchParams)
      url.searchParams.append(key, value);
  return isSoftNavigation ? new Response(null, {
    status: 200,
    headers: {
      "X-Remix-Redirect": url.toString().replace(TEMP_DOMAIN, ""),
      "X-Remix-Status": "301"
    }
  }) : new Response(null, {
    status: 301,
    headers: { location: url.toString().replace(TEMP_DOMAIN, "") }
  });
}
var REDIRECT_QUERY = `#graphql
  query redirects($query: String) {
    urlRedirects(first: 1, query: $query) {
      edges {
        node {
          target
        }
      }
    }
  }
`, graphiqlLoader = async function({
  request,
  context
}) {
  let storefront = context.storefront, customerAccount = context.customerAccount, url = new URL(request.url);
  if (!storefront)
    throw new Error(
      "GraphiQL: Hydrogen's storefront client must be injected in the loader context."
    );
  let schemas = {};
  if (storefront) {
    let authHeader = "X-Shopify-Storefront-Access-Token";
    schemas.storefront = {
      name: "Storefront API",
      authHeader,
      accessToken: storefront.getPublicTokenHeaders()[authHeader],
      apiUrl: storefront.getApiUrl(),
      icon: "SF"
    };
  }
  if (customerAccount) {
    let customerAccountSchema = await (await fetch(url.origin + "/graphiql/customer-account.schema.json")).json(), accessToken = await customerAccount.getAccessToken();
    customerAccountSchema && (schemas["customer-account"] = {
      name: "Customer Account API",
      value: customerAccountSchema,
      authHeader: "Authorization",
      accessToken,
      apiUrl: customerAccount.getApiUrl(),
      icon: "CA"
    });
  }
  let favicon = "https://avatars.githubusercontent.com/u/12972006?s=48&v=4", html = String.raw;
  return new Response(
    html`
      <!DOCTYPE html>
      <html lang="en">
        <head>
          <title>GraphiQL</title>
          <link rel="icon" type="image/x-icon" href="${favicon}" />
          <style>
            body {
              height: 100%;
              margin: 0;
              width: 100%;
              overflow: hidden;
              background-color: hsl(219, 29%, 18%);
            }

            #graphiql {
              height: 100vh;
            }

            #graphiql > .placeholder {
              color: slategray;
              width: fit-content;
              margin: 40px auto;
              font-family: Arial;
            }

            .graphiql-api-toolbar-label {
              position: absolute;
              bottom: -6px;
              right: -4px;
              font-size: 8px;
            }
          </style>

          <script
            crossorigin
            src="https://unpkg.com/react@18/umd/react.development.js"
          ></script>
          <script
            crossorigin
            src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"
          ></script>
          <link
            rel="stylesheet"
            href="https://unpkg.com/graphiql@3/graphiql.min.css"
          />
          <link
            rel="stylesheet"
            href="https://unpkg.com/@graphiql/plugin-explorer/dist/style.css"
          />
        </head>

        <body>
          <div id="graphiql">
            <div class="placeholder">Loading GraphiQL...</div>
          </div>

          <script
            src="https://unpkg.com/graphiql@3/graphiql.min.js"
            type="application/javascript"
            crossorigin="anonymous"
          ></script>
          <script
            src="https://unpkg.com/@graphiql/plugin-explorer/dist/index.umd.js"
            type="application/javascript"
            crossorigin="anonymous"
          ></script>

          <script>
            const windowUrl = new URL(document.URL);
            const startingSchemaKey =
              windowUrl.searchParams.get('schema') || 'storefront';

            let query = '{ shop { name } }';
            if (windowUrl.searchParams.has('query')) {
              query = decodeURIComponent(
                windowUrl.searchParams.get('query') ?? query,
              );
            }

            // Prettify query
            query = GraphiQL.GraphQL.print(GraphiQL.GraphQL.parse(query));

            let variables;
            if (windowUrl.searchParams.has('variables')) {
              variables = decodeURIComponent(
                windowUrl.searchParams.get('variables') ?? '',
              );
            }

            // Prettify variables
            if (variables) {
              variables = JSON.stringify(JSON.parse(variables), null, 2);
            }

            const schemas = ${JSON.stringify(schemas)};
            let lastActiveTabIndex = -1;
            let lastTabAmount = -1;

            const root = ReactDOM.createRoot(
              document.getElementById('graphiql'),
            );

            root.render(React.createElement(RootWrapper));

            const TAB_STATE_KEY = 'graphiql:tabState';
            const storage = {
              getTabState: () =>
                JSON.parse(localStorage.getItem(TAB_STATE_KEY)),
              setTabState: (state) =>
                localStorage.setItem(TAB_STATE_KEY, JSON.stringify(state)),
            };

            let nextSchemaKey;

            function RootWrapper() {
              const [activeSchema, setActiveSchema] =
                React.useState(startingSchemaKey);

              const schema = schemas[activeSchema];
              if (!schema) {
                throw new Error('No schema found for ' + activeSchema);
              }

              const keys = Object.keys(schemas);

              return React.createElement(
                GraphiQL,
                {
                  fetcher: GraphiQL.createFetcher({
                    url: schema.apiUrl,
                    headers: {[schema.authHeader]: schema.accessToken},
                  }),
                  defaultEditorToolsVisibility: true,
                  query,
                  variables,
                  schema: schema.value,
                  plugins: [GraphiQLPluginExplorer.explorerPlugin()],
                  onTabChange: (state) => {
                    const {activeTabIndex, tabs} = state;
                    const activeTab = tabs[activeTabIndex];

                    if (
                      activeTabIndex === lastActiveTabIndex &&
                      lastTabAmount === tabs.length
                    ) {
                      if (
                        nextSchemaKey &&
                        activeTab &&
                        activeTab.schemaKey !== nextSchemaKey
                      ) {
                        activeTab.schemaKey = nextSchemaKey;
                        nextSchemaKey = undefined;

                        // Sync state to localStorage. GraphiQL resets the state
                        // asynchronously, so we need to do it in a timeout.
                        storage.setTabState(state);
                        setTimeout(() => storage.setTabState(state), 500);
                      }

                      // React rerrendering, skip
                      return;
                    }

                    if (activeTab) {
                      if (!activeTab.schemaKey) {
                        // Creating a new tab
                        if (lastTabAmount < tabs.length) {
                          activeTab.schemaKey = activeSchema;
                          storage.setTabState(state);
                        }
                      }

                      const nextSchema = activeTab.schemaKey || 'storefront';

                      if (nextSchema !== activeSchema) {
                        setActiveSchema(nextSchema);
                      }
                    }

                    lastActiveTabIndex = activeTabIndex;
                    lastTabAmount = tabs.length;
                  },
                  toolbar: {
                    additionalComponent: function () {
                      const schema = schemas[activeSchema];

                      return React.createElement(
                        GraphiQL.React.ToolbarButton,
                        {
                          onClick: () => {
                            const activeKeyIndex = keys.indexOf(activeSchema);
                            nextSchemaKey =
                              keys[(activeKeyIndex + 1) % keys.length];

                            // This triggers onTabChange
                            if (nextSchemaKey) setActiveSchema(nextSchemaKey);
                          },
                          label: 'Toggle between different API schemas',
                        },
                        React.createElement(
                          'div',
                          {
                            key: 'api-wrapper',
                            className: 'graphiql-toolbar-icon',
                            style: {position: 'relative', fontWeight: 'bolder'},
                          },
                          [
                            React.createElement(
                              'div',
                              {key: 'icon', style: {textAlign: 'center'}},
                              [
                                schema.icon,
                                React.createElement(
                                  'div',
                                  {
                                    key: 'icon-label',
                                    className: 'graphiql-api-toolbar-label',
                                  },
                                  'API',
                                ),
                              ],
                            ),
                          ],
                        ),
                      );
                    },
                  },
                },
                [
                  React.createElement(
                    GraphiQL.Logo,
                    {
                      key: 'Logo replacement',
                    },
                    [
                      React.createElement(
                        'div',
                        {
                          key: 'Logo wrapper',
                          style: {display: 'flex', alignItems: 'center'},
                        },
                        [
                          React.createElement(
                            'div',
                            {
                              key: 'api',
                              className: 'graphiql-logo',
                              style: {
                                paddingRight: 0,
                                whiteSpace: 'nowrap',
                              },
                            },
                            [schema.name],
                          ),
                          React.createElement(GraphiQL.Logo, {key: 'logo'}),
                        ],
                      ),
                    ],
                  ),
                ],
              );
            }
          </script>
        </body>
      </html>
    `,
    { status: 200, headers: { "content-type": "text/html" } }
  );
};
var ERROR_PREFIX = "Error in SEO input: ", schema = {
  title: {
    validate: (value) => {
      if (typeof value != "string")
        throw new Error(ERROR_PREFIX.concat("`title` should be a string"));
      if (typeof value == "string" && value.length > 120)
        throw new Error(
          ERROR_PREFIX.concat(
            "`title` should not be longer than 120 characters"
          )
        );
      return value;
    }
  },
  description: {
    validate: (value) => {
      if (typeof value != "string")
        throw new Error(
          ERROR_PREFIX.concat("`description` should be a string")
        );
      if (typeof value == "string" && value.length > 155)
        throw new Error(
          ERROR_PREFIX.concat(
            "`description` should not be longer than 155 characters"
          )
        );
      return value;
    }
  },
  url: {
    validate: (value) => {
      if (typeof value != "string")
        throw new Error(ERROR_PREFIX.concat("`url` should be a string"));
      if (typeof value == "string" && !value.startsWith("http"))
        throw new Error(ERROR_PREFIX.concat("`url` should be a valid URL"));
      return value;
    }
  },
  handle: {
    validate: (value) => {
      if (typeof value != "string")
        throw new Error(ERROR_PREFIX.concat("`handle` should be a string"));
      if (typeof value == "string" && !value.startsWith("@"))
        throw new Error(ERROR_PREFIX.concat("`handle` should start with `@`"));
      return value;
    }
  }
};
function renderTitle(template, title) {
  if (title)
    return template ? typeof template == "function" ? template(title) : template.replace("%s", title ?? "") : title;
}
function inferMimeType(url) {
  switch (url && url.split(".").pop()) {
    case "svg":
      return "image/svg+xml";
    case "png":
      return "image/png";
    case "gif":
      return "image/gif";
    case "swf":
      return "application/x-shockwave-flash";
    case "mp3":
      return "audio/mpeg";
    case "jpg":
    case "jpeg":
    default:
      return "image/jpeg";
  }
}
function ensureArray(value) {
  return Array.isArray(value) ? value : [value];
}
function validate(schema2, data2) {
  try {
    return schema2.validate(data2);
  } catch (error) {
    return console.warn(error.message), data2;
  }
}
var SeoLogger = (0, import_react7.lazy)(() => Promise.resolve().then(() => (init_log_seo_tags_IG37ONQ2(), log_seo_tags_IG37ONQ2_exports)));
function getSeoMeta(...seoInputs) {
  let tagResults = [], dedupedSeoInput = seoInputs.reduce((acc, current) => {
    if (!current)
      return acc;
    Object.keys(current).forEach(
      (key) => !current[key] && delete current[key]
    );
    let { jsonLd } = current;
    return jsonLd ? acc != null && acc.jsonLd ? {
      ...acc,
      ...current,
      jsonLd: ensureArray(acc.jsonLd).concat(jsonLd)
    } : { ...acc, ...current, jsonLd: [jsonLd] } : { ...acc, ...current };
  }, {}) || {};
  for (let seoKey of Object.keys(dedupedSeoInput))
    switch (seoKey) {
      case "title": {
        let content = validate(schema.title, dedupedSeoInput.title), title = renderTitle(dedupedSeoInput == null ? void 0 : dedupedSeoInput.titleTemplate, content);
        if (!title)
          break;
        tagResults.push(
          { title },
          { property: "og:title", content: title },
          { property: "twitter:title", content: title }
        );
        break;
      }
      case "description": {
        let content = validate(
          schema.description,
          dedupedSeoInput.description
        );
        if (!content)
          break;
        tagResults.push(
          {
            name: "description",
            content
          },
          {
            property: "og:description",
            content
          },
          {
            property: "twitter:description",
            content
          }
        );
        break;
      }
      case "url": {
        let content = validate(schema.url, dedupedSeoInput.url);
        if (!content)
          break;
        let urlWithoutTrailingSlash = content.split("?")[0].replace(/\/$/, "");
        tagResults.push(
          {
            tagName: "link",
            rel: "canonical",
            href: urlWithoutTrailingSlash
          },
          {
            property: "og:url",
            content: urlWithoutTrailingSlash
          }
        );
        break;
      }
      case "handle": {
        let content = validate(schema.handle, dedupedSeoInput.handle);
        if (!content)
          break;
        tagResults.push(
          { property: "twitter:site", content },
          { property: "twitter:creator", content }
        );
        break;
      }
      case "media": {
        let content, values = ensureArray(dedupedSeoInput.media);
        for (let media of values)
          if (typeof media == "string" && tagResults.push({ property: "og:image", content: media }), media && typeof media == "object") {
            let type = media.type || "image", normalizedMedia = media ? {
              url: media == null ? void 0 : media.url,
              secure_url: media == null ? void 0 : media.url,
              type: inferMimeType(media.url),
              width: media == null ? void 0 : media.width,
              height: media == null ? void 0 : media.height,
              alt: media == null ? void 0 : media.altText
            } : {};
            for (let key of Object.keys(normalizedMedia))
              normalizedMedia[key] && (content = normalizedMedia[key], tagResults.push({
                property: `og:${type}:${key}`,
                content
              }));
          }
        break;
      }
      case "jsonLd": {
        let jsonLdBlocks = ensureArray(dedupedSeoInput.jsonLd);
        for (let block of jsonLdBlocks)
          typeof block != "object" || Object.keys(block).length === 0 || tagResults.push({
            "script:ld+json": block
          });
        break;
      }
      case "alternates": {
        let alternates = ensureArray(dedupedSeoInput.alternates);
        for (let alternate of alternates) {
          if (!alternate)
            continue;
          let { language, url, default: defaultLang } = alternate, hrefLang = language ? `${language}${defaultLang ? "-default" : ""}` : void 0;
          tagResults.push({
            tagName: "link",
            rel: "alternate",
            hrefLang,
            href: url
          });
        }
        break;
      }
      case "robots": {
        if (!dedupedSeoInput.robots)
          break;
        let {
          maxImagePreview,
          maxSnippet,
          maxVideoPreview,
          noArchive,
          noFollow,
          noImageIndex,
          noIndex,
          noSnippet,
          noTranslate,
          unavailableAfter
        } = dedupedSeoInput.robots, robotsParams = [
          noArchive && "noarchive",
          noImageIndex && "noimageindex",
          noSnippet && "nosnippet",
          noTranslate && "notranslate",
          maxImagePreview && `max-image-preview:${maxImagePreview}`,
          maxSnippet && `max-snippet:${maxSnippet}`,
          maxVideoPreview && `max-video-preview:${maxVideoPreview}`,
          unavailableAfter && `unavailable_after:${unavailableAfter}`
        ], robotsParam = (noIndex ? "noindex" : "index") + "," + (noFollow ? "nofollow" : "follow");
        for (let param of robotsParams)
          param && (robotsParam += `,${param}`);
        tagResults.push({ name: "robots", content: robotsParam });
        break;
      }
    }
  return tagResults;
}
function Pagination({
  connection,
  children = () => (console.warn("<Pagination> requires children to work properly"), null)
}) {
  let isLoading = useNavigation().state === "loading", {
    endCursor,
    hasNextPage,
    hasPreviousPage,
    nextPageUrl,
    nodes,
    previousPageUrl,
    startCursor
  } = usePagination(connection), state = (0, import_react7.useMemo)(
    () => ({
      pageInfo: {
        endCursor,
        hasPreviousPage,
        hasNextPage,
        startCursor
      },
      nodes
    }),
    [endCursor, hasNextPage, hasPreviousPage, startCursor, nodes]
  ), NextLink = (0, import_react7.useMemo)(
    () => (0, import_react7.forwardRef)(function(props, ref) {
      return hasNextPage ? (0, import_react7.createElement)(Link2, {
        preventScrollReset: !0,
        ...props,
        to: nextPageUrl,
        state,
        replace: !0,
        ref
      }) : null;
    }),
    [hasNextPage, nextPageUrl, state]
  ), PreviousLink = (0, import_react7.useMemo)(
    () => (0, import_react7.forwardRef)(function(props, ref) {
      return hasPreviousPage ? (0, import_react7.createElement)(Link2, {
        preventScrollReset: !0,
        ...props,
        to: previousPageUrl,
        state,
        replace: !0,
        ref
      }) : null;
    }),
    [hasPreviousPage, previousPageUrl, state]
  );
  return children({
    state,
    hasNextPage,
    hasPreviousPage,
    isLoading,
    nextPageUrl,
    nodes,
    previousPageUrl,
    NextLink,
    PreviousLink
  });
}
function getParamsWithoutPagination(paramsString) {
  let params = new URLSearchParams(paramsString);
  return params.delete("cursor"), params.delete("direction"), params.toString();
}
function makeError(prop) {
  throw new Error(
    `The Pagination component requires ${"`" + prop + "`"} to be a part of your query. See the guide on how to setup your query to include ${"`" + prop + "`"}: https://shopify.dev/docs/custom-storefronts/hydrogen/data-fetching/pagination#setup-the-paginated-query`
  );
}
function usePagination(connection) {
  connection.pageInfo || makeError("pageInfo"), typeof connection.pageInfo.startCursor > "u" && makeError("pageInfo.startCursor"), typeof connection.pageInfo.endCursor > "u" && makeError("pageInfo.endCursor"), typeof connection.pageInfo.hasNextPage > "u" && makeError("pageInfo.hasNextPage"), typeof connection.pageInfo.hasPreviousPage > "u" && makeError("pageInfo.hasPreviousPage");
  let navigate = useNavigate(), { state, search, pathname } = useLocation(), isPrevious = new URLSearchParams(search).get("direction") === "previous", nodes = (0, import_react7.useMemo)(() => {
    var _a2;
    return !((_a2 = globalThis == null ? void 0 : globalThis.window) != null && _a2.__hydrogenHydrated) || !state || !(state != null && state.nodes) ? flattenConnection(connection) : isPrevious ? [...flattenConnection(connection), ...state.nodes] : [...state.nodes, ...flattenConnection(connection)];
  }, [state, connection]), currentPageInfo = (0, import_react7.useMemo)(
    () => {
      var _a2, _b, _c, _d, _e3;
      let hydrogenHydrated = (_a2 = globalThis == null ? void 0 : globalThis.window) == null ? void 0 : _a2.__hydrogenHydrated, pageStartCursor = !hydrogenHydrated || ((_b = state == null ? void 0 : state.pageInfo) == null ? void 0 : _b.startCursor) === void 0 ? connection.pageInfo.startCursor : state.pageInfo.startCursor, pageEndCursor = !hydrogenHydrated || ((_c = state == null ? void 0 : state.pageInfo) == null ? void 0 : _c.endCursor) === void 0 ? connection.pageInfo.endCursor : state.pageInfo.endCursor, previousPageExists = !hydrogenHydrated || ((_d = state == null ? void 0 : state.pageInfo) == null ? void 0 : _d.hasPreviousPage) === void 0 ? connection.pageInfo.hasPreviousPage : state.pageInfo.hasPreviousPage, nextPageExists = !hydrogenHydrated || ((_e3 = state == null ? void 0 : state.pageInfo) == null ? void 0 : _e3.hasNextPage) === void 0 ? connection.pageInfo.hasNextPage : state.pageInfo.hasNextPage;
      return state != null && state.nodes && (isPrevious ? (pageStartCursor = connection.pageInfo.startCursor, previousPageExists = connection.pageInfo.hasPreviousPage) : (pageEndCursor = connection.pageInfo.endCursor, nextPageExists = connection.pageInfo.hasNextPage)), {
        startCursor: pageStartCursor,
        endCursor: pageEndCursor,
        hasPreviousPage: previousPageExists,
        hasNextPage: nextPageExists
      };
    },
    [
      isPrevious,
      state,
      connection.pageInfo.hasNextPage,
      connection.pageInfo.hasPreviousPage,
      connection.pageInfo.startCursor,
      connection.pageInfo.endCursor
    ]
  ), urlRef = (0, import_react7.useRef)({
    params: getParamsWithoutPagination(search),
    pathname
  });
  (0, import_react7.useEffect)(() => {
    window.__hydrogenHydrated = !0;
  }, []), (0, import_react7.useEffect)(() => {
    // If the URL changes (independent of pagination params)
    // then reset the pagination params in the URL
    (getParamsWithoutPagination(search) !== urlRef.current.params || pathname !== urlRef.current.pathname) && (urlRef.current = {
      pathname,
      params: getParamsWithoutPagination(search)
    }, navigate(`${pathname}?${getParamsWithoutPagination(search)}`, {
      replace: !0,
      preventScrollReset: !0,
      state: { nodes: void 0, pageInfo: void 0 }
    }));
  }, [pathname, search]);
  let previousPageUrl = (0, import_react7.useMemo)(() => {
    let params2 = new URLSearchParams(search);
    return params2.set("direction", "previous"), currentPageInfo.startCursor && params2.set("cursor", currentPageInfo.startCursor), `?${params2.toString()}`;
  }, [search, currentPageInfo.startCursor]), nextPageUrl = (0, import_react7.useMemo)(() => {
    let params2 = new URLSearchParams(search);
    return params2.set("direction", "next"), currentPageInfo.endCursor && params2.set("cursor", currentPageInfo.endCursor), `?${params2.toString()}`;
  }, [search, currentPageInfo.endCursor]);
  return { ...currentPageInfo, previousPageUrl, nextPageUrl, nodes };
}
function getPaginationVariables(request, options = { pageBy: 20 }) {
  if (typeof (request == null ? void 0 : request.url) > "u")
    throw new Error(
      "getPaginationVariables must be called with the Request object passed to your loader function"
    );
  let { pageBy } = options, searchParams = new URLSearchParams(new URL(request.url).search), cursor = searchParams.get("cursor") ?? void 0;
  return (searchParams.get("direction") === "previous" ? "previous" : "next") === "previous" ? {
    last: pageBy,
    startCursor: cursor ?? null
  } : {
    first: pageBy,
    endCursor: cursor ?? null
  };
}
var USER_AGENT = `Shopify Hydrogen ${LIB_VERSION}`;
var INPUT_NAME = "cartFormInput";
function CartForm({
  children,
  action: action12,
  inputs,
  route,
  fetcherKey
}) {
  let fetcher = useFetcher2({ key: fetcherKey });
  return /* @__PURE__ */ (0, import_jsx_runtime5.jsxs)(fetcher.Form, {
    action: route || "",
    method: "post",
    children: [
      (action12 || inputs) && /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
        "input",
        {
          type: "hidden",
          name: INPUT_NAME,
          value: JSON.stringify({ action: action12, inputs })
        }
      ),
      typeof children == "function" ? children(fetcher) : children
    ]
  });
}
CartForm.INPUT_NAME = INPUT_NAME;
CartForm.ACTIONS = {
  AttributesUpdateInput: "AttributesUpdateInput",
  BuyerIdentityUpdate: "BuyerIdentityUpdate",
  Create: "Create",
  DiscountCodesUpdate: "DiscountCodesUpdate",
  GiftCardCodesUpdate: "GiftCardCodesUpdate",
  LinesAdd: "LinesAdd",
  LinesRemove: "LinesRemove",
  LinesUpdate: "LinesUpdate",
  NoteUpdate: "NoteUpdate",
  SelectedDeliveryOptionsUpdate: "SelectedDeliveryOptionsUpdate",
  MetafieldsSet: "MetafieldsSet",
  MetafieldDelete: "MetafieldDelete"
};
function getFormInput(formData) {
  let data2 = {};
  for (let pair of formData.entries()) {
    let key = pair[0], values = formData.getAll(key);
    data2[key] = values.length > 1 ? values : pair[1];
  }
  let { cartFormInput, ...otherData } = data2, { action: action12, inputs } = cartFormInput ? JSON.parse(String(cartFormInput)) : {};
  return {
    action: action12,
    inputs: {
      ...inputs,
      ...otherData
    }
  };
}
CartForm.getFormInput = getFormInput;
var USER_ERROR_FRAGMENT = `#graphql
  fragment CartApiError on CartUserError {
    message
    field
    code
  }
`, MINIMAL_CART_FRAGMENT = `#graphql
  fragment CartApiMutation on Cart {
    id
    totalQuantity
    checkoutUrl
  }
`;
function cartCreateDefault(options) {
  return async (input, optionalParams) => {
    let buyer = options.customerAccount ? await options.customerAccount.UNSTABLE_getBuyer() : void 0, { cartId, ...restOfOptionalParams } = optionalParams || {}, { buyerIdentity, ...restOfInput } = input, { cartCreate, errors: errors2 } = await options.storefront.mutate(CART_CREATE_MUTATION(options.cartFragment), {
      variables: {
        input: {
          ...restOfInput,
          buyerIdentity: {
            ...buyer,
            ...buyerIdentity
          }
        },
        ...restOfOptionalParams
      }
    });
    return formatAPIResult(cartCreate, errors2);
  };
}
var CART_CREATE_MUTATION = (cartFragment = MINIMAL_CART_FRAGMENT) => `#graphql
  mutation cartCreate(
    $input: CartInput!
    $country: CountryCode = ZZ
    $language: LanguageCode
  ) @inContext(country: $country, language: $language) {
    cartCreate(input: $input) {
      cart {
        ...CartApiMutation
        checkoutUrl
      }
      userErrors {
        ...CartApiError
      }
    }
  }
  ${cartFragment}
  ${USER_ERROR_FRAGMENT}
`;
function cartGetDefault({
  storefront,
  customerAccount,
  getCartId,
  cartFragment
}) {
  return async (cartInput) => {
    let cartId = getCartId();
    if (!cartId)
      return null;
    let [isCustomerLoggedIn, { cart, errors: errors2 }] = await Promise.all(
      [
        customerAccount ? customerAccount.isLoggedIn() : !1,
        storefront.query(CART_QUERY(cartFragment), {
          variables: { cartId, ...cartInput },
          cache: storefront.CacheNone()
        })
      ]
    );
    if (isCustomerLoggedIn && (cart != null && cart.checkoutUrl)) {
      let finalCheckoutUrl = new URL(cart.checkoutUrl);
      finalCheckoutUrl.searchParams.set("logged_in", "true"), cart.checkoutUrl = finalCheckoutUrl.toString();
    }
    return cart || errors2 ? formatAPIResult(cart, errors2) : null;
  };
}
var CART_QUERY = (cartFragment = DEFAULT_CART_FRAGMENT) => `#graphql
  query CartQuery(
    $cartId: ID!
    $numCartLines: Int = 100
    $country: CountryCode = ZZ
    $language: LanguageCode
  ) @inContext(country: $country, language: $language) {
    cart(id: $cartId) {
      ...CartApiQuery
    }
  }

  ${cartFragment}
`, DEFAULT_CART_FRAGMENT = `#graphql
  fragment CartApiQuery on Cart {
    updatedAt
    id
    checkoutUrl
    totalQuantity
    buyerIdentity {
      countryCode
      customer {
        id
        email
        firstName
        lastName
        displayName
      }
      email
      phone
    }
    lines(first: $numCartLines) {
      edges {
        node {
          id
          quantity
          attributes {
            key
            value
          }
          cost {
            totalAmount {
              amount
              currencyCode
            }
            amountPerQuantity {
              amount
              currencyCode
            }
            compareAtAmountPerQuantity {
              amount
              currencyCode
            }
          }
          merchandise {
            ... on ProductVariant {
              id
              availableForSale
              compareAtPrice {
                ...CartApiMoney
              }
              price {
                ...CartApiMoney
              }
              requiresShipping
              title
              image {
                ...CartApiImage
              }
              product {
                handle
                title
                id
                vendor
              }
              selectedOptions {
                name
                value
              }
            }
          }
        }
      }
    }
    cost {
      subtotalAmount {
        ...CartApiMoney
      }
      totalAmount {
        ...CartApiMoney
      }
      totalDutyAmount {
        ...CartApiMoney
      }
      totalTaxAmount {
        ...CartApiMoney
      }
    }
    note
    attributes {
      key
      value
    }
    discountCodes {
      applicable
      code
    }
  }

  fragment CartApiMoney on MoneyV2 {
    currencyCode
    amount
  }

  fragment CartApiImage on Image {
    id
    url
    altText
    width
    height
  }
`;
function cartLinesAddDefault(options) {
  return async (lines, optionalParams) => {
    let { cartLinesAdd, errors: errors2 } = await options.storefront.mutate(CART_LINES_ADD_MUTATION(options.cartFragment), {
      variables: {
        cartId: options.getCartId(),
        lines,
        ...optionalParams
      }
    });
    return formatAPIResult(cartLinesAdd, errors2);
  };
}
var CART_LINES_ADD_MUTATION = (cartFragment = MINIMAL_CART_FRAGMENT) => `#graphql
  mutation cartLinesAdd(
    $cartId: ID!
    $lines: [CartLineInput!]!
    $country: CountryCode = ZZ
    $language: LanguageCode
  ) @inContext(country: $country, language: $language) {
    cartLinesAdd(cartId: $cartId, lines: $lines) {
      cart {
        ...CartApiMutation
      }
      userErrors {
        ...CartApiError
      }
    }
  }

  ${cartFragment}
  ${USER_ERROR_FRAGMENT}
`, PENDING_PREFIX = "__h_pending_";
function isOptimisticLineId(lineId) {
  return lineId.startsWith(PENDING_PREFIX);
}
function throwIfLinesAreOptimistic(type, lines) {
  if (lines.some(
    (line) => isOptimisticLineId(typeof line == "string" ? line : line.id)
  ))
    throw new Error(
      `Tried to perform an action on an optimistic line. Make sure to disable your "${type}" CartForm action when the line is optimistic.`
    );
}
function cartLinesUpdateDefault(options) {
  return async (lines, optionalParams) => {
    throwIfLinesAreOptimistic("updateLines", lines);
    let { cartLinesUpdate, errors: errors2 } = await options.storefront.mutate(CART_LINES_UPDATE_MUTATION(options.cartFragment), {
      variables: {
        cartId: options.getCartId(),
        lines,
        ...optionalParams
      }
    });
    return formatAPIResult(cartLinesUpdate, errors2);
  };
}
var CART_LINES_UPDATE_MUTATION = (cartFragment = MINIMAL_CART_FRAGMENT) => `#graphql
  mutation cartLinesUpdate(
    $cartId: ID!
    $lines: [CartLineUpdateInput!]!
    $language: LanguageCode
    $country: CountryCode
  ) @inContext(country: $country, language: $language) {
    cartLinesUpdate(cartId: $cartId, lines: $lines) {
      cart {
        ...CartApiMutation
      }
      userErrors {
        ...CartApiError
      }
    }
  }

  ${cartFragment}
  ${USER_ERROR_FRAGMENT}
`;
function cartLinesRemoveDefault(options) {
  return async (lineIds, optionalParams) => {
    throwIfLinesAreOptimistic("removeLines", lineIds);
    let { cartLinesRemove, errors: errors2 } = await options.storefront.mutate(CART_LINES_REMOVE_MUTATION(options.cartFragment), {
      variables: {
        cartId: options.getCartId(),
        lineIds,
        ...optionalParams
      }
    });
    return formatAPIResult(cartLinesRemove, errors2);
  };
}
var CART_LINES_REMOVE_MUTATION = (cartFragment = MINIMAL_CART_FRAGMENT) => `#graphql
  mutation cartLinesRemove(
    $cartId: ID!
    $lineIds: [ID!]!
    $language: LanguageCode
    $country: CountryCode
  ) @inContext(country: $country, language: $language) {
    cartLinesRemove(cartId: $cartId, lineIds: $lineIds) {
      cart {
        ...CartApiMutation
      }
      userErrors {
        ...CartApiError
      }
    }
  }

  ${cartFragment}
  ${USER_ERROR_FRAGMENT}
`;
function cartDiscountCodesUpdateDefault(options) {
  return async (discountCodes, optionalParams) => {
    let uniqueCodes = discountCodes.filter((value, index3, array) => array.indexOf(value) === index3), { cartDiscountCodesUpdate, errors: errors2 } = await options.storefront.mutate(CART_DISCOUNT_CODE_UPDATE_MUTATION(options.cartFragment), {
      variables: {
        cartId: options.getCartId(),
        discountCodes: uniqueCodes,
        ...optionalParams
      }
    });
    return formatAPIResult(cartDiscountCodesUpdate, errors2);
  };
}
var CART_DISCOUNT_CODE_UPDATE_MUTATION = (cartFragment = MINIMAL_CART_FRAGMENT) => `#graphql
  mutation cartDiscountCodesUpdate(
    $cartId: ID!
    $discountCodes: [String!]
    $language: LanguageCode
    $country: CountryCode
  ) @inContext(country: $country, language: $language) {
    cartDiscountCodesUpdate(cartId: $cartId, discountCodes: $discountCodes) {
      cart {
        ...CartApiMutation
      }
      userErrors {
        ...CartApiError
      }
    }
  }
  ${cartFragment}
  ${USER_ERROR_FRAGMENT}
`;
function cartGiftCardCodesUpdateDefault(options) {
  return async (giftCardCodes, optionalParams) => {
    let uniqueCodes = giftCardCodes.filter((value, index3, array) => array.indexOf(value) === index3), { cartGiftCardCodesUpdate, errors: errors2 } = await options.storefront.mutate(CART_GIFT_CARD_CODE_UPDATE_MUTATION(options.cartFragment), {
      variables: {
        cartId: options.getCartId(),
        giftCardCodes: uniqueCodes,
        ...optionalParams
      }
    });
    return formatAPIResult(cartGiftCardCodesUpdate, errors2);
  };
}
var CART_GIFT_CARD_CODE_UPDATE_MUTATION = (cartFragment = MINIMAL_CART_FRAGMENT) => `#graphql
  mutation cartGiftCardCodesUpdate(
    $cartId: ID!
    $giftCardCodes: [String!]!
    $language: LanguageCode
    $country: CountryCode
  ) @inContext(country: $country, language: $language) {
    cartGiftCardCodesUpdate(cartId: $cartId, giftCardCodes: $giftCardCodes) {
      cart {
        ...CartApiMutation
      }
      userErrors {
        ...CartApiError
      }
    }
  }
  ${cartFragment}
  ${USER_ERROR_FRAGMENT}
`;
function cartBuyerIdentityUpdateDefault(options) {
  return async (buyerIdentity, optionalParams) => {
    buyerIdentity.companyLocationId && options.customerAccount && options.customerAccount.UNSTABLE_setBuyer({
      companyLocationId: buyerIdentity.companyLocationId
    });
    let buyer = options.customerAccount ? await options.customerAccount.UNSTABLE_getBuyer() : void 0, { cartBuyerIdentityUpdate, errors: errors2 } = await options.storefront.mutate(CART_BUYER_IDENTITY_UPDATE_MUTATION(options.cartFragment), {
      variables: {
        cartId: options.getCartId(),
        buyerIdentity: {
          ...buyer,
          ...buyerIdentity
        },
        ...optionalParams
      }
    });
    return formatAPIResult(cartBuyerIdentityUpdate, errors2);
  };
}
var CART_BUYER_IDENTITY_UPDATE_MUTATION = (cartFragment = MINIMAL_CART_FRAGMENT) => `#graphql
  mutation cartBuyerIdentityUpdate(
    $cartId: ID!
    $buyerIdentity: CartBuyerIdentityInput!
    $language: LanguageCode
    $country: CountryCode
  ) @inContext(country: $country, language: $language) {
    cartBuyerIdentityUpdate(cartId: $cartId, buyerIdentity: $buyerIdentity) {
      cart {
        ...CartApiMutation
      }
      userErrors {
        ...CartApiError
      }
    }
  }
  ${cartFragment}
  ${USER_ERROR_FRAGMENT}
`;
function cartNoteUpdateDefault(options) {
  return async (note, optionalParams) => {
    let { cartNoteUpdate, errors: errors2 } = await options.storefront.mutate(CART_NOTE_UPDATE_MUTATION(options.cartFragment), {
      variables: {
        cartId: options.getCartId(),
        note,
        ...optionalParams
      }
    });
    return formatAPIResult(cartNoteUpdate, errors2);
  };
}
var CART_NOTE_UPDATE_MUTATION = (cartFragment = MINIMAL_CART_FRAGMENT) => `#graphql
  mutation cartNoteUpdate(
    $cartId: ID!
    $note: String!
    $language: LanguageCode
    $country: CountryCode
  ) @inContext(country: $country, language: $language) {
    cartNoteUpdate(cartId: $cartId, note: $note) {
      cart {
        ...CartApiMutation
      }
      userErrors {
        ...CartApiError
      }
    }
  }
  ${cartFragment}
  ${USER_ERROR_FRAGMENT}
`;
function cartSelectedDeliveryOptionsUpdateDefault(options) {
  return async (selectedDeliveryOptions, optionalParams) => {
    let { cartSelectedDeliveryOptionsUpdate, errors: errors2 } = await options.storefront.mutate(CART_SELECTED_DELIVERY_OPTIONS_UPDATE_MUTATION(options.cartFragment), {
      variables: {
        cartId: options.getCartId(),
        selectedDeliveryOptions,
        ...optionalParams
      }
    });
    return formatAPIResult(cartSelectedDeliveryOptionsUpdate, errors2);
  };
}
var CART_SELECTED_DELIVERY_OPTIONS_UPDATE_MUTATION = (cartFragment = MINIMAL_CART_FRAGMENT) => `#graphql
  mutation cartSelectedDeliveryOptionsUpdate(
    $cartId: ID!
    $selectedDeliveryOptions: [CartSelectedDeliveryOptionInput!]!
    $language: LanguageCode
    $country: CountryCode
  ) @inContext(country: $country, language: $language) {
    cartSelectedDeliveryOptionsUpdate(cartId: $cartId, selectedDeliveryOptions: $selectedDeliveryOptions) {
      cart {
        ...CartApiMutation
      }
      userErrors {
        ...CartApiError
      }
    }
  }
  ${cartFragment}
  ${USER_ERROR_FRAGMENT}
`;
function cartAttributesUpdateDefault(options) {
  return async (attributes, optionalParams) => {
    let { cartAttributesUpdate, errors: errors2 } = await options.storefront.mutate(CART_ATTRIBUTES_UPDATE_MUTATION(options.cartFragment), {
      variables: {
        cartId: (optionalParams == null ? void 0 : optionalParams.cartId) || options.getCartId(),
        attributes
      }
    });
    return formatAPIResult(cartAttributesUpdate, errors2);
  };
}
var CART_ATTRIBUTES_UPDATE_MUTATION = (cartFragment = MINIMAL_CART_FRAGMENT) => `#graphql
  mutation cartAttributesUpdate(
    $cartId: ID!
    $attributes: [AttributeInput!]!
  ) {
    cartAttributesUpdate(cartId: $cartId, attributes: $attributes) {
      cart {
        ...CartApiMutation
      }
      userErrors {
        ...CartApiError
      }
    }
  }
  ${cartFragment}
  ${USER_ERROR_FRAGMENT}
`;
function cartMetafieldsSetDefault(options) {
  return async (metafields, optionalParams) => {
    let ownerId = (optionalParams == null ? void 0 : optionalParams.cartId) || options.getCartId(), metafieldsWithOwnerId = metafields.map(
      (metafield) => ({
        ...metafield,
        ownerId
      })
    ), { cartMetafieldsSet, errors: errors2 } = await options.storefront.mutate(CART_METAFIELD_SET_MUTATION(), {
      variables: { metafields: metafieldsWithOwnerId }
    });
    return formatAPIResult(
      {
        cart: {
          id: ownerId
        },
        ...cartMetafieldsSet
      },
      errors2
    );
  };
}
var CART_METAFIELD_SET_MUTATION = () => `#graphql
  mutation cartMetafieldsSet(
    $metafields: [CartMetafieldsSetInput!]!
    $language: LanguageCode
    $country: CountryCode
  ) @inContext(country: $country, language: $language) {
    cartMetafieldsSet(metafields: $metafields) {
      userErrors {
        code
        elementIndex
        field
        message
      }
    }
  }
`;
function cartMetafieldDeleteDefault(options) {
  return async (key, optionalParams) => {
    let ownerId = (optionalParams == null ? void 0 : optionalParams.cartId) || options.getCartId(), { cartMetafieldDelete, errors: errors2 } = await options.storefront.mutate(CART_METAFIELD_DELETE_MUTATION(), {
      variables: {
        input: {
          ownerId,
          key
        }
      }
    });
    return formatAPIResult(
      {
        cart: {
          id: ownerId
        },
        ...cartMetafieldDelete
      },
      errors2
    );
  };
}
var CART_METAFIELD_DELETE_MUTATION = () => `#graphql
  mutation cartMetafieldDelete(
    $input: CartMetafieldDeleteInput!
  ) {
    cartMetafieldDelete(input: $input) {
      userErrors {
        code
        field
        message
      }
    }
  }
`, cartGetIdDefault = (requestHeaders) => {
  let cookies = u(getHeaderValue(requestHeaders, "Cookie") || "");
  return () => cookies.cart ? `gid://shopify/Cart/${cookies.cart}` : void 0;
}, cartSetIdDefault = (cookieOptions) => (cartId) => {
  let headers = new Headers();
  return headers.append(
    "Set-Cookie",
    l("cart", cartId.split("/").pop() || "", {
      path: "/",
      ...cookieOptions
    })
  ), headers;
};
function createCartHandler(options) {
  let {
    getCartId: _getCartId,
    setCartId,
    storefront,
    customerAccount,
    cartQueryFragment,
    cartMutateFragment
  } = options, cartId = _getCartId(), getCartId = () => cartId || _getCartId(), mutateOptions = {
    storefront,
    getCartId,
    cartFragment: cartMutateFragment,
    customerAccount
  }, _cartCreate = cartCreateDefault(mutateOptions), cartCreate = async function(...args) {
    var _a2;
    let result = await _cartCreate(...args);
    return cartId = (_a2 = result == null ? void 0 : result.cart) == null ? void 0 : _a2.id, result;
  }, methods = {
    get: cartGetDefault({
      storefront,
      customerAccount,
      getCartId,
      cartFragment: cartQueryFragment
    }),
    getCartId,
    setCartId,
    create: cartCreate,
    addLines: async (linesWithOptimisticData, optionalParams) => {
      let lines = linesWithOptimisticData.map((line) => ({
        attributes: line.attributes,
        quantity: line.quantity,
        merchandiseId: line.merchandiseId,
        sellingPlanId: line.sellingPlanId
      }));
      return cartId || optionalParams != null && optionalParams.cartId ? await cartLinesAddDefault(mutateOptions)(lines, optionalParams) : await cartCreate({ lines }, optionalParams);
    },
    updateLines: cartLinesUpdateDefault(mutateOptions),
    removeLines: cartLinesRemoveDefault(mutateOptions),
    updateDiscountCodes: async (discountCodes, optionalParams) => cartId || optionalParams != null && optionalParams.cartId ? await cartDiscountCodesUpdateDefault(mutateOptions)(
      discountCodes,
      optionalParams
    ) : await cartCreate({ discountCodes }, optionalParams),
    updateGiftCardCodes: async (giftCardCodes, optionalParams) => cartId || optionalParams != null && optionalParams.cartId ? await cartGiftCardCodesUpdateDefault(mutateOptions)(
      giftCardCodes,
      optionalParams
    ) : await cartCreate({ giftCardCodes }, optionalParams),
    updateBuyerIdentity: async (buyerIdentity, optionalParams) => cartId || optionalParams != null && optionalParams.cartId ? await cartBuyerIdentityUpdateDefault(mutateOptions)(
      buyerIdentity,
      optionalParams
    ) : await cartCreate({ buyerIdentity }, optionalParams),
    updateNote: async (note, optionalParams) => cartId || optionalParams != null && optionalParams.cartId ? await cartNoteUpdateDefault(mutateOptions)(note, optionalParams) : await cartCreate({ note }, optionalParams),
    updateSelectedDeliveryOption: cartSelectedDeliveryOptionsUpdateDefault(mutateOptions),
    updateAttributes: async (attributes, optionalParams) => cartId || optionalParams != null && optionalParams.cartId ? await cartAttributesUpdateDefault(mutateOptions)(
      attributes,
      optionalParams
    ) : await cartCreate({ attributes }, optionalParams),
    setMetafields: async (metafields, optionalParams) => cartId || optionalParams != null && optionalParams.cartId ? await cartMetafieldsSetDefault(mutateOptions)(
      metafields,
      optionalParams
    ) : await cartCreate({ metafields }, optionalParams),
    deleteMetafield: cartMetafieldDeleteDefault(mutateOptions)
  };
  return "customMethods" in options ? {
    ...methods,
    ...options.customMethods ?? {}
  } : methods;
}
function VariantSelector({
  handle,
  options = [],
  variants: _variants = [],
  productPath = "products",
  waitForNavigation = !1,
  children
}) {
  let variants = _variants instanceof Array ? _variants : flattenConnection(_variants), { searchParams, path, alreadyOnProductPage } = useVariantPath(
    handle,
    productPath,
    waitForNavigation
  ), optionsWithOnlyOneValue = options.filter(
    (option) => {
      var _a2;
      return ((_a2 = option == null ? void 0 : option.values) == null ? void 0 : _a2.length) === 1;
    }
  );
  return (0, import_react7.createElement)(
    import_react7.Fragment,
    null,
    ...(0, import_react7.useMemo)(() => options.map((option) => {
      let activeValue, availableValues = [];
      for (let value of option.values) {
        let clonedSearchParams = new URLSearchParams(
          alreadyOnProductPage ? searchParams : void 0
        );
        clonedSearchParams.set(option.name, value), optionsWithOnlyOneValue.forEach((option2) => {
          clonedSearchParams.set(option2.name, option2.values[0]);
        });
        let variant = variants.find(
          (variant2) => {
            var _a2;
            return (_a2 = variant2 == null ? void 0 : variant2.selectedOptions) == null ? void 0 : _a2.every(
              (selectedOption) => clonedSearchParams.get(selectedOption == null ? void 0 : selectedOption.name) === (selectedOption == null ? void 0 : selectedOption.value)
            );
          }
        ), currentParam = searchParams.get(option.name), calculatedActiveValue = currentParam ? (
          // If a URL parameter exists for the current option, check if it equals the current value
          currentParam === value
        ) : !1;
        calculatedActiveValue && (activeValue = value);
        let searchString = "?" + clonedSearchParams.toString();
        availableValues.push({
          value,
          isAvailable: variant ? variant.availableForSale : !0,
          to: path + searchString,
          search: searchString,
          isActive: calculatedActiveValue,
          variant
        });
      }
      return children({
        option: {
          name: option.name,
          value: activeValue,
          values: availableValues
        }
      });
    }), [options, variants, children])
  );
}
var getSelectedProductOptions = (request) => {
  if (typeof (request == null ? void 0 : request.url) > "u")
    throw new TypeError(`Expected a Request instance, got ${typeof request}`);
  let searchParams = new URL(request.url).searchParams, selectedOptions = [];
  return searchParams.forEach((value, name) => {
    selectedOptions.push({ name, value });
  }), selectedOptions;
};
function useVariantPath(handle, productPath, waitForNavigation) {
  let { pathname, search } = useLocation(), navigation = useNavigation();
  return (0, import_react7.useMemo)(() => {
    let match = /(\/[a-zA-Z]{2}-[a-zA-Z]{2}\/)/g.exec(pathname), isLocalePathname = match && match.length > 0;
    productPath = productPath.startsWith("/") ? productPath.substring(1) : productPath;
    let path = isLocalePathname ? `${match[0]}${productPath}/${handle}` : `/${productPath}/${handle}`;
    return {
      searchParams: new URLSearchParams(
        // Remix doesn't update the location until pending loaders complete.
        // By default we use the destination search params to make selecting a variant
        // instant, but `waitForNavigation` makes the UI wait to update by only using
        // the active browser search params.
        waitForNavigation || navigation.state !== "loading" ? search : navigation.location.search
      ),
      // If the current pathname matches the product page, we need to make sure
      // that we append to the current search params. Otherwise all the search
      // params can be generated new.
      alreadyOnProductPage: path === pathname,
      path
    };
  }, [pathname, search, waitForNavigation, handle, productPath, navigation]);
}
var NonceContext = (0, import_react7.createContext)(void 0), NonceProvider = NonceContext.Provider, useNonce = () => (0, import_react7.useContext)(NonceContext);
var Script = (0, import_react7.forwardRef)(
  (props, ref) => {
    let { waitForHydration, src, ...rest } = props;
    if (waitForHydration)
      return /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(LazyScript, { src, options: rest });
    let nonce = useNonce();
    return /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
      "script",
      {
        suppressHydrationWarning: !0,
        ...rest,
        src,
        nonce,
        ref
      }
    );
  }
);
function LazyScript({
  src,
  options
}) {
  if (!src)
    throw new Error(
      "`waitForHydration` with the Script component requires a `src` prop"
    );
  return useLoadScript(src, {
    attributes: options
  }), null;
}
var defaultAnalyticsContext = {
  canTrack: () => !1,
  cart: null,
  customData: {},
  prevCart: null,
  publish: () => {
  },
  shop: null,
  subscribe: () => {
  },
  register: () => ({ ready: () => {
  } }),
  customerPrivacy: null,
  privacyBanner: null
}, AnalyticsContext = (0, import_react7.createContext)(
  defaultAnalyticsContext
);

// app/components/Search.jsx
var import_react10 = __toESM(require_react());
var import_jsx_dev_runtime4 = __toESM(require_jsx_dev_runtime()), NO_PREDICTIVE_SEARCH_RESULTS = [
  { type: "queries", items: [] },
  { type: "products", items: [] },
  { type: "collections", items: [] },
  { type: "pages", items: [] },
  { type: "articles", items: [] }
];
function SearchForm({ searchTerm }) {
  let inputRef = (0, import_react10.useRef)(null);
  return (0, import_react10.useEffect)(() => {
    function handleKeyDown(event) {
      var _a2, _b;
      event.key === "k" && event.metaKey && (event.preventDefault(), (_a2 = inputRef.current) == null || _a2.focus()), event.key === "Escape" && ((_b = inputRef.current) == null || _b.blur());
    }
    return document.addEventListener("keydown", handleKeyDown), () => {
      document.removeEventListener("keydown", handleKeyDown);
    };
  }, []), /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)(Form, { method: "get", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)(
      "input",
      {
        defaultValue: searchTerm,
        name: "q",
        placeholder: "Search\u2026",
        ref: inputRef,
        type: "search"
      },
      void 0,
      !1,
      {
        fileName: "app/components/Search.jsx",
        lineNumber: 37,
        columnNumber: 7
      },
      this
    ),
    "\xA0",
    /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("button", { type: "submit", children: "Search from custom" }, void 0, !1, {
      fileName: "app/components/Search.jsx",
      lineNumber: 45,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/Search.jsx",
    lineNumber: 36,
    columnNumber: 5
  }, this);
}
function SearchResults({ results: results2 }) {
  if (!results2)
    return null;
  let keys2 = Object.keys(results2);
  return console.log(results2), /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("div", { children: results2 && keys2.map((type) => {
    var _a2, _b, _c;
    let resourceResults = results2[type];
    if (((_a2 = resourceResults.nodes[0]) == null ? void 0 : _a2.__typename) === "Page") {
      let pageResults = resourceResults;
      return resourceResults.nodes.length ? /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)(SearchResultPageGrid, { pages: pageResults }, "pages", !1, {
        fileName: "app/components/Search.jsx",
        lineNumber: 65,
        columnNumber: 15
      }, this) : null;
    }
    if (((_b = resourceResults.nodes[0]) == null ? void 0 : _b.__typename) === "Product") {
      let productResults = resourceResults;
      return resourceResults.nodes.length ? /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)(
        SearchResultsProductsGrid,
        {
          products: productResults
        },
        "products",
        !1,
        {
          fileName: "app/components/Search.jsx",
          lineNumber: 72,
          columnNumber: 15
        },
        this
      ) : null;
    }
    if (((_c = resourceResults.nodes[0]) == null ? void 0 : _c.__typename) === "Article") {
      let articleResults = resourceResults;
      return resourceResults.nodes.length ? /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)(
        SearchResultArticleGrid,
        {
          articles: articleResults
        },
        "articles",
        !1,
        {
          fileName: "app/components/Search.jsx",
          lineNumber: 82,
          columnNumber: 15
        },
        this
      ) : null;
    }
    return null;
  }) }, void 0, !1, {
    fileName: "app/components/Search.jsx",
    lineNumber: 57,
    columnNumber: 5
  }, this);
}
function SearchResultsProductsGrid({ products: products2 }) {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("div", { className: "search-result", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("h3", { children: "Products" }, void 0, !1, {
      fileName: "app/components/Search.jsx",
      lineNumber: 98,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)(Pagination, { connection: products2, children: ({ nodes, isLoading, NextLink, PreviousLink }) => {
      let itemsMarkup = nodes.map((product) => /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("div", { className: "search-results-item", children: /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)(Link2, { prefetch: "intent", to: `/products/${product.handle}`, children: /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("span", { children: product.title }, void 0, !1, {
        fileName: "app/components/Search.jsx",
        lineNumber: 104,
        columnNumber: 17
      }, this) }, void 0, !1, {
        fileName: "app/components/Search.jsx",
        lineNumber: 103,
        columnNumber: 15
      }, this) }, product.id, !1, {
        fileName: "app/components/Search.jsx",
        lineNumber: 102,
        columnNumber: 13
      }, this));
      return /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("div", { children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("div", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)(PreviousLink, { children: isLoading ? "Loading..." : /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("span", { children: "\u2191 Load previous" }, void 0, !1, {
          fileName: "app/components/Search.jsx",
          lineNumber: 112,
          columnNumber: 47
        }, this) }, void 0, !1, {
          fileName: "app/components/Search.jsx",
          lineNumber: 111,
          columnNumber: 17
        }, this) }, void 0, !1, {
          fileName: "app/components/Search.jsx",
          lineNumber: 110,
          columnNumber: 15
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("div", { children: [
          itemsMarkup,
          /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("br", {}, void 0, !1, {
            fileName: "app/components/Search.jsx",
            lineNumber: 117,
            columnNumber: 17
          }, this)
        ] }, void 0, !0, {
          fileName: "app/components/Search.jsx",
          lineNumber: 115,
          columnNumber: 15
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("div", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)(NextLink, { children: isLoading ? "Loading..." : /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("span", { children: "Load more \u2193" }, void 0, !1, {
          fileName: "app/components/Search.jsx",
          lineNumber: 121,
          columnNumber: 47
        }, this) }, void 0, !1, {
          fileName: "app/components/Search.jsx",
          lineNumber: 120,
          columnNumber: 17
        }, this) }, void 0, !1, {
          fileName: "app/components/Search.jsx",
          lineNumber: 119,
          columnNumber: 15
        }, this)
      ] }, void 0, !0, {
        fileName: "app/components/Search.jsx",
        lineNumber: 109,
        columnNumber: 13
      }, this);
    } }, void 0, !1, {
      fileName: "app/components/Search.jsx",
      lineNumber: 99,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("br", {}, void 0, !1, {
      fileName: "app/components/Search.jsx",
      lineNumber: 128,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/Search.jsx",
    lineNumber: 97,
    columnNumber: 5
  }, this);
}
function SearchResultPageGrid({ pages }) {
  var _a2;
  return /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("div", { className: "search-result", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("h2", { children: "Pages" }, void 0, !1, {
      fileName: "app/components/Search.jsx",
      lineNumber: 136,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("div", { children: (_a2 = pages == null ? void 0 : pages.nodes) == null ? void 0 : _a2.map((page) => /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("div", { className: "search-results-item", children: /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)(Link2, { prefetch: "intent", to: `/pages/${page.handle}`, children: page.title }, void 0, !1, {
      fileName: "app/components/Search.jsx",
      lineNumber: 140,
      columnNumber: 13
    }, this) }, page.id, !1, {
      fileName: "app/components/Search.jsx",
      lineNumber: 139,
      columnNumber: 11
    }, this)) }, void 0, !1, {
      fileName: "app/components/Search.jsx",
      lineNumber: 137,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("br", {}, void 0, !1, {
      fileName: "app/components/Search.jsx",
      lineNumber: 146,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/Search.jsx",
    lineNumber: 135,
    columnNumber: 5
  }, this);
}
function SearchResultArticleGrid({ articles }) {
  var _a2;
  return /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("div", { className: "search-result", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("h2", { children: "Articles" }, void 0, !1, {
      fileName: "app/components/Search.jsx",
      lineNumber: 154,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("div", { children: (_a2 = articles == null ? void 0 : articles.nodes) == null ? void 0 : _a2.map((article) => /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("div", { className: "search-results-item", children: /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)(Link2, { prefetch: "intent", to: `/blog/${article.handle}`, children: article.title }, void 0, !1, {
      fileName: "app/components/Search.jsx",
      lineNumber: 158,
      columnNumber: 13
    }, this) }, article.id, !1, {
      fileName: "app/components/Search.jsx",
      lineNumber: 157,
      columnNumber: 11
    }, this)) }, void 0, !1, {
      fileName: "app/components/Search.jsx",
      lineNumber: 155,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("br", {}, void 0, !1, {
      fileName: "app/components/Search.jsx",
      lineNumber: 164,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/Search.jsx",
    lineNumber: 153,
    columnNumber: 5
  }, this);
}
function NoSearchResults() {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("div", { children: "No results, try a different search." }, void 0, !1, {
    fileName: "app/components/Search.jsx",
    lineNumber: 170,
    columnNumber: 10
  }, this);
}
function PredictiveSearchForm({
  action: action12,
  children,
  className = "predictive-search-form",
  method = "POST",
  ...props
}) {
  let params = useParams(), fetcher = useFetcher2(), inputRef = (0, import_react10.useRef)(null);
  function fetchResults(event) {
    let searchAction = action12 ?? "/api/predictive-search", localizedAction = params.locale ? `/${params.locale}${searchAction}` : searchAction, newSearchTerm = event.target.value || "";
    fetcher.submit(
      { q: newSearchTerm, limit: "6" },
      { method, action: localizedAction }
    );
  }
  return (0, import_react10.useEffect)(() => {
    var _a2;
    (_a2 = inputRef == null ? void 0 : inputRef.current) == null || _a2.setAttribute("type", "search");
  }, []), /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)(
    fetcher.Form,
    {
      ...props,
      className,
      onSubmit: (event) => {
        event.preventDefault(), event.stopPropagation(), !(!(inputRef != null && inputRef.current) || inputRef.current.value === "") && inputRef.current.blur();
      },
      children: children({ fetchResults, inputRef, fetcher })
    },
    void 0,
    !1,
    {
      fileName: "app/components/Search.jsx",
      lineNumber: 206,
      columnNumber: 5
    },
    this
  );
}
function PredictiveSearchResults() {
  let { results: results2, totalResults, searchInputRef, searchTerm } = usePredictiveSearch();
  function goToSearchResult(event) {
    searchInputRef.current && (searchInputRef.current.blur(), searchInputRef.current.value = "", window.location.href = event.currentTarget.href);
  }
  return totalResults ? /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("div", { className: "predictive-search-results w-[270px] lg:w-[470px] absolute right-0", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("div", { children: results2.map(({ type, items }) => /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)(
      PredictiveSearchResult,
      {
        goToSearchResult,
        items,
        searchTerm,
        type
      },
      type,
      !1,
      {
        fileName: "app/components/Search.jsx",
        lineNumber: 242,
        columnNumber: 11
      },
      this
    )) }, void 0, !1, {
      fileName: "app/components/Search.jsx",
      lineNumber: 240,
      columnNumber: 7
    }, this),
    searchTerm.current && /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)(Link2, { onClick: goToSearchResult, to: `/search?q=${searchTerm.current}`, children: /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("div", { children: [
      "View all results for ",
      /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("q", { children: searchTerm.current }, void 0, !1, {
        fileName: "app/components/Search.jsx",
        lineNumber: 255,
        columnNumber: 34
      }, this),
      "\xA0 \u2192"
    ] }, void 0, !0, {
      fileName: "app/components/Search.jsx",
      lineNumber: 254,
      columnNumber: 11
    }, this) }, void 0, !1, {
      fileName: "app/components/Search.jsx",
      lineNumber: 253,
      columnNumber: 9
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/Search.jsx",
    lineNumber: 239,
    columnNumber: 5
  }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)(import_jsx_dev_runtime4.Fragment, {}, void 0, !1, {
    fileName: "app/components/Search.jsx",
    lineNumber: 236,
    columnNumber: 12
  }, this);
}
function PredictiveSearchResult({ goToSearchResult, items, searchTerm, type }) {
  let isSuggestions = type === "queries", categoryUrl = `/search?q=${searchTerm.current}&type=${pluralToSingularSearchType(type)}`;
  return /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("div", { className: "predictive-search-result", children: /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("ul", { children: items.map((item) => /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)(
    SearchResultItem,
    {
      goToSearchResult,
      item
    },
    item.id,
    !1,
    {
      fileName: "app/components/Search.jsx",
      lineNumber: 288,
      columnNumber: 11
    },
    this
  )) }, void 0, !1, {
    fileName: "app/components/Search.jsx",
    lineNumber: 286,
    columnNumber: 7
  }, this) }, type, !1, {
    fileName: "app/components/Search.jsx",
    lineNumber: 282,
    columnNumber: 5
  }, this);
}
function SearchResultItem({ goToSearchResult, item }) {
  var _a2;
  return /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("li", { className: "predictive-search-result-item", children: /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)(Link2, { onClick: goToSearchResult, to: item.url, children: [
    ((_a2 = item.image) == null ? void 0 : _a2.url) && /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)(
      Image,
      {
        alt: item.image.altText ?? "",
        src: item.image.url,
        width: 50,
        height: 50
      },
      void 0,
      !1,
      {
        fileName: "app/components/Search.jsx",
        lineNumber: 304,
        columnNumber: 11
      },
      this
    ),
    /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("div", { children: [
      item.styledTitle ? /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)(
        "div",
        {
          dangerouslySetInnerHTML: {
            __html: item.styledTitle
          }
        },
        void 0,
        !1,
        {
          fileName: "app/components/Search.jsx",
          lineNumber: 313,
          columnNumber: 13
        },
        this
      ) : /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("span", { children: item.title }, void 0, !1, {
        fileName: "app/components/Search.jsx",
        lineNumber: 319,
        columnNumber: 13
      }, this),
      (item == null ? void 0 : item.price) && /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)("small", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime4.jsxDEV)(Money, { data: item.price }, void 0, !1, {
        fileName: "app/components/Search.jsx",
        lineNumber: 323,
        columnNumber: 15
      }, this) }, void 0, !1, {
        fileName: "app/components/Search.jsx",
        lineNumber: 322,
        columnNumber: 13
      }, this)
    ] }, void 0, !0, {
      fileName: "app/components/Search.jsx",
      lineNumber: 311,
      columnNumber: 9
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/Search.jsx",
    lineNumber: 302,
    columnNumber: 7
  }, this) }, item.id, !1, {
    fileName: "app/components/Search.jsx",
    lineNumber: 301,
    columnNumber: 5
  }, this);
}
function usePredictiveSearch() {
  var _a2, _b;
  let fetchers = useFetchers2(), searchTerm = (0, import_react10.useRef)(""), searchInputRef = (0, import_react10.useRef)(null), searchFetcher = fetchers.find((fetcher) => {
    var _a3;
    return (_a3 = fetcher.data) == null ? void 0 : _a3.searchResults;
  });
  (searchFetcher == null ? void 0 : searchFetcher.state) === "loading" && (searchTerm.current = ((_a2 = searchFetcher.formData) == null ? void 0 : _a2.get("q")) || "");
  let search = ((_b = searchFetcher == null ? void 0 : searchFetcher.data) == null ? void 0 : _b.searchResults) || {
    results: NO_PREDICTIVE_SEARCH_RESULTS,
    totalResults: 0
  };
  return (0, import_react10.useEffect)(() => {
    searchInputRef.current || (searchInputRef.current = document.querySelector('input[type="search"]'));
  }, []), { ...search, searchInputRef, searchTerm };
}
function pluralToSingularSearchType(type) {
  let plural = {
    articles: "ARTICLE",
    collections: "COLLECTION",
    pages: "PAGE",
    products: "PRODUCT",
    queries: "QUERY"
  };
  return typeof type == "string" ? plural[type] : type.map((t18) => plural[t18]).join(",");
}

// app/components/Header.jsx
var import_jsx_dev_runtime5 = __toESM(require_jsx_dev_runtime());
function Header({ header, isLoggedIn, cart }) {
  let { shop, menu } = header, isLargeScreen = (0, import_react_responsive.useMediaQuery)({ minWidth: 1024 });
  return /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(import_jsx_dev_runtime5.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("header", { className: "header border-b border-gray-200 sm:mt-0", children: /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("div", { className: "w-full grid grid-rows-2 items-center sm:grid-rows-1 grid-flow-col gap-0 sm:gap-4", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("div", { className: "m-auto sm:flex", children: /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("div", { className: "relative flex w-full", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("div", { className: "logo flex w-1/3", children: /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(NavLink2, { className: "flex items-center", prefetch: "intent", to: "/", style: activeLinkStyle, end: !0, children: /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("img", { className: "w-[16rem] sm:mb-0 h-[20px] sm:h-[100%] mst_mobile_img", src: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/New_MJK_Logo_png.png?v=1714388036" }, void 0, !1, {
          fileName: "app/components/Header.jsx",
          lineNumber: 22,
          columnNumber: 19
        }, this) }, void 0, !1, {
          fileName: "app/components/Header.jsx",
          lineNumber: 21,
          columnNumber: 17
        }, this) }, void 0, !1, {
          fileName: "app/components/Header.jsx",
          lineNumber: 20,
          columnNumber: 15
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("div", { className: "rounded w-full w-2/3 ml-2 sm:ml-4", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(PredictiveSearchForm, { children: ({ fetchResults, inputRef }) => /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("div", { className: " ", children: /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("div", { style: { backgroundColor: "#000" }, className: "relative flex w-full items-center justify-end", children: [
            /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(
              "input",
              {
                type: "search",
                className: "search relative w-48 sm:h-[50px] h-[40px] sm:w-[320px] md:w-[400px] lg:w-[470px] m-0 py-[10px] px-[15px] block rounded-bl-lg rounded-tl-lg border bg-transparent bg-clip-padding  text-base font-normal leading-[1.6] outline-none transition duration-200 ease-in-out focus:z-[3] focus:border-primary focus:text-white mst-color focus:outline-none dark:focus:border-primary mst-card",
                "aria-label": "Search",
                "aria-describedby": "button-addon3",
                name: "q",
                onChange: fetchResults,
                onFocus: fetchResults,
                placeholder: "Mary Jo K",
                ref: inputRef
              },
              void 0,
              !1,
              {
                fileName: "app/components/Header.jsx",
                lineNumber: 30,
                columnNumber: 25
              },
              this
            ),
            /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("img", { className: "absolute right-2 h-[25px] w-[25px]", src: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/search_icon_91210688-67e5-46ef-bdb0-5552bfc77b0b.png?v=1713174297", alt: "search" }, void 0, !1, {
              fileName: "app/components/Header.jsx",
              lineNumber: 41,
              columnNumber: 25
            }, this),
            /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(De, {}, void 0, !1, {
              fileName: "app/components/Header.jsx",
              lineNumber: 42,
              columnNumber: 25
            }, this)
          ] }, void 0, !0, {
            fileName: "app/components/Header.jsx",
            lineNumber: 29,
            columnNumber: 23
          }, this) }, void 0, !1, {
            fileName: "app/components/Header.jsx",
            lineNumber: 28,
            columnNumber: 21
          }, this) }, void 0, !1, {
            fileName: "app/components/Header.jsx",
            lineNumber: 26,
            columnNumber: 17
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(PredictiveSearchResults, {}, void 0, !1, {
            fileName: "app/components/Header.jsx",
            lineNumber: 55,
            columnNumber: 17
          }, this)
        ] }, void 0, !0, {
          fileName: "app/components/Header.jsx",
          lineNumber: 25,
          columnNumber: 15
        }, this)
      ] }, void 0, !0, {
        fileName: "app/components/Header.jsx",
        lineNumber: 19,
        columnNumber: 13
      }, this) }, void 0, !1, {
        fileName: "app/components/Header.jsx",
        lineNumber: 18,
        columnNumber: 11
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("div", { className: "sm:flex gap-2 items-center sm:block hidden", children: /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(NavLink2, { prefetch: "intent", to: "/account", style: activeLinkStyle, children: isLoggedIn ? /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(import_jsx_dev_runtime5.Fragment, {}, void 0, !1, {
        fileName: "app/components/Header.jsx",
        lineNumber: 65,
        columnNumber: 14
      }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("div", { className: "inline-flex", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 24 24",
            fill: "currentColor",
            className: "w-6 h-6",
            children: /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(
              "path",
              {
                fillRule: "evenodd",
                d: "M18.685 19.097A9.723 9.723 0 0021.75 12c0-5.385-4.365-9.75-9.75-9.75S2.25 6.615 2.25 12a9.723 9.723 0 003.065 7.097A9.716 9.716 0 0012 21.75a9.716 9.716 0 006.685-2.653zm-12.54-1.285A7.486 7.486 0 0112 15a7.486 7.486 0 015.855 2.812A8.224 8.224 0 0112 20.25a8.224 8.224 0 01-5.855-2.438zM15.75 9a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z",
                clipRule: "evenodd"
              },
              void 0,
              !1,
              {
                fileName: "app/components/Header.jsx",
                lineNumber: 74,
                columnNumber: 19
              },
              this
            )
          },
          void 0,
          !1,
          {
            fileName: "app/components/Header.jsx",
            lineNumber: 68,
            columnNumber: 17
          },
          this
        ),
        /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("span", { className: "login_span font-semibold mt-[-3px] ", children: "Login/Register" }, void 0, !1, {
          fileName: "app/components/Header.jsx",
          lineNumber: 80,
          columnNumber: 15
        }, this)
      ] }, void 0, !0, {
        fileName: "app/components/Header.jsx",
        lineNumber: 67,
        columnNumber: 15
      }, this) }, void 0, !1, {
        fileName: "app/components/Header.jsx",
        lineNumber: 63,
        columnNumber: 11
      }, this) }, void 0, !1, {
        fileName: "app/components/Header.jsx",
        lineNumber: 61,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(HeaderCtas, { isLoggedIn, cart }, void 0, !1, {
        fileName: "app/components/Header.jsx",
        lineNumber: 85,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/components/Header.jsx",
      lineNumber: 16,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/components/Header.jsx",
      lineNumber: 15,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(HeaderMenu, { menu, viewport: "desktop" }, void 0, !1, {
      fileName: "app/components/Header.jsx",
      lineNumber: 88,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/Header.jsx",
    lineNumber: 14,
    columnNumber: 5
  }, this);
}
function HeaderMenu({ menu, viewport }) {
  var _a2;
  let [root] = useMatches2(), publicStoreDomain = (_a2 = root == null ? void 0 : root.data) == null ? void 0 : _a2.publicStoreDomain, className = `header-menu-${viewport} z-10`;
  function closeAside(event) {
    viewport === "mobile" && (event.preventDefault(), window.location.href = event.currentTarget.href);
  }
  function getPath(url_path) {
    return new URL(url_path).pathname;
  }
  function goToCollection(url_path) {
    let url = getPath(url_path);
    window.location.href = url;
  }
  return /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("nav", { className, role: "navigation", children: [
    viewport === "mobile" && /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(
      NavLink2,
      {
        end: !0,
        onClick: closeAside,
        prefetch: "intent",
        style: activeLinkStyle,
        to: "/"
      },
      void 0,
      !1,
      {
        fileName: "app/components/Header.jsx",
        lineNumber: 119,
        columnNumber: 9
      },
      this
    ),
    menu.items.map((item, index3) => {
      if (!item.url)
        return null;
      let url = item.url.includes("myshopify.com") || item.url.includes(publicStoreDomain) ? new URL(item.url).pathname : item.url;
      return /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("div", { className: "relative inline-block text-left group", children: [
        viewport === "mobile" ? /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("button", { className: "px-4 py-2 text-gray-800 focus:outline-none", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("span", { onClick: () => goToCollection(item.url), children: item.title }, void 0, !1, {
            fileName: "app/components/Header.jsx",
            lineNumber: 140,
            columnNumber: 17
          }, this),
          viewport === "mobile" && /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(import_jsx_dev_runtime5.Fragment, { children: item.items.length > 0 && /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("svg", { style: { display: "inline" }, height: "24", viewBox: "0 0 48 48", width: "24", xmlns: "http://www.w3.org/2000/svg", children: [
            /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("path", { d: "M14 20l10 10 10-10z" }, void 0, !1, {
              fileName: "app/components/Header.jsx",
              lineNumber: 144,
              columnNumber: 160
            }, this),
            /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("path", { d: "M0 0h48v48h-48z", fill: "none" }, void 0, !1, {
              fileName: "app/components/Header.jsx",
              lineNumber: 144,
              columnNumber: 191
            }, this)
          ] }, void 0, !0, {
            fileName: "app/components/Header.jsx",
            lineNumber: 144,
            columnNumber: 50
          }, this) }, void 0, !1, {
            fileName: "app/components/Header.jsx",
            lineNumber: 144,
            columnNumber: 21
          }, this)
        ] }, void 0, !0, {
          fileName: "app/components/Header.jsx",
          lineNumber: 138,
          columnNumber: 15
        }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("button", { onClick: () => goToCollection(item.url), className: "px-4 py-2 text-gray-800 focus:outline-none", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("span", { onClick: () => goToCollection(item.url), children: [
            " ",
            item.title,
            " "
          ] }, void 0, !0, {
            fileName: "app/components/Header.jsx",
            lineNumber: 150,
            columnNumber: 18
          }, this),
          viewport === "mobile" && /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("svg", { style: { display: "inline" }, height: "24", viewBox: "0 0 48 48", width: "24", xmlns: "http://www.w3.org/2000/svg", children: [
            /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("path", { d: "M14 20l10 10 10-10z" }, void 0, !1, {
              fileName: "app/components/Header.jsx",
              lineNumber: 152,
              columnNumber: 131
            }, this),
            /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("path", { d: "M0 0h48v48h-48z", fill: "none" }, void 0, !1, {
              fileName: "app/components/Header.jsx",
              lineNumber: 152,
              columnNumber: 162
            }, this)
          ] }, void 0, !0, {
            fileName: "app/components/Header.jsx",
            lineNumber: 152,
            columnNumber: 21
          }, this)
        ] }, void 0, !0, {
          fileName: "app/components/Header.jsx",
          lineNumber: 149,
          columnNumber: 15
        }, this),
        item.items.length > 0 && /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("div", { className: "absolute left-16 z-20 sm:left-0 sm:z-20 md:left-0 hidden w-48 bg-white border border-gray-300 divide-y divide-gray-200 rounded-lg shadow-lg group-hover:block", children: /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("div", { className: "py-1 group-hover:block", children: item.items.map((it2, index4) => /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(
          "a",
          {
            href: getPath(it2.url),
            className: "menu block px-4 py-2 text-gray-800 hover:bg-gray-100 group-hover:block hover:opacity-100",
            children: it2.title
          },
          `menu_${index4}`,
          !1,
          {
            fileName: "app/components/Header.jsx",
            lineNumber: 162,
            columnNumber: 21
          },
          this
        )) }, void 0, !1, {
          fileName: "app/components/Header.jsx",
          lineNumber: 160,
          columnNumber: 17
        }, this) }, void 0, !1, {
          fileName: "app/components/Header.jsx",
          lineNumber: 159,
          columnNumber: 15
        }, this)
      ] }, `header_${index3}`, !0, {
        fileName: "app/components/Header.jsx",
        lineNumber: 136,
        columnNumber: 11
      }, this);
    })
  ] }, void 0, !0, {
    fileName: "app/components/Header.jsx",
    lineNumber: 117,
    columnNumber: 5
  }, this);
}
function HeaderCtas({ isLoggedIn, cart }) {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("nav", { className: "header-ctas", role: "navigation", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(NavLink2, { prefetch: "intent", to: "/account", style: activeLinkStyle, children: isLoggedIn ? /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        fill: "#d0715f",
        className: "w-6 h-6 block",
        children: /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(
          "path",
          {
            fillRule: "evenodd",
            d: "M18.685 19.097A9.723 9.723 0 0021.75 12c0-5.385-4.365-9.75-9.75-9.75S2.25 6.615 2.25 12a9.723 9.723 0 003.065 7.097A9.716 9.716 0 0012 21.75a9.716 9.716 0 006.685-2.653zm-12.54-1.285A7.486 7.486 0 0112 15a7.486 7.486 0 015.855 2.812A8.224 8.224 0 0112 20.25a8.224 8.224 0 01-5.855-2.438zM15.75 9a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z",
            clipRule: "evenodd"
          },
          void 0,
          !1,
          {
            fileName: "app/components/Header.jsx",
            lineNumber: 191,
            columnNumber: 11
          },
          this
        )
      },
      void 0,
      !1,
      {
        fileName: "app/components/Header.jsx",
        lineNumber: 185,
        columnNumber: 11
      },
      this
    ) : /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        fill: "#d0715f",
        className: "w-6 h-6 sm:hidden block",
        children: /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(
          "path",
          {
            fillRule: "evenodd",
            d: "M18.685 19.097A9.723 9.723 0 0021.75 12c0-5.385-4.365-9.75-9.75-9.75S2.25 6.615 2.25 12a9.723 9.723 0 003.065 7.097A9.716 9.716 0 0012 21.75a9.716 9.716 0 006.685-2.653zm-12.54-1.285A7.486 7.486 0 0112 15a7.486 7.486 0 015.855 2.812A8.224 8.224 0 0112 20.25a8.224 8.224 0 01-5.855-2.438zM15.75 9a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z",
            clipRule: "evenodd"
          },
          void 0,
          !1,
          {
            fileName: "app/components/Header.jsx",
            lineNumber: 204,
            columnNumber: 13
          },
          this
        )
      },
      void 0,
      !1,
      {
        fileName: "app/components/Header.jsx",
        lineNumber: 198,
        columnNumber: 11
      },
      this
    ) }, void 0, !1, {
      fileName: "app/components/Header.jsx",
      lineNumber: 183,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(SearchToggle, {}, void 0, !1, {
      fileName: "app/components/Header.jsx",
      lineNumber: 212,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(CartToggle, { cart }, void 0, !1, {
      fileName: "app/components/Header.jsx",
      lineNumber: 213,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(HeaderMenuMobileToggle, {}, void 0, !1, {
      fileName: "app/components/Header.jsx",
      lineNumber: 214,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/Header.jsx",
    lineNumber: 181,
    columnNumber: 5
  }, this);
}
function HeaderMenuMobileToggle() {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("a", { className: "header-menu-mobile-toggle text-[#d0715f]", href: "#mobile-menu-aside", children: /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("h3", { children: "\u2630" }, void 0, !1, {
    fileName: "app/components/Header.jsx",
    lineNumber: 222,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/components/Header.jsx",
    lineNumber: 221,
    columnNumber: 5
  }, this);
}
function SearchToggle() {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("a", { href: "#search-aside", children: /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      fill: "none",
      viewBox: "0 0 24 24",
      strokeWidth: "1.5",
      stroke: "#d0715f",
      className: "w-6 h-6",
      children: /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(
        "path",
        {
          strokeLinecap: "round",
          strokeLinejoin: "round",
          d: "M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z"
        },
        void 0,
        !1,
        {
          fileName: "app/components/Header.jsx",
          lineNumber: 238,
          columnNumber: 9
        },
        this
      )
    },
    void 0,
    !1,
    {
      fileName: "app/components/Header.jsx",
      lineNumber: 230,
      columnNumber: 7
    },
    this
  ) }, void 0, !1, {
    fileName: "app/components/Header.jsx",
    lineNumber: 229,
    columnNumber: 5
  }, this);
}
function CartBadge({ count }) {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(import_jsx_dev_runtime5.Fragment, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("a", { href: "#cart-aside", className: "relative", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(
      "svg",
      {
        xmlns: "http://www.w3.org/2000/svg",
        fill: "none",
        viewBox: "0 0 24 24",
        strokeWidth: "1.5",
        stroke: "#d0715f",
        className: "w-6 h-6",
        children: /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(
          "path",
          {
            strokeLinecap: "round",
            strokeLinejoin: "round",
            d: "M2.25 3h1.386c.51 0 .955.343 1.087.835l.383 1.437M7.5 14.25a3 3 0 00-3 3h15.75m-12.75-3h11.218c1.121-2.3 2.1-4.684 2.924-7.138a60.114 60.114 0 00-16.536-1.84M7.5 14.25L5.106 5.272M6 20.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm12.75 0a.75.75 0 11-1.5 0 .75.75 0 011.5 0z"
          },
          void 0,
          !1,
          {
            fileName: "app/components/Header.jsx",
            lineNumber: 261,
            columnNumber: 9
          },
          this
        )
      },
      void 0,
      !1,
      {
        fileName: "app/components/Header.jsx",
        lineNumber: 253,
        columnNumber: 7
      },
      this
    ),
    count > 0 && /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)("span", { className: "absolute cart_counter top-[-5px] right-[-10px]", children: count }, void 0, !1, {
      fileName: "app/components/Header.jsx",
      lineNumber: 267,
      columnNumber: 22
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/Header.jsx",
    lineNumber: 252,
    columnNumber: 5
  }, this) }, void 0, !1, {
    fileName: "app/components/Header.jsx",
    lineNumber: 251,
    columnNumber: 5
  }, this);
}
function CartToggle({ cart }) {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(import_react13.Suspense, { fallback: /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(CartBadge, { count: 0 }, void 0, !1, {
    fileName: "app/components/Header.jsx",
    lineNumber: 278,
    columnNumber: 25
  }, this), children: /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(Await2, { resolve: cart, children: (cart2) => cart2 ? /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(CartBadge, { count: cart2.totalQuantity || 0 }, void 0, !1, {
    fileName: "app/components/Header.jsx",
    lineNumber: 282,
    columnNumber: 18
  }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime5.jsxDEV)(CartBadge, { count: 0 }, void 0, !1, {
    fileName: "app/components/Header.jsx",
    lineNumber: 281,
    columnNumber: 29
  }, this) }, void 0, !1, {
    fileName: "app/components/Header.jsx",
    lineNumber: 279,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/components/Header.jsx",
    lineNumber: 278,
    columnNumber: 5
  }, this);
}
function activeLinkStyle({ isActive, isPending }) {
  return {
    fontWeight: isActive ? "bold" : "",
    color: isPending ? "grey" : "#d0715f"
  };
}

// app/utils.js
var import_react15 = __toESM(require_react());
function useVariantUrl(handle, selectedOptions) {
  let { pathname } = useLocation();
  return (0, import_react15.useMemo)(() => getVariantUrl({
    handle,
    pathname,
    searchParams: new URLSearchParams(),
    selectedOptions
  }), [handle, selectedOptions, pathname]);
}
function getVariantUrl({
  handle,
  pathname,
  searchParams,
  selectedOptions
}) {
  let match = /(\/[a-zA-Z]{2}-[a-zA-Z]{2}\/)/g.exec(pathname), path = match && match.length > 0 ? `${match[0]}products/${handle}` : `/products/${handle}`;
  selectedOptions.forEach((option) => {
    searchParams.set(option.name, option.value);
  });
  let searchString = searchParams.toString();
  return path + (searchString ? "?" + searchParams.toString() : "");
}

// app/components/Cart.jsx
var import_react_ga4 = __toESM(require_dist()), import_jsx_dev_runtime6 = __toESM(require_jsx_dev_runtime()), TRACKING_ID = "G-T3JX7QEBFV";
import_react_ga4.default.initialize(TRACKING_ID);
function CartMain({ layout, cart }) {
  var _a2, _b;
  let linesCount = Boolean(((_b = (_a2 = cart == null ? void 0 : cart.lines) == null ? void 0 : _a2.nodes) == null ? void 0 : _b.length) || 0), className = `cart-main ${cart && Boolean(cart.discountCodes.filter((code) => code.applicable).length) ? "with-discount" : ""}`;
  return /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("div", { className, children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(CartEmpty, { hidden: linesCount, layout }, void 0, !1, {
      fileName: "app/components/Cart.jsx",
      lineNumber: 17,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(CartDetails, { cart, layout }, void 0, !1, {
      fileName: "app/components/Cart.jsx",
      lineNumber: 18,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/Cart.jsx",
    lineNumber: 16,
    columnNumber: 5
  }, this);
}
function CartDetails({ layout, cart }) {
  let cartHasItems = !!cart && cart.totalQuantity > 0;
  return /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("div", { className: "cart-details", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(CartLines, { lines: cart == null ? void 0 : cart.lines, layout }, void 0, !1, {
      fileName: "app/components/Cart.jsx",
      lineNumber: 27,
      columnNumber: 7
    }, this),
    cartHasItems && /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(CartSummary, { cost: cart.cost, layout, children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(CartDiscounts, { discountCodes: cart.discountCodes }, void 0, !1, {
        fileName: "app/components/Cart.jsx",
        lineNumber: 30,
        columnNumber: 11
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(CartCheckoutActions, { cartHasItems, checkoutUrl: cart.checkoutUrl }, void 0, !1, {
        fileName: "app/components/Cart.jsx",
        lineNumber: 31,
        columnNumber: 11
      }, this)
    ] }, void 0, !0, {
      fileName: "app/components/Cart.jsx",
      lineNumber: 29,
      columnNumber: 9
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/Cart.jsx",
    lineNumber: 26,
    columnNumber: 5
  }, this);
}
function CartLines({ lines, layout }) {
  return lines ? /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("div", { "aria-labelledby": "cart-lines", children: /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("ul", { children: lines.nodes.map((line) => /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(CartLineItem, { line, layout }, line.id, !1, {
    fileName: "app/components/Cart.jsx",
    lineNumber: 45,
    columnNumber: 11
  }, this)) }, void 0, !1, {
    fileName: "app/components/Cart.jsx",
    lineNumber: 43,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/components/Cart.jsx",
    lineNumber: 42,
    columnNumber: 5
  }, this) : null;
}
function CartLineItem({ layout, line }) {
  let { id, merchandise } = line, { product, title, image, selectedOptions } = merchandise, lineItemUrl = useVariantUrl(product.handle, selectedOptions);
  return /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("li", { className: "cart-line", children: [
    image && /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(
      Image,
      {
        alt: title,
        aspectRatio: "1/1",
        data: image,
        height: 100,
        loading: "lazy",
        width: 100
      },
      void 0,
      !1,
      {
        fileName: "app/components/Cart.jsx",
        lineNumber: 60,
        columnNumber: 9
      },
      this
    ),
    /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("div", { className: "w-[100%]", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(
        Link2,
        {
          prefetch: "intent",
          to: lineItemUrl,
          onClick: () => {
            layout === "aside" && (window.location.href = lineItemUrl);
          },
          children: /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("p", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("strong", { children: product.title.toLowerCase().split(" ").map((s15) => s15.charAt(0).toUpperCase() + s15.substring(1)).join(" ") }, void 0, !1, {
            fileName: "app/components/Cart.jsx",
            lineNumber: 82,
            columnNumber: 13
          }, this) }, void 0, !1, {
            fileName: "app/components/Cart.jsx",
            lineNumber: 81,
            columnNumber: 11
          }, this)
        },
        void 0,
        !1,
        {
          fileName: "app/components/Cart.jsx",
          lineNumber: 71,
          columnNumber: 9
        },
        this
      ),
      /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(CartLinePrice, { line, as: "span" }, void 0, !1, {
        fileName: "app/components/Cart.jsx",
        lineNumber: 91,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("ul", { className: "", children: selectedOptions.map((option) => /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("li", { className: "py-2", children: /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("div", { className: "flex font-semibold text-md", children: option.value !== "Default Title" && /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(import_jsx_dev_runtime6.Fragment, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(
        "span",
        {
          className: "inline-flex items-center px-2.5 py-0.5 rounded-full leading-4 text-blue-800",
          dangerouslySetInnerHTML: { __html: option.value }
        },
        void 0,
        !1,
        {
          fileName: "app/components/Cart.jsx",
          lineNumber: 98,
          columnNumber: 19
        },
        this
      ) }, void 0, !1, {
        fileName: "app/components/Cart.jsx",
        lineNumber: 97,
        columnNumber: 17
      }, this) }, void 0, !1, {
        fileName: "app/components/Cart.jsx",
        lineNumber: 95,
        columnNumber: 15
      }, this) }, option.name, !1, {
        fileName: "app/components/Cart.jsx",
        lineNumber: 94,
        columnNumber: 13
      }, this)) }, void 0, !1, {
        fileName: "app/components/Cart.jsx",
        lineNumber: 92,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(CartLineQuantity, { line }, void 0, !1, {
        fileName: "app/components/Cart.jsx",
        lineNumber: 109,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/components/Cart.jsx",
      lineNumber: 70,
      columnNumber: 7
    }, this)
  ] }, id, !0, {
    fileName: "app/components/Cart.jsx",
    lineNumber: 58,
    columnNumber: 5
  }, this);
}
function CartCheckoutActions({ checkoutUrl, cartHasItems }) {
  let checkout = () => {
    import_react_ga4.default.event({
      category: "purchase",
      action: "purchase"
    }), console.log("cartHasItems::", cartHasItems, typeof cartHasItems), cartHasItems ? window.open(checkoutUrl, "_self") : window.open("/collections/all-products", "_self");
  };
  return /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("div", { className: "mt-2", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("a", { href: "#", onClick: () => checkout(), children: /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("p", { className: "checkout bg-black text-white text-center p-[10px] rounded", children: "Continue to Checkout \u2192" }, void 0, !1, {
      fileName: "app/components/Cart.jsx",
      lineNumber: 133,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/components/Cart.jsx",
      lineNumber: 132,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("br", {}, void 0, !1, {
      fileName: "app/components/Cart.jsx",
      lineNumber: 137,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/Cart.jsx",
    lineNumber: 131,
    columnNumber: 5
  }, this);
}
function CartSummary({ cost, layout, children = null }) {
  var _a2;
  return /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("div", { "aria-labelledby": "cart-summary", className: layout === "page" ? "cart-summary-page px-2" : "cart-summary-aside", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("dl", { className: "cart-subtotal flex", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("dt", { children: "Subtotal : \xA0" }, void 0, !1, {
        fileName: "app/components/Cart.jsx",
        lineNumber: 150,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("dd", { children: (_a2 = cost == null ? void 0 : cost.subtotalAmount) != null && _a2.amount ? /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(Money, { data: cost == null ? void 0 : cost.subtotalAmount }, void 0, !1, {
        fileName: "app/components/Cart.jsx",
        lineNumber: 153,
        columnNumber: 13
      }, this) : "-" }, void 0, !1, {
        fileName: "app/components/Cart.jsx",
        lineNumber: 151,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/components/Cart.jsx",
      lineNumber: 149,
      columnNumber: 7
    }, this),
    children
  ] }, void 0, !0, {
    fileName: "app/components/Cart.jsx",
    lineNumber: 147,
    columnNumber: 5
  }, this);
}
function CartLineRemoveButton({ lineIds }) {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("div", { className: "flex justify-end", children: /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(
    CartForm,
    {
      className: "w-full",
      route: "/cart",
      action: CartForm.ACTIONS.LinesRemove,
      inputs: { lineIds },
      children: /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("button", { type: "submit text-[#fa4a0b] ", className: "flex justify-end", children: /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("img", { src: "/delete.png", alt: "delete", width: 22, height: 22 }, void 0, !1, {
        fileName: "app/components/Cart.jsx",
        lineNumber: 174,
        columnNumber: 9
      }, this) }, void 0, !1, {
        fileName: "app/components/Cart.jsx",
        lineNumber: 173,
        columnNumber: 7
      }, this)
    },
    void 0,
    !1,
    {
      fileName: "app/components/Cart.jsx",
      lineNumber: 167,
      columnNumber: 5
    },
    this
  ) }, void 0, !1, {
    fileName: "app/components/Cart.jsx",
    lineNumber: 166,
    columnNumber: 5
  }, this);
}
function CartLineQuantity({ line }) {
  if (!line || typeof (line == null ? void 0 : line.quantity) > "u")
    return null;
  let { id: lineId, quantity } = line, prevQuantity = Number(Math.max(0, quantity - 1).toFixed(0)), nextQuantity = Number((quantity + 1).toFixed(0));
  return /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("div", { className: "cart-line-quantiy items-center", children: /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("div", { className: "flex w-full items-center", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("div", { className: "flex w-full", children: /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("div", { className: "quantity", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(
        CartLineUpdateButton,
        {
          lines: [{ id: lineId, quantity: prevQuantity }],
          children: /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(
            "button",
            {
              "aria-label": "Decrease quantity",
              disabled: quantity <= 1,
              name: "decrease-quantity",
              value: prevQuantity,
              children: /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("span", { children: "\u2212 " }, void 0, !1, {
                fileName: "app/components/Cart.jsx",
                lineNumber: 202,
                columnNumber: 17
              }, this)
            },
            void 0,
            !1,
            {
              fileName: "app/components/Cart.jsx",
              lineNumber: 196,
              columnNumber: 15
            },
            this
          )
        },
        void 0,
        !1,
        {
          fileName: "app/components/Cart.jsx",
          lineNumber: 193,
          columnNumber: 13
        },
        this
      ),
      /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("span", { children: quantity }, void 0, !1, {
        fileName: "app/components/Cart.jsx",
        lineNumber: 205,
        columnNumber: 13
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(
        CartLineUpdateButton,
        {
          lines: [{ id: lineId, quantity: nextQuantity }],
          children: /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(
            "button",
            {
              "aria-label": "Increase quantity",
              name: "increase-quantity",
              value: nextQuantity,
              children: /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("span", { children: "+" }, void 0, !1, {
                fileName: "app/components/Cart.jsx",
                lineNumber: 214,
                columnNumber: 17
              }, this)
            },
            void 0,
            !1,
            {
              fileName: "app/components/Cart.jsx",
              lineNumber: 209,
              columnNumber: 15
            },
            this
          )
        },
        void 0,
        !1,
        {
          fileName: "app/components/Cart.jsx",
          lineNumber: 206,
          columnNumber: 13
        },
        this
      )
    ] }, void 0, !0, {
      fileName: "app/components/Cart.jsx",
      lineNumber: 192,
      columnNumber: 11
    }, this) }, void 0, !1, {
      fileName: "app/components/Cart.jsx",
      lineNumber: 191,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(CartLineRemoveButton, { lineIds: [lineId] }, void 0, !1, {
      fileName: "app/components/Cart.jsx",
      lineNumber: 220,
      columnNumber: 9
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/Cart.jsx",
    lineNumber: 190,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/components/Cart.jsx",
    lineNumber: 188,
    columnNumber: 5
  }, this);
}
function CartLinePrice({ line, priceType = "regular", ...passthroughProps }) {
  var _a2, _b;
  if (!((_a2 = line == null ? void 0 : line.cost) != null && _a2.amountPerQuantity) || !((_b = line == null ? void 0 : line.cost) != null && _b.totalAmount))
    return null;
  let moneyV2 = priceType === "regular" ? line.cost.totalAmount : line.cost.compareAtAmountPerQuantity;
  return moneyV2 == null ? null : /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("div", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(Money, { withoutTrailingZeros: !0, ...passthroughProps, data: moneyV2 }, void 0, !1, {
    fileName: "app/components/Cart.jsx",
    lineNumber: 240,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/components/Cart.jsx",
    lineNumber: 239,
    columnNumber: 5
  }, this);
}
function CartEmpty({ hidden = !1, layout = "aside" }) {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("div", { className: "flex justify-center", "data-hidden": hidden, hidden, children: !hidden && /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("div", { className: "flex-col flex justify-center", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("div", { className: "w-full flex justify-center", children: /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("img", { className: "empty_cart_img", alt: "empty_cart", src: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/Cartdekstop.png?v=1709018650" }, void 0, !1, {
      fileName: "app/components/Cart.jsx",
      lineNumber: 251,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/components/Cart.jsx",
      lineNumber: 250,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("div", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("p", { children: " Looks like you haven\u2019t added anything yet, let\u2019s get you started!" }, void 0, !1, {
        fileName: "app/components/Cart.jsx",
        lineNumber: 254,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("br", {}, void 0, !1, {
        fileName: "app/components/Cart.jsx",
        lineNumber: 257,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(
        "button",
        {
          className: "w-[100%] h-11 bg-black text-white",
          onClick: () => {
            layout === "aside" && (window.location.href = "/collections/all-products");
          },
          children: "Continue shopping"
        },
        void 0,
        !1,
        {
          fileName: "app/components/Cart.jsx",
          lineNumber: 258,
          columnNumber: 9
        },
        this
      )
    ] }, void 0, !0, {
      fileName: "app/components/Cart.jsx",
      lineNumber: 253,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/Cart.jsx",
    lineNumber: 249,
    columnNumber: 5
  }, this) }, void 0, !1, {
    fileName: "app/components/Cart.jsx",
    lineNumber: 247,
    columnNumber: 5
  }, this);
}
function CartDiscounts({ discountCodes }) {
  var _a2;
  let codes = ((_a2 = discountCodes == null ? void 0 : discountCodes.filter((discount) => discount.applicable)) == null ? void 0 : _a2.map(({ code }) => code)) || [];
  return /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("div", { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("dl", { hidden: !codes.length, children: /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("div", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("dt", { children: "Discount(s)" }, void 0, !1, {
        fileName: "app/components/Cart.jsx",
        lineNumber: 286,
        columnNumber: 11
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(UpdateDiscountForm, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("div", { className: "cart-discount", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("code", { children: codes == null ? void 0 : codes.join(", ") }, void 0, !1, {
          fileName: "app/components/Cart.jsx",
          lineNumber: 289,
          columnNumber: 15
        }, this),
        "\xA0",
        /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("button", { children: "Remove" }, void 0, !1, {
          fileName: "app/components/Cart.jsx",
          lineNumber: 291,
          columnNumber: 15
        }, this)
      ] }, void 0, !0, {
        fileName: "app/components/Cart.jsx",
        lineNumber: 288,
        columnNumber: 13
      }, this) }, void 0, !1, {
        fileName: "app/components/Cart.jsx",
        lineNumber: 287,
        columnNumber: 11
      }, this)
    ] }, void 0, !0, {
      fileName: "app/components/Cart.jsx",
      lineNumber: 285,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/components/Cart.jsx",
      lineNumber: 284,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(UpdateDiscountForm, { discountCodes: codes, children: /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("div", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)("input", { type: "text", name: "discountCode", placeholder: "Discount code" }, void 0, !1, {
        fileName: "app/components/Cart.jsx",
        lineNumber: 300,
        columnNumber: 11
      }, this),
      "\xA0",
      /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(
        "button",
        {
          type: "submit text-[#fa4a0b]",
          className: "text-white bg-[#f48580] p-[8px] rounded",
          children: "Apply"
        },
        void 0,
        !1,
        {
          fileName: "app/components/Cart.jsx",
          lineNumber: 302,
          columnNumber: 11
        },
        this
      )
    ] }, void 0, !0, {
      fileName: "app/components/Cart.jsx",
      lineNumber: 299,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/components/Cart.jsx",
      lineNumber: 298,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/Cart.jsx",
    lineNumber: 282,
    columnNumber: 5
  }, this);
}
function UpdateDiscountForm({ discountCodes, children }) {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(
    CartForm,
    {
      route: "/cart",
      action: CartForm.ACTIONS.DiscountCodesUpdate,
      inputs: {
        discountCodes: discountCodes || []
      },
      children
    },
    void 0,
    !1,
    {
      fileName: "app/components/Cart.jsx",
      lineNumber: 316,
      columnNumber: 5
    },
    this
  );
}
function CartLineUpdateButton({ children, lines }) {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime6.jsxDEV)(
    CartForm,
    {
      route: "/cart",
      action: CartForm.ACTIONS.LinesUpdate,
      inputs: { lines },
      children
    },
    void 0,
    !1,
    {
      fileName: "app/components/Cart.jsx",
      lineNumber: 330,
      columnNumber: 5
    },
    this
  );
}

// app/components/AnnouncemnetBar.jsx
var import_react17 = __toESM(require_react()), import_jsx_dev_runtime7 = __toESM(require_jsx_dev_runtime()), AnnouncementBar = () => /* @__PURE__ */ (0, import_jsx_dev_runtime7.jsxDEV)(
  "div",
  {
    className: "text-center",
    style: { backgroundColor: "#010101", color: "#fff", padding: "8px 5px 5px" },
    children: "Choose Your Makeup Cult Now !"
  },
  void 0,
  !1,
  {
    fileName: "app/components/AnnouncemnetBar.jsx",
    lineNumber: 5,
    columnNumber: 5
  },
  this
), AnnouncemnetBar_default = AnnouncementBar;

// app/components/ImageCarousel.jsx
var import_react20 = __toESM(require_react());

// node_modules/react-icons/lib/esm/iconBase.js
var import_react19 = __toESM(require_react());

// node_modules/react-icons/lib/esm/iconContext.js
var import_react18 = __toESM(require_react()), DefaultContext = {
  color: void 0,
  size: void 0,
  className: void 0,
  style: void 0,
  attr: void 0
}, IconContext = import_react18.default.createContext && import_react18.default.createContext(DefaultContext);

// node_modules/react-icons/lib/esm/iconBase.js
var __assign = function() {
  return __assign = Object.assign || function(t18) {
    for (var s15, i7 = 1, n7 = arguments.length; i7 < n7; i7++) {
      s15 = arguments[i7];
      for (var p7 in s15)
        Object.prototype.hasOwnProperty.call(s15, p7) && (t18[p7] = s15[p7]);
    }
    return t18;
  }, __assign.apply(this, arguments);
}, __rest = function(s15, e5) {
  var t18 = {};
  for (var p7 in s15)
    Object.prototype.hasOwnProperty.call(s15, p7) && e5.indexOf(p7) < 0 && (t18[p7] = s15[p7]);
  if (s15 != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i7 = 0, p7 = Object.getOwnPropertySymbols(s15); i7 < p7.length; i7++)
      e5.indexOf(p7[i7]) < 0 && Object.prototype.propertyIsEnumerable.call(s15, p7[i7]) && (t18[p7[i7]] = s15[p7[i7]]);
  return t18;
};
function Tree2Element(tree) {
  return tree && tree.map(function(node, i7) {
    return import_react19.default.createElement(node.tag, __assign({
      key: i7
    }, node.attr), Tree2Element(node.child));
  });
}
function GenIcon(data2) {
  return function(props) {
    return import_react19.default.createElement(IconBase, __assign({
      attr: __assign({}, data2.attr)
    }, props), Tree2Element(data2.child));
  };
}
function IconBase(props) {
  var elem = function(conf) {
    var attr = props.attr, size = props.size, title = props.title, svgProps = __rest(props, ["attr", "size", "title"]), computedSize = size || conf.size || "1em", className;
    return conf.className && (className = conf.className), props.className && (className = (className ? className + " " : "") + props.className), import_react19.default.createElement("svg", __assign({
      stroke: "currentColor",
      fill: "currentColor",
      strokeWidth: "0"
    }, conf.attr, attr, svgProps, {
      className,
      style: __assign(__assign({
        color: props.color || conf.color
      }, conf.style), props.style),
      height: computedSize,
      width: computedSize,
      xmlns: "http://www.w3.org/2000/svg"
    }), title && import_react19.default.createElement("title", null, title), props.children);
  };
  return IconContext !== void 0 ? import_react19.default.createElement(IconContext.Consumer, null, function(conf) {
    return elem(conf);
  }) : elem(DefaultContext);
}

// node_modules/react-icons/md/index.esm.js
function MdChevronLeft(props) {
  return GenIcon({ tag: "svg", attr: { viewBox: "0 0 24 24" }, child: [{ tag: "path", attr: { fill: "none", d: "M0 0h24v24H0z" } }, { tag: "path", attr: { d: "M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z" } }] })(props);
}
function MdChevronRight(props) {
  return GenIcon({ tag: "svg", attr: { viewBox: "0 0 24 24" }, child: [{ tag: "path", attr: { fill: "none", d: "M0 0h24v24H0z" } }, { tag: "path", attr: { d: "M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" } }] })(props);
}

// app/components/ImageCarousel.jsx
var import_react_responsive2 = __toESM(require_react_responsive()), import_react_slick = __toESM(require_lib()), import_jsx_dev_runtime8 = __toESM(require_jsx_dev_runtime()), ImageCarousel = () => {
  let isSmall = (0, import_react_responsive2.useMediaQuery)({ maxWidth: 640 });
  var imageSrc = [];
  let goToCollection = (url) => {
    window.location.href = url;
  };
  var imageSrc = [];
  isSmall ? imageSrc = [
    {
      img: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/mobile_Hero_Banners_1.jpg?v=1715767503",
      url: "/collections/cult-accessories"
    },
    {
      img: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/mobile_Hero_Banners_2.jpg?v=1713353171",
      url: "/collections/way-2-slay-mjk"
    },
    {
      img: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/mobile_Hero_Banners_4.jpg?v=1715944487",
      url: "/collections/rizz-roll-mjk"
    },
    {
      img: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/pro_studio_mobile_banner_3_700_x_470.jpg?v=1715944382",
      url: "collections/pro-studio-mjk"
    }
  ] : imageSrc = [
    {
      img: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/desktop_banner_1.jpg?v=1715767477",
      url: "/collections/cult-accessories"
    },
    {
      img: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/desktop_banner_3.jpg?v=1713342905",
      url: "/collections/way-2-slay-mjk"
    },
    {
      img: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/desktop_banner_2.jpg?v=1715944709",
      url: "/collections/rizz-roll-mjk"
    },
    {
      img: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/pro_studio__banner_5_opt_2.jpg?v=1714388254",
      url: "collections/pro-studio-mjk"
    }
  ];
  function PrevArrow(props) {
    let { onClick } = props;
    return /* @__PURE__ */ (0, import_jsx_dev_runtime8.jsxDEV)(
      "button",
      {
        className: "absolute top-1/2 z-10 transform -translate-y-1/2  bg-opacity-75 rounded-full p-2 ml-4 hover:bg-opacity-100 text-white",
        onClick,
        children: /* @__PURE__ */ (0, import_jsx_dev_runtime8.jsxDEV)(
          MdChevronLeft,
          {
            className: "opacity-50 cursor-pointer hover:opacity-100 mst-arrow",
            size: 40
          },
          void 0,
          !1,
          {
            fileName: "app/components/ImageCarousel.jsx",
            lineNumber: 54,
            columnNumber: 9
          },
          this
        )
      },
      void 0,
      !1,
      {
        fileName: "app/components/ImageCarousel.jsx",
        lineNumber: 51,
        columnNumber: 7
      },
      this
    );
  }
  function NextArrow(props) {
    let { onClick } = props;
    return /* @__PURE__ */ (0, import_jsx_dev_runtime8.jsxDEV)(
      "button",
      {
        className: "absolute right-0 top-1/2 transform -translate-y-1/2 bg-opacity-75 rounded-full p-2 mr-4 hover:bg-opacity-100 text-white",
        onClick,
        children: /* @__PURE__ */ (0, import_jsx_dev_runtime8.jsxDEV)(
          MdChevronRight,
          {
            className: "opacity-50 cursor-pointer hover:opacity-100 mst-arrow",
            size: 40
          },
          void 0,
          !1,
          {
            fileName: "app/components/ImageCarousel.jsx",
            lineNumber: 69,
            columnNumber: 11
          },
          this
        )
      },
      void 0,
      !1,
      {
        fileName: "app/components/ImageCarousel.jsx",
        lineNumber: 65,
        columnNumber: 7
      },
      this
    );
  }
  return /* @__PURE__ */ (0, import_jsx_dev_runtime8.jsxDEV)("div", { className: "relative", children: /* @__PURE__ */ (0, import_jsx_dev_runtime8.jsxDEV)(import_react_slick.default, { ...{
    infinite: !0,
    speed: 500,
    initialSlide: isSmall ? 1 : 0,
    slidesToShow: 1,
    slidesToScroll: 1,
    autoplay: !0,
    autoplaySpeed: 3500,
    cssEase: "linear",
    nextArrow: /* @__PURE__ */ (0, import_jsx_dev_runtime8.jsxDEV)(NextArrow, {}, void 0, !1, {
      fileName: "app/components/ImageCarousel.jsx",
      lineNumber: 85,
      columnNumber: 16
    }, this),
    prevArrow: /* @__PURE__ */ (0, import_jsx_dev_runtime8.jsxDEV)(PrevArrow, {}, void 0, !1, {
      fileName: "app/components/ImageCarousel.jsx",
      lineNumber: 86,
      columnNumber: 16
    }, this),
    responsive: [
      {
        breakpoint: 1024,
        settings: {
          slidesToShow: 1,
          slidesToScroll: 3,
          infinite: !0,
          dots: !0
        }
      },
      {
        breakpoint: 600,
        settings: {
          slidesToShow: 1,
          slidesToScroll: 1,
          initialSlide: 1,
          dots: !0
        }
      },
      {
        breakpoint: 520,
        settings: {
          slidesToShow: 1,
          slidesToScroll: 1,
          dots: !0
        }
      }
    ]
  }, children: imageSrc.map((item, index3) => /* @__PURE__ */ (0, import_jsx_dev_runtime8.jsxDEV)(
    "img",
    {
      onClick: () => goToCollection(item.url),
      className: `lg:w-full md:w-full cursor-pointer sm:w-full object-cover ${isSmall ? "rounded-2xl" : ""} w-[100%]`,
      src: item.img
    },
    `img_crsll_${index3}`,
    !1,
    {
      fileName: "app/components/ImageCarousel.jsx",
      lineNumber: 122,
      columnNumber: 15
    },
    this
  )) }, void 0, !1, {
    fileName: "app/components/ImageCarousel.jsx",
    lineNumber: 119,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/components/ImageCarousel.jsx",
    lineNumber: 118,
    columnNumber: 5
  }, this);
}, ImageCarousel_default = ImageCarousel;

// app/components/ProductCarousel.jsx
var import_react21 = __toESM(require_react());
var import_react_responsive3 = __toESM(require_react_responsive()), import_react_slick2 = __toESM(require_lib());
var import_react_ga42 = __toESM(require_dist()), import_jsx_dev_runtime9 = __toESM(require_jsx_dev_runtime()), TRACKING_ID2 = "G-T3JX7QEBFV";
import_react_ga42.default.initialize(TRACKING_ID2);
var ProductCarousel = ({ products: products2 }) => {
  let noImg = "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/No-image-found.jpg?v=1708942129", productsToShow = [], lines = [];
  var len = products2.edges.length;
  let eIndex = (0, import_react_responsive3.useMediaQuery)({ minWidth: 1024 }) ? len < 4 ? len : 4 : 2;
  productsToShow = products2;
  let calculatePer = (original_price, disc_price) => {
    let price = Math.trunc(original_price), compareAtPrice = Math.trunc(disc_price), per = (compareAtPrice - price) / compareAtPrice * 100;
    return Math.trunc(per);
  };
  products2.edges.map((product) => {
    product.node.variants.edges.map((line) => {
      line.node.availableForSale && lines.push([
        {
          merchandiseId: line.node.id,
          quantity: 1
        }
      ]);
    });
  });
  let goToProduct = (url_path) => {
    window.location.href = url_path;
  };
  function SamplePrevArrow(props) {
    let { onClick } = props;
    return /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)(
      "button",
      {
        className: "absolute z-10 lg:left-[-90px] top-1/2 transform -translate-y-1/2  bg-white bg-opacity-75 rounded-full p-2 ml-4 hover:bg-opacity-100 z-4 text-white",
        onClick,
        children: /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)(
          MdChevronLeft,
          {
            className: "opacity-50 cursor-pointer hover:opacity-100 mst-arrow",
            size: 40
          },
          void 0,
          !1,
          {
            fileName: "app/components/ProductCarousel.jsx",
            lineNumber: 57,
            columnNumber: 9
          },
          this
        )
      },
      void 0,
      !1,
      {
        fileName: "app/components/ProductCarousel.jsx",
        lineNumber: 54,
        columnNumber: 7
      },
      this
    );
  }
  let cartAct = () => {
    import_react_ga42.default.event({
      hitType: "BuyNow",
      category: "Cart Action",
      action: "Click",
      label: "platform"
    }), window.location.href = window.location.href + "#cart-aside";
  };
  function SampleNextArrow(props) {
    let { onClick } = props;
    return /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)(
      "button",
      {
        className: "absolute lg:right-[-90px] right-0 top-1/2 transform -translate-y-1/2  bg-white bg-opacity-75 rounded-full p-2 mr-4 hover:bg-opacity-100 text-white",
        onClick,
        children: /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)(
          MdChevronRight,
          {
            className: "opacity-50 cursor-pointer hover:opacity-100 mst-arrow",
            size: 40
          },
          void 0,
          !1,
          {
            fileName: "app/components/ProductCarousel.jsx",
            lineNumber: 82,
            columnNumber: 9
          },
          this
        )
      },
      void 0,
      !1,
      {
        fileName: "app/components/ProductCarousel.jsx",
        lineNumber: 78,
        columnNumber: 7
      },
      this
    );
  }
  return /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)("div", { className: "recommended_section w-full max-w-screen-xl mx-auto lg:px-24 sm:px-4 md:px-6", children: /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)("div", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)(import_react_slick2.default, { ...{
    infinite: !0,
    dots: !1,
    speed: 500,
    slidesToShow: eIndex,
    slidesToScroll: 1,
    nextArrow: /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)(SampleNextArrow, {}, void 0, !1, {
      fileName: "app/components/ProductCarousel.jsx",
      lineNumber: 96,
      columnNumber: 15
    }, this),
    prevArrow: /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)(SamplePrevArrow, {}, void 0, !1, {
      fileName: "app/components/ProductCarousel.jsx",
      lineNumber: 97,
      columnNumber: 16
    }, this),
    responsive: [
      {
        breakpoint: 1024,
        settings: {
          slidesToShow: eIndex,
          slidesToScroll: 3,
          infinite: !0,
          dots: !0
        }
      },
      {
        breakpoint: 600,
        settings: {
          slidesToShow: eIndex,
          slidesToScroll: eIndex,
          initialSlide: 1,
          dots: !0
        }
      },
      {
        breakpoint: 520,
        settings: {
          slidesToShow: 2,
          slidesToScroll: 1,
          dots: !0
        }
      }
    ]
  }, children: productsToShow.edges.map((product, index3) => {
    var _a2, _b, _c;
    return /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)("div", { className: "w-full", children: /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)("div", { className: "bg-white mst-card rounded-lg shadow-lg mx-2 p-1 sm:p-2 ", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)("div", { className: "cursor", onClick: () => goToProduct(`/products/${product.node.handle}`), children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)(
          "img",
          {
            src: `${product.node.images.edges.length > 0 ? product.node.images.edges[0].node.url : noImg}`,
            alt: product.node.title,
            className: "w-full h-auto"
          },
          void 0,
          !1,
          {
            fileName: "app/components/ProductCarousel.jsx",
            lineNumber: 135,
            columnNumber: 21
          },
          this
        ),
        /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)("div", { className: "product_info", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)("h2", { className: "text-lg font-semibold mt-2 text-center min-h-[50px] xs:min-h-[85px] sm:min-h-[50px]", children: product.node.title }, void 0, !1, {
            fileName: "app/components/ProductCarousel.jsx",
            lineNumber: 141,
            columnNumber: 23
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)("div", { className: "flex flex-row justify-center gap-1 items-center", children: [
            /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)("div", { className: "flex items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)("div", { className: "font-bold m-auto flex  text-center text-sm xs:text-sm sm:text-xl", children: [
              "\u20B9",
              Math.trunc(product.node.priceRange.minVariantPrice.amount)
            ] }, void 0, !0, {
              fileName: "app/components/ProductCarousel.jsx",
              lineNumber: 146,
              columnNumber: 27
            }, this) }, void 0, !1, {
              fileName: "app/components/ProductCarousel.jsx",
              lineNumber: 145,
              columnNumber: 25
            }, this),
            ((_a2 = product.node.variants.edges[0].node.compareAtPrice) == null ? void 0 : _a2.amount) && /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)("div", { className: "flex items-center justify-center", children: [
              /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)("div", { className: "ml-2 line-through opacity-50 text-sm xs:text-sm sm:text-xl", children: [
                "\u20B9",
                Math.trunc((_b = product.node.variants.edges[0].node.compareAtPrice) == null ? void 0 : _b.amount)
              ] }, void 0, !0, {
                fileName: "app/components/ProductCarousel.jsx",
                lineNumber: 152,
                columnNumber: 29
              }, this),
              /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)("b", { className: "ml-2 text-red-500 text-sm xs:text-sm sm:text-xl", children: [
                " (",
                calculatePer(product.node.priceRange.minVariantPrice.amount, (_c = product.node.variants.edges[0].node.compareAtPrice) == null ? void 0 : _c.amount),
                " % Off) "
              ] }, void 0, !0, {
                fileName: "app/components/ProductCarousel.jsx",
                lineNumber: 155,
                columnNumber: 29
              }, this)
            ] }, void 0, !0, {
              fileName: "app/components/ProductCarousel.jsx",
              lineNumber: 151,
              columnNumber: 27
            }, this)
          ] }, void 0, !0, {
            fileName: "app/components/ProductCarousel.jsx",
            lineNumber: 144,
            columnNumber: 23
          }, this)
        ] }, void 0, !0, {
          fileName: "app/components/ProductCarousel.jsx",
          lineNumber: 140,
          columnNumber: 21
        }, this)
      ] }, void 0, !0, {
        fileName: "app/components/ProductCarousel.jsx",
        lineNumber: 134,
        columnNumber: 19
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)("div", { className: "px-1 py-1 flex items-center sm:flex-row gap-3 justify-center w-[100%]", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)("div", { className: "w-[25%] flex justify-center", children: /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 32 33",
            xmlSpace: "preserve",
            className: "sm:w-[43px] w-[43px] like-home",
            children: [
              /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)(
                "path",
                {
                  d: "M9 .5h14c4.7 0 8.5 3.8 8.5 8.5v14c0 4.7-3.8 8.5-8.5 8.5H9C4.3 31.5.5 27.7.5 23V9C.5 4.3 4.3.5 9 .5z",
                  fill: "rgb(255, 255, 255)",
                  stroke: "rgb(0, 0, 0)"
                },
                void 0,
                !1,
                {
                  fileName: "app/components/ProductCarousel.jsx",
                  lineNumber: 170,
                  columnNumber: 23
                },
                this
              ),
              /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)(
                "path",
                {
                  d: "M22.3 11.8c.4.4.7.9.9 1.4.2.5.3 1.1.3 1.6 0 .6-.1 1.1-.3 1.6-.2.5-.5 1-.9 1.4l-5.6 5.6s-.1 0-.1.1h-.2s-.1 0-.1-.1l-5.6-5.6C10 17 9.5 16 9.5 14.9c0-1.1.3-2.1 1-2.9.7-.8 1.7-1.3 2.7-1.5 1.1-.1 2.1.2 3 .8l.3.2.3-.2c.8-.6 1.8-.9 2.8-.8 1.1.1 2 .5 2.7 1.3z",
                  fill: "none",
                  stroke: "rgb(0, 0, 0)"
                },
                void 0,
                !1,
                {
                  fileName: "app/components/ProductCarousel.jsx",
                  lineNumber: 175,
                  columnNumber: 23
                },
                this
              )
            ]
          },
          void 0,
          !0,
          {
            fileName: "app/components/ProductCarousel.jsx",
            lineNumber: 164,
            columnNumber: 21
          },
          this
        ) }, void 0, !1, {
          fileName: "app/components/ProductCarousel.jsx",
          lineNumber: 163,
          columnNumber: 19
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)("div", { "d-line": index3, className: "w-[75%]", children: /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)(
          CartForm,
          {
            route: "/cart",
            inputs: { lines: lines[index3] },
            action: CartForm.ACTIONS.LinesAdd,
            className: "w-[83%] ",
            children: (fetcher) => /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)(import_jsx_dev_runtime9.Fragment, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime9.jsxDEV)(
              "button",
              {
                disabled: !product.node.variants || !product.node.variants.edges[0].node.availableForSale,
                className: "w-[100%] h-11 bg-black hover:bg-blue-700 text-white font-bold py-1 rounded-lg inline-block home-product",
                type: "submit",
                onClick: () => cartAct(),
                children: product.node.variants && product.node.variants.edges[0].node.availableForSale ? "ADD TO CART" : "Sold out"
              },
              void 0,
              !1,
              {
                fileName: "app/components/ProductCarousel.jsx",
                lineNumber: 192,
                columnNumber: 27
              },
              this
            ) }, void 0, !1, {
              fileName: "app/components/ProductCarousel.jsx",
              lineNumber: 191,
              columnNumber: 25
            }, this)
          },
          void 0,
          !1,
          {
            fileName: "app/components/ProductCarousel.jsx",
            lineNumber: 184,
            columnNumber: 21
          },
          this
        ) }, void 0, !1, {
          fileName: "app/components/ProductCarousel.jsx",
          lineNumber: 183,
          columnNumber: 19
        }, this)
      ] }, void 0, !0, {
        fileName: "app/components/ProductCarousel.jsx",
        lineNumber: 162,
        columnNumber: 21
      }, this)
    ] }, void 0, !0, {
      fileName: "app/components/ProductCarousel.jsx",
      lineNumber: 133,
      columnNumber: 17
    }, this) }, `product_${product.node.id}`, !1, {
      fileName: "app/components/ProductCarousel.jsx",
      lineNumber: 132,
      columnNumber: 13
    }, this);
  }) }, void 0, !1, {
    fileName: "app/components/ProductCarousel.jsx",
    lineNumber: 130,
    columnNumber: 9
  }, this) }, void 0, !1, {
    fileName: "app/components/ProductCarousel.jsx",
    lineNumber: 129,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/components/ProductCarousel.jsx",
    lineNumber: 128,
    columnNumber: 5
  }, this);
}, ProductCarousel_default = ProductCarousel;

// app/components/OfferCarousel.jsx
var import_react22 = __toESM(require_react());
var import_jsx_dev_runtime10 = __toESM(require_jsx_dev_runtime()), OfferCarousel = (collections) => {
  let [startIndex, setStartIndex] = (0, import_react22.useState)(0), productsToShow = collections.collections, nextProducts = () => {
    setStartIndex((prevIndex) => (prevIndex + 3) % products.length);
  }, prevProducts = () => {
    setStartIndex(
      (prevIndex) => prevIndex === 0 ? products.length - products.length % 3 : prevIndex - 3
    );
  }, goToCollection = (url_path) => {
    window.location.href = url_path;
  }, copyCoupan = (code) => {
    navigator.clipboard.writeText(code);
  };
  return /* @__PURE__ */ (0, import_jsx_dev_runtime10.jsxDEV)("div", { className: "w-full max-w-screen-xl mx-auto px-4", children: /* @__PURE__ */ (0, import_jsx_dev_runtime10.jsxDEV)("div", { className: "relative", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime10.jsxDEV)("h1", { className: "text-center", children: " Special Offers " }, void 0, !1, {
      fileName: "app/components/OfferCarousel.jsx",
      lineNumber: 31,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime10.jsxDEV)("div", { className: "flex flex-wrap", children: productsToShow.map((product) => /* @__PURE__ */ (0, import_jsx_dev_runtime10.jsxDEV)("div", { className: "w-full flex-auto sm:w-1/2 md:w-1/3 py-2 px-4", children: /* @__PURE__ */ (0, import_jsx_dev_runtime10.jsxDEV)("div", { className: "bg-white rounded-lg shadow-lg p-4", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime10.jsxDEV)(
        "img",
        {
          onClick: () => goToCollection(`/collections/${product.handle}`),
          src: `${product.image.url}`,
          alt: product.name,
          className: "w-full h-auto"
        },
        void 0,
        !1,
        {
          fileName: "app/components/OfferCarousel.jsx",
          lineNumber: 36,
          columnNumber: 17
        },
        this
      ),
      /* @__PURE__ */ (0, import_jsx_dev_runtime10.jsxDEV)("div", { className: "grid grid-rows-1 grid-flow-col gap-4", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime10.jsxDEV)("div", { className: "col-span-6" }, void 0, !1, {
          fileName: "app/components/OfferCarousel.jsx",
          lineNumber: 44,
          columnNumber: 19
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime10.jsxDEV)("div", { className: "coupan_code_wrapper cursor outline-dotted p-2 auto-cols-auto", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime10.jsxDEV)("b", { id: "coupan_code", children: [
            product.description,
            " \xA0 "
          ] }, void 0, !0, {
            fileName: "app/components/OfferCarousel.jsx",
            lineNumber: 46,
            columnNumber: 19
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime10.jsxDEV)("svg", { onClick: () => copyCoupan(product.description), height: "30", width: "30", className: "flex justify-center align-center", xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 256 256", children: [
            /* @__PURE__ */ (0, import_jsx_dev_runtime10.jsxDEV)("rect", { className: "w-8 flex justify-center align-center", fill: "none" }, void 0, !1, {
              fileName: "app/components/OfferCarousel.jsx",
              lineNumber: 47,
              columnNumber: 197
            }, this),
            /* @__PURE__ */ (0, import_jsx_dev_runtime10.jsxDEV)("polyline", { points: "216 184 216 40 72 40", fill: "none", stroke: "#000", "stroke-linecap": "round", "stroke-linejoin": "round", "stroke-width": "8" }, void 0, !1, {
              fileName: "app/components/OfferCarousel.jsx",
              lineNumber: 47,
              columnNumber: 265
            }, this),
            /* @__PURE__ */ (0, import_jsx_dev_runtime10.jsxDEV)("rect", { x: "40", y: "72", width: "144", height: "144", fill: "none", stroke: "#000", "stroke-linecap": "round", "stroke-linejoin": "round", "stroke-width": "8" }, void 0, !1, {
              fileName: "app/components/OfferCarousel.jsx",
              lineNumber: 47,
              columnNumber: 396
            }, this)
          ] }, void 0, !0, {
            fileName: "app/components/OfferCarousel.jsx",
            lineNumber: 47,
            columnNumber: 19
          }, this)
        ] }, void 0, !0, {
          fileName: "app/components/OfferCarousel.jsx",
          lineNumber: 45,
          columnNumber: 19
        }, this)
      ] }, void 0, !0, {
        fileName: "app/components/OfferCarousel.jsx",
        lineNumber: 42,
        columnNumber: 17
      }, this)
    ] }, void 0, !0, {
      fileName: "app/components/OfferCarousel.jsx",
      lineNumber: 35,
      columnNumber: 15
    }, this) }, product.id, !1, {
      fileName: "app/components/OfferCarousel.jsx",
      lineNumber: 34,
      columnNumber: 13
    }, this)) }, void 0, !1, {
      fileName: "app/components/OfferCarousel.jsx",
      lineNumber: 32,
      columnNumber: 9
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/OfferCarousel.jsx",
    lineNumber: 30,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/components/OfferCarousel.jsx",
    lineNumber: 29,
    columnNumber: 5
  }, this);
}, OfferCarousel_default = OfferCarousel;

// app/components/YouTubeVideo.jsx
var import_react23 = __toESM(require_react()), import_react_responsive4 = __toESM(require_react_responsive()), import_jsx_dev_runtime11 = __toESM(require_jsx_dev_runtime()), MobileVideo = ({ playVideo, src, isPlay, embedUrl }) => (console.log("MobileVideo:", isPlay), /* @__PURE__ */ (0, import_jsx_dev_runtime11.jsxDEV)("div", { className: "w-full h-full mx-auto", children: /* @__PURE__ */ (0, import_jsx_dev_runtime11.jsxDEV)("div", { className: "relative rounded-lg cursor-pointer", onClick: () => playVideo(), children: [
  /* @__PURE__ */ (0, import_jsx_dev_runtime11.jsxDEV)("img", { className: "relative rounded-2xl", src, alt: "Youtube Video" }, void 0, !1, {
    fileName: "app/components/YouTubeVideo.jsx",
    lineNumber: 9,
    columnNumber: 9
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime11.jsxDEV)("img", { className: "absolute top-[50%] left-[50%]", src: "/youtube_icon.png" }, void 0, !1, {
    fileName: "app/components/YouTubeVideo.jsx",
    lineNumber: 10,
    columnNumber: 9
  }, this),
  isPlay && /* @__PURE__ */ (0, import_jsx_dev_runtime11.jsxDEV)(
    "iframe",
    {
      title: "YouTube Video",
      className: "absolute top-0 left-0 w-full h-full rounded-2xl",
      src: embedUrl,
      allowFullScreen: !0,
      autoPlay: "1",
      mute: "1",
      allow: "autoplay"
    },
    void 0,
    !1,
    {
      fileName: "app/components/YouTubeVideo.jsx",
      lineNumber: 12,
      columnNumber: 9
    },
    this
  )
] }, void 0, !0, {
  fileName: "app/components/YouTubeVideo.jsx",
  lineNumber: 8,
  columnNumber: 7
}, this) }, void 0, !1, {
  fileName: "app/components/YouTubeVideo.jsx",
  lineNumber: 7,
  columnNumber: 5
}, this)), DesktopVideo = ({ playVideo, src, isPlay, embedUrl }) => /* @__PURE__ */ (0, import_jsx_dev_runtime11.jsxDEV)("div", { className: "w-4/5 mx-auto", children: /* @__PURE__ */ (0, import_jsx_dev_runtime11.jsxDEV)("div", { className: "relative rounded-2xl p-10 cursor-pointer", onClick: () => playVideo(), children: [
  /* @__PURE__ */ (0, import_jsx_dev_runtime11.jsxDEV)("img", { className: "rounded-2xl relative", src, alt: "Youtube Video" }, void 0, !1, {
    fileName: "app/components/YouTubeVideo.jsx",
    lineNumber: 31,
    columnNumber: 9
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime11.jsxDEV)("img", { className: "absolute top-[50%] left-[50%]", src: "/youtube_icon.png" }, void 0, !1, {
    fileName: "app/components/YouTubeVideo.jsx",
    lineNumber: 32,
    columnNumber: 9
  }, this),
  isPlay && /* @__PURE__ */ (0, import_jsx_dev_runtime11.jsxDEV)(
    "iframe",
    {
      title: "YouTube Video",
      className: "absolute top-0 left-0 w-full h-full rounded-2xl",
      src: embedUrl,
      allowFullScreen: !0,
      autoPlay: "1",
      mute: "1",
      allow: "autoplay"
    },
    void 0,
    !1,
    {
      fileName: "app/components/YouTubeVideo.jsx",
      lineNumber: 34,
      columnNumber: 9
    },
    this
  )
] }, void 0, !0, {
  fileName: "app/components/YouTubeVideo.jsx",
  lineNumber: 30,
  columnNumber: 7
}, this) }, void 0, !1, {
  fileName: "app/components/YouTubeVideo.jsx",
  lineNumber: 29,
  columnNumber: 5
}, this), YouTubeVideo = () => {
  let embedUrl = "https://www.youtube.com/embed/WKKai8jures?si=RwowF2iZZmbeL8H3?&autoplay=1", src = "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/youtube_thumbnail.jpg?v=1713503453", isLargeScreen = (0, import_react_responsive4.useMediaQuery)({ minWidth: 1024 }), isSmall = (0, import_react_responsive4.useMediaQuery)({ maxWidth: 640 }), [play, setPlay] = (0, import_react23.useState)(!1), playVideo = () => {
    setPlay(!play);
  };
  return /* @__PURE__ */ (0, import_jsx_dev_runtime11.jsxDEV)("div", { children: [
    isLargeScreen && /* @__PURE__ */ (0, import_jsx_dev_runtime11.jsxDEV)(DesktopVideo, { embedUrl, playVideo, isPlay: play, src }, void 0, !1, {
      fileName: "app/components/YouTubeVideo.jsx",
      lineNumber: 64,
      columnNumber: 25
    }, this),
    isSmall && /* @__PURE__ */ (0, import_jsx_dev_runtime11.jsxDEV)(MobileVideo, { embedUrl, playVideo, isPlay: play, src }, void 0, !1, {
      fileName: "app/components/YouTubeVideo.jsx",
      lineNumber: 65,
      columnNumber: 19
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/YouTubeVideo.jsx",
    lineNumber: 63,
    columnNumber: 5
  }, this);
}, YouTubeVideo_default = YouTubeVideo;

// app/components/Layout.jsx
var import_jsx_dev_runtime12 = __toESM(require_jsx_dev_runtime());
function Layout({ cart, children = null, footer, header, isLoggedIn }) {
  let images = [
    "https://cdn.shopify.com/s/files/1/0810/9863/7603/files/6995513d5b84551a7c89579bda02b56d.jpg?v=1693061468",
    "https://cdn.shopify.com/s/files/1/0810/9863/7603/files/6995513d5b84551a7c89579bda02b56d.jpg?v=1693061468",
    "https://cdn.shopify.com/s/files/1/0810/9863/7603/files/6995513d5b84551a7c89579bda02b56d.jpg?v=1693061468"
    // Add more image URLs
  ];
  return /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)(import_jsx_dev_runtime12.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)(AnnouncemnetBar_default, {}, void 0, !1, {
      fileName: "app/components/Layout.jsx",
      lineNumber: 31,
      columnNumber: 5
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)(CartAside, { cart }, void 0, !1, {
      fileName: "app/components/Layout.jsx",
      lineNumber: 32,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)(SearchAside, {}, void 0, !1, {
      fileName: "app/components/Layout.jsx",
      lineNumber: 33,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)(MobileMenuAside, { menu: header.menu }, void 0, !1, {
      fileName: "app/components/Layout.jsx",
      lineNumber: 34,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)(Header, { header, cart, isLoggedIn }, void 0, !1, {
      fileName: "app/components/Layout.jsx",
      lineNumber: 35,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)("main", { children }, void 0, !1, {
      fileName: "app/components/Layout.jsx",
      lineNumber: 36,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)(import_react25.Suspense, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)(Await2, { resolve: footer, children: (footer2) => /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)(Footer, { menu: header.menu }, void 0, !1, {
      fileName: "app/components/Layout.jsx",
      lineNumber: 39,
      columnNumber: 24
    }, this) }, void 0, !1, {
      fileName: "app/components/Layout.jsx",
      lineNumber: 38,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/components/Layout.jsx",
      lineNumber: 37,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/Layout.jsx",
    lineNumber: 30,
    columnNumber: 5
  }, this);
}
function CartAside({ cart }) {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)(Aside, { id: "cart-aside", heading: "CART", children: /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)(import_react25.Suspense, { fallback: /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)("p", { children: "Loading cart ..." }, void 0, !1, {
    fileName: "app/components/Layout.jsx",
    lineNumber: 49,
    columnNumber: 27
  }, this), children: /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)(Await2, { resolve: cart, children: (cart2) => /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)(CartMain, { cart: cart2, layout: "aside" }, void 0, !1, {
    fileName: "app/components/Layout.jsx",
    lineNumber: 52,
    columnNumber: 20
  }, this) }, void 0, !1, {
    fileName: "app/components/Layout.jsx",
    lineNumber: 50,
    columnNumber: 9
  }, this) }, void 0, !1, {
    fileName: "app/components/Layout.jsx",
    lineNumber: 49,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/components/Layout.jsx",
    lineNumber: 48,
    columnNumber: 5
  }, this);
}
function SearchAside() {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)(Aside, { id: "search-aside", heading: "SEARCH", children: /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)("div", { className: "predictive-search", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)("br", {}, void 0, !1, {
      fileName: "app/components/Layout.jsx",
      lineNumber: 64,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)(PredictiveSearchForm, { children: ({ fetchResults, inputRef }) => /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)("div", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)(
        "input",
        {
          name: "q",
          onChange: fetchResults,
          onFocus: fetchResults,
          placeholder: "Search",
          ref: inputRef,
          type: "search"
        },
        void 0,
        !1,
        {
          fileName: "app/components/Layout.jsx",
          lineNumber: 68,
          columnNumber: 15
        },
        this
      ),
      "\xA0",
      /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)("button", { type: "submit", children: "Search from Custom" }, void 0, !1, {
        fileName: "app/components/Layout.jsx",
        lineNumber: 77,
        columnNumber: 15
      }, this)
    ] }, void 0, !0, {
      fileName: "app/components/Layout.jsx",
      lineNumber: 67,
      columnNumber: 13
    }, this) }, void 0, !1, {
      fileName: "app/components/Layout.jsx",
      lineNumber: 65,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)(PredictiveSearchResults, {}, void 0, !1, {
      fileName: "app/components/Layout.jsx",
      lineNumber: 81,
      columnNumber: 9
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/Layout.jsx",
    lineNumber: 63,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/components/Layout.jsx",
    lineNumber: 62,
    columnNumber: 5
  }, this);
}
function MobileMenuAside({ menu }) {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)(Aside, { id: "mobile-menu-aside", heading: "MENU", children: /* @__PURE__ */ (0, import_jsx_dev_runtime12.jsxDEV)(HeaderMenu, { menu, viewport: "mobile" }, void 0, !1, {
    fileName: "app/components/Layout.jsx",
    lineNumber: 90,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/components/Layout.jsx",
    lineNumber: 89,
    columnNumber: 5
  }, this);
}

// app/styles/tailwind.css
var tailwind_default = "/build/_assets/tailwind-DN7QL3TX.css";

// node_modules/@okendo/shopify-hydrogen/dist/esm/index.js
var import_react26 = __toESM(require_react()), r = async ({ context: t18, subscriberId: e5, apiDomain: n7, cdnDomain: r9 }) => {
  let o11 = `https://${n7 || "api.okendo.io/v1"}/stores/${e5}/widget_plus_settings`, i7 = await fetch(o11);
  if (!i7.ok)
    return console.error(`Failed to retrieve subscriber settings for subscriber ID '${e5}'.`), null;
  let { reviewsHeaderConfig: s15, cssVariables: a13, customCss: d12, starSymbols: c13 } = await i7.json(), l13 = await fetch(`https://${r9 || "cdn-static.okendo.io"}/reviews-widget-plus/js/okendo-reviews.js`);
  if (!l13.ok)
    return console.error("Failed to retrieve widget initialisation script."), null;
  let p7 = await l13.text(), { shop: { widgetPreRenderStyleTags: u10 } } = await t18.storefront.query(`#graphql
		query metafields {
			shop {
				widgetPreRenderStyleTags: metafield(
					namespace: "okendo"
					key: "WidgetPreRenderStyleTags"
				) {
					value
				}
			}
		}
	`), m10 = (u10 == null ? void 0 : u10.value) ?? "";
  return m10 || console.warn("Failed to retrieve pre-rendered widget style settings."), { reviewsHeaderConfig: s15, cssVariables: a13, customCss: d12, initScriptContents: p7, preRenderStyleTags: m10, starSymbols: c13 };
}, o = ({ nonce: e5 = "", okendoProviderData: n7, productUrlFormatter: r9 }) => {
  if (!n7)
    return null;
  let { reviewsHeaderConfig: o11, cssVariables: i7, customCss: s15, initScriptContents: a13, preRenderStyleTags: d12, starSymbols: c13 } = n7, l13 = typeof r9 == "function" ? r9.toString() : typeof r9 == "string" ? r9 : `(product) =>
					product && product.productHandle
						? "/products/" + product.productHandle + "/" + (product.variantId ? '?variantId=' + product.variantId : '')
						: undefined`, p7 = (i7 ?? "").replace('<style id="oke-css-vars">', "").replace("</style>", ""), u10 = s15 ? s15.replace('<style id="oke-reviews-custom-css">', "").replace("</style>", "") : "";
  return import_react26.default.createElement(import_react26.default.Fragment, null, import_react26.default.createElement("script", { nonce: e5, id: "oke-reviews-settings", type: "application/json", dangerouslySetInnerHTML: { __html: JSON.stringify(o11) } }), import_react26.default.createElement("style", { nonce: e5, id: "oke-css-vars", dangerouslySetInnerHTML: { __html: p7 } }), u10 && import_react26.default.createElement("style", { nonce: e5, id: "oke-reviews-custom-css", dangerouslySetInnerHTML: { __html: u10 } }), a13 && import_react26.default.createElement("script", { nonce: e5, dangerouslySetInnerHTML: { __html: a13 } }), import_react26.default.createElement("script", { nonce: e5, type: "text/javascript", dangerouslySetInnerHTML: { __html: `window.okeProductUrlFormatter = ${l13.toString()}` } }), d12 && import_react26.default.createElement("div", { dangerouslySetInnerHTML: { __html: d12 } }), c13 && import_react26.default.createElement("div", { dangerouslySetInnerHTML: { __html: c13 } }));
}, i = ({ dataAttributes: r9, metafieldContent: o11 = "" }) => {
  let i7 = (0, import_react26.useRef)(null), s15 = () => {
    i7.current && window.okeWidgetApi.initWidget(i7.current);
  };
  return (0, import_react26.useEffect)(() => (window.okeWidgetApi && i7.current ? s15() : document.addEventListener("oke-script-loaded", s15), () => {
    document.removeEventListener("oke-script-loaded", s15);
  }), [r9]), import_react26.default.createElement("div", { ref: i7, key: JSON.stringify(r9), ...r9, dangerouslySetInnerHTML: o11 ? { __html: o11 } : void 0 });
}, s = /^[0-9]*$/;
function a(t18) {
  if (t18)
    return `shopify-${s.test(t18) ? t18 : t18.split("/").slice(-1)[0]}`;
}
var d = ({ productId: e5, okendoReviewsSnippet: n7 }) => {
  let r9 = { "data-oke-widget": "", "data-oke-reviews-product-id": a(e5) };
  return import_react26.default.createElement(i, { dataAttributes: r9, metafieldContent: n7 == null ? void 0 : n7.value });
}, c = ({ productId: e5, okendoStarRatingSnippet: n7 }) => {
  let r9 = { "data-oke-star-rating": "", "data-oke-reviews-product-id": a(e5) };
  return import_react26.default.createElement(i, { dataAttributes: r9, metafieldContent: n7 == null ? void 0 : n7.value });
}, l2 = `#graphql
	fragment OkendoStarRatingSnippet on Product {
		okendoStarRatingSnippet: metafield(
			namespace: "okendo"
			key: "StarRatingSnippet"
		) {
			value
		}
	}
`, p = `#graphql
	fragment OkendoReviewsSnippet on Product {
		okendoReviewsSnippet: metafield(
			namespace: "okendo"
			key: "ReviewsWidgetSnippet"
		) {
			value
		}
	}
`;

// app/root.jsx
var import_react_ga43 = __toESM(require_dist()), import_jsx_dev_runtime13 = __toESM(require_jsx_dev_runtime());
function links() {
  return [
    { rel: "stylesheet", href: tailwind_default },
    { rel: "stylesheet", href: reset_default },
    { rel: "stylesheet", href: app_default },
    {
      rel: "preconnect",
      href: "https://cdn.shopify.com"
    },
    {
      rel: "preconnect",
      href: "https://shop.app"
    },
    { rel: "icon", type: "image/svg+xml", href: favicon_default }
  ];
}
async function loader({ request, context }) {
  let { storefront, session, cart } = context, customerAccessToken = await session.get("customerAccessToken"), publicStoreDomain = context.env.PUBLIC_STORE_DOMAIN, { isLoggedIn, headers } = await validateCustomerAccessToken(
    customerAccessToken,
    session
  ), cartPromise = cart.get(), footerPromise = storefront.query(FOOTER_QUERY, {
    cache: storefront.CacheLong(),
    variables: {
      footerMenuHandle: "footer"
      // Adjust to your footer menu handle
    }
  }), headerPromise = storefront.query(HEADER_QUERY, {
    cache: storefront.CacheNone(),
    variables: { headerMenuHandle: "main-menu" }
  });
  console.log(request.url);
  let seo = {
    title: "Mary Jo K",
    href: request.url
  };
  return defer3(
    {
      seo,
      cart: cartPromise,
      footer: await footerPromise,
      header: await headerPromise,
      isLoggedIn,
      publicStoreDomain,
      okendoProviderData: await r({
        context,
        subscriberId: "866361a1-6116-4d14-abc8-0565f32d51cb"
      })
    },
    { headers }
  );
}
function App() {
  (0, import_react28.useEffect)(() => {
  }, []);
  let data2 = useLoaderData2(), image = ["https://cdn.shopify.com/s/files/1/0599/7894/0607/products/Artboard2_7746b5e7-35c9-4fc8-bcd9-9d98e80a5abb.jpg", "https://cdn.shopify.com/s/files/1/0599/7894/0607/products/Artboard4_7e4b511f-1796-49a7-89de-7ba7d18d3544.jpg", "https://cdn.shopify.com/s/files/1/0599/7894/0607/products/Artboard2_7746b5e7-35c9-4fc8-bcd9-9d98e80a5abb.jpg?v=1681735611"];
  return /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("html", { lang: "en", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("head", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("meta", { name: "google-site-verification", content: "C5WkKr6Bq1BKgHfp7-jocFCRVsXNHOTWyCKxoEW-y-w" }, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 103,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("meta", { charSet: "utf-8" }, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 104,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("link", { rel: "canonical", href: data2.seo.href }, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 105,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("meta", { name: "viewport", content: "width=device-width,initial-scale=1" }, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 107,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("meta", { name: "oke:subscriber_id", content: "866361a1-6116-4d14-abc8-0565f32d51cb" }, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 108,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("link", { rel: "icon", type: "image/x-icon", href: "/favicon.png" }, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 109,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)(
        "link",
        {
          rel: "stylesheet",
          type: "text/css",
          charSet: "UTF-8",
          href: "https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css"
        },
        void 0,
        !1,
        {
          fileName: "app/root.jsx",
          lineNumber: 110,
          columnNumber: 9
        },
        this
      ),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)(
        "link",
        {
          rel: "stylesheet",
          type: "text/css",
          href: "https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css"
        },
        void 0,
        !1,
        {
          fileName: "app/root.jsx",
          lineNumber: 116,
          columnNumber: 9
        },
        this
      ),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("link", { rel: "stylesheet", type: "text/css", href: "https://s3.amazonaws.com/cdn.myshopapps.com/sg-gallery-hydrogen/main.628eb170.css" }, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 121,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)(Meta, {}, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 122,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)(Links, {}, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 123,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/root.jsx",
      lineNumber: 102,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("body", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)(o, { okendoProviderData: data2.okendoProviderData }, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 127,
        columnNumber: 8
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)(Layout, { ...data2, children: /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)(Outlet, {}, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 129,
        columnNumber: 9
      }, this) }, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 128,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)(ScrollRestoration2, {}, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 131,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("script", { src: "../google_tag.js", children: " " }, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 137,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("script", { src: "../fb_pixel.js", children: " " }, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 139,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("noscript", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)(
        "img",
        {
          height: "1",
          width: "1",
          style: { display: "none" },
          src: "https://www.facebook.com/tr?id=761666845907224&ev=PageView&noscript=1"
        },
        void 0,
        !1,
        {
          fileName: "app/root.jsx",
          lineNumber: 140,
          columnNumber: 19
        },
        this
      ) }, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 140,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("script", { async: !0, src: "https://s3.amazonaws.com/cdn.myshopapps.com/sg-gallery-hydrogen/main.js", children: " " }, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 144,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("script", { async: !0, src: "https://s3.amazonaws.com/cdn.myshopapps.com/sg-gallery-hydrogen/787.chunk.js", children: " " }, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 145,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)(Scripts, {}, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 146,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/root.jsx",
      lineNumber: 126,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/root.jsx",
    lineNumber: 101,
    columnNumber: 5
  }, this);
}
function ErrorBoundary() {
  var _a2;
  let error = useRouteError(), [root] = useMatches2(), errorMessage = "Unknown error", errorStatus = 500;
  return isRouteErrorResponse(error) ? (errorMessage = ((_a2 = error == null ? void 0 : error.data) == null ? void 0 : _a2.message) ?? error.data, errorStatus = error.status) : error instanceof Error && (errorMessage = error.message), /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("html", { lang: "en", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("head", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("meta", { charSet: "utf-8" }, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 168,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("meta", { name: "viewport", content: "width=device-width,initial-scale=1" }, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 169,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)(Meta, {}, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 170,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)(Links, {}, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 171,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/root.jsx",
      lineNumber: 167,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("body", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)(Layout, { ...root.data, children: /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("div", { className: "route-error", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("h1", { children: "Oopss" }, void 0, !1, {
          fileName: "app/root.jsx",
          lineNumber: 176,
          columnNumber: 13
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("h2", { children: errorStatus }, void 0, !1, {
          fileName: "app/root.jsx",
          lineNumber: 177,
          columnNumber: 13
        }, this),
        errorMessage && /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("fieldset", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)("pre", { children: errorMessage }, void 0, !1, {
          fileName: "app/root.jsx",
          lineNumber: 180,
          columnNumber: 17
        }, this) }, void 0, !1, {
          fileName: "app/root.jsx",
          lineNumber: 179,
          columnNumber: 13
        }, this)
      ] }, void 0, !0, {
        fileName: "app/root.jsx",
        lineNumber: 175,
        columnNumber: 11
      }, this) }, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 174,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)(ScrollRestoration2, {}, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 185,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime13.jsxDEV)(Scripts, {}, void 0, !1, {
        fileName: "app/root.jsx",
        lineNumber: 187,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/root.jsx",
      lineNumber: 173,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/root.jsx",
    lineNumber: 166,
    columnNumber: 5
  }, this);
}
async function validateCustomerAccessToken(customerAccessToken, session) {
  let isLoggedIn = !1, headers = new Headers();
  return !(customerAccessToken != null && customerAccessToken.accessToken) || !(customerAccessToken != null && customerAccessToken.expiresAt) ? { isLoggedIn, headers } : (new Date(customerAccessToken.expiresAt) < /* @__PURE__ */ new Date() ? (session.unset("customerAccessToken"), headers.append("Set-Cookie", await session.commit())) : isLoggedIn = !0, { isLoggedIn, headers });
}
var MENU_FRAGMENT = `#graphql
  fragment Menu on Menu {
    id
    items {
      id
      title
      url
      items{
        title
        url
      }
    }
  }
`, HEADER_QUERY = `#graphql
  fragment Shop on Shop {
    id
    name
    description
    primaryDomain {
      url
    }
    brand {
      logo {
        image {
          url
        }
      }
    }
  }
  query Header(
    $country: CountryCode
    $headerMenuHandle: String!
    $language: LanguageCode
  ) @inContext(language: $language, country: $country) {
    shop {
      ...Shop
    }
    menu(handle: $headerMenuHandle) {
      ...Menu
    }
  }
  ${MENU_FRAGMENT}
`, FOOTER_QUERY = `#graphql
  query Footer(
    $country: CountryCode
    $footerMenuHandle: String!
    $language: LanguageCode
  ) @inContext(language: $language, country: $country) {
    menu(handle: $footerMenuHandle) {
      ...Menu
    }
  }
  ${MENU_FRAGMENT}
`;

// app/routes/($locale).account_.activate.$id.$activationToken.jsx
var locale_account_activate_id_activationToken_exports = {};
__export(locale_account_activate_id_activationToken_exports, {
  action: () => action,
  default: () => Activate,
  loader: () => loader2,
  meta: () => meta
});
var import_jsx_dev_runtime14 = __toESM(require_jsx_dev_runtime()), meta = () => [{ title: "Activate Account" }];
async function loader2({ context }) {
  return await context.session.get("customerAccessToken") ? redirect4("/account") : json3({});
}
async function action({ request, context, params }) {
  var _a2;
  let { session, storefront } = context, { id, activationToken } = params;
  if (request.method !== "POST")
    return json3({ error: "Method not allowed" }, { status: 405 });
  try {
    if (!id || !activationToken)
      throw new Error("Missing token. The link you followed might be wrong.");
    let form = await request.formData(), password = form.has("password") ? String(form.get("password")) : null, passwordConfirm = form.has("passwordConfirm") ? String(form.get("passwordConfirm")) : null;
    if (!(password && passwordConfirm && password === passwordConfirm))
      throw new Error("Passwords do not match");
    let { customerActivate } = await storefront.mutate(
      CUSTOMER_ACTIVATE_MUTATION,
      {
        variables: {
          id: `gid://shopify/Customer/${id}`,
          input: {
            password,
            activationToken
          }
        }
      }
    );
    if ((_a2 = customerActivate == null ? void 0 : customerActivate.customerUserErrors) != null && _a2.length)
      throw new Error(customerActivate.customerUserErrors[0].message);
    let { customerAccessToken } = customerActivate ?? {};
    if (!customerAccessToken)
      throw new Error("Could not activate account.");
    return session.set("customerAccessToken", customerAccessToken), redirect4("/account", {
      headers: {
        "Set-Cookie": await session.commit()
      }
    });
  } catch (error) {
    return error instanceof Error ? json3({ error: error.message }, { status: 400 }) : json3({ error }, { status: 400 });
  }
}
function Activate() {
  let action12 = useActionData2(), error = (action12 == null ? void 0 : action12.error) ?? null;
  return /* @__PURE__ */ (0, import_jsx_dev_runtime14.jsxDEV)("div", { className: "account-activate", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime14.jsxDEV)("h1", { children: "Activate Account." }, void 0, !1, {
      fileName: "app/routes/($locale).account_.activate.$id.$activationToken.jsx",
      lineNumber: 83,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime14.jsxDEV)("p", { children: "Create your password to activate your account." }, void 0, !1, {
      fileName: "app/routes/($locale).account_.activate.$id.$activationToken.jsx",
      lineNumber: 84,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime14.jsxDEV)(Form, { method: "POST", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime14.jsxDEV)("fieldset", { children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime14.jsxDEV)("label", { htmlFor: "password", children: "Password" }, void 0, !1, {
          fileName: "app/routes/($locale).account_.activate.$id.$activationToken.jsx",
          lineNumber: 87,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime14.jsxDEV)(
          "input",
          {
            id: "password",
            name: "password",
            type: "password",
            autoComplete: "current-password",
            placeholder: "Password",
            "aria-label": "Password",
            minLength: 8,
            required: !0,
            autoFocus: !0
          },
          void 0,
          !1,
          {
            fileName: "app/routes/($locale).account_.activate.$id.$activationToken.jsx",
            lineNumber: 88,
            columnNumber: 11
          },
          this
        ),
        /* @__PURE__ */ (0, import_jsx_dev_runtime14.jsxDEV)("label", { htmlFor: "passwordConfirm", children: "Re-enter password" }, void 0, !1, {
          fileName: "app/routes/($locale).account_.activate.$id.$activationToken.jsx",
          lineNumber: 100,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime14.jsxDEV)(
          "input",
          {
            id: "passwordConfirm",
            name: "passwordConfirm",
            type: "password",
            autoComplete: "current-password",
            placeholder: "Re-enter password",
            "aria-label": "Re-enter password",
            minLength: 8,
            required: !0
          },
          void 0,
          !1,
          {
            fileName: "app/routes/($locale).account_.activate.$id.$activationToken.jsx",
            lineNumber: 101,
            columnNumber: 11
          },
          this
        )
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).account_.activate.$id.$activationToken.jsx",
        lineNumber: 86,
        columnNumber: 9
      }, this),
      error ? /* @__PURE__ */ (0, import_jsx_dev_runtime14.jsxDEV)("p", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime14.jsxDEV)("mark", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime14.jsxDEV)("small", { children: error }, void 0, !1, {
        fileName: "app/routes/($locale).account_.activate.$id.$activationToken.jsx",
        lineNumber: 115,
        columnNumber: 15
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale).account_.activate.$id.$activationToken.jsx",
        lineNumber: 114,
        columnNumber: 13
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale).account_.activate.$id.$activationToken.jsx",
        lineNumber: 113,
        columnNumber: 11
      }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime14.jsxDEV)("br", {}, void 0, !1, {
        fileName: "app/routes/($locale).account_.activate.$id.$activationToken.jsx",
        lineNumber: 119,
        columnNumber: 11
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime14.jsxDEV)(
        "button",
        {
          className: "bg-primary text-contrast rounded py-2 px-4 focus:shadow-outline block w-full",
          type: "submit",
          children: "Save"
        },
        void 0,
        !1,
        {
          fileName: "app/routes/($locale).account_.activate.$id.$activationToken.jsx",
          lineNumber: 121,
          columnNumber: 9
        },
        this
      )
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).account_.activate.$id.$activationToken.jsx",
      lineNumber: 85,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).account_.activate.$id.$activationToken.jsx",
    lineNumber: 82,
    columnNumber: 5
  }, this);
}
var CUSTOMER_ACTIVATE_MUTATION = `#graphql
  mutation customerActivate(
    $id: ID!,
    $input: CustomerActivateInput!,
    $country: CountryCode,
    $language: LanguageCode
  ) @inContext(country: $country, language: $language) {
    customerActivate(id: $id, input: $input) {
      customerAccessToken {
        accessToken
        expiresAt
      }
      customerUserErrors {
        code
        field
        message
      }
    }
  }
`;

// app/routes/($locale).blogs.$blogHandle.$articleHandle.jsx
var locale_blogs_blogHandle_articleHandle_exports = {};
__export(locale_blogs_blogHandle_articleHandle_exports, {
  default: () => Article,
  loader: () => loader3,
  meta: () => meta2
});
var import_jsx_dev_runtime15 = __toESM(require_jsx_dev_runtime()), meta2 = ({ data: data2 }) => [{ title: `Hydrogen | ${data2.article.title} article` }];
async function loader3({ params, context }) {
  let { blogHandle, articleHandle } = params;
  if (!articleHandle || !blogHandle)
    throw new Response("Not found", { status: 404 });
  let { blog } = await context.storefront.query(ARTICLE_QUERY, {
    variables: { blogHandle, articleHandle }
  });
  if (!(blog != null && blog.articleByHandle))
    throw new Response(null, { status: 404 });
  let article = blog.articleByHandle;
  return json3({ article });
}
function Article() {
  let { article } = useLoaderData2(), { title, image, contentHtml, author } = article, publishedDate = new Intl.DateTimeFormat("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric"
  }).format(new Date(article.publishedAt));
  return /* @__PURE__ */ (0, import_jsx_dev_runtime15.jsxDEV)("div", { className: "article mx-6", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime15.jsxDEV)("h1", { children: [
      title,
      " \xA0  ",
      /* @__PURE__ */ (0, import_jsx_dev_runtime15.jsxDEV)("small", { children: [
        " ",
        publishedDate,
        " "
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).blogs.$blogHandle.$articleHandle.jsx",
        lineNumber: 41,
        columnNumber: 25
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).blogs.$blogHandle.$articleHandle.jsx",
      lineNumber: 40,
      columnNumber: 7
    }, this),
    image && /* @__PURE__ */ (0, import_jsx_dev_runtime15.jsxDEV)(Image, { data: image, sizes: "90vw", loading: "eager" }, void 0, !1, {
      fileName: "app/routes/($locale).blogs.$blogHandle.$articleHandle.jsx",
      lineNumber: 46,
      columnNumber: 17
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime15.jsxDEV)(
      "div",
      {
        dangerouslySetInnerHTML: { __html: contentHtml },
        className: "article"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).blogs.$blogHandle.$articleHandle.jsx",
        lineNumber: 47,
        columnNumber: 7
      },
      this
    )
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).blogs.$blogHandle.$articleHandle.jsx",
    lineNumber: 39,
    columnNumber: 5
  }, this);
}
var ARTICLE_QUERY = `#graphql
  query Article(
    $articleHandle: String!
    $blogHandle: String!
    $country: CountryCode
    $language: LanguageCode
  ) @inContext(language: $language, country: $country) {
    blog(handle: $blogHandle) {
      articleByHandle(handle: $articleHandle) {
        title
        contentHtml
        publishedAt
        author: authorV2 {
          name
        }
        image {
          id
          altText
          url
          width
          height
        }
        seo {
          description
          title
        }
      }
    }
  }
`;

// app/routes/($locale).account_.reset.$id.$resetToken.jsx
var locale_account_reset_id_resetToken_exports = {};
__export(locale_account_reset_id_resetToken_exports, {
  action: () => action2,
  default: () => Reset,
  meta: () => meta3
});
var import_jsx_dev_runtime16 = __toESM(require_jsx_dev_runtime()), meta3 = () => [{ title: "Reset Password" }];
async function action2({ request, context, params }) {
  var _a2;
  if (request.method !== "POST")
    return json3({ error: "Method not allowed" }, { status: 405 });
  let { id, resetToken } = params, { session, storefront } = context;
  try {
    if (!id || !resetToken)
      throw new Error("customer token or id not found");
    let form = await request.formData(), password = form.has("password") ? String(form.get("password")) : "", passwordConfirm = form.has("passwordConfirm") ? String(form.get("passwordConfirm")) : "";
    if (Boolean(password && passwordConfirm) && password !== passwordConfirm)
      throw new Error("Please provide matching passwords");
    let { customerReset } = await storefront.mutate(CUSTOMER_RESET_MUTATION, {
      variables: {
        id: `gid://shopify/Customer/${id}`,
        input: { password, resetToken }
      }
    });
    if ((_a2 = customerReset == null ? void 0 : customerReset.customerUserErrors) != null && _a2.length)
      throw new Error(customerReset == null ? void 0 : customerReset.customerUserErrors[0].message);
    if (!(customerReset != null && customerReset.customerAccessToken))
      throw new Error("Access token not found. Please try again.");
    return session.set("customerAccessToken", customerReset.customerAccessToken), redirect4("/account", {
      headers: {
        "Set-Cookie": await session.commit()
      }
    });
  } catch (error) {
    return error instanceof Error ? json3({ error: error.message }, { status: 400 }) : json3({ error }, { status: 400 });
  }
}
function Reset() {
  let action12 = useActionData2();
  return /* @__PURE__ */ (0, import_jsx_dev_runtime16.jsxDEV)("div", { className: "account-reset", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime16.jsxDEV)("h1", { children: "Reset Password." }, void 0, !1, {
      fileName: "app/routes/($locale).account_.reset.$id.$resetToken.jsx",
      lineNumber: 64,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime16.jsxDEV)("p", { children: "Enter a new password for your account." }, void 0, !1, {
      fileName: "app/routes/($locale).account_.reset.$id.$resetToken.jsx",
      lineNumber: 65,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime16.jsxDEV)(Form, { method: "POST", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime16.jsxDEV)("fieldset", { children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime16.jsxDEV)("label", { htmlFor: "password", children: "Password" }, void 0, !1, {
          fileName: "app/routes/($locale).account_.reset.$id.$resetToken.jsx",
          lineNumber: 68,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime16.jsxDEV)(
          "input",
          {
            "aria-label": "Password",
            autoComplete: "current-password",
            autoFocus: !0,
            id: "password",
            minLength: 8,
            name: "password",
            placeholder: "Password",
            required: !0,
            type: "password"
          },
          void 0,
          !1,
          {
            fileName: "app/routes/($locale).account_.reset.$id.$resetToken.jsx",
            lineNumber: 69,
            columnNumber: 11
          },
          this
        ),
        /* @__PURE__ */ (0, import_jsx_dev_runtime16.jsxDEV)("label", { htmlFor: "passwordConfirm", children: "Re-enter password" }, void 0, !1, {
          fileName: "app/routes/($locale).account_.reset.$id.$resetToken.jsx",
          lineNumber: 81,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime16.jsxDEV)(
          "input",
          {
            "aria-label": "Re-enter password",
            autoComplete: "current-password",
            id: "passwordConfirm",
            minLength: 8,
            name: "passwordConfirm",
            placeholder: "Re-enter password",
            required: !0,
            type: "password"
          },
          void 0,
          !1,
          {
            fileName: "app/routes/($locale).account_.reset.$id.$resetToken.jsx",
            lineNumber: 82,
            columnNumber: 11
          },
          this
        )
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).account_.reset.$id.$resetToken.jsx",
        lineNumber: 67,
        columnNumber: 9
      }, this),
      action12 != null && action12.error ? /* @__PURE__ */ (0, import_jsx_dev_runtime16.jsxDEV)("p", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime16.jsxDEV)("mark", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime16.jsxDEV)("small", { children: action12.error }, void 0, !1, {
        fileName: "app/routes/($locale).account_.reset.$id.$resetToken.jsx",
        lineNumber: 96,
        columnNumber: 15
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale).account_.reset.$id.$resetToken.jsx",
        lineNumber: 95,
        columnNumber: 13
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale).account_.reset.$id.$resetToken.jsx",
        lineNumber: 94,
        columnNumber: 11
      }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime16.jsxDEV)("br", {}, void 0, !1, {
        fileName: "app/routes/($locale).account_.reset.$id.$resetToken.jsx",
        lineNumber: 100,
        columnNumber: 11
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime16.jsxDEV)("button", { type: "submit", children: "Reset" }, void 0, !1, {
        fileName: "app/routes/($locale).account_.reset.$id.$resetToken.jsx",
        lineNumber: 102,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).account_.reset.$id.$resetToken.jsx",
      lineNumber: 66,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime16.jsxDEV)("br", {}, void 0, !1, {
      fileName: "app/routes/($locale).account_.reset.$id.$resetToken.jsx",
      lineNumber: 104,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime16.jsxDEV)("p", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime16.jsxDEV)("a", { href: "/account/login", children: "Back to login \u2192" }, void 0, !1, {
      fileName: "app/routes/($locale).account_.reset.$id.$resetToken.jsx",
      lineNumber: 106,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale).account_.reset.$id.$resetToken.jsx",
      lineNumber: 105,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).account_.reset.$id.$resetToken.jsx",
    lineNumber: 63,
    columnNumber: 5
  }, this);
}
var CUSTOMER_RESET_MUTATION = `#graphql
  mutation customerReset(
    $id: ID!,
    $input: CustomerResetInput!
    $country: CountryCode
    $language: LanguageCode
  ) @inContext(country: $country, language: $language) {
    customerReset(id: $id, input: $input) {
      customerAccessToken {
        accessToken
        expiresAt
      }
      customerUserErrors {
        code
        field
        message
      }
    }
  }
`;

// app/routes/($locale).blogs.$blogHandle._index.jsx
var locale_blogs_blogHandle_index_exports = {};
__export(locale_blogs_blogHandle_index_exports, {
  default: () => Blog,
  loader: () => loader4,
  meta: () => meta4
});
var import_jsx_dev_runtime17 = __toESM(require_jsx_dev_runtime()), meta4 = ({ data: data2 }) => [{ title: `Hydrogen | ${data2.blog.title} blog` }], loader4 = async ({ request, params, context: { storefront } }) => {
  let paginationVariables = getPaginationVariables(request, {
    pageBy: 4
  });
  if (!params.blogHandle)
    throw new Response("blog not found", { status: 404 });
  let { blog } = await storefront.query(BLOGS_QUERY, {
    variables: {
      blogHandle: params.blogHandle,
      ...paginationVariables
    }
  });
  if (!(blog != null && blog.articles))
    throw new Response("Not found", { status: 404 });
  return json3({ blog });
};
function Blog() {
  let { blog } = useLoaderData2(), { articles } = blog;
  return /* @__PURE__ */ (0, import_jsx_dev_runtime17.jsxDEV)("div", { className: "blog", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime17.jsxDEV)("h1", { children: blog.title }, void 0, !1, {
      fileName: "app/routes/($locale).blogs.$blogHandle._index.jsx",
      lineNumber: 38,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime17.jsxDEV)("div", { className: "blog-grid", children: /* @__PURE__ */ (0, import_jsx_dev_runtime17.jsxDEV)(Pagination, { connection: articles, children: ({ nodes, isLoading, PreviousLink, NextLink }) => /* @__PURE__ */ (0, import_jsx_dev_runtime17.jsxDEV)(import_jsx_dev_runtime17.Fragment, { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime17.jsxDEV)(PreviousLink, { children: isLoading ? "Loading..." : /* @__PURE__ */ (0, import_jsx_dev_runtime17.jsxDEV)("span", { children: "\u2191 Load previous" }, void 0, !1, {
        fileName: "app/routes/($locale).blogs.$blogHandle._index.jsx",
        lineNumber: 45,
        columnNumber: 47
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale).blogs.$blogHandle._index.jsx",
        lineNumber: 44,
        columnNumber: 17
      }, this),
      nodes.map((article, index3) => /* @__PURE__ */ (0, import_jsx_dev_runtime17.jsxDEV)(
        ArticleItem,
        {
          article,
          title: blog.title,
          loading: index3 < 2 ? "eager" : "lazy"
        },
        article.id,
        !1,
        {
          fileName: "app/routes/($locale).blogs.$blogHandle._index.jsx",
          lineNumber: 49,
          columnNumber: 21
        },
        this
      )),
      /* @__PURE__ */ (0, import_jsx_dev_runtime17.jsxDEV)(NextLink, { children: isLoading ? "Loading..." : /* @__PURE__ */ (0, import_jsx_dev_runtime17.jsxDEV)("span", { children: "Load more \u2193" }, void 0, !1, {
        fileName: "app/routes/($locale).blogs.$blogHandle._index.jsx",
        lineNumber: 58,
        columnNumber: 47
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale).blogs.$blogHandle._index.jsx",
        lineNumber: 57,
        columnNumber: 17
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).blogs.$blogHandle._index.jsx",
      lineNumber: 43,
      columnNumber: 15
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale).blogs.$blogHandle._index.jsx",
      lineNumber: 40,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale).blogs.$blogHandle._index.jsx",
      lineNumber: 39,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).blogs.$blogHandle._index.jsx",
    lineNumber: 37,
    columnNumber: 5
  }, this);
}
function ArticleItem({ article, loading }) {
  let publishedAt = new Intl.DateTimeFormat("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric"
  }).format(new Date(article.publishedAt));
  return /* @__PURE__ */ (0, import_jsx_dev_runtime17.jsxDEV)("div", { className: "mst-card-md p-5 m-8 blog-article", children: /* @__PURE__ */ (0, import_jsx_dev_runtime17.jsxDEV)(Link2, { to: `/blogs/${article.blog.handle}/${article.handle}`, children: [
    article.image && /* @__PURE__ */ (0, import_jsx_dev_runtime17.jsxDEV)("div", { className: "blog-article-image", children: /* @__PURE__ */ (0, import_jsx_dev_runtime17.jsxDEV)(
      Image,
      {
        alt: article.image.altText || article.title,
        aspectRatio: "3/2",
        data: article.image,
        loading,
        sizes: "(min-width: 768px) 50vw, 100vw"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).blogs.$blogHandle._index.jsx",
        lineNumber: 81,
        columnNumber: 13
      },
      this
    ) }, void 0, !1, {
      fileName: "app/routes/($locale).blogs.$blogHandle._index.jsx",
      lineNumber: 80,
      columnNumber: 11
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime17.jsxDEV)("h3", { children: article.title }, void 0, !1, {
      fileName: "app/routes/($locale).blogs.$blogHandle._index.jsx",
      lineNumber: 90,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime17.jsxDEV)("small", { children: publishedAt }, void 0, !1, {
      fileName: "app/routes/($locale).blogs.$blogHandle._index.jsx",
      lineNumber: 91,
      columnNumber: 9
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).blogs.$blogHandle._index.jsx",
    lineNumber: 78,
    columnNumber: 7
  }, this) }, article.id, !1, {
    fileName: "app/routes/($locale).blogs.$blogHandle._index.jsx",
    lineNumber: 76,
    columnNumber: 5
  }, this);
}
var BLOGS_QUERY = `#graphql
  query Blog(
    $language: LanguageCode
    $blogHandle: String!
    $first: Int
    $last: Int
    $startCursor: String
    $endCursor: String
  ) @inContext(language: $language) {
    blog(handle: $blogHandle) {
      title
      seo {
        title
        description
      }
      articles(
        first: $first,
        last: $last,
        before: $startCursor,
        after: $endCursor
      ) {
        nodes {
          ...ArticleItem
        }
        pageInfo {
          hasPreviousPage
          hasNextPage
          hasNextPage
          endCursor
          startCursor
        }

      }
    }
  }
  fragment ArticleItem on Article {
    author: authorV2 {
      name
    }
    contentHtml
    handle
    id
    image {
      id
      altText
      url
      width
      height
    }
    publishedAt
    title
    blog {
      handle
    }
  }
`;

// app/routes/($locale).account.orders._index.jsx
var locale_account_orders_index_exports = {};
__export(locale_account_orders_index_exports, {
  CUSTOMER_FRAGMENT: () => CUSTOMER_FRAGMENT,
  default: () => Orders,
  loader: () => loader5,
  meta: () => meta5
});

// node_modules/@heroicons/react/24/solid/esm/PowerIcon.js
var React15 = __toESM(require_react(), 1);
function PowerIcon({
  title,
  titleId,
  ...props
}, svgRef) {
  return /* @__PURE__ */ React15.createElement("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "currentColor",
    "aria-hidden": "true",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /* @__PURE__ */ React15.createElement("title", {
    id: titleId
  }, title) : null, /* @__PURE__ */ React15.createElement("path", {
    fillRule: "evenodd",
    d: "M12 2.25a.75.75 0 01.75.75v9a.75.75 0 01-1.5 0V3a.75.75 0 01.75-.75zM6.166 5.106a.75.75 0 010 1.06 8.25 8.25 0 1011.668 0 .75.75 0 111.06-1.06c3.808 3.807 3.808 9.98 0 13.788-3.807 3.808-9.98 3.808-13.788 0-3.808-3.807-3.808-9.98 0-13.788a.75.75 0 011.06 0z",
    clipRule: "evenodd"
  }));
}
var ForwardRef = React15.forwardRef(PowerIcon), PowerIcon_default = ForwardRef;

// node_modules/@heroicons/react/24/solid/esm/ShoppingBagIcon.js
var React16 = __toESM(require_react(), 1);
function ShoppingBagIcon({
  title,
  titleId,
  ...props
}, svgRef) {
  return /* @__PURE__ */ React16.createElement("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "currentColor",
    "aria-hidden": "true",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /* @__PURE__ */ React16.createElement("title", {
    id: titleId
  }, title) : null, /* @__PURE__ */ React16.createElement("path", {
    fillRule: "evenodd",
    d: "M7.5 6v.75H5.513c-.96 0-1.764.724-1.865 1.679l-1.263 12A1.875 1.875 0 004.25 22.5h15.5a1.875 1.875 0 001.865-2.071l-1.263-12a1.875 1.875 0 00-1.865-1.679H16.5V6a4.5 4.5 0 10-9 0zM12 3a3 3 0 00-3 3v.75h6V6a3 3 0 00-3-3zm-3 8.25a3 3 0 106 0v-.75a.75.75 0 011.5 0v.75a4.5 4.5 0 11-9 0v-.75a.75.75 0 011.5 0v.75z",
    clipRule: "evenodd"
  }));
}
var ForwardRef2 = React16.forwardRef(ShoppingBagIcon), ShoppingBagIcon_default = ForwardRef2;

// node_modules/@heroicons/react/24/solid/esm/UserCircleIcon.js
var React17 = __toESM(require_react(), 1);
function UserCircleIcon({
  title,
  titleId,
  ...props
}, svgRef) {
  return /* @__PURE__ */ React17.createElement("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    fill: "currentColor",
    "aria-hidden": "true",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /* @__PURE__ */ React17.createElement("title", {
    id: titleId
  }, title) : null, /* @__PURE__ */ React17.createElement("path", {
    fillRule: "evenodd",
    d: "M18.685 19.097A9.723 9.723 0 0021.75 12c0-5.385-4.365-9.75-9.75-9.75S2.25 6.615 2.25 12a9.723 9.723 0 003.065 7.097A9.716 9.716 0 0012 21.75a9.716 9.716 0 006.685-2.653zm-12.54-1.285A7.486 7.486 0 0112 15a7.486 7.486 0 015.855 2.812A8.224 8.224 0 0112 20.25a8.224 8.224 0 01-5.855-2.438zM15.75 9a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z",
    clipRule: "evenodd"
  }));
}
var ForwardRef3 = React17.forwardRef(UserCircleIcon), UserCircleIcon_default = ForwardRef3;

// node_modules/@heroicons/react/24/outline/esm/XMarkIcon.js
var React18 = __toESM(require_react(), 1);
function XMarkIcon({
  title,
  titleId,
  ...props
}, svgRef) {
  return /* @__PURE__ */ React18.createElement("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 24 24",
    strokeWidth: 1.5,
    stroke: "currentColor",
    "aria-hidden": "true",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /* @__PURE__ */ React18.createElement("title", {
    id: titleId
  }, title) : null, /* @__PURE__ */ React18.createElement("path", {
    strokeLinecap: "round",
    strokeLinejoin: "round",
    d: "M6 18L18 6M6 6l12 12"
  }));
}
var ForwardRef4 = React18.forwardRef(XMarkIcon), XMarkIcon_default = ForwardRef4;

// app/routes/($locale).account.orders._index.jsx
var import_react34 = __toESM(require_react2()), import_jsx_dev_runtime18 = __toESM(require_jsx_dev_runtime()), meta5 = () => [{ title: "Orders" }];
async function loader5({ request, context }) {
  let { session, storefront } = context, customerAccessToken = await session.get("customerAccessToken");
  if (!(customerAccessToken != null && customerAccessToken.accessToken))
    return redirect4("/account/login");
  try {
    let paginationVariables = getPaginationVariables(request, {
      pageBy: 20
    }), { customer } = await storefront.query(CUSTOMER_ORDERS_QUERY, {
      variables: {
        customerAccessToken: customerAccessToken.accessToken,
        country: storefront.i18n.country,
        language: storefront.i18n.language,
        ...paginationVariables
      },
      cache: storefront.CacheNone()
    });
    if (!customer)
      throw new Error("Customer not found");
    return json3({ customer });
  } catch (error) {
    return error instanceof Error ? json3({ error: error.message }, { status: 400 }) : json3({ error }, { status: 400 });
  }
}
function Orders() {
  let { customer } = useLoaderData2(), { orders, numberOfOrders } = customer;
  return /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)("div", { className: "h-full w-full p-4", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)("h2", { children: [
      "Orders ",
      /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)("small", { children: [
        "(",
        numberOfOrders,
        ")"
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).account.orders._index.jsx",
        lineNumber: 69,
        columnNumber: 16
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).account.orders._index.jsx",
      lineNumber: 68,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)("br", {}, void 0, !1, {
      fileName: "app/routes/($locale).account.orders._index.jsx",
      lineNumber: 71,
      columnNumber: 7
    }, this),
    orders.nodes.length ? /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)(OrdersTable, { orders }, void 0, !1, {
      fileName: "app/routes/($locale).account.orders._index.jsx",
      lineNumber: 72,
      columnNumber: 30
    }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)(EmptyOrders, {}, void 0, !1, {
      fileName: "app/routes/($locale).account.orders._index.jsx",
      lineNumber: 72,
      columnNumber: 64
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).account.orders._index.jsx",
    lineNumber: 67,
    columnNumber: 5
  }, this);
}
function OrdersTable({ orders }) {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)("div", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)(OrderItem, { orders }, void 0, !1, {
    fileName: "app/routes/($locale).account.orders._index.jsx",
    lineNumber: 104,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/routes/($locale).account.orders._index.jsx",
    lineNumber: 79,
    columnNumber: 5
  }, this);
}
function EmptyOrders() {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)("div", { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)("p", { children: "You haven't placed any orders yet." }, void 0, !1, {
      fileName: "app/routes/($locale).account.orders._index.jsx",
      lineNumber: 112,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)("br", {}, void 0, !1, {
      fileName: "app/routes/($locale).account.orders._index.jsx",
      lineNumber: 113,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)("p", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)(Link2, { to: "/collections", children: "Start Shopping \u2192" }, void 0, !1, {
      fileName: "app/routes/($locale).account.orders._index.jsx",
      lineNumber: 115,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale).account.orders._index.jsx",
      lineNumber: 114,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).account.orders._index.jsx",
    lineNumber: 111,
    columnNumber: 5
  }, this);
}
function OrderItem({ orders }) {
  let TABLE_HEAD = ["Product", "Amount", "Date", "Status"], TABLE_ROWS = [
    {
      img: "https://demos.creative-tim.com/test/corporate-ui-dashboard/assets/img/logos/visa.png",
      name: "Spotify",
      amount: "$2,500",
      date: "Wed 3:00pm",
      status: "paid",
      account: "visa",
      accountNumber: "1234",
      expiry: "06/2026"
    },
    {
      img: "https://demos.creative-tim.com/test/corporate-ui-dashboard/assets/img/logos/visa.png",
      name: "Amazon",
      amount: "$5,000",
      date: "Wed 1:00pm",
      status: "paid",
      account: "master-card",
      accountNumber: "1234",
      expiry: "06/2026"
    },
    {
      img: "https://demos.creative-tim.com/test/corporate-ui-dashboard/assets/img/logos/visa.png",
      name: "Pinterest",
      amount: "$3,400",
      date: "Mon 7:40pm",
      status: "pending",
      account: "master-card",
      accountNumber: "1234",
      expiry: "06/2026"
    },
    {
      img: "https://demos.creative-tim.com/test/corporate-ui-dashboard/assets/img/logos/visa.png",
      name: "Google",
      amount: "$1,000",
      date: "Wed 5:00pm",
      status: "paid",
      account: "visa",
      accountNumber: "1234",
      expiry: "06/2026"
    },
    {
      img: "https://demos.creative-tim.com/test/corporate-ui-dashboard/assets/img/logos/visa.png",
      name: "netflix",
      amount: "$14,000",
      date: "Wed 3:30am",
      status: "cancelled",
      account: "visa",
      accountNumber: "1234",
      expiry: "06/2026"
    }
  ];
  return /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)(import_react34.Card, { className: "h-[90] overflow-y-auto w-full", children: /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)(import_react34.CardBody, { className: "px-0", children: /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)("table", { className: "w-full table-auto text-left", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)("thead", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)("tr", { children: TABLE_HEAD.map((head) => /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)(
      "th",
      {
        className: "border-y border-blue-gray-100 bg-blue-gray-50/50 p-4",
        children: /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)(
          import_react34.Typography,
          {
            variant: "small",
            color: "blue-gray",
            className: "font-normal leading-none opacity-70",
            children: head
          },
          void 0,
          !1,
          {
            fileName: "app/routes/($locale).account.orders._index.jsx",
            lineNumber: 188,
            columnNumber: 21
          },
          this
        )
      },
      head,
      !1,
      {
        fileName: "app/routes/($locale).account.orders._index.jsx",
        lineNumber: 184,
        columnNumber: 19
      },
      this
    )) }, void 0, !1, {
      fileName: "app/routes/($locale).account.orders._index.jsx",
      lineNumber: 182,
      columnNumber: 15
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale).account.orders._index.jsx",
      lineNumber: 181,
      columnNumber: 13
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)("tbody", { children: orders.nodes.map(
      (order2, index3) => {
        let classes = index3 === TABLE_ROWS.length - 1 ? "p-4" : "p-4 border-b border-blue-gray-50";
        return /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)("tr", { children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)("td", { className: classes, children: /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)("div", { className: "flex items-center gap-3", children: [
            /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)(
              import_react34.Avatar,
              {
                src: order2.lineItems.nodes[0].variant.image.url,
                alt: order2.lineItems.nodes[0].title,
                size: "md",
                className: "border border-blue-gray-50 bg-blue-gray-50/50 object-contain p-1"
              },
              void 0,
              !1,
              {
                fileName: "app/routes/($locale).account.orders._index.jsx",
                lineNumber: 214,
                columnNumber: 27
              },
              this
            ),
            /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)(
              import_react34.Typography,
              {
                variant: "small",
                color: "blue-gray",
                className: "font-bold",
                children: order2.lineItems.nodes[0].title
              },
              void 0,
              !1,
              {
                fileName: "app/routes/($locale).account.orders._index.jsx",
                lineNumber: 220,
                columnNumber: 27
              },
              this
            )
          ] }, void 0, !0, {
            fileName: "app/routes/($locale).account.orders._index.jsx",
            lineNumber: 213,
            columnNumber: 25
          }, this) }, void 0, !1, {
            fileName: "app/routes/($locale).account.orders._index.jsx",
            lineNumber: 212,
            columnNumber: 23
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)("td", { className: classes, children: /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)(
            import_react34.Typography,
            {
              variant: "small",
              color: "blue-gray",
              className: "font-normal",
              children: order2.currentTotalPrice.amount
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).account.orders._index.jsx",
              lineNumber: 230,
              columnNumber: 25
            },
            this
          ) }, void 0, !1, {
            fileName: "app/routes/($locale).account.orders._index.jsx",
            lineNumber: 229,
            columnNumber: 23
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)("td", { className: classes, children: /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)(
            import_react34.Typography,
            {
              variant: "small",
              color: "blue-gray",
              className: "font-normal",
              children: order2.processedAt
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).account.orders._index.jsx",
              lineNumber: 239,
              columnNumber: 25
            },
            this
          ) }, void 0, !1, {
            fileName: "app/routes/($locale).account.orders._index.jsx",
            lineNumber: 238,
            columnNumber: 23
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)("td", { className: classes, children: /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)("div", { className: "w-max", children: /* @__PURE__ */ (0, import_jsx_dev_runtime18.jsxDEV)(
            import_react34.Chip,
            {
              size: "sm",
              variant: "ghost",
              value: order2.financialStatus,
              color: order2.financialStatus === "paid" ? "green" : order2.financialStatus === "pending" ? "amber" : "red"
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).account.orders._index.jsx",
              lineNumber: 249,
              columnNumber: 27
            },
            this
          ) }, void 0, !1, {
            fileName: "app/routes/($locale).account.orders._index.jsx",
            lineNumber: 248,
            columnNumber: 25
          }, this) }, void 0, !1, {
            fileName: "app/routes/($locale).account.orders._index.jsx",
            lineNumber: 247,
            columnNumber: 23
          }, this)
        ] }, order2.lineItems.nodes[0].title, !0, {
          fileName: "app/routes/($locale).account.orders._index.jsx",
          lineNumber: 211,
          columnNumber: 21
        }, this);
      }
    ) }, void 0, !1, {
      fileName: "app/routes/($locale).account.orders._index.jsx",
      lineNumber: 199,
      columnNumber: 13
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).account.orders._index.jsx",
    lineNumber: 180,
    columnNumber: 11
  }, this) }, void 0, !1, {
    fileName: "app/routes/($locale).account.orders._index.jsx",
    lineNumber: 179,
    columnNumber: 9
  }, this) }, void 0, !1, {
    fileName: "app/routes/($locale).account.orders._index.jsx",
    lineNumber: 178,
    columnNumber: 7
  }, this);
}
var ORDER_ITEM_FRAGMENT = `#graphql
  fragment OrderItem on Order {
    currentTotalPrice {
      amount
      currencyCode
    }
    financialStatus
    fulfillmentStatus
    id
    lineItems(first: 10) {
      nodes {
        title
        variant {
          image {
            url
            altText
            height
            width
          }
        }
      }
    }
    orderNumber
    customerUrl
    statusUrl
    processedAt
  }
`, CUSTOMER_FRAGMENT = `#graphql
  fragment CustomerOrders on Customer {
    numberOfOrders
    orders(
      sortKey: PROCESSED_AT,
      reverse: true,
      first: $first,
      last: $last,
      before: $startCursor,
      after: $endCursor
    ) {
      nodes {
        ...OrderItem
      }
      pageInfo {
        hasPreviousPage
        hasNextPage
        hasNextPage
        endCursor
      }
    }
  }
  ${ORDER_ITEM_FRAGMENT}
`, CUSTOMER_ORDERS_QUERY = `#graphql
  ${CUSTOMER_FRAGMENT}
  query CustomerOrders(
    $country: CountryCode
    $customerAccessToken: String!
    $endCursor: String
    $first: Int
    $language: LanguageCode
    $last: Int
    $startCursor: String
  ) @inContext(country: $country, language: $language) {
    customer(customerAccessToken: $customerAccessToken) {
      ...CustomerOrders
    }
  }
`;

// app/routes/($locale).api.predictive-search.jsx
var locale_api_predictive_search_exports = {};
__export(locale_api_predictive_search_exports, {
  action: () => action3,
  normalizePredictiveSearchResults: () => normalizePredictiveSearchResults
});
var DEFAULT_SEARCH_TYPES = [
  "ARTICLE",
  "COLLECTION",
  "PAGE",
  "PRODUCT",
  "QUERY"
];
async function action3({ request, params, context }) {
  if (request.method !== "POST")
    throw new Error("Invalid request method");
  let search = await fetchPredictiveSearchResults({
    params,
    request,
    context
  });
  return json3(search);
}
async function fetchPredictiveSearchResults({ params, request, context }) {
  let url = new URL(request.url), searchParams = new URLSearchParams(url.search), body;
  try {
    body = await request.formData();
  } catch {
  }
  let searchTerm = String((body == null ? void 0 : body.get("q")) || searchParams.get("q") || ""), limit = Number((body == null ? void 0 : body.get("limit")) || searchParams.get("limit") || 10), rawTypes = String(
    (body == null ? void 0 : body.get("type")) || searchParams.get("type") || "ANY"
  ), searchTypes = rawTypes === "ANY" ? DEFAULT_SEARCH_TYPES : rawTypes.split(",").map((t18) => t18.toUpperCase()).filter((t18) => DEFAULT_SEARCH_TYPES.includes(t18));
  if (!searchTerm)
    return {
      searchResults: { results: null, totalResults: 0 },
      searchTerm,
      searchTypes
    };
  let data2 = await context.storefront.query(PREDICTIVE_SEARCH_QUERY, {
    variables: {
      limit,
      limitScope: "EACH",
      searchTerm,
      types: searchTypes
    }
  });
  if (!data2)
    throw new Error("No data returned from Shopify API");
  return { searchResults: normalizePredictiveSearchResults(
    data2.predictiveSearch,
    params.locale
  ), searchTerm, searchTypes };
}
function normalizePredictiveSearchResults(predictiveSearch, locale) {
  let totalResults = 0;
  if (!predictiveSearch)
    return {
      results: NO_PREDICTIVE_SEARCH_RESULTS,
      totalResults
    };
  function applyTrackingParams(resource, params) {
    return params ? resource.trackingParameters ? `?${params}&${resource.trackingParameters}` : `?${params}` : resource.trackingParameters ? `?${resource.trackingParameters}` : "";
  }
  let localePrefix = locale ? `/${locale}` : "", results2 = [];
  return predictiveSearch.queries.length && results2.push({
    type: "queries",
    items: predictiveSearch.queries.map((query) => {
      let trackingParams = applyTrackingParams(
        query,
        `q=${encodeURIComponent(query.text)}`
      );
      return totalResults++, {
        __typename: query.__typename,
        handle: "",
        id: query.text,
        image: void 0,
        title: query.text,
        styledTitle: query.styledText,
        url: `${localePrefix}/search${trackingParams}`
      };
    })
  }), predictiveSearch.products.length && results2.push({
    type: "products",
    items: predictiveSearch.products.map((product) => {
      var _a2, _b, _c;
      totalResults++;
      let trackingParams = applyTrackingParams(product);
      return {
        __typename: product.__typename,
        handle: product.handle,
        id: product.id,
        image: (_c = (_b = (_a2 = product.variants) == null ? void 0 : _a2.nodes) == null ? void 0 : _b[0]) == null ? void 0 : _c.image,
        title: product.title,
        url: `${localePrefix}/products/${product.handle}${trackingParams}`,
        price: product.variants.nodes[0].price
      };
    })
  }), predictiveSearch.collections.length && results2.push({
    type: "collections",
    items: predictiveSearch.collections.map((collection) => {
      totalResults++;
      let trackingParams = applyTrackingParams(collection);
      return {
        __typename: collection.__typename,
        handle: collection.handle,
        id: collection.id,
        image: collection.image,
        title: collection.title,
        url: `${localePrefix}/collections/${collection.handle}${trackingParams}`
      };
    })
  }), predictiveSearch.pages.length && results2.push({
    type: "pages",
    items: predictiveSearch.pages.map((page) => {
      totalResults++;
      let trackingParams = applyTrackingParams(page);
      return {
        __typename: page.__typename,
        handle: page.handle,
        id: page.id,
        image: void 0,
        title: page.title,
        url: `${localePrefix}/pages/${page.handle}${trackingParams}`
      };
    })
  }), predictiveSearch.articles.length && results2.push({
    type: "articles",
    items: predictiveSearch.articles.map((article) => {
      totalResults++;
      let trackingParams = applyTrackingParams(article);
      return {
        __typename: article.__typename,
        handle: article.handle,
        id: article.id,
        image: article.image,
        title: article.title,
        url: `${localePrefix}/blog/${article.handle}${trackingParams}`
      };
    })
  }), { results: results2, totalResults };
}
var PREDICTIVE_SEARCH_QUERY = `#graphql
  fragment PredictiveArticle on Article {
    __typename
    id
    title
    handle
    image {
      url
      altText
      width
      height
    }
    trackingParameters
  }
  fragment PredictiveCollection on Collection {
    __typename
    id
    title
    handle
    image {
      url
      altText
      width
      height
    }
    trackingParameters
  }
  fragment PredictivePage on Page {
    __typename
    id
    title
    handle
    trackingParameters
  }
  fragment PredictiveProduct on Product {
    __typename
    id
    title
    handle
    trackingParameters
    variants(first: 1) {
      nodes {
        id
        image {
          url
          altText
          width
          height
        }
        price {
          amount
          currencyCode
        }
      }
    }
  }
  fragment PredictiveQuery on SearchQuerySuggestion {
    __typename
    text
    styledText
    trackingParameters
  }
  query predictiveSearch(
    $country: CountryCode
    $language: LanguageCode
    $limit: Int!
    $limitScope: PredictiveSearchLimitScope!
    $searchTerm: String!
    $types: [PredictiveSearchType!]
  ) @inContext(country: $country, language: $language) {
    predictiveSearch(
      limit: $limit,
      limitScope: $limitScope,
      query: $searchTerm,
      types: $types,
    ) {
      articles {
        ...PredictiveArticle
      }
      collections {
        ...PredictiveCollection
      }
      pages {
        ...PredictivePage
      }
      products {
        ...PredictiveProduct
      }
      queries {
        ...PredictiveQuery
      }
    }
  }
`;

// app/routes/($locale).products.$handle-old.jsx
var locale_products_handle_old_exports = {};
__export(locale_products_handle_old_exports, {
  default: () => Product,
  loader: () => loader6,
  meta: () => meta6
});
var import_react37 = __toESM(require_react());
var import_react39 = __toESM(require_react());

// app/components/ProductsCorousel.jsx
var import_react35 = __toESM(require_react()), import_react_responsive5 = __toESM(require_react_responsive());
var import_jsx_dev_runtime19 = __toESM(require_jsx_dev_runtime()), ProductsCorousel = ({ products: products2 }) => {
  let noImg = "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/No-image-found.jpg?v=1708942129", productsToShow = [], [startIndex, setStartIndex] = (0, import_react35.useState)(0), lines = [], endIndex = (0, import_react_responsive5.useMediaQuery)({ minWidth: 1024 }) ? 4 : 2;
  (products2 != null || products2 != null) && (productsToShow = products2.edges.slice(startIndex, startIndex + endIndex));
  let goToProduct = (url_path) => {
    window.location.href = url_path;
  };
  return products2.edges.map((product) => {
    product.node.variants.edges.map((line) => {
      line.node.availableForSale && lines.push([
        {
          merchandiseId: line.node.id,
          quantity: 1
        }
      ]);
    });
  }), /* @__PURE__ */ (0, import_jsx_dev_runtime19.jsxDEV)("div", { className: "w-full max-w-screen-xl mx-auto lg:px-24 sm:px-4 md:px-6 py-6", children: /* @__PURE__ */ (0, import_jsx_dev_runtime19.jsxDEV)("div", { className: "relative", children: /* @__PURE__ */ (0, import_jsx_dev_runtime19.jsxDEV)("div", { className: "flex mobile-productView p-[10px] gap-4", children: productsToShow.map((product, index3) => /* @__PURE__ */ (0, import_jsx_dev_runtime19.jsxDEV)(
    "div",
    {
      className: "w-full sm:w-1/3 md:w-1/3 lg:px-4 sm:px-1 md:px-3",
      children: /* @__PURE__ */ (0, import_jsx_dev_runtime19.jsxDEV)("div", { className: "mst-card bg-white rounded-lg shadow-lg p-1 sm:p-2 shadow-md", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime19.jsxDEV)("div", { className: "cursor", onClick: () => goToProduct(`/products/${product.node.handle}`), children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime19.jsxDEV)(
            "img",
            {
              src: `${product.node.images.edges.length > 0 ? product.node.images.edges[0].node.url : noImg}`,
              alt: product.node.title,
              className: "w-full h-auto"
            },
            void 0,
            !1,
            {
              fileName: "app/components/ProductsCorousel.jsx",
              lineNumber: 49,
              columnNumber: 19
            },
            this
          ),
          /* @__PURE__ */ (0, import_jsx_dev_runtime19.jsxDEV)("div", { className: "product_info", children: [
            /* @__PURE__ */ (0, import_jsx_dev_runtime19.jsxDEV)("h2", { className: "text-lg font-semibold mt-2 text-center min-h-[85px] sm:min-h-[50px]", children: product.node.title }, void 0, !1, {
              fileName: "app/components/ProductsCorousel.jsx",
              lineNumber: 55,
              columnNumber: 21
            }, this),
            /* @__PURE__ */ (0, import_jsx_dev_runtime19.jsxDEV)("div", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime19.jsxDEV)("h1", { className: "text-center font-bold h-full w-full m-auto", children: [
              "\u20B9 ",
              Math.trunc(product.node.priceRange.minVariantPrice.amount)
            ] }, void 0, !0, {
              fileName: "app/components/ProductsCorousel.jsx",
              lineNumber: 59,
              columnNumber: 23
            }, this) }, void 0, !1, {
              fileName: "app/components/ProductsCorousel.jsx",
              lineNumber: 58,
              columnNumber: 21
            }, this)
          ] }, void 0, !0, {
            fileName: "app/components/ProductsCorousel.jsx",
            lineNumber: 54,
            columnNumber: 19
          }, this)
        ] }, void 0, !0, {
          fileName: "app/components/ProductsCorousel.jsx",
          lineNumber: 48,
          columnNumber: 17
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime19.jsxDEV)("div", { className: "px-1 py-1 flex items-center sm:flex-row gap-3 justify-center w-[100%]", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime19.jsxDEV)("div", { className: "w-[25%] flex justify-center", children: /* @__PURE__ */ (0, import_jsx_dev_runtime19.jsxDEV)(
            "svg",
            {
              xmlns: "http://www.w3.org/2000/svg",
              viewBox: "0 0 32 33",
              xmlSpace: "preserve",
              className: "sm:w-[43px] w-[43px] like-home",
              children: [
                /* @__PURE__ */ (0, import_jsx_dev_runtime19.jsxDEV)(
                  "path",
                  {
                    d: "M9 .5h14c4.7 0 8.5 3.8 8.5 8.5v14c0 4.7-3.8 8.5-8.5 8.5H9C4.3 31.5.5 27.7.5 23V9C.5 4.3 4.3.5 9 .5z",
                    fill: "rgb(255, 255, 255)",
                    stroke: "rgb(0, 0, 0)"
                  },
                  void 0,
                  !1,
                  {
                    fileName: "app/components/ProductsCorousel.jsx",
                    lineNumber: 74,
                    columnNumber: 23
                  },
                  this
                ),
                /* @__PURE__ */ (0, import_jsx_dev_runtime19.jsxDEV)(
                  "path",
                  {
                    d: "M22.3 11.8c.4.4.7.9.9 1.4.2.5.3 1.1.3 1.6 0 .6-.1 1.1-.3 1.6-.2.5-.5 1-.9 1.4l-5.6 5.6s-.1 0-.1.1h-.2s-.1 0-.1-.1l-5.6-5.6C10 17 9.5 16 9.5 14.9c0-1.1.3-2.1 1-2.9.7-.8 1.7-1.3 2.7-1.5 1.1-.1 2.1.2 3 .8l.3.2.3-.2c.8-.6 1.8-.9 2.8-.8 1.1.1 2 .5 2.7 1.3z",
                    fill: "none",
                    stroke: "rgb(0, 0, 0)"
                  },
                  void 0,
                  !1,
                  {
                    fileName: "app/components/ProductsCorousel.jsx",
                    lineNumber: 79,
                    columnNumber: 23
                  },
                  this
                )
              ]
            },
            void 0,
            !0,
            {
              fileName: "app/components/ProductsCorousel.jsx",
              lineNumber: 68,
              columnNumber: 21
            },
            this
          ) }, void 0, !1, {
            fileName: "app/components/ProductsCorousel.jsx",
            lineNumber: 67,
            columnNumber: 19
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime19.jsxDEV)("div", { "d-line": index3, className: "w-[75%]", children: /* @__PURE__ */ (0, import_jsx_dev_runtime19.jsxDEV)(
            CartForm,
            {
              route: "/cart",
              inputs: { lines: lines[index3] },
              action: CartForm.ACTIONS.LinesAdd,
              className: "w-[83%] ",
              children: (fetcher) => /* @__PURE__ */ (0, import_jsx_dev_runtime19.jsxDEV)(import_jsx_dev_runtime19.Fragment, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime19.jsxDEV)(
                "button",
                {
                  disabled: !product.node.variants || !product.node.variants.edges[0].node.availableForSale,
                  className: "w-[100%] h-11 bg-black hover:bg-blue-700 text-white font-bold py-1 rounded-lg inline-block home-product",
                  type: "submit",
                  onClick: () => {
                    window.location.href = window.location.href + "#cart-aside";
                  },
                  children: product.node.variants && product.node.variants.edges[0].node.availableForSale ? "ADD TO CART" : "Sold out"
                },
                void 0,
                !1,
                {
                  fileName: "app/components/ProductsCorousel.jsx",
                  lineNumber: 96,
                  columnNumber: 27
                },
                this
              ) }, void 0, !1, {
                fileName: "app/components/ProductsCorousel.jsx",
                lineNumber: 95,
                columnNumber: 25
              }, this)
            },
            void 0,
            !1,
            {
              fileName: "app/components/ProductsCorousel.jsx",
              lineNumber: 88,
              columnNumber: 21
            },
            this
          ) }, void 0, !1, {
            fileName: "app/components/ProductsCorousel.jsx",
            lineNumber: 87,
            columnNumber: 19
          }, this)
        ] }, void 0, !0, {
          fileName: "app/components/ProductsCorousel.jsx",
          lineNumber: 66,
          columnNumber: 17
        }, this)
      ] }, void 0, !0, {
        fileName: "app/components/ProductsCorousel.jsx",
        lineNumber: 47,
        columnNumber: 15
      }, this)
    },
    product.node.id,
    !1,
    {
      fileName: "app/components/ProductsCorousel.jsx",
      lineNumber: 44,
      columnNumber: 13
    },
    this
  )) }, void 0, !1, {
    fileName: "app/components/ProductsCorousel.jsx",
    lineNumber: 42,
    columnNumber: 9
  }, this) }, void 0, !1, {
    fileName: "app/components/ProductsCorousel.jsx",
    lineNumber: 41,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/components/ProductsCorousel.jsx",
    lineNumber: 40,
    columnNumber: 5
  }, this);
}, ProductsCorousel_default = ProductsCorousel;

// node_modules/react-share/dist/index.js
var import_jsx_runtime6 = __toESM(require_jsx_runtime(), 1), import_react36 = __toESM(require_react(), 1), import_classnames = __toESM(require_classnames(), 1), import_jsonp = __toESM(require_jsonp(), 1), __defProp2 = Object.defineProperty, __defProps = Object.defineProperties, __getOwnPropDescs = Object.getOwnPropertyDescriptors, __getOwnPropSymbols = Object.getOwnPropertySymbols, __hasOwnProp2 = Object.prototype.hasOwnProperty, __propIsEnum = Object.prototype.propertyIsEnumerable, __defNormalProp = (obj, key, value) => key in obj ? __defProp2(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __spreadValues = (a13, b6) => {
  for (var prop in b6 || (b6 = {}))
    __hasOwnProp2.call(b6, prop) && __defNormalProp(a13, prop, b6[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b6))
      __propIsEnum.call(b6, prop) && __defNormalProp(a13, prop, b6[prop]);
  return a13;
}, __spreadProps = (a13, b6) => __defProps(a13, __getOwnPropDescs(b6)), __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    __hasOwnProp2.call(source, prop) && exclude.indexOf(prop) < 0 && (target[prop] = source[prop]);
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source))
      exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop) && (target[prop] = source[prop]);
  return target;
};
function createIcon(iconConfig) {
  return (_a2) => {
    var _b = _a2, {
      bgStyle = {},
      borderRadius = 0,
      iconFillColor = "white",
      round = !1,
      size = 64
    } = _b, rest = __objRest(_b, [
      "bgStyle",
      "borderRadius",
      "iconFillColor",
      "round",
      "size"
    ]);
    return /* @__PURE__ */ (0, import_jsx_runtime6.jsxs)("svg", __spreadProps(__spreadValues({ viewBox: "0 0 64 64", width: size, height: size }, rest), { children: [
      round ? /* @__PURE__ */ (0, import_jsx_runtime6.jsx)("circle", { cx: "32", cy: "32", r: "32", fill: iconConfig.color, style: bgStyle }) : /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
        "rect",
        {
          width: "64",
          height: "64",
          rx: borderRadius,
          ry: borderRadius,
          fill: iconConfig.color,
          style: bgStyle
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime6.jsx)("path", { d: iconConfig.path, fill: iconFillColor })
    ] }));
  };
}
var EmailIcon = createIcon({
  color: "#7f7f7f",
  networkName: "email",
  path: "M17,22v20h30V22H17z M41.1,25L32,32.1L22.9,25H41.1z M20,39V26.6l12,9.3l12-9.3V39H20z"
});
function objectToGetParams(object) {
  let params = Object.entries(object).filter(([, value]) => value != null).map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);
  return params.length > 0 ? `?${params.join("&")}` : "";
}
var isPromise = (obj) => !!obj && (typeof obj == "object" || typeof obj == "function") && typeof obj.then == "function", getBoxPositionOnWindowCenter = (width, height) => ({
  left: window.outerWidth / 2 + (window.screenX || window.screenLeft || 0) - width / 2,
  top: window.outerHeight / 2 + (window.screenY || window.screenTop || 0) - height / 2
}), getBoxPositionOnScreenCenter = (width, height) => ({
  top: (window.screen.height - height) / 2,
  left: (window.screen.width - width) / 2
});
function windowOpen(url, _a2, onClose) {
  var _b = _a2, { height, width } = _b, configRest = __objRest(_b, ["height", "width"]);
  let config = __spreadValues({
    height,
    width,
    location: "no",
    toolbar: "no",
    status: "no",
    directories: "no",
    menubar: "no",
    scrollbars: "yes",
    resizable: "no",
    centerscreen: "yes",
    chrome: "yes"
  }, configRest), shareDialog = window.open(
    url,
    "",
    Object.keys(config).map((key) => `${key}=${config[key]}`).join(", ")
  );
  if (onClose) {
    let interval = window.setInterval(() => {
      try {
        (shareDialog === null || shareDialog.closed) && (window.clearInterval(interval), onClose(shareDialog));
      } catch (e5) {
        console.error(e5);
      }
    }, 1e3);
  }
  return shareDialog;
}
function ShareButton(_c) {
  var _d = _c, {
    beforeOnClick,
    children,
    className,
    disabled,
    disabledStyle = { opacity: 0.6 },
    forwardedRef,
    htmlTitle,
    networkLink,
    networkName,
    onClick,
    onShareWindowClose,
    openShareDialogOnClick = !0,
    opts,
    resetButtonStyle = !0,
    style: style2,
    url,
    windowHeight = 400,
    windowPosition = "windowCenter",
    windowWidth = 550
  } = _d, rest = __objRest(_d, [
    "beforeOnClick",
    "children",
    "className",
    "disabled",
    "disabledStyle",
    "forwardedRef",
    "htmlTitle",
    "networkLink",
    "networkName",
    "onClick",
    "onShareWindowClose",
    "openShareDialogOnClick",
    "opts",
    "resetButtonStyle",
    "style",
    "url",
    "windowHeight",
    "windowPosition",
    "windowWidth"
  ]);
  let handleClick = async (event) => {
    let link = networkLink(url, opts);
    if (!disabled) {
      if (event.preventDefault(), beforeOnClick) {
        let returnVal = beforeOnClick();
        isPromise(returnVal) && await returnVal;
      }
      if (openShareDialogOnClick) {
        let windowConfig = __spreadValues({
          height: windowHeight,
          width: windowWidth
        }, windowPosition === "windowCenter" ? getBoxPositionOnWindowCenter(windowWidth, windowHeight) : getBoxPositionOnScreenCenter(windowWidth, windowHeight));
        windowOpen(link, windowConfig, onShareWindowClose);
      }
      onClick && onClick(event, link);
    }
  }, newClassName = (0, import_classnames.default)(
    "react-share__ShareButton",
    {
      "react-share__ShareButton--disabled": !!disabled,
      disabled: !!disabled
    },
    className
  ), newStyle = __spreadValues(__spreadValues(resetButtonStyle ? {
    backgroundColor: "transparent",
    border: "none",
    padding: 0,
    font: "inherit",
    color: "inherit",
    cursor: "pointer"
  } : {}, style2), disabled && disabledStyle);
  return /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
    "button",
    __spreadProps(__spreadValues({}, rest), {
      className: newClassName,
      onClick: handleClick,
      ref: forwardedRef,
      style: newStyle,
      title: htmlTitle,
      children
    })
  );
}
function createShareButton(networkName, link, optsMap, defaultProps) {
  function CreatedButton(props, ref) {
    let opts = optsMap(props), passedProps = __spreadValues({}, props);
    return Object.keys(opts).forEach((key) => {
      delete passedProps[key];
    }), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
      ShareButton,
      __spreadProps(__spreadValues(__spreadValues({}, defaultProps), passedProps), {
        forwardedRef: ref,
        networkName,
        networkLink: link,
        opts: optsMap(props)
      })
    );
  }
  return CreatedButton.displayName = `ShareButton-${networkName}`, (0, import_react36.forwardRef)(CreatedButton);
}
function emailLink(url, { subject, body, separator }) {
  return "mailto:" + objectToGetParams({ subject, body: body ? body + separator + url : url });
}
var EmailShareButton = createShareButton(
  "email",
  emailLink,
  (props) => ({
    subject: props.subject,
    body: props.body,
    separator: props.separator || " "
  }),
  {
    openShareDialogOnClick: !1,
    onClick: (_3, link) => {
      window.location.href = link;
    }
  }
);
var FacebookIcon = createIcon({
  color: "#0965FE",
  networkName: "facebook",
  path: "M34.1,47V33.3h4.6l0.7-5.3h-5.3v-3.4c0-1.5,0.4-2.6,2.6-2.6l2.8,0v-4.8c-0.5-0.1-2.2-0.2-4.1-0.2 c-4.1,0-6.9,2.5-6.9,7V28H24v5.3h4.6V47H34.1z"
}), FacebookIcon$1 = FacebookIcon, FacebookMessengerIcon = createIcon({
  color: "#0A7CFF",
  networkName: "facebookmessenger",
  path: "M 53.066406 21.871094 C 52.667969 21.339844 51.941406 21.179688 51.359375 21.496094 L 37.492188 29.058594 L 28.867188 21.660156 C 28.339844 21.207031 27.550781 21.238281 27.054688 21.730469 L 11.058594 37.726562 C 10.539062 38.25 10.542969 39.09375 11.0625 39.613281 C 11.480469 40.027344 12.121094 40.121094 12.640625 39.839844 L 26.503906 32.28125 L 35.136719 39.679688 C 35.667969 40.132812 36.457031 40.101562 36.949219 39.609375 L 52.949219 23.613281 C 53.414062 23.140625 53.464844 22.398438 53.066406 21.871094 Z M 53.066406 21.871094"
});
function facebookMessengerLink(url, { appId, redirectUri, to }) {
  return "https://www.facebook.com/dialog/send" + objectToGetParams({
    link: url,
    redirect_uri: redirectUri || url,
    app_id: appId,
    to
  });
}
var FacebookMessengerShareButton = createShareButton(
  "facebookmessenger",
  facebookMessengerLink,
  (props) => ({
    appId: props.appId,
    redirectUri: props.redirectUri,
    to: props.to
  }),
  {
    windowWidth: 1e3,
    windowHeight: 820
  }
);
var AssertionError = class extends Error {
  constructor(message) {
    super(message), this.name = "AssertionError";
  }
};
function assert(value, message) {
  if (!value)
    throw new AssertionError(message);
}
function facebookLink(url, { hashtag }) {
  return assert(url, "facebook.url"), "https://www.facebook.com/sharer/sharer.php" + objectToGetParams({ u: url, hashtag });
}
var FacebookShareButton = createShareButton(
  "facebook",
  facebookLink,
  (props) => ({ hashtag: props.hashtag }),
  {
    windowWidth: 550,
    windowHeight: 400
  }
), FacebookShareButton$1 = FacebookShareButton;
function useIsMounted() {
  let isMounted = (0, import_react36.useRef)(!1);
  return (0, import_react36.useEffect)(() => (isMounted.current = !0, () => {
    isMounted.current = !1;
  }), []), (0, import_react36.useCallback)(() => isMounted.current, []);
}
function SocialMediaShareCount(_e3) {
  var _f = _e3, {
    children = (shareCount) => shareCount,
    className,
    getCount,
    url
  } = _f, rest = __objRest(_f, [
    "children",
    "className",
    "getCount",
    "url"
  ]);
  let isMounted = useIsMounted(), [count, setCount] = (0, import_react36.useState)(void 0), [isLoading, setIsLoading] = (0, import_react36.useState)(!1);
  return (0, import_react36.useEffect)(() => {
    setIsLoading(!0), getCount(url, (count2) => {
      isMounted() && (setCount(count2), setIsLoading(!1));
    });
  }, [url]), /* @__PURE__ */ (0, import_jsx_runtime6.jsx)("span", __spreadProps(__spreadValues({ className: (0, import_classnames.default)("react-share__ShareCount", className) }, rest), { children: !isLoading && count !== void 0 && children(count) }));
}
function createShareCount(getCount) {
  let ShareCount = (props) => /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(SocialMediaShareCount, __spreadValues({ getCount }, props));
  return ShareCount.displayName = `ShareCount(${getCount.name})`, ShareCount;
}
function getFacebookShareCount(shareUrl, callback) {
  let endpoint = `https://graph.facebook.com/?id=${shareUrl}&fields=og_object{engagement}`;
  (0, import_jsonp.default)(endpoint, (err, data2) => {
    callback(
      !err && data2 && data2.og_object && data2.og_object.engagement ? data2.og_object.engagement.count : void 0
    );
  });
}
var FacebookShareCount = createShareCount(getFacebookShareCount), HatenaIcon = createIcon({
  color: "#009ad9",
  networkName: "hatena",
  path: "M 36.164062 33.554688 C 34.988281 32.234375 33.347656 31.5 31.253906 31.34375 C 33.125 30.835938 34.476562 30.09375 35.335938 29.09375 C 36.191406 28.09375 36.609375 26.78125 36.609375 25.101562 C 36.628906 23.875 36.332031 22.660156 35.75 21.578125 C 35.160156 20.558594 34.292969 19.71875 33.253906 19.160156 C 32.304688 18.640625 31.175781 18.265625 29.847656 18.042969 C 28.523438 17.824219 26.195312 17.730469 22.867188 17.730469 L 14.769531 17.730469 L 14.769531 47.269531 L 23.113281 47.269531 C 26.46875 47.269531 28.886719 47.15625 30.367188 46.929688 C 31.851562 46.695312 33.085938 46.304688 34.085938 45.773438 C 35.289062 45.148438 36.28125 44.179688 36.933594 42.992188 C 37.597656 41.796875 37.933594 40.402344 37.933594 38.816406 C 37.933594 36.621094 37.347656 34.867188 36.164062 33.554688 Z M 22.257812 24.269531 L 23.984375 24.269531 C 25.988281 24.269531 27.332031 24.496094 28.015625 24.945312 C 28.703125 25.402344 29.042969 26.183594 29.042969 27.285156 C 29.042969 28.390625 28.664062 29.105469 27.9375 29.550781 C 27.210938 29.992188 25.84375 30.199219 23.855469 30.199219 L 22.257812 30.199219 Z M 29.121094 41.210938 C 28.328125 41.691406 26.976562 41.925781 25.078125 41.925781 L 22.257812 41.925781 L 22.257812 35.488281 L 25.195312 35.488281 C 27.144531 35.488281 28.496094 35.738281 29.210938 36.230469 C 29.925781 36.726562 30.304688 37.582031 30.304688 38.832031 C 30.304688 40.078125 29.914062 40.742188 29.105469 41.222656 Z M 29.121094 41.210938 M 46.488281 39.792969 C 44.421875 39.792969 42.742188 41.46875 42.742188 43.535156 C 42.742188 45.605469 44.421875 47.28125 46.488281 47.28125 C 48.554688 47.28125 50.230469 45.605469 50.230469 43.535156 C 50.230469 41.46875 48.554688 39.792969 46.488281 39.792969 Z M 46.488281 39.792969 M 43.238281 17.730469 L 49.738281 17.730469 L 49.738281 37.429688 L 43.238281 37.429688 Z M 43.238281 17.730469 "
});
function hatenaLink(url, { title }) {
  return assert(url, "hatena.url"), `http://b.hatena.ne.jp/add?mode=confirm&url=${url}&title=${title}`;
}
var HatenaShareButton = createShareButton(
  "hatena",
  hatenaLink,
  (props) => ({
    title: props.title
  }),
  {
    windowWidth: 660,
    windowHeight: 460,
    windowPosition: "windowCenter"
  }
);
function getHatenaShareCount(shareUrl, callback) {
  (0, import_jsonp.default)(
    "https://bookmark.hatenaapis.com/count/entry" + objectToGetParams({
      url: shareUrl
    }),
    (err, data2) => {
      callback(data2 ?? void 0);
    }
  );
}
var HatenaShareCount = createShareCount(getHatenaShareCount), InstapaperIcon = createIcon({
  color: "#1F1F1F",
  networkName: "instapaper",
  path: "M35.688 43.012c0 2.425.361 2.785 3.912 3.056V48H24.401v-1.932c3.555-.27 3.912-.63 3.912-3.056V20.944c0-2.379-.36-2.785-3.912-3.056V16H39.6v1.888c-3.55.27-3.912.675-3.912 3.056v22.068h.001z"
});
function instapaperLink(url, { title, description }) {
  return assert(url, "instapaper.url"), "http://www.instapaper.com/hello2" + objectToGetParams({
    url,
    title,
    description
  });
}
var InstapaperShareButton = createShareButton(
  "instapaper",
  instapaperLink,
  (props) => ({
    title: props.title,
    description: props.description
  }),
  {
    windowWidth: 500,
    windowHeight: 500,
    windowPosition: "windowCenter"
  }
);
var LineIcon = createIcon({
  color: "#00b800",
  networkName: "line",
  path: "M52.62 30.138c0 3.693-1.432 7.019-4.42 10.296h.001c-4.326 4.979-14 11.044-16.201 11.972-2.2.927-1.876-.591-1.786-1.112l.294-1.765c.069-.527.142-1.343-.066-1.865-.232-.574-1.146-.872-1.817-1.016-9.909-1.31-17.245-8.238-17.245-16.51 0-9.226 9.251-16.733 20.62-16.733 11.37 0 20.62 7.507 20.62 16.733zM27.81 25.68h-1.446a.402.402 0 0 0-.402.401v8.985c0 .221.18.4.402.4h1.446a.401.401 0 0 0 .402-.4v-8.985a.402.402 0 0 0-.402-.401zm9.956 0H36.32a.402.402 0 0 0-.402.401v5.338L31.8 25.858a.39.39 0 0 0-.031-.04l-.002-.003-.024-.025-.008-.007a.313.313 0 0 0-.032-.026.255.255 0 0 1-.021-.014l-.012-.007-.021-.012-.013-.006-.023-.01-.013-.005-.024-.008-.014-.003-.023-.005-.017-.002-.021-.003-.021-.002h-1.46a.402.402 0 0 0-.402.401v8.985c0 .221.18.4.402.4h1.446a.401.401 0 0 0 .402-.4v-5.337l4.123 5.568c.028.04.063.072.101.099l.004.003a.236.236 0 0 0 .025.015l.012.006.019.01a.154.154 0 0 1 .019.008l.012.004.028.01.005.001a.442.442 0 0 0 .104.013h1.446a.4.4 0 0 0 .401-.4v-8.985a.402.402 0 0 0-.401-.401zm-13.442 7.537h-3.93v-7.136a.401.401 0 0 0-.401-.401h-1.447a.4.4 0 0 0-.401.401v8.984a.392.392 0 0 0 .123.29c.072.068.17.111.278.111h5.778a.4.4 0 0 0 .401-.401v-1.447a.401.401 0 0 0-.401-.401zm21.429-5.287c.222 0 .401-.18.401-.402v-1.446a.401.401 0 0 0-.401-.402h-5.778a.398.398 0 0 0-.279.113l-.005.004-.006.008a.397.397 0 0 0-.111.276v8.984c0 .108.043.206.112.278l.005.006a.401.401 0 0 0 .284.117h5.778a.4.4 0 0 0 .401-.401v-1.447a.401.401 0 0 0-.401-.401h-3.93v-1.519h3.93c.222 0 .401-.18.401-.402V29.85a.401.401 0 0 0-.401-.402h-3.93V27.93h3.93z"
});
function lineLink(url, { title }) {
  return assert(url, "line.url"), "https://social-plugins.line.me/lineit/share" + objectToGetParams({
    url,
    text: title
  });
}
var LineShareButton = createShareButton(
  "line",
  lineLink,
  (props) => ({
    title: props.title
  }),
  {
    windowWidth: 500,
    windowHeight: 500
  }
);
var LinkedinIcon = createIcon({
  color: "#0077B5",
  networkName: "linkedin",
  path: "M20.4,44h5.4V26.6h-5.4V44z M23.1,18c-1.7,0-3.1,1.4-3.1,3.1c0,1.7,1.4,3.1,3.1,3.1 c1.7,0,3.1-1.4,3.1-3.1C26.2,19.4,24.8,18,23.1,18z M39.5,26.2c-2.6,0-4.4,1.4-5.1,2.8h-0.1v-2.4h-5.2V44h5.4v-8.6 c0-2.3,0.4-4.5,3.2-4.5c2.8,0,2.8,2.6,2.8,4.6V44H46v-9.5C46,29.8,45,26.2,39.5,26.2z"
});
function linkedinLink(url, { title, summary, source }) {
  return assert(url, "linkedin.url"), "https://linkedin.com/shareArticle" + objectToGetParams({ url, mini: "true", title, summary, source });
}
var LinkedinShareButton = createShareButton(
  "linkedin",
  linkedinLink,
  ({ title, summary, source }) => ({ title, summary, source }),
  {
    windowWidth: 750,
    windowHeight: 600
  }
);
var LivejournalIcon = createIcon({
  color: "#21A5D8",
  networkName: "livejournal",
  path: "M18.3407821,28.1764706 L21.9441341,31.789916 L33.0055865,42.882353 C33.0055865,42.882353 33.0893855,42.9663866 33.0893855,42.9663866 L46.6648046,47 C46.6648046,47 46.6648046,47 46.7486034,47 C46.8324022,47 46.8324022,47 46.9162012,46.9159664 C47,46.8319327 47,46.8319327 47,46.7478991 L42.9776536,33.1344537 C42.9776536,33.1344537 42.9776536,33.1344537 42.8938548,33.0504202 L31.1620111,21.3697479 L31.1620111,21.3697479 L28.1452514,18.2605042 C27.3072626,17.4201681 26.5530726,17 25.7150838,17 C24.2905028,17 23.0335195,18.3445378 21.5251397,19.8571429 C21.273743,20.1092437 20.9385475,20.4453781 20.6871508,20.697479 C20.3519553,21.0336134 20.1005586,21.2857143 19.849162,21.5378151 C18.3407821,22.9663866 17.0837989,24.2268908 17,25.7394958 C17.0837989,26.4957983 17.5027933,27.3361345 18.3407821,28.1764706 Z M39.9012319,39.6134454 C39.7336341,39.4453781 39.4822374,37.6806724 40.2364275,36.8403362 C40.9906174,36.0840337 41.6610084,36 42.1638017,36 C42.3313995,36 42.4989973,36 42.5827961,36 L44.8453659,43.5630253 L43.5883828,44.8235295 L36.0464833,42.5546218 C35.9626843,42.2184874 35.8788855,41.2100841 36.8844722,40.2016807 C37.2196676,39.8655463 37.8900587,39.6134454 38.5604498,39.6134454 C39.147042,39.6134454 39.5660364,39.7815126 39.5660364,39.7815126 C39.6498353,39.8655463 39.8174331,39.8655463 39.8174331,39.7815126 C39.9850307,39.7815126 39.9850307,39.697479 39.9012319,39.6134454 Z"
});
function livejournalLink(url, { title, description }) {
  return assert(url, "livejournal.url"), "https://www.livejournal.com/update.bml" + objectToGetParams({
    subject: title,
    event: description
  });
}
var LivejournalShareButton = createShareButton(
  "livejournal",
  livejournalLink,
  (props) => ({
    title: props.title,
    description: props.description
  }),
  {
    windowWidth: 660,
    windowHeight: 460
  }
);
var MailruIcon = createIcon({
  color: "#168DE2",
  networkName: "mailru",
  path: "M39.7107745,17 C41.6619755,17 43.3204965,18.732852 43.3204965,21.0072202 C43.3204965,23.2815885 41.7595357,25.0144404 39.7107745,25.0144404 C37.7595732,25.0144404 36.1010522,23.2815885 36.1010522,21.0072202 C36.1010522,18.732852 37.7595732,17 39.7107745,17 Z M24.3938451,17 C26.3450463,17 28.0035672,18.732852 28.0035672,21.0072202 C28.0035672,23.2815885 26.4426063,25.0144404 24.3938451,25.0144404 C22.4426439,25.0144404 20.7841229,23.2815885 20.7841229,21.0072202 C20.7841229,18.732852 22.4426439,17 24.3938451,17 Z M51.9057817,43.4259928 C51.7106617,44.0758123 51.4179815,44.6173285 50.9301812,44.9422383 C50.637501,45.1588448 50.2472607,45.267148 49.8570205,45.267148 C49.07654,45.267148 48.3936197,44.833935 48.0033795,44.0758123 L46.2472985,40.7184115 L45.759498,41.2599278 C42.5400162,44.9422383 37.466893,47 32.0035297,47 C26.5401664,47 21.5646034,44.9422383 18.2475614,41.2599278 L17.7597611,40.7184115 L16.00368,44.0758123 C15.6134398,44.833935 14.9305194,45.267148 14.1500389,45.267148 C13.7597986,45.267148 13.3695584,45.1588448 13.0768782,44.9422383 C12.0037176,44.2924187 11.7110374,42.7761733 12.2963978,41.5848375 L16.7841605,33.0288807 C17.1744007,32.270758 17.8573211,31.8375453 18.6378016,31.8375453 C19.0280418,31.8375453 19.4182821,31.9458485 19.7109623,32.1624548 C20.7841229,32.8122743 21.0768031,34.3285197 20.4914427,35.5198555 L20.1012025,36.2779783 L20.2963226,36.602888 C22.4426439,39.9602888 27.0279667,42.234657 31.9059697,42.234657 C36.7839727,42.234657 41.3692955,40.068592 43.5156167,36.602888 L43.7107367,36.2779783 L43.3204965,35.6281587 C43.0278165,35.0866425 42.9302562,34.436823 43.1253765,33.7870035 C43.3204965,33.137184 43.6131767,32.5956678 44.100977,32.270758 C44.3936572,32.0541515 44.7838975,31.9458485 45.1741377,31.9458485 C45.9546182,31.9458485 46.6375385,32.3790613 47.0277787,33.137184 L51.5155415,41.6931408 C52.003342,42.234657 52.100902,42.8844765 51.9057817,43.4259928 Z"
});
function mailruLink(url, { title, description, imageUrl }) {
  return assert(url, "mailru.url"), "https://connect.mail.ru/share" + objectToGetParams({
    url,
    title,
    description,
    image_url: imageUrl
  });
}
var MailruShareButton = createShareButton(
  "mailru",
  mailruLink,
  (props) => ({
    title: props.title,
    description: props.description,
    imageUrl: props.imageUrl
  }),
  {
    windowWidth: 660,
    windowHeight: 460
  }
);
var OKIcon = createIcon({
  color: "#F97400",
  networkName: "ok",
  path: "M39,30c-1,0-3,2-7,2s-6-2-7-2c-1.1,0-2,0.9-2,2c0,1,0.6,1.5,1,1.7c1.2,0.7,5,2.3,5,2.3l-4.3,5.4   c0,0-0.8,0.9-0.8,1.6c0,1.1,0.9,2,2,2c1,0,1.5-0.7,1.5-0.7S32,39,32,39c0,0,4.5,5.3,4.5,5.3S37,45,38,45c1.1,0,2-0.9,2-2   c0-0.6-0.8-1.6-0.8-1.6L35,36c0,0,3.8-1.6,5-2.3c0.4-0.3,1-0.7,1-1.7C41,30.9,40.1,30,39,30z M32,15c-3.9,0-7,3.1-7,7s3.1,7,7,7c3.9,0,7-3.1,7-7S35.9,15,32,15z M32,25.5   c-1.9,0-3.5-1.6-3.5-3.5c0-1.9,1.6-3.5,3.5-3.5c1.9,0,3.5,1.6,3.5,3.5C35.5,23.9,33.9,22.5,35,22.5z "
});
function okLink(url, { title, description, image }) {
  return assert(url, "ok.url"), "https://connect.ok.ru/offer" + objectToGetParams({
    url,
    title,
    description,
    imageUrl: image
  });
}
var OKShareButton = createShareButton(
  "ok",
  okLink,
  (props) => ({
    title: props.title,
    description: props.description,
    image: props.image
  }),
  {
    windowWidth: 588,
    windowHeight: 480,
    windowPosition: "screenCenter"
  }
);
function getOKShareCount(shareUrl, callback) {
  window.OK || (window.OK = {
    Share: {
      count: function(index22, _count) {
        var _a2, _b;
        (_b = (_a2 = window.OK.callbacks)[index22]) == null || _b.call(_a2, _count);
      }
    },
    callbacks: []
  });
  let url = "https://connect.ok.ru/dk", index3 = window.OK.callbacks.length;
  return window.ODKL = {
    updateCount(index22, count) {
      var _a2, _b;
      let callbackIndex = index22 === "" ? 0 : parseInt(index22.replace("react-share-", ""), 10);
      (_b = (_a2 = window.OK.callbacks)[callbackIndex]) == null || _b.call(_a2, count === "" ? void 0 : parseInt(count, 10));
    }
  }, window.OK.callbacks.push(callback), (0, import_jsonp.default)(
    url + objectToGetParams({
      "st.cmd": "extLike",
      uid: `react-share-${index3}`,
      ref: shareUrl
    })
  );
}
var OKShareCount = createShareCount(getOKShareCount), PinterestIcon = createIcon({
  color: "#E60023",
  networkName: "pinterest",
  path: "M32,16c-8.8,0-16,7.2-16,16c0,6.6,3.9,12.2,9.6,14.7c0-1.1,0-2.5,0.3-3.7 c0.3-1.3,2.1-8.7,2.1-8.7s-0.5-1-0.5-2.5c0-2.4,1.4-4.1,3.1-4.1c1.5,0,2.2,1.1,2.2,2.4c0,1.5-0.9,3.7-1.4,5.7 c-0.4,1.7,0.9,3.1,2.5,3.1c3,0,5.1-3.9,5.1-8.5c0-3.5-2.4-6.1-6.7-6.1c-4.9,0-7.9,3.6-7.9,7.7c0,1.4,0.4,2.4,1.1,3.1 c0.3,0.3,0.3,0.5,0.2,0.9c-0.1,0.3-0.3,1-0.3,1.3c-0.1,0.4-0.4,0.6-0.8,0.4c-2.2-0.9-3.3-3.4-3.3-6.1c0-4.5,3.8-10,11.4-10 c6.1,0,10.1,4.4,10.1,9.2c0,6.3-3.5,11-8.6,11c-1.7,0-3.4-0.9-3.9-2c0,0-0.9,3.7-1.1,4.4c-0.3,1.2-1,2.5-1.6,3.4 c1.4,0.4,3,0.7,4.5,0.7c8.8,0,16-7.2,16-16C48,23.2,40.8,16,32,16z"
});
function pinterestLink(url, { media, description, pinId }) {
  return pinId ? `https://pinterest.com/pin/${pinId}/repin/x/` : (assert(url, "pinterest.url"), assert(media, "pinterest.media"), "https://pinterest.com/pin/create/button/" + objectToGetParams({
    url,
    media,
    description
  }));
}
var PinterestShareButton = createShareButton(
  "pinterest",
  pinterestLink,
  (props) => ({
    media: props.media,
    description: props.description,
    pinId: props.pinId
  }),
  {
    windowWidth: 1e3,
    windowHeight: 730
  }
);
function getPinterestShareCount(shareUrl, callback) {
  (0, import_jsonp.default)(
    "https://api.pinterest.com/v1/urls/count.json" + objectToGetParams({
      url: shareUrl
    }),
    (err, data2) => {
      callback(data2 ? data2.count : void 0);
    }
  );
}
var PinterestShareCount = createShareCount(getPinterestShareCount), PocketIcon = createIcon({
  color: "#EF3F56",
  networkName: "pocket",
  path: "M41.084 29.065l-7.528 7.882a2.104 2.104 0 0 1-1.521.666 2.106 2.106 0 0 1-1.522-.666l-7.528-7.882c-.876-.914-.902-2.43-.065-3.384.84-.955 2.228-.987 3.1-.072l6.015 6.286 6.022-6.286c.88-.918 2.263-.883 3.102.071.841.938.82 2.465-.06 3.383l-.015.002zm6.777-10.976C47.463 16.84 46.361 16 45.14 16H18.905c-1.2 0-2.289.82-2.716 2.044-.125.363-.189.743-.189 1.125v10.539l.112 2.096c.464 4.766 2.73 8.933 6.243 11.838.06.053.125.102.19.153l.04.033c1.882 1.499 3.986 2.514 6.259 3.014a14.662 14.662 0 0 0 6.13.052c.118-.042.235-.065.353-.087.03 0 .065-.022.098-.042a15.395 15.395 0 0 0 6.011-2.945l.039-.045.18-.153c3.502-2.902 5.765-7.072 6.248-11.852L48 29.674v-10.52c0-.366-.041-.728-.161-1.08l.022.015z"
});
function pocketLink(url, { title }) {
  return assert(url, "pocket.url"), "https://getpocket.com/save" + objectToGetParams({
    url,
    title
  });
}
var PocketShareButton = createShareButton(
  "pocket",
  pocketLink,
  (props) => ({
    title: props.title
  }),
  {
    windowWidth: 500,
    windowHeight: 500
  }
);
var RedditIcon = createIcon({
  color: "#FF5700",
  networkName: "reddit",
  path: "M 53.34375 32 C 53.277344 30.160156 52.136719 28.53125 50.429688 27.839844 C 48.722656 27.148438 46.769531 27.523438 45.441406 28.800781 C 41.800781 26.324219 37.519531 24.957031 33.121094 24.863281 L 35.199219 14.878906 L 42.046875 16.320312 C 42.214844 17.882812 43.496094 19.09375 45.066406 19.171875 C 46.636719 19.253906 48.03125 18.183594 48.359375 16.644531 C 48.6875 15.105469 47.847656 13.558594 46.382812 12.992188 C 44.914062 12.425781 43.253906 13.007812 42.464844 14.367188 L 34.625 12.800781 C 34.363281 12.742188 34.09375 12.792969 33.871094 12.9375 C 33.648438 13.082031 33.492188 13.308594 33.441406 13.566406 L 31.070312 24.671875 C 26.617188 24.738281 22.277344 26.105469 18.59375 28.609375 C 17.242188 27.339844 15.273438 26.988281 13.570312 27.707031 C 11.863281 28.429688 10.746094 30.089844 10.71875 31.941406 C 10.691406 33.789062 11.757812 35.484375 13.441406 36.257812 C 13.402344 36.726562 13.402344 37.195312 13.441406 37.664062 C 13.441406 44.832031 21.792969 50.65625 32.097656 50.65625 C 42.398438 50.65625 50.753906 44.832031 50.753906 37.664062 C 50.789062 37.195312 50.789062 36.726562 50.753906 36.257812 C 52.363281 35.453125 53.371094 33.800781 53.34375 32 Z M 21.34375 35.199219 C 21.34375 33.433594 22.777344 32 24.542969 32 C 26.3125 32 27.742188 33.433594 27.742188 35.199219 C 27.742188 36.96875 26.3125 38.398438 24.542969 38.398438 C 22.777344 38.398438 21.34375 36.96875 21.34375 35.199219 Z M 39.9375 44 C 37.664062 45.710938 34.871094 46.582031 32.03125 46.464844 C 29.191406 46.582031 26.398438 45.710938 24.128906 44 C 23.847656 43.65625 23.871094 43.15625 24.183594 42.839844 C 24.5 42.527344 25 42.503906 25.34375 42.785156 C 27.269531 44.195312 29.617188 44.90625 32 44.800781 C 34.386719 44.929688 36.746094 44.242188 38.6875 42.847656 C 39.042969 42.503906 39.605469 42.511719 39.953125 42.863281 C 40.296875 43.21875 40.289062 43.785156 39.9375 44.128906 Z M 39.359375 38.527344 C 37.59375 38.527344 36.160156 37.09375 36.160156 35.328125 C 36.160156 33.5625 37.59375 32.128906 39.359375 32.128906 C 41.128906 32.128906 42.558594 33.5625 42.558594 35.328125 C 42.59375 36.203125 42.269531 37.054688 41.65625 37.6875 C 41.046875 38.316406 40.203125 38.664062 39.328125 38.65625 Z M 39.359375 38.527344"
});
function redditLink(url, { title }) {
  return assert(url, "reddit.url"), "https://www.reddit.com/submit" + objectToGetParams({
    url,
    title
  });
}
var RedditShareButton = createShareButton(
  "reddit",
  redditLink,
  (props) => ({
    title: props.title
  }),
  {
    windowWidth: 660,
    windowHeight: 460,
    windowPosition: "windowCenter"
  }
);
function gabLink(url, { title }) {
  return assert(url, "gab.url"), "https://gab.com/compose" + objectToGetParams({
    url,
    text: title
  });
}
var GabShareButton = createShareButton(
  "gab",
  gabLink,
  (props) => ({
    title: props.title
  }),
  {
    windowWidth: 660,
    windowHeight: 640,
    windowPosition: "windowCenter"
  }
);
var GabIcon = createIcon({
  color: "#00d178",
  networkName: "gab",
  path: "m17.0506,23.97457l5.18518,0l0,14.23933c0,6.82699 -3.72695,10.09328 -9.33471,10.09328c-2.55969,0 -4.82842,-0.87286 -6.22084,-2.0713l2.07477,-3.88283c1.19844,0.81051 2.33108,1.29543 3.85511,1.29543c2.75366,0 4.44049,-1.97432 4.44049,-4.82149l0,-0.87286c-1.16728,1.39242 -2.81947,2.0713 -4.63446,2.0713c-4.44048,0 -7.81068,-3.68885 -7.81068,-8.28521c0,-4.59289 3.37019,-8.28174 7.81068,-8.28174c1.81499,0 3.46718,0.67888 4.63446,2.0713l0,-1.55521zm-3.62997,11.39217c1.97777,0 3.62997,-1.6522 3.62997,-3.62652c0,-1.97432 -1.6522,-3.62305 -3.62997,-3.62305c-1.97778,0 -3.62997,1.64873 -3.62997,3.62305c0,1.97432 1.65219,3.62652 3.62997,3.62652zm25.7077,4.13913l-5.18518,0l0,-1.29197c-1.00448,1.13264 -2.3969,1.81152 -4.21188,1.81152c-3.62997,0 -5.63893,-2.52504 -5.63893,-5.4034c0,-4.27076 5.251,-5.85715 9.78846,-4.49937c-0.09698,-1.39241 -0.9733,-2.39343 -2.78829,-2.39343c-1.26426,0 -2.72248,0.48492 -3.62997,1.00102l-1.5552,-3.72003c1.19844,-0.77587 3.40136,-1.55174 5.96452,-1.55174c3.78931,0 7.25648,2.13365 7.25648,7.95962l0,8.08777zm-5.18518,-6.14809c-2.42806,-0.77587 -4.66563,-0.3533 -4.66563,1.36124c0,1.00101 0.84168,1.6799 1.84616,1.6799c1.20191,0 2.56315,-0.96984 2.81947,-3.04115zm13.00626,-17.66495l0,9.83695c1.16727,-1.39242 2.81946,-2.0713 4.63445,-2.0713c4.44048,0 7.81068,3.68885 7.81068,8.28174c0,4.59636 -3.37019,8.28521 -7.81068,8.28521c-1.81499,0 -3.46718,-0.67888 -4.63445,-2.0713l0,1.55174l-5.18519,0l0,-23.81304l5.18519,0zm3.62997,19.67391c1.97777,0 3.62997,-1.6522 3.62997,-3.62652c0,-1.97432 -1.6522,-3.62305 -3.62997,-3.62305c-1.97778,0 -3.62997,1.64873 -3.62997,3.62305c0,1.97432 1.65219,3.62652 3.62997,3.62652zm0,0"
});
function getRedditShareCount(shareUrl, callback) {
  let endpoint = `https://www.reddit.com/api/info.json?limit=1&url=${shareUrl}`;
  (0, import_jsonp.default)(endpoint, { param: "jsonp" }, (err, response) => {
    callback(
      !err && response && response.data && response.data.children.length > 0 && response.data.children[0].data.score ? response.data.children[0].data.score : void 0
    );
  });
}
var RedditShareCount = createShareCount(getRedditShareCount), TelegramIcon = createIcon({
  color: "#25A3E3",
  networkName: "telegram",
  path: "m45.90873,15.44335c-0.6901,-0.0281 -1.37668,0.14048 -1.96142,0.41265c-0.84989,0.32661 -8.63939,3.33986 -16.5237,6.39174c-3.9685,1.53296 -7.93349,3.06593 -10.98537,4.24067c-3.05012,1.1765 -5.34694,2.05098 -5.4681,2.09312c-0.80775,0.28096 -1.89996,0.63566 -2.82712,1.72788c-0.23354,0.27218 -0.46884,0.62161 -0.58825,1.10275c-0.11941,0.48114 -0.06673,1.09222 0.16682,1.5716c0.46533,0.96052 1.25376,1.35737 2.18443,1.71383c3.09051,0.99037 6.28638,1.93508 8.93263,2.8236c0.97632,3.44171 1.91401,6.89571 2.84116,10.34268c0.30554,0.69185 0.97105,0.94823 1.65764,0.95525l-0.00351,0.03512c0,0 0.53908,0.05268 1.06412,-0.07375c0.52679,-0.12292 1.18879,-0.42846 1.79109,-0.99212c0.662,-0.62161 2.45836,-2.38812 3.47683,-3.38552l7.6736,5.66477l0.06146,0.03512c0,0 0.84989,0.59703 2.09312,0.68132c0.62161,0.04214 1.4399,-0.07726 2.14229,-0.59176c0.70766,-0.51626 1.1765,-1.34683 1.396,-2.29506c0.65673,-2.86224 5.00979,-23.57745 5.75257,-27.00686l-0.02107,0.08077c0.51977,-1.93157 0.32837,-3.70159 -0.87096,-4.74991c-0.60054,-0.52152 -1.2924,-0.7498 -1.98425,-0.77965l0,0.00176zm-0.2072,3.29069c0.04741,0.0439 0.0439,0.0439 0.00351,0.04741c-0.01229,-0.00351 0.14048,0.2072 -0.15804,1.32576l-0.01229,0.04214l-0.00878,0.03863c-0.75858,3.50668 -5.15554,24.40802 -5.74203,26.96472c-0.08077,0.34417 -0.11414,0.31959 -0.09482,0.29852c-0.1756,-0.02634 -0.50045,-0.16506 -0.52679,-0.1756l-13.13468,-9.70175c4.4988,-4.33199 9.09945,-8.25307 13.744,-12.43229c0.8218,-0.41265 0.68483,-1.68573 -0.29852,-1.70681c-1.04305,0.24584 -1.92279,0.99564 -2.8798,1.47502c-5.49971,3.2626 -11.11882,6.13186 -16.55882,9.49279c-2.792,-0.97105 -5.57873,-1.77704 -8.15298,-2.57601c2.2336,-0.89555 4.00889,-1.55579 5.75608,-2.23009c3.05188,-1.1765 7.01687,-2.7042 10.98537,-4.24067c7.94051,-3.06944 15.92667,-6.16346 16.62028,-6.43037l0.05619,-0.02283l0.05268,-0.02283c0.19316,-0.0878 0.30378,-0.09658 0.35471,-0.10009c0,0 -0.01756,-0.05795 -0.00351,-0.04566l-0.00176,0zm-20.91715,22.0638l2.16687,1.60145c-0.93418,0.91311 -1.81743,1.77353 -2.45485,2.38812l0.28798,-3.98957"
});
function telegramLink(url, { title }) {
  return assert(url, "telegram.url"), "https://telegram.me/share/url" + objectToGetParams({
    url,
    text: title
  });
}
var TelegramShareButton = createShareButton(
  "telegram",
  telegramLink,
  (props) => ({
    title: props.title
  }),
  {
    windowWidth: 550,
    windowHeight: 400
  }
);
var TumblrIcon = createIcon({
  color: "#34526f",
  networkName: "tumblr",
  path: "M39.2,41c-0.6,0.3-1.6,0.5-2.4,0.5c-2.4,0.1-2.9-1.7-2.9-3v-9.3h6v-4.5h-6V17c0,0-4.3,0-4.4,0 c-0.1,0-0.2,0.1-0.2,0.2c-0.3,2.3-1.4,6.4-5.9,8.1v3.9h3V39c0,3.4,2.5,8.1,9,8c2.2,0,4.7-1,5.2-1.8L39.2,41z"
});
function tumblrLink(url, {
  title,
  caption,
  tags,
  posttype
}) {
  return assert(url, "tumblr.url"), "https://www.tumblr.com/widgets/share/tool" + objectToGetParams({
    canonicalUrl: url,
    title,
    caption,
    tags,
    posttype
  });
}
var TumblrShareButton = createShareButton(
  "tumblr",
  tumblrLink,
  (props) => ({
    title: props.title,
    tags: (props.tags || []).join(","),
    caption: props.caption,
    posttype: props.posttype || "link"
  }),
  {
    windowWidth: 660,
    windowHeight: 460
  }
);
function getTumblrShareCount(shareUrl, callback) {
  return (0, import_jsonp.default)(
    "https://api.tumblr.com/v2/share/stats" + objectToGetParams({
      url: shareUrl
    }),
    (err, data2) => {
      callback(!err && data2 && data2.response ? data2.response.note_count : void 0);
    }
  );
}
var TumblrShareCount = createShareCount(getTumblrShareCount), TwitterIcon = createIcon({
  color: "#00aced",
  networkName: "twitter",
  path: "M48,22.1c-1.2,0.5-2.4,0.9-3.8,1c1.4-0.8,2.4-2.1,2.9-3.6c-1.3,0.8-2.7,1.3-4.2,1.6 C41.7,19.8,40,19,38.2,19c-3.6,0-6.6,2.9-6.6,6.6c0,0.5,0.1,1,0.2,1.5c-5.5-0.3-10.3-2.9-13.5-6.9c-0.6,1-0.9,2.1-0.9,3.3 c0,2.3,1.2,4.3,2.9,5.5c-1.1,0-2.1-0.3-3-0.8c0,0,0,0.1,0,0.1c0,3.2,2.3,5.8,5.3,6.4c-0.6,0.1-1.1,0.2-1.7,0.2c-0.4,0-0.8,0-1.2-0.1 c0.8,2.6,3.3,4.5,6.1,4.6c-2.2,1.8-5.1,2.8-8.2,2.8c-0.5,0-1.1,0-1.6-0.1c2.9,1.9,6.4,2.9,10.1,2.9c12.1,0,18.7-10,18.7-18.7 c0-0.3,0-0.6,0-0.8C46,24.5,47.1,23.4,48,22.1z"
});
function twitterLink(url, {
  title,
  via,
  hashtags = [],
  related = []
}) {
  return assert(url, "twitter.url"), assert(Array.isArray(hashtags), "twitter.hashtags is not an array"), assert(Array.isArray(related), "twitter.related is not an array"), "https://twitter.com/intent/tweet" + objectToGetParams({
    url,
    text: title,
    via,
    hashtags: hashtags.length > 0 ? hashtags.join(",") : void 0,
    related: related.length > 0 ? related.join(",") : void 0
  });
}
var TwitterShareButton = createShareButton(
  "twitter",
  twitterLink,
  (props) => ({
    hashtags: props.hashtags,
    title: props.title,
    via: props.via,
    related: props.related
  }),
  {
    windowWidth: 550,
    windowHeight: 400
  }
);
var ViberIcon = createIcon({
  color: "#7360f2",
  networkName: "viber",
  path: "m31.0,12.3c9.0,0.2 16.4,6.2 18.0,15.2c0.2,1.5 0.3,3.0 0.4,4.6a1.0,1.0 0 0 1 -0.8,1.2l-0.1,0a1.1,1.1 0 0 1 -1.0,-1.2l0,0c-0.0,-1.2 -0.1,-2.5 -0.3,-3.8a16.1,16.1 0 0 0 -13.0,-13.5c-1.0,-0.1 -2.0,-0.2 -3.0,-0.3c-0.6,-0.0 -1.4,-0.1 -1.6,-0.8a1.1,1.1 0 0 1 0.9,-1.2l0.6,0l0.0,-0.0zm10.6,39.2a19.9,19.9 0 0 1 -2.1,-0.6c-6.9,-2.9 -13.2,-6.6 -18.3,-12.2a47.5,47.5 0 0 1 -7.0,-10.7c-0.8,-1.8 -1.6,-3.7 -2.4,-5.6c-0.6,-1.7 0.3,-3.4 1.4,-4.7a11.3,11.3 0 0 1 3.7,-2.8a2.4,2.4 0 0 1 3.0,0.7a39.0,39.0 0 0 1 4.7,6.5a3.1,3.1 0 0 1 -0.8,4.2c-0.3,0.2 -0.6,0.5 -1.0,0.8a3.3,3.3 0 0 0 -0.7,0.7a2.1,2.1 0 0 0 -0.1,1.9c1.7,4.9 4.7,8.7 9.7,10.8a5.0,5.0 0 0 0 2.5,0.6c1.5,-0.1 2.0,-1.8 3.1,-2.7a2.9,2.9 0 0 1 3.5,-0.1c1.1,0.7 2.2,1.4 3.3,2.2a37.8,37.8 0 0 1 3.1,2.4a2.4,2.4 0 0 1 0.7,3.0a10.4,10.4 0 0 1 -4.4,4.8a10.8,10.8 0 0 1 -1.9,0.6c-0.7,-0.2 0.6,-0.2 0,0l0.0,0l0,-0.0zm3.1,-21.4a4.2,4.2 0 0 1 -0.0,0.6a1.0,1.0 0 0 1 -1.9,0.1a2.7,2.7 0 0 1 -0.1,-0.8a10.9,10.9 0 0 0 -1.4,-5.5a10.2,10.2 0 0 0 -4.2,-4.0a12.3,12.3 0 0 0 -3.4,-1.0c-0.5,-0.0 -1.0,-0.1 -1.5,-0.2a0.9,0.9 0 0 1 -0.9,-1.0l0,-0.1a0.9,0.9 0 0 1 0.9,-0.9l0.1,0a14.1,14.1 0 0 1 5.9,1.5a11.9,11.9 0 0 1 6.5,9.3c0,0.1 0.0,0.3 0.0,0.5c0,0.4 0.0,0.9 0.0,1.5l0,0l0.0,0.0zm-5.6,-0.2a1.1,1.1 0 0 1 -1.2,-0.9l0,-0.1a11.3,11.3 0 0 0 -0.2,-1.4a4.0,4.0 0 0 0 -1.5,-2.3a3.9,3.9 0 0 0 -1.2,-0.5c-0.5,-0.1 -1.1,-0.1 -1.6,-0.2a1.0,1.0 0 0 1 -0.8,-1.1l0,0l0,0a1.0,1.0 0 0 1 1.1,-0.8c3.4,0.2 6.0,2.0 6.3,6.2a2.8,2.8 0 0 1 0,0.8a0.8,0.8 0 0 1 -0.8,0.7l0,0l0.0,-0.0z"
});
function viberLink(url, { title, separator }) {
  return assert(url, "viber.url"), "viber://forward" + objectToGetParams({
    text: title ? title + separator + url : url
  });
}
var ViberShareButton = createShareButton(
  "viber",
  viberLink,
  (props) => ({
    title: props.title,
    separator: props.separator || " "
  }),
  {
    windowWidth: 660,
    windowHeight: 460
  }
);
var VKIcon = createIcon({
  color: "#4C75A3",
  networkName: "vk",
  path: "M44.94,44.84h-0.2c-2.17-.36-3.66-1.92-4.92-3.37C39.1,40.66,38,38.81,36.7,39c-1.85.3-.93,3.52-1.71,4.9-0.62,1.11-3.29.91-5.12,0.71-5.79-.62-8.75-3.77-11.35-7.14A64.13,64.13,0,0,1,11.6,26a10.59,10.59,0,0,1-1.51-4.49C11,20.7,12.56,21,14.11,21c1.31,0,3.36-.29,4.32.2C19,21.46,19.57,23,20,24a37.18,37.18,0,0,0,3.31,5.82c0.56,0.81,1.41,2.35,2.41,2.14s1.06-2.63,1.1-4.18c0-1.77,0-4-.5-4.9S25,22,24.15,21.47c0.73-1.49,2.72-1.63,5.12-1.63,2,0,4.84-.23,5.62,1.12s0.25,3.85.2,5.71c-0.06,2.09-.41,4.25,1,5.21,1.09-.12,1.68-1.2,2.31-2A28,28,0,0,0,41.72,24c0.44-1,.91-2.65,1.71-3,1.21-.47,3.15-0.1,4.92-0.1,1.46,0,4.05-.41,4.52.61,0.39,0.85-.75,3-1.1,3.57a61.88,61.88,0,0,1-4.12,5.61c-0.58.78-1.78,2-1.71,3.27,0.05,0.94,1,1.67,1.71,2.35a33.12,33.12,0,0,1,3.92,4.18c0.47,0.62,1.5,2,1.4,2.76C52.66,45.81,46.88,44.24,44.94,44.84Z"
});
function vkLink(url, { title, image, noParse, noVkLinks }) {
  return assert(url, "vk.url"), "https://vk.com/share.php" + objectToGetParams({
    url,
    title,
    image,
    noparse: noParse ? 1 : 0,
    no_vk_links: noVkLinks ? 1 : 0
  });
}
var VKShareButton = createShareButton(
  "vk",
  vkLink,
  (props) => ({
    title: props.title,
    image: props.image,
    noParse: props.noParse,
    noVkLinks: props.noVkLinks
  }),
  {
    windowWidth: 660,
    windowHeight: 460
  }
);
function getVKShareCount(shareUrl, callback) {
  window.VK || (window.VK = {}), window.VK.Share = {
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    count: (index22, count) => {
      var _a2, _b;
      return (_b = (_a2 = window.VK.callbacks) == null ? void 0 : _a2[index22]) == null ? void 0 : _b.call(_a2, count);
    }
  }, window.VK.callbacks = [];
  let url = "https://vk.com/share.php", index3 = window.VK.callbacks.length;
  return window.VK.callbacks.push(callback), (0, import_jsonp.default)(
    url + objectToGetParams({
      act: "count",
      index: index3,
      url: shareUrl
    })
  );
}
var VKShareCount = createShareCount(getVKShareCount), WeiboIcon = createIcon({
  color: "#DF2029",
  networkName: "weibo",
  path: "M40.9756152,15.0217119 C40.5000732,15.0546301 39.9999314,15.1204666 39.5325878,15.2192213 C38.6634928,15.4085016 38.0977589,16.2643757 38.2863368,17.1284787 C38.4667163,18.0008129 39.3194143,18.5686519 40.1885094,18.3793715 C42.8613908,17.8115326 45.7720411,18.6427174 47.7316073,20.8153207 C49.6911735,22.996153 50.2077122,25.975254 49.3714112,28.5840234 C49.1008441,29.4316684 49.5763861,30.3533789 50.4208857,30.6249537 C51.2653852,30.8965286 52.1754769,30.4192153 52.4542425,29.5715703 C53.6349013,25.9011885 52.9133876,21.7699494 50.1585171,18.7085538 C48.0923641,16.4042776 45.2063093,15.1533848 42.3530505,15.0217119 C41.8775084,14.9970227 41.4511594,14.9887937 40.9756152,15.0217119 Z M27.9227762,19.8277737 C24.9957268,20.140498 20.863421,22.4365431 17.2312548,26.0822378 C13.2711279,30.0571148 11,34.2871065 11,37.9328012 C11,44.9032373 19.8713401,49.125 28.5786978,49.125 C39.9917329,49.125 47.600423,42.4261409 47.600423,37.1427636 C47.600423,33.9496952 44.9603397,32.1638816 42.549827,31.4149913 C41.9594976,31.2339421 41.5167516,31.1434164 41.8283133,30.3616079 C42.5006339,28.66632 42.6236176,27.1932286 41.8939054,26.1480742 C40.5328692,24.1894405 36.7203236,24.2881952 32.448635,26.0822378 C32.448635,26.0822378 31.1203949,26.6912261 31.4647526,25.6213825 C32.1206742,23.4981576 32.0304845,21.712342 31.0056075,20.6836478 C30.2840938,19.9512176 29.2510184,19.6878718 27.9227762,19.8277737 Z M42.0906819,20.6836478 C41.6233383,20.6589586 41.1723917,20.716566 40.7132466,20.8153207 C39.9671353,20.9716828 39.4997917,21.7781784 39.6637721,22.5270687 C39.8277525,23.275959 40.5574647,23.7450433 41.303576,23.5804521 C42.1972686,23.3911718 43.2057485,23.6380596 43.8616701,24.3704897 C44.5175916,25.1029198 44.6733735,26.0657797 44.3864073,26.9381118 C44.1486363,27.6705419 44.5093932,28.4770397 45.2391054,28.7156963 C45.9688176,28.9461239 46.780521,28.5922524 47.0100936,27.8598223 C47.584026,26.0740087 47.2396661,24.0248493 45.8950269,22.5270687 C44.886547,21.4078489 43.4845162,20.7494842 42.0906819,20.6836478 Z M29.496988,29.9665891 C35.3100922,30.1723275 39.9917329,33.0691319 40.3852858,37.0769272 C40.8362324,41.6607904 35.5970585,45.9319315 28.6442899,46.6232144 C21.6915214,47.3144973 15.6488446,44.154347 15.197898,39.5787128 C14.7469514,34.9948495 20.059916,30.7237084 27.004486,30.0324256 C27.8735831,29.950131 28.6688875,29.9336709 29.496988,29.9665891 Z M25.5614586,34.3776322 C23.183744,34.5916017 20.9372116,35.9577073 19.9205332,37.9328012 C18.5348994,40.6238672 19.9041362,43.6029661 23.0689567,44.582284 C26.340366,45.5945202 30.1857056,44.0638213 31.5303448,41.1587879 C32.8503864,38.3195909 31.1613894,35.3734082 27.9227762,34.5751416 C27.1438688,34.3776322 26.356763,34.3035667 25.5614586,34.3776322 Z M24.052839,38.7228388 C24.3316067,38.7310678 24.5857748,38.8215935 24.8399449,38.9203482 C25.8648218,39.3400561 26.1845841,40.4428158 25.5614586,41.4221338 C24.9219361,42.3932227 23.5690963,42.8623069 22.5442194,42.4096807 C21.5357395,41.9652856 21.2487754,40.8542948 21.8882979,39.9078951 C22.3638421,39.2001542 23.2247386,38.7146097 24.052839,38.7228388 Z"
});
function weiboLink(url, { title, image }) {
  return assert(url, "weibo.url"), "http://service.weibo.com/share/share.php" + objectToGetParams({
    url,
    title,
    pic: image
  });
}
var WeiboShareButton = createShareButton(
  "weibo",
  weiboLink,
  (props) => ({
    title: props.title,
    image: props.image
  }),
  {
    windowWidth: 660,
    windowHeight: 550,
    windowPosition: "screenCenter"
  }
);
var WhatsappIcon = createIcon({
  color: "#25D366",
  networkName: "whatsapp",
  path: "m42.32286,33.93287c-0.5178,-0.2589 -3.04726,-1.49644 -3.52105,-1.66732c-0.4712,-0.17346 -0.81554,-0.2589 -1.15987,0.2589c-0.34175,0.51004 -1.33075,1.66474 -1.63108,2.00648c-0.30032,0.33658 -0.60064,0.36247 -1.11327,0.12945c-0.5178,-0.2589 -2.17994,-0.80259 -4.14759,-2.56312c-1.53269,-1.37217 -2.56312,-3.05503 -2.86603,-3.57283c-0.30033,-0.5178 -0.03366,-0.80259 0.22524,-1.06149c0.23301,-0.23301 0.5178,-0.59547 0.7767,-0.90616c0.25372,-0.31068 0.33657,-0.5178 0.51262,-0.85437c0.17088,-0.36246 0.08544,-0.64725 -0.04402,-0.90615c-0.12945,-0.2589 -1.15987,-2.79613 -1.58964,-3.80584c-0.41424,-1.00971 -0.84142,-0.88027 -1.15987,-0.88027c-0.29773,-0.02588 -0.64208,-0.02588 -0.98382,-0.02588c-0.34693,0 -0.90616,0.12945 -1.37736,0.62136c-0.4712,0.5178 -1.80194,1.76053 -1.80194,4.27186c0,2.51134 1.84596,4.945 2.10227,5.30747c0.2589,0.33657 3.63497,5.51458 8.80262,7.74113c1.23237,0.5178 2.1903,0.82848 2.94111,1.08738c1.23237,0.38836 2.35599,0.33657 3.24402,0.20712c0.99159,-0.15534 3.04985,-1.24272 3.47963,-2.45956c0.44013,-1.21683 0.44013,-2.22654 0.31068,-2.45955c-0.12945,-0.23301 -0.46601,-0.36247 -0.98382,-0.59548m-9.40068,12.84407l-0.02589,0c-3.05503,0 -6.08417,-0.82849 -8.72495,-2.38189l-0.62136,-0.37023l-6.47252,1.68286l1.73463,-6.29129l-0.41424,-0.64725c-1.70875,-2.71846 -2.6149,-5.85116 -2.6149,-9.07706c0,-9.39809 7.68934,-17.06155 17.15993,-17.06155c4.58253,0 8.88029,1.78642 12.11655,5.02268c3.23625,3.21036 5.02267,7.50812 5.02267,12.06476c-0.0078,9.3981 -7.69712,17.06155 -17.14699,17.06155m14.58906,-31.58846c-3.93529,-3.80584 -9.1133,-5.95471 -14.62789,-5.95471c-11.36055,0 -20.60848,9.2065 -20.61625,20.52564c0,3.61684 0.94757,7.14565 2.75211,10.26282l-2.92557,10.63564l10.93337,-2.85309c3.0136,1.63108 6.4052,2.4958 9.85634,2.49839l0.01037,0c11.36574,0 20.61884,-9.2091 20.62403,-20.53082c0,-5.48093 -2.14111,-10.64081 -6.03239,-14.51915"
}), WhatsappIcon$1 = WhatsappIcon;
function isMobileOrTablet() {
  return /(android|iphone|ipad|mobile)/i.test(navigator.userAgent);
}
function whatsappLink(url, { title, separator }) {
  return assert(url, "whatsapp.url"), "https://" + (isMobileOrTablet() ? "api" : "web") + ".whatsapp.com/send" + objectToGetParams({
    text: title ? title + separator + url : url
  });
}
var WhatsappShareButton = createShareButton(
  "whatsapp",
  whatsappLink,
  (props) => ({
    title: props.title,
    separator: props.separator || " "
  }),
  {
    windowWidth: 550,
    windowHeight: 400
  }
), WhatsappShareButton$1 = WhatsappShareButton, WorkplaceIcon = createIcon({
  color: "#4326c4",
  networkName: "workplace",
  path: "M34.019,10.292c0.21,0.017,0.423,0.034,0.636,0.049 c3.657,0.262,6.976,1.464,9.929,3.635c3.331,2.448,5.635,5.65,6.914,9.584c0.699,2.152,0.983,4.365,0.885,6.623 c-0.136,3.171-1.008,6.13-2.619,8.867c-0.442,0.75-0.908,1.492-1.495,2.141c-0.588,0.651-1.29,1.141-2.146,1.383 c-1.496,0.426-3.247-0.283-3.961-1.642c-0.26-0.494-0.442-1.028-0.654-1.548c-1.156-2.838-2.311-5.679-3.465-8.519 c-0.017-0.042-0.037-0.082-0.065-0.145c-0.101,0.245-0.192,0.472-0.284,0.698c-1.237,3.051-2.475,6.103-3.711,9.155 c-0.466,1.153-1.351,1.815-2.538,2.045c-1.391,0.267-2.577-0.154-3.496-1.247c-0.174-0.209-0.31-0.464-0.415-0.717 c-2.128-5.22-4.248-10.442-6.37-15.665c-0.012-0.029-0.021-0.059-0.036-0.104c0.054-0.003,0.103-0.006,0.15-0.006 c1.498-0.001,2.997,0,4.495-0.004c0.12-0.001,0.176,0.03,0.222,0.146c1.557,3.846,3.117,7.691,4.679,11.536 c0.018,0.046,0.039,0.091,0.067,0.159c0.273-0.673,0.536-1.32,0.797-1.968c1.064-2.627,2.137-5.25,3.19-7.883 c0.482-1.208,1.376-1.917,2.621-2.135c1.454-0.255,2.644,0.257,3.522,1.449c0.133,0.18,0.229,0.393,0.313,0.603 c1.425,3.495,2.848,6.991,4.269,10.488c0.02,0.047,0.04,0.093,0.073,0.172c0.196-0.327,0.385-0.625,0.559-0.935 c0.783-1.397,1.323-2.886,1.614-4.461c0.242-1.312,0.304-2.634,0.187-3.962c-0.242-2.721-1.16-5.192-2.792-7.38 c-2.193-2.939-5.086-4.824-8.673-5.625c-1.553-0.346-3.124-0.405-4.705-0.257c-3.162,0.298-6.036,1.366-8.585,3.258 c-3.414,2.534-5.638,5.871-6.623,10.016c-0.417,1.76-0.546,3.547-0.384,5.348c0.417,4.601,2.359,8.444,5.804,11.517 c2.325,2.073,5.037,3.393,8.094,3.989c1.617,0.317,3.247,0.395,4.889,0.242c1-0.094,1.982-0.268,2.952-0.529 c0.04-0.01,0.081-0.018,0.128-0.028c0,1.526,0,3.047,0,4.586c-0.402,0.074-0.805,0.154-1.21,0.221 c-0.861,0.14-1.728,0.231-2.601,0.258c-0.035,0.002-0.071,0.013-0.108,0.021c-0.493,0-0.983,0-1.476,0 c-0.049-0.007-0.1-0.018-0.149-0.022c-0.315-0.019-0.629-0.033-0.945-0.058c-1.362-0.105-2.702-0.346-4.017-0.716 c-3.254-0.914-6.145-2.495-8.66-4.752c-2.195-1.971-3.926-4.29-5.176-6.963c-1.152-2.466-1.822-5.057-1.993-7.774 c-0.014-0.226-0.033-0.451-0.05-0.676c0-0.502,0-1.003,0-1.504c0.008-0.049,0.02-0.099,0.022-0.148 c0.036-1.025,0.152-2.043,0.338-3.052c0.481-2.616,1.409-5.066,2.8-7.331c2.226-3.625,5.25-6.386,9.074-8.254 c2.536-1.24,5.217-1.947,8.037-2.126c0.23-0.015,0.461-0.034,0.691-0.051C33.052,10.292,33.535,10.292,34.019,10.292z"
});
function workplaceLink(url, { quote, hashtag }) {
  return assert(url, "workplace.url"), "https://work.facebook.com/sharer.php" + objectToGetParams({
    u: url,
    quote,
    hashtag
  });
}
var WorkplaceShareButton = createShareButton(
  "workplace",
  workplaceLink,
  (props) => ({
    quote: props.quote,
    hashtag: props.hashtag
  }),
  {
    windowWidth: 550,
    windowHeight: 400
  }
);
var XIcon = createIcon({
  color: "#000000",
  networkName: "X",
  path: "M 41.116 18.375 h 4.962 l -10.8405 12.39 l 12.753 16.86 H 38.005 l -7.821 -10.2255 L 21.235 47.625 H 16.27 l 11.595 -13.2525 L 15.631 18.375 H 25.87 l 7.0695 9.3465 z m -1.7415 26.28 h 2.7495 L 24.376 21.189 H 21.4255 z"
});

// app/routes/($locale).products.$handle-old.jsx
var import_jsx_dev_runtime20 = __toESM(require_jsx_dev_runtime()), meta6 = ({ data: data2 }) => [{ title: `Hydrogen | ${data2.product.title}` }];
function getLastQueryParam(params) {
  let lastParam = Array.from(params.entries()).pop();
  return lastParam ? { key: lastParam[0], value: lastParam[1] } : null;
}
async function loader6({ params, request, context }) {
  let { handle } = params, { storefront } = context, selectedOptions = getSelectedProductOptions(request).filter(
    (option) => (
      // Filter out Shopify predictive search query params
      !option.name.startsWith("_sid") && !option.name.startsWith("_pos") && !option.name.startsWith("_psq") && !option.name.startsWith("_ss") && !option.name.startsWith("_v")
    )
  );
  if (!handle)
    throw new Error("Expected product handle to be defined");
  let { product } = await storefront.query(PRODUCT_QUERY, {
    variables: { handle, selectedOptions }
  }), productsreturn = (await storefront.query(PRODUCTS_QUERY)).products, variants = await storefront.query(VARIANTS_QUERY, {
    variables: { handle }
  });
  if (!(product != null && product.id))
    throw new Response(null, { status: 404 });
  let firstVariant = product.variants.nodes[0], firstVariantIsDefault = Boolean(
    firstVariant.selectedOptions.find(
      (option) => option.name === "Title" && option.value === "Default Title"
    )
  ), url = new URL(request.url), searchParams = new URLSearchParams(url.search), opt = getLastQueryParam(searchParams);
  if (firstVariantIsDefault)
    product.selectedVariant = firstVariant;
  else if (opt) {
    let filterVar = variants.product.variants.nodes.filter((node) => node.selectedOptions.find((option) => option.name === opt.key && option.value === opt.value));
    product.selectedVariant = filterVar.length > 0 ? filterVar[0] : variants.product.variants.nodes[0];
  } else
    product.selectedVariant = firstVariant;
  let { collections } = await storefront.query(FEATURED_COLLECTION_QUERY);
  return defer3({ product, variants, productsreturn, recommendedProducts: collections });
}
function Product() {
  let { product, variants, productsreturn, recommendedProducts } = useLoaderData2(), { selectedVariant } = product, [activeVariant, setActiveVar] = (0, import_react39.useState)([]), shareUrl = `https://15f63f.myshopify.com/products/${product.handle}`, [socialCount, setSocialCount] = (0, import_react39.useState)();
  return (0, import_react37.useEffect)(() => {
    setActiveVar(selectedVariant);
  }, [selectedVariant, product]), /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(import_jsx_dev_runtime20.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
      ProductMain,
      {
        selectedVariant: activeVariant,
        product,
        variants,
        shareUrl,
        recommendedProducts
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 133,
        columnNumber: 7
      },
      this
    ),
    productsreturn && /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(ProductsCorousel_default, { products: productsreturn }, void 0, !1, {
      fileName: "app/routes/($locale).products.$handle-old.jsx",
      lineNumber: 140,
      columnNumber: 26
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).products.$handle-old.jsx",
    lineNumber: 132,
    columnNumber: 5
  }, this);
}
function ProductImage({ image, activeImg, setActiveImage, product }) {
  let ImageSrc = [];
  product.images.edges.forEach((item) => {
    ImageSrc.push(item.node.url);
  });
  let [images, setImages] = (0, import_react39.useState)(ImageSrc);
  return image ? /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(import_jsx_dev_runtime20.Fragment, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "lg:grid flex flex-col-reverse lg:grid-cols-[20%_80%] gap-2 lg:gap-0 items-center", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "flex  lg:flex-col  justify-between lg:h-[325px] overflow-x-auto gap-[5px]", children: product.images.edges && product.images.edges.map((item, index3) => /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
      "img",
      {
        src: images[index3],
        alt: "",
        className: "w-24 h-24 rounded-md cursor-pointer product-image-caro ",
        onClick: () => setActiveImage(images[index3])
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 164,
        columnNumber: 15
      },
      this
    )) }, void 0, !1, {
      fileName: "app/routes/($locale).products.$handle-old.jsx",
      lineNumber: 161,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
      "img",
      {
        src: activeImg,
        alt: "",
        className: "w-[90%] border border-[#e5e5e5] h-full aspect-square object-cover rounded-xl p-[10px] border-1 border-[#e5e5e5] hover:scale-x-125 md:hover:scale-125 transition duration-300 cursor-pointer mst-card"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 172,
        columnNumber: 9
      },
      this
    )
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).products.$handle-old.jsx",
    lineNumber: 160,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/routes/($locale).products.$handle-old.jsx",
    lineNumber: 159,
    columnNumber: 5
  }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "" }, void 0, !1, {
    fileName: "app/routes/($locale).products.$handle-old.jsx",
    lineNumber: 156,
    columnNumber: 12
  }, this);
}
function ProductMain({ selectedVariant, product, shareUrl, variants, recommendedProducts }) {
  var _a2, _b, _c, _d, _e3, _f;
  let ImageSrc = [];
  product.images.edges.forEach((item) => {
    ImageSrc.push(item.node.url);
  });
  let [images, setImages] = (0, import_react39.useState)(ImageSrc), expaction = (_a2 = product.metafields[0]) == null ? void 0 : _a2.value, key_ingredients = (_b = product.metafields[1]) == null ? void 0 : _b.value, How_To_use = (_c = product.metafields[2]) == null ? void 0 : _c.value, who_can_use = (_d = product.metafields[3]) == null ? void 0 : _d.value, why_us = (_e3 = product.metafields[4]) == null ? void 0 : _e3.value, ingredient = (_f = product.metafields[5]) == null ? void 0 : _f.value, [activeTab, setActiveTab] = (0, import_react39.useState)("Ingredient"), handleTabClick = (tab) => {
    setActiveTab(tab);
  }, [activeImg, setActiveImage] = (0, import_react39.useState)(images[0]), [moreText, setMoreText] = (0, import_react39.useState)(!0);
  return /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(import_jsx_dev_runtime20.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "flex m-[2%] gap-2 items-center", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(Link2, { className: "mst-color", to: "/", children: "Home" }, void 0, !1, {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 207,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("img", { src: "/next.png", alt: "next", width: 20, height: 20 }, void 0, !1, {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 208,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("span", { className: "font-semibold mst-color", children: "Product page" }, void 0, !1, {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 209,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).products.$handle-old.jsx",
      lineNumber: 206,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "final-product mst-card-shadow shadow-lg p-4 flex flex-col justify-between lg:flex-row lg:gap-8 lg:ml-8 lg:mr-8 items-start relative", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "flex flex-col gap-6 lg:w-2/4 flex-wrap items-center lg:sticky top-[240px]", children: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
        ProductImage,
        {
          image: selectedVariant == null ? void 0 : selectedVariant.image,
          product,
          activeImg,
          setActiveImage
        },
        void 0,
        !1,
        {
          fileName: "app/routes/($locale).products.$handle-old.jsx",
          lineNumber: 220,
          columnNumber: 11
        },
        this
      ) }, void 0, !1, {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 212,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "flex flex-col lg:w-3/4", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("h1", { className: "text-2xl font-bold mt-0 mb-0", children: product.title }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle-old.jsx",
            lineNumber: 230,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "flex py-2 px-2", children: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
            c,
            {
              productId: product.id,
              okendoStarRatingSnippet: product.okendoStarRatingSnippet
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).products.$handle-old.jsx",
              lineNumber: 234,
              columnNumber: 13
            },
            this
          ) }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle-old.jsx",
            lineNumber: 233,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(ProductPrice, { selectedVariant }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle-old.jsx",
            lineNumber: 239,
            columnNumber: 13
          }, this)
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).products.$handle-old.jsx",
          lineNumber: 229,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
          import_react37.Suspense,
          {
            fallback: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
              ProductForm,
              {
                product,
                selectedVariant,
                variants: [],
                activeImg,
                setActiveImage
              },
              void 0,
              !1,
              {
                fileName: "app/routes/($locale).products.$handle-old.jsx",
                lineNumber: 244,
                columnNumber: 17
              },
              this
            ),
            children: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
              Await2,
              {
                errorElement: "There was a problem loading product variants",
                resolve: variants,
                children: (data2) => {
                  var _a3;
                  return /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
                    ProductForm,
                    {
                      product,
                      selectedVariant,
                      activeImg,
                      setActiveImage,
                      variants: ((_a3 = data2.product) == null ? void 0 : _a3.variants.nodes) || []
                    },
                    void 0,
                    !1,
                    {
                      fileName: "app/routes/($locale).products.$handle-old.jsx",
                      lineNumber: 258,
                      columnNumber: 19
                    },
                    this
                  );
                }
              },
              void 0,
              !1,
              {
                fileName: "app/routes/($locale).products.$handle-old.jsx",
                lineNumber: 253,
                columnNumber: 15
              },
              this
            )
          },
          void 0,
          !1,
          {
            fileName: "app/routes/($locale).products.$handle-old.jsx",
            lineNumber: 242,
            columnNumber: 13
          },
          this
        ) }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle-old.jsx",
          lineNumber: 241,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "grid grid-cols-4 gap-4 p-4 border-dotted mt-4", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("img", { src: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/Vegetarian.jpg?v=1712825726" }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle-old.jsx",
            lineNumber: 270,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("img", { src: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/Cruelty-Free.jpg?v=1712825726" }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle-old.jsx",
            lineNumber: 271,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("img", { src: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/High_Quality.jpg?v=1712825727" }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle-old.jsx",
            lineNumber: 272,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("img", { src: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/Suitable_for_all_Skin_Types.jpg?v=1715852367" }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle-old.jsx",
            lineNumber: 273,
            columnNumber: 13
          }, this)
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).products.$handle-old.jsx",
          lineNumber: 269,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("h2", { className: "mt-[10px]", children: "Product Description" }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle-old.jsx",
          lineNumber: 275,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "shadow-p relative p-4 sm:p-0", children: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "product_desc", dangerouslySetInnerHTML: { __html: product.descriptionHtml } }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle-old.jsx",
          lineNumber: 277,
          columnNumber: 13
        }, this) }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle-old.jsx",
          lineNumber: 276,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "flex", children: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
          d,
          {
            productId: product.id,
            okendoReviewsSnippet: product.okendoReviewsSnippet
          },
          void 0,
          !1,
          {
            fileName: "app/routes/($locale).products.$handle-old.jsx",
            lineNumber: 288,
            columnNumber: 11
          },
          this
        ) }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle-old.jsx",
          lineNumber: 287,
          columnNumber: 11
        }, this)
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 228,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "absolute cursor-pointer group flex flex-col items-center top-[-36px] lg:top-[15px] right-2", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
          "img",
          {
            className: "sharelogo mst-color",
            src: "/share.png",
            width: 22,
            height: 22,
            alt: "share"
          },
          void 0,
          !1,
          {
            fileName: "app/routes/($locale).products.$handle-old.jsx",
            lineNumber: 295,
            columnNumber: 11
          },
          this
        ),
        /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("span", { className: "text-sm font-semibold ", children: "Share" }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle-old.jsx",
          lineNumber: 302,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "hidden group-hover:block", style: { background: "#0000", height: "100vh", width: "100%" }, children: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "flex gap-2 m-2", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
            FacebookShareButton$1,
            {
              url: shareUrl,
              quote: "Title",
              hashtag: "#product...",
              children: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(FacebookIcon$1, { size: 25, round: !0 }, void 0, !1, {
                fileName: "app/routes/($locale).products.$handle-old.jsx",
                lineNumber: 310,
                columnNumber: 11
              }, this)
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).products.$handle-old.jsx",
              lineNumber: 305,
              columnNumber: 11
            },
            this
          ),
          /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
            WhatsappShareButton$1,
            {
              url: shareUrl,
              quote: "Title",
              hashtag: "#product...",
              children: [
                /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(WhatsappIcon$1, { size: 25, round: !0 }, void 0, !1, {
                  fileName: "app/routes/($locale).products.$handle-old.jsx",
                  lineNumber: 318,
                  columnNumber: 11
                }, this),
                " "
              ]
            },
            void 0,
            !0,
            {
              fileName: "app/routes/($locale).products.$handle-old.jsx",
              lineNumber: 313,
              columnNumber: 11
            },
            this
          )
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).products.$handle-old.jsx",
          lineNumber: 304,
          columnNumber: 11
        }, this) }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle-old.jsx",
          lineNumber: 303,
          columnNumber: 11
        }, this)
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 294,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).products.$handle-old.jsx",
      lineNumber: 211,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "max-w-[1320px] p-[10px] m-auto", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("h2", { className: "text-center lg:text-2xl mt-[4%] mb-[2%] uppercase", children: "Key Features" }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle-old.jsx",
          lineNumber: 325,
          columnNumber: 11
        }, this),
        expaction && /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
          "div",
          {
            className: "expect",
            dangerouslySetInnerHTML: { __html: expaction }
          },
          void 0,
          !1,
          {
            fileName: "app/routes/($locale).products.$handle-old.jsx",
            lineNumber: 329,
            columnNumber: 13
          },
          this
        )
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 324,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "container mx-auto mt-5 p-5", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("h1", { className: "lg:text-3xl font-semibold mb-4 text-center mt-[4%] mb-[2%] uppercase", children: "Product Information" }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle-old.jsx",
          lineNumber: 336,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "grid grid-cols-2 sm:grid-cols-4 overflow-y-auto lg:justify-center gap-2", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
            "div",
            {
              className: `cursor-pointer py-2 px-2 border-b-4 uppercase whitespace-nowrap ${activeTab === "Ingredient" ? "border-active" : ""}`,
              onClick: () => handleTabClick("Ingredient"),
              style: { border: "1px solid #e5e5e5" },
              children: "Ingredients"
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).products.$handle-old.jsx",
              lineNumber: 340,
              columnNumber: 13
            },
            this
          ),
          /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
            "div",
            {
              style: { border: "1px solid #e5e5e5" },
              className: `cursor-pointer py-2 px-2 border-b-4 uppercase whitespace-nowrap ${activeTab === "How to Use" ? "border-active" : ""}`,
              onClick: () => handleTabClick("How to Use"),
              children: "How to Use"
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).products.$handle-old.jsx",
              lineNumber: 349,
              columnNumber: 13
            },
            this
          ),
          /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
            "div",
            {
              className: `cursor-pointer py-2 px-2 border-b-4 uppercase whitespace-nowrap ${activeTab === "Who Can Use" ? "border-active" : ""}`,
              onClick: () => handleTabClick("Who Can Use"),
              style: { border: "1px solid #e5e5e5" },
              children: "Who Can Use"
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).products.$handle-old.jsx",
              lineNumber: 359,
              columnNumber: 13
            },
            this
          ),
          /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
            "div",
            {
              className: `cursor-pointer py-2 px-2 border-b-4 uppercase whitespace-nowrap ${activeTab === "Why us" ? "border-active" : ""}`,
              onClick: () => handleTabClick("Why us"),
              style: { border: "1px solid #e5e5e5" },
              children: "Why us"
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).products.$handle-old.jsx",
              lineNumber: 368,
              columnNumber: 13
            },
            this
          )
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).products.$handle-old.jsx",
          lineNumber: 339,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "mt-4", children: [
          activeTab === "Key Ingredients" && key_ingredients && /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "overflow-y-auto overflow-x-auto", children: key_ingredients && /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
            "div",
            {
              className: "expect",
              dangerouslySetInnerHTML: { __html: key_ingredients }
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).products.$handle-old.jsx",
              lineNumber: 382,
              columnNumber: 19
            },
            this
          ) }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle-old.jsx",
            lineNumber: 380,
            columnNumber: 15
          }, this),
          activeTab === "How to Use" && How_To_use && /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "meta_info_card overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
            "div",
            {
              className: "key-ing",
              dangerouslySetInnerHTML: { __html: How_To_use }
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).products.$handle-old.jsx",
              lineNumber: 391,
              columnNumber: 17
            },
            this
          ) }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle-old.jsx",
            lineNumber: 390,
            columnNumber: 15
          }, this),
          activeTab === "Who Can Use" && who_can_use && /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "meta_info_card overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { dangerouslySetInnerHTML: { __html: who_can_use } }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle-old.jsx",
            lineNumber: 399,
            columnNumber: 17
          }, this) }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle-old.jsx",
            lineNumber: 398,
            columnNumber: 15
          }, this),
          activeTab === "Ingredient" && ingredient && /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { style: { maxWidth: "100%" }, dangerouslySetInnerHTML: { __html: ingredient } }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle-old.jsx",
            lineNumber: 404,
            columnNumber: 17
          }, this) }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle-old.jsx",
            lineNumber: 403,
            columnNumber: 15
          }, this),
          activeTab === "meta_info_card Why us" && why_us && /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { dangerouslySetInnerHTML: { __html: why_us } }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle-old.jsx",
            lineNumber: 409,
            columnNumber: 17
          }, this) }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle-old.jsx",
            lineNumber: 408,
            columnNumber: 15
          }, this)
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).products.$handle-old.jsx",
          lineNumber: 378,
          columnNumber: 11
        }, this)
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 335,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).products.$handle-old.jsx",
      lineNumber: 323,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "recommended_products", children: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
      RecommendedProducts,
      {
        products: recommendedProducts.nodes[0].products,
        title: "Recommended Products"
      },
      recommendedProducts.nodes[0].id,
      !1,
      {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 416,
        columnNumber: 7
      },
      this
    ) }, void 0, !1, {
      fileName: "app/routes/($locale).products.$handle-old.jsx",
      lineNumber: 415,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).products.$handle-old.jsx",
    lineNumber: 204,
    columnNumber: 5
  }, this);
}
function ProductPrice({ selectedVariant }) {
  var _a2, _b;
  let price = Math.trunc((_a2 = selectedVariant == null ? void 0 : selectedVariant.price) == null ? void 0 : _a2.amount), compareAtPrice = Math.trunc((_b = selectedVariant == null ? void 0 : selectedVariant.compareAtPrice) == null ? void 0 : _b.amount), calculatePer = () => {
    let per = (compareAtPrice - price) / compareAtPrice * 100;
    return Math.trunc(per);
  };
  return /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "product-price flex gap-[10px] mb-2 text-xl", children: selectedVariant != null && selectedVariant.compareAtPrice ? /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(import_jsx_dev_runtime20.Fragment, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "product-price-on-sale font-semibold flex items-center", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("h1", { className: "m-0", children: selectedVariant ? /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(Money, { withoutTrailingZeros: !0, data: selectedVariant.price }, void 0, !1, {
      fileName: "app/routes/($locale).products.$handle-old.jsx",
      lineNumber: 440,
      columnNumber: 52
    }, this) : null }, void 0, !1, {
      fileName: "app/routes/($locale).products.$handle-old.jsx",
      lineNumber: 440,
      columnNumber: 13
    }, this),
    "\xA0",
    /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("s", { className: "opacity-50", children: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(Money, { withoutTrailingZeros: !0, data: selectedVariant.compareAtPrice }, void 0, !1, {
      fileName: "app/routes/($locale).products.$handle-old.jsx",
      lineNumber: 443,
      columnNumber: 15
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale).products.$handle-old.jsx",
      lineNumber: 442,
      columnNumber: 13
    }, this),
    "\xA0",
    /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("b", { className: "text-red-500", children: [
      " (",
      calculatePer(),
      " % Off) "
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).products.$handle-old.jsx",
      lineNumber: 446,
      columnNumber: 13
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).products.$handle-old.jsx",
    lineNumber: 439,
    columnNumber: 11
  }, this) }, void 0, !1, {
    fileName: "app/routes/($locale).products.$handle-old.jsx",
    lineNumber: 438,
    columnNumber: 9
  }, this) : (selectedVariant == null ? void 0 : selectedVariant.price) && /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("h1", { className: "m-0", children: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(Money, { withoutTrailingZeros: !0, className: "font-semibold", data: selectedVariant == null ? void 0 : selectedVariant.price }, void 0, !1, {
    fileName: "app/routes/($locale).products.$handle-old.jsx",
    lineNumber: 451,
    columnNumber: 31
  }, this) }, void 0, !1, {
    fileName: "app/routes/($locale).products.$handle-old.jsx",
    lineNumber: 451,
    columnNumber: 11
  }, this) }, void 0, !1, {
    fileName: "app/routes/($locale).products.$handle-old.jsx",
    lineNumber: 436,
    columnNumber: 5
  }, this);
}
function ProductForm({
  product,
  selectedVariant,
  variants,
  activeImg,
  setActiveImage
}) {
  let [pincode, setPinCode] = (0, import_react39.useState)(""), [serviceble, setServiceble] = (0, import_react39.useState)({ status: null, msg: "" }), handlePinChange = (e5) => {
    setPinCode(e5.target.value);
  }, getEstimatedDate = (edd) => {
    let date = /* @__PURE__ */ new Date();
    return date.setDate(date.getDate() + edd), new Intl.DateTimeFormat("en-US", {
      year: "numeric",
      month: "long",
      day: "numeric"
    }).format(new Date(date));
  }, checkAvailibility = () => {
    fetch("https://appapi.shipdelight.com/generate-token?api_key=65eaba0ac23f74c2d7346965", { method: "POST" }).then((res) => res.json()).then((result) => {
      let { success, data: data2 } = result;
      if (success) {
        let headers = {
          "Content-Type": "application/json",
          Authorization: `Bearer ${data2.access_token}`
        }, params = {
          pickup_pincode: 400009,
          delivery_pincode: parseInt(pincode),
          pay_type: "PPD",
          service_type: "F",
          courier_service_type: "AIR"
        };
        fetch("https://appapi.shipdelight.com/serviceability_tat", { method: "POST", headers, body: JSON.stringify(params) }).then((res) => res.json()).then((result2) => {
          let { data: data3, errors } = result2;
          if (errors != null && errors.length)
            setServiceble({ status: !1, msg: "Invalid Pincode" });
          else {
            let isServicebale = data3 == null ? void 0 : data3.response.delivery_pincode_serviceable;
            var estimateDate = getEstimatedDate(data3 == null ? void 0 : data3.response.edd);
            let msg = data3 != null && data3.response.delivery_pincode_serviceable ? estimateDate : "Service is not available at this location";
            setServiceble({ status: isServicebale, msg });
          }
          setTimeout(() => {
            setServiceble({ status: null, msg: "" });
          }, 5e3);
        });
      }
    });
  }, closeRef = (0, import_react37.useRef)(null);
  return /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "product-form", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
      VariantSelector,
      {
        handle: product.handle,
        options: product.options,
        variants,
        children: ({ option }) => /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
          ProductOptions,
          {
            option,
            activeImg,
            closeRef,
            selectedVariant,
            setActiveImage
          },
          option.name,
          !1,
          {
            fileName: "app/routes/($locale).products.$handle-old.jsx",
            lineNumber: 524,
            columnNumber: 11
          },
          this
        )
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 518,
        columnNumber: 7
      },
      this
    ),
    /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("br", {}, void 0, !1, {
      fileName: "app/routes/($locale).products.$handle-old.jsx",
      lineNumber: 534,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "mb-2", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("p", { children: " Check Availibility / Estimated Delivery " }, void 0, !1, {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 541,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "flex items-baseline", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("input", { className: "w-48 sm:w-[320px] block rounded-bl-lg rounded-tl-lg border bg-transparent bg-clip-padding  text-base font-normal leading-[1.6] text-neutral-700 outline-none transition duration-200 ease-in-out focus:z-[3]  focus:text-neutral-700 focus:outline-none dark:border-neutral-600 dark:text-neutral-200 dark:placeholder:text-neutral-200 mst-card", value: pincode, onChange: handlePinChange, type: "text", placeholder: "Enter your pincode" }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle-old.jsx",
          lineNumber: 543,
          columnNumber: 9
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("button", { onClick: () => checkAvailibility(), className: "w-[130px] sm:w-[150px] m-4 h-11 bg-black hover:bg-blue-700 text-white font-bold py-1 px-4 rounded-lg", children: " Check Now " }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle-old.jsx",
          lineNumber: 544,
          columnNumber: 9
        }, this)
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 542,
        columnNumber: 9
      }, this),
      serviceble.status != null && /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("p", { className: `font-bold ${serviceble.status ? "text-green-500" : "text-orange-500"}`, children: [
        " Estimated Delivery : ",
        serviceble.msg,
        " "
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 547,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).products.$handle-old.jsx",
      lineNumber: 540,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
      AddToCartButton,
      {
        disabled: !selectedVariant || !selectedVariant.availableForSale,
        onClick: () => {
          window.location.href = window.location.href + "#cart-aside";
        },
        lines: selectedVariant ? [
          {
            merchandiseId: selectedVariant.id,
            quantity: 1
          }
        ] : [],
        children: selectedVariant != null && selectedVariant.availableForSale ? "ADD TO CART" : "Sold out"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 550,
        columnNumber: 7
      },
      this
    )
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).products.$handle-old.jsx",
    lineNumber: 517,
    columnNumber: 5
  }, this);
}
function ProductOptions({ option, activeImg, closeRef, setActiveImage, selectedVariant }) {
  let [selectedVar, setVar] = (0, import_react39.useState)({ 0: !0 });
  (0, import_react37.useEffect)(() => {
    var _a2;
    setActiveImage((_a2 = selectedVariant == null ? void 0 : selectedVariant.image) == null ? void 0 : _a2.url);
  }, [selectedVariant]);
  let setImg = (index3) => {
    setVar({ [index3]: !0 });
  };
  return /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(import_jsx_dev_runtime20.Fragment, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "product-options", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("h5", { className: "font-semibold", children: option.name }, void 0, !1, {
      fileName: "app/routes/($locale).products.$handle-old.jsx",
      lineNumber: 585,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "product-options-grid items-center", children: option.values.map(({ value, isAvailable, isActive, to }, index3) => /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
      Link2,
      {
        ref: closeRef,
        className: "product-options-item",
        prefetch: "intent",
        replace: !0,
        preventScrollReset: !0,
        to,
        style: {
          border: selectedVar[index3] ? "1px solid #d0715f" : "1px solid transparent",
          borderRadius: "5px"
        },
        onClick: () => setImg(index3),
        children: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { dangerouslySetInnerHTML: { __html: value } }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle-old.jsx",
          lineNumber: 606,
          columnNumber: 15
        }, this)
      },
      option.name + value,
      !1,
      {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 589,
        columnNumber: 15
      },
      this
    )) }, void 0, !1, {
      fileName: "app/routes/($locale).products.$handle-old.jsx",
      lineNumber: 586,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("br", {}, void 0, !1, {
      fileName: "app/routes/($locale).products.$handle-old.jsx",
      lineNumber: 611,
      columnNumber: 9
    }, this)
  ] }, option.name, !0, {
    fileName: "app/routes/($locale).products.$handle-old.jsx",
    lineNumber: 584,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/routes/($locale).products.$handle-old.jsx",
    lineNumber: 583,
    columnNumber: 5
  }, this);
}
function AddToCartButton({ analytics, children, disabled, lines, onClick }) {
  let [qty, setQty] = (0, import_react39.useState)(1);
  return lines[0].quantity = qty, /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(import_jsx_dev_runtime20.Fragment, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
    CartForm,
    {
      route: "/cart",
      inputs: { lines },
      action: CartForm.ACTIONS.LinesAdd,
      children: (fetcher) => /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(import_jsx_dev_runtime20.Fragment, { children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
          "input",
          {
            name: "analytics",
            type: "hidden",
            value: JSON.stringify(analytics)
          },
          void 0,
          !1,
          {
            fileName: "app/routes/($locale).products.$handle-old.jsx",
            lineNumber: 630,
            columnNumber: 13
          },
          this
        ),
        /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { className: "flex flex-row items-center gap-4 mobile-cart-product", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
            "div",
            {
              className: "flex flex-row items-center py-[6px] px-[8px] rounded-xl",
              style: { border: "1px solid #000", background: "white" },
              children: [
                /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
                  "a",
                  {
                    className: " text-xl",
                    onClick: () => {
                      qty != 0 && setQty((prev) => prev - 1);
                    },
                    children: "-"
                  },
                  void 0,
                  !1,
                  {
                    fileName: "app/routes/($locale).products.$handle-old.jsx",
                    lineNumber: 640,
                    columnNumber: 17
                  },
                  this
                ),
                /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("span", { className: "px-4", children: qty }, void 0, !1, {
                  fileName: "app/routes/($locale).products.$handle-old.jsx",
                  lineNumber: 650,
                  columnNumber: 17
                }, this),
                /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
                  "a",
                  {
                    className: " text-xl",
                    onClick: () => setQty((prev) => prev + 1),
                    children: "+"
                  },
                  void 0,
                  !1,
                  {
                    fileName: "app/routes/($locale).products.$handle-old.jsx",
                    lineNumber: 651,
                    columnNumber: 17
                  },
                  this
                )
              ]
            },
            void 0,
            !0,
            {
              fileName: "app/routes/($locale).products.$handle-old.jsx",
              lineNumber: 636,
              columnNumber: 15
            },
            this
          ),
          /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(
            "button",
            {
              className: "w-[150px] h-11 bg-black hover:bg-blue-700 text-white font-bold py-1 px-4 rounded-lg product-cart-btn",
              type: "submit",
              onClick,
              disabled: disabled ?? fetcher.state !== "idle",
              children
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).products.$handle-old.jsx",
              lineNumber: 658,
              columnNumber: 15
            },
            this
          )
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).products.$handle-old.jsx",
          lineNumber: 635,
          columnNumber: 13
        }, this)
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 629,
        columnNumber: 11
      }, this)
    },
    void 0,
    !1,
    {
      fileName: "app/routes/($locale).products.$handle-old.jsx",
      lineNumber: 623,
      columnNumber: 7
    },
    this
  ) }, void 0, !1, {
    fileName: "app/routes/($locale).products.$handle-old.jsx",
    lineNumber: 622,
    columnNumber: 5
  }, this);
}
function RecommendedProducts({ products: products2, title }) {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(import_jsx_dev_runtime20.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("h1", { className: "text-center font-semibold my-[15px]", children: [
      title,
      " "
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).products.$handle-old.jsx",
      lineNumber: 677,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(import_react37.Suspense, { fallback: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("div", { children: "Loading..." }, void 0, !1, {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 679,
        columnNumber: 29
      }, this), children: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(Await2, { resolve: products2, children: /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)(ProductsCorousel_default, { products: products2 }, void 0, !1, {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 682,
        columnNumber: 14
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 680,
        columnNumber: 11
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 679,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime20.jsxDEV)("br", {}, void 0, !1, {
        fileName: "app/routes/($locale).products.$handle-old.jsx",
        lineNumber: 685,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).products.$handle-old.jsx",
      lineNumber: 678,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).products.$handle-old.jsx",
    lineNumber: 676,
    columnNumber: 5
  }, this);
}
var PRODUCT_VARIANT_FRAGMENT = `#graphql
  fragment ProductVariant on ProductVariant {
    availableForSale
    compareAtPrice {
      amount
      currencyCode
    }
    id
    image {
      __typename
      id
      url
      altText
      width
      height
    }
    price {
      amount
      currencyCode
    }
    product {
      title
      handle
    }
    quantityAvailable
    selectedOptions {
      name
      value
    }
    sku
    title
    unitPrice {
      amount
      currencyCode
    }
  }
`, PRODUCT_FRAGMENT = `#graphql
  ${l2}
  ${p}
  fragment Product on Product {
    id
    title
    vendor
    handle
    descriptionHtml
    description
    tags
    productType
    metafields(identifiers: [{namespace: "custom", key: "what_to_expect"},{namespace: "custom", key: "key_ingredients"}, {namespace: "custom", key: "how_to_use1"},{namespace: "custom", key: "who_can_use"},{namespace: "custom", key: "why_we"},{namespace: "custom", key: "key_ingredients"} ]){
      key
      value
    }
    images(first:10){
      edges{
        node{
          url
        }
      }
    }
    options {
      name
      values
    }
    selectedVariant: variantBySelectedOptions(selectedOptions: $selectedOptions) {
      ...ProductVariant
    }
    variants(first: 10) {
      nodes {
        ...ProductVariant
      }
    }
    seo {
      description
      title
    }
    ...OkendoStarRatingSnippet
		...OkendoReviewsSnippet
  }
  ${PRODUCT_VARIANT_FRAGMENT}
`, PRODUCT_QUERY = `#graphql
  query Product(
    $country: CountryCode
    $handle: String!
    $language: LanguageCode
    $selectedOptions: [SelectedOptionInput!]!
  ) @inContext(country: $country, language: $language) {
    product(handle: $handle) {
      ...Product
    }
  }
  ${PRODUCT_FRAGMENT}
`, PRODUCT_VARIANTS_FRAGMENT = `#graphql
  fragment ProductVariants on Product {
    variants(first: 50) {
      nodes {
        ...ProductVariant
      }
    }
  }
  ${PRODUCT_VARIANT_FRAGMENT}
`, VARIANTS_QUERY = `#graphql
  ${PRODUCT_VARIANTS_FRAGMENT}
  query ProductVariants(
    $country: CountryCode
    $language: LanguageCode
    $handle: String!
  ) @inContext(country: $country, language: $language) {
    product(handle: $handle) {
      ...ProductVariants
    }
  }
`, PRODUCTS_QUERY = `#graphql
  query {
  products(first: 250, query:"tags:* Under 100 OR Under 1000"){
    edges{
      node{
        id
        title
        handle
        tags
        images(first:1){
          edges{
            node{
              url
              id
            }
          }
        }
        featuredImage {
          id
        }
      }
    }
}
  }
`, FEATURED_COLLECTION_QUERY = `#graphql
  fragment FeaturedCollection on Collection {
    products(first:100){
      edges{
        node{
          id
          title
          handle
          priceRange {
            minVariantPrice {
              amount
              currencyCode
            }
          }
          variants(first: 100) {
          edges {
          node {
                availableForSale
                id
                metafields(identifiers: [{namespace: "custom", key: "isdefault"} ]){
                    key
                    value
                  }
                }
              }
        }
        images(first:1){
          edges{
            node{
              url
            }
          }
        }
        }
      }
    }
    id
    title
    metafields(identifiers: [{namespace: "custom", key: "from_customer_inbox"}, {namespace: "custom", key: "1_custom_colllection"}]){
      id
      key
      namespace
      value
    }
    image {
      id
      url
      altText
      width
      height
    }
    handle
  }
  query FeaturedCollection($country: CountryCode, $language: LanguageCode)
    @inContext(country: $country, language: $language) {
    collections(first: 100) {
      nodes {
        ...FeaturedCollection
      }
    }
  }
`;

// app/routes/($locale).collections.$handle.jsx
var locale_collections_handle_exports = {};
__export(locale_collections_handle_exports, {
  default: () => Collection,
  loader: () => loader7,
  meta: () => meta7
});
var import_react73 = __toESM(require_react());
var import_react_responsive7 = __toESM(require_react_responsive());
var import_react75 = __toESM(require_react());

// node_modules/@headlessui/react/dist/hooks/use-iso-morphic-effect.js
var import_react40 = __toESM(require_react(), 1);

// node_modules/@headlessui/react/dist/utils/env.js
var i2 = Object.defineProperty, d2 = (t18, e5, n7) => e5 in t18 ? i2(t18, e5, { enumerable: !0, configurable: !0, writable: !0, value: n7 }) : t18[e5] = n7, r2 = (t18, e5, n7) => (d2(t18, typeof e5 != "symbol" ? e5 + "" : e5, n7), n7), o2 = class {
  constructor() {
    r2(this, "current", this.detect()), r2(this, "handoffState", "pending"), r2(this, "currentId", 0);
  }
  set(e5) {
    this.current !== e5 && (this.handoffState = "pending", this.currentId = 0, this.current = e5);
  }
  reset() {
    this.set(this.detect());
  }
  nextId() {
    return ++this.currentId;
  }
  get isServer() {
    return this.current === "server";
  }
  get isClient() {
    return this.current === "client";
  }
  detect() {
    return typeof window > "u" || typeof document > "u" ? "server" : "client";
  }
  handoff() {
    this.handoffState === "pending" && (this.handoffState = "complete");
  }
  get isHandoffComplete() {
    return this.handoffState === "complete";
  }
}, s2 = new o2();

// node_modules/@headlessui/react/dist/hooks/use-iso-morphic-effect.js
var l3 = (e5, f10) => {
  s2.isServer ? (0, import_react40.useEffect)(e5, f10) : (0, import_react40.useLayoutEffect)(e5, f10);
};

// node_modules/@headlessui/react/dist/hooks/use-latest-value.js
var import_react41 = __toESM(require_react(), 1);
function s3(e5) {
  let r9 = (0, import_react41.useRef)(e5);
  return l3(() => {
    r9.current = e5;
  }, [e5]), r9;
}

// node_modules/@headlessui/react/dist/hooks/use-disposables.js
var import_react42 = __toESM(require_react(), 1);

// node_modules/@headlessui/react/dist/utils/micro-task.js
function t4(e5) {
  typeof queueMicrotask == "function" ? queueMicrotask(e5) : Promise.resolve().then(e5).catch((o11) => setTimeout(() => {
    throw o11;
  }));
}

// node_modules/@headlessui/react/dist/utils/disposables.js
function o3() {
  let n7 = [], r9 = { addEventListener(e5, t18, s15, a13) {
    return e5.addEventListener(t18, s15, a13), r9.add(() => e5.removeEventListener(t18, s15, a13));
  }, requestAnimationFrame(...e5) {
    let t18 = requestAnimationFrame(...e5);
    return r9.add(() => cancelAnimationFrame(t18));
  }, nextFrame(...e5) {
    return r9.requestAnimationFrame(() => r9.requestAnimationFrame(...e5));
  }, setTimeout(...e5) {
    let t18 = setTimeout(...e5);
    return r9.add(() => clearTimeout(t18));
  }, microTask(...e5) {
    let t18 = { current: !0 };
    return t4(() => {
      t18.current && e5[0]();
    }), r9.add(() => {
      t18.current = !1;
    });
  }, style(e5, t18, s15) {
    let a13 = e5.style.getPropertyValue(t18);
    return Object.assign(e5.style, { [t18]: s15 }), this.add(() => {
      Object.assign(e5.style, { [t18]: a13 });
    });
  }, group(e5) {
    let t18 = o3();
    return e5(t18), this.add(() => t18.dispose());
  }, add(e5) {
    return n7.push(e5), () => {
      let t18 = n7.indexOf(e5);
      if (t18 >= 0)
        for (let s15 of n7.splice(t18, 1))
          s15();
    };
  }, dispose() {
    for (let e5 of n7.splice(0))
      e5();
  } };
  return r9;
}

// node_modules/@headlessui/react/dist/hooks/use-disposables.js
function p2() {
  let [e5] = (0, import_react42.useState)(o3);
  return (0, import_react42.useEffect)(() => () => e5.dispose(), [e5]), e5;
}

// node_modules/@headlessui/react/dist/hooks/use-event.js
var import_react43 = __toESM(require_react(), 1);
var o5 = function(t18) {
  let e5 = s3(t18);
  return import_react43.default.useCallback((...r9) => e5.current(...r9), [e5]);
};

// node_modules/@headlessui/react/dist/hooks/use-id.js
var import_react44 = __toESM(require_react(), 1);

// node_modules/@headlessui/react/dist/hooks/use-server-handoff-complete.js
var t5 = __toESM(require_react(), 1);
function s5() {
  let r9 = typeof document > "u";
  return "useSyncExternalStore" in t5 ? ((o11) => o11.useSyncExternalStore)(t5)(() => () => {
  }, () => !1, () => !r9) : !1;
}
function l4() {
  let r9 = s5(), [e5, n7] = t5.useState(s2.isHandoffComplete);
  return e5 && s2.isHandoffComplete === !1 && n7(!1), t5.useEffect(() => {
    e5 !== !0 && n7(!0);
  }, [e5]), t5.useEffect(() => s2.handoff(), []), r9 ? !1 : e5;
}

// node_modules/@headlessui/react/dist/hooks/use-id.js
var o6, I = (o6 = import_react44.default.useId) != null ? o6 : function() {
  let n7 = l4(), [e5, u10] = import_react44.default.useState(n7 ? () => s2.nextId() : null);
  return l3(() => {
    e5 === null && u10(s2.nextId());
  }, [e5]), e5 != null ? "" + e5 : void 0;
};

// node_modules/@headlessui/react/dist/hooks/use-outside-click.js
var import_react47 = __toESM(require_react(), 1);

// node_modules/@headlessui/react/dist/utils/match.js
function u2(r9, n7, ...a13) {
  if (r9 in n7) {
    let e5 = n7[r9];
    return typeof e5 == "function" ? e5(...a13) : e5;
  }
  let t18 = new Error(`Tried to handle "${r9}" but there is no handler defined. Only defined handlers are: ${Object.keys(n7).map((e5) => `"${e5}"`).join(", ")}.`);
  throw Error.captureStackTrace && Error.captureStackTrace(t18, u2), t18;
}

// node_modules/@headlessui/react/dist/utils/owner.js
function e2(r9) {
  return s2.isServer ? null : r9 instanceof Node ? r9.ownerDocument : r9 != null && r9.hasOwnProperty("current") && r9.current instanceof Node ? r9.current.ownerDocument : document;
}

// node_modules/@headlessui/react/dist/utils/focus-management.js
var c3 = ["[contentEditable=true]", "[tabindex]", "a[href]", "area[href]", "button:not([disabled])", "iframe", "input:not([disabled])", "select:not([disabled])", "textarea:not([disabled])"].map((e5) => `${e5}:not([tabindex='-1'])`).join(","), M = ((n7) => (n7[n7.First = 1] = "First", n7[n7.Previous = 2] = "Previous", n7[n7.Next = 4] = "Next", n7[n7.Last = 8] = "Last", n7[n7.WrapAround = 16] = "WrapAround", n7[n7.NoScroll = 32] = "NoScroll", n7))(M || {}), N = ((o11) => (o11[o11.Error = 0] = "Error", o11[o11.Overflow = 1] = "Overflow", o11[o11.Success = 2] = "Success", o11[o11.Underflow = 3] = "Underflow", o11))(N || {}), F = ((t18) => (t18[t18.Previous = -1] = "Previous", t18[t18.Next = 1] = "Next", t18))(F || {});
function f(e5 = document.body) {
  return e5 == null ? [] : Array.from(e5.querySelectorAll(c3)).sort((r9, t18) => Math.sign((r9.tabIndex || Number.MAX_SAFE_INTEGER) - (t18.tabIndex || Number.MAX_SAFE_INTEGER)));
}
var T = ((t18) => (t18[t18.Strict = 0] = "Strict", t18[t18.Loose = 1] = "Loose", t18))(T || {});
function h2(e5, r9 = 0) {
  var t18;
  return e5 === ((t18 = e2(e5)) == null ? void 0 : t18.body) ? !1 : u2(r9, { [0]() {
    return e5.matches(c3);
  }, [1]() {
    let l13 = e5;
    for (; l13 !== null; ) {
      if (l13.matches(c3))
        return !0;
      l13 = l13.parentElement;
    }
    return !1;
  } });
}
function D2(e5) {
  let r9 = e2(e5);
  o3().nextFrame(() => {
    r9 && !h2(r9.activeElement, 0) && y(e5);
  });
}
var w = ((t18) => (t18[t18.Keyboard = 0] = "Keyboard", t18[t18.Mouse = 1] = "Mouse", t18))(w || {});
typeof window < "u" && typeof document < "u" && (document.addEventListener("keydown", (e5) => {
  e5.metaKey || e5.altKey || e5.ctrlKey || (document.documentElement.dataset.headlessuiFocusVisible = "");
}, !0), document.addEventListener("click", (e5) => {
  e5.detail === 1 ? delete document.documentElement.dataset.headlessuiFocusVisible : e5.detail === 0 && (document.documentElement.dataset.headlessuiFocusVisible = "");
}, !0));
function y(e5) {
  e5 == null || e5.focus({ preventScroll: !0 });
}
var S = ["textarea", "input"].join(",");
function H2(e5) {
  var r9, t18;
  return (t18 = (r9 = e5 == null ? void 0 : e5.matches) == null ? void 0 : r9.call(e5, S)) != null ? t18 : !1;
}
function I2(e5, r9 = (t18) => t18) {
  return e5.slice().sort((t18, l13) => {
    let o11 = r9(t18), i7 = r9(l13);
    if (o11 === null || i7 === null)
      return 0;
    let n7 = o11.compareDocumentPosition(i7);
    return n7 & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : n7 & Node.DOCUMENT_POSITION_PRECEDING ? 1 : 0;
  });
}
function _(e5, r9) {
  return O2(f(), r9, { relativeTo: e5 });
}
function O2(e5, r9, { sorted: t18 = !0, relativeTo: l13 = null, skipElements: o11 = [] } = {}) {
  let i7 = Array.isArray(e5) ? e5.length > 0 ? e5[0].ownerDocument : document : e5.ownerDocument, n7 = Array.isArray(e5) ? t18 ? I2(e5) : e5 : f(e5);
  o11.length > 0 && n7.length > 1 && (n7 = n7.filter((s15) => !o11.includes(s15))), l13 = l13 ?? i7.activeElement;
  let E9 = (() => {
    if (r9 & 5)
      return 1;
    if (r9 & 10)
      return -1;
    throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
  })(), x5 = (() => {
    if (r9 & 1)
      return 0;
    if (r9 & 2)
      return Math.max(0, n7.indexOf(l13)) - 1;
    if (r9 & 4)
      return Math.max(0, n7.indexOf(l13)) + 1;
    if (r9 & 8)
      return n7.length - 1;
    throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
  })(), p7 = r9 & 32 ? { preventScroll: !0 } : {}, d12 = 0, a13 = n7.length, u10;
  do {
    if (d12 >= a13 || d12 + a13 <= 0)
      return 0;
    let s15 = x5 + d12;
    if (r9 & 16)
      s15 = (s15 + a13) % a13;
    else {
      if (s15 < 0)
        return 3;
      if (s15 >= a13)
        return 1;
    }
    u10 = n7[s15], u10 == null || u10.focus(p7), d12 += E9;
  } while (u10 !== i7.activeElement);
  return r9 & 6 && H2(u10) && u10.select(), 2;
}

// node_modules/@headlessui/react/dist/hooks/use-document-event.js
var import_react45 = __toESM(require_react(), 1);
function d3(e5, r9, n7) {
  let o11 = s3(r9);
  (0, import_react45.useEffect)(() => {
    function t18(u10) {
      o11.current(u10);
    }
    return document.addEventListener(e5, t18, n7), () => document.removeEventListener(e5, t18, n7);
  }, [e5, n7]);
}

// node_modules/@headlessui/react/dist/hooks/use-window-event.js
var import_react46 = __toESM(require_react(), 1);
function s6(e5, r9, n7) {
  let o11 = s3(r9);
  (0, import_react46.useEffect)(() => {
    function t18(i7) {
      o11.current(i7);
    }
    return window.addEventListener(e5, t18, n7), () => window.removeEventListener(e5, t18, n7);
  }, [e5, n7]);
}

// node_modules/@headlessui/react/dist/hooks/use-outside-click.js
function h3(s15, m10, a13 = !0) {
  let i7 = (0, import_react47.useRef)(!1);
  (0, import_react47.useEffect)(() => {
    requestAnimationFrame(() => {
      i7.current = a13;
    });
  }, [a13]);
  function c13(e5, r9) {
    if (!i7.current || e5.defaultPrevented)
      return;
    let t18 = r9(e5);
    if (t18 === null || !t18.getRootNode().contains(t18) || !t18.isConnected)
      return;
    let E9 = function u10(n7) {
      return typeof n7 == "function" ? u10(n7()) : Array.isArray(n7) || n7 instanceof Set ? n7 : [n7];
    }(s15);
    for (let u10 of E9) {
      if (u10 === null)
        continue;
      let n7 = u10 instanceof HTMLElement ? u10 : u10.current;
      if (n7 != null && n7.contains(t18) || e5.composed && e5.composedPath().includes(n7))
        return;
    }
    return !h2(t18, T.Loose) && t18.tabIndex !== -1 && e5.preventDefault(), m10(e5, t18);
  }
  let o11 = (0, import_react47.useRef)(null);
  d3("pointerdown", (e5) => {
    var r9, t18;
    i7.current && (o11.current = ((t18 = (r9 = e5.composedPath) == null ? void 0 : r9.call(e5)) == null ? void 0 : t18[0]) || e5.target);
  }, !0), d3("mousedown", (e5) => {
    var r9, t18;
    i7.current && (o11.current = ((t18 = (r9 = e5.composedPath) == null ? void 0 : r9.call(e5)) == null ? void 0 : t18[0]) || e5.target);
  }, !0), d3("click", (e5) => {
    o11.current && (c13(e5, () => o11.current), o11.current = null);
  }, !0), d3("touchend", (e5) => c13(e5, () => e5.target instanceof HTMLElement ? e5.target : null), !0), s6("blur", (e5) => c13(e5, () => window.document.activeElement instanceof HTMLIFrameElement ? window.document.activeElement : null), !0);
}

// node_modules/@headlessui/react/dist/hooks/use-resolve-button-type.js
var import_react48 = __toESM(require_react(), 1);
function i3(t18) {
  var n7;
  if (t18.type)
    return t18.type;
  let e5 = (n7 = t18.as) != null ? n7 : "button";
  if (typeof e5 == "string" && e5.toLowerCase() === "button")
    return "button";
}
function s7(t18, e5) {
  let [n7, u10] = (0, import_react48.useState)(() => i3(t18));
  return l3(() => {
    u10(i3(t18));
  }, [t18.type, t18.as]), l3(() => {
    n7 || e5.current && e5.current instanceof HTMLButtonElement && !e5.current.hasAttribute("type") && u10("button");
  }, [n7, e5]), n7;
}

// node_modules/@headlessui/react/dist/hooks/use-sync-refs.js
var import_react49 = __toESM(require_react(), 1);
var u3 = Symbol();
function T2(t18, n7 = !0) {
  return Object.assign(t18, { [u3]: n7 });
}
function y2(...t18) {
  let n7 = (0, import_react49.useRef)(t18);
  (0, import_react49.useEffect)(() => {
    n7.current = t18;
  }, [t18]);
  let c13 = o5((e5) => {
    for (let o11 of n7.current)
      o11 != null && (typeof o11 == "function" ? o11(e5) : o11.current = e5);
  });
  return t18.every((e5) => e5 == null || (e5 == null ? void 0 : e5[u3])) ? void 0 : c13;
}

// node_modules/@headlessui/react/dist/hooks/use-tree-walker.js
var import_react50 = __toESM(require_react(), 1);
function F2({ container: e5, accept: t18, walk: r9, enabled: c13 = !0 }) {
  let o11 = (0, import_react50.useRef)(t18), l13 = (0, import_react50.useRef)(r9);
  (0, import_react50.useEffect)(() => {
    o11.current = t18, l13.current = r9;
  }, [t18, r9]), l3(() => {
    if (!e5 || !c13)
      return;
    let n7 = e2(e5);
    if (!n7)
      return;
    let f10 = o11.current, p7 = l13.current, d12 = Object.assign((i7) => f10(i7), { acceptNode: f10 }), u10 = n7.createTreeWalker(e5, NodeFilter.SHOW_ELEMENT, d12, !1);
    for (; u10.nextNode(); )
      p7(u10.currentNode);
  }, [e5, c13, o11, l13]);
}

// node_modules/@headlessui/react/dist/utils/calculate-active-index.js
function f3(r9) {
  throw new Error("Unexpected object: " + r9);
}
var a3 = ((e5) => (e5[e5.First = 0] = "First", e5[e5.Previous = 1] = "Previous", e5[e5.Next = 2] = "Next", e5[e5.Last = 3] = "Last", e5[e5.Specific = 4] = "Specific", e5[e5.Nothing = 5] = "Nothing", e5))(a3 || {});
function x(r9, n7) {
  let t18 = n7.resolveItems();
  if (t18.length <= 0)
    return null;
  let l13 = n7.resolveActiveIndex(), s15 = l13 ?? -1, d12 = (() => {
    switch (r9.focus) {
      case 0:
        return t18.findIndex((e5) => !n7.resolveDisabled(e5));
      case 1: {
        let e5 = t18.slice().reverse().findIndex((i7, c13, u10) => s15 !== -1 && u10.length - c13 - 1 >= s15 ? !1 : !n7.resolveDisabled(i7));
        return e5 === -1 ? e5 : t18.length - 1 - e5;
      }
      case 2:
        return t18.findIndex((e5, i7) => i7 <= s15 ? !1 : !n7.resolveDisabled(e5));
      case 3: {
        let e5 = t18.slice().reverse().findIndex((i7) => !n7.resolveDisabled(i7));
        return e5 === -1 ? e5 : t18.length - 1 - e5;
      }
      case 4:
        return t18.findIndex((e5) => n7.resolveId(e5) === r9.id);
      case 5:
        return null;
      default:
        f3(r9);
    }
  })();
  return d12 === -1 ? l13 : d12;
}

// node_modules/@headlessui/react/dist/utils/render.js
var import_react51 = __toESM(require_react(), 1);

// node_modules/@headlessui/react/dist/utils/class-names.js
function t7(...r9) {
  return Array.from(new Set(r9.flatMap((n7) => typeof n7 == "string" ? n7.split(" ") : []))).filter(Boolean).join(" ");
}

// node_modules/@headlessui/react/dist/utils/render.js
var S2 = ((a13) => (a13[a13.None = 0] = "None", a13[a13.RenderStrategy = 1] = "RenderStrategy", a13[a13.Static = 2] = "Static", a13))(S2 || {}), j = ((e5) => (e5[e5.Unmount = 0] = "Unmount", e5[e5.Hidden = 1] = "Hidden", e5))(j || {});
function X({ ourProps: r9, theirProps: t18, slot: e5, defaultTag: a13, features: s15, visible: n7 = !0, name: f10 }) {
  let o11 = N2(t18, r9);
  if (n7)
    return c4(o11, e5, a13, f10);
  let u10 = s15 ?? 0;
  if (u10 & 2) {
    let { static: l13 = !1, ...p7 } = o11;
    if (l13)
      return c4(p7, e5, a13, f10);
  }
  if (u10 & 1) {
    let { unmount: l13 = !0, ...p7 } = o11;
    return u2(l13 ? 0 : 1, { [0]() {
      return null;
    }, [1]() {
      return c4({ ...p7, hidden: !0, style: { display: "none" } }, e5, a13, f10);
    } });
  }
  return c4(o11, e5, a13, f10);
}
function c4(r9, t18 = {}, e5, a13) {
  let { as: s15 = e5, children: n7, refName: f10 = "ref", ...o11 } = g2(r9, ["unmount", "static"]), u10 = r9.ref !== void 0 ? { [f10]: r9.ref } : {}, l13 = typeof n7 == "function" ? n7(t18) : n7;
  "className" in o11 && o11.className && typeof o11.className == "function" && (o11.className = o11.className(t18));
  let p7 = {};
  if (t18) {
    let i7 = !1, m10 = [];
    for (let [y6, d12] of Object.entries(t18))
      typeof d12 == "boolean" && (i7 = !0), d12 === !0 && m10.push(y6);
    i7 && (p7["data-headlessui-state"] = m10.join(" "));
  }
  if (s15 === import_react51.Fragment && Object.keys(R(o11)).length > 0) {
    if (!(0, import_react51.isValidElement)(l13) || Array.isArray(l13) && l13.length > 1)
      throw new Error(['Passing props on "Fragment"!', "", `The current component <${a13} /> is rendering a "Fragment".`, "However we need to passthrough the following props:", Object.keys(o11).map((d12) => `  - ${d12}`).join(`
`), "", "You can apply a few solutions:", ['Add an `as="..."` prop, to ensure that we render an actual element instead of a "Fragment".', "Render a single element as the child so that we can forward the props onto that element."].map((d12) => `  - ${d12}`).join(`
`)].join(`
`));
    let i7 = l13.props, m10 = typeof (i7 == null ? void 0 : i7.className) == "function" ? (...d12) => t7(i7 == null ? void 0 : i7.className(...d12), o11.className) : t7(i7 == null ? void 0 : i7.className, o11.className), y6 = m10 ? { className: m10 } : {};
    return (0, import_react51.cloneElement)(l13, Object.assign({}, N2(l13.props, R(g2(o11, ["ref"]))), p7, u10, w2(l13.ref, u10.ref), y6));
  }
  return (0, import_react51.createElement)(s15, Object.assign({}, g2(o11, ["ref"]), s15 !== import_react51.Fragment && u10, s15 !== import_react51.Fragment && p7), l13);
}
function w2(...r9) {
  return { ref: r9.every((t18) => t18 == null) ? void 0 : (t18) => {
    for (let e5 of r9)
      e5 != null && (typeof e5 == "function" ? e5(t18) : e5.current = t18);
  } };
}
function N2(...r9) {
  var a13;
  if (r9.length === 0)
    return {};
  if (r9.length === 1)
    return r9[0];
  let t18 = {}, e5 = {};
  for (let s15 of r9)
    for (let n7 in s15)
      n7.startsWith("on") && typeof s15[n7] == "function" ? ((a13 = e5[n7]) != null || (e5[n7] = []), e5[n7].push(s15[n7])) : t18[n7] = s15[n7];
  if (t18.disabled || t18["aria-disabled"])
    return Object.assign(t18, Object.fromEntries(Object.keys(e5).map((s15) => [s15, void 0])));
  for (let s15 in e5)
    Object.assign(t18, { [s15](n7, ...f10) {
      let o11 = e5[s15];
      for (let u10 of o11) {
        if ((n7 instanceof Event || (n7 == null ? void 0 : n7.nativeEvent) instanceof Event) && n7.defaultPrevented)
          return;
        u10(n7, ...f10);
      }
    } });
  return t18;
}
function D3(r9) {
  var t18;
  return Object.assign((0, import_react51.forwardRef)(r9), { displayName: (t18 = r9.displayName) != null ? t18 : r9.name });
}
function R(r9) {
  let t18 = Object.assign({}, r9);
  for (let e5 in t18)
    t18[e5] === void 0 && delete t18[e5];
  return t18;
}
function g2(r9, t18 = []) {
  let e5 = Object.assign({}, r9);
  for (let a13 of t18)
    a13 in e5 && delete e5[a13];
  return e5;
}

// node_modules/@headlessui/react/dist/utils/bugs.js
function r3(n7) {
  let e5 = n7.parentElement, l13 = null;
  for (; e5 && !(e5 instanceof HTMLFieldSetElement); )
    e5 instanceof HTMLLegendElement && (l13 = e5), e5 = e5.parentElement;
  let t18 = (e5 == null ? void 0 : e5.getAttribute("disabled")) === "";
  return t18 && i5(l13) ? !1 : t18;
}
function i5(n7) {
  if (!n7)
    return !1;
  let e5 = n7.previousElementSibling;
  for (; e5 !== null; ) {
    if (e5 instanceof HTMLLegendElement)
      return !1;
    e5 = e5.previousElementSibling;
  }
  return !0;
}

// node_modules/@headlessui/react/dist/internal/hidden.js
var a4 = "div", p3 = ((e5) => (e5[e5.None = 1] = "None", e5[e5.Focusable = 2] = "Focusable", e5[e5.Hidden = 4] = "Hidden", e5))(p3 || {});
function s8(t18, o11) {
  let { features: n7 = 1, ...e5 } = t18, d12 = { ref: o11, "aria-hidden": (n7 & 2) === 2 ? !0 : void 0, style: { position: "fixed", top: 1, left: 1, width: 1, height: 0, padding: 0, margin: -1, overflow: "hidden", clip: "rect(0, 0, 0, 0)", whiteSpace: "nowrap", borderWidth: "0", ...(n7 & 4) === 4 && (n7 & 2) !== 2 && { display: "none" } } };
  return X({ ourProps: d12, theirProps: e5, slot: {}, defaultTag: a4, name: "Hidden" });
}
var c5 = D3(s8);

// node_modules/@headlessui/react/dist/internal/open-closed.js
var import_react52 = __toESM(require_react(), 1), n2 = (0, import_react52.createContext)(null);
n2.displayName = "OpenClosedContext";
var d6 = ((e5) => (e5[e5.Open = 1] = "Open", e5[e5.Closed = 2] = "Closed", e5[e5.Closing = 4] = "Closing", e5[e5.Opening = 8] = "Opening", e5))(d6 || {});
function C2() {
  return (0, import_react52.useContext)(n2);
}
function c6({ value: o11, children: r9 }) {
  return import_react52.default.createElement(n2.Provider, { value: o11 }, r9);
}

// node_modules/@headlessui/react/dist/components/keyboard.js
var o8 = ((r9) => (r9.Space = " ", r9.Enter = "Enter", r9.Escape = "Escape", r9.Backspace = "Backspace", r9.Delete = "Delete", r9.ArrowLeft = "ArrowLeft", r9.ArrowUp = "ArrowUp", r9.ArrowRight = "ArrowRight", r9.ArrowDown = "ArrowDown", r9.Home = "Home", r9.End = "End", r9.PageUp = "PageUp", r9.PageDown = "PageDown", r9.Tab = "Tab", r9))(o8 || {});

// node_modules/@headlessui/react/dist/hooks/use-watch.js
var import_react53 = __toESM(require_react(), 1);
function m3(u10, t18) {
  let e5 = (0, import_react53.useRef)([]), r9 = o5(u10);
  (0, import_react53.useEffect)(() => {
    let o11 = [...e5.current];
    for (let [n7, a13] of t18.entries())
      if (e5.current[n7] !== a13) {
        let l13 = r9(t18, o11);
        return e5.current = t18, l13;
      }
  }, [r9, ...t18]);
}

// node_modules/@headlessui/react/dist/hooks/use-tracked-pointer.js
var import_react54 = __toESM(require_react(), 1);
function t9(e5) {
  return [e5.screenX, e5.screenY];
}
function u4() {
  let e5 = (0, import_react54.useRef)([-1, -1]);
  return { wasMoved(r9) {
    let n7 = t9(r9);
    return e5.current[0] === n7[0] && e5.current[1] === n7[1] ? !1 : (e5.current = n7, !0);
  }, update(r9) {
    e5.current = t9(r9);
  } };
}

// node_modules/@headlessui/react/dist/utils/platform.js
function t10() {
  return /iPhone/gi.test(window.navigator.platform) || /Mac/gi.test(window.navigator.platform) && window.navigator.maxTouchPoints > 0;
}

// node_modules/@headlessui/react/dist/hooks/use-owner.js
var import_react55 = __toESM(require_react(), 1);
function n3(...e5) {
  return (0, import_react55.useMemo)(() => e2(...e5), [...e5]);
}

// node_modules/@headlessui/react/dist/components/dialog/dialog.js
var import_react66 = __toESM(require_react(), 1);

// node_modules/@headlessui/react/dist/components/focus-trap/focus-trap.js
var import_react60 = __toESM(require_react(), 1);

// node_modules/@headlessui/react/dist/hooks/use-tab-direction.js
var import_react56 = __toESM(require_react(), 1);
var s10 = ((r9) => (r9[r9.Forwards = 0] = "Forwards", r9[r9.Backwards = 1] = "Backwards", r9))(s10 || {});
function n4() {
  let e5 = (0, import_react56.useRef)(0);
  return s6("keydown", (o11) => {
    o11.key === "Tab" && (e5.current = o11.shiftKey ? 1 : 0);
  }, !0), e5;
}

// node_modules/@headlessui/react/dist/hooks/use-is-mounted.js
var import_react57 = __toESM(require_react(), 1);
function f5() {
  let e5 = (0, import_react57.useRef)(!1);
  return l3(() => (e5.current = !0, () => {
    e5.current = !1;
  }), []), e5;
}

// node_modules/@headlessui/react/dist/hooks/use-event-listener.js
var import_react58 = __toESM(require_react(), 1);
function E4(n7, e5, a13, t18) {
  let i7 = s3(a13);
  (0, import_react58.useEffect)(() => {
    n7 = n7 ?? window;
    function r9(o11) {
      i7.current(o11);
    }
    return n7.addEventListener(e5, r9, t18), () => n7.removeEventListener(e5, r9, t18);
  }, [n7, e5, t18]);
}

// node_modules/@headlessui/react/dist/utils/document-ready.js
function t13(n7) {
  function e5() {
    document.readyState !== "loading" && (n7(), document.removeEventListener("DOMContentLoaded", e5));
  }
  typeof window < "u" && typeof document < "u" && (document.addEventListener("DOMContentLoaded", e5), e5());
}

// node_modules/@headlessui/react/dist/hooks/use-on-unmount.js
var import_react59 = __toESM(require_react(), 1);
function c7(t18) {
  let r9 = o5(t18), e5 = (0, import_react59.useRef)(!1);
  (0, import_react59.useEffect)(() => (e5.current = !1, () => {
    e5.current = !0, t4(() => {
      e5.current && r9();
    });
  }), [r9]);
}

// node_modules/@headlessui/react/dist/components/focus-trap/focus-trap.js
function P(t18) {
  if (!t18)
    return /* @__PURE__ */ new Set();
  if (typeof t18 == "function")
    return new Set(t18());
  let r9 = /* @__PURE__ */ new Set();
  for (let e5 of t18.current)
    e5.current instanceof HTMLElement && r9.add(e5.current);
  return r9;
}
var J2 = "div", h5 = ((n7) => (n7[n7.None = 1] = "None", n7[n7.InitialFocus = 2] = "InitialFocus", n7[n7.TabLock = 4] = "TabLock", n7[n7.FocusLock = 8] = "FocusLock", n7[n7.RestoreFocus = 16] = "RestoreFocus", n7[n7.All = 30] = "All", n7))(h5 || {});
function X2(t18, r9) {
  let e5 = (0, import_react60.useRef)(null), o11 = y2(e5, r9), { initialFocus: u10, containers: i7, features: n7 = 30, ...l13 } = t18;
  l4() || (n7 = 1);
  let m10 = n3(e5);
  Y({ ownerDocument: m10 }, Boolean(n7 & 16));
  let c13 = Z2({ ownerDocument: m10, container: e5, initialFocus: u10 }, Boolean(n7 & 2));
  $({ ownerDocument: m10, container: e5, containers: i7, previousActiveElement: c13 }, Boolean(n7 & 8));
  let v4 = n4(), y6 = o5((s15) => {
    let T7 = e5.current;
    T7 && ((B2) => B2())(() => {
      u2(v4.current, { [s10.Forwards]: () => {
        O2(T7, M.First, { skipElements: [s15.relatedTarget] });
      }, [s10.Backwards]: () => {
        O2(T7, M.Last, { skipElements: [s15.relatedTarget] });
      } });
    });
  }), _3 = p2(), b6 = (0, import_react60.useRef)(!1), j5 = { ref: o11, onKeyDown(s15) {
    s15.key == "Tab" && (b6.current = !0, _3.requestAnimationFrame(() => {
      b6.current = !1;
    }));
  }, onBlur(s15) {
    let T7 = P(i7);
    e5.current instanceof HTMLElement && T7.add(e5.current);
    let d12 = s15.relatedTarget;
    d12 instanceof HTMLElement && d12.dataset.headlessuiFocusGuard !== "true" && (S3(T7, d12) || (b6.current ? O2(e5.current, u2(v4.current, { [s10.Forwards]: () => M.Next, [s10.Backwards]: () => M.Previous }) | M.WrapAround, { relativeTo: s15.target }) : s15.target instanceof HTMLElement && y(s15.target)));
  } };
  return import_react60.default.createElement(import_react60.default.Fragment, null, Boolean(n7 & 4) && import_react60.default.createElement(c5, { as: "button", type: "button", "data-headlessui-focus-guard": !0, onFocus: y6, features: p3.Focusable }), X({ ourProps: j5, theirProps: l13, defaultTag: J2, name: "FocusTrap" }), Boolean(n7 & 4) && import_react60.default.createElement(c5, { as: "button", type: "button", "data-headlessui-focus-guard": !0, onFocus: y6, features: p3.Focusable }));
}
var z = D3(X2), ge = Object.assign(z, { features: h5 }), a5 = [];
t13(() => {
  function t18(r9) {
    r9.target instanceof HTMLElement && r9.target !== document.body && a5[0] !== r9.target && (a5.unshift(r9.target), a5 = a5.filter((e5) => e5 != null && e5.isConnected), a5.splice(10));
  }
  window.addEventListener("click", t18, { capture: !0 }), window.addEventListener("mousedown", t18, { capture: !0 }), window.addEventListener("focus", t18, { capture: !0 }), document.body.addEventListener("click", t18, { capture: !0 }), document.body.addEventListener("mousedown", t18, { capture: !0 }), document.body.addEventListener("focus", t18, { capture: !0 });
});
function Q(t18 = !0) {
  let r9 = (0, import_react60.useRef)(a5.slice());
  return m3(([e5], [o11]) => {
    o11 === !0 && e5 === !1 && t4(() => {
      r9.current.splice(0);
    }), o11 === !1 && e5 === !0 && (r9.current = a5.slice());
  }, [t18, a5, r9]), o5(() => {
    var e5;
    return (e5 = r9.current.find((o11) => o11 != null && o11.isConnected)) != null ? e5 : null;
  });
}
function Y({ ownerDocument: t18 }, r9) {
  let e5 = Q(r9);
  m3(() => {
    r9 || (t18 == null ? void 0 : t18.activeElement) === (t18 == null ? void 0 : t18.body) && y(e5());
  }, [r9]), c7(() => {
    r9 && y(e5());
  });
}
function Z2({ ownerDocument: t18, container: r9, initialFocus: e5 }, o11) {
  let u10 = (0, import_react60.useRef)(null), i7 = f5();
  return m3(() => {
    if (!o11)
      return;
    let n7 = r9.current;
    n7 && t4(() => {
      if (!i7.current)
        return;
      let l13 = t18 == null ? void 0 : t18.activeElement;
      if (e5 != null && e5.current) {
        if ((e5 == null ? void 0 : e5.current) === l13) {
          u10.current = l13;
          return;
        }
      } else if (n7.contains(l13)) {
        u10.current = l13;
        return;
      }
      e5 != null && e5.current ? y(e5.current) : O2(n7, M.First) === N.Error && console.warn("There are no focusable elements inside the <FocusTrap />"), u10.current = t18 == null ? void 0 : t18.activeElement;
    });
  }, [o11]), u10;
}
function $({ ownerDocument: t18, container: r9, containers: e5, previousActiveElement: o11 }, u10) {
  let i7 = f5();
  E4(t18 == null ? void 0 : t18.defaultView, "focus", (n7) => {
    if (!u10 || !i7.current)
      return;
    let l13 = P(e5);
    r9.current instanceof HTMLElement && l13.add(r9.current);
    let m10 = o11.current;
    if (!m10)
      return;
    let c13 = n7.target;
    c13 && c13 instanceof HTMLElement ? S3(l13, c13) ? (o11.current = c13, y(c13)) : (n7.preventDefault(), n7.stopPropagation(), y(m10)) : y(o11.current);
  }, !0);
}
function S3(t18, r9) {
  for (let e5 of t18)
    if (e5.contains(r9))
      return !0;
  return !1;
}

// node_modules/@headlessui/react/dist/components/portal/portal.js
var import_react62 = __toESM(require_react(), 1), import_react_dom2 = __toESM(require_react_dom(), 1);

// node_modules/@headlessui/react/dist/internal/portal-force-root.js
var import_react61 = __toESM(require_react(), 1), e3 = (0, import_react61.createContext)(!1);
function l7() {
  return (0, import_react61.useContext)(e3);
}
function P2(o11) {
  return import_react61.default.createElement(e3.Provider, { value: o11.force }, o11.children);
}

// node_modules/@headlessui/react/dist/components/portal/portal.js
function F3(p7) {
  let l13 = l7(), n7 = (0, import_react62.useContext)(v), e5 = n3(p7), [a13, o11] = (0, import_react62.useState)(() => {
    if (!l13 && n7 !== null || s2.isServer)
      return null;
    let t18 = e5 == null ? void 0 : e5.getElementById("headlessui-portal-root");
    if (t18)
      return t18;
    if (e5 === null)
      return null;
    let r9 = e5.createElement("div");
    return r9.setAttribute("id", "headlessui-portal-root"), e5.body.appendChild(r9);
  });
  return (0, import_react62.useEffect)(() => {
    a13 !== null && (e5 != null && e5.body.contains(a13) || e5 == null || e5.body.appendChild(a13));
  }, [a13, e5]), (0, import_react62.useEffect)(() => {
    l13 || n7 !== null && o11(n7.current);
  }, [n7, o11, l13]), a13;
}
var U = import_react62.Fragment;
function N3(p7, l13) {
  let n7 = p7, e5 = (0, import_react62.useRef)(null), a13 = y2(T2((u10) => {
    e5.current = u10;
  }), l13), o11 = n3(e5), t18 = F3(e5), [r9] = (0, import_react62.useState)(() => {
    var u10;
    return s2.isServer ? null : (u10 = o11 == null ? void 0 : o11.createElement("div")) != null ? u10 : null;
  }), i7 = (0, import_react62.useContext)(f6), C5 = l4();
  return l3(() => {
    !t18 || !r9 || t18.contains(r9) || (r9.setAttribute("data-headlessui-portal", ""), t18.appendChild(r9));
  }, [t18, r9]), l3(() => {
    if (r9 && i7)
      return i7.register(r9);
  }, [i7, r9]), c7(() => {
    var u10;
    !t18 || !r9 || (r9 instanceof Node && t18.contains(r9) && t18.removeChild(r9), t18.childNodes.length <= 0 && ((u10 = t18.parentElement) == null || u10.removeChild(t18)));
  }), C5 ? !t18 || !r9 ? null : (0, import_react_dom2.createPortal)(X({ ourProps: { ref: a13 }, theirProps: n7, defaultTag: U, name: "Portal" }), r9) : null;
}
var S4 = import_react62.Fragment, v = (0, import_react62.createContext)(null);
function j2(p7, l13) {
  let { target: n7, ...e5 } = p7, o11 = { ref: y2(l13) };
  return import_react62.default.createElement(v.Provider, { value: n7 }, X({ ourProps: o11, theirProps: e5, defaultTag: S4, name: "Popover.Group" }));
}
var f6 = (0, import_react62.createContext)(null);
function ae2() {
  let p7 = (0, import_react62.useContext)(f6), l13 = (0, import_react62.useRef)([]), n7 = o5((o11) => (l13.current.push(o11), p7 && p7.register(o11), () => e5(o11))), e5 = o5((o11) => {
    let t18 = l13.current.indexOf(o11);
    t18 !== -1 && l13.current.splice(t18, 1), p7 && p7.unregister(o11);
  }), a13 = (0, import_react62.useMemo)(() => ({ register: n7, unregister: e5, portals: l13 }), [n7, e5, l13]);
  return [l13, (0, import_react62.useMemo)(() => function({ children: t18 }) {
    return import_react62.default.createElement(f6.Provider, { value: a13 }, t18);
  }, [a13])];
}
var D4 = D3(N3), I3 = D3(j2), pe = Object.assign(D4, { Group: I3 });

// node_modules/@headlessui/react/dist/components/description/description.js
var import_react63 = __toESM(require_react(), 1);
var d9 = (0, import_react63.createContext)(null);
function f7() {
  let r9 = (0, import_react63.useContext)(d9);
  if (r9 === null) {
    let t18 = new Error("You used a <Description /> component, but it is not inside a relevant parent.");
    throw Error.captureStackTrace && Error.captureStackTrace(t18, f7), t18;
  }
  return r9;
}
function M2() {
  let [r9, t18] = (0, import_react63.useState)([]);
  return [r9.length > 0 ? r9.join(" ") : void 0, (0, import_react63.useMemo)(() => function(e5) {
    let i7 = o5((s15) => (t18((o11) => [...o11, s15]), () => t18((o11) => {
      let p7 = o11.slice(), c13 = p7.indexOf(s15);
      return c13 !== -1 && p7.splice(c13, 1), p7;
    }))), n7 = (0, import_react63.useMemo)(() => ({ register: i7, slot: e5.slot, name: e5.name, props: e5.props }), [i7, e5.slot, e5.name, e5.props]);
    return import_react63.default.createElement(d9.Provider, { value: n7 }, e5.children);
  }, [t18])];
}
var S5 = "p";
function h6(r9, t18) {
  let a13 = I(), { id: e5 = `headlessui-description-${a13}`, ...i7 } = r9, n7 = f7(), s15 = y2(t18);
  l3(() => n7.register(e5), [e5, n7.register]);
  let o11 = { ref: s15, ...n7.props, id: e5 };
  return X({ ourProps: o11, theirProps: i7, slot: n7.slot || {}, defaultTag: S5, name: n7.name || "Description" });
}
var y3 = D3(h6), b2 = Object.assign(y3, {});

// node_modules/@headlessui/react/dist/internal/stack-context.js
var import_react64 = __toESM(require_react(), 1);
var a6 = (0, import_react64.createContext)(() => {
});
a6.displayName = "StackContext";
var s12 = ((e5) => (e5[e5.Add = 0] = "Add", e5[e5.Remove = 1] = "Remove", e5))(s12 || {});
function x3() {
  return (0, import_react64.useContext)(a6);
}
function M3({ children: i7, onUpdate: r9, type: e5, element: n7, enabled: u10 }) {
  let l13 = x3(), o11 = o5((...t18) => {
    r9 == null || r9(...t18), l13(...t18);
  });
  return l3(() => {
    let t18 = u10 === void 0 || u10 === !0;
    return t18 && o11(0, e5, n7), () => {
      t18 && o11(1, e5, n7);
    };
  }, [o11, e5, n7, u10]), import_react64.default.createElement(a6.Provider, { value: o11 }, i7);
}

// node_modules/@headlessui/react/dist/use-sync-external-store-shim/index.js
var e4 = __toESM(require_react(), 1);

// node_modules/@headlessui/react/dist/use-sync-external-store-shim/useSyncExternalStoreShimClient.js
var l9 = __toESM(require_react(), 1);
function i6(e5, t18) {
  return e5 === t18 && (e5 !== 0 || 1 / e5 === 1 / t18) || e5 !== e5 && t18 !== t18;
}
var d11 = typeof Object.is == "function" ? Object.is : i6, { useState: u7, useEffect: h7, useLayoutEffect: f8, useDebugValue: p5 } = l9;
function y4(e5, t18, c13) {
  let a13 = t18(), [{ inst: n7 }, o11] = u7({ inst: { value: a13, getSnapshot: t18 } });
  return f8(() => {
    n7.value = a13, n7.getSnapshot = t18, r6(n7) && o11({ inst: n7 });
  }, [e5, a13, t18]), h7(() => (r6(n7) && o11({ inst: n7 }), e5(() => {
    r6(n7) && o11({ inst: n7 });
  })), [e5]), p5(a13), a13;
}
function r6(e5) {
  let t18 = e5.getSnapshot, c13 = e5.value;
  try {
    let a13 = t18();
    return !d11(c13, a13);
  } catch {
    return !0;
  }
}

// node_modules/@headlessui/react/dist/use-sync-external-store-shim/useSyncExternalStoreShimServer.js
function t15(r9, e5, n7) {
  return e5();
}

// node_modules/@headlessui/react/dist/use-sync-external-store-shim/index.js
var r7 = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", s13 = !r7, c10 = s13 ? t15 : y4, a7 = "useSyncExternalStore" in e4 ? ((n7) => n7.useSyncExternalStore)(e4) : c10;

// node_modules/@headlessui/react/dist/hooks/use-store.js
function S6(t18) {
  return a7(t18.subscribe, t18.getSnapshot, t18.getSnapshot);
}

// node_modules/@headlessui/react/dist/utils/store.js
function a8(o11, r9) {
  let t18 = o11(), n7 = /* @__PURE__ */ new Set();
  return { getSnapshot() {
    return t18;
  }, subscribe(e5) {
    return n7.add(e5), () => n7.delete(e5);
  }, dispatch(e5, ...s15) {
    let i7 = r9[e5].call(t18, ...s15);
    i7 && (t18 = i7, n7.forEach((c13) => c13()));
  } };
}

// node_modules/@headlessui/react/dist/hooks/document-overflow/adjust-scrollbar-padding.js
function c11() {
  let o11;
  return { before({ doc: e5 }) {
    var l13;
    let n7 = e5.documentElement;
    o11 = ((l13 = e5.defaultView) != null ? l13 : window).innerWidth - n7.clientWidth;
  }, after({ doc: e5, d: n7 }) {
    let t18 = e5.documentElement, l13 = t18.clientWidth - t18.offsetWidth, r9 = o11 - l13;
    n7.style(t18, "paddingRight", `${r9}px`);
  } };
}

// node_modules/@headlessui/react/dist/hooks/document-overflow/handle-ios-locking.js
function T6() {
  if (!t10())
    return {};
  let l13;
  return { before() {
    l13 = window.pageYOffset;
  }, after({ doc: o11, d: t18, meta: s15 }) {
    function i7(n7) {
      return s15.containers.flatMap((e5) => e5()).some((e5) => e5.contains(n7));
    }
    t18.microTask(() => {
      if (window.getComputedStyle(o11.documentElement).scrollBehavior !== "auto") {
        let e5 = o3();
        e5.style(o11.documentElement, "scroll-behavior", "auto"), t18.add(() => t18.microTask(() => e5.dispose()));
      }
      t18.style(o11.body, "marginTop", `-${l13}px`), window.scrollTo(0, 0);
      let n7 = null;
      t18.addEventListener(o11, "click", (e5) => {
        if (e5.target instanceof HTMLElement)
          try {
            let r9 = e5.target.closest("a");
            if (!r9)
              return;
            let { hash: c13 } = new URL(r9.href), a13 = o11.querySelector(c13);
            a13 && !i7(a13) && (n7 = a13);
          } catch {
          }
      }, !0), t18.addEventListener(o11, "touchmove", (e5) => {
        e5.target instanceof HTMLElement && !i7(e5.target) && e5.preventDefault();
      }, { passive: !1 }), t18.add(() => {
        window.scrollTo(0, window.pageYOffset + l13), n7 && n7.isConnected && (n7.scrollIntoView({ block: "nearest" }), n7 = null);
      });
    });
  } };
}

// node_modules/@headlessui/react/dist/hooks/document-overflow/prevent-scroll.js
function l10() {
  return { before({ doc: e5, d: o11 }) {
    o11.style(e5.documentElement, "overflow", "hidden");
  } };
}

// node_modules/@headlessui/react/dist/hooks/document-overflow/overflow-store.js
function m7(e5) {
  let n7 = {};
  for (let t18 of e5)
    Object.assign(n7, t18(n7));
  return n7;
}
var a9 = a8(() => /* @__PURE__ */ new Map(), { PUSH(e5, n7) {
  var o11;
  let t18 = (o11 = this.get(e5)) != null ? o11 : { doc: e5, count: 0, d: o3(), meta: /* @__PURE__ */ new Set() };
  return t18.count++, t18.meta.add(n7), this.set(e5, t18), this;
}, POP(e5, n7) {
  let t18 = this.get(e5);
  return t18 && (t18.count--, t18.meta.delete(n7)), this;
}, SCROLL_PREVENT({ doc: e5, d: n7, meta: t18 }) {
  let o11 = { doc: e5, d: n7, meta: m7(t18) }, c13 = [T6(), c11(), l10()];
  c13.forEach(({ before: r9 }) => r9 == null ? void 0 : r9(o11)), c13.forEach(({ after: r9 }) => r9 == null ? void 0 : r9(o11));
}, SCROLL_ALLOW({ d: e5 }) {
  e5.dispose();
}, TEARDOWN({ doc: e5 }) {
  this.delete(e5);
} });
a9.subscribe(() => {
  let e5 = a9.getSnapshot(), n7 = /* @__PURE__ */ new Map();
  for (let [t18] of e5)
    n7.set(t18, t18.documentElement.style.overflow);
  for (let t18 of e5.values()) {
    let o11 = n7.get(t18.doc) === "hidden", c13 = t18.count !== 0;
    (c13 && !o11 || !c13 && o11) && a9.dispatch(t18.count > 0 ? "SCROLL_PREVENT" : "SCROLL_ALLOW", t18), t18.count === 0 && a9.dispatch("TEARDOWN", t18);
  }
});

// node_modules/@headlessui/react/dist/hooks/document-overflow/use-document-overflow.js
function p6(e5, r9, n7) {
  let f10 = S6(a9), o11 = e5 ? f10.get(e5) : void 0, i7 = o11 ? o11.count > 0 : !1;
  return l3(() => {
    if (!(!e5 || !r9))
      return a9.dispatch("PUSH", e5, n7), () => a9.dispatch("POP", e5, n7);
  }, [r9, e5]), i7;
}

// node_modules/@headlessui/react/dist/hooks/use-inert.js
var u8 = /* @__PURE__ */ new Map(), t16 = /* @__PURE__ */ new Map();
function h8(r9, l13 = !0) {
  l3(() => {
    var o11;
    if (!l13)
      return;
    let e5 = typeof r9 == "function" ? r9() : r9.current;
    if (!e5)
      return;
    function a13() {
      var d12;
      if (!e5)
        return;
      let i7 = (d12 = t16.get(e5)) != null ? d12 : 1;
      if (i7 === 1 ? t16.delete(e5) : t16.set(e5, i7 - 1), i7 !== 1)
        return;
      let n7 = u8.get(e5);
      n7 && (n7["aria-hidden"] === null ? e5.removeAttribute("aria-hidden") : e5.setAttribute("aria-hidden", n7["aria-hidden"]), e5.inert = n7.inert, u8.delete(e5));
    }
    let f10 = (o11 = t16.get(e5)) != null ? o11 : 0;
    return t16.set(e5, f10 + 1), f10 !== 0 || (u8.set(e5, { "aria-hidden": e5.getAttribute("aria-hidden"), inert: e5.inert }), e5.setAttribute("aria-hidden", "true"), e5.inert = !0), a13;
  }, [r9, l13]);
}

// node_modules/@headlessui/react/dist/hooks/use-root-containers.js
var import_react65 = __toESM(require_react(), 1);
function j3({ defaultContainers: t18 = [], portals: r9, mainTreeNodeRef: u10 } = {}) {
  var c13;
  let o11 = (0, import_react65.useRef)((c13 = u10 == null ? void 0 : u10.current) != null ? c13 : null), l13 = n3(o11), f10 = o5(() => {
    var i7;
    let n7 = [];
    for (let e5 of t18)
      e5 !== null && (e5 instanceof HTMLElement ? n7.push(e5) : "current" in e5 && e5.current instanceof HTMLElement && n7.push(e5.current));
    if (r9 != null && r9.current)
      for (let e5 of r9.current)
        n7.push(e5);
    for (let e5 of (i7 = l13 == null ? void 0 : l13.querySelectorAll("html > *, body > *")) != null ? i7 : [])
      e5 !== document.body && e5 !== document.head && e5 instanceof HTMLElement && e5.id !== "headlessui-portal-root" && (e5.contains(o11.current) || n7.some((T7) => e5.contains(T7)) || n7.push(e5));
    return n7;
  });
  return { resolveContainers: f10, contains: o5((n7) => f10().some((i7) => i7.contains(n7))), mainTreeNodeRef: o11, MainTreeNode: (0, import_react65.useMemo)(() => function() {
    return u10 != null ? null : import_react65.default.createElement(c5, { features: p3.Hidden, ref: o11 });
  }, [o11, u10]) };
}

// node_modules/@headlessui/react/dist/components/dialog/dialog.js
var _e2 = ((o11) => (o11[o11.Open = 0] = "Open", o11[o11.Closed = 1] = "Closed", o11))(_e2 || {}), Ie = ((e5) => (e5[e5.SetTitleId = 0] = "SetTitleId", e5))(Ie || {}), Me = { [0](t18, e5) {
  return t18.titleId === e5.id ? t18 : { ...t18, titleId: e5.id };
} }, I4 = (0, import_react66.createContext)(null);
I4.displayName = "DialogContext";
function b3(t18) {
  let e5 = (0, import_react66.useContext)(I4);
  if (e5 === null) {
    let o11 = new Error(`<${t18} /> is missing a parent <Dialog /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(o11, b3), o11;
  }
  return e5;
}
function we2(t18, e5, o11 = () => [document.body]) {
  p6(t18, e5, (i7) => {
    var n7;
    return { containers: [...(n7 = i7.containers) != null ? n7 : [], o11] };
  });
}
function Be2(t18, e5) {
  return u2(e5.type, Me, t18, e5);
}
var He = "div", Ge = S2.RenderStrategy | S2.Static;
function Ne(t18, e5) {
  var X4;
  let o11 = I(), { id: i7 = `headlessui-dialog-${o11}`, open: n7, onClose: l13, initialFocus: s15, __demoMode: g7 = !1, ...T7 } = t18, [m10, h10] = (0, import_react66.useState)(0), a13 = C2();
  n7 === void 0 && a13 !== null && (n7 = (a13 & d6.Open) === d6.Open);
  let D6 = (0, import_react66.useRef)(null), Q3 = y2(D6, e5), f10 = n3(D6), N6 = t18.hasOwnProperty("open") || a13 !== null, U4 = t18.hasOwnProperty("onClose");
  if (!N6 && !U4)
    throw new Error("You have to provide an `open` and an `onClose` prop to the `Dialog` component.");
  if (!N6)
    throw new Error("You provided an `onClose` prop to the `Dialog`, but forgot an `open` prop.");
  if (!U4)
    throw new Error("You provided an `open` prop to the `Dialog`, but forgot an `onClose` prop.");
  if (typeof n7 != "boolean")
    throw new Error(`You provided an \`open\` prop to the \`Dialog\`, but the value is not a boolean. Received: ${n7}`);
  if (typeof l13 != "function")
    throw new Error(`You provided an \`onClose\` prop to the \`Dialog\`, but the value is not a function. Received: ${l13}`);
  let p7 = n7 ? 0 : 1, [S9, Z5] = (0, import_react66.useReducer)(Be2, { titleId: null, descriptionId: null, panelRef: (0, import_react66.createRef)() }), P4 = o5(() => l13(!1)), W2 = o5((r9) => Z5({ type: 0, id: r9 })), L2 = l4() ? g7 ? !1 : p7 === 0 : !1, F6 = m10 > 1, Y4 = (0, import_react66.useContext)(I4) !== null, [ee3, te3] = ae2(), { resolveContainers: M7, mainTreeNodeRef: k2, MainTreeNode: oe3 } = j3({ portals: ee3, defaultContainers: [(X4 = S9.panelRef.current) != null ? X4 : D6.current] }), re3 = F6 ? "parent" : "leaf", $4 = a13 !== null ? (a13 & d6.Closing) === d6.Closing : !1, ne2 = (() => Y4 || $4 ? !1 : L2)(), le4 = (0, import_react66.useCallback)(() => {
    var r9, c13;
    return (c13 = Array.from((r9 = f10 == null ? void 0 : f10.querySelectorAll("body > *")) != null ? r9 : []).find((d12) => d12.id === "headlessui-portal-root" ? !1 : d12.contains(k2.current) && d12 instanceof HTMLElement)) != null ? c13 : null;
  }, [k2]);
  h8(le4, ne2);
  let ae4 = (() => F6 ? !0 : L2)(), ie3 = (0, import_react66.useCallback)(() => {
    var r9, c13;
    return (c13 = Array.from((r9 = f10 == null ? void 0 : f10.querySelectorAll("[data-headlessui-portal]")) != null ? r9 : []).find((d12) => d12.contains(k2.current) && d12 instanceof HTMLElement)) != null ? c13 : null;
  }, [k2]);
  h8(ie3, ae4);
  let se4 = (() => !(!L2 || F6))();
  h3(M7, P4, se4);
  let pe2 = (() => !(F6 || p7 !== 0))();
  E4(f10 == null ? void 0 : f10.defaultView, "keydown", (r9) => {
    pe2 && (r9.defaultPrevented || r9.key === o8.Escape && (r9.preventDefault(), r9.stopPropagation(), P4()));
  });
  let de3 = (() => !($4 || p7 !== 0 || Y4))();
  we2(f10, de3, M7), (0, import_react66.useEffect)(() => {
    if (p7 !== 0 || !D6.current)
      return;
    let r9 = new ResizeObserver((c13) => {
      for (let d12 of c13) {
        let x5 = d12.target.getBoundingClientRect();
        x5.x === 0 && x5.y === 0 && x5.width === 0 && x5.height === 0 && P4();
      }
    });
    return r9.observe(D6.current), () => r9.disconnect();
  }, [p7, D6, P4]);
  let [ue2, fe2] = M2(), ge3 = (0, import_react66.useMemo)(() => [{ dialogState: p7, close: P4, setTitleId: W2 }, S9], [p7, S9, P4, W2]), J4 = (0, import_react66.useMemo)(() => ({ open: p7 === 0 }), [p7]), Te3 = { ref: Q3, id: i7, role: "dialog", "aria-modal": p7 === 0 ? !0 : void 0, "aria-labelledby": S9.titleId, "aria-describedby": ue2 };
  return import_react66.default.createElement(M3, { type: "Dialog", enabled: p7 === 0, element: D6, onUpdate: o5((r9, c13) => {
    c13 === "Dialog" && u2(r9, { [s12.Add]: () => h10((d12) => d12 + 1), [s12.Remove]: () => h10((d12) => d12 - 1) });
  }) }, import_react66.default.createElement(P2, { force: !0 }, import_react66.default.createElement(pe, null, import_react66.default.createElement(I4.Provider, { value: ge3 }, import_react66.default.createElement(pe.Group, { target: D6 }, import_react66.default.createElement(P2, { force: !1 }, import_react66.default.createElement(fe2, { slot: J4, name: "Dialog.Description" }, import_react66.default.createElement(ge, { initialFocus: s15, containers: M7, features: L2 ? u2(re3, { parent: ge.features.RestoreFocus, leaf: ge.features.All & ~ge.features.FocusLock }) : ge.features.None }, import_react66.default.createElement(te3, null, X({ ourProps: Te3, theirProps: T7, slot: J4, defaultTag: He, features: Ge, visible: p7 === 0, name: "Dialog" }))))))))), import_react66.default.createElement(oe3, null));
}
var Ue = "div";
function We2(t18, e5) {
  let o11 = I(), { id: i7 = `headlessui-dialog-overlay-${o11}`, ...n7 } = t18, [{ dialogState: l13, close: s15 }] = b3("Dialog.Overlay"), g7 = y2(e5), T7 = o5((a13) => {
    if (a13.target === a13.currentTarget) {
      if (r3(a13.currentTarget))
        return a13.preventDefault();
      a13.preventDefault(), a13.stopPropagation(), s15();
    }
  }), m10 = (0, import_react66.useMemo)(() => ({ open: l13 === 0 }), [l13]);
  return X({ ourProps: { ref: g7, id: i7, "aria-hidden": !0, onClick: T7 }, theirProps: n7, slot: m10, defaultTag: Ue, name: "Dialog.Overlay" });
}
var Ye = "div";
function $e2(t18, e5) {
  let o11 = I(), { id: i7 = `headlessui-dialog-backdrop-${o11}`, ...n7 } = t18, [{ dialogState: l13 }, s15] = b3("Dialog.Backdrop"), g7 = y2(e5);
  (0, import_react66.useEffect)(() => {
    if (s15.panelRef.current === null)
      throw new Error("A <Dialog.Backdrop /> component is being used, but a <Dialog.Panel /> component is missing.");
  }, [s15.panelRef]);
  let T7 = (0, import_react66.useMemo)(() => ({ open: l13 === 0 }), [l13]);
  return import_react66.default.createElement(P2, { force: !0 }, import_react66.default.createElement(pe, null, X({ ourProps: { ref: g7, id: i7, "aria-hidden": !0 }, theirProps: n7, slot: T7, defaultTag: Ye, name: "Dialog.Backdrop" })));
}
var Je = "div";
function Xe(t18, e5) {
  let o11 = I(), { id: i7 = `headlessui-dialog-panel-${o11}`, ...n7 } = t18, [{ dialogState: l13 }, s15] = b3("Dialog.Panel"), g7 = y2(e5, s15.panelRef), T7 = (0, import_react66.useMemo)(() => ({ open: l13 === 0 }), [l13]), m10 = o5((a13) => {
    a13.stopPropagation();
  });
  return X({ ourProps: { ref: g7, id: i7, onClick: m10 }, theirProps: n7, slot: T7, defaultTag: Je, name: "Dialog.Panel" });
}
var je2 = "h2";
function Ke(t18, e5) {
  let o11 = I(), { id: i7 = `headlessui-dialog-title-${o11}`, ...n7 } = t18, [{ dialogState: l13, setTitleId: s15 }] = b3("Dialog.Title"), g7 = y2(e5);
  (0, import_react66.useEffect)(() => (s15(i7), () => s15(null)), [i7, s15]);
  let T7 = (0, import_react66.useMemo)(() => ({ open: l13 === 0 }), [l13]);
  return X({ ourProps: { ref: g7, id: i7 }, theirProps: n7, slot: T7, defaultTag: je2, name: "Dialog.Title" });
}
var Ve = D3(Ne), qe = D3($e2), ze2 = D3(Xe), Qe = D3(We2), Ze = D3(Ke), _t = Object.assign(Ve, { Backdrop: qe, Panel: ze2, Overlay: Qe, Title: Ze, Description: b2 });

// node_modules/@headlessui/react/dist/components/disclosure/disclosure.js
var import_react68 = __toESM(require_react(), 1);

// node_modules/@headlessui/react/dist/utils/start-transition.js
var import_react67 = __toESM(require_react(), 1), t17, a11 = (t17 = import_react67.default.startTransition) != null ? t17 : function(i7) {
  i7();
};

// node_modules/@headlessui/react/dist/components/disclosure/disclosure.js
var q = ((o11) => (o11[o11.Open = 0] = "Open", o11[o11.Closed = 1] = "Closed", o11))(q || {}), z2 = ((t18) => (t18[t18.ToggleDisclosure = 0] = "ToggleDisclosure", t18[t18.CloseDisclosure = 1] = "CloseDisclosure", t18[t18.SetButtonId = 2] = "SetButtonId", t18[t18.SetPanelId = 3] = "SetPanelId", t18[t18.LinkPanel = 4] = "LinkPanel", t18[t18.UnlinkPanel = 5] = "UnlinkPanel", t18))(z2 || {}), Q2 = { [0]: (e5) => ({ ...e5, disclosureState: u2(e5.disclosureState, { [0]: 1, [1]: 0 }) }), [1]: (e5) => e5.disclosureState === 1 ? e5 : { ...e5, disclosureState: 1 }, [4](e5) {
  return e5.linkedPanel === !0 ? e5 : { ...e5, linkedPanel: !0 };
}, [5](e5) {
  return e5.linkedPanel === !1 ? e5 : { ...e5, linkedPanel: !1 };
}, [2](e5, n7) {
  return e5.buttonId === n7.buttonId ? e5 : { ...e5, buttonId: n7.buttonId };
}, [3](e5, n7) {
  return e5.panelId === n7.panelId ? e5 : { ...e5, panelId: n7.panelId };
} }, k = (0, import_react68.createContext)(null);
k.displayName = "DisclosureContext";
function M4(e5) {
  let n7 = (0, import_react68.useContext)(k);
  if (n7 === null) {
    let o11 = new Error(`<${e5} /> is missing a parent <Disclosure /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(o11, M4), o11;
  }
  return n7;
}
var v2 = (0, import_react68.createContext)(null);
v2.displayName = "DisclosureAPIContext";
function w4(e5) {
  let n7 = (0, import_react68.useContext)(v2);
  if (n7 === null) {
    let o11 = new Error(`<${e5} /> is missing a parent <Disclosure /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(o11, w4), o11;
  }
  return n7;
}
var H4 = (0, import_react68.createContext)(null);
H4.displayName = "DisclosurePanelContext";
function V2() {
  return (0, import_react68.useContext)(H4);
}
function Y2(e5, n7) {
  return u2(n7.type, Q2, e5, n7);
}
var Z3 = import_react68.Fragment;
function ee2(e5, n7) {
  let { defaultOpen: o11 = !1, ...u10 } = e5, T7 = (0, import_react68.useRef)(null), l13 = y2(n7, T2((a13) => {
    T7.current = a13;
  }, e5.as === void 0 || e5.as === import_react68.Fragment)), t18 = (0, import_react68.useRef)(null), f10 = (0, import_react68.useRef)(null), s15 = (0, import_react68.useReducer)(Y2, { disclosureState: o11 ? 0 : 1, linkedPanel: !1, buttonRef: f10, panelRef: t18, buttonId: null, panelId: null }), [{ disclosureState: i7, buttonId: c13 }, D6] = s15, d12 = o5((a13) => {
    D6({ type: 1 });
    let r9 = e2(T7);
    if (!r9 || !c13)
      return;
    let p7 = (() => a13 ? a13 instanceof HTMLElement ? a13 : a13.current instanceof HTMLElement ? a13.current : r9.getElementById(c13) : r9.getElementById(c13))();
    p7 == null || p7.focus();
  }), P4 = (0, import_react68.useMemo)(() => ({ close: d12 }), [d12]), b6 = (0, import_react68.useMemo)(() => ({ open: i7 === 0, close: d12 }), [i7, d12]), y6 = { ref: l13 };
  return import_react68.default.createElement(k.Provider, { value: s15 }, import_react68.default.createElement(v2.Provider, { value: P4 }, import_react68.default.createElement(c6, { value: u2(i7, { [0]: d6.Open, [1]: d6.Closed }) }, X({ ourProps: y6, theirProps: u10, slot: b6, defaultTag: Z3, name: "Disclosure" }))));
}
var te2 = "button";
function ne(e5, n7) {
  let o11 = I(), { id: u10 = `headlessui-disclosure-button-${o11}`, ...T7 } = e5, [l13, t18] = M4("Disclosure.Button"), f10 = V2(), s15 = f10 === null ? !1 : f10 === l13.panelId, i7 = (0, import_react68.useRef)(null), c13 = y2(i7, n7, s15 ? null : l13.buttonRef);
  (0, import_react68.useEffect)(() => {
    if (!s15)
      return t18({ type: 2, buttonId: u10 }), () => {
        t18({ type: 2, buttonId: null });
      };
  }, [u10, t18, s15]);
  let D6 = o5((r9) => {
    var p7;
    if (s15) {
      if (l13.disclosureState === 1)
        return;
      switch (r9.key) {
        case o8.Space:
        case o8.Enter:
          r9.preventDefault(), r9.stopPropagation(), t18({ type: 0 }), (p7 = l13.buttonRef.current) == null || p7.focus();
          break;
      }
    } else
      switch (r9.key) {
        case o8.Space:
        case o8.Enter:
          r9.preventDefault(), r9.stopPropagation(), t18({ type: 0 });
          break;
      }
  }), d12 = o5((r9) => {
    switch (r9.key) {
      case o8.Space:
        r9.preventDefault();
        break;
    }
  }), P4 = o5((r9) => {
    var p7;
    r3(r9.currentTarget) || e5.disabled || (s15 ? (t18({ type: 0 }), (p7 = l13.buttonRef.current) == null || p7.focus()) : t18({ type: 0 }));
  }), b6 = (0, import_react68.useMemo)(() => ({ open: l13.disclosureState === 0 }), [l13]), y6 = s7(e5, i7), a13 = s15 ? { ref: c13, type: y6, onKeyDown: D6, onClick: P4 } : { ref: c13, id: u10, type: y6, "aria-expanded": l13.disclosureState === 0, "aria-controls": l13.linkedPanel ? l13.panelId : void 0, onKeyDown: D6, onKeyUp: d12, onClick: P4 };
  return X({ ourProps: a13, theirProps: T7, slot: b6, defaultTag: te2, name: "Disclosure.Button" });
}
var le2 = "div", oe = S2.RenderStrategy | S2.Static;
function re2(e5, n7) {
  let o11 = I(), { id: u10 = `headlessui-disclosure-panel-${o11}`, ...T7 } = e5, [l13, t18] = M4("Disclosure.Panel"), { close: f10 } = w4("Disclosure.Panel"), s15 = y2(n7, l13.panelRef, (P4) => {
    a11(() => t18({ type: P4 ? 4 : 5 }));
  });
  (0, import_react68.useEffect)(() => (t18({ type: 3, panelId: u10 }), () => {
    t18({ type: 3, panelId: null });
  }), [u10, t18]);
  let i7 = C2(), c13 = (() => i7 !== null ? (i7 & d6.Open) === d6.Open : l13.disclosureState === 0)(), D6 = (0, import_react68.useMemo)(() => ({ open: l13.disclosureState === 0, close: f10 }), [l13, f10]), d12 = { ref: s15, id: u10 };
  return import_react68.default.createElement(H4.Provider, { value: l13.panelId }, X({ ourProps: d12, theirProps: T7, slot: D6, defaultTag: le2, features: oe, visible: c13, name: "Disclosure.Panel" }));
}
var se2 = D3(ee2), ue = D3(ne), ie2 = D3(re2), ve2 = Object.assign(se2, { Button: ue, Panel: ie2 });

// node_modules/@headlessui/react/dist/hooks/use-text-value.js
var import_react69 = __toESM(require_react(), 1);

// node_modules/@headlessui/react/dist/utils/get-text-value.js
var a12 = /([\u2700-\u27BF]|[\uE000-\uF8FF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDFFF]|[\u2011-\u26FF]|\uD83E[\uDD10-\uDDFF])/g;
function o10(e5) {
  var r9, i7;
  let n7 = (r9 = e5.innerText) != null ? r9 : "", t18 = e5.cloneNode(!0);
  if (!(t18 instanceof HTMLElement))
    return n7;
  let u10 = !1;
  for (let f10 of t18.querySelectorAll('[hidden],[aria-hidden],[role="img"]'))
    f10.remove(), u10 = !0;
  let l13 = u10 ? (i7 = t18.innerText) != null ? i7 : "" : n7;
  return a12.test(l13) && (l13 = l13.replace(a12, "")), l13;
}
function g5(e5) {
  let n7 = e5.getAttribute("aria-label");
  if (typeof n7 == "string")
    return n7.trim();
  let t18 = e5.getAttribute("aria-labelledby");
  if (t18) {
    let u10 = t18.split(" ").map((l13) => {
      let r9 = document.getElementById(l13);
      if (r9) {
        let i7 = r9.getAttribute("aria-label");
        return typeof i7 == "string" ? i7.trim() : o10(r9).trim();
      }
      return null;
    }).filter(Boolean);
    if (u10.length > 0)
      return u10.join(", ");
  }
  return o10(e5).trim();
}

// node_modules/@headlessui/react/dist/hooks/use-text-value.js
function b4(c13) {
  let t18 = (0, import_react69.useRef)(""), r9 = (0, import_react69.useRef)("");
  return o5(() => {
    let e5 = c13.current;
    if (!e5)
      return "";
    let u10 = e5.innerText;
    if (t18.current === u10)
      return r9.current;
    let n7 = g5(e5).trim().toLowerCase();
    return t18.current = u10, r9.current = n7, n7;
  });
}

// node_modules/@headlessui/react/dist/components/menu/menu.js
var import_react70 = __toESM(require_react(), 1);
var me2 = ((r9) => (r9[r9.Open = 0] = "Open", r9[r9.Closed = 1] = "Closed", r9))(me2 || {}), de2 = ((r9) => (r9[r9.Pointer = 0] = "Pointer", r9[r9.Other = 1] = "Other", r9))(de2 || {}), fe = ((a13) => (a13[a13.OpenMenu = 0] = "OpenMenu", a13[a13.CloseMenu = 1] = "CloseMenu", a13[a13.GoToItem = 2] = "GoToItem", a13[a13.Search = 3] = "Search", a13[a13.ClearSearch = 4] = "ClearSearch", a13[a13.RegisterItem = 5] = "RegisterItem", a13[a13.UnregisterItem = 6] = "UnregisterItem", a13))(fe || {});
function w5(e5, u10 = (r9) => r9) {
  let r9 = e5.activeItemIndex !== null ? e5.items[e5.activeItemIndex] : null, i7 = I2(u10(e5.items.slice()), (t18) => t18.dataRef.current.domRef.current), s15 = r9 ? i7.indexOf(r9) : null;
  return s15 === -1 && (s15 = null), { items: i7, activeItemIndex: s15 };
}
var Te2 = { [1](e5) {
  return e5.menuState === 1 ? e5 : { ...e5, activeItemIndex: null, menuState: 1 };
}, [0](e5) {
  return e5.menuState === 0 ? e5 : { ...e5, __demoMode: !1, menuState: 0 };
}, [2]: (e5, u10) => {
  var s15;
  let r9 = w5(e5), i7 = x(u10, { resolveItems: () => r9.items, resolveActiveIndex: () => r9.activeItemIndex, resolveId: (t18) => t18.id, resolveDisabled: (t18) => t18.dataRef.current.disabled });
  return { ...e5, ...r9, searchQuery: "", activeItemIndex: i7, activationTrigger: (s15 = u10.trigger) != null ? s15 : 1 };
}, [3]: (e5, u10) => {
  let i7 = e5.searchQuery !== "" ? 0 : 1, s15 = e5.searchQuery + u10.value.toLowerCase(), o11 = (e5.activeItemIndex !== null ? e5.items.slice(e5.activeItemIndex + i7).concat(e5.items.slice(0, e5.activeItemIndex + i7)) : e5.items).find((l13) => {
    var m10;
    return ((m10 = l13.dataRef.current.textValue) == null ? void 0 : m10.startsWith(s15)) && !l13.dataRef.current.disabled;
  }), a13 = o11 ? e5.items.indexOf(o11) : -1;
  return a13 === -1 || a13 === e5.activeItemIndex ? { ...e5, searchQuery: s15 } : { ...e5, searchQuery: s15, activeItemIndex: a13, activationTrigger: 1 };
}, [4](e5) {
  return e5.searchQuery === "" ? e5 : { ...e5, searchQuery: "", searchActiveItemIndex: null };
}, [5]: (e5, u10) => {
  let r9 = w5(e5, (i7) => [...i7, { id: u10.id, dataRef: u10.dataRef }]);
  return { ...e5, ...r9 };
}, [6]: (e5, u10) => {
  let r9 = w5(e5, (i7) => {
    let s15 = i7.findIndex((t18) => t18.id === u10.id);
    return s15 !== -1 && i7.splice(s15, 1), i7;
  });
  return { ...e5, ...r9, activationTrigger: 1 };
} }, U2 = (0, import_react70.createContext)(null);
U2.displayName = "MenuContext";
function O3(e5) {
  let u10 = (0, import_react70.useContext)(U2);
  if (u10 === null) {
    let r9 = new Error(`<${e5} /> is missing a parent <Menu /> component.`);
    throw Error.captureStackTrace && Error.captureStackTrace(r9, O3), r9;
  }
  return u10;
}
function ye3(e5, u10) {
  return u2(u10.type, Te2, e5, u10);
}
var Ie2 = import_react70.Fragment;
function Me2(e5, u10) {
  let { __demoMode: r9 = !1, ...i7 } = e5, s15 = (0, import_react70.useReducer)(ye3, { __demoMode: r9, menuState: r9 ? 0 : 1, buttonRef: (0, import_react70.createRef)(), itemsRef: (0, import_react70.createRef)(), items: [], searchQuery: "", activeItemIndex: null, activationTrigger: 1 }), [{ menuState: t18, itemsRef: o11, buttonRef: a13 }, l13] = s15, m10 = y2(u10);
  h3([a13, o11], (g7, R3) => {
    var p7;
    l13({ type: 1 }), h2(R3, T.Loose) || (g7.preventDefault(), (p7 = a13.current) == null || p7.focus());
  }, t18 === 0);
  let I6 = o5(() => {
    l13({ type: 1 });
  }), A2 = (0, import_react70.useMemo)(() => ({ open: t18 === 0, close: I6 }), [t18, I6]), f10 = { ref: m10 };
  return import_react70.default.createElement(U2.Provider, { value: s15 }, import_react70.default.createElement(c6, { value: u2(t18, { [0]: d6.Open, [1]: d6.Closed }) }, X({ ourProps: f10, theirProps: i7, slot: A2, defaultTag: Ie2, name: "Menu" })));
}
var ge2 = "button";
function Re2(e5, u10) {
  var R3;
  let r9 = I(), { id: i7 = `headlessui-menu-button-${r9}`, ...s15 } = e5, [t18, o11] = O3("Menu.Button"), a13 = y2(t18.buttonRef, u10), l13 = p2(), m10 = o5((p7) => {
    switch (p7.key) {
      case o8.Space:
      case o8.Enter:
      case o8.ArrowDown:
        p7.preventDefault(), p7.stopPropagation(), o11({ type: 0 }), l13.nextFrame(() => o11({ type: 2, focus: a3.First }));
        break;
      case o8.ArrowUp:
        p7.preventDefault(), p7.stopPropagation(), o11({ type: 0 }), l13.nextFrame(() => o11({ type: 2, focus: a3.Last }));
        break;
    }
  }), I6 = o5((p7) => {
    switch (p7.key) {
      case o8.Space:
        p7.preventDefault();
        break;
    }
  }), A2 = o5((p7) => {
    if (r3(p7.currentTarget))
      return p7.preventDefault();
    e5.disabled || (t18.menuState === 0 ? (o11({ type: 1 }), l13.nextFrame(() => {
      var M7;
      return (M7 = t18.buttonRef.current) == null ? void 0 : M7.focus({ preventScroll: !0 });
    })) : (p7.preventDefault(), o11({ type: 0 })));
  }), f10 = (0, import_react70.useMemo)(() => ({ open: t18.menuState === 0 }), [t18]), g7 = { ref: a13, id: i7, type: s7(e5, t18.buttonRef), "aria-haspopup": "menu", "aria-controls": (R3 = t18.itemsRef.current) == null ? void 0 : R3.id, "aria-expanded": t18.menuState === 0, onKeyDown: m10, onKeyUp: I6, onClick: A2 };
  return X({ ourProps: g7, theirProps: s15, slot: f10, defaultTag: ge2, name: "Menu.Button" });
}
var Ae2 = "div", be = S2.RenderStrategy | S2.Static;
function Ee(e5, u10) {
  var M7, b6;
  let r9 = I(), { id: i7 = `headlessui-menu-items-${r9}`, ...s15 } = e5, [t18, o11] = O3("Menu.Items"), a13 = y2(t18.itemsRef, u10), l13 = n3(t18.itemsRef), m10 = p2(), I6 = C2(), A2 = (() => I6 !== null ? (I6 & d6.Open) === d6.Open : t18.menuState === 0)();
  (0, import_react70.useEffect)(() => {
    let n7 = t18.itemsRef.current;
    n7 && t18.menuState === 0 && n7 !== (l13 == null ? void 0 : l13.activeElement) && n7.focus({ preventScroll: !0 });
  }, [t18.menuState, t18.itemsRef, l13]), F2({ container: t18.itemsRef.current, enabled: t18.menuState === 0, accept(n7) {
    return n7.getAttribute("role") === "menuitem" ? NodeFilter.FILTER_REJECT : n7.hasAttribute("role") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;
  }, walk(n7) {
    n7.setAttribute("role", "none");
  } });
  let f10 = o5((n7) => {
    var E9, P4;
    switch (m10.dispose(), n7.key) {
      case o8.Space:
        if (t18.searchQuery !== "")
          return n7.preventDefault(), n7.stopPropagation(), o11({ type: 3, value: n7.key });
      case o8.Enter:
        if (n7.preventDefault(), n7.stopPropagation(), o11({ type: 1 }), t18.activeItemIndex !== null) {
          let { dataRef: S9 } = t18.items[t18.activeItemIndex];
          (P4 = (E9 = S9.current) == null ? void 0 : E9.domRef.current) == null || P4.click();
        }
        D2(t18.buttonRef.current);
        break;
      case o8.ArrowDown:
        return n7.preventDefault(), n7.stopPropagation(), o11({ type: 2, focus: a3.Next });
      case o8.ArrowUp:
        return n7.preventDefault(), n7.stopPropagation(), o11({ type: 2, focus: a3.Previous });
      case o8.Home:
      case o8.PageUp:
        return n7.preventDefault(), n7.stopPropagation(), o11({ type: 2, focus: a3.First });
      case o8.End:
      case o8.PageDown:
        return n7.preventDefault(), n7.stopPropagation(), o11({ type: 2, focus: a3.Last });
      case o8.Escape:
        n7.preventDefault(), n7.stopPropagation(), o11({ type: 1 }), o3().nextFrame(() => {
          var S9;
          return (S9 = t18.buttonRef.current) == null ? void 0 : S9.focus({ preventScroll: !0 });
        });
        break;
      case o8.Tab:
        n7.preventDefault(), n7.stopPropagation(), o11({ type: 1 }), o3().nextFrame(() => {
          _(t18.buttonRef.current, n7.shiftKey ? M.Previous : M.Next);
        });
        break;
      default:
        n7.key.length === 1 && (o11({ type: 3, value: n7.key }), m10.setTimeout(() => o11({ type: 4 }), 350));
        break;
    }
  }), g7 = o5((n7) => {
    switch (n7.key) {
      case o8.Space:
        n7.preventDefault();
        break;
    }
  }), R3 = (0, import_react70.useMemo)(() => ({ open: t18.menuState === 0 }), [t18]), p7 = { "aria-activedescendant": t18.activeItemIndex === null || (M7 = t18.items[t18.activeItemIndex]) == null ? void 0 : M7.id, "aria-labelledby": (b6 = t18.buttonRef.current) == null ? void 0 : b6.id, id: i7, onKeyDown: f10, onKeyUp: g7, role: "menu", tabIndex: 0, ref: a13 };
  return X({ ourProps: p7, theirProps: s15, slot: R3, defaultTag: Ae2, features: be, visible: A2, name: "Menu.Items" });
}
var Se = import_react70.Fragment;
function Pe3(e5, u10) {
  let r9 = I(), { id: i7 = `headlessui-menu-item-${r9}`, disabled: s15 = !1, ...t18 } = e5, [o11, a13] = O3("Menu.Item"), l13 = o11.activeItemIndex !== null ? o11.items[o11.activeItemIndex].id === i7 : !1, m10 = (0, import_react70.useRef)(null), I6 = y2(u10, m10);
  l3(() => {
    if (o11.__demoMode || o11.menuState !== 0 || !l13 || o11.activationTrigger === 0)
      return;
    let T7 = o3();
    return T7.requestAnimationFrame(() => {
      var v4, B2;
      (B2 = (v4 = m10.current) == null ? void 0 : v4.scrollIntoView) == null || B2.call(v4, { block: "nearest" });
    }), T7.dispose;
  }, [o11.__demoMode, m10, l13, o11.menuState, o11.activationTrigger, o11.activeItemIndex]);
  let A2 = b4(m10), f10 = (0, import_react70.useRef)({ disabled: s15, domRef: m10, get textValue() {
    return A2();
  } });
  l3(() => {
    f10.current.disabled = s15;
  }, [f10, s15]), l3(() => (a13({ type: 5, id: i7, dataRef: f10 }), () => a13({ type: 6, id: i7 })), [f10, i7]);
  let g7 = o5(() => {
    a13({ type: 1 });
  }), R3 = o5((T7) => {
    if (s15)
      return T7.preventDefault();
    a13({ type: 1 }), D2(o11.buttonRef.current);
  }), p7 = o5(() => {
    if (s15)
      return a13({ type: 2, focus: a3.Nothing });
    a13({ type: 2, focus: a3.Specific, id: i7 });
  }), M7 = u4(), b6 = o5((T7) => M7.update(T7)), n7 = o5((T7) => {
    M7.wasMoved(T7) && (s15 || l13 || a13({ type: 2, focus: a3.Specific, id: i7, trigger: 0 }));
  }), E9 = o5((T7) => {
    M7.wasMoved(T7) && (s15 || l13 && a13({ type: 2, focus: a3.Nothing }));
  }), P4 = (0, import_react70.useMemo)(() => ({ active: l13, disabled: s15, close: g7 }), [l13, s15, g7]);
  return X({ ourProps: { id: i7, ref: I6, role: "menuitem", tabIndex: s15 === !0 ? void 0 : -1, "aria-disabled": s15 === !0 ? !0 : void 0, disabled: void 0, onClick: R3, onFocus: p7, onPointerEnter: b6, onMouseEnter: b6, onPointerMove: n7, onMouseMove: n7, onPointerLeave: E9, onMouseLeave: E9 }, theirProps: t18, slot: P4, defaultTag: Se, name: "Menu.Item" });
}
var ve3 = D3(Me2), xe2 = D3(Re2), he2 = D3(Ee), De3 = D3(Pe3), it = Object.assign(ve3, { Button: xe2, Items: he2, Item: De3 });

// node_modules/@headlessui/react/dist/hooks/use-flags.js
var import_react71 = __toESM(require_react(), 1);
function c12(a13 = 0) {
  let [l13, r9] = (0, import_react71.useState)(a13), t18 = f5(), o11 = (0, import_react71.useCallback)((e5) => {
    t18.current && r9((u10) => u10 | e5);
  }, [l13, t18]), m10 = (0, import_react71.useCallback)((e5) => Boolean(l13 & e5), [l13]), s15 = (0, import_react71.useCallback)((e5) => {
    t18.current && r9((u10) => u10 & ~e5);
  }, [r9, t18]), g7 = (0, import_react71.useCallback)((e5) => {
    t18.current && r9((u10) => u10 ^ e5);
  }, [r9]);
  return { flags: l13, addFlag: o11, hasFlag: m10, removeFlag: s15, toggleFlag: g7 };
}

// node_modules/@headlessui/react/dist/components/transitions/transition.js
var import_react72 = __toESM(require_react(), 1);

// node_modules/@headlessui/react/dist/utils/once.js
function l12(r9) {
  let e5 = { called: !1 };
  return (...t18) => {
    if (!e5.called)
      return e5.called = !0, r9(...t18);
  };
}

// node_modules/@headlessui/react/dist/components/transitions/utils/transition.js
function g6(t18, ...e5) {
  t18 && e5.length > 0 && t18.classList.add(...e5);
}
function v3(t18, ...e5) {
  t18 && e5.length > 0 && t18.classList.remove(...e5);
}
function b5(t18, e5) {
  let n7 = o3();
  if (!t18)
    return n7.dispose;
  let { transitionDuration: m10, transitionDelay: a13 } = getComputedStyle(t18), [u10, p7] = [m10, a13].map((l13) => {
    let [r9 = 0] = l13.split(",").filter(Boolean).map((i7) => i7.includes("ms") ? parseFloat(i7) : parseFloat(i7) * 1e3).sort((i7, T7) => T7 - i7);
    return r9;
  }), o11 = u10 + p7;
  if (o11 !== 0) {
    n7.group((r9) => {
      r9.setTimeout(() => {
        e5(), r9.dispose();
      }, o11), r9.addEventListener(t18, "transitionrun", (i7) => {
        i7.target === i7.currentTarget && r9.dispose();
      });
    });
    let l13 = n7.addEventListener(t18, "transitionend", (r9) => {
      r9.target === r9.currentTarget && (e5(), l13());
    });
  } else
    e5();
  return n7.add(() => e5()), n7.dispose;
}
function M5(t18, e5, n7, m10) {
  let a13 = n7 ? "enter" : "leave", u10 = o3(), p7 = m10 !== void 0 ? l12(m10) : () => {
  };
  a13 === "enter" && (t18.removeAttribute("hidden"), t18.style.display = "");
  let o11 = u2(a13, { enter: () => e5.enter, leave: () => e5.leave }), l13 = u2(a13, { enter: () => e5.enterTo, leave: () => e5.leaveTo }), r9 = u2(a13, { enter: () => e5.enterFrom, leave: () => e5.leaveFrom });
  return v3(t18, ...e5.base, ...e5.enter, ...e5.enterTo, ...e5.enterFrom, ...e5.leave, ...e5.leaveFrom, ...e5.leaveTo, ...e5.entered), g6(t18, ...e5.base, ...o11, ...r9), u10.nextFrame(() => {
    v3(t18, ...e5.base, ...o11, ...r9), g6(t18, ...e5.base, ...o11, ...l13), b5(t18, () => (v3(t18, ...e5.base, ...o11), g6(t18, ...e5.base, ...e5.entered), p7()));
  }), u10.dispose;
}

// node_modules/@headlessui/react/dist/hooks/use-transition.js
function E8({ immediate: t18, container: s15, direction: n7, classes: u10, onStart: a13, onStop: c13 }) {
  let l13 = f5(), d12 = p2(), e5 = s3(n7);
  l3(() => {
    t18 && (e5.current = "enter");
  }, [t18]), l3(() => {
    let r9 = o3();
    d12.add(r9.dispose);
    let i7 = s15.current;
    if (i7 && e5.current !== "idle" && l13.current)
      return r9.dispose(), a13.current(e5.current), r9.add(M5(i7, u10.current, e5.current === "enter", () => {
        r9.dispose(), c13.current(e5.current);
      })), r9.dispose;
  }, [n7]);
}

// node_modules/@headlessui/react/dist/components/transitions/transition.js
function S8(t18 = "") {
  return t18.split(" ").filter((n7) => n7.trim().length > 1);
}
var _2 = (0, import_react72.createContext)(null);
_2.displayName = "TransitionContext";
var be2 = ((r9) => (r9.Visible = "visible", r9.Hidden = "hidden", r9))(be2 || {});
function Se2() {
  let t18 = (0, import_react72.useContext)(_2);
  if (t18 === null)
    throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
  return t18;
}
function Ne2() {
  let t18 = (0, import_react72.useContext)(M6);
  if (t18 === null)
    throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
  return t18;
}
var M6 = (0, import_react72.createContext)(null);
M6.displayName = "NestingContext";
function U3(t18) {
  return "children" in t18 ? U3(t18.children) : t18.current.filter(({ el: n7 }) => n7.current !== null).filter(({ state: n7 }) => n7 === "visible").length > 0;
}
function oe2(t18, n7) {
  let r9 = s3(t18), s15 = (0, import_react72.useRef)([]), y6 = f5(), D6 = p2(), c13 = o5((i7, e5 = j.Hidden) => {
    let a13 = s15.current.findIndex(({ el: o11 }) => o11 === i7);
    a13 !== -1 && (u2(e5, { [j.Unmount]() {
      s15.current.splice(a13, 1);
    }, [j.Hidden]() {
      s15.current[a13].state = "hidden";
    } }), D6.microTask(() => {
      var o11;
      !U3(s15) && y6.current && ((o11 = r9.current) == null || o11.call(r9));
    }));
  }), x5 = o5((i7) => {
    let e5 = s15.current.find(({ el: a13 }) => a13 === i7);
    return e5 ? e5.state !== "visible" && (e5.state = "visible") : s15.current.push({ el: i7, state: "visible" }), () => c13(i7, j.Unmount);
  }), p7 = (0, import_react72.useRef)([]), h10 = (0, import_react72.useRef)(Promise.resolve()), u10 = (0, import_react72.useRef)({ enter: [], leave: [], idle: [] }), v4 = o5((i7, e5, a13) => {
    p7.current.splice(0), n7 && (n7.chains.current[e5] = n7.chains.current[e5].filter(([o11]) => o11 !== i7)), n7 == null || n7.chains.current[e5].push([i7, new Promise((o11) => {
      p7.current.push(o11);
    })]), n7 == null || n7.chains.current[e5].push([i7, new Promise((o11) => {
      Promise.all(u10.current[e5].map(([f10, P4]) => P4)).then(() => o11());
    })]), e5 === "enter" ? h10.current = h10.current.then(() => n7 == null ? void 0 : n7.wait.current).then(() => a13(e5)) : a13(e5);
  }), d12 = o5((i7, e5, a13) => {
    Promise.all(u10.current[e5].splice(0).map(([o11, f10]) => f10)).then(() => {
      var o11;
      (o11 = p7.current.shift()) == null || o11();
    }).then(() => a13(e5));
  });
  return (0, import_react72.useMemo)(() => ({ children: s15, register: x5, unregister: c13, onStart: v4, onStop: d12, wait: h10, chains: u10 }), [x5, c13, s15, v4, d12, u10, h10]);
}
function xe3() {
}
var Pe4 = ["beforeEnter", "afterEnter", "beforeLeave", "afterLeave"];
function se3(t18) {
  var r9;
  let n7 = {};
  for (let s15 of Pe4)
    n7[s15] = (r9 = t18[s15]) != null ? r9 : xe3;
  return n7;
}
function Re3(t18) {
  let n7 = (0, import_react72.useRef)(se3(t18));
  return (0, import_react72.useEffect)(() => {
    n7.current = se3(t18);
  }, [t18]), n7;
}
var ye4 = "div", ae3 = S2.RenderStrategy;
function De4(t18, n7) {
  var K3, Q3;
  let { beforeEnter: r9, afterEnter: s15, beforeLeave: y6, afterLeave: D6, enter: c13, enterFrom: x5, enterTo: p7, entered: h10, leave: u10, leaveFrom: v4, leaveTo: d12, ...i7 } = t18, e5 = (0, import_react72.useRef)(null), a13 = y2(e5, n7), o11 = (K3 = i7.unmount) == null || K3 ? j.Unmount : j.Hidden, { show: f10, appear: P4, initial: T7 } = Se2(), [l13, j5] = (0, import_react72.useState)(f10 ? "visible" : "hidden"), q3 = Ne2(), { register: O4, unregister: V3 } = q3;
  (0, import_react72.useEffect)(() => O4(e5), [O4, e5]), (0, import_react72.useEffect)(() => {
    if (o11 === j.Hidden && e5.current) {
      if (f10 && l13 !== "visible") {
        j5("visible");
        return;
      }
      return u2(l13, { hidden: () => V3(e5), visible: () => O4(e5) });
    }
  }, [l13, e5, O4, V3, f10, o11]);
  let k2 = s3({ base: S8(i7.className), enter: S8(c13), enterFrom: S8(x5), enterTo: S8(p7), entered: S8(h10), leave: S8(u10), leaveFrom: S8(v4), leaveTo: S8(d12) }), w6 = Re3({ beforeEnter: r9, afterEnter: s15, beforeLeave: y6, afterLeave: D6 }), G2 = l4();
  (0, import_react72.useEffect)(() => {
    if (G2 && l13 === "visible" && e5.current === null)
      throw new Error("Did you forget to passthrough the `ref` to the actual DOM node?");
  }, [e5, l13, G2]);
  let ue2 = T7 && !P4, z4 = P4 && f10 && T7, Te3 = (() => !G2 || ue2 ? "idle" : f10 ? "enter" : "leave")(), H6 = c12(0), de3 = o5((g7) => u2(g7, { enter: () => {
    H6.addFlag(d6.Opening), w6.current.beforeEnter();
  }, leave: () => {
    H6.addFlag(d6.Closing), w6.current.beforeLeave();
  }, idle: () => {
  } })), fe2 = o5((g7) => u2(g7, { enter: () => {
    H6.removeFlag(d6.Opening), w6.current.afterEnter();
  }, leave: () => {
    H6.removeFlag(d6.Closing), w6.current.afterLeave();
  }, idle: () => {
  } })), A2 = oe2(() => {
    j5("hidden"), V3(e5);
  }, q3);
  E8({ immediate: z4, container: e5, classes: k2, direction: Te3, onStart: s3((g7) => {
    A2.onStart(e5, g7, de3);
  }), onStop: s3((g7) => {
    A2.onStop(e5, g7, fe2), g7 === "leave" && !U3(A2) && (j5("hidden"), V3(e5));
  }) });
  let R3 = i7, me3 = { ref: a13 };
  return z4 ? R3 = { ...R3, className: t7(i7.className, ...k2.current.enter, ...k2.current.enterFrom) } : (R3.className = t7(i7.className, (Q3 = e5.current) == null ? void 0 : Q3.className), R3.className === "" && delete R3.className), import_react72.default.createElement(M6.Provider, { value: A2 }, import_react72.default.createElement(c6, { value: u2(l13, { visible: d6.Open, hidden: d6.Closed }) | H6.flags }, X({ ourProps: me3, theirProps: R3, defaultTag: ye4, features: ae3, visible: l13 === "visible", name: "Transition.Child" })));
}
function He2(t18, n7) {
  let { show: r9, appear: s15 = !1, unmount: y6 = !0, ...D6 } = t18, c13 = (0, import_react72.useRef)(null), x5 = y2(c13, n7);
  l4();
  let p7 = C2();
  if (r9 === void 0 && p7 !== null && (r9 = (p7 & d6.Open) === d6.Open), ![!0, !1].includes(r9))
    throw new Error("A <Transition /> is used but it is missing a `show={true | false}` prop.");
  let [h10, u10] = (0, import_react72.useState)(r9 ? "visible" : "hidden"), v4 = oe2(() => {
    u10("hidden");
  }), [d12, i7] = (0, import_react72.useState)(!0), e5 = (0, import_react72.useRef)([r9]);
  l3(() => {
    d12 !== !1 && e5.current[e5.current.length - 1] !== r9 && (e5.current.push(r9), i7(!1));
  }, [e5, r9]);
  let a13 = (0, import_react72.useMemo)(() => ({ show: r9, appear: s15, initial: d12 }), [r9, s15, d12]);
  (0, import_react72.useEffect)(() => {
    if (r9)
      u10("visible");
    else if (!U3(v4))
      u10("hidden");
    else {
      let T7 = c13.current;
      if (!T7)
        return;
      let l13 = T7.getBoundingClientRect();
      l13.x === 0 && l13.y === 0 && l13.width === 0 && l13.height === 0 && u10("hidden");
    }
  }, [r9, v4]);
  let o11 = { unmount: y6 }, f10 = o5(() => {
    var T7;
    d12 && i7(!1), (T7 = t18.beforeEnter) == null || T7.call(t18);
  }), P4 = o5(() => {
    var T7;
    d12 && i7(!1), (T7 = t18.beforeLeave) == null || T7.call(t18);
  });
  return import_react72.default.createElement(M6.Provider, { value: v4 }, import_react72.default.createElement(_2.Provider, { value: a13 }, X({ ourProps: { ...o11, as: import_react72.Fragment, children: import_react72.default.createElement(le3, { ref: x5, ...o11, ...D6, beforeEnter: f10, beforeLeave: P4 }) }, theirProps: {}, defaultTag: import_react72.Fragment, features: ae3, visible: h10 === "visible", name: "Transition" })));
}
function Fe2(t18, n7) {
  let r9 = (0, import_react72.useContext)(_2) !== null, s15 = C2() !== null;
  return import_react72.default.createElement(import_react72.default.Fragment, null, !r9 && s15 ? import_react72.default.createElement(W, { ref: n7, ...t18 }) : import_react72.default.createElement(le3, { ref: n7, ...t18 }));
}
var W = D3(He2), le3 = D3(De4), Le2 = D3(Fe2), tt = Object.assign(W, { Child: Le2, Root: W });

// node_modules/@heroicons/react/20/solid/esm/ChevronDownIcon.js
var React19 = __toESM(require_react(), 1);
function ChevronDownIcon({
  title,
  titleId,
  ...props
}, svgRef) {
  return /* @__PURE__ */ React19.createElement("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 20 20",
    fill: "currentColor",
    "aria-hidden": "true",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /* @__PURE__ */ React19.createElement("title", {
    id: titleId
  }, title) : null, /* @__PURE__ */ React19.createElement("path", {
    fillRule: "evenodd",
    d: "M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z",
    clipRule: "evenodd"
  }));
}
var ForwardRef5 = React19.forwardRef(ChevronDownIcon), ChevronDownIcon_default = ForwardRef5;

// node_modules/@heroicons/react/20/solid/esm/FunnelIcon.js
var React20 = __toESM(require_react(), 1);
function FunnelIcon({
  title,
  titleId,
  ...props
}, svgRef) {
  return /* @__PURE__ */ React20.createElement("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 20 20",
    fill: "currentColor",
    "aria-hidden": "true",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /* @__PURE__ */ React20.createElement("title", {
    id: titleId
  }, title) : null, /* @__PURE__ */ React20.createElement("path", {
    fillRule: "evenodd",
    d: "M2.628 1.601C5.028 1.206 7.49 1 10 1s4.973.206 7.372.601a.75.75 0 01.628.74v2.288a2.25 2.25 0 01-.659 1.59l-4.682 4.683a2.25 2.25 0 00-.659 1.59v3.037c0 .684-.31 1.33-.844 1.757l-1.937 1.55A.75.75 0 018 18.25v-5.757a2.25 2.25 0 00-.659-1.591L2.659 6.22A2.25 2.25 0 012 4.629V2.34a.75.75 0 01.628-.74z",
    clipRule: "evenodd"
  }));
}
var ForwardRef6 = React20.forwardRef(FunnelIcon), FunnelIcon_default = ForwardRef6;

// node_modules/@heroicons/react/20/solid/esm/MinusIcon.js
var React21 = __toESM(require_react(), 1);
function MinusIcon({
  title,
  titleId,
  ...props
}, svgRef) {
  return /* @__PURE__ */ React21.createElement("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 20 20",
    fill: "currentColor",
    "aria-hidden": "true",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /* @__PURE__ */ React21.createElement("title", {
    id: titleId
  }, title) : null, /* @__PURE__ */ React21.createElement("path", {
    fillRule: "evenodd",
    d: "M4 10a.75.75 0 01.75-.75h10.5a.75.75 0 010 1.5H4.75A.75.75 0 014 10z",
    clipRule: "evenodd"
  }));
}
var ForwardRef7 = React21.forwardRef(MinusIcon), MinusIcon_default = ForwardRef7;

// node_modules/@heroicons/react/20/solid/esm/PlusIcon.js
var React22 = __toESM(require_react(), 1);
function PlusIcon({
  title,
  titleId,
  ...props
}, svgRef) {
  return /* @__PURE__ */ React22.createElement("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 20 20",
    fill: "currentColor",
    "aria-hidden": "true",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /* @__PURE__ */ React22.createElement("title", {
    id: titleId
  }, title) : null, /* @__PURE__ */ React22.createElement("path", {
    d: "M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z"
  }));
}
var ForwardRef8 = React22.forwardRef(PlusIcon), PlusIcon_default = ForwardRef8;

// node_modules/@heroicons/react/20/solid/esm/Squares2X2Icon.js
var React23 = __toESM(require_react(), 1);
function Squares2X2Icon({
  title,
  titleId,
  ...props
}, svgRef) {
  return /* @__PURE__ */ React23.createElement("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 20 20",
    fill: "currentColor",
    "aria-hidden": "true",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /* @__PURE__ */ React23.createElement("title", {
    id: titleId
  }, title) : null, /* @__PURE__ */ React23.createElement("path", {
    fillRule: "evenodd",
    d: "M4.25 2A2.25 2.25 0 002 4.25v2.5A2.25 2.25 0 004.25 9h2.5A2.25 2.25 0 009 6.75v-2.5A2.25 2.25 0 006.75 2h-2.5zm0 9A2.25 2.25 0 002 13.25v2.5A2.25 2.25 0 004.25 18h2.5A2.25 2.25 0 009 15.75v-2.5A2.25 2.25 0 006.75 11h-2.5zm9-9A2.25 2.25 0 0011 4.25v2.5A2.25 2.25 0 0013.25 9h2.5A2.25 2.25 0 0018 6.75v-2.5A2.25 2.25 0 0015.75 2h-2.5zm0 9A2.25 2.25 0 0011 13.25v2.5A2.25 2.25 0 0013.25 18h2.5A2.25 2.25 0 0018 15.75v-2.5A2.25 2.25 0 0015.75 11h-2.5z",
    clipRule: "evenodd"
  }));
}
var ForwardRef9 = React23.forwardRef(Squares2X2Icon), Squares2X2Icon_default = ForwardRef9;

// app/components/CollectionCarousel.jsx
var import_react_responsive6 = __toESM(require_react_responsive()), import_react_slick3 = __toESM(require_lib()), import_jsx_dev_runtime21 = __toESM(require_jsx_dev_runtime()), CollectionCarousel = ({ collection, handle, sortArr, all_collections }) => {
  let noImg = "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/No-image-found.jpg?v=1708942129";
  var filtered = sortArr.filter((col) => col.length != 0);
  let collectionsToShow = filtered;
  var len = collectionsToShow == null ? void 0 : collectionsToShow.length;
  console.log("collectionsToShow::", collectionsToShow.length);
  let isLargeScreen = (0, import_react_responsive6.useMediaQuery)({ minWidth: 1024 });
  function PrevArrow(props) {
    let { onClick } = props;
    return /* @__PURE__ */ (0, import_jsx_dev_runtime21.jsxDEV)(
      "button",
      {
        className: "absolute top-1/2 z-10 transform -translate-y-1/2  bg-opacity-75 rounded-full p-2 ml-4 hover:bg-opacity-100 text-white",
        onClick,
        children: /* @__PURE__ */ (0, import_jsx_dev_runtime21.jsxDEV)(
          MdChevronLeft,
          {
            className: "opacity-50 cursor-pointer hover:opacity-100 mst-arrow",
            size: 40
          },
          void 0,
          !1,
          {
            fileName: "app/components/CollectionCarousel.jsx",
            lineNumber: 22,
            columnNumber: 9
          },
          this
        )
      },
      void 0,
      !1,
      {
        fileName: "app/components/CollectionCarousel.jsx",
        lineNumber: 19,
        columnNumber: 7
      },
      this
    );
  }
  function NextArrow(props) {
    let { onClick } = props;
    return /* @__PURE__ */ (0, import_jsx_dev_runtime21.jsxDEV)(
      "button",
      {
        className: "absolute right-0 top-1/2 transform -translate-y-1/2 bg-opacity-75 rounded-full p-2 mr-4 hover:bg-opacity-100 text-white",
        onClick,
        children: /* @__PURE__ */ (0, import_jsx_dev_runtime21.jsxDEV)(
          MdChevronRight,
          {
            className: "opacity-50 cursor-pointer hover:opacity-100 mst-arrow",
            size: 40
          },
          void 0,
          !1,
          {
            fileName: "app/components/CollectionCarousel.jsx",
            lineNumber: 37,
            columnNumber: 11
          },
          this
        )
      },
      void 0,
      !1,
      {
        fileName: "app/components/CollectionCarousel.jsx",
        lineNumber: 33,
        columnNumber: 7
      },
      this
    );
  }
  let settings = {
    dots: !1,
    infinite: !(len < 4),
    slidesToShow: (len < 4, len),
    slidesToScroll: 1,
    nextArrow: /* @__PURE__ */ (0, import_jsx_dev_runtime21.jsxDEV)(NextArrow, {}, void 0, !1, {
      fileName: "app/components/CollectionCarousel.jsx",
      lineNumber: 50,
      columnNumber: 16
    }, this),
    prevArrow: /* @__PURE__ */ (0, import_jsx_dev_runtime21.jsxDEV)(PrevArrow, {}, void 0, !1, {
      fileName: "app/components/CollectionCarousel.jsx",
      lineNumber: 51,
      columnNumber: 16
    }, this),
    responsive: [
      {
        breakpoint: 1024,
        settings: {
          slidesToShow: 4,
          slidesToScroll: 1
        }
      },
      {
        breakpoint: 600,
        settings: {
          slidesToShow: 3,
          slidesToScroll: 1
        }
      },
      {
        breakpoint: 520,
        settings: {
          slidesToShow: 2,
          slidesToScroll: 1
        }
      }
    ]
  };
  console.log("settings::", settings);
  function goToCollection(url_path) {
    let url = `/collections/${url_path}`;
    console.log(url), window.location.href = url;
  }
  return /* @__PURE__ */ (0, import_jsx_dev_runtime21.jsxDEV)("div", { className: "recommended_section w-full max-w-screen-xl mx-auto lg:px-52 sm:px-32 md:px-32", children: /* @__PURE__ */ (0, import_jsx_dev_runtime21.jsxDEV)(import_react_slick3.default, { ...settings, children: collectionsToShow.map((coll, index3) => {
    var _a2, _b, _c, _d, _e3;
    return /* @__PURE__ */ (0, import_jsx_dev_runtime21.jsxDEV)(import_jsx_dev_runtime21.Fragment, { children: coll.length ? /* @__PURE__ */ (0, import_jsx_dev_runtime21.jsxDEV)("div", { className: "w-full cursor", onClick: () => {
      var _a3, _b2;
      return goToCollection((_b2 = (_a3 = coll[0]) == null ? void 0 : _a3.node) == null ? void 0 : _b2.handle);
    }, children: /* @__PURE__ */ (0, import_jsx_dev_runtime21.jsxDEV)("div", { className: "bg-white mst-card rounded-lg shadow-lg mx-2 p-1 sm:p-2", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime21.jsxDEV)(
        "img",
        {
          src: ((_c = (_b = (_a2 = coll[0]) == null ? void 0 : _a2.node) == null ? void 0 : _b.metafields[1]) == null ? void 0 : _c.value) || noImg,
          className: "w-full h-auto coll_cor_img rounded-full"
        },
        void 0,
        !1,
        {
          fileName: "app/components/CollectionCarousel.jsx",
          lineNumber: 93,
          columnNumber: 19
        },
        this
      ),
      /* @__PURE__ */ (0, import_jsx_dev_runtime21.jsxDEV)("h2", { className: "text-sm font-semibold mt-2 text-center", children: (_e3 = (_d = coll[0]) == null ? void 0 : _d.node) == null ? void 0 : _e3.title }, void 0, !1, {
        fileName: "app/components/CollectionCarousel.jsx",
        lineNumber: 97,
        columnNumber: 19
      }, this)
    ] }, void 0, !0, {
      fileName: "app/components/CollectionCarousel.jsx",
      lineNumber: 92,
      columnNumber: 17
    }, this) }, `coll_corousel_${index3}`, !1, {
      fileName: "app/components/CollectionCarousel.jsx",
      lineNumber: 91,
      columnNumber: 13
    }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime21.jsxDEV)(import_jsx_dev_runtime21.Fragment, {}, void 0, !1, {
      fileName: "app/components/CollectionCarousel.jsx",
      lineNumber: 103,
      columnNumber: 13
    }, this) }, void 0, !1, {
      fileName: "app/components/CollectionCarousel.jsx",
      lineNumber: 89,
      columnNumber: 13
    }, this);
  }) }, void 0, !1, {
    fileName: "app/components/CollectionCarousel.jsx",
    lineNumber: 87,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/components/CollectionCarousel.jsx",
    lineNumber: 85,
    columnNumber: 5
  }, this);
}, CollectionCarousel_default = CollectionCarousel;

// app/routes/($locale).collections.$handle.jsx
var import_jsx_dev_runtime22 = __toESM(require_jsx_dev_runtime()), meta7 = ({ matches, data: data2 }) => {
  let desc = data2.seo.description.length ? data2.seo.description.substring(0, 150) : "Desciption not available", metaD = { title: data2.seo.title, description: desc + "..." };
  return getSeoMeta(...matches.map((match) => metaD));
}, sortOptions = [
  { name: "Most Popular", href: "#", value: "", current: !0 },
  // {name: 'Best Rating', href: '#', value:'', current: false},
  { name: "Newest", href: "#", value: "created_asc", current: !1 },
  { name: "Price: Low to High", value: "lh", href: "#", current: !1 },
  { name: "Price: High to Low", value: "hl", href: "#", current: !1 }
], subCategories = [
  { name: "Way 2 Slay", href: "/collections/way-2-slay-mjk" },
  { name: "Rizz & Roll", href: "/collections/rizz-roll-mjk" },
  { name: "Pro Studio", href: "/collections/pro-studio-mjk" }
], filters = [
  {
    id: "category",
    name: "Category",
    options: [
      { value: "new-arrivals", label: "New Arrivals", checked: !1 }
    ]
  },
  {
    id: "price",
    name: "Price",
    options: [
      { value: "299", label: "\u20B90 - \u20B9299" },
      { value: "499", label: "\u20B9300 - \u20B9499" },
      { value: "899", label: "\u20B9500 - \u20B9899" },
      { value: "900", label: "\u20B9900+" }
    ]
  }
];
function classNames(...classes) {
  return classes.filter(Boolean).join(" ");
}
async function loader7({ request, params, context }) {
  let { handle } = params, { storefront } = context, paginationVariables = getPaginationVariables(request, {
    pageBy: 100
  });
  console.log("paginationVariables::", paginationVariables);
  let headerPromise = storefront.query(HEADER_QUERY2, {
    cache: storefront.CacheNone(),
    variables: {
      headerMenuHandle: "main-menu"
      // Adjust to your header menu handle
    }
  }), all_collections = await storefront.query(ALL_COLLECTIONS_QUERY, {
    cache: storefront.CacheNone()
  });
  if (!handle)
    return redirect4("/collections");
  let { collections } = all_collections, { collection } = await storefront.query(COLLECTION_QUERY, {
    variables: { handle, ...paginationVariables }
  });
  if (!collection)
    throw new Response(`Collection ${handle} not found`, {
      status: 404
    });
  let desc = collection.description.split(" ", 100).join(" "), seo = {
    title: `MARY JO K - ${collection.title}`,
    description: desc
  };
  return json3({ collection, collections, header: await headerPromise, handle, seo });
}
function Collection() {
  var _a2;
  var collectionArray = [];
  let { collection, header, handle, collections } = useLoaderData2(), { menu } = header;
  var sortArr = menu.items.filter((item) => item.title.toLowerCase() === handle);
  collectionArray = sortArr.length ? (_a2 = sortArr[0]) == null ? void 0 : _a2.items : [];
  let sortColl = collectionArray.map((coll) => collections.edges.filter((item) => item.node.title === coll.title)), [mobileFiltersOpen, setMobileFiltersOpen] = (0, import_react73.useState)(!1);
  var productsToShow1 = [];
  let lines = [], [startIndex, setStartIndex] = (0, import_react73.useState)(0), [productsToShow, setProductToShow] = (0, import_react73.useState)([]), [productsToShowDump, setProductToShowDump] = (0, import_react73.useState)([]), [imgUrl, setImgUrl] = (0, import_react73.useState)(""), isLargeScreen = (0, import_react_responsive7.useMediaQuery)({ minWidth: 1024 }), isSmall = (0, import_react_responsive7.useMediaQuery)({ maxWidth: 640 }), [readMore, setMore] = (0, import_react73.useState)(!1), endIndex = isLargeScreen ? 4 : 2;
  (0, import_react73.useEffect)(() => {
    (collection.products != null || collection.products != null) && (productsToShow1 = collection.products.nodes, setProductToShow(productsToShow1), setProductToShowDump(productsToShow1));
  }, []), collection.products.nodes.map((product) => {
    product.variants.nodes.map((line) => {
      lines.push({
        merchandiseId: line.id,
        quantity: 1
      });
    });
  });
  let sortCollectionProducts = (sort_by) => {
    var data2 = collection.products.nodes;
    switch (sort_by) {
      case "lh":
        sortArray(data2, "ascending");
        break;
      case "hl":
        sortArray(data2, "descending");
        break;
      case "created_asc":
        sortByDate(data2, "ascending");
        break;
      case "created_desc":
        sortByDate(data2, "descending");
        break;
      default:
        setProductToShow(data2);
    }
  }, sortArray = (data2, sortOrder = "ascending") => {
    let sortedData = [...data2].sort((a13, b6) => {
      var nodeA = a13, nodeB = b6;
      return sortOrder === "ascending" ? parseFloat(nodeA.priceRange.maxVariantPrice.amount) - parseFloat(nodeB.priceRange.maxVariantPrice.amount) : parseFloat(nodeB.priceRange.maxVariantPrice.amount) - parseFloat(nodeA.priceRange.maxVariantPrice.amount);
    });
    setProductToShow(sortedData);
  }, sortByDate = (data2, sortOrder = "ascending") => {
    let sortedData = [...data2].sort((a13, b6) => {
      var nodeA = a13, nodeB = b6;
      return sortOrder === "ascending" ? new Date(nodeA.publishedAt).getTime() - new Date(nodeB.publishedAt).getTime() : new Date(nodeB.publishedAt).getTime() - new Date(nodeA.publishedAt).getTime();
    });
    setProductToShow(sortedData);
  }, filterData = (e5) => {
    var price = parseInt(e5.target.value);
    console.log("filter::", e5.target.checked);
    var isChecked = e5.target.checked, filterData2 = productsToShow;
    if (isChecked) {
      let filter = filterData2.filter((item) => item.priceRange.maxVariantPrice.amount > price);
      console.log("filter::", filter), setProductToShow(filter);
    } else
      setProductToShow(productsToShowDump);
  }, calculatePer = (original_price, disc_price) => {
    let price = Math.trunc(original_price), compareAtPrice = Math.trunc(disc_price), per = (compareAtPrice - price) / compareAtPrice * 100;
    return Math.trunc(per);
  };
  function getPath(url_path) {
    return new URL(url_path).pathname;
  }
  let goToProduct = (url_path) => {
    window.location.href = url_path;
  };
  return (0, import_react73.useEffect)(() => {
    var _a3, _b;
    var img = "";
    isSmall ? img = collection != null && collection.metafields[0] ? collection == null ? void 0 : collection.metafields[0].value : (_a3 = collection == null ? void 0 : collection.image) == null ? void 0 : _a3.url : img = (_b = collection == null ? void 0 : collection.image) == null ? void 0 : _b.url, setImgUrl(img);
  }, [collection]), /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(import_jsx_dev_runtime22.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
      "img",
      {
        src: imgUrl,
        style: { objectFit: "cover", width: "100%" }
      },
      collection.handle,
      !1,
      {
        fileName: "app/routes/($locale).collections.$handle.jsx",
        lineNumber: 235,
        columnNumber: 9
      },
      this
    ) }, void 0, !1, {
      fileName: "app/routes/($locale).collections.$handle.jsx",
      lineNumber: 234,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "bg-white mx-2.5", children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(tt.Root, { show: mobileFiltersOpen, as: import_react75.Fragment, children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
        _t,
        {
          as: "div",
          className: "relative z-40 lg:hidden",
          onClose: setMobileFiltersOpen,
          children: [
            /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
              tt.Child,
              {
                as: import_react75.Fragment,
                enter: "transition-opacity ease-linear duration-300",
                enterFrom: "opacity-0",
                enterTo: "opacity-100",
                leave: "transition-opacity ease-linear duration-300",
                leaveFrom: "opacity-100",
                leaveTo: "opacity-0",
                children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "fixed inset-0 bg-black bg-opacity-25" }, void 0, !1, {
                  fileName: "app/routes/($locale).collections.$handle.jsx",
                  lineNumber: 259,
                  columnNumber: 17
                }, this)
              },
              void 0,
              !1,
              {
                fileName: "app/routes/($locale).collections.$handle.jsx",
                lineNumber: 250,
                columnNumber: 15
              },
              this
            ),
            /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "fixed inset-0 z-40 flex", children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
              tt.Child,
              {
                as: import_react75.Fragment,
                enter: "transition ease-in-out duration-300 transform",
                enterFrom: "translate-x-full",
                enterTo: "translate-x-0",
                leave: "transition ease-in-out duration-300 transform",
                leaveFrom: "translate-x-0",
                leaveTo: "translate-x-full",
                children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(_t.Panel, { className: "relative ml-auto flex h-full w-full max-w-xs flex-col overflow-y-auto bg-white py-4 pb-12 shadow-xl", children: [
                  /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "flex items-center justify-between px-4", children: [
                    /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("h2", { className: "text-lg font-medium text-gray-900", children: "Filters" }, void 0, !1, {
                      fileName: "app/routes/($locale).collections.$handle.jsx",
                      lineNumber: 274,
                      columnNumber: 23
                    }, this),
                    /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                      "button",
                      {
                        type: "button",
                        className: "-mr-2 flex h-10 w-10 items-center justify-center rounded-md bg-white p-2 text-gray-400",
                        onClick: () => setMobileFiltersOpen(!1),
                        children: [
                          /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("span", { className: "sr-only", children: "Close menu" }, void 0, !1, {
                            fileName: "app/routes/($locale).collections.$handle.jsx",
                            lineNumber: 282,
                            columnNumber: 25
                          }, this),
                          /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(XMarkIcon_default, { className: "h-6 w-6", "aria-hidden": "true" }, void 0, !1, {
                            fileName: "app/routes/($locale).collections.$handle.jsx",
                            lineNumber: 283,
                            columnNumber: 25
                          }, this)
                        ]
                      },
                      void 0,
                      !0,
                      {
                        fileName: "app/routes/($locale).collections.$handle.jsx",
                        lineNumber: 277,
                        columnNumber: 23
                      },
                      this
                    )
                  ] }, void 0, !0, {
                    fileName: "app/routes/($locale).collections.$handle.jsx",
                    lineNumber: 273,
                    columnNumber: 21
                  }, this),
                  /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("form", { className: "mt-4 border-t border-gray-200", children: [
                    /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("h3", { className: "sr-only", children: "Categories" }, void 0, !1, {
                      fileName: "app/routes/($locale).collections.$handle.jsx",
                      lineNumber: 289,
                      columnNumber: 23
                    }, this),
                    /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                      "ul",
                      {
                        role: "list",
                        className: "px-2 py-3 font-medium text-gray-900",
                        children: subCategories.map((category) => /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("li", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("a", { href: category.href, className: "block px-2 py-3", children: category.name }, void 0, !1, {
                          fileName: "app/routes/($locale).collections.$handle.jsx",
                          lineNumber: 296,
                          columnNumber: 29
                        }, this) }, category.name, !1, {
                          fileName: "app/routes/($locale).collections.$handle.jsx",
                          lineNumber: 295,
                          columnNumber: 27
                        }, this))
                      },
                      void 0,
                      !1,
                      {
                        fileName: "app/routes/($locale).collections.$handle.jsx",
                        lineNumber: 290,
                        columnNumber: 23
                      },
                      this
                    ),
                    filters.map((section) => /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                      ve2,
                      {
                        as: "div",
                        className: "border-t border-gray-200 px-4 py-6",
                        children: ({ open }) => /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(import_jsx_dev_runtime22.Fragment, { children: [
                          /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("h3", { className: "-mx-2 -my-3 flow-root", children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(ve2.Button, { className: "flex w-full items-center justify-between bg-white px-2 py-3 text-gray-400", children: [
                            /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("span", { className: "font-medium text-gray-900", children: section.name }, void 0, !1, {
                              fileName: "app/routes/($locale).collections.$handle.jsx",
                              lineNumber: 314,
                              columnNumber: 35
                            }, this),
                            /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("span", { className: "ml-6 flex items-center", children: open ? /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                              MinusIcon_default,
                              {
                                className: "h-5 w-5",
                                "aria-hidden": "true"
                              },
                              void 0,
                              !1,
                              {
                                fileName: "app/routes/($locale).collections.$handle.jsx",
                                lineNumber: 319,
                                columnNumber: 39
                              },
                              this
                            ) : /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                              PlusIcon_default,
                              {
                                className: "h-5 w-5",
                                "aria-hidden": "true"
                              },
                              void 0,
                              !1,
                              {
                                fileName: "app/routes/($locale).collections.$handle.jsx",
                                lineNumber: 324,
                                columnNumber: 39
                              },
                              this
                            ) }, void 0, !1, {
                              fileName: "app/routes/($locale).collections.$handle.jsx",
                              lineNumber: 317,
                              columnNumber: 35
                            }, this)
                          ] }, void 0, !0, {
                            fileName: "app/routes/($locale).collections.$handle.jsx",
                            lineNumber: 313,
                            columnNumber: 33
                          }, this) }, void 0, !1, {
                            fileName: "app/routes/($locale).collections.$handle.jsx",
                            lineNumber: 312,
                            columnNumber: 31
                          }, this),
                          /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(ve2.Panel, { className: "pt-6", children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "space-y-6", children: section.options.map((option, optionIdx) => /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                            "div",
                            {
                              className: "flex items-center",
                              children: [
                                /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                                  "input",
                                  {
                                    id: `filter-mobile-${section.id}-${optionIdx}`,
                                    name: `${section.id}[]`,
                                    defaultValue: option.value,
                                    onChange: (e5) => filterData(e5),
                                    type: "checkbox",
                                    defaultChecked: option.checked,
                                    className: "h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500"
                                  },
                                  void 0,
                                  !1,
                                  {
                                    fileName: "app/routes/($locale).collections.$handle.jsx",
                                    lineNumber: 339,
                                    columnNumber: 39
                                  },
                                  this
                                ),
                                /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                                  "label",
                                  {
                                    htmlFor: `filter-mobile-${section.id}-${optionIdx}`,
                                    className: "ml-3 min-w-0 flex-1 text-gray-500",
                                    children: option.label
                                  },
                                  void 0,
                                  !1,
                                  {
                                    fileName: "app/routes/($locale).collections.$handle.jsx",
                                    lineNumber: 348,
                                    columnNumber: 39
                                  },
                                  this
                                )
                              ]
                            },
                            option.value,
                            !0,
                            {
                              fileName: "app/routes/($locale).collections.$handle.jsx",
                              lineNumber: 335,
                              columnNumber: 37
                            },
                            this
                          )) }, void 0, !1, {
                            fileName: "app/routes/($locale).collections.$handle.jsx",
                            lineNumber: 333,
                            columnNumber: 33
                          }, this) }, void 0, !1, {
                            fileName: "app/routes/($locale).collections.$handle.jsx",
                            lineNumber: 332,
                            columnNumber: 31
                          }, this)
                        ] }, void 0, !0, {
                          fileName: "app/routes/($locale).collections.$handle.jsx",
                          lineNumber: 310,
                          columnNumber: 29
                        }, this)
                      },
                      section.id,
                      !1,
                      {
                        fileName: "app/routes/($locale).collections.$handle.jsx",
                        lineNumber: 304,
                        columnNumber: 25
                      },
                      this
                    ))
                  ] }, void 0, !0, {
                    fileName: "app/routes/($locale).collections.$handle.jsx",
                    lineNumber: 288,
                    columnNumber: 21
                  }, this)
                ] }, void 0, !0, {
                  fileName: "app/routes/($locale).collections.$handle.jsx",
                  lineNumber: 272,
                  columnNumber: 19
                }, this)
              },
              void 0,
              !1,
              {
                fileName: "app/routes/($locale).collections.$handle.jsx",
                lineNumber: 263,
                columnNumber: 17
              },
              this
            ) }, void 0, !1, {
              fileName: "app/routes/($locale).collections.$handle.jsx",
              lineNumber: 262,
              columnNumber: 15
            }, this)
          ]
        },
        void 0,
        !0,
        {
          fileName: "app/routes/($locale).collections.$handle.jsx",
          lineNumber: 245,
          columnNumber: 13
        },
        this
      ) }, void 0, !1, {
        fileName: "app/routes/($locale).collections.$handle.jsx",
        lineNumber: 244,
        columnNumber: 11
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("section", { className: "collectionContent sm:mt-4 overflow-auto", children: sortArr.length ? /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(CollectionCarousel_default, { collections: collection, handle, sortArr: sortColl }, void 0, !1, {
        fileName: "app/routes/($locale).collections.$handle.jsx",
        lineNumber: 371,
        columnNumber: 14
      }, this) : null }, void 0, !1, {
        fileName: "app/routes/($locale).collections.$handle.jsx",
        lineNumber: 369,
        columnNumber: 11
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("main", { className: "mx-auto max-w-8xl px-0 sm:px-4 sm:px-6 lg:px-8", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "flex gap-1 items-center", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(Link2, { className: "mst-color", to: "/", children: "Home" }, void 0, !1, {
            fileName: "app/routes/($locale).collections.$handle.jsx",
            lineNumber: 378,
            columnNumber: 15
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("img", { src: "/next.png", alt: "next", width: 20, height: 20 }, void 0, !1, {
            fileName: "app/routes/($locale).collections.$handle.jsx",
            lineNumber: 379,
            columnNumber: 15
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(Link2, { to: "/collections", className: "font-semibold mst-color", children: "Collection" }, void 0, !1, {
            fileName: "app/routes/($locale).collections.$handle.jsx",
            lineNumber: 380,
            columnNumber: 15
          }, this)
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).collections.$handle.jsx",
          lineNumber: 377,
          columnNumber: 13
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "flex items-baseline justify-between border-b mst-border pb-6 m-0 relative", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("h1", { className: "text-4xl font-bold tracking-tight text-gray-900 sm:block hidden my-[15px] mst-color", children: collection.title }, void 0, !1, {
            fileName: "app/routes/($locale).collections.$handle.jsx",
            lineNumber: 383,
            columnNumber: 15
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "flex items-center sm:mr-10", children: [
            /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(it, { as: "div", className: "relative inline-block text-left", children: [
              /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(it.Button, { className: "group inline-flex justify-center text-sm font-medium text-gray-700 hover:text-gray-900 mst-color", children: [
                "Sort",
                /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                  ChevronDownIcon_default,
                  {
                    className: "-mr-1 ml-1 h-5 w-5 flex-shrink-0 text-gray-400 group-hover:text-gray-500 mst-color",
                    "aria-hidden": "true"
                  },
                  void 0,
                  !1,
                  {
                    fileName: "app/routes/($locale).collections.$handle.jsx",
                    lineNumber: 392,
                    columnNumber: 23
                  },
                  this
                )
              ] }, void 0, !0, {
                fileName: "app/routes/($locale).collections.$handle.jsx",
                lineNumber: 390,
                columnNumber: 21
              }, this) }, void 0, !1, {
                fileName: "app/routes/($locale).collections.$handle.jsx",
                lineNumber: 389,
                columnNumber: 19
              }, this),
              /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                tt,
                {
                  as: import_react75.Fragment,
                  enter: "transition ease-out duration-100",
                  enterFrom: "transform opacity-0 scale-95",
                  enterTo: "transform opacity-100 scale-100",
                  leave: "transition ease-in duration-75",
                  leaveFrom: "transform opacity-100 scale-100",
                  leaveTo: "transform opacity-0 scale-95",
                  children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(it.Items, { className: "absolute left-0 z-10 mt-2 w-40 origin-top-right rounded-md bg-white shadow-2xl ring-1 ring-black ring-opacity-5 focus:outline-none", children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "py-1", children: sortOptions.map((option) => /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(it.Item, { children: ({ active }) => /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                    "a",
                    {
                      onClick: () => sortCollectionProducts(option.value),
                      className: classNames(
                        option.current ? "font-medium text-gray-900" : "text-gray-500",
                        active ? "bg-gray-100" : "",
                        "block px-4 py-2 text-sm"
                      ),
                      children: option.name
                    },
                    void 0,
                    !1,
                    {
                      fileName: "app/routes/($locale).collections.$handle.jsx",
                      lineNumber: 413,
                      columnNumber: 31
                    },
                    this
                  ) }, option.name, !1, {
                    fileName: "app/routes/($locale).collections.$handle.jsx",
                    lineNumber: 411,
                    columnNumber: 27
                  }, this)) }, void 0, !1, {
                    fileName: "app/routes/($locale).collections.$handle.jsx",
                    lineNumber: 409,
                    columnNumber: 23
                  }, this) }, void 0, !1, {
                    fileName: "app/routes/($locale).collections.$handle.jsx",
                    lineNumber: 408,
                    columnNumber: 21
                  }, this)
                },
                void 0,
                !1,
                {
                  fileName: "app/routes/($locale).collections.$handle.jsx",
                  lineNumber: 399,
                  columnNumber: 19
                },
                this
              )
            ] }, void 0, !0, {
              fileName: "app/routes/($locale).collections.$handle.jsx",
              lineNumber: 388,
              columnNumber: 17
            }, this),
            /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
              "button",
              {
                type: "button",
                className: "second-filter -m-2 ml-5 p-2 text-gray-400 hover:text-gray-500 sm:ml-7",
                children: [
                  /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("span", { className: "sr-only", children: "View grid" }, void 0, !1, {
                    fileName: "app/routes/($locale).collections.$handle.jsx",
                    lineNumber: 437,
                    columnNumber: 19
                  }, this),
                  /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(Squares2X2Icon_default, { className: "h-5 w-5 mst-color", "aria-hidden": "true" }, void 0, !1, {
                    fileName: "app/routes/($locale).collections.$handle.jsx",
                    lineNumber: 438,
                    columnNumber: 19
                  }, this)
                ]
              },
              void 0,
              !0,
              {
                fileName: "app/routes/($locale).collections.$handle.jsx",
                lineNumber: 433,
                columnNumber: 17
              },
              this
            ),
            /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
              "button",
              {
                type: "button",
                className: "right-filter -m-2 ml-4 p-2 text-gray-400 hover:text-gray-500 sm:ml-6 lg:hidden",
                onClick: () => setMobileFiltersOpen(!0),
                children: [
                  /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("span", { className: "sr-only", children: "Filters" }, void 0, !1, {
                    fileName: "app/routes/($locale).collections.$handle.jsx",
                    lineNumber: 445,
                    columnNumber: 19
                  }, this),
                  /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(FunnelIcon_default, { className: "h-5 w-5", "aria-hidden": "true" }, void 0, !1, {
                    fileName: "app/routes/($locale).collections.$handle.jsx",
                    lineNumber: 446,
                    columnNumber: 19
                  }, this)
                ]
              },
              void 0,
              !0,
              {
                fileName: "app/routes/($locale).collections.$handle.jsx",
                lineNumber: 440,
                columnNumber: 17
              },
              this
            )
          ] }, void 0, !0, {
            fileName: "app/routes/($locale).collections.$handle.jsx",
            lineNumber: 387,
            columnNumber: 15
          }, this)
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).collections.$handle.jsx",
          lineNumber: 382,
          columnNumber: 13
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("section", { "aria-labelledby": "products-heading", className: "pb-12 pt-6", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("h2", { id: "products-heading", className: "sr-only", children: "Products" }, void 0, !1, {
            fileName: "app/routes/($locale).collections.$handle.jsx",
            lineNumber: 452,
            columnNumber: 15
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "grid grid-cols-1 gap-x-8 gap-y-10 lg:grid-cols-4", children: [
            /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "shadow-md px-4 py-2 sm:mst-card", children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("form", { className: "hidden lg:block lg:sticky lg:top-[120px]", children: [
              /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("h3", { className: "sr-only", children: "Categories" }, void 0, !1, {
                fileName: "app/routes/($locale).collections.$handle.jsx",
                lineNumber: 459,
                columnNumber: 21
              }, this),
              /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                "ul",
                {
                  role: "list",
                  className: "space-y-4 border-gray-200 pb-6 text-sm font-medium text-gray-900",
                  children: subCategories.map((category) => /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                    "li",
                    {
                      className: "border-b border-[#ece6e6] pb-2",
                      children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                        "a",
                        {
                          href: category.href,
                          className: "font-bold text-[18px]",
                          children: category.name
                        },
                        void 0,
                        !1,
                        {
                          fileName: "app/routes/($locale).collections.$handle.jsx",
                          lineNumber: 469,
                          columnNumber: 27
                        },
                        this
                      )
                    },
                    category.name,
                    !1,
                    {
                      fileName: "app/routes/($locale).collections.$handle.jsx",
                      lineNumber: 465,
                      columnNumber: 25
                    },
                    this
                  ))
                },
                void 0,
                !1,
                {
                  fileName: "app/routes/($locale).collections.$handle.jsx",
                  lineNumber: 460,
                  columnNumber: 21
                },
                this
              ),
              filters.map((section) => /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                ve2,
                {
                  as: "div",
                  className: "border-b border-gray-200 py-2",
                  children: ({ open }) => /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(import_jsx_dev_runtime22.Fragment, { children: [
                    /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("h3", { className: "-my-3 flow-root", children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(ve2.Button, { className: "flex w-full items-center justify-between bg-white py-3 text-[18px] text-black font-bold", children: [
                      /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("span", { className: "", children: section.name }, void 0, !1, {
                        fileName: "app/routes/($locale).collections.$handle.jsx",
                        lineNumber: 489,
                        columnNumber: 33
                      }, this),
                      /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("span", { className: "ml-6 flex items-center", children: open ? /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                        MinusIcon_default,
                        {
                          className: "h-5 w-5",
                          "aria-hidden": "true"
                        },
                        void 0,
                        !1,
                        {
                          fileName: "app/routes/($locale).collections.$handle.jsx",
                          lineNumber: 492,
                          columnNumber: 37
                        },
                        this
                      ) : /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                        PlusIcon_default,
                        {
                          className: "h-5 w-5",
                          "aria-hidden": "true"
                        },
                        void 0,
                        !1,
                        {
                          fileName: "app/routes/($locale).collections.$handle.jsx",
                          lineNumber: 497,
                          columnNumber: 37
                        },
                        this
                      ) }, void 0, !1, {
                        fileName: "app/routes/($locale).collections.$handle.jsx",
                        lineNumber: 490,
                        columnNumber: 33
                      }, this)
                    ] }, void 0, !0, {
                      fileName: "app/routes/($locale).collections.$handle.jsx",
                      lineNumber: 488,
                      columnNumber: 31
                    }, this) }, void 0, !1, {
                      fileName: "app/routes/($locale).collections.$handle.jsx",
                      lineNumber: 487,
                      columnNumber: 29
                    }, this),
                    /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(ve2.Panel, { className: "pt-6", children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "space-y-4", children: section.options.map((option, optionIdx) => /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                      "div",
                      {
                        className: "flex items-center",
                        children: [
                          /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                            "input",
                            {
                              id: `filter-${section.id}-${optionIdx}`,
                              name: `${section.id}[]`,
                              defaultValue: option.value,
                              onChange: (e5) => filterData(e5),
                              type: "checkbox",
                              defaultChecked: option.checked,
                              className: "h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500"
                            },
                            void 0,
                            !1,
                            {
                              fileName: "app/routes/($locale).collections.$handle.jsx",
                              lineNumber: 512,
                              columnNumber: 37
                            },
                            this
                          ),
                          /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                            "label",
                            {
                              htmlFor: `filter-${section.id}-${optionIdx}`,
                              className: "ml-3 text-sm text-gray-600",
                              children: option.label
                            },
                            void 0,
                            !1,
                            {
                              fileName: "app/routes/($locale).collections.$handle.jsx",
                              lineNumber: 521,
                              columnNumber: 37
                            },
                            this
                          )
                        ]
                      },
                      option.value,
                      !0,
                      {
                        fileName: "app/routes/($locale).collections.$handle.jsx",
                        lineNumber: 508,
                        columnNumber: 35
                      },
                      this
                    )) }, void 0, !1, {
                      fileName: "app/routes/($locale).collections.$handle.jsx",
                      lineNumber: 506,
                      columnNumber: 31
                    }, this) }, void 0, !1, {
                      fileName: "app/routes/($locale).collections.$handle.jsx",
                      lineNumber: 505,
                      columnNumber: 29
                    }, this)
                  ] }, void 0, !0, {
                    fileName: "app/routes/($locale).collections.$handle.jsx",
                    lineNumber: 486,
                    columnNumber: 27
                  }, this)
                },
                section.id,
                !1,
                {
                  fileName: "app/routes/($locale).collections.$handle.jsx",
                  lineNumber: 480,
                  columnNumber: 23
                },
                this
              ))
            ] }, void 0, !0, {
              fileName: "app/routes/($locale).collections.$handle.jsx",
              lineNumber: 458,
              columnNumber: 19
            }, this) }, void 0, !1, {
              fileName: "app/routes/($locale).collections.$handle.jsx",
              lineNumber: 457,
              columnNumber: 17
            }, this),
            /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "lg:col-span-3", children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "w-full max-w-screen-xl", children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "cursor grid grid-cols-2 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-4", children: productsToShow.map((product, index3) => {
              var _a3, _b, _c, _d, _e3, _f;
              return /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "cursor mst-card-md", children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                "div",
                {
                  className: "bg-white rounded-lg shadow-lg p-2 px-2 sm:px-2",
                  style: {
                    boxShadow: "rgba(149, 157, 165, 0.2) 0px 8px 24px"
                  },
                  children: [
                    /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { onClick: () => goToProduct(`/products/${product.handle}`), children: [
                      /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                        "img",
                        {
                          src: (_b = (_a3 = product.images.edges[0]) == null ? void 0 : _a3.node) == null ? void 0 : _b.url,
                          alt: product.title,
                          className: "w-full h-auto rounded"
                        },
                        void 0,
                        !1,
                        {
                          fileName: "app/routes/($locale).collections.$handle.jsx",
                          lineNumber: 552,
                          columnNumber: 29
                        },
                        this
                      ),
                      /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "product_info", children: [
                        /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "sm:text-lg text-[17px] xs:text-[14px] font-semibold mt-2 text-center min-h-[50px] xs:min-h-[65px] sm:min-h-[55px]", children: product.title }, void 0, !1, {
                          fileName: "app/routes/($locale).collections.$handle.jsx",
                          lineNumber: 558,
                          columnNumber: 31
                        }, this),
                        /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "text-center sm:text-[26px] text-[21px] xs:text-[19px] font-bold m-auto w-full", children: [
                          "\u20B9",
                          Math.trunc(product.priceRange.maxVariantPrice.amount),
                          " \xA0 \xA0\xA0",
                          (_c = product.variants.nodes[0].compareAtPrice) != null && _c.amount ? /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("s", { className: "opacity-50 text-xl", children: [
                            "\u20B9",
                            Math.trunc((_d = product.variants.nodes[0].compareAtPrice) == null ? void 0 : _d.amount)
                          ] }, void 0, !0, {
                            fileName: "app/routes/($locale).collections.$handle.jsx",
                            lineNumber: 567,
                            columnNumber: 35
                          }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("s", { className: "opacity-50 text-xl", children: [
                            "\u20B9",
                            Math.trunc((_e3 = product.priceRange) == null ? void 0 : _e3.maxVariantPrice.amount)
                          ] }, void 0, !0, {
                            fileName: "app/routes/($locale).collections.$handle.jsx",
                            lineNumber: 571,
                            columnNumber: 35
                          }, this),
                          /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("b", { className: "ml-2 text-red-500 text-sm xs:text-sm sm:text-xl", children: [
                            " (",
                            calculatePer(product.priceRange.minVariantPrice.amount, (_f = product.variants.nodes[0].compareAtPrice) == null ? void 0 : _f.amount),
                            " % Off) "
                          ] }, void 0, !0, {
                            fileName: "app/routes/($locale).collections.$handle.jsx",
                            lineNumber: 575,
                            columnNumber: 33
                          }, this)
                        ] }, void 0, !0, {
                          fileName: "app/routes/($locale).collections.$handle.jsx",
                          lineNumber: 562,
                          columnNumber: 33
                        }, this) }, void 0, !1, {
                          fileName: "app/routes/($locale).collections.$handle.jsx",
                          lineNumber: 561,
                          columnNumber: 31
                        }, this)
                      ] }, void 0, !0, {
                        fileName: "app/routes/($locale).collections.$handle.jsx",
                        lineNumber: 557,
                        columnNumber: 29
                      }, this),
                      /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "flex justify-center pt-1", children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                        c,
                        {
                          productId: product.id,
                          okendoStarRatingSnippet: product.OkendoStarRatingSnippet
                        },
                        void 0,
                        !1,
                        {
                          fileName: "app/routes/($locale).collections.$handle.jsx",
                          lineNumber: 580,
                          columnNumber: 29
                        },
                        this
                      ) }, void 0, !1, {
                        fileName: "app/routes/($locale).collections.$handle.jsx",
                        lineNumber: 579,
                        columnNumber: 29
                      }, this)
                    ] }, void 0, !0, {
                      fileName: "app/routes/($locale).collections.$handle.jsx",
                      lineNumber: 551,
                      columnNumber: 27
                    }, this),
                    /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "px-1 py-1 flex items-center sm:flex-row gap-3 justify-center w-[100%]", children: [
                      /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "w-[25%] flex justify-center", children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                        "svg",
                        {
                          xmlns: "http://www.w3.org/2000/svg",
                          viewBox: "0 0 32 33",
                          xmlSpace: "preserve",
                          className: "home-like h-[30px] w-[30px] sm:w-[43px] sm:h-[43px]",
                          children: [
                            /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                              "path",
                              {
                                d: "M9 .5h14c4.7 0 8.5 3.8 8.5 8.5v14c0 4.7-3.8 8.5-8.5 8.5H9C4.3 31.5.5 27.7.5 23V9C.5 4.3 4.3.5 9 .5z",
                                fill: "rgb(255, 255, 255)",
                                stroke: "rgb(0, 0, 0)"
                              },
                              void 0,
                              !1,
                              {
                                fileName: "app/routes/($locale).collections.$handle.jsx",
                                lineNumber: 596,
                                columnNumber: 35
                              },
                              this
                            ),
                            /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                              "path",
                              {
                                d: "M22.3 11.8c.4.4.7.9.9 1.4.2.5.3 1.1.3 1.6 0 .6-.1 1.1-.3 1.6-.2.5-.5 1-.9 1.4l-5.6 5.6s-.1 0-.1.1h-.2s-.1 0-.1-.1l-5.6-5.6C10 17 9.5 16 9.5 14.9c0-1.1.3-2.1 1-2.9.7-.8 1.7-1.3 2.7-1.5 1.1-.1 2.1.2 3 .8l.3.2.3-.2c.8-.6 1.8-.9 2.8-.8 1.1.1 2 .5 2.7 1.3z",
                                fill: "none",
                                stroke: "rgb(0, 0, 0)"
                              },
                              void 0,
                              !1,
                              {
                                fileName: "app/routes/($locale).collections.$handle.jsx",
                                lineNumber: 601,
                                columnNumber: 35
                              },
                              this
                            )
                          ]
                        },
                        void 0,
                        !0,
                        {
                          fileName: "app/routes/($locale).collections.$handle.jsx",
                          lineNumber: 588,
                          columnNumber: 33
                        },
                        this
                      ) }, void 0, !1, {
                        fileName: "app/routes/($locale).collections.$handle.jsx",
                        lineNumber: 587,
                        columnNumber: 31
                      }, this),
                      /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "w-[75%]", children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                        CartForm,
                        {
                          route: "/cart",
                          inputs: { lines: lines[index3] },
                          action: CartForm.ACTIONS.LinesAdd,
                          className: "flex-grow",
                          children: (fetcher) => /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(import_jsx_dev_runtime22.Fragment, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)(
                            "button",
                            {
                              className: "w-[100%] h-11 bg-black hover:bg-blue-700 text-white font-bold py-1 rounded-lg inline-block home-product",
                              type: "submit",
                              onClick: () => {
                                window.location.href = window.location.href + "#cart-aside";
                              },
                              children: "Add To Cart"
                            },
                            void 0,
                            !1,
                            {
                              fileName: "app/routes/($locale).collections.$handle.jsx",
                              lineNumber: 617,
                              columnNumber: 37
                            },
                            this
                          ) }, void 0, !1, {
                            fileName: "app/routes/($locale).collections.$handle.jsx",
                            lineNumber: 616,
                            columnNumber: 35
                          }, this)
                        },
                        void 0,
                        !1,
                        {
                          fileName: "app/routes/($locale).collections.$handle.jsx",
                          lineNumber: 609,
                          columnNumber: 31
                        },
                        this
                      ) }, void 0, !1, {
                        fileName: "app/routes/($locale).collections.$handle.jsx",
                        lineNumber: 608,
                        columnNumber: 31
                      }, this)
                    ] }, void 0, !0, {
                      fileName: "app/routes/($locale).collections.$handle.jsx",
                      lineNumber: 586,
                      columnNumber: 29
                    }, this)
                  ]
                },
                void 0,
                !0,
                {
                  fileName: "app/routes/($locale).collections.$handle.jsx",
                  lineNumber: 544,
                  columnNumber: 27
                },
                this
              ) }, product.id, !1, {
                fileName: "app/routes/($locale).collections.$handle.jsx",
                lineNumber: 543,
                columnNumber: 25
              }, this);
            }) }, void 0, !1, {
              fileName: "app/routes/($locale).collections.$handle.jsx",
              lineNumber: 541,
              columnNumber: 21
            }, this) }, void 0, !1, {
              fileName: "app/routes/($locale).collections.$handle.jsx",
              lineNumber: 540,
              columnNumber: 19
            }, this) }, void 0, !1, {
              fileName: "app/routes/($locale).collections.$handle.jsx",
              lineNumber: 539,
              columnNumber: 17
            }, this)
          ] }, void 0, !0, {
            fileName: "app/routes/($locale).collections.$handle.jsx",
            lineNumber: 456,
            columnNumber: 15
          }, this)
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).collections.$handle.jsx",
          lineNumber: 451,
          columnNumber: 13
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("div", { className: "collection_desc", children: [
          readMore ? /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("p", { dangerouslySetInnerHTML: { __html: collection == null ? void 0 : collection.descriptionHtml }, className: "my-4" }, void 0, !1, {
            fileName: "app/routes/($locale).collections.$handle.jsx",
            lineNumber: 644,
            columnNumber: 15
          }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("p", { dangerouslySetInnerHTML: { __html: collection == null ? void 0 : collection.descriptionHtml.slice(0, 200) }, className: "my-4" }, void 0, !1, {
            fileName: "app/routes/($locale).collections.$handle.jsx",
            lineNumber: 642,
            columnNumber: 15
          }, this),
          !readMore && (collection == null ? void 0 : collection.descriptionHtml) && /* @__PURE__ */ (0, import_jsx_dev_runtime22.jsxDEV)("button", { onClick: () => setMore(!0), className: "bg-black text-white font-bold py-1 px-2", children: " Read More " }, void 0, !1, {
            fileName: "app/routes/($locale).collections.$handle.jsx",
            lineNumber: 646,
            columnNumber: 60
          }, this)
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).collections.$handle.jsx",
          lineNumber: 640,
          columnNumber: 13
        }, this)
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).collections.$handle.jsx",
        lineNumber: 376,
        columnNumber: 11
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).collections.$handle.jsx",
      lineNumber: 242,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale).collections.$handle.jsx",
      lineNumber: 241,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).collections.$handle.jsx",
    lineNumber: 233,
    columnNumber: 5
  }, this);
}
var PRODUCT_ITEM_FRAGMENT = `#graphql
  ${l2}
  fragment MoneyProductItem on MoneyV2 {
    amount
    currencyCode
  }
  fragment ProductItem on Product {
    id
    handle
    title
    handle
    productType
    tags
    publishedAt
    featuredImage {
      id
      altText
      url
      width
      height
    }
    priceRange {
      minVariantPrice {
        ...MoneyProductItem
      }
    }
    priceRange {
      maxVariantPrice {
        ...MoneyProductItem
      }
    }
    images(first:10){
      edges{
        node{
          url
        }
      }
    }
    metafields(identifiers: [{namespace: "custom", key: "what_to_expect"},{namespace: "custom", key: "key_ingredients"}, {namespace: "custom", key: "how_to_use1"},{namespace: "custom", key: "who_can_use"},{namespace: "custom", key: "why_we"} ]){
      key
      value
    }
    variants(first: 1) {
      nodes {
        id
        compareAtPrice {
          amount
          currencyCode
        }
        selectedOptions {
          name
          value
        }
        metafields(identifiers: [{namespace: "custom", key: "isdefault"} ]){
          key
          value
        }
      }
    }
    ...OkendoStarRatingSnippet
  }
`, ALL_COLLECTIONS_QUERY = `#graphql
  query {
    collections(first: 100) {
      edges {
        node {
          id
          title
          handle
          metafields(identifiers: [{namespace: "custom", key: "mobile_banner"},{namespace: "custom", key: "sub_category_icon"}]){
            value
          }
        }
      }
    }
}
`, COLLECTION_QUERY = `#graphql
  ${PRODUCT_ITEM_FRAGMENT}
  query Collection(
    $handle: String!
    $country: CountryCode
    $language: LanguageCode
    $first: Int
    $last: Int
    $startCursor: String
    $endCursor: String
  ) @inContext(country: $country, language: $language) {
    collection(handle: $handle) {
      id
      handle
      title
      description
      descriptionHtml
      image{
        url
      }
      metafields(identifiers: [{namespace: "custom", key: "mobile_banner"}]){
        value
      }
      products(
        first: $first,
        last: $last,
        before: $startCursor,
        after: $endCursor
      ) {
        nodes {
          ...ProductItem
        }
        pageInfo {
          hasPreviousPage
          hasNextPage
          hasNextPage
          endCursor
        }
      }
    }
  }
`;
var MENU_FRAGMENT2 = `#graphql
  fragment Menu on Menu {
    id
    items {
      id
      title
      url
      items{
        title
        url
        
      }
    }
  }
`, HEADER_QUERY2 = `#graphql
  fragment Shop on Shop {
    id
    name
    description
    primaryDomain {
      url
    }
    brand {
      logo {
        image {
          url
        }
      }
    }
  }
  query Header(
    $country: CountryCode
    $headerMenuHandle: String!
    $language: LanguageCode
  ) @inContext(language: $language, country: $country) {
    shop {
      ...Shop
    }
    menu(handle: $headerMenuHandle) {
      ...Menu
    }
  }
  ${MENU_FRAGMENT2}
`;

// app/routes/($locale).account.orders.$id.jsx
var locale_account_orders_id_exports = {};
__export(locale_account_orders_id_exports, {
  default: () => OrderRoute,
  loader: () => loader8,
  meta: () => meta8
});
var import_jsx_dev_runtime23 = __toESM(require_jsx_dev_runtime()), meta8 = ({ data: data2 }) => {
  var _a2;
  return [{ title: `Order ${(_a2 = data2 == null ? void 0 : data2.order) == null ? void 0 : _a2.name}` }];
};
async function loader8({ params, context }) {
  var _a2;
  let { session, storefront } = context;
  if (!params.id)
    return redirect4("/account/orders");
  let orderId = atob(params.id);
  if (!await session.get("customerAccessToken"))
    return redirect4("/account/login");
  let { order: order2 } = await storefront.query(CUSTOMER_ORDER_QUERY, {
    variables: { orderId }
  });
  if (!order2 || !("lineItems" in order2))
    throw new Response("Order not found", { status: 404 });
  let lineItems = flattenConnection(order2.lineItems), firstDiscount = (_a2 = flattenConnection(order2.discountApplications)[0]) == null ? void 0 : _a2.value, discountValue = (firstDiscount == null ? void 0 : firstDiscount.__typename) === "MoneyV2" && firstDiscount, discountPercentage = (firstDiscount == null ? void 0 : firstDiscount.__typename) === "PricingPercentageValue" && (firstDiscount == null ? void 0 : firstDiscount.percentage);
  return json3({
    order: order2,
    lineItems,
    discountValue,
    discountPercentage
  });
}
function OrderRoute() {
  var _a2;
  let { order: order2, lineItems, discountValue, discountPercentage } = useLoaderData2();
  return /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("div", { className: "account-order", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("h2", { children: [
      "Order ",
      order2.name
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).account.orders.$id.jsx",
      lineNumber: 55,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("p", { children: [
      "Placed on ",
      new Date(order2.processedAt).toDateString()
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).account.orders.$id.jsx",
      lineNumber: 56,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("br", {}, void 0, !1, {
      fileName: "app/routes/($locale).account.orders.$id.jsx",
      lineNumber: 57,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("div", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("table", { children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("thead", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("tr", { children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("th", { scope: "col", children: "Product" }, void 0, !1, {
            fileName: "app/routes/($locale).account.orders.$id.jsx",
            lineNumber: 62,
            columnNumber: 15
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("th", { scope: "col", children: "Price" }, void 0, !1, {
            fileName: "app/routes/($locale).account.orders.$id.jsx",
            lineNumber: 63,
            columnNumber: 15
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("th", { scope: "col", children: "Quantity" }, void 0, !1, {
            fileName: "app/routes/($locale).account.orders.$id.jsx",
            lineNumber: 64,
            columnNumber: 15
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("th", { scope: "col", children: "Total" }, void 0, !1, {
            fileName: "app/routes/($locale).account.orders.$id.jsx",
            lineNumber: 65,
            columnNumber: 15
          }, this)
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).account.orders.$id.jsx",
          lineNumber: 61,
          columnNumber: 13
        }, this) }, void 0, !1, {
          fileName: "app/routes/($locale).account.orders.$id.jsx",
          lineNumber: 60,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("tbody", { children: lineItems.map((lineItem, lineItemIndex) => (
          // eslint-disable-next-line react/no-array-index-key
          /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)(OrderLineRow, { lineItem }, lineItemIndex, !1, {
            fileName: "app/routes/($locale).account.orders.$id.jsx",
            lineNumber: 71,
            columnNumber: 15
          }, this)
        )) }, void 0, !1, {
          fileName: "app/routes/($locale).account.orders.$id.jsx",
          lineNumber: 68,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("tfoot", { children: [
          (discountValue && discountValue.amount || discountPercentage) && /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("tr", { children: [
            /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("th", { scope: "row", colSpan: 3, children: /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("p", { children: "Discounts" }, void 0, !1, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 79,
              columnNumber: 19
            }, this) }, void 0, !1, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 78,
              columnNumber: 17
            }, this),
            /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("th", { scope: "row", children: /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("p", { children: "Discounts" }, void 0, !1, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 82,
              columnNumber: 19
            }, this) }, void 0, !1, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 81,
              columnNumber: 17
            }, this),
            /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("td", { children: discountPercentage ? /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("span", { children: [
              "-",
              discountPercentage,
              "% OFF"
            ] }, void 0, !0, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 86,
              columnNumber: 21
            }, this) : discountValue && /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)(Money, { data: discountValue }, void 0, !1, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 88,
              columnNumber: 38
            }, this) }, void 0, !1, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 84,
              columnNumber: 17
            }, this)
          ] }, void 0, !0, {
            fileName: "app/routes/($locale).account.orders.$id.jsx",
            lineNumber: 77,
            columnNumber: 15
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("tr", { children: [
            /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("th", { scope: "row", colSpan: 3, children: /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("p", { children: "Subtotal" }, void 0, !1, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 95,
              columnNumber: 17
            }, this) }, void 0, !1, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 94,
              columnNumber: 15
            }, this),
            /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("th", { scope: "row", children: /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("p", { children: "Subtotal" }, void 0, !1, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 98,
              columnNumber: 17
            }, this) }, void 0, !1, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 97,
              columnNumber: 15
            }, this),
            /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("td", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)(Money, { data: order2.subtotalPriceV2 }, void 0, !1, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 101,
              columnNumber: 17
            }, this) }, void 0, !1, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 100,
              columnNumber: 15
            }, this)
          ] }, void 0, !0, {
            fileName: "app/routes/($locale).account.orders.$id.jsx",
            lineNumber: 93,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("tr", { children: [
            /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("th", { scope: "row", colSpan: 3, children: "Tax" }, void 0, !1, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 105,
              columnNumber: 15
            }, this),
            /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("th", { scope: "row", children: /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("p", { children: "Tax" }, void 0, !1, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 109,
              columnNumber: 17
            }, this) }, void 0, !1, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 108,
              columnNumber: 15
            }, this),
            /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("td", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)(Money, { data: order2.totalTaxV2 }, void 0, !1, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 112,
              columnNumber: 17
            }, this) }, void 0, !1, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 111,
              columnNumber: 15
            }, this)
          ] }, void 0, !0, {
            fileName: "app/routes/($locale).account.orders.$id.jsx",
            lineNumber: 104,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("tr", { children: [
            /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("th", { scope: "row", colSpan: 3, children: "Total" }, void 0, !1, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 116,
              columnNumber: 15
            }, this),
            /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("th", { scope: "row", children: /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("p", { children: "Total" }, void 0, !1, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 120,
              columnNumber: 17
            }, this) }, void 0, !1, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 119,
              columnNumber: 15
            }, this),
            /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("td", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)(Money, { data: order2.totalPriceV2 }, void 0, !1, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 123,
              columnNumber: 17
            }, this) }, void 0, !1, {
              fileName: "app/routes/($locale).account.orders.$id.jsx",
              lineNumber: 122,
              columnNumber: 15
            }, this)
          ] }, void 0, !0, {
            fileName: "app/routes/($locale).account.orders.$id.jsx",
            lineNumber: 115,
            columnNumber: 13
          }, this)
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).account.orders.$id.jsx",
          lineNumber: 74,
          columnNumber: 11
        }, this)
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).account.orders.$id.jsx",
        lineNumber: 59,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("div", { children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("h3", { children: "Shipping Address" }, void 0, !1, {
          fileName: "app/routes/($locale).account.orders.$id.jsx",
          lineNumber: 129,
          columnNumber: 11
        }, this),
        order2 != null && order2.shippingAddress ? /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("address", { children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("p", { children: [
            order2.shippingAddress.firstName && order2.shippingAddress.firstName + " ",
            order2.shippingAddress.lastName
          ] }, void 0, !0, {
            fileName: "app/routes/($locale).account.orders.$id.jsx",
            lineNumber: 132,
            columnNumber: 15
          }, this),
          (_a2 = order2 == null ? void 0 : order2.shippingAddress) != null && _a2.formatted ? order2.shippingAddress.formatted.map((line) => /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("p", { children: line }, line, !1, {
            fileName: "app/routes/($locale).account.orders.$id.jsx",
            lineNumber: 139,
            columnNumber: 19
          }, this)) : /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)(import_jsx_dev_runtime23.Fragment, {}, void 0, !1, {
            fileName: "app/routes/($locale).account.orders.$id.jsx",
            lineNumber: 142,
            columnNumber: 17
          }, this)
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).account.orders.$id.jsx",
          lineNumber: 131,
          columnNumber: 13
        }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("p", { children: "No shipping address defined" }, void 0, !1, {
          fileName: "app/routes/($locale).account.orders.$id.jsx",
          lineNumber: 146,
          columnNumber: 13
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("h3", { children: "Status" }, void 0, !1, {
          fileName: "app/routes/($locale).account.orders.$id.jsx",
          lineNumber: 148,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("div", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("p", { children: order2.fulfillmentStatus }, void 0, !1, {
          fileName: "app/routes/($locale).account.orders.$id.jsx",
          lineNumber: 150,
          columnNumber: 13
        }, this) }, void 0, !1, {
          fileName: "app/routes/($locale).account.orders.$id.jsx",
          lineNumber: 149,
          columnNumber: 11
        }, this)
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).account.orders.$id.jsx",
        lineNumber: 128,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).account.orders.$id.jsx",
      lineNumber: 58,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("br", {}, void 0, !1, {
      fileName: "app/routes/($locale).account.orders.$id.jsx",
      lineNumber: 154,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("p", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("a", { target: "_blank", href: order2.statusUrl, rel: "noreferrer", children: "View Order Status \u2192" }, void 0, !1, {
      fileName: "app/routes/($locale).account.orders.$id.jsx",
      lineNumber: 156,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale).account.orders.$id.jsx",
      lineNumber: 155,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).account.orders.$id.jsx",
    lineNumber: 54,
    columnNumber: 5
  }, this);
}
function OrderLineRow({ lineItem }) {
  var _a2;
  return /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("tr", { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("td", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("div", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)(Link2, { to: `/products/${lineItem.variant.product.handle}`, children: ((_a2 = lineItem == null ? void 0 : lineItem.variant) == null ? void 0 : _a2.image) && /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("div", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)(Image, { data: lineItem.variant.image, width: 96, height: 96 }, void 0, !1, {
        fileName: "app/routes/($locale).account.orders.$id.jsx",
        lineNumber: 172,
        columnNumber: 17
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale).account.orders.$id.jsx",
        lineNumber: 171,
        columnNumber: 15
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale).account.orders.$id.jsx",
        lineNumber: 169,
        columnNumber: 11
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("div", { children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("p", { children: lineItem.title }, void 0, !1, {
          fileName: "app/routes/($locale).account.orders.$id.jsx",
          lineNumber: 177,
          columnNumber: 13
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("small", { children: lineItem.variant.title }, void 0, !1, {
          fileName: "app/routes/($locale).account.orders.$id.jsx",
          lineNumber: 178,
          columnNumber: 13
        }, this)
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).account.orders.$id.jsx",
        lineNumber: 176,
        columnNumber: 11
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).account.orders.$id.jsx",
      lineNumber: 168,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale).account.orders.$id.jsx",
      lineNumber: 167,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("td", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)(Money, { data: lineItem.variant.price }, void 0, !1, {
      fileName: "app/routes/($locale).account.orders.$id.jsx",
      lineNumber: 183,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale).account.orders.$id.jsx",
      lineNumber: 182,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("td", { children: lineItem.quantity }, void 0, !1, {
      fileName: "app/routes/($locale).account.orders.$id.jsx",
      lineNumber: 185,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)("td", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime23.jsxDEV)(Money, { data: lineItem.discountedTotalPrice }, void 0, !1, {
      fileName: "app/routes/($locale).account.orders.$id.jsx",
      lineNumber: 187,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale).account.orders.$id.jsx",
      lineNumber: 186,
      columnNumber: 7
    }, this)
  ] }, lineItem.variant.id, !0, {
    fileName: "app/routes/($locale).account.orders.$id.jsx",
    lineNumber: 166,
    columnNumber: 5
  }, this);
}
var CUSTOMER_ORDER_QUERY = `#graphql
  fragment OrderMoney on MoneyV2 {
    amount
    currencyCode
  }
  fragment AddressFull on MailingAddress {
    address1
    address2
    city
    company
    country
    countryCodeV2
    firstName
    formatted
    id
    lastName
    name
    phone
    province
    provinceCode
    zip
  }
  fragment DiscountApplication on DiscountApplication {
    value {
      __typename
      ... on MoneyV2 {
        ...OrderMoney
      }
      ... on PricingPercentageValue {
        percentage
      }
    }
  }
  fragment OrderLineProductVariant on ProductVariant {
    id
    image {
      altText
      height
      url
      id
      width
    }
    price {
      ...OrderMoney
    }
    product {
      handle
    }
    sku
    title
  }
  fragment OrderLineItemFull on OrderLineItem {
    title
    quantity
    discountAllocations {
      allocatedAmount {
        ...OrderMoney
      }
      discountApplication {
        ...DiscountApplication
      }
    }
    originalTotalPrice {
      ...OrderMoney
    }
    discountedTotalPrice {
      ...OrderMoney
    }
    variant {
      ...OrderLineProductVariant
    }
  }
  fragment Order on Order {
    id
    name
    orderNumber
    statusUrl
    processedAt
    fulfillmentStatus
    totalTaxV2 {
      ...OrderMoney
    }
    totalPriceV2 {
      ...OrderMoney
    }
    subtotalPriceV2 {
      ...OrderMoney
    }
    shippingAddress {
      ...AddressFull
    }
    discountApplications(first: 100) {
      nodes {
        ...DiscountApplication
      }
    }
    lineItems(first: 100) {
      nodes {
        ...OrderLineItemFull
      }
    }
  }
  query Order(
    $country: CountryCode
    $language: LanguageCode
    $orderId: ID!
  ) @inContext(country: $country, language: $language) {
    order: node(id: $orderId) {
      ... on Order {
        ...Order
      }
    }
  }
`;

// app/routes/($locale).collections._index.jsx
var locale_collections_index_exports = {};
__export(locale_collections_index_exports, {
  default: () => Collections,
  loader: () => loader9
});
var import_jsx_dev_runtime24 = __toESM(require_jsx_dev_runtime());
async function loader9({ context, request }) {
  let paginationVariables = getPaginationVariables(request, {
    pageBy: 100
  }), { collections } = await context.storefront.query(COLLECTIONS_QUERY, {
    variables: paginationVariables
  });
  return json3({ collections });
}
function Collections() {
  let { collections } = useLoaderData2();
  return /* @__PURE__ */ (0, import_jsx_dev_runtime24.jsxDEV)("div", { className: "collections", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime24.jsxDEV)("h1", { className: "mst-color", children: "Collections" }, void 0, !1, {
      fileName: "app/routes/($locale).collections._index.jsx",
      lineNumber: 22,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime24.jsxDEV)(Pagination, { connection: collections, children: ({ nodes, isLoading, PreviousLink, NextLink }) => /* @__PURE__ */ (0, import_jsx_dev_runtime24.jsxDEV)("div", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime24.jsxDEV)(PreviousLink, { children: isLoading ? "Loading..." : /* @__PURE__ */ (0, import_jsx_dev_runtime24.jsxDEV)("div", { className: "flex justify-center mt-8", children: "\u2191 Load previous" }, void 0, !1, {
        fileName: "app/routes/($locale).collections._index.jsx",
        lineNumber: 27,
        columnNumber: 43
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale).collections._index.jsx",
        lineNumber: 26,
        columnNumber: 13
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime24.jsxDEV)(CollectionsGrid, { collections: nodes }, void 0, !1, {
        fileName: "app/routes/($locale).collections._index.jsx",
        lineNumber: 29,
        columnNumber: 13
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime24.jsxDEV)(NextLink, { children: isLoading ? "Loading..." : /* @__PURE__ */ (0, import_jsx_dev_runtime24.jsxDEV)("div", { className: "flex justify-center mt-8", children: "Load more \u2193" }, void 0, !1, {
        fileName: "app/routes/($locale).collections._index.jsx",
        lineNumber: 31,
        columnNumber: 43
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale).collections._index.jsx",
        lineNumber: 30,
        columnNumber: 13
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).collections._index.jsx",
      lineNumber: 25,
      columnNumber: 11
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale).collections._index.jsx",
      lineNumber: 23,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).collections._index.jsx",
    lineNumber: 21,
    columnNumber: 5
  }, this);
}
function CollectionsGrid({ collections }) {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime24.jsxDEV)("div", { className: "grid grid-cols-4 gap-4 px-5", children: collections.map((collection, index3) => /* @__PURE__ */ (0, import_jsx_dev_runtime24.jsxDEV)(
    CollectionItem,
    {
      collection,
      index: index3
    },
    collection.id,
    !1,
    {
      fileName: "app/routes/($locale).collections._index.jsx",
      lineNumber: 44,
      columnNumber: 11
    },
    this
  )) }, void 0, !1, {
    fileName: "app/routes/($locale).collections._index.jsx",
    lineNumber: 42,
    columnNumber: 5
  }, this);
}
function CollectionItem({ collection, index: index3 }) {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime24.jsxDEV)(
    Link2,
    {
      className: "collection-item mst-card-md hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700",
      to: `/collections/${collection.handle}`,
      prefetch: "intent",
      children: [
        collection.image ? /* @__PURE__ */ (0, import_jsx_dev_runtime24.jsxDEV)(
          Image,
          {
            alt: collection.image.altText || collection.title,
            aspectRatio: "1/1",
            data: collection.image ? collection.image : "",
            loading: index3 < 3 ? "eager" : void 0
          },
          void 0,
          !1,
          {
            fileName: "app/routes/($locale).collections._index.jsx",
            lineNumber: 63,
            columnNumber: 9
          },
          this
        ) : /* @__PURE__ */ (0, import_jsx_dev_runtime24.jsxDEV)("img", { src: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/No-image-found.jpg?v=1708942129" }, void 0, !1, {
          fileName: "app/routes/($locale).collections._index.jsx",
          lineNumber: 70,
          columnNumber: 7
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime24.jsxDEV)("h5", { children: collection.title }, void 0, !1, {
          fileName: "app/routes/($locale).collections._index.jsx",
          lineNumber: 72,
          columnNumber: 7
        }, this)
      ]
    },
    collection.id,
    !0,
    {
      fileName: "app/routes/($locale).collections._index.jsx",
      lineNumber: 56,
      columnNumber: 5
    },
    this
  );
}
var COLLECTIONS_QUERY = `#graphql
  fragment Collection on Collection {
    id
    title
    handle
    image {
      id
      url
      altText
      width
      height
    }
  }
  query StoreCollections(
    $country: CountryCode
    $endCursor: String
    $first: Int
    $language: LanguageCode
    $last: Int
    $startCursor: String
  ) @inContext(country: $country, language: $language) {
    collections(
      first: $first,
      last: $last,
      before: $startCursor,
      after: $endCursor
    ) {
      nodes {
        ...Collection
      }
      pageInfo {
        hasNextPage
        hasPreviousPage
        startCursor
        endCursor
      }
    }
  }
`;

// app/routes/($locale).account.addresses.jsx
var locale_account_addresses_exports = {};
__export(locale_account_addresses_exports, {
  AddressForm: () => AddressForm,
  action: () => action4,
  default: () => Addresses,
  loader: () => loader10,
  meta: () => meta9
});
var import_jsx_dev_runtime25 = __toESM(require_jsx_dev_runtime()), meta9 = () => [{ title: "Addresses" }];
async function loader10({ context }) {
  let { session } = context;
  return await session.get("customerAccessToken") ? json3({}) : redirect4("/account/login");
}
async function action4({ request, context }) {
  var _a2, _b, _c, _d, _e3;
  let { storefront, session } = context;
  try {
    let form = await request.formData(), addressId = form.has("addressId") ? String(form.get("addressId")) : null;
    if (!addressId)
      throw new Error("You must provide an address id.");
    let customerAccessToken = await session.get("customerAccessToken");
    if (!customerAccessToken)
      return json3({ error: { [addressId]: "Unauthorized" } }, { status: 401 });
    let { accessToken } = customerAccessToken, defaultAddress = form.has("defaultAddress") ? String(form.get("defaultAddress")) === "on" : null, address = {}, keys2 = [
      "address1",
      "address2",
      "city",
      "company",
      "country",
      "firstName",
      "lastName",
      "phone",
      "province",
      "zip"
    ];
    for (let key of keys2) {
      let value = form.get(key);
      typeof value == "string" && (address[key] = value);
    }
    switch (request.method) {
      case "POST":
        try {
          let { customerAddressCreate } = await storefront.mutate(
            CREATE_ADDRESS_MUTATION,
            {
              variables: { customerAccessToken: accessToken, address }
            }
          );
          if ((_a2 = customerAddressCreate == null ? void 0 : customerAddressCreate.customerUserErrors) != null && _a2.length) {
            let error = customerAddressCreate.customerUserErrors[0];
            throw new Error(error.message);
          }
          let createdAddress = customerAddressCreate == null ? void 0 : customerAddressCreate.customerAddress;
          if (!(createdAddress != null && createdAddress.id))
            throw new Error(
              "Expected customer address to be created, but the id is missing"
            );
          if (defaultAddress) {
            let createdAddressId = decodeURIComponent(createdAddress.id), { customerDefaultAddressUpdate } = await storefront.mutate(
              UPDATE_DEFAULT_ADDRESS_MUTATION,
              {
                variables: {
                  customerAccessToken: accessToken,
                  addressId: createdAddressId
                }
              }
            );
            if ((_b = customerDefaultAddressUpdate == null ? void 0 : customerDefaultAddressUpdate.customerUserErrors) != null && _b.length) {
              let error = customerDefaultAddressUpdate.customerUserErrors[0];
              throw new Error(error.message);
            }
          }
          return json3({ error: null, createdAddress, defaultAddress });
        } catch (error) {
          return error instanceof Error ? json3({ error: { [addressId]: error.message } }, { status: 400 }) : json3({ error: { [addressId]: error } }, { status: 400 });
        }
      case "PUT":
        try {
          let { customerAddressUpdate } = await storefront.mutate(
            UPDATE_ADDRESS_MUTATION,
            {
              variables: {
                address,
                customerAccessToken: accessToken,
                id: decodeURIComponent(addressId)
              }
            }
          ), updatedAddress = customerAddressUpdate == null ? void 0 : customerAddressUpdate.customerAddress;
          if ((_c = customerAddressUpdate == null ? void 0 : customerAddressUpdate.customerUserErrors) != null && _c.length) {
            let error = customerAddressUpdate.customerUserErrors[0];
            throw new Error(error.message);
          }
          if (defaultAddress) {
            let { customerDefaultAddressUpdate } = await storefront.mutate(
              UPDATE_DEFAULT_ADDRESS_MUTATION,
              {
                variables: {
                  customerAccessToken: accessToken,
                  addressId: decodeURIComponent(addressId)
                }
              }
            );
            if ((_d = customerDefaultAddressUpdate == null ? void 0 : customerDefaultAddressUpdate.customerUserErrors) != null && _d.length) {
              let error = customerDefaultAddressUpdate.customerUserErrors[0];
              throw new Error(error.message);
            }
          }
          return json3({ error: null, updatedAddress, defaultAddress });
        } catch (error) {
          return error instanceof Error ? json3({ error: { [addressId]: error.message } }, { status: 400 }) : json3({ error: { [addressId]: error } }, { status: 400 });
        }
      case "DELETE":
        try {
          let { customerAddressDelete } = await storefront.mutate(
            DELETE_ADDRESS_MUTATION,
            {
              variables: { customerAccessToken: accessToken, id: addressId }
            }
          );
          if ((_e3 = customerAddressDelete == null ? void 0 : customerAddressDelete.customerUserErrors) != null && _e3.length) {
            let error = customerAddressDelete.customerUserErrors[0];
            throw new Error(error.message);
          }
          return json3({ error: null, deletedAddress: addressId });
        } catch (error) {
          return error instanceof Error ? json3({ error: { [addressId]: error.message } }, { status: 400 }) : json3({ error: { [addressId]: error } }, { status: 400 });
        }
      default:
        return json3(
          { error: { [addressId]: "Method not allowed" } },
          { status: 405 }
        );
    }
  } catch (error) {
    return error instanceof Error ? json3({ error: error.message }, { status: 400 }) : json3({ error }, { status: 400 });
  }
}
function Addresses() {
  let { customer } = useOutletContext(), { defaultAddress, addresses } = customer;
  return /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("div", { className: "account-addresses", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("h2", { children: "Addresses" }, void 0, !1, {
      fileName: "app/routes/($locale).account.addresses.jsx",
      lineNumber: 206,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("br", {}, void 0, !1, {
      fileName: "app/routes/($locale).account.addresses.jsx",
      lineNumber: 207,
      columnNumber: 7
    }, this),
    addresses.nodes.length ? /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("div", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("div", { children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("legend", { children: "Create address" }, void 0, !1, {
          fileName: "app/routes/($locale).account.addresses.jsx",
          lineNumber: 213,
          columnNumber: 13
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)(NewAddressForm, {}, void 0, !1, {
          fileName: "app/routes/($locale).account.addresses.jsx",
          lineNumber: 214,
          columnNumber: 13
        }, this)
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).account.addresses.jsx",
        lineNumber: 212,
        columnNumber: 11
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("br", {}, void 0, !1, {
        fileName: "app/routes/($locale).account.addresses.jsx",
        lineNumber: 216,
        columnNumber: 11
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("hr", {}, void 0, !1, {
        fileName: "app/routes/($locale).account.addresses.jsx",
        lineNumber: 217,
        columnNumber: 11
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("br", {}, void 0, !1, {
        fileName: "app/routes/($locale).account.addresses.jsx",
        lineNumber: 218,
        columnNumber: 11
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)(
        ExistingAddresses,
        {
          addresses,
          defaultAddress
        },
        void 0,
        !1,
        {
          fileName: "app/routes/($locale).account.addresses.jsx",
          lineNumber: 219,
          columnNumber: 11
        },
        this
      )
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).account.addresses.jsx",
      lineNumber: 211,
      columnNumber: 9
    }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("p", { children: "You have no addresses saved." }, void 0, !1, {
      fileName: "app/routes/($locale).account.addresses.jsx",
      lineNumber: 209,
      columnNumber: 9
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).account.addresses.jsx",
    lineNumber: 205,
    columnNumber: 5
  }, this);
}
function NewAddressForm() {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)(AddressForm, { address: {
    address1: "",
    address2: "",
    city: "",
    company: "",
    country: "",
    firstName: "",
    id: "new",
    lastName: "",
    phone: "",
    province: "",
    zip: ""
  }, defaultAddress: null, children: ({ stateForMethod }) => /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("div", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)(
    "button",
    {
      disabled: stateForMethod("POST") !== "idle",
      formMethod: "POST",
      type: "submit",
      children: stateForMethod("POST") !== "idle" ? "Creating" : "Create"
    },
    void 0,
    !1,
    {
      fileName: "app/routes/($locale).account.addresses.jsx",
      lineNumber: 248,
      columnNumber: 11
    },
    this
  ) }, void 0, !1, {
    fileName: "app/routes/($locale).account.addresses.jsx",
    lineNumber: 247,
    columnNumber: 9
  }, this) }, void 0, !1, {
    fileName: "app/routes/($locale).account.addresses.jsx",
    lineNumber: 245,
    columnNumber: 5
  }, this);
}
function ExistingAddresses({ addresses, defaultAddress }) {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("div", { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("legend", { children: "Existing addresses" }, void 0, !1, {
      fileName: "app/routes/($locale).account.addresses.jsx",
      lineNumber: 264,
      columnNumber: 7
    }, this),
    addresses.nodes.map((address) => /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)(
      AddressForm,
      {
        address,
        defaultAddress,
        children: ({ stateForMethod }) => /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)(
            "button",
            {
              disabled: stateForMethod("PUT") !== "idle",
              formMethod: "PUT",
              type: "submit",
              children: stateForMethod("PUT") !== "idle" ? "Saving" : "Save"
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).account.addresses.jsx",
              lineNumber: 273,
              columnNumber: 15
            },
            this
          ),
          /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)(
            "button",
            {
              disabled: stateForMethod("DELETE") !== "idle",
              formMethod: "DELETE",
              type: "submit",
              children: stateForMethod("DELETE") !== "idle" ? "Deleting" : "Delete"
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).account.addresses.jsx",
              lineNumber: 280,
              columnNumber: 15
            },
            this
          )
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).account.addresses.jsx",
          lineNumber: 272,
          columnNumber: 13
        }, this)
      },
      address.id,
      !1,
      {
        fileName: "app/routes/($locale).account.addresses.jsx",
        lineNumber: 266,
        columnNumber: 9
      },
      this
    ))
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).account.addresses.jsx",
    lineNumber: 263,
    columnNumber: 5
  }, this);
}
function AddressForm({ address, defaultAddress, children }) {
  var _a2;
  let { state, formMethod } = useNavigation(), action12 = useActionData2(), error = (_a2 = action12 == null ? void 0 : action12.error) == null ? void 0 : _a2[address.id], isDefaultAddress = (defaultAddress == null ? void 0 : defaultAddress.id) === address.id;
  return /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)(Form, { id: address.id, children: /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("fieldset", { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("input", { type: "hidden", name: "addressId", defaultValue: address.id }, void 0, !1, {
      fileName: "app/routes/($locale).account.addresses.jsx",
      lineNumber: 303,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("label", { htmlFor: "firstName", children: "First name*" }, void 0, !1, {
      fileName: "app/routes/($locale).account.addresses.jsx",
      lineNumber: 304,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)(
      "input",
      {
        "aria-label": "First name",
        autoComplete: "given-name",
        defaultValue: (address == null ? void 0 : address.firstName) ?? "",
        id: "firstName",
        name: "firstName",
        placeholder: "First name",
        required: !0,
        type: "text"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).account.addresses.jsx",
        lineNumber: 305,
        columnNumber: 9
      },
      this
    ),
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("label", { htmlFor: "lastName", children: "Last name*" }, void 0, !1, {
      fileName: "app/routes/($locale).account.addresses.jsx",
      lineNumber: 315,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)(
      "input",
      {
        "aria-label": "Last name",
        autoComplete: "family-name",
        defaultValue: (address == null ? void 0 : address.lastName) ?? "",
        id: "lastName",
        name: "lastName",
        placeholder: "Last name",
        required: !0,
        type: "text"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).account.addresses.jsx",
        lineNumber: 316,
        columnNumber: 9
      },
      this
    ),
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("label", { htmlFor: "company", children: "Company" }, void 0, !1, {
      fileName: "app/routes/($locale).account.addresses.jsx",
      lineNumber: 326,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)(
      "input",
      {
        "aria-label": "Company",
        autoComplete: "organization",
        defaultValue: (address == null ? void 0 : address.company) ?? "",
        id: "company",
        name: "company",
        placeholder: "Company",
        type: "text"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).account.addresses.jsx",
        lineNumber: 327,
        columnNumber: 9
      },
      this
    ),
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("label", { htmlFor: "address1", children: "Address line*" }, void 0, !1, {
      fileName: "app/routes/($locale).account.addresses.jsx",
      lineNumber: 336,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)(
      "input",
      {
        "aria-label": "Address line 1",
        autoComplete: "address-line1",
        defaultValue: (address == null ? void 0 : address.address1) ?? "",
        id: "address1",
        name: "address1",
        placeholder: "Address line 1*",
        required: !0,
        type: "text"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).account.addresses.jsx",
        lineNumber: 337,
        columnNumber: 9
      },
      this
    ),
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("label", { htmlFor: "address2", children: "Address line 2" }, void 0, !1, {
      fileName: "app/routes/($locale).account.addresses.jsx",
      lineNumber: 347,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)(
      "input",
      {
        "aria-label": "Address line 2",
        autoComplete: "address-line2",
        defaultValue: (address == null ? void 0 : address.address2) ?? "",
        id: "address2",
        name: "address2",
        placeholder: "Address line 2",
        type: "text"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).account.addresses.jsx",
        lineNumber: 348,
        columnNumber: 9
      },
      this
    ),
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("label", { htmlFor: "city", children: "City*" }, void 0, !1, {
      fileName: "app/routes/($locale).account.addresses.jsx",
      lineNumber: 357,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)(
      "input",
      {
        "aria-label": "City",
        autoComplete: "address-level2",
        defaultValue: (address == null ? void 0 : address.city) ?? "",
        id: "city",
        name: "city",
        placeholder: "City",
        required: !0,
        type: "text"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).account.addresses.jsx",
        lineNumber: 358,
        columnNumber: 9
      },
      this
    ),
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("label", { htmlFor: "province", children: "State / Province*" }, void 0, !1, {
      fileName: "app/routes/($locale).account.addresses.jsx",
      lineNumber: 368,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)(
      "input",
      {
        "aria-label": "State",
        autoComplete: "address-level1",
        defaultValue: (address == null ? void 0 : address.province) ?? "",
        id: "province",
        name: "province",
        placeholder: "State / Province",
        required: !0,
        type: "text"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).account.addresses.jsx",
        lineNumber: 369,
        columnNumber: 9
      },
      this
    ),
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("label", { htmlFor: "zip", children: "Zip / Postal Code*" }, void 0, !1, {
      fileName: "app/routes/($locale).account.addresses.jsx",
      lineNumber: 379,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)(
      "input",
      {
        "aria-label": "Zip",
        autoComplete: "postal-code",
        defaultValue: (address == null ? void 0 : address.zip) ?? "",
        id: "zip",
        name: "zip",
        placeholder: "Zip / Postal Code",
        required: !0,
        type: "text"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).account.addresses.jsx",
        lineNumber: 380,
        columnNumber: 9
      },
      this
    ),
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("label", { htmlFor: "country", children: "Country*" }, void 0, !1, {
      fileName: "app/routes/($locale).account.addresses.jsx",
      lineNumber: 390,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)(
      "input",
      {
        "aria-label": "Country",
        autoComplete: "country-name",
        defaultValue: (address == null ? void 0 : address.country) ?? "",
        id: "country",
        name: "country",
        placeholder: "Country",
        required: !0,
        type: "text"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).account.addresses.jsx",
        lineNumber: 391,
        columnNumber: 9
      },
      this
    ),
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("label", { htmlFor: "phone", children: "Phone" }, void 0, !1, {
      fileName: "app/routes/($locale).account.addresses.jsx",
      lineNumber: 401,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)(
      "input",
      {
        "aria-label": "Phone",
        autoComplete: "tel",
        defaultValue: (address == null ? void 0 : address.phone) ?? "",
        id: "phone",
        name: "phone",
        placeholder: "+16135551111",
        pattern: "^\\+?[1-9]\\d{3,14}$",
        type: "tel"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).account.addresses.jsx",
        lineNumber: 402,
        columnNumber: 9
      },
      this
    ),
    /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("div", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)(
        "input",
        {
          defaultChecked: isDefaultAddress,
          id: "defaultAddress",
          name: "defaultAddress",
          type: "checkbox"
        },
        void 0,
        !1,
        {
          fileName: "app/routes/($locale).account.addresses.jsx",
          lineNumber: 413,
          columnNumber: 11
        },
        this
      ),
      /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("label", { htmlFor: "defaultAddress", children: "Set as default address" }, void 0, !1, {
        fileName: "app/routes/($locale).account.addresses.jsx",
        lineNumber: 419,
        columnNumber: 11
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).account.addresses.jsx",
      lineNumber: 412,
      columnNumber: 9
    }, this),
    error ? /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("p", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("mark", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("small", { children: error }, void 0, !1, {
      fileName: "app/routes/($locale).account.addresses.jsx",
      lineNumber: 424,
      columnNumber: 15
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale).account.addresses.jsx",
      lineNumber: 423,
      columnNumber: 13
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale).account.addresses.jsx",
      lineNumber: 422,
      columnNumber: 11
    }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime25.jsxDEV)("br", {}, void 0, !1, {
      fileName: "app/routes/($locale).account.addresses.jsx",
      lineNumber: 428,
      columnNumber: 11
    }, this),
    children({
      stateForMethod: (method) => formMethod === method ? state : "idle"
    })
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).account.addresses.jsx",
    lineNumber: 302,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/routes/($locale).account.addresses.jsx",
    lineNumber: 301,
    columnNumber: 5
  }, this);
}
var UPDATE_ADDRESS_MUTATION = `#graphql
  mutation customerAddressUpdate(
    $address: MailingAddressInput!
    $customerAccessToken: String!
    $id: ID!
    $country: CountryCode
    $language: LanguageCode
 ) @inContext(country: $country, language: $language) {
    customerAddressUpdate(
      address: $address
      customerAccessToken: $customerAccessToken
      id: $id
    ) {
      customerAddress {
        id
      }
      customerUserErrors {
        code
        field
        message
      }
    }
  }
`, DELETE_ADDRESS_MUTATION = `#graphql
  mutation customerAddressDelete(
    $customerAccessToken: String!,
    $id: ID!,
    $country: CountryCode,
    $language: LanguageCode
  ) @inContext(country: $country, language: $language) {
    customerAddressDelete(customerAccessToken: $customerAccessToken, id: $id) {
      customerUserErrors {
        code
        field
        message
      }
      deletedCustomerAddressId
    }
  }
`, UPDATE_DEFAULT_ADDRESS_MUTATION = `#graphql
  mutation customerDefaultAddressUpdate(
    $addressId: ID!
    $customerAccessToken: String!
    $country: CountryCode
    $language: LanguageCode
  ) @inContext(country: $country, language: $language) {
    customerDefaultAddressUpdate(
      addressId: $addressId
      customerAccessToken: $customerAccessToken
    ) {
      customer {
        defaultAddress {
          id
        }
      }
      customerUserErrors {
        code
        field
        message
      }
    }
  }
`, CREATE_ADDRESS_MUTATION = `#graphql
  mutation customerAddressCreate(
    $address: MailingAddressInput!
    $customerAccessToken: String!
    $country: CountryCode
    $language: LanguageCode
  ) @inContext(country: $country, language: $language) {
    customerAddressCreate(
      address: $address
      customerAccessToken: $customerAccessToken
    ) {
      customerAddress {
        id
      }
      customerUserErrors {
        code
        field
        message
      }
    }
  }
`;

// app/routes/($locale).account_.register.jsx
var locale_account_register_exports = {};
__export(locale_account_register_exports, {
  action: () => action5,
  default: () => Register,
  loader: () => loader11
});
var import_jsx_dev_runtime26 = __toESM(require_jsx_dev_runtime());
async function loader11({ context }) {
  return await context.session.get("customerAccessToken") ? redirect4("/account") : json3({});
}
var action5 = async ({ request, context }) => {
  var _a2, _b;
  if (request.method !== "POST")
    return json3({ error: "Method not allowed" }, { status: 405 });
  let { storefront, session } = context, form = await request.formData(), email = String(form.has("email") ? form.get("email") : ""), password = form.has("password") ? String(form.get("password")) : null, passwordConfirm = form.has("passwordConfirm") ? String(form.get("passwordConfirm")) : null, validPasswords = password && passwordConfirm && password === passwordConfirm, validInputs = Boolean(email && password);
  try {
    if (!validPasswords)
      throw new Error("Passwords do not match");
    if (!validInputs)
      throw new Error("Please provide both an email and a password.");
    let { customerCreate } = await storefront.mutate(CUSTOMER_CREATE_MUTATION, {
      variables: {
        input: { email, password }
      }
    });
    if ((_a2 = customerCreate == null ? void 0 : customerCreate.customerUserErrors) != null && _a2.length)
      throw new Error(customerCreate == null ? void 0 : customerCreate.customerUserErrors[0].message);
    let newCustomer = customerCreate == null ? void 0 : customerCreate.customer;
    if (!(newCustomer != null && newCustomer.id))
      throw new Error("Could not create customer");
    let { customerAccessTokenCreate } = await storefront.mutate(
      REGISTER_LOGIN_MUTATION,
      {
        variables: {
          input: {
            email,
            password
          }
        }
      }
    );
    if (!((_b = customerAccessTokenCreate == null ? void 0 : customerAccessTokenCreate.customerAccessToken) != null && _b.accessToken))
      throw new Error("Missing access token");
    return session.set(
      "customerAccessToken",
      customerAccessTokenCreate == null ? void 0 : customerAccessTokenCreate.customerAccessToken
    ), json3(
      { error: null, newCustomer },
      {
        status: 302,
        headers: {
          "Set-Cookie": await session.commit(),
          Location: "/account"
        }
      }
    );
  } catch (error) {
    return error instanceof Error ? json3({ error: error.message }, { status: 400 }) : json3({ error }, { status: 400 });
  }
};
function Register() {
  let data2 = useActionData2(), error = (data2 == null ? void 0 : data2.error) || null;
  return /* @__PURE__ */ (0, import_jsx_dev_runtime26.jsxDEV)(import_jsx_dev_runtime26.Fragment, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime26.jsxDEV)("div", { className: "flex flex-col sm:flex-row", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime26.jsxDEV)("div", { className: "sm:w-2/3  sm:block", children: /* @__PURE__ */ (0, import_jsx_dev_runtime26.jsxDEV)(
      "img",
      {
        src: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/LoginSideImg-Photoroom_1_2.png?v=1709296234",
        alt: "Login Background",
        className: "w-full h-full object-cover"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).account_.register.jsx",
        lineNumber: 157,
        columnNumber: 7
      },
      this
    ) }, void 0, !1, {
      fileName: "app/routes/($locale).account_.register.jsx",
      lineNumber: 156,
      columnNumber: 5
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime26.jsxDEV)("div", { className: "w-full justify-center items-center flex flex-col", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime26.jsxDEV)(Form, { className: "w-full justify-center items-center login_wrapper", method: "POST", children: /* @__PURE__ */ (0, import_jsx_dev_runtime26.jsxDEV)("fieldset", { children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime26.jsxDEV)("div", { className: "mb-3", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime26.jsxDEV)("label", { className: "block text-gray-700 text-sm font-bold mb-2", for: "username", children: "Email" }, void 0, !1, {
            fileName: "app/routes/($locale).account_.register.jsx",
            lineNumber: 167,
            columnNumber: 11
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime26.jsxDEV)(
            "input",
            {
              className: "shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline",
              id: "email",
              name: "email",
              type: "email",
              autoComplete: "email",
              placeholder: "Email address",
              "aria-label": "Email address",
              required: !0
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).account_.register.jsx",
              lineNumber: 170,
              columnNumber: 11
            },
            this
          )
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).account_.register.jsx",
          lineNumber: 166,
          columnNumber: 9
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime26.jsxDEV)("div", { className: "mb-4", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime26.jsxDEV)("label", { className: "block text-gray-700 text-sm font-bold mb-2", for: "password", children: "Password" }, void 0, !1, {
            fileName: "app/routes/($locale).account_.register.jsx",
            lineNumber: 180,
            columnNumber: 11
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime26.jsxDEV)(
            "input",
            {
              className: "shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline",
              id: "password",
              name: "password",
              type: "password",
              autoComplete: "current-password",
              placeholder: "Password",
              "aria-label": "Password",
              minLength: 8,
              required: !0
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).account_.register.jsx",
              lineNumber: 183,
              columnNumber: 11
            },
            this
          ),
          error ? /* @__PURE__ */ (0, import_jsx_dev_runtime26.jsxDEV)("p", { className: "text-red-500 text-xs italic", children: error }, void 0, !1, {
            fileName: "app/routes/($locale).account_.register.jsx",
            lineNumber: 193,
            columnNumber: 15
          }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime26.jsxDEV)("br", {}, void 0, !1, {
            fileName: "app/routes/($locale).account_.register.jsx",
            lineNumber: 195,
            columnNumber: 15
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime26.jsxDEV)("label", { htmlFor: "passwordConfirm", children: "Re-enter password" }, void 0, !1, {
            fileName: "app/routes/($locale).account_.register.jsx",
            lineNumber: 197,
            columnNumber: 11
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime26.jsxDEV)(
            "input",
            {
              className: "shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline",
              id: "passwordConfirm",
              name: "passwordConfirm",
              type: "password",
              autoComplete: "current-password",
              placeholder: "Re-enter password",
              "aria-label": "Re-enter password",
              minLength: 8,
              required: !0
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).account_.register.jsx",
              lineNumber: 198,
              columnNumber: 15
            },
            this
          )
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).account_.register.jsx",
          lineNumber: 179,
          columnNumber: 9
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime26.jsxDEV)("div", { className: "flex items-center justify-between", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime26.jsxDEV)("button", { className: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline", type: "submit", children: "Register" }, void 0, !1, {
            fileName: "app/routes/($locale).account_.register.jsx",
            lineNumber: 210,
            columnNumber: 11
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime26.jsxDEV)("a", { className: "inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800", href: "/account/recover", children: "Forgot Password?" }, void 0, !1, {
            fileName: "app/routes/($locale).account_.register.jsx",
            lineNumber: 213,
            columnNumber: 11
          }, this)
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).account_.register.jsx",
          lineNumber: 209,
          columnNumber: 9
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime26.jsxDEV)("a", { className: "py-4 text-blue-500", href: "/account/login", children: " Login " }, void 0, !1, {
          fileName: "app/routes/($locale).account_.register.jsx",
          lineNumber: 217,
          columnNumber: 9
        }, this)
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).account_.register.jsx",
        lineNumber: 165,
        columnNumber: 7
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale).account_.register.jsx",
        lineNumber: 164,
        columnNumber: 7
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime26.jsxDEV)("p", { className: "text-center text-gray-500 text-xs", children: "\xA92023. All rights reserved." }, void 0, !1, {
        fileName: "app/routes/($locale).account_.register.jsx",
        lineNumber: 220,
        columnNumber: 5
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).account_.register.jsx",
      lineNumber: 163,
      columnNumber: 5
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).account_.register.jsx",
    lineNumber: 155,
    columnNumber: 5
  }, this) }, void 0, !1, {
    fileName: "app/routes/($locale).account_.register.jsx",
    lineNumber: 98,
    columnNumber: 5
  }, this);
}
var CUSTOMER_CREATE_MUTATION = `#graphql
  mutation customerCreate(
    $input: CustomerCreateInput!,
    $country: CountryCode,
    $language: LanguageCode
  ) @inContext(country: $country, language: $language) {
    customerCreate(input: $input) {
      customer {
        id
      }
      customerUserErrors {
        code
        field
        message
      }
    }
  }
`, REGISTER_LOGIN_MUTATION = `#graphql
  mutation registerLogin(
    $input: CustomerAccessTokenCreateInput!,
    $country: CountryCode,
    $language: LanguageCode
  ) @inContext(country: $country, language: $language) {
    customerAccessTokenCreate(input: $input) {
      customerUserErrors {
        code
        field
        message
      }
      customerAccessToken {
        accessToken
        expiresAt
      }
    }
  }
`;

// app/routes/($locale).account_.recover.jsx
var locale_account_recover_exports = {};
__export(locale_account_recover_exports, {
  action: () => action6,
  default: () => Recover,
  loader: () => loader12
});
var import_jsx_dev_runtime27 = __toESM(require_jsx_dev_runtime());
async function loader12({ context }) {
  return await context.session.get("customerAccessToken") ? redirect4("/account") : json3({});
}
async function action6({ request, context }) {
  let { storefront } = context, form = await request.formData(), email = form.has("email") ? String(form.get("email")) : null;
  if (request.method !== "POST")
    return json3({ error: "Method not allowed" }, { status: 405 });
  try {
    if (!email)
      throw new Error("Please provide an email.");
    return await storefront.mutate(CUSTOMER_RECOVER_MUTATION, {
      variables: { email }
    }), json3({ resetRequested: !0 });
  } catch (error) {
    return error instanceof Error ? json3({ error: error.message, resetRequested: !1 }, { status: 400 }) : json3({ error, resetRequested: !1 }, { status: 400 });
  }
}
function Recover() {
  let action12 = useActionData2();
  return /* @__PURE__ */ (0, import_jsx_dev_runtime27.jsxDEV)(import_jsx_dev_runtime27.Fragment, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime27.jsxDEV)("div", { className: "flex flex-col sm:flex-row", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime27.jsxDEV)("div", { className: "sm:w-1/2  sm:block", children: /* @__PURE__ */ (0, import_jsx_dev_runtime27.jsxDEV)(
      "img",
      {
        src: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/LoginSideImg-Photoroom_1_2.png?v=1709296234",
        alt: "Login Background",
        className: "w-full h-full object-cover"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).account_.recover.jsx",
        lineNumber: 105,
        columnNumber: 9
      },
      this
    ) }, void 0, !1, {
      fileName: "app/routes/($locale).account_.recover.jsx",
      lineNumber: 103,
      columnNumber: 1
    }, this),
    action12 != null && action12.resetRequested ? /* @__PURE__ */ (0, import_jsx_dev_runtime27.jsxDEV)(import_jsx_dev_runtime27.Fragment, { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime27.jsxDEV)("h1", { children: "Request Sent." }, void 0, !1, {
        fileName: "app/routes/($locale).account_.recover.jsx",
        lineNumber: 113,
        columnNumber: 13
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime27.jsxDEV)("p", { children: "If that email address is in our system, you will receive an email with instructions about how to reset your password in a few minutes." }, void 0, !1, {
        fileName: "app/routes/($locale).account_.recover.jsx",
        lineNumber: 114,
        columnNumber: 13
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime27.jsxDEV)("br", {}, void 0, !1, {
        fileName: "app/routes/($locale).account_.recover.jsx",
        lineNumber: 119,
        columnNumber: 13
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime27.jsxDEV)(Link2, { to: "/account/login", children: "Return to Login" }, void 0, !1, {
        fileName: "app/routes/($locale).account_.recover.jsx",
        lineNumber: 120,
        columnNumber: 13
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).account_.recover.jsx",
      lineNumber: 112,
      columnNumber: 11
    }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime27.jsxDEV)("div", { className: "w-full justify-center items-center flex flex-col", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime27.jsxDEV)(Form, { className: "w-full justify-center items-center login_wrapper", method: "POST", children: /* @__PURE__ */ (0, import_jsx_dev_runtime27.jsxDEV)("fieldset", { children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime27.jsxDEV)("div", { className: "mb-3", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime27.jsxDEV)("label", { className: "block text-gray-700 text-sm font-bold mb-2", for: "username", children: "Email" }, void 0, !1, {
            fileName: "app/routes/($locale).account_.recover.jsx",
            lineNumber: 127,
            columnNumber: 7
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime27.jsxDEV)(
            "input",
            {
              className: "shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline",
              "aria-label": "Email address",
              autoComplete: "email",
              autoFocus: !0,
              id: "email",
              name: "email",
              placeholder: "Email address",
              required: !0,
              type: "email"
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).account_.recover.jsx",
              lineNumber: 130,
              columnNumber: 7
            },
            this
          )
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).account_.recover.jsx",
          lineNumber: 126,
          columnNumber: 5
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime27.jsxDEV)("div", { className: "flex items-center justify-between", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime27.jsxDEV)("button", { className: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline", type: "submit", children: "Request Reset Link" }, void 0, !1, {
            fileName: "app/routes/($locale).account_.recover.jsx",
            lineNumber: 142,
            columnNumber: 7
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime27.jsxDEV)("a", { className: "inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800", href: "/account/login", children: "Login" }, void 0, !1, {
            fileName: "app/routes/($locale).account_.recover.jsx",
            lineNumber: 145,
            columnNumber: 7
          }, this)
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).account_.recover.jsx",
          lineNumber: 141,
          columnNumber: 5
        }, this)
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).account_.recover.jsx",
        lineNumber: 125,
        columnNumber: 4
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale).account_.recover.jsx",
        lineNumber: 124,
        columnNumber: 3
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime27.jsxDEV)("p", { className: "text-center text-gray-500 text-xs", children: "\xA92023. All rights reserved." }, void 0, !1, {
        fileName: "app/routes/($locale).account_.recover.jsx",
        lineNumber: 152,
        columnNumber: 3
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).account_.recover.jsx",
      lineNumber: 123,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).account_.recover.jsx",
    lineNumber: 102,
    columnNumber: 15
  }, this) }, void 0, !1, {
    fileName: "app/routes/($locale).account_.recover.jsx",
    lineNumber: 44,
    columnNumber: 5
  }, this);
}
var CUSTOMER_RECOVER_MUTATION = `#graphql
  mutation customerRecover(
    $email: String!,
    $country: CountryCode,
    $language: LanguageCode
  ) @inContext(country: $country, language: $language) {
    customerRecover(email: $email) {
      customerUserErrors {
        code
        field
        message
      }
    }
  }
`;

// app/routes/($locale).policies.$handle.jsx
var locale_policies_handle_exports = {};
__export(locale_policies_handle_exports, {
  default: () => Policy,
  loader: () => loader13,
  meta: () => meta10
});
var import_jsx_dev_runtime28 = __toESM(require_jsx_dev_runtime()), meta10 = ({ data: data2 }) => [{ title: `Hydrogen | ${data2.policy.title}` }];
async function loader13({ params, context }) {
  var _a2, _b;
  if (!params.handle)
    throw new Response("No handle was passed in", { status: 404 });
  let policyName = params.handle.replace(
    /-([a-z])/g,
    (_3, m1) => m1.toUpperCase()
  ), policy = (_b = (await context.storefront.query(POLICY_CONTENT_QUERY, {
    variables: {
      privacyPolicy: !1,
      shippingPolicy: !1,
      termsOfService: !1,
      refundPolicy: !1,
      [policyName]: !0,
      language: (_a2 = context.storefront.i18n) == null ? void 0 : _a2.language
    }
  })).shop) == null ? void 0 : _b[policyName];
  if (!policy)
    throw new Response("Could not find the policy", { status: 404 });
  return json3({ policy });
}
function Policy() {
  let { policy } = useLoaderData2();
  return /* @__PURE__ */ (0, import_jsx_dev_runtime28.jsxDEV)("div", { className: "policy", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime28.jsxDEV)("br", {}, void 0, !1, {
      fileName: "app/routes/($locale).policies.$handle.jsx",
      lineNumber: 42,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime28.jsxDEV)("br", {}, void 0, !1, {
      fileName: "app/routes/($locale).policies.$handle.jsx",
      lineNumber: 43,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime28.jsxDEV)("div", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime28.jsxDEV)(Link2, { to: "/policies", children: "\u2190 Back to Policies" }, void 0, !1, {
      fileName: "app/routes/($locale).policies.$handle.jsx",
      lineNumber: 45,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale).policies.$handle.jsx",
      lineNumber: 44,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime28.jsxDEV)("br", {}, void 0, !1, {
      fileName: "app/routes/($locale).policies.$handle.jsx",
      lineNumber: 47,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime28.jsxDEV)("h1", { children: policy.title }, void 0, !1, {
      fileName: "app/routes/($locale).policies.$handle.jsx",
      lineNumber: 48,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime28.jsxDEV)("div", { dangerouslySetInnerHTML: { __html: policy.body } }, void 0, !1, {
      fileName: "app/routes/($locale).policies.$handle.jsx",
      lineNumber: 49,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).policies.$handle.jsx",
    lineNumber: 41,
    columnNumber: 5
  }, this);
}
var POLICY_CONTENT_QUERY = `#graphql
  fragment Policy on ShopPolicy {
    body
    handle
    id
    title
    url
  }
  query Policy(
    $country: CountryCode
    $language: LanguageCode
    $privacyPolicy: Boolean!
    $refundPolicy: Boolean!
    $shippingPolicy: Boolean!
    $termsOfService: Boolean!
  ) @inContext(language: $language, country: $country) {
    shop {
      privacyPolicy @include(if: $privacyPolicy) {
        ...Policy
      }
      shippingPolicy @include(if: $shippingPolicy) {
        ...Policy
      }
      termsOfService @include(if: $termsOfService) {
        ...Policy
      }
      refundPolicy @include(if: $refundPolicy) {
        ...Policy
      }
    }
  }
`;

// app/routes/($locale).products.$handle.jsx
var locale_products_handle_exports = {};
__export(locale_products_handle_exports, {
  default: () => Product2,
  loader: () => loader14,
  meta: () => meta11
});
var import_react83 = __toESM(require_react());
var import_react85 = __toESM(require_react());
var import_jsx_dev_runtime29 = __toESM(require_jsx_dev_runtime()), meta11 = ({ data: data2, location }) => {
  let desc = data2.seo.description.length ? data2.seo.description.substring(0, 150) : "Desciption not available", metaD = { title: data2.seo.title, description: desc + "..." };
  return getSeoMeta(metaD).map((meta21) => ({
    ...meta21,
    rel: "canonical",
    href: meta21.href
  }));
};
function getLastQueryParam2(params) {
  let lastParam = Array.from(params.entries()).pop();
  return lastParam ? { key: lastParam[0], value: lastParam[1] } : null;
}
async function loader14({ params, request, context }) {
  let { handle } = params, { storefront } = context, selectedOptions = getSelectedProductOptions(request).filter(
    (option) => (
      // Filter out Shopify predictive search query params
      !option.name.startsWith("_sid") && !option.name.startsWith("_pos") && !option.name.startsWith("_psq") && !option.name.startsWith("_ss") && !option.name.startsWith("_v")
    )
  );
  if (!handle)
    throw new Error("Expected product handle to be defined");
  let { product } = await storefront.query(PRODUCT_QUERY2, {
    variables: { handle, selectedOptions }
  }), productsreturn = (await storefront.query(PRODUCTS_QUERY2)).products, variants = await storefront.query(VARIANTS_QUERY2, {
    variables: { handle }
  });
  if (!(product != null && product.id))
    throw new Response(null, { status: 404 });
  let firstVariant = product.variants.nodes[0], firstVariantIsDefault = Boolean(
    firstVariant.selectedOptions.find(
      (option) => option.name === "Title" && option.value === "Default Title"
    )
  ), url = new URL(request.url), searchParams = new URLSearchParams(url.search), opt = getLastQueryParam2(searchParams);
  if (firstVariantIsDefault)
    product.selectedVariant = firstVariant;
  else if (opt) {
    let filterVar = variants.product.variants.nodes.filter((node) => node.selectedOptions.find((option) => option.name === opt.key && option.value === opt.value));
    product.selectedVariant = filterVar.length > 0 ? filterVar[0] : variants.product.variants.nodes[0];
  } else
    product.selectedVariant = firstVariant;
  let { collections } = await storefront.query(FEATURED_COLLECTION_QUERY2), recommendedProducts = collections, seo = {
    title: product.title,
    description: product.description
  };
  return defer3({ product, variants, productsreturn, recommendedProducts, seo });
}
function Product2() {
  let { product, variants, productsreturn, recommendedProducts } = useLoaderData2(), { selectedVariant } = product, [activeVariant, setActiveVar] = (0, import_react85.useState)([]), shareUrl = `https://15f63f.myshopify.com/products/${product.handle}`, [socialCount, setSocialCount] = (0, import_react85.useState)();
  return (0, import_react83.useEffect)(() => {
    setActiveVar(selectedVariant);
  }, [selectedVariant, product]), /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(import_jsx_dev_runtime29.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
      ProductMain2,
      {
        selectedVariant: activeVariant,
        product,
        variants,
        shareUrl,
        recommendedProducts
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 147,
        columnNumber: 7
      },
      this
    ),
    productsreturn && /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(ProductsCorousel_default, { products: productsreturn }, void 0, !1, {
      fileName: "app/routes/($locale).products.$handle.jsx",
      lineNumber: 154,
      columnNumber: 26
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).products.$handle.jsx",
    lineNumber: 146,
    columnNumber: 5
  }, this);
}
function ProductImage2({ image, activeImg, setActiveImage, product }) {
  let ImageSrc = [];
  product.images.edges.forEach((item) => {
    ImageSrc.push(item.node.url);
  });
  let [images, setImages] = (0, import_react85.useState)(ImageSrc);
  return image ? /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(import_jsx_dev_runtime29.Fragment, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "lg:grid flex flex-col-reverse lg:grid-cols-[20%_80%] gap-2 lg:gap-0 items-center", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "flex  lg:flex-col  justify-between lg:h-[325px] overflow-x-auto gap-[5px]", children: product.images.edges && product.images.edges.map((item, index3) => /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
      "img",
      {
        src: images[index3],
        alt: "",
        className: "w-24 h-24 rounded-md cursor-pointer product-image-caro ",
        onClick: () => setActiveImage(images[index3])
      },
      `prod_${index3}`,
      !1,
      {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 178,
        columnNumber: 15
      },
      this
    )) }, void 0, !1, {
      fileName: "app/routes/($locale).products.$handle.jsx",
      lineNumber: 175,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
      "img",
      {
        src: activeImg,
        alt: "",
        className: "w-[90%] border border-[#e5e5e5] h-full aspect-square object-cover rounded-xl p-[10px] border-1 border-[#e5e5e5] hover:scale-x-125 md:hover:scale-125 transition duration-300 cursor-pointer mst-card"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 187,
        columnNumber: 9
      },
      this
    )
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).products.$handle.jsx",
    lineNumber: 174,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/routes/($locale).products.$handle.jsx",
    lineNumber: 173,
    columnNumber: 5
  }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "" }, void 0, !1, {
    fileName: "app/routes/($locale).products.$handle.jsx",
    lineNumber: 170,
    columnNumber: 12
  }, this);
}
function ProductMain2({ selectedVariant, product, shareUrl, variants, recommendedProducts }) {
  var _a2, _b, _c, _d, _e3, _f;
  let ImageSrc = [];
  product.images.edges.forEach((item) => {
    ImageSrc.push(item.node.url);
  });
  let [images, setImages] = (0, import_react85.useState)(ImageSrc), expaction = (_a2 = product.metafields[0]) == null ? void 0 : _a2.value, key_ingredients = (_b = product.metafields[1]) == null ? void 0 : _b.value, How_To_use = (_c = product.metafields[2]) == null ? void 0 : _c.value, who_can_use = (_d = product.metafields[3]) == null ? void 0 : _d.value, why_us = (_e3 = product.metafields[4]) == null ? void 0 : _e3.value, ingredient = (_f = product.metafields[5]) == null ? void 0 : _f.value, [activeTab, setActiveTab] = (0, import_react85.useState)("Ingredient"), handleTabClick = (tab) => {
    setActiveTab(tab);
  }, [activeImg, setActiveImage] = (0, import_react85.useState)(images[0]), [moreText, setMoreText] = (0, import_react85.useState)(!0);
  return /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(import_jsx_dev_runtime29.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "flex m-[2%] gap-2 items-center", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(Link2, { className: "mst-color", to: "/", children: "Home" }, void 0, !1, {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 221,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("img", { src: "/next.png", alt: "next", width: 20, height: 20 }, void 0, !1, {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 222,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("span", { className: "font-semibold mst-color", children: "Product page" }, void 0, !1, {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 223,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).products.$handle.jsx",
      lineNumber: 220,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "final-product mst-card-shadow shadow-lg p-4 flex flex-col justify-between lg:flex-row lg:gap-8 lg:ml-8 lg:mr-8 items-start relative", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "flex flex-col gap-6 lg:w-2/4 flex-wrap items-center lg:sticky top-[240px]", children: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
        ProductImage2,
        {
          image: selectedVariant == null ? void 0 : selectedVariant.image,
          product,
          activeImg,
          setActiveImage
        },
        void 0,
        !1,
        {
          fileName: "app/routes/($locale).products.$handle.jsx",
          lineNumber: 234,
          columnNumber: 11
        },
        this
      ) }, void 0, !1, {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 226,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "flex flex-col lg:w-3/4", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("h1", { className: "text-2xl font-bold mt-0 mb-0", children: product.title }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle.jsx",
            lineNumber: 244,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "flex py-2 px-2", children: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
            c,
            {
              productId: product.id,
              okendoStarRatingSnippet: product.okendoStarRatingSnippet
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).products.$handle.jsx",
              lineNumber: 248,
              columnNumber: 13
            },
            this
          ) }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle.jsx",
            lineNumber: 247,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(ProductPrice2, { selectedVariant }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle.jsx",
            lineNumber: 253,
            columnNumber: 13
          }, this)
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).products.$handle.jsx",
          lineNumber: 243,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
          import_react83.Suspense,
          {
            fallback: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
              ProductForm2,
              {
                product,
                selectedVariant,
                variants: [],
                activeImg,
                setActiveImage
              },
              void 0,
              !1,
              {
                fileName: "app/routes/($locale).products.$handle.jsx",
                lineNumber: 258,
                columnNumber: 17
              },
              this
            ),
            children: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
              Await2,
              {
                errorElement: "There was a problem loading product variants",
                resolve: variants,
                children: (data2) => {
                  var _a3;
                  return /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
                    ProductForm2,
                    {
                      product,
                      selectedVariant,
                      activeImg,
                      setActiveImage,
                      variants: ((_a3 = data2.product) == null ? void 0 : _a3.variants.nodes) || []
                    },
                    void 0,
                    !1,
                    {
                      fileName: "app/routes/($locale).products.$handle.jsx",
                      lineNumber: 272,
                      columnNumber: 19
                    },
                    this
                  );
                }
              },
              void 0,
              !1,
              {
                fileName: "app/routes/($locale).products.$handle.jsx",
                lineNumber: 267,
                columnNumber: 15
              },
              this
            )
          },
          void 0,
          !1,
          {
            fileName: "app/routes/($locale).products.$handle.jsx",
            lineNumber: 256,
            columnNumber: 13
          },
          this
        ) }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle.jsx",
          lineNumber: 255,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "grid grid-cols-4 gap-4 p-4 border-dotted mt-4", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("img", { src: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/Vegetarian.jpg?v=1712825726" }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle.jsx",
            lineNumber: 284,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("img", { src: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/Cruelty-Free.jpg?v=1712825726" }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle.jsx",
            lineNumber: 285,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("img", { src: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/High_Quality.jpg?v=1712825727" }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle.jsx",
            lineNumber: 286,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("img", { src: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/Suitable_for_all_Skin_Types.jpg?v=1715852367" }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle.jsx",
            lineNumber: 287,
            columnNumber: 13
          }, this)
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).products.$handle.jsx",
          lineNumber: 283,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("h2", { className: "mt-[10px]", children: "Product Description" }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle.jsx",
          lineNumber: 289,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "shadow-p relative p-4 sm:p-0", children: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "product_desc", dangerouslySetInnerHTML: { __html: product.descriptionHtml } }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle.jsx",
          lineNumber: 291,
          columnNumber: 13
        }, this) }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle.jsx",
          lineNumber: 290,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "flex", children: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
          d,
          {
            productId: product.id,
            okendoReviewsSnippet: product.okendoReviewsSnippet
          },
          void 0,
          !1,
          {
            fileName: "app/routes/($locale).products.$handle.jsx",
            lineNumber: 302,
            columnNumber: 11
          },
          this
        ) }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle.jsx",
          lineNumber: 301,
          columnNumber: 11
        }, this)
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 242,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "absolute cursor-pointer group flex flex-col items-center top-[-36px] lg:top-[15px] right-2", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
          "img",
          {
            className: "sharelogo mst-color",
            src: "/share.png",
            width: 22,
            height: 22,
            alt: "share"
          },
          void 0,
          !1,
          {
            fileName: "app/routes/($locale).products.$handle.jsx",
            lineNumber: 309,
            columnNumber: 11
          },
          this
        ),
        /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("span", { className: "text-sm font-semibold ", children: "Share" }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle.jsx",
          lineNumber: 316,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "hidden group-hover:block", style: { background: "#0000", height: "100vh", width: "100%" }, children: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "flex gap-2 m-2", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
            FacebookShareButton$1,
            {
              url: shareUrl,
              quote: "Title",
              hashtag: "#product...",
              children: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(FacebookIcon$1, { size: 25, round: !0 }, void 0, !1, {
                fileName: "app/routes/($locale).products.$handle.jsx",
                lineNumber: 324,
                columnNumber: 11
              }, this)
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).products.$handle.jsx",
              lineNumber: 319,
              columnNumber: 11
            },
            this
          ),
          /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
            WhatsappShareButton$1,
            {
              url: shareUrl,
              quote: "Title",
              hashtag: "#product...",
              children: [
                /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(WhatsappIcon$1, { size: 25, round: !0 }, void 0, !1, {
                  fileName: "app/routes/($locale).products.$handle.jsx",
                  lineNumber: 332,
                  columnNumber: 11
                }, this),
                " "
              ]
            },
            void 0,
            !0,
            {
              fileName: "app/routes/($locale).products.$handle.jsx",
              lineNumber: 327,
              columnNumber: 11
            },
            this
          )
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).products.$handle.jsx",
          lineNumber: 318,
          columnNumber: 11
        }, this) }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle.jsx",
          lineNumber: 317,
          columnNumber: 11
        }, this)
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 308,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).products.$handle.jsx",
      lineNumber: 225,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "max-w-[1320px] p-[10px] m-auto", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("h2", { className: "text-center lg:text-2xl mt-[4%] mb-[2%] uppercase", children: "Key Features" }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle.jsx",
          lineNumber: 339,
          columnNumber: 11
        }, this),
        expaction && /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
          "div",
          {
            className: "expect",
            dangerouslySetInnerHTML: { __html: expaction }
          },
          void 0,
          !1,
          {
            fileName: "app/routes/($locale).products.$handle.jsx",
            lineNumber: 343,
            columnNumber: 13
          },
          this
        )
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 338,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "container mx-auto mt-5 p-5", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("h1", { className: "lg:text-3xl font-semibold mb-4 text-center mt-[4%] mb-[2%] uppercase", children: "Product Information" }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle.jsx",
          lineNumber: 350,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "grid grid-cols-2 sm:grid-cols-4 overflow-y-auto lg:justify-center gap-2", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
            "div",
            {
              className: `cursor-pointer py-2 px-2 border-b-4 uppercase whitespace-nowrap ${activeTab === "Ingredient" ? "border-active" : ""}`,
              onClick: () => handleTabClick("Ingredient"),
              style: { border: "1px solid #e5e5e5" },
              children: "Ingredients"
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).products.$handle.jsx",
              lineNumber: 354,
              columnNumber: 13
            },
            this
          ),
          /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
            "div",
            {
              style: { border: "1px solid #e5e5e5" },
              className: `cursor-pointer py-2 px-2 border-b-4 uppercase whitespace-nowrap ${activeTab === "How to Use" ? "border-active" : ""}`,
              onClick: () => handleTabClick("How to Use"),
              children: "How to Use"
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).products.$handle.jsx",
              lineNumber: 363,
              columnNumber: 13
            },
            this
          ),
          /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
            "div",
            {
              className: `cursor-pointer py-2 px-2 border-b-4 uppercase whitespace-nowrap ${activeTab === "Who Can Use" ? "border-active" : ""}`,
              onClick: () => handleTabClick("Who Can Use"),
              style: { border: "1px solid #e5e5e5" },
              children: "Who Can Use"
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).products.$handle.jsx",
              lineNumber: 373,
              columnNumber: 13
            },
            this
          ),
          /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
            "div",
            {
              className: `cursor-pointer py-2 px-2 border-b-4 uppercase whitespace-nowrap ${activeTab === "Why us" ? "border-active" : ""}`,
              onClick: () => handleTabClick("Why us"),
              style: { border: "1px solid #e5e5e5" },
              children: "Why us"
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).products.$handle.jsx",
              lineNumber: 382,
              columnNumber: 13
            },
            this
          )
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).products.$handle.jsx",
          lineNumber: 353,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "mt-4", children: [
          activeTab === "Key Ingredients" && key_ingredients && /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "overflow-y-auto overflow-x-auto", children: key_ingredients && /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
            "div",
            {
              className: "expect",
              dangerouslySetInnerHTML: { __html: key_ingredients }
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).products.$handle.jsx",
              lineNumber: 396,
              columnNumber: 19
            },
            this
          ) }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle.jsx",
            lineNumber: 394,
            columnNumber: 15
          }, this),
          activeTab === "How to Use" && How_To_use && /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "meta_info_card overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
            "div",
            {
              className: "key-ing",
              dangerouslySetInnerHTML: { __html: How_To_use }
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).products.$handle.jsx",
              lineNumber: 405,
              columnNumber: 17
            },
            this
          ) }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle.jsx",
            lineNumber: 404,
            columnNumber: 15
          }, this),
          activeTab === "Who Can Use" && who_can_use && /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "meta_info_card overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { dangerouslySetInnerHTML: { __html: who_can_use } }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle.jsx",
            lineNumber: 413,
            columnNumber: 17
          }, this) }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle.jsx",
            lineNumber: 412,
            columnNumber: 15
          }, this),
          activeTab === "Ingredient" && ingredient && /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { style: { maxWidth: "100%" }, dangerouslySetInnerHTML: { __html: ingredient } }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle.jsx",
            lineNumber: 418,
            columnNumber: 17
          }, this) }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle.jsx",
            lineNumber: 417,
            columnNumber: 15
          }, this),
          activeTab === "meta_info_card Why us" && why_us && /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { dangerouslySetInnerHTML: { __html: why_us } }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle.jsx",
            lineNumber: 423,
            columnNumber: 17
          }, this) }, void 0, !1, {
            fileName: "app/routes/($locale).products.$handle.jsx",
            lineNumber: 422,
            columnNumber: 15
          }, this)
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).products.$handle.jsx",
          lineNumber: 392,
          columnNumber: 11
        }, this)
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 349,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).products.$handle.jsx",
      lineNumber: 337,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "recommended_products", children: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
      RecommendedProducts2,
      {
        products: recommendedProducts.nodes[0].products,
        title: "Recommended Products"
      },
      recommendedProducts.nodes[0].id,
      !1,
      {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 430,
        columnNumber: 7
      },
      this
    ) }, void 0, !1, {
      fileName: "app/routes/($locale).products.$handle.jsx",
      lineNumber: 429,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).products.$handle.jsx",
    lineNumber: 218,
    columnNumber: 5
  }, this);
}
function ProductPrice2({ selectedVariant }) {
  var _a2, _b;
  let price = Math.trunc((_a2 = selectedVariant == null ? void 0 : selectedVariant.price) == null ? void 0 : _a2.amount), compareAtPrice = Math.trunc((_b = selectedVariant == null ? void 0 : selectedVariant.compareAtPrice) == null ? void 0 : _b.amount), calculatePer = () => {
    let per = (compareAtPrice - price) / compareAtPrice * 100;
    return Math.trunc(per);
  };
  return /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "product-price flex gap-[10px] mb-2 text-xl", children: selectedVariant != null && selectedVariant.compareAtPrice ? /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(import_jsx_dev_runtime29.Fragment, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "product-price-on-sale font-semibold flex items-center", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("h1", { className: "m-0", children: selectedVariant ? /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(Money, { withoutTrailingZeros: !0, data: selectedVariant.price }, void 0, !1, {
      fileName: "app/routes/($locale).products.$handle.jsx",
      lineNumber: 454,
      columnNumber: 52
    }, this) : null }, void 0, !1, {
      fileName: "app/routes/($locale).products.$handle.jsx",
      lineNumber: 454,
      columnNumber: 13
    }, this),
    "\xA0",
    /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("s", { className: "opacity-50", children: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(Money, { withoutTrailingZeros: !0, data: selectedVariant.compareAtPrice }, void 0, !1, {
      fileName: "app/routes/($locale).products.$handle.jsx",
      lineNumber: 457,
      columnNumber: 15
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale).products.$handle.jsx",
      lineNumber: 456,
      columnNumber: 13
    }, this),
    "\xA0",
    /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("b", { className: "text-red-500", children: [
      " (",
      calculatePer(),
      " % Off) "
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).products.$handle.jsx",
      lineNumber: 460,
      columnNumber: 13
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).products.$handle.jsx",
    lineNumber: 453,
    columnNumber: 11
  }, this) }, void 0, !1, {
    fileName: "app/routes/($locale).products.$handle.jsx",
    lineNumber: 452,
    columnNumber: 9
  }, this) : (selectedVariant == null ? void 0 : selectedVariant.price) && /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("h1", { className: "m-0", children: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(Money, { withoutTrailingZeros: !0, className: "font-semibold", data: selectedVariant == null ? void 0 : selectedVariant.price }, void 0, !1, {
    fileName: "app/routes/($locale).products.$handle.jsx",
    lineNumber: 465,
    columnNumber: 31
  }, this) }, void 0, !1, {
    fileName: "app/routes/($locale).products.$handle.jsx",
    lineNumber: 465,
    columnNumber: 11
  }, this) }, void 0, !1, {
    fileName: "app/routes/($locale).products.$handle.jsx",
    lineNumber: 450,
    columnNumber: 5
  }, this);
}
function ProductForm2({
  product,
  selectedVariant,
  variants,
  activeImg,
  setActiveImage
}) {
  let [pincode, setPinCode] = (0, import_react85.useState)(""), [serviceble, setServiceble] = (0, import_react85.useState)({ status: null, msg: "" }), handlePinChange = (e5) => {
    setPinCode(e5.target.value);
  }, getEstimatedDate = (edd) => {
    let date = /* @__PURE__ */ new Date();
    return date.setDate(date.getDate() + edd), new Intl.DateTimeFormat("en-US", {
      year: "numeric",
      month: "long",
      day: "numeric"
    }).format(new Date(date));
  }, checkAvailibility = () => {
    fetch("https://appapi.shipdelight.com/generate-token?api_key=65eaba0ac23f74c2d7346965", { method: "POST" }).then((res) => res.json()).then((result) => {
      let { success, data: data2 } = result;
      if (success) {
        let headers = {
          "Content-Type": "application/json",
          Authorization: `Bearer ${data2.access_token}`
        }, params = {
          pickup_pincode: 400009,
          delivery_pincode: parseInt(pincode),
          pay_type: "PPD",
          service_type: "F",
          courier_service_type: "AIR"
        };
        fetch("https://appapi.shipdelight.com/serviceability_tat", { method: "POST", headers, body: JSON.stringify(params) }).then((res) => res.json()).then((result2) => {
          let { data: data3, errors } = result2;
          if (errors != null && errors.length)
            setServiceble({ status: !1, msg: "Invalid Pincode" });
          else {
            let isServicebale = data3 == null ? void 0 : data3.response.delivery_pincode_serviceable;
            var estimateDate = getEstimatedDate(data3 == null ? void 0 : data3.response.edd);
            let msg = data3 != null && data3.response.delivery_pincode_serviceable ? estimateDate : "Service is not available at this location";
            setServiceble({ status: isServicebale, msg });
          }
          setTimeout(() => {
            setServiceble({ status: null, msg: "" });
          }, 5e3);
        });
      }
    });
  }, closeRef = (0, import_react83.useRef)(null);
  return /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "product-form", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
      VariantSelector,
      {
        handle: product.handle,
        options: product.options,
        variants,
        children: ({ option }) => /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
          ProductOptions2,
          {
            optionValues: product.options,
            option,
            activeImg,
            closeRef,
            selectedVariant,
            setActiveImage
          },
          option.name,
          !1,
          {
            fileName: "app/routes/($locale).products.$handle.jsx",
            lineNumber: 539,
            columnNumber: 11
          },
          this
        )
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 532,
        columnNumber: 7
      },
      this
    ),
    /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("br", {}, void 0, !1, {
      fileName: "app/routes/($locale).products.$handle.jsx",
      lineNumber: 550,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "mb-2", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("p", { children: " Check Availibility / Estimated Delivery " }, void 0, !1, {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 557,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "flex items-baseline", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("input", { className: "w-48 sm:w-[320px] block rounded-bl-lg rounded-tl-lg border bg-transparent bg-clip-padding  text-base font-normal leading-[1.6] text-neutral-700 outline-none transition duration-200 ease-in-out focus:z-[3]  focus:text-neutral-700 focus:outline-none dark:border-neutral-600 dark:text-neutral-200 dark:placeholder:text-neutral-200 mst-card", value: pincode, onChange: handlePinChange, type: "text", placeholder: "Enter your pincode" }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle.jsx",
          lineNumber: 559,
          columnNumber: 9
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("button", { onClick: () => checkAvailibility(), className: "w-[130px] sm:w-[150px] m-4 h-11 bg-black hover:bg-blue-700 text-white font-bold py-1 px-4 rounded-lg", children: " Check Now " }, void 0, !1, {
          fileName: "app/routes/($locale).products.$handle.jsx",
          lineNumber: 560,
          columnNumber: 9
        }, this)
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 558,
        columnNumber: 9
      }, this),
      serviceble.status != null && /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("p", { className: `font-bold ${serviceble.status ? "text-green-500" : "text-orange-500"}`, children: [
        " Estimated Delivery : ",
        serviceble.msg,
        " "
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 563,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).products.$handle.jsx",
      lineNumber: 556,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
      AddToCartButton2,
      {
        disabled: !selectedVariant || !selectedVariant.availableForSale,
        onClick: () => {
          window.location.href = window.location.href + "#cart-aside";
        },
        lines: selectedVariant ? [
          {
            merchandiseId: selectedVariant.id,
            quantity: 1
          }
        ] : [],
        children: selectedVariant != null && selectedVariant.availableForSale ? "ADD TO CART" : "Sold out"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 566,
        columnNumber: 7
      },
      this
    )
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).products.$handle.jsx",
    lineNumber: 531,
    columnNumber: 5
  }, this);
}
function ProductOptions2({ option, optionValues, activeImg, closeRef, setActiveImage, selectedVariant }) {
  let [selectedVar, setVar] = (0, import_react85.useState)({ 0: !0 });
  (0, import_react83.useEffect)(() => {
    var _a2;
    setActiveImage((_a2 = selectedVariant == null ? void 0 : selectedVariant.image) == null ? void 0 : _a2.url);
  }, [selectedVariant]);
  let setImg = (index3) => {
    setVar({ [index3]: !0 });
  }, swatches = optionValues[0].optionValues;
  return /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(import_jsx_dev_runtime29.Fragment, { children: option.name !== "Title" && /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "product-options", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("h5", { className: "font-semibold", children: option.name }, void 0, !1, {
      fileName: "app/routes/($locale).products.$handle.jsx",
      lineNumber: 602,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "product-options-grid items-center", children: option.values.map(({ value, isAvailable, isActive, to }, index3) => {
      var _a2, _b;
      return /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { style: {
        padding: "4px",
        border: selectedVar[index3] ? "1px solid #d0715f" : "1px solid transparent",
        borderRadius: "5px"
      }, children: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
        Link2,
        {
          ref: closeRef,
          className: "product-options-item color-swatch",
          prefetch: "intent",
          replace: !0,
          preventScrollReset: !0,
          to,
          style: {
            backgroundColor: (_b = (_a2 = swatches[index3]) == null ? void 0 : _a2.swatch) == null ? void 0 : _b.color,
            width: "40px"
          },
          onClick: () => setImg(index3)
        },
        option.name + value,
        !1,
        {
          fileName: "app/routes/($locale).products.$handle.jsx",
          lineNumber: 613,
          columnNumber: 15
        },
        this
      ) }, `p-opts_${index3}`, !1, {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 606,
        columnNumber: 15
      }, this);
    }) }, void 0, !1, {
      fileName: "app/routes/($locale).products.$handle.jsx",
      lineNumber: 603,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("br", {}, void 0, !1, {
      fileName: "app/routes/($locale).products.$handle.jsx",
      lineNumber: 634,
      columnNumber: 9
    }, this)
  ] }, option.name, !0, {
    fileName: "app/routes/($locale).products.$handle.jsx",
    lineNumber: 601,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/routes/($locale).products.$handle.jsx",
    lineNumber: 599,
    columnNumber: 5
  }, this);
}
function AddToCartButton2({ analytics, children, disabled, lines, onClick }) {
  let [qty, setQty] = (0, import_react85.useState)(1);
  return lines[0].quantity = qty, /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(import_jsx_dev_runtime29.Fragment, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
    CartForm,
    {
      route: "/cart",
      inputs: { lines },
      action: CartForm.ACTIONS.LinesAdd,
      children: (fetcher) => /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(import_jsx_dev_runtime29.Fragment, { children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
          "input",
          {
            name: "analytics",
            type: "hidden",
            value: JSON.stringify(analytics)
          },
          void 0,
          !1,
          {
            fileName: "app/routes/($locale).products.$handle.jsx",
            lineNumber: 654,
            columnNumber: 13
          },
          this
        ),
        /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { className: "flex flex-row items-center gap-4 mobile-cart-product", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
            "div",
            {
              className: "flex flex-row items-center py-[6px] px-[8px] rounded-xl",
              style: { border: "1px solid #000", background: "white" },
              children: [
                /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
                  "a",
                  {
                    className: " text-xl",
                    onClick: () => {
                      qty != 0 && setQty((prev) => prev - 1);
                    },
                    children: "-"
                  },
                  void 0,
                  !1,
                  {
                    fileName: "app/routes/($locale).products.$handle.jsx",
                    lineNumber: 664,
                    columnNumber: 17
                  },
                  this
                ),
                /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("span", { className: "px-4", children: qty }, void 0, !1, {
                  fileName: "app/routes/($locale).products.$handle.jsx",
                  lineNumber: 674,
                  columnNumber: 17
                }, this),
                /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
                  "a",
                  {
                    className: " text-xl",
                    onClick: () => setQty((prev) => prev + 1),
                    children: "+"
                  },
                  void 0,
                  !1,
                  {
                    fileName: "app/routes/($locale).products.$handle.jsx",
                    lineNumber: 675,
                    columnNumber: 17
                  },
                  this
                )
              ]
            },
            void 0,
            !0,
            {
              fileName: "app/routes/($locale).products.$handle.jsx",
              lineNumber: 660,
              columnNumber: 15
            },
            this
          ),
          /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(
            "button",
            {
              className: "w-[150px] h-11 bg-black hover:bg-blue-700 text-white font-bold py-1 px-4 rounded-lg product-cart-btn",
              type: "submit",
              onClick,
              disabled: disabled ?? fetcher.state !== "idle",
              children
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).products.$handle.jsx",
              lineNumber: 682,
              columnNumber: 15
            },
            this
          )
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).products.$handle.jsx",
          lineNumber: 659,
          columnNumber: 13
        }, this)
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 653,
        columnNumber: 11
      }, this)
    },
    void 0,
    !1,
    {
      fileName: "app/routes/($locale).products.$handle.jsx",
      lineNumber: 647,
      columnNumber: 7
    },
    this
  ) }, void 0, !1, {
    fileName: "app/routes/($locale).products.$handle.jsx",
    lineNumber: 646,
    columnNumber: 5
  }, this);
}
function RecommendedProducts2({ products: products2, title }) {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(import_jsx_dev_runtime29.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("h1", { className: "text-center font-semibold my-[15px]", children: [
      title,
      " "
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).products.$handle.jsx",
      lineNumber: 701,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(import_react83.Suspense, { fallback: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("div", { children: "Loading..." }, void 0, !1, {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 703,
        columnNumber: 29
      }, this), children: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(Await2, { resolve: products2, children: /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)(ProductsCorousel_default, { products: products2 }, void 0, !1, {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 706,
        columnNumber: 14
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 704,
        columnNumber: 11
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 703,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime29.jsxDEV)("br", {}, void 0, !1, {
        fileName: "app/routes/($locale).products.$handle.jsx",
        lineNumber: 709,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).products.$handle.jsx",
      lineNumber: 702,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).products.$handle.jsx",
    lineNumber: 700,
    columnNumber: 5
  }, this);
}
var PRODUCT_VARIANT_FRAGMENT2 = `#graphql
  fragment ProductVariant on ProductVariant {
    availableForSale
    compareAtPrice {
      amount
      currencyCode
    }
    id
    image {
      __typename
      id
      url
      altText
      width
      height
    }
    price {
      amount
      currencyCode
    }
    product {
      title
      handle
    }
    quantityAvailable
    selectedOptions {
      name
      value
    }
    sku
    title
    unitPrice {
      amount
      currencyCode
    }
  }
`, PRODUCT_FRAGMENT2 = `#graphql
  ${l2}
  ${p}
  fragment Product on Product {
    id
    title
    vendor
    handle
    descriptionHtml
    description
    tags
    productType
    metafields(identifiers: [{namespace: "custom", key: "what_to_expect"},{namespace: "custom", key: "key_ingredients"}, {namespace: "custom", key: "how_to_use1"},{namespace: "custom", key: "who_can_use"},{namespace: "custom", key: "why_we"},{namespace: "custom", key: "key_ingredients"} ]){
      key
      value
    }
    images(first:10){
      edges{
        node{
          url
        }
      }
    }
    options {
      name
      values
      optionValues{
        swatch{
          color
        }
      }
    }
    
    selectedVariant: variantBySelectedOptions(selectedOptions: $selectedOptions) {
      ...ProductVariant
    }
    variants(first: 10) {
      nodes {
        ...ProductVariant
      }
    }
    seo {
      description
      title
    }
    ...OkendoStarRatingSnippet
		...OkendoReviewsSnippet
  }
  ${PRODUCT_VARIANT_FRAGMENT2}
`, PRODUCT_QUERY2 = `#graphql
  query Product(
    $country: CountryCode
    $handle: String!
    $language: LanguageCode
    $selectedOptions: [SelectedOptionInput!]!
  ) @inContext(country: $country, language: $language) {
    product(handle: $handle) {
      ...Product
    }
  }
  ${PRODUCT_FRAGMENT2}
`, PRODUCT_VARIANTS_FRAGMENT2 = `#graphql
  fragment ProductVariants on Product {
    variants(first: 50) {
      nodes {
        ...ProductVariant
      }
    }
  }
  ${PRODUCT_VARIANT_FRAGMENT2}
`, VARIANTS_QUERY2 = `#graphql
  ${PRODUCT_VARIANTS_FRAGMENT2}
  query ProductVariants(
    $country: CountryCode
    $language: LanguageCode
    $handle: String!
  ) @inContext(country: $country, language: $language) {
    product(handle: $handle) {
      ...ProductVariants
    }
  }
`, PRODUCTS_QUERY2 = `#graphql
  query {
  products(first: 250, query:"tags:* Under 100 OR Under 1000"){
    edges{
      node{
        id
        title
        handle
        tags
        images(first:1){
          edges{
            node{
              url
              id
            }
          }
        }
        featuredImage {
          id
        }
      }
    }
}
  }
`, FEATURED_COLLECTION_QUERY2 = `#graphql
  fragment FeaturedCollection on Collection {
    products(first:100){
      edges{
        node{
          id
          title
          handle
          priceRange {
            minVariantPrice {
              amount
              currencyCode
            }
          }
          variants(first: 100) {
          edges {
          node {
                availableForSale
                id
                metafields(identifiers: [{namespace: "custom", key: "isdefault"} ]){
                    key
                    value
                  }
                }
              }
        }
        images(first:1){
          edges{
            node{
              url
            }
          }
        }
        }
      }
    }
    id
    title
    metafields(identifiers: [{namespace: "custom", key: "from_customer_inbox"}, {namespace: "custom", key: "1_custom_colllection"}]){
      id
      key
      namespace
      value
    }
    image {
      id
      url
      altText
      width
      height
    }
    handle
  }
  query FeaturedCollection($country: CountryCode, $language: LanguageCode)
    @inContext(country: $country, language: $language) {
    collections(first: 100) {
      nodes {
        ...FeaturedCollection
      }
    }
  }
`;

// app/routes/($locale).account.profile.jsx
var locale_account_profile_exports = {};
__export(locale_account_profile_exports, {
  action: () => action7,
  default: () => AccountProfile,
  loader: () => loader15,
  meta: () => meta12
});
var import_react86 = __toESM(require_react());
var import_jsx_dev_runtime30 = __toESM(require_jsx_dev_runtime()), meta12 = () => [{ title: "Profile" }];
async function loader15({ context }) {
  return await context.session.get("customerAccessToken") ? json3({}) : redirect4("/account/login");
}
async function action7({ request, context }) {
  var _a2, _b, _c, _d, _e3, _f, _g;
  let { session, storefront } = context;
  if (request.method !== "PUT")
    return json3({ error: "Method not allowed" }, { status: 405 });
  let form = await request.formData(), customerAccessToken = await session.get("customerAccessToken");
  if (!customerAccessToken)
    return json3({ error: "Unauthorized" }, { status: 401 });
  try {
    let password = getPassword(form), customer = {}, validInputKeys = [
      "firstName",
      "lastName",
      "email",
      "password",
      "phone"
    ];
    for (let [key, value] of form.entries())
      validInputKeys.includes(key) && (key === "acceptsMarketing" && (customer.acceptsMarketing = value === "on"), typeof value == "string" && value.length && (customer[key] = value));
    password && (customer.password = password);
    let updated = await storefront.mutate(CUSTOMER_UPDATE_MUTATION, {
      variables: {
        customerAccessToken: customerAccessToken.accessToken,
        customer
      }
    });
    return (_b = (_a2 = updated.customerUpdate) == null ? void 0 : _a2.customerUserErrors) != null && _b.length ? json3(
      { error: (_c = updated.customerUpdate) == null ? void 0 : _c.customerUserErrors[0] },
      { status: 400 }
    ) : ((_e3 = (_d = updated.customerUpdate) == null ? void 0 : _d.customerAccessToken) != null && _e3.accessToken && session.set(
      "customerAccessToken",
      (_f = updated.customerUpdate) == null ? void 0 : _f.customerAccessToken
    ), json3(
      { error: null, customer: (_g = updated.customerUpdate) == null ? void 0 : _g.customer },
      {
        headers: {
          "Set-Cookie": await session.commit()
        }
      }
    ));
  } catch (error) {
    return json3({ error: error.message, customer: null }, { status: 400 });
  }
}
function AccountProfile() {
  let account = useOutletContext(), { state } = useNavigation(), action12 = useActionData2(), customer = (action12 == null ? void 0 : action12.customer) ?? (account == null ? void 0 : account.customer), [activeTab, setActiveTab] = (0, import_react86.useState)("profile"), handleTabChange = (tab) => {
    setActiveTab(tab);
  }, handleSubmit = (e5) => {
    e5.preventDefault(), console.log("Profile Data:", profileData), console.log("Password Data:", passwordData);
  };
  return /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)(import_jsx_dev_runtime30.Fragment, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)("div", { className: "w-full h-full justify-center items-center", children: /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)(Form, { className: "w-full justify-center items-center", method: "PUT", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)("fieldset", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)("div", { className: "mb-3", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)("label", { className: "block text-gray-700 text-sm font-bold mb-2", htmlFor: "firstName", children: "First name" }, void 0, !1, {
          fileName: "app/routes/($locale).account.profile.jsx",
          lineNumber: 125,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)(
          "input",
          {
            className: "shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline",
            id: "firstName",
            name: "firstName",
            type: "text",
            autoComplete: "given-name",
            placeholder: "First name",
            "aria-label": "First name",
            defaultValue: customer.firstName ?? "",
            minLength: 2
          },
          void 0,
          !1,
          {
            fileName: "app/routes/($locale).account.profile.jsx",
            lineNumber: 126,
            columnNumber: 11
          },
          this
        )
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).account.profile.jsx",
        lineNumber: 124,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)("div", { className: "mb-3", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)("label", { className: "block text-gray-700 text-sm font-bold mb-2", htmlFor: "lastName", children: "Last name" }, void 0, !1, {
          fileName: "app/routes/($locale).account.profile.jsx",
          lineNumber: 138,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)(
          "input",
          {
            className: "shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline",
            id: "lastName",
            name: "lastName",
            type: "text",
            autoComplete: "family-name",
            placeholder: "Last name",
            "aria-label": "Last name",
            defaultValue: customer.lastName ?? "",
            minLength: 2
          },
          void 0,
          !1,
          {
            fileName: "app/routes/($locale).account.profile.jsx",
            lineNumber: 139,
            columnNumber: 11
          },
          this
        )
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).account.profile.jsx",
        lineNumber: 137,
        columnNumber: 11
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)("div", { className: "mb-3", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)("label", { className: "block text-gray-700 text-sm font-bold mb-2", htmlFor: "phone", children: "Mobile" }, void 0, !1, {
          fileName: "app/routes/($locale).account.profile.jsx",
          lineNumber: 151,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)(
          "input",
          {
            className: "shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline",
            id: "phone",
            name: "phone",
            type: "tel",
            autoComplete: "tel",
            placeholder: "Mobile",
            "aria-label": "Mobile",
            defaultValue: customer.phone ?? ""
          },
          void 0,
          !1,
          {
            fileName: "app/routes/($locale).account.profile.jsx",
            lineNumber: 152,
            columnNumber: 11
          },
          this
        )
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).account.profile.jsx",
        lineNumber: 150,
        columnNumber: 11
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)("div", { className: "mb-3", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)("label", { className: "block text-gray-700 text-sm font-bold mb-2", htmlFor: "email", children: "Email address" }, void 0, !1, {
          fileName: "app/routes/($locale).account.profile.jsx",
          lineNumber: 163,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)(
          "input",
          {
            className: "shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline",
            id: "email",
            name: "email",
            type: "email",
            autoComplete: "email",
            required: !0,
            placeholder: "Email address",
            "aria-label": "Email address",
            defaultValue: customer.email ?? ""
          },
          void 0,
          !1,
          {
            fileName: "app/routes/($locale).account.profile.jsx",
            lineNumber: 164,
            columnNumber: 11
          },
          this
        )
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).account.profile.jsx",
        lineNumber: 162,
        columnNumber: 11
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)("div", { className: "mb-3", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)("label", { className: "block text-gray-700 text-sm font-bold mb-2", htmlFor: "currentPassword", children: "Current password" }, void 0, !1, {
          fileName: "app/routes/($locale).account.profile.jsx",
          lineNumber: 176,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)(
          "input",
          {
            className: "shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline",
            id: "currentPassword",
            name: "currentPassword",
            type: "password",
            autoComplete: "current-password",
            placeholder: "Current password",
            "aria-label": "Current password",
            minLength: 8
          },
          void 0,
          !1,
          {
            fileName: "app/routes/($locale).account.profile.jsx",
            lineNumber: 177,
            columnNumber: 11
          },
          this
        )
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).account.profile.jsx",
        lineNumber: 175,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)("div", { className: "mb-3", children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)("label", { className: "block text-gray-700 text-sm font-bold mb-2", htmlFor: "newPassword", children: "New password" }, void 0, !1, {
          fileName: "app/routes/($locale).account.profile.jsx",
          lineNumber: 188,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)(
          "input",
          {
            className: "shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline",
            id: "newPassword",
            name: "newPassword",
            type: "password",
            placeholder: "New password",
            "aria-label": "New password",
            minLength: 8
          },
          void 0,
          !1,
          {
            fileName: "app/routes/($locale).account.profile.jsx",
            lineNumber: 189,
            columnNumber: 11
          },
          this
        )
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).account.profile.jsx",
        lineNumber: 187,
        columnNumber: 11
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)("small", { children: "Passwords must be at least 8 characters." }, void 0, !1, {
        fileName: "app/routes/($locale).account.profile.jsx",
        lineNumber: 198,
        columnNumber: 11
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).account.profile.jsx",
      lineNumber: 123,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)("div", { className: "flex items-center justify-between", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)(
        "button",
        {
          className: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline",
          type: "submit",
          disabled: state !== "idle",
          children: state !== "idle" ? "Updating" : "Update"
        },
        void 0,
        !1,
        {
          fileName: "app/routes/($locale).account.profile.jsx",
          lineNumber: 201,
          columnNumber: 7
        },
        this
      ),
      /* @__PURE__ */ (0, import_jsx_dev_runtime30.jsxDEV)("a", { className: "inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800", href: "/account/recover", children: "Forgot Password?" }, void 0, !1, {
        fileName: "app/routes/($locale).account.profile.jsx",
        lineNumber: 205,
        columnNumber: 7
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).account.profile.jsx",
      lineNumber: 200,
      columnNumber: 9
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).account.profile.jsx",
    lineNumber: 122,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/routes/($locale).account.profile.jsx",
    lineNumber: 121,
    columnNumber: 5
  }, this) }, void 0, !1, {
    fileName: "app/routes/($locale).account.profile.jsx",
    lineNumber: 120,
    columnNumber: 5
  }, this);
}
function getPassword(form) {
  let password, currentPassword = form.get("currentPassword"), newPassword = form.get("newPassword"), newPasswordConfirm = form.get("newPasswordConfirm"), passwordError;
  if (newPassword && !currentPassword && (passwordError = new Error("Current password is required.")), newPassword && newPassword !== newPasswordConfirm && (passwordError = new Error("New passwords must match.")), newPassword && currentPassword && newPassword === currentPassword && (passwordError = new Error(
    "New password must be different than current password."
  )), passwordError)
    throw passwordError;
  return currentPassword && newPassword ? password = newPassword : password = currentPassword, String(password);
}
var CUSTOMER_UPDATE_MUTATION = `#graphql
  # https://shopify.dev/docs/api/storefront/latest/mutations/customerUpdate
  mutation customerUpdate(
    $customerAccessToken: String!,
    $customer: CustomerUpdateInput!
    $country: CountryCode
    $language: LanguageCode
  ) @inContext(language: $language, country: $country) {
    customerUpdate(customerAccessToken: $customerAccessToken, customer: $customer) {
      customer {
        acceptsMarketing
        email
        firstName
        id
        lastName
        phone
      }
      customerAccessToken {
        accessToken
        expiresAt
      }
      customerUserErrors {
        code
        field
        message
      }
    }
  }
`;

// app/routes/($locale).account_.logout.jsx
var locale_account_logout_exports = {};
__export(locale_account_logout_exports, {
  action: () => action8,
  default: () => Logout,
  loader: () => loader16,
  meta: () => meta13
});
var meta13 = () => [{ title: "Logout" }];
async function loader16() {
  return redirect4("/account/login");
}
async function action8({ request, context }) {
  let { session } = context;
  return session.unset("customerAccessToken"), request.method !== "POST" ? json3({ error: "Method not allowed" }, { status: 405 }) : redirect4("/", {
    headers: {
      "Set-Cookie": await session.commit()
    }
  });
}
function Logout() {
  return null;
}

// app/routes/($locale).policies._index.jsx
var locale_policies_index_exports = {};
__export(locale_policies_index_exports, {
  default: () => Policies,
  loader: () => loader17
});
var import_jsx_dev_runtime31 = __toESM(require_jsx_dev_runtime());
async function loader17({ context }) {
  let data2 = await context.storefront.query(POLICIES_QUERY), policies = Object.values(data2.shop || {});
  if (!policies.length)
    throw new Response("No policies found", { status: 404 });
  return json3({ policies });
}
function Policies() {
  let { policies } = useLoaderData2();
  return /* @__PURE__ */ (0, import_jsx_dev_runtime31.jsxDEV)("div", { className: "policies", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime31.jsxDEV)("h1", { children: "Policies" }, void 0, !1, {
      fileName: "app/routes/($locale).policies._index.jsx",
      lineNumber: 20,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime31.jsxDEV)("div", { children: policies.map((policy) => policy ? /* @__PURE__ */ (0, import_jsx_dev_runtime31.jsxDEV)("fieldset", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime31.jsxDEV)(Link2, { to: `/policies/${policy.handle}`, children: policy.title }, void 0, !1, {
      fileName: "app/routes/($locale).policies._index.jsx",
      lineNumber: 26,
      columnNumber: 15
    }, this) }, policy.id, !1, {
      fileName: "app/routes/($locale).policies._index.jsx",
      lineNumber: 25,
      columnNumber: 13
    }, this) : null) }, void 0, !1, {
      fileName: "app/routes/($locale).policies._index.jsx",
      lineNumber: 21,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).policies._index.jsx",
    lineNumber: 19,
    columnNumber: 5
  }, this);
}
var POLICIES_QUERY = `#graphql
  fragment PolicyItem on ShopPolicy {
    id
    title
    handle
  }
  query Policies ($country: CountryCode, $language: LanguageCode)
    @inContext(country: $country, language: $language) {
    shop {
      privacyPolicy {
        ...PolicyItem
      }
      shippingPolicy {
        ...PolicyItem
      }
      termsOfService {
        ...PolicyItem
      }
      refundPolicy {
        ...PolicyItem
      }
      subscriptionPolicy {
        id
        title
        handle
      }
    }
  }
`;

// app/routes/($locale).account_.login.jsx
var locale_account_login_exports = {};
__export(locale_account_login_exports, {
  action: () => action9,
  default: () => Login,
  loader: () => loader18,
  meta: () => meta14
});
var import_react90 = __toESM(require_react2());
var import_jsx_dev_runtime32 = __toESM(require_jsx_dev_runtime()), meta14 = () => [{ title: "Login" }];
async function loader18({ context }) {
  return await context.session.get("customerAccessToken") ? redirect4("/account") : json3({});
}
async function action9({ request, context }) {
  var _a2;
  let { session, storefront } = context;
  if (request.method !== "POST")
    return json3({ error: "Method not allowed" }, { status: 405 });
  try {
    let form = await request.formData(), email = String(form.has("email") ? form.get("email") : ""), password = String(form.has("password") ? form.get("password") : "");
    if (!Boolean(email && password))
      throw new Error("Please provide both an email and a password.");
    let { customerAccessTokenCreate } = await storefront.mutate(
      LOGIN_MUTATION,
      {
        variables: {
          input: { email, password }
        }
      }
    );
    if (!((_a2 = customerAccessTokenCreate == null ? void 0 : customerAccessTokenCreate.customerAccessToken) != null && _a2.accessToken))
      throw new Error(customerAccessTokenCreate == null ? void 0 : customerAccessTokenCreate.customerUserErrors[0].message);
    let { customerAccessToken } = customerAccessTokenCreate;
    return session.set("customerAccessToken", customerAccessToken), redirect4("/account", {
      headers: {
        "Set-Cookie": await session.commit()
      }
    });
  } catch (error) {
    return error instanceof Error ? json3({ error: error.message }, { status: 400 }) : json3({ error }, { status: 400 });
  }
}
function Login() {
  let data2 = useActionData2(), error = (data2 == null ? void 0 : data2.error) || null;
  return console.log(data2), console.log(error), /* @__PURE__ */ (0, import_jsx_dev_runtime32.jsxDEV)(import_jsx_dev_runtime32.Fragment, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime32.jsxDEV)("div", { className: "flex flex-col sm:flex-row", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime32.jsxDEV)("div", { className: "sm:w-2/3 sm:block", children: /* @__PURE__ */ (0, import_jsx_dev_runtime32.jsxDEV)(
      "img",
      {
        src: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/LoginSideImg-Photoroom_1_2.png?v=1709296234",
        alt: "Login Background",
        className: "w-full h-full object-cover"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale).account_.login.jsx",
        lineNumber: 81,
        columnNumber: 11
      },
      this
    ) }, void 0, !1, {
      fileName: "app/routes/($locale).account_.login.jsx",
      lineNumber: 80,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime32.jsxDEV)("div", { className: "w-full justify-center items-center flex flex-col", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime32.jsxDEV)(Form, { className: "w-full m-auto login_wrapper", method: "POST", children: /* @__PURE__ */ (0, import_jsx_dev_runtime32.jsxDEV)("fieldset", { children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime32.jsxDEV)("div", { className: "mb-3", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime32.jsxDEV)("label", { className: "block text-gray-700 text-sm font-bold mb-2", for: "username", children: "Email" }, void 0, !1, {
            fileName: "app/routes/($locale).account_.login.jsx",
            lineNumber: 92,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime32.jsxDEV)(
            "input",
            {
              className: "shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline",
              id: "email",
              name: "email",
              type: "email",
              autoComplete: "email",
              placeholder: "Email address",
              "aria-label": "Email address",
              required: !0
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).account_.login.jsx",
              lineNumber: 95,
              columnNumber: 13
            },
            this
          )
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).account_.login.jsx",
          lineNumber: 91,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime32.jsxDEV)("div", { className: "mb-4", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime32.jsxDEV)("label", { className: "block text-gray-700 text-sm font-bold mb-2", for: "password", children: "Password" }, void 0, !1, {
            fileName: "app/routes/($locale).account_.login.jsx",
            lineNumber: 105,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime32.jsxDEV)(
            "input",
            {
              className: "shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline",
              id: "password",
              name: "password",
              type: "password",
              autoComplete: "current-password",
              placeholder: "Password",
              "aria-label": "Password",
              minLength: 8,
              required: !0
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale).account_.login.jsx",
              lineNumber: 108,
              columnNumber: 13
            },
            this
          ),
          error ? /* @__PURE__ */ (0, import_jsx_dev_runtime32.jsxDEV)("p", { className: "text-red-500 text-xs italic", children: error }, void 0, !1, {
            fileName: "app/routes/($locale).account_.login.jsx",
            lineNumber: 118,
            columnNumber: 17
          }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime32.jsxDEV)("br", {}, void 0, !1, {
            fileName: "app/routes/($locale).account_.login.jsx",
            lineNumber: 120,
            columnNumber: 17
          }, this)
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).account_.login.jsx",
          lineNumber: 104,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime32.jsxDEV)("div", { className: "flex items-center justify-between", children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime32.jsxDEV)("button", { className: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline", type: "submit", children: "Sign In" }, void 0, !1, {
            fileName: "app/routes/($locale).account_.login.jsx",
            lineNumber: 125,
            columnNumber: 13
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime32.jsxDEV)("a", { className: "inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800", href: "/account/recover", children: "Forgot Password?" }, void 0, !1, {
            fileName: "app/routes/($locale).account_.login.jsx",
            lineNumber: 128,
            columnNumber: 13
          }, this)
        ] }, void 0, !0, {
          fileName: "app/routes/($locale).account_.login.jsx",
          lineNumber: 124,
          columnNumber: 11
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime32.jsxDEV)("a", { className: "py-4 text-blue-500", href: "/account/register", children: " Register " }, void 0, !1, {
          fileName: "app/routes/($locale).account_.login.jsx",
          lineNumber: 132,
          columnNumber: 11
        }, this)
      ] }, void 0, !0, {
        fileName: "app/routes/($locale).account_.login.jsx",
        lineNumber: 90,
        columnNumber: 9
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale).account_.login.jsx",
        lineNumber: 89,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime32.jsxDEV)("p", { className: "text-center text-gray-500 text-xs", children: "\xA92023. All rights reserved." }, void 0, !1, {
        fileName: "app/routes/($locale).account_.login.jsx",
        lineNumber: 135,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).account_.login.jsx",
      lineNumber: 88,
      columnNumber: 9
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).account_.login.jsx",
    lineNumber: 79,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/routes/($locale).account_.login.jsx",
    lineNumber: 78,
    columnNumber: 5
  }, this);
}
var LOGIN_MUTATION = `#graphql
  mutation login($input: CustomerAccessTokenCreateInput!) {
    customerAccessTokenCreate(input: $input) {
      customerUserErrors {
        code
        field
        message
      }
      customerAccessToken {
        accessToken
        expiresAt
      }
    }
  }
`;

// app/routes/($locale).[sitemap.xml].jsx
var locale_sitemap_xml_exports = {};
__export(locale_sitemap_xml_exports, {
  loader: () => loader19
});
var MAX_URLS = 250;
async function loader19({ request, context: { storefront } }) {
  let data2 = await storefront.query(SITEMAP_QUERY, {
    variables: {
      urlLimits: MAX_URLS,
      language: storefront.i18n.language
    }
  });
  if (!data2)
    throw new Response("No data found", { status: 404 });
  let sitemap = generateSitemap({ data: data2, baseUrl: new URL(request.url).origin });
  return new Response(sitemap, {
    headers: {
      "Content-Type": "application/xml",
      "Cache-Control": `max-age=${60 * 60 * 24}`
    }
  });
}
function xmlEncode(string) {
  return string.replace(/[&<>'"]/g, (char) => `&#${char.charCodeAt(0)};`);
}
function generateSitemap({ data: data2, baseUrl }) {
  let products2 = flattenConnection(data2.products).filter((product) => product.onlineStoreUrl).map((product) => {
    var _a2;
    let productEntry = {
      url: `${baseUrl}/products/${xmlEncode(product.handle)}`,
      lastMod: product.updatedAt,
      changeFreq: "daily"
    };
    return (_a2 = product.featuredImage) != null && _a2.url && (productEntry.image = {
      url: xmlEncode(product.featuredImage.url)
    }, product.title && (productEntry.image.title = xmlEncode(product.title)), product.featuredImage.altText && (productEntry.image.caption = xmlEncode(product.featuredImage.altText))), productEntry;
  }), collections = flattenConnection(data2.collections).filter((collection) => collection.onlineStoreUrl).map((collection) => ({
    url: `${baseUrl}/collections/${collection.handle}`,
    lastMod: collection.updatedAt,
    changeFreq: "daily"
  })), pages = flattenConnection(data2.pages).filter((page) => page.onlineStoreUrl).map((page) => ({
    url: `${baseUrl}/pages/${page.handle}`,
    lastMod: page.updatedAt,
    changeFreq: "weekly"
  }));
  return `
    <urlset
      xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"
      xmlns:image="http://www.google.com/schemas/sitemap-image/1.1"
    >
      ${[...products2, ...collections, ...pages].map(renderUrlTag).join("")}
    </urlset>`;
}
function renderUrlTag({ url, lastMod, changeFreq, image }) {
  let imageTag = image ? `<image:image>
        <image:loc>${image.url}</image:loc>
        <image:title>${image.title ?? ""}</image:title>
        <image:caption>${image.caption ?? ""}</image:caption>
      </image:image>`.trim() : "";
  return `
    <url>
      <loc>${url}</loc>
      <lastmod>${lastMod}</lastmod>
      <changefreq>${changeFreq}</changefreq>
      ${imageTag}
    </url>
  `.trim();
}
var SITEMAP_QUERY = `#graphql
  query Sitemap($urlLimits: Int, $language: LanguageCode)
  @inContext(language: $language) {
    products(
      first: $urlLimits
      query: "published_status:'online_store:visible'"
    ) {
      nodes {
        updatedAt
        handle
        onlineStoreUrl
        title
        featuredImage {
          url
          altText
        }
      }
    }
    collections(
      first: $urlLimits
      query: "published_status:'online_store:visible'"
    ) {
      nodes {
        updatedAt
        handle
        onlineStoreUrl
      }
    }
    pages(first: $urlLimits, query: "published_status:'published'") {
      nodes {
        updatedAt
        handle
        onlineStoreUrl
      }
    }
  }
`;

// app/routes/($locale).pages.$handle.jsx
var locale_pages_handle_exports = {};
__export(locale_pages_handle_exports, {
  default: () => Page,
  loader: () => loader20,
  meta: () => meta15
});
var import_jsx_dev_runtime33 = __toESM(require_jsx_dev_runtime()), meta15 = ({ data: data2 }) => [{ title: `Hydrogen | ${data2.page.title}` }];
async function loader20({ params, context }) {
  if (!params.handle)
    throw new Error("Missing page handle");
  let { page } = await context.storefront.query(PAGE_QUERY, {
    variables: {
      handle: params.handle
    }
  });
  if (!page)
    throw new Response("Not Found", { status: 404 });
  return json3({ page });
}
function Page() {
  let { page } = useLoaderData2();
  return /* @__PURE__ */ (0, import_jsx_dev_runtime33.jsxDEV)("div", { className: "page m-12", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime33.jsxDEV)("header", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime33.jsxDEV)("h1", { children: page.title }, void 0, !1, {
      fileName: "app/routes/($locale).pages.$handle.jsx",
      lineNumber: 30,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale).pages.$handle.jsx",
      lineNumber: 29,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime33.jsxDEV)("main", { dangerouslySetInnerHTML: { __html: page.body } }, void 0, !1, {
      fileName: "app/routes/($locale).pages.$handle.jsx",
      lineNumber: 32,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).pages.$handle.jsx",
    lineNumber: 28,
    columnNumber: 5
  }, this);
}
var PAGE_QUERY = `#graphql
  query Page(
    $language: LanguageCode,
    $country: CountryCode,
    $handle: String!
  )
  @inContext(language: $language, country: $country) {
    page(handle: $handle) {
      id
      title
      body
      seo {
        description
        title
      }
    }
  }
`;

// app/routes/($locale).blogs._index.jsx
var locale_blogs_index_exports = {};
__export(locale_blogs_index_exports, {
  default: () => Blogs,
  loader: () => loader21,
  meta: () => meta16
});
var import_jsx_dev_runtime34 = __toESM(require_jsx_dev_runtime()), meta16 = () => [{ title: "Hydrogen | Logs" }], loader21 = async ({ request, context: { storefront } }) => {
  let paginationVariables = getPaginationVariables(request, {
    pageBy: 10
  }), { blogs } = await storefront.query(BLOGS_QUERY2, {
    variables: {
      ...paginationVariables
    }
  });
  return json3({ blogs });
};
function Blogs() {
  let { blogs } = useLoaderData2();
  return /* @__PURE__ */ (0, import_jsx_dev_runtime34.jsxDEV)("div", { className: "blogs", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime34.jsxDEV)("h1", { children: "Blogs" }, void 0, !1, {
      fileName: "app/routes/($locale).blogs._index.jsx",
      lineNumber: 28,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime34.jsxDEV)("div", { className: "blogs-grid", children: /* @__PURE__ */ (0, import_jsx_dev_runtime34.jsxDEV)(Pagination, { connection: blogs, children: ({ nodes, isLoading, PreviousLink, NextLink }) => /* @__PURE__ */ (0, import_jsx_dev_runtime34.jsxDEV)(import_jsx_dev_runtime34.Fragment, { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime34.jsxDEV)(PreviousLink, { children: isLoading ? "Loading..." : /* @__PURE__ */ (0, import_jsx_dev_runtime34.jsxDEV)("span", { children: "\u2191 Load previous" }, void 0, !1, {
        fileName: "app/routes/($locale).blogs._index.jsx",
        lineNumber: 35,
        columnNumber: 47
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale).blogs._index.jsx",
        lineNumber: 34,
        columnNumber: 17
      }, this),
      nodes.map((blog) => /* @__PURE__ */ (0, import_jsx_dev_runtime34.jsxDEV)(
        Link2,
        {
          className: "blog",
          prefetch: "intent",
          to: `/blogs/${blog.handle}`,
          children: /* @__PURE__ */ (0, import_jsx_dev_runtime34.jsxDEV)("h2", { children: blog.title }, void 0, !1, {
            fileName: "app/routes/($locale).blogs._index.jsx",
            lineNumber: 45,
            columnNumber: 23
          }, this)
        },
        blog.handle,
        !1,
        {
          fileName: "app/routes/($locale).blogs._index.jsx",
          lineNumber: 39,
          columnNumber: 21
        },
        this
      )),
      /* @__PURE__ */ (0, import_jsx_dev_runtime34.jsxDEV)(NextLink, { children: isLoading ? "Loading..." : /* @__PURE__ */ (0, import_jsx_dev_runtime34.jsxDEV)("span", { children: "Load more \u2193" }, void 0, !1, {
        fileName: "app/routes/($locale).blogs._index.jsx",
        lineNumber: 50,
        columnNumber: 47
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale).blogs._index.jsx",
        lineNumber: 49,
        columnNumber: 17
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).blogs._index.jsx",
      lineNumber: 33,
      columnNumber: 15
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale).blogs._index.jsx",
      lineNumber: 30,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale).blogs._index.jsx",
      lineNumber: 29,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).blogs._index.jsx",
    lineNumber: 27,
    columnNumber: 5
  }, this);
}
var BLOGS_QUERY2 = `#graphql
  query Blogs(
    $country: CountryCode
    $endCursor: String
    $first: Int
    $language: LanguageCode
    $last: Int
    $startCursor: String
  ) @inContext(country: $country, language: $language) {
    blogs(
      first: $first,
      last: $last,
      before: $startCursor,
      after: $endCursor
    ) {
      pageInfo {
        hasNextPage
        hasPreviousPage
        startCursor
        endCursor
      }
      nodes {
        title
        handle
        seo {
          title
          description
        }
      }
    }
  }
`;

// app/routes/($locale).lookbook.$id.jsx
var locale_lookbook_id_exports = {};
__export(locale_lookbook_id_exports, {
  action: () => action10,
  default: () => LookBook,
  loader: () => loader22
});
var import_react94 = __toESM(require_react()), import_jsx_dev_runtime35 = __toESM(require_jsx_dev_runtime());
async function loader22({ params, context }) {
  let { storefront, cart } = context, cartPromise = cart.get();
  return params.id ? json3({ lookbook_id: params.id, context }) : redirect("/");
}
async function action10({ request, context }) {
  let { session, cart } = context;
  console.log("cartPromise POST::", cart);
}
function LookBook() {
  let { lookbook_id, context } = useLoaderData2(), [p_id, setId] = (0, import_react94.useState)();
  (0, import_react94.useEffect)(() => {
    setId(lookbook_id);
  }, []);
  let mutationCart = `{ cartCreate(
      input: {
          lines: [
            {
              quantity: 1
              merchandiseId: "gid://shopify/ProductVariant/1"
            }
          ]
        }
      )
    }`;
  return /* @__PURE__ */ (0, import_jsx_dev_runtime35.jsxDEV)("div", { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime35.jsxDEV)("div", { className: "mst-slider" }, void 0, !1, {
      fileName: "app/routes/($locale).lookbook.$id.jsx",
      lineNumber: 50,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime35.jsxDEV)("div", { id: "sg-app", className: "mst-gallery-root" }, void 0, !1, {
      fileName: "app/routes/($locale).lookbook.$id.jsx",
      lineNumber: 51,
      columnNumber: 9
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).lookbook.$id.jsx",
    lineNumber: 49,
    columnNumber: 7
  }, this);
}

// app/routes/($locale).account.$.jsx
var locale_account_exports = {};
__export(locale_account_exports, {
  loader: () => loader23
});
async function loader23({ context }) {
  return await context.session.get("customerAccessToken") ? redirect4("/account") : redirect4("/account/login");
}

// app/routes/($locale).account.jsx
var locale_account_exports2 = {};
__export(locale_account_exports2, {
  CUSTOMER_FRAGMENT: () => CUSTOMER_FRAGMENT2,
  default: () => Acccount,
  loader: () => loader24,
  shouldRevalidate: () => shouldRevalidate
});

// app/components/DefaultSidebar.jsx
var import_react95 = __toESM(require_react2());
var import_jsx_dev_runtime36 = __toESM(require_jsx_dev_runtime());
function DefaultSidebar({ heading }) {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)(import_jsx_dev_runtime36.Fragment, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("div", { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("div", { className: "pt-0 pr-0 pb-0 pl-0 mt-0 mr-0 mb-0 ml-0" }, void 0, !1, {
      fileName: "app/components/DefaultSidebar.jsx",
      lineNumber: 61,
      columnNumber: 13
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("div", { className: "bg-white" }, void 0, !1, {
      fileName: "app/components/DefaultSidebar.jsx",
      lineNumber: 64,
      columnNumber: 13
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("div", { className: "bg-white", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("div", { className: "flex-col flex", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("div", { className: "flex bg-gray-100  overflow-x-hidden", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("div", { className: "bg-white lg:flex md:w-60 md:flex-col hidden", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("div", { className: "flex-col p-2 flex overflow-y-auto", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("div", { className: "h-full justify-between flex", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("div", { className: "space-y-4", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("div", { className: "bg-top bg-cover space-y-1", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("section", { className: "w-40 mx-auto bg-[#20354b] rounded-2xl shadow-lg", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("div", { className: "w-fit mx-auto", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("img", { src: "https://api.lorem.space/image/face?w=120&h=120&hash=bart89fe", className: "rounded-full w-20 ", alt: "profile picture", srcset: "" }, void 0, !1, {
        fileName: "app/components/DefaultSidebar.jsx",
        lineNumber: 84,
        columnNumber: 13
      }, this) }, void 0, !1, {
        fileName: "app/components/DefaultSidebar.jsx",
        lineNumber: 83,
        columnNumber: 9
      }, this) }, void 0, !1, {
        fileName: "app/components/DefaultSidebar.jsx",
        lineNumber: 75,
        columnNumber: 41
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("a", { href: "/account/order", className: `font-medium text-sm items-center rounded-lg text-gray-900 px-4 py-2.5 flex
                    transition-all duration-200 hover:bg-gray-200 group cursor-pointer`, children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("span", { className: "justify-center items-center flex", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("span", { className: "justify-center items-center flex", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("span", { className: "justify-center items-center flex", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("span", { className: "items-center justify-center flex", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)(import_react95.ListItemPrefix, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)(ShoppingBagIcon_default, { className: "h-5 w-5" }, void 0, !1, {
          fileName: "app/components/DefaultSidebar.jsx",
          lineNumber: 97,
          columnNumber: 13
        }, this) }, void 0, !1, {
          fileName: "app/components/DefaultSidebar.jsx",
          lineNumber: 96,
          columnNumber: 61
        }, this) }, void 0, !1, {
          fileName: "app/components/DefaultSidebar.jsx",
          lineNumber: 95,
          columnNumber: 61
        }, this) }, void 0, !1, {
          fileName: "app/components/DefaultSidebar.jsx",
          lineNumber: 94,
          columnNumber: 57
        }, this) }, void 0, !1, {
          fileName: "app/components/DefaultSidebar.jsx",
          lineNumber: 93,
          columnNumber: 53
        }, this) }, void 0, !1, {
          fileName: "app/components/DefaultSidebar.jsx",
          lineNumber: 92,
          columnNumber: 49
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("span", { children: "Order" }, void 0, !1, {
          fileName: "app/components/DefaultSidebar.jsx",
          lineNumber: 103,
          columnNumber: 49
        }, this)
      ] }, void 0, !0, {
        fileName: "app/components/DefaultSidebar.jsx",
        lineNumber: 90,
        columnNumber: 45
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("a", { href: "/account/profile", className: `font-medium text-sm items-center rounded-lg text-gray-900 px-4 py-2.5 flex
                    transition-all duration-200 hover:bg-gray-200 group cursor-pointer`, children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("span", { className: "justify-center items-center flex", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("span", { className: "justify-center items-center flex", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("span", { className: "justify-center items-center flex", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("span", { className: "items-center justify-center flex", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)(import_react95.ListItemPrefix, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)(UserCircleIcon_default, { className: "h-5 w-5" }, void 0, !1, {
          fileName: "app/components/DefaultSidebar.jsx",
          lineNumber: 112,
          columnNumber: 13
        }, this) }, void 0, !1, {
          fileName: "app/components/DefaultSidebar.jsx",
          lineNumber: 111,
          columnNumber: 61
        }, this) }, void 0, !1, {
          fileName: "app/components/DefaultSidebar.jsx",
          lineNumber: 110,
          columnNumber: 61
        }, this) }, void 0, !1, {
          fileName: "app/components/DefaultSidebar.jsx",
          lineNumber: 109,
          columnNumber: 57
        }, this) }, void 0, !1, {
          fileName: "app/components/DefaultSidebar.jsx",
          lineNumber: 108,
          columnNumber: 53
        }, this) }, void 0, !1, {
          fileName: "app/components/DefaultSidebar.jsx",
          lineNumber: 107,
          columnNumber: 49
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("span", { children: "Profile" }, void 0, !1, {
          fileName: "app/components/DefaultSidebar.jsx",
          lineNumber: 118,
          columnNumber: 49
        }, this)
      ] }, void 0, !0, {
        fileName: "app/components/DefaultSidebar.jsx",
        lineNumber: 105,
        columnNumber: 45
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("a", { href: "/account/addresses", className: `font-medium text-sm items-center rounded-lg text-gray-900 px-4 py-2.5 flex
                    transition-all duration-200 hover:bg-gray-200 group cursor-pointer`, children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("span", { className: "justify-center items-center flex", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("span", { className: "justify-center items-center flex", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("span", { className: "justify-center items-center flex", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("span", { className: "items-center justify-center flex", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)(import_react95.ListItemPrefix, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)(UserCircleIcon_default, { className: "h-5 w-5" }, void 0, !1, {
          fileName: "app/components/DefaultSidebar.jsx",
          lineNumber: 127,
          columnNumber: 13
        }, this) }, void 0, !1, {
          fileName: "app/components/DefaultSidebar.jsx",
          lineNumber: 126,
          columnNumber: 61
        }, this) }, void 0, !1, {
          fileName: "app/components/DefaultSidebar.jsx",
          lineNumber: 125,
          columnNumber: 61
        }, this) }, void 0, !1, {
          fileName: "app/components/DefaultSidebar.jsx",
          lineNumber: 124,
          columnNumber: 57
        }, this) }, void 0, !1, {
          fileName: "app/components/DefaultSidebar.jsx",
          lineNumber: 123,
          columnNumber: 53
        }, this) }, void 0, !1, {
          fileName: "app/components/DefaultSidebar.jsx",
          lineNumber: 122,
          columnNumber: 49
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("span", { children: "Address" }, void 0, !1, {
          fileName: "app/components/DefaultSidebar.jsx",
          lineNumber: 133,
          columnNumber: 49
        }, this)
      ] }, void 0, !0, {
        fileName: "app/components/DefaultSidebar.jsx",
        lineNumber: 120,
        columnNumber: 45
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)(Logout2, {}, void 0, !1, {
        fileName: "app/components/DefaultSidebar.jsx",
        lineNumber: 135,
        columnNumber: 45
      }, this)
    ] }, void 0, !0, {
      fileName: "app/components/DefaultSidebar.jsx",
      lineNumber: 74,
      columnNumber: 41
    }, this) }, void 0, !1, {
      fileName: "app/components/DefaultSidebar.jsx",
      lineNumber: 73,
      columnNumber: 37
    }, this) }, void 0, !1, {
      fileName: "app/components/DefaultSidebar.jsx",
      lineNumber: 72,
      columnNumber: 33
    }, this) }, void 0, !1, {
      fileName: "app/components/DefaultSidebar.jsx",
      lineNumber: 71,
      columnNumber: 29
    }, this) }, void 0, !1, {
      fileName: "app/components/DefaultSidebar.jsx",
      lineNumber: 70,
      columnNumber: 25
    }, this) }, void 0, !1, {
      fileName: "app/components/DefaultSidebar.jsx",
      lineNumber: 69,
      columnNumber: 21
    }, this) }, void 0, !1, {
      fileName: "app/components/DefaultSidebar.jsx",
      lineNumber: 66,
      columnNumber: 17
    }, this) }, void 0, !1, {
      fileName: "app/components/DefaultSidebar.jsx",
      lineNumber: 65,
      columnNumber: 13
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/DefaultSidebar.jsx",
    lineNumber: 60,
    columnNumber: 5
  }, this) }, void 0, !1, {
    fileName: "app/components/DefaultSidebar.jsx",
    lineNumber: 22,
    columnNumber: 5
  }, this);
}
function Logout2() {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("a", { href: "#", className: `font-medium text-sm items-center rounded-lg text-gray-900 px-4 py-2.5 flex
                    transition-all duration-200 hover:bg-gray-200 group cursor-pointer`, children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("span", { className: "justify-center items-center flex", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("span", { className: "justify-center items-center flex", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("span", { className: "justify-center items-center flex", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("span", { className: "items-center justify-center flex", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)(import_react95.ListItemPrefix, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)(PowerIcon_default, { className: "h-5 w-5" }, void 0, !1, {
      fileName: "app/components/DefaultSidebar.jsx",
      lineNumber: 158,
      columnNumber: 7
    }, this) }, void 0, !1, {
      fileName: "app/components/DefaultSidebar.jsx",
      lineNumber: 157,
      columnNumber: 61
    }, this) }, void 0, !1, {
      fileName: "app/components/DefaultSidebar.jsx",
      lineNumber: 156,
      columnNumber: 61
    }, this) }, void 0, !1, {
      fileName: "app/components/DefaultSidebar.jsx",
      lineNumber: 155,
      columnNumber: 57
    }, this) }, void 0, !1, {
      fileName: "app/components/DefaultSidebar.jsx",
      lineNumber: 154,
      columnNumber: 53
    }, this) }, void 0, !1, {
      fileName: "app/components/DefaultSidebar.jsx",
      lineNumber: 153,
      columnNumber: 49
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)(Form, { method: "POST", action: "/account/logout", children: /* @__PURE__ */ (0, import_jsx_dev_runtime36.jsxDEV)("button", { type: "submit", children: "Sign out" }, void 0, !1, {
      fileName: "app/components/DefaultSidebar.jsx",
      lineNumber: 165,
      columnNumber: 5
    }, this) }, void 0, !1, {
      fileName: "app/components/DefaultSidebar.jsx",
      lineNumber: 164,
      columnNumber: 49
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/DefaultSidebar.jsx",
    lineNumber: 151,
    columnNumber: 5
  }, this);
}

// app/routes/($locale).account.jsx
var import_jsx_dev_runtime37 = __toESM(require_jsx_dev_runtime());
function shouldRevalidate() {
  return !0;
}
async function loader24({ request, context }) {
  let { session, storefront } = context, { pathname } = new URL(request.url), customerAccessToken = await session.get("customerAccessToken"), isLoggedIn = Boolean(customerAccessToken == null ? void 0 : customerAccessToken.accessToken), isAccountHome = pathname === "/account" || pathname === "/account/", isPrivateRoute = /^\/account\/(orders|orders\/.*|profile|addresses|addresses\/.*)$/.test(
    pathname
  );
  if (isLoggedIn) {
    if (isAccountHome)
      return redirect4("/account/orders");
  } else
    return isPrivateRoute || isAccountHome ? (session.unset("customerAccessToken"), redirect4("/account/login", {
      headers: {
        "Set-Cookie": await session.commit()
      }
    })) : json3({
      isLoggedIn: !1,
      isAccountHome,
      isPrivateRoute,
      customer: null
    });
  try {
    let { customer } = await storefront.query(CUSTOMER_QUERY, {
      variables: {
        customerAccessToken: customerAccessToken.accessToken,
        country: storefront.i18n.country,
        language: storefront.i18n.language
      },
      cache: storefront.CacheNone()
    });
    if (!customer)
      throw new Error("Customer not found");
    return json3(
      { isLoggedIn, isPrivateRoute, isAccountHome, customer },
      {
        headers: {
          "Cache-Control": "no-cache, no-store, must-revalidate"
        }
      }
    );
  } catch (error) {
    return console.error("There was a problem loading account", error), session.unset("customerAccessToken"), redirect4("/account/login", {
      headers: {
        "Set-Cookie": await session.commit()
      }
    });
  }
}
function Acccount() {
  let { customer, isPrivateRoute, isAccountHome } = useLoaderData2();
  return !isPrivateRoute && !isAccountHome ? /* @__PURE__ */ (0, import_jsx_dev_runtime37.jsxDEV)(Outlet, { context: { customer } }, void 0, !1, {
    fileName: "app/routes/($locale).account.jsx",
    lineNumber: 82,
    columnNumber: 12
  }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime37.jsxDEV)(AccountLayout, { customer, children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime37.jsxDEV)("br", {}, void 0, !1, {
      fileName: "app/routes/($locale).account.jsx",
      lineNumber: 87,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime37.jsxDEV)("br", {}, void 0, !1, {
      fileName: "app/routes/($locale).account.jsx",
      lineNumber: 88,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime37.jsxDEV)(Outlet, { context: { customer } }, void 0, !1, {
      fileName: "app/routes/($locale).account.jsx",
      lineNumber: 89,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).account.jsx",
    lineNumber: 86,
    columnNumber: 5
  }, this);
}
function AccountLayout({ customer, children }) {
  let heading = customer ? customer.firstName ? customer.firstName : customer.lastName : "Account Details";
  return /* @__PURE__ */ (0, import_jsx_dev_runtime37.jsxDEV)("div", { className: "flex", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime37.jsxDEV)(AcccountMenu, { heading }, void 0, !1, {
      fileName: "app/routes/($locale).account.jsx",
      lineNumber: 105,
      columnNumber: 7
    }, this),
    children
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).account.jsx",
    lineNumber: 102,
    columnNumber: 5
  }, this);
}
function AcccountMenu({ heading }) {
  function isActiveStyle({ isActive, isPending }) {
    return {
      fontWeight: isActive ? "bold" : "",
      color: isPending ? "grey" : "black"
    };
  }
  return /* @__PURE__ */ (0, import_jsx_dev_runtime37.jsxDEV)(DefaultSidebar, { heading }, void 0, !1, {
    fileName: "app/routes/($locale).account.jsx",
    lineNumber: 119,
    columnNumber: 3
  }, this);
}
var CUSTOMER_FRAGMENT2 = `#graphql
  fragment Customer on Customer {
    acceptsMarketing
    addresses(first: 6) {
      nodes {
        ...Address
      }
    }
    defaultAddress {
      ...Address
    }
    email
    firstName
    lastName
    numberOfOrders
    phone
  }
  fragment Address on MailingAddress {
    id
    formatted
    firstName
    lastName
    company
    address1
    address2
    country
    province
    city
    zip
    phone
  }
`, CUSTOMER_QUERY = `#graphql
  query Customer(
    $customerAccessToken: String!
    $country: CountryCode
    $language: LanguageCode
  ) @inContext(country: $country, language: $language) {
    customer(customerAccessToken: $customerAccessToken) {
      ...Customer
    }
  }
  ${CUSTOMER_FRAGMENT2}
`;

// app/routes/($locale)._index.jsx
var locale_index_exports = {};
__export(locale_index_exports, {
  default: () => Homepage,
  loader: () => loader25,
  meta: () => meta17
});
var import_react102 = __toESM(require_react());

// app/components/GiftingCollection.jsx
var import_react98 = __toESM(require_react()), import_react_responsive8 = __toESM(require_react_responsive()), import_react_slick4 = __toESM(require_lib()), import_jsx_dev_runtime38 = __toESM(require_jsx_dev_runtime()), GiftingCollection = ({ collections, title }) => {
  let productsToShow = [], [startIndex, setStartIndex] = (0, import_react98.useState)(0), isLargeScreen = (0, import_react_responsive8.useMediaQuery)({ minWidth: 1024 }), goToCollection = (url_path) => {
    window.location.href = url_path;
  };
  console.log("isLarge ::", isLargeScreen);
  let totalLen = collections.length, settings = {
    centerMode: !isLargeScreen,
    dots: totalLen > 3,
    infinite: !1,
    speed: 500,
    initialSlide: 0,
    slidesToShow: 3,
    slidesToScroll: 1,
    responsive: [
      {
        breakpoint: 1024,
        settings: {
          slidesToShow: 3,
          slidesToScroll: 1,
          infinite: !0,
          dots: !0
        }
      },
      {
        breakpoint: 600,
        settings: {
          slidesToShow: 3,
          slidesToScroll: 1,
          initialSlide: 1,
          dots: !0
        }
      },
      {
        breakpoint: 520,
        settings: {
          slidesToShow: 1,
          slidesToScroll: 1,
          dots: !0
        }
      }
    ]
  };
  return /* @__PURE__ */ (0, import_jsx_dev_runtime38.jsxDEV)("div", { className: "recommended_section w-full max-w-screen-xl mx-auto lg:px-24 sm:px-4 md:px-6", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime38.jsxDEV)("h1", { className: "text-center font-semibold mb-[15px]", children: [
      title,
      /* @__PURE__ */ (0, import_jsx_dev_runtime38.jsxDEV)("p", { className: "text-center font-light", children: " Perfect for Any Occasion " }, void 0, !1, {
        fileName: "app/components/GiftingCollection.jsx",
        lineNumber: 56,
        columnNumber: 3
      }, this)
    ] }, void 0, !0, {
      fileName: "app/components/GiftingCollection.jsx",
      lineNumber: 54,
      columnNumber: 1
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime38.jsxDEV)("div", { className: "relative mb-8", children: /* @__PURE__ */ (0, import_jsx_dev_runtime38.jsxDEV)(import_react_slick4.default, { ...settings, children: collections.map((coll, index3) => /* @__PURE__ */ (0, import_jsx_dev_runtime38.jsxDEV)("div", { className: "w-full", children: /* @__PURE__ */ (0, import_jsx_dev_runtime38.jsxDEV)("div", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime38.jsxDEV)(
      "img",
      {
        onClick: () => goToCollection(`/collections/${coll.handle}`),
        src: coll.image.url,
        alt: coll.title,
        className: "lg:w-full lg:h-auto rounded-lg w:[100%] sm:w-[375px] sm:w-[250px] cursor"
      },
      void 0,
      !1,
      {
        fileName: "app/components/GiftingCollection.jsx",
        lineNumber: 64,
        columnNumber: 15
      },
      this
    ) }, void 0, !1, {
      fileName: "app/components/GiftingCollection.jsx",
      lineNumber: 63,
      columnNumber: 13
    }, this) }, `gift_${index3}`, !1, {
      fileName: "app/components/GiftingCollection.jsx",
      lineNumber: 62,
      columnNumber: 16
    }, this)) }, void 0, !1, {
      fileName: "app/components/GiftingCollection.jsx",
      lineNumber: 60,
      columnNumber: 5
    }, this) }, void 0, !1, {
      fileName: "app/components/GiftingCollection.jsx",
      lineNumber: 59,
      columnNumber: 1
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/GiftingCollection.jsx",
    lineNumber: 53,
    columnNumber: 1
  }, this);
};
var GiftingCollection_default = GiftingCollection;

// app/routes/($locale)._index.jsx
var import_react_responsive10 = __toESM(require_react_responsive());

// app/components/BlogCorousel.jsx
var import_react99 = __toESM(require_react()), import_react_responsive9 = __toESM(require_react_responsive()), import_react_slick5 = __toESM(require_lib()), import_jsx_dev_runtime39 = __toESM(require_jsx_dev_runtime()), MobileProductCorousel = ({ products: products2, title, settings }) => {
  let [startIndex, setStartIndex] = (0, import_react99.useState)(0);
  return /* @__PURE__ */ (0, import_jsx_dev_runtime39.jsxDEV)("div", { className: "w-full max-w-screen-2xl mx-auto px-1", children: /* @__PURE__ */ (0, import_jsx_dev_runtime39.jsxDEV)("div", { className: "relative", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime39.jsxDEV)("h1", { className: "text-center lg:text-[28px] my-4 text-[20px]", children: title }, void 0, !1, {
      fileName: "app/components/BlogCorousel.jsx",
      lineNumber: 12,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime39.jsxDEV)(import_react_slick5.default, { ...settings, children: products2.nodes.map((product, index3) => /* @__PURE__ */ (0, import_jsx_dev_runtime39.jsxDEV)("div", { className: "px-2 bg-white", children: /* @__PURE__ */ (0, import_jsx_dev_runtime39.jsxDEV)("a", { href: `/blogs/${product.handle}`, children: /* @__PURE__ */ (0, import_jsx_dev_runtime39.jsxDEV)(
      "img",
      {
        src: `${product.articles.edges[0].node.image.url}`,
        alt: product.title,
        className: "mst-card lg:w-full lg:h-auto lg:px-5 sm:mx-3 w-[320px]"
      },
      void 0,
      !1,
      {
        fileName: "app/components/BlogCorousel.jsx",
        lineNumber: 19,
        columnNumber: 15
      },
      this
    ) }, void 0, !1, {
      fileName: "app/components/BlogCorousel.jsx",
      lineNumber: 18,
      columnNumber: 15
    }, this) }, `blog_${index3}`, !1, {
      fileName: "app/components/BlogCorousel.jsx",
      lineNumber: 17,
      columnNumber: 13
    }, this)) }, void 0, !1, {
      fileName: "app/components/BlogCorousel.jsx",
      lineNumber: 15,
      columnNumber: 9
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/BlogCorousel.jsx",
    lineNumber: 11,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/components/BlogCorousel.jsx",
    lineNumber: 10,
    columnNumber: 5
  }, this);
}, DesktopCorousel2 = ({ products: products2, title, settings }) => {
  let [startIndex, setStartIndex] = (0, import_react99.useState)(0), productsToShow = products2.nodes.slice(startIndex, startIndex + 3), isMobile = (0, import_react_responsive9.useMediaQuery)({ maxWidth: 640 }), nextProducts = () => {
    setStartIndex((prevIndex) => (prevIndex + 3) % products2.length);
  };
  settings.infinite = !1;
  let prevProducts = () => {
    setStartIndex(
      (prevIndex) => prevIndex === 0 ? products2.length - products2.length % 3 : prevIndex - 1
    );
  };
  return /* @__PURE__ */ (0, import_jsx_dev_runtime39.jsxDEV)("div", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime39.jsxDEV)("div", { className: "w-full max-w-screen-2xl mx-auto px-1", children: /* @__PURE__ */ (0, import_jsx_dev_runtime39.jsxDEV)("div", { className: "relative", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime39.jsxDEV)("h1", { className: "text-center", children: title }, void 0, !1, {
      fileName: "app/components/BlogCorousel.jsx",
      lineNumber: 53,
      columnNumber: 11
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime39.jsxDEV)(import_react_slick5.default, { ...settings, children: products2.nodes.map((product, index3) => /* @__PURE__ */ (0, import_jsx_dev_runtime39.jsxDEV)("div", { className: "px-2 bg-white", children: /* @__PURE__ */ (0, import_jsx_dev_runtime39.jsxDEV)("a", { href: `/blogs/${product.handle}`, children: /* @__PURE__ */ (0, import_jsx_dev_runtime39.jsxDEV)(
      "img",
      {
        src: `${product.articles.edges[0].node.image.url}`,
        alt: product.title,
        className: "mst-card lg:w-full lg:h-auto"
      },
      void 0,
      !1,
      {
        fileName: "app/components/BlogCorousel.jsx",
        lineNumber: 58,
        columnNumber: 19
      },
      this
    ) }, void 0, !1, {
      fileName: "app/components/BlogCorousel.jsx",
      lineNumber: 57,
      columnNumber: 19
    }, this) }, `blog_${index3}`, !1, {
      fileName: "app/components/BlogCorousel.jsx",
      lineNumber: 56,
      columnNumber: 17
    }, this)) }, void 0, !1, {
      fileName: "app/components/BlogCorousel.jsx",
      lineNumber: 54,
      columnNumber: 11
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/BlogCorousel.jsx",
    lineNumber: 52,
    columnNumber: 9
  }, this) }, void 0, !1, {
    fileName: "app/components/BlogCorousel.jsx",
    lineNumber: 51,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/components/BlogCorousel.jsx",
    lineNumber: 50,
    columnNumber: 5
  }, this);
}, BlogCorousel = ({ collections, title, isSmall }) => {
  let totalLen = collections.nodes.length, settings = {
    centerMode: !!isSmall,
    dots: totalLen > 3,
    infinite: !1,
    speed: 500,
    initialSlide: isSmall ? 1 : 0,
    slidesToShow: 3,
    slidesToScroll: 1,
    arrows: !1,
    responsive: [
      {
        breakpoint: 1024,
        settings: {
          slidesToShow: 3,
          slidesToScroll: 3,
          infinite: !0,
          dots: !0
        }
      },
      {
        breakpoint: 600,
        settings: {
          slidesToShow: 3,
          slidesToScroll: 1,
          initialSlide: 1,
          dots: !0
        }
      },
      {
        breakpoint: 520,
        settings: {
          slidesToShow: 1,
          slidesToScroll: 1,
          dots: !0
        }
      }
    ]
  };
  return /* @__PURE__ */ (0, import_jsx_dev_runtime39.jsxDEV)("div", { children: isSmall ? /* @__PURE__ */ (0, import_jsx_dev_runtime39.jsxDEV)(MobileProductCorousel, { products: collections, settings, title }, void 0, !1, {
    fileName: "app/components/BlogCorousel.jsx",
    lineNumber: 118,
    columnNumber: 9
  }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime39.jsxDEV)(DesktopCorousel2, { products: collections, settings, title }, void 0, !1, {
    fileName: "app/components/BlogCorousel.jsx",
    lineNumber: 122,
    columnNumber: 9
  }, this) }, void 0, !1, {
    fileName: "app/components/BlogCorousel.jsx",
    lineNumber: 116,
    columnNumber: 5
  }, this);
}, BlogCorousel_default = BlogCorousel;

// app/components/Testimonials.jsx
var import_react_slick6 = __toESM(require_lib()), import_jsx_dev_runtime40 = __toESM(require_jsx_dev_runtime()), Testimonials = ({ page, isSmall }) => {
  let context = page.body.split("<p>split_code</p>"), totalLen = context.length, settings = {
    centerMode: !!isSmall,
    dots: totalLen > 3,
    infinite: !1,
    speed: 500,
    initialSlide: isSmall ? 1 : 0,
    slidesToShow: 3,
    slidesToScroll: 1,
    responsive: [
      {
        breakpoint: 1024,
        settings: {
          slidesToShow: 3,
          slidesToScroll: 3,
          infinite: !0,
          dots: !0
        }
      },
      {
        breakpoint: 600,
        settings: {
          slidesToShow: 2,
          slidesToScroll: 2,
          initialSlide: 2,
          dots: !0
        }
      },
      {
        breakpoint: 520,
        settings: {
          slidesToShow: 1,
          slidesToScroll: 1,
          dots: !0
        }
      }
    ]
  };
  return /* @__PURE__ */ (0, import_jsx_dev_runtime40.jsxDEV)("div", { className: "wrapper w-full text-center mb-8", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime40.jsxDEV)("h1", { children: " Testimonials " }, void 0, !1, {
      fileName: "app/components/Testimonials.jsx",
      lineNumber: 46,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime40.jsxDEV)("ul", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime40.jsxDEV)(import_react_slick6.default, { ...settings, children: context.map((content, index3) => /* @__PURE__ */ (0, import_jsx_dev_runtime40.jsxDEV)("li", { className: "flex gap-4 justify-center", children: /* @__PURE__ */ (0, import_jsx_dev_runtime40.jsxDEV)("div", { className: "shadow-xl p-4 xs:min-h-[345px] sm:min-h-[230px]  min-h-[280px]", dangerouslySetInnerHTML: { __html: content } }, void 0, !1, {
      fileName: "app/components/Testimonials.jsx",
      lineNumber: 51,
      columnNumber: 21
    }, this) }, `testimonials_${index3}`, !1, {
      fileName: "app/components/Testimonials.jsx",
      lineNumber: 50,
      columnNumber: 24
    }, this)) }, void 0, !1, {
      fileName: "app/components/Testimonials.jsx",
      lineNumber: 48,
      columnNumber: 13
    }, this) }, void 0, !1, {
      fileName: "app/components/Testimonials.jsx",
      lineNumber: 47,
      columnNumber: 13
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/Testimonials.jsx",
    lineNumber: 45,
    columnNumber: 9
  }, this);
}, Testimonials_default = Testimonials;

// app/components/LooksComp.jsx
var import_react100 = __toESM(require_react()), import_jsx_dev_runtime41 = __toESM(require_jsx_dev_runtime()), LooksComp = ({ looks }) => {
  let [domLoaded, setDomLoaded] = (0, import_react100.useState)(!1);
  return (0, import_react100.useEffect)(() => {
    setDomLoaded(!0);
  }, []), /* @__PURE__ */ (0, import_jsx_dev_runtime41.jsxDEV)("div", { className: "md:px-4 pb-4 lg:px-24", children: domLoaded && /* @__PURE__ */ (0, import_jsx_dev_runtime41.jsxDEV)(import_jsx_dev_runtime41.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime41.jsxDEV)("h1", { className: "uppercase text-center font-semibold my-[15px]", children: " L.I.T : Looks In Trend " }, void 0, !1, {
      fileName: "app/components/LooksComp.jsx",
      lineNumber: 14,
      columnNumber: 14
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime41.jsxDEV)("div", { className: "mst-slider" }, void 0, !1, {
      fileName: "app/components/LooksComp.jsx",
      lineNumber: 15,
      columnNumber: 14
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime41.jsxDEV)("div", { id: "sg-app", className: "mst-gallery-root" }, void 0, !1, {
      fileName: "app/components/LooksComp.jsx",
      lineNumber: 16,
      columnNumber: 14
    }, this)
  ] }, void 0, !0, {
    fileName: "app/components/LooksComp.jsx",
    lineNumber: 13,
    columnNumber: 13
  }, this) }, void 0, !1, {
    fileName: "app/components/LooksComp.jsx",
    lineNumber: 11,
    columnNumber: 9
  }, this);
}, LooksComp_default = LooksComp;

// app/routes/($locale)._index.jsx
var import_react_slick7 = __toESM(require_lib()), import_react_ga44 = __toESM(require_dist()), import_jsx_dev_runtime42 = __toESM(require_jsx_dev_runtime()), TRACKING_ID3 = "G-T3JX7QEBFV";
import_react_ga44.default.initialize(TRACKING_ID3);
var meta17 = () => [{ title: "MARY JO K | Home" }];
async function loader25({ context }) {
  let { storefront } = context, { collections } = await storefront.query(FEATURED_COLLECTION_QUERY3), collectionProducts = collections, featuredCollection = collections.nodes, recommendedProducts = storefront.query(RECOMMENDED_PRODUCTS_QUERY), { products: products2 } = await storefront.query(RECOMMENDED_PRODUCTS_QUERY), { blogs } = await storefront.query(BLOGS_QUERY3), { page } = await storefront.query(PAGE_QUERY2, {
    variables: {
      handle: "testimonials"
    }
  }), headerPromise = storefront.query(HEADER_QUERY3, {
    cache: storefront.CacheNone(),
    variables: {
      headerMenuHandle: "main-menu"
      // Adjust to your header menu handle
    }
  });
  return defer3({
    featuredCollection,
    recommendedProducts,
    collections,
    collectionProducts,
    products: products2,
    blogs,
    page,
    header: await headerPromise
  });
}
function Homepage() {
  var _a2;
  (0, import_react102.useEffect)(() => {
    import_react_ga44.default.send({ hitType: "pageview", page: window.location.pathname });
  }, []);
  let noImg = "https://cdn.shopify.com/shopifycloud/shopify/assets/no-image-2048-5e88c1b20e087fb7bbe9a3771824e743c244f437e4f8ba93bbf7b11b53f7824c_600x600.gif", data2 = useLoaderData2(), { header, page: testimonialPage } = data2;
  var menus = header.menu.items, collectionArray = menus.filter((item) => item.title !== "Home");
  let isLargeScreen = (0, import_react_responsive10.useMediaQuery)({ minWidth: 1024 }), isSmall = (0, import_react_responsive10.useMediaQuery)({ maxWidth: 640 });
  var GiftCollections = [], ReviewCollection = [], BuildYourOwnColl = [], ThirdHeroCollection = [];
  collectionArray.map((col, index3) => {
    let collNodes = data2.collections.nodes;
    collectionArray[index3].image = { url: noImg }, collNodes.map((item) => {
      var _a3;
      if (item.title.trim() === col.title.trim()) {
        let isImg = (_a3 = item.image) == null ? void 0 : _a3.url;
        collectionArray[index3].handle = col.title.toLowerCase(), collectionArray[index3].image = { url: isImg || noImg };
      }
    });
  });
  var looks = [];
  data2.collectionProducts.nodes.forEach((col) => {
    col.metafields[0] != null && col.metafields[0].value == "true" && ReviewCollection.push(col), col.title === "Lookbooks" && looks.push(col), col.title == "Build Your Own Kit" && BuildYourOwnColl.push(col), col.title == "3rd Hero Collection" && ThirdHeroCollection.push(col), (col.title == "Gift Under 500" || col.title == "Gift Under 1000" || col.title == "Gifts Under 2000") && GiftCollections.push(col);
  }), BuildYourOwnColl = (_a2 = BuildYourOwnColl[0]) == null ? void 0 : _a2.products.edges, ThirdHeroCollection = ThirdHeroCollection[0].products, GiftCollections = GiftCollections;
  function getPath(url_path) {
    return new URL(url_path).pathname;
  }
  let goToCollection = (url_path) => {
    window.location.href = url_path;
  }, totalLen = collectionCult.length, settings = {
    centerMode: !!isSmall,
    dots: totalLen > 3,
    infinite: !0,
    speed: 500,
    initialSlide: isSmall ? 1 : 0,
    slidesToShow: 3,
    slidesToScroll: 1,
    arrows: !1,
    responsive: [
      {
        breakpoint: 1024,
        settings: {
          slidesToShow: 3,
          slidesToScroll: 3,
          infinite: !0,
          dots: !0
        }
      },
      {
        breakpoint: 600,
        settings: {
          slidesToShow: 3,
          slidesToScroll: 1,
          initialSlide: 1,
          dots: !0
        }
      },
      {
        breakpoint: 520,
        settings: {
          slidesToShow: 1,
          slidesToScroll: 1,
          dots: !0
        }
      }
    ]
  };
  return /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("div", { className: "home", children: [
    isSmall ? /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("section", { className: "collectionContent lg:hidden block sm:mt-4 overflow-auto ", children: /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("div", { className: "inline-flex gap-4", children: collectionArrayStatic == null ? void 0 : collectionArrayStatic.map((item, index3) => /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(
      "div",
      {
        className: "col-item sm:w-auto  rounded-lg hover:shadow-md cursor-pointer",
        children: [
          /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("div", { className: "image", children: /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(NavLink2, { to: `/collections/${item.url}`, children: /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(
            "img",
            {
              width: 80,
              height: 80,
              alt: item.collectionname,
              src: item.collectionimageurl
            },
            void 0,
            !1,
            {
              fileName: "app/routes/($locale)._index.jsx",
              lineNumber: 177,
              columnNumber: 19
            },
            this
          ) }, void 0, !1, {
            fileName: "app/routes/($locale)._index.jsx",
            lineNumber: 176,
            columnNumber: 17
          }, this) }, void 0, !1, {
            fileName: "app/routes/($locale)._index.jsx",
            lineNumber: 175,
            columnNumber: 15
          }, this),
          /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("div", { className: "collectionname  sm:text-lg text-[12px] font-semibold  text-center px-[15px] pb-[12px]  pt-[5px]", children: item.collectionname }, void 0, !1, {
            fileName: "app/routes/($locale)._index.jsx",
            lineNumber: 186,
            columnNumber: 15
          }, this)
        ]
      },
      `coll_crsl_${index3}`,
      !0,
      {
        fileName: "app/routes/($locale)._index.jsx",
        lineNumber: 171,
        columnNumber: 13
      },
      this
    )) }, void 0, !1, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 169,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 168,
      columnNumber: 9
    }, this) : null,
    /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("div", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(ImageCarousel_default, {}, void 0, !1, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 198,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 197,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(
      RecommendedProducts3,
      {
        products: data2.collectionProducts.nodes[0].products,
        title: "CULT FAVES"
      },
      data2.collectionProducts.nodes[0].id,
      !1,
      {
        fileName: "app/routes/($locale)._index.jsx",
        lineNumber: 200,
        columnNumber: 7
      },
      this
    ),
    /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("div", { className: "slider-container mb-8 max-w-screen-xl mx-auto lg:px-16 sm:px-4 md:px-6", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("h1", { className: "text-center lg:text=[28px] text-[20px]", children: "CHOOSE YOUR CULT" }, void 0, !1, {
        fileName: "app/routes/($locale)._index.jsx",
        lineNumber: 206,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(import_react_slick7.default, { ...settings, children: collectionCult.map((coll, index3) => /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("div", { className: "px-2", children: /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("div", { className: "bg-white", children: /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(
        "img",
        {
          onClick: () => goToCollection(`/collections/${coll.handle}`),
          src: `${coll.url}`,
          alt: coll.title,
          className: "lg:w-full lg:h-auto rounded-2xl w:[100%] sm:w-[375px] sm:w-[250px] cursor"
        },
        void 0,
        !1,
        {
          fileName: "app/routes/($locale)._index.jsx",
          lineNumber: 213,
          columnNumber: 19
        },
        this
      ) }, void 0, !1, {
        fileName: "app/routes/($locale)._index.jsx",
        lineNumber: 212,
        columnNumber: 17
      }, this) }, `cult_choose_${index3}`, !1, {
        fileName: "app/routes/($locale)._index.jsx",
        lineNumber: 211,
        columnNumber: 22
      }, this)) }, void 0, !1, {
        fileName: "app/routes/($locale)._index.jsx",
        lineNumber: 209,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 205,
      columnNumber: 7
    }, this),
    isLargeScreen && /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("a", { href: "/collections/daily-essentials", children: /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("div", { className: "my-[15px]", children: /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(
      "img",
      {
        src: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/Daily_Essentials_banner.jpg?v=1709971600",
        className: "w-[100%] m-auto"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale)._index.jsx",
        lineNumber: 230,
        columnNumber: 13
      },
      this
    ) }, void 0, !1, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 229,
      columnNumber: 11
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 228,
      columnNumber: 10
    }, this),
    isSmall && /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("a", { href: "/collections/daily-essentials", children: /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("div", { className: "my-[15px]", children: /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(
      "img",
      {
        src: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/mobile_everyday_style.jpg?v=1712816125",
        className: "w-[100%] m-auto rounded-2xl"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale)._index.jsx",
        lineNumber: 240,
        columnNumber: 13
      },
      this
    ) }, void 0, !1, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 239,
      columnNumber: 11
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 238,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(
      RecommendedProducts3,
      {
        products: ThirdHeroCollection,
        title: "DAILY MUST-HAVES"
      },
      ThirdHeroCollection.edges[0].node.id,
      !1,
      {
        fileName: "app/routes/($locale)._index.jsx",
        lineNumber: 248,
        columnNumber: 7
      },
      this
    ),
    /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(GiftingCollection_default, { collections: GiftCollections, title: "Glamorous Gift Picks" }, void 0, !1, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 253,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(YouTubeVideo_default, {}, void 0, !1, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 255,
      columnNumber: 7
    }, this),
    isLargeScreen && /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("a", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("div", { className: "my-[15px]", children: /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(
      "img",
      {
        src: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/Lookbook_Banner.jpg?v=1709971241",
        className: "w-[100%] m-auto"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale)._index.jsx",
        lineNumber: 260,
        columnNumber: 13
      },
      this
    ) }, void 0, !1, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 259,
      columnNumber: 11
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 258,
      columnNumber: 10
    }, this),
    isSmall && /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("a", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("div", { className: "my-[15px]", children: /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(
      "img",
      {
        src: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/mobile_look_book.jpg?v=1712816125",
        className: "w-[100%] m-auto rounded-2xl"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale)._index.jsx",
        lineNumber: 270,
        columnNumber: 13
      },
      this
    ) }, void 0, !1, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 269,
      columnNumber: 11
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 268,
      columnNumber: 9
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(LooksComp_default, { looks }, void 0, !1, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 278,
      columnNumber: 5
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("div", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("a", { href: "/pages/about-us", children: /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("div", { children: isSmall ? /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(
      "img",
      {
        src: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/mobile_about_us.jpg?v=1713353871",
        className: "w-[100%] m-auto rounded-2xl"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale)._index.jsx",
        lineNumber: 288,
        columnNumber: 11
      },
      this
    ) : /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(
      "img",
      {
        src: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/About_US.jpg?v=1712993514",
        className: "w-[100%] m-auto"
      },
      void 0,
      !1,
      {
        fileName: "app/routes/($locale)._index.jsx",
        lineNumber: 283,
        columnNumber: 11
      },
      this
    ) }, void 0, !1, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 281,
      columnNumber: 9
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 280,
      columnNumber: 7
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 279,
      columnNumber: 5
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("div", { className: "mx-8", children: /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(BlogCorousel_default, { isSmall, collections: data2.blogs, title: "CULT CHAPTERS" }, void 0, !1, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 300,
      columnNumber: 7
    }, this) }, void 0, !1, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 299,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(Testimonials_default, { page: testimonialPage, isSmall }, void 0, !1, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 303,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale)._index.jsx",
    lineNumber: 166,
    columnNumber: 5
  }, this);
}
function RecommendedProducts3({ products: products2, title }) {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(import_jsx_dev_runtime42.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("h1", { className: "text-center font-semibold my-[15px]", children: [
      title,
      " "
    ] }, void 0, !0, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 328,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("div", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(import_react102.Suspense, { fallback: /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("div", { children: "Loading..." }, void 0, !1, {
        fileName: "app/routes/($locale)._index.jsx",
        lineNumber: 330,
        columnNumber: 29
      }, this), children: /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(Await2, { resolve: products2, children: /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)(ProductCarousel_default, { products: products2 }, void 0, !1, {
        fileName: "app/routes/($locale)._index.jsx",
        lineNumber: 333,
        columnNumber: 14
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale)._index.jsx",
        lineNumber: 331,
        columnNumber: 11
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale)._index.jsx",
        lineNumber: 330,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime42.jsxDEV)("br", {}, void 0, !1, {
        fileName: "app/routes/($locale)._index.jsx",
        lineNumber: 336,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale)._index.jsx",
      lineNumber: 329,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale)._index.jsx",
    lineNumber: 327,
    columnNumber: 5
  }, this);
}
var FEATURED_COLLECTION_QUERY3 = `#graphql
  fragment FeaturedCollection on Collection {
    products(first:100){
      edges{
        node{
          id
          title
          handle
          priceRange {
            minVariantPrice {
              amount
              currencyCode
            }
          }
          variants(first: 100) {
          edges {
          node {
                id
                availableForSale
                compareAtPrice {
                  amount
                  currencyCode
                }
                metafields(identifiers: [{namespace: "custom", key: "isdefault"} ]){
                    key
                    value
                  }
                }
              }
        }
        images(first:1){
          edges{
            node{
              url
            }
          }
        }
        }
      }
    }
    id
    title
    metafields(identifiers: [{namespace: "custom", key: "from_customer_inbox"}, {namespace: "custom", key: "1_custom_colllection"}]){
      id
      key
      namespace
      value
    }
    image {
      id
      url
      altText
      width
      height
    }
    handle
  }
  query FeaturedCollection($country: CountryCode, $language: LanguageCode)
    @inContext(country: $country, language: $language) {
    collections(first: 100) {
      nodes {
        ...FeaturedCollection
      }
    }
  }
`, RECOMMENDED_PRODUCTS_QUERY = `#graphql
  fragment RecommendedProduct on Product {
    id
    title
    handle
    priceRange {
      minVariantPrice {
        amount
        currencyCode
      }
    }
    metafields(identifiers: [{namespace: "custom", key: "customized"}, {namespace: "custom", key: "reviewed_products"}]){
      key
      value
    }
    variants(first: 100) {
      edges {
        node {
          availableForSale
          compareAtPrice {
            amount
            currencyCode
          }
          id
          metafields(identifiers: [{namespace: "custom", key: "isdefault"} ]){
              key
              value
            }
          # Add other variant fields you need
        }
      }
    }
    priceRange {
      minVariantPrice {
        amount
        currencyCode
      }
    }
    images(first: 10) {
      nodes {
        id
        url
        altText
        width
        height
      }
    }
  }
  query RecommendedProducts ($country: CountryCode, $language: LanguageCode)
    @inContext(country: $country, language: $language) {
    products(first: 10, sortKey: UPDATED_AT, reverse: true) {
      nodes {
        ...RecommendedProduct
      }
    }
  }
`;
var BLOGS_QUERY3 = `#graphql
  query Blogs(
    $country: CountryCode
    $language: LanguageCode
  ) @inContext(country: $country, language: $language) {
    blogs(first: 100) {
      pageInfo {
        hasNextPage
        hasPreviousPage
        startCursor
        endCursor
      }
      nodes {
        title
        handle
        articles(first:10){
        edges{
          node{
            image {
              id
              url
            }
            id
          }
        }
      }
        seo {
          title
          description
        }
      }
    }
  }
`, MENU_FRAGMENT3 = `#graphql
  fragment Menu on Menu {
    id
    items {
      id
      title
      url
      items{
        title
        url
      }
    }
  }
`, HEADER_QUERY3 = `#graphql
  fragment Shop on Shop {
    id
    name
    description
    primaryDomain {
      url
    }
    brand {
      logo {
        image {
          url
        }
      }
    }
  }
  query Header(
    $country: CountryCode
    $headerMenuHandle: String!
    $language: LanguageCode
  ) @inContext(language: $language, country: $country) {
    shop {
      ...Shop
    }
    menu(handle: $headerMenuHandle) {
      ...Menu
    }
  }
  ${MENU_FRAGMENT3}
`, PAGE_QUERY2 = `#graphql
  query Page(
    $language: LanguageCode,
    $country: CountryCode,
    $handle: String!
  )
  @inContext(language: $language, country: $country) {
    page(handle: $handle) {
      id
      title
      body
      seo {
        description
        title
      }
    }
  }
`, collectionCult = [
  {
    title: "Way 2 Slay",
    handle: "way-2-slay-mjk",
    url: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/Way_2_Slay-01.jpg?v=1713511899"
  },
  {
    title: "Rizz & Roll MJK",
    handle: "rizz-roll-mjk",
    url: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/RIzz_and_Roll-01.jpg?v=1713511899"
  },
  {
    title: "Pro Studio MJK",
    handle: "pro-studio-mjk",
    url: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/Pro-studio_1-01.jpg?v=1713511899"
  }
], collectionArrayStatic = [
  {
    collectionname: "Face",
    url: "face",
    collectionimageurl: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/Face-Icon-Mobile.jpg?v=1713183444"
  },
  {
    collectionname: "Lips",
    url: "lips",
    collectionimageurl: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/Lips-icon-mobile.jpg?v=1713183444"
  },
  {
    collectionname: "Eyes",
    url: "eyes",
    collectionimageurl: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/Kajal-Icon-Mobile.jpg?v=1713183444"
  },
  {
    collectionname: "Nail",
    url: "nails",
    collectionimageurl: "https://cdn.shopify.com/s/files/1/0809/4253/0882/files/Nail_Categories-02.jpg?v=1713183501"
  }
];

// app/routes/($locale).offers.jsx
var locale_offers_exports = {};
__export(locale_offers_exports, {
  default: () => Offers,
  loader: () => loader26,
  meta: () => meta18
});
var import_jsx_dev_runtime43 = __toESM(require_jsx_dev_runtime()), meta18 = () => [{ title: "Login" }];
async function loader26({ context }) {
  let { storefront } = context, { collections } = await storefront.query(FEATURED_COLLECTION_QUERY4);
  return defer3({
    collectionProducts: collections
  });
}
function Offers() {
  let data2 = useLoaderData2();
  var GiftCollections = [];
  return data2.collectionProducts.nodes.forEach((col) => {
    (col.title == "Gift Under 500" || col.title == "Gift Under 1000" || col.title == "Gifts Under 2000") && GiftCollections.push(col);
  }), GiftCollections = GiftCollections, /* @__PURE__ */ (0, import_jsx_dev_runtime43.jsxDEV)(import_jsx_dev_runtime43.Fragment, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime43.jsxDEV)("div", { className: "page", children: /* @__PURE__ */ (0, import_jsx_dev_runtime43.jsxDEV)(OfferCarousel_default, { collections: GiftCollections, title: "Gifting Offers" }, void 0, !1, {
    fileName: "app/routes/($locale).offers.jsx",
    lineNumber: 32,
    columnNumber: 9
  }, this) }, void 0, !1, {
    fileName: "app/routes/($locale).offers.jsx",
    lineNumber: 31,
    columnNumber: 7
  }, this) }, void 0, !1, {
    fileName: "app/routes/($locale).offers.jsx",
    lineNumber: 30,
    columnNumber: 5
  }, this);
}
var FEATURED_COLLECTION_QUERY4 = `#graphql
  fragment FeaturedCollection on Collection {
    products(first:100){
      edges{
        node{
          id
          title
          
          handle
          variants(first: 100) {
          edges {
          node {
                id
                metafields(identifiers: [{namespace: "custom", key: "isdefault"} ]){
                          key
                          value
                        }
                }
              }
        }
          images(first:1){
            edges{
              node{
                url
              }
            }
          }
        }
      }
    }
    id
    title
    metafields(identifiers: [{namespace: "custom", key: "from_customer_inbox"}, {namespace: "custom", key: "1_custom_colllection"}]){
      id
      key
      namespace
      value
    }
    image {
      id
      url
      altText
      width
      height
    }
    description
    handle
  }
  query FeaturedCollection($country: CountryCode, $language: LanguageCode)
    @inContext(country: $country, language: $language) {
    collections(first: 100) {
      nodes {
        ...FeaturedCollection
      }
    }
  }
`;

// app/routes/($locale).search.jsx
var locale_search_exports = {};
__export(locale_search_exports, {
  default: () => SearchPage,
  loader: () => loader27,
  meta: () => meta19
});
var import_jsx_dev_runtime44 = __toESM(require_jsx_dev_runtime()), meta19 = () => [{ title: "Hydrogen | Search" }];
async function loader27({ request, context }) {
  let url = new URL(request.url), searchParams = new URLSearchParams(url.search), variables = getPaginationVariables(request, { pageBy: 8 }), searchTerm = String(searchParams.get("q") || "");
  if (!searchTerm)
    return {
      searchResults: { results: null, totalResults: 0 },
      searchTerm
    };
  let data2 = await context.storefront.query(SEARCH_QUERY, {
    variables: {
      query: searchTerm,
      ...variables
    }
  });
  if (!data2)
    throw new Error("No search data returned from Shopify API");
  let totalResults = Object.values(data2).reduce((total, value) => total + value.nodes.length, 0);
  return defer3({ searchTerm, searchResults: {
    results: data2,
    totalResults
  } });
}
function SearchPage() {
  let { searchTerm, searchResults } = useLoaderData2();
  return /* @__PURE__ */ (0, import_jsx_dev_runtime44.jsxDEV)("div", { className: "search", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime44.jsxDEV)("h1", { children: "Search" }, void 0, !1, {
      fileName: "app/routes/($locale).search.jsx",
      lineNumber: 51,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime44.jsxDEV)(SearchForm, { searchTerm }, void 0, !1, {
      fileName: "app/routes/($locale).search.jsx",
      lineNumber: 52,
      columnNumber: 7
    }, this),
    !searchTerm || !searchResults.totalResults ? /* @__PURE__ */ (0, import_jsx_dev_runtime44.jsxDEV)(NoSearchResults, {}, void 0, !1, {
      fileName: "app/routes/($locale).search.jsx",
      lineNumber: 54,
      columnNumber: 9
    }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime44.jsxDEV)(SearchResults, { results: searchResults.results }, void 0, !1, {
      fileName: "app/routes/($locale).search.jsx",
      lineNumber: 56,
      columnNumber: 9
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).search.jsx",
    lineNumber: 50,
    columnNumber: 5
  }, this);
}
var SEARCH_QUERY = `#graphql
  fragment SearchProduct on Product {
    __typename
    handle
    id
    publishedAt
    title
    trackingParameters
    vendor
    variants(first: 1) {
      nodes {
        id
        image {
          url
          altText
          width
          height
        }
        price {
          amount
          currencyCode
        }
        compareAtPrice {
          amount
          currencyCode
        }
        selectedOptions {
          name
          value
        }
        product {
          handle
          title
        }
      }
    }
  }
  fragment SearchPage on Page {
     __typename
     handle
    id
    title
    trackingParameters
  }
  fragment SearchArticle on Article {
    __typename
    handle
    id
    title
    trackingParameters
  }
  query search(
    $country: CountryCode
    $endCursor: String
    $first: Int
    $language: LanguageCode
    $last: Int
    $query: String!
    $startCursor: String
  ) @inContext(country: $country, language: $language) {
    products: search(
      query: $query,
      unavailableProducts: HIDE,
      types: [PRODUCT],
      first: $first,
      sortKey: RELEVANCE,
      last: $last,
      before: $startCursor,
      after: $endCursor
    ) {
      nodes {
        ...on Product {
          ...SearchProduct
        }
      }
      pageInfo {
        hasNextPage
        hasPreviousPage
        startCursor
        endCursor
      }
    }
    pages: search(
      query: $query,
      types: [PAGE],
      first: 10
    ) {
      nodes {
        ...on Page {
          ...SearchPage
        }
      }
    }
    articles: search(
      query: $query,
      types: [ARTICLE],
      first: 10
    ) {
      nodes {
        ...on Article {
          ...SearchArticle
        }
      }
    }
  }
`;

// app/routes/($locale).cart.jsx
var locale_cart_exports = {};
__export(locale_cart_exports, {
  action: () => action11,
  default: () => Cart,
  loader: () => loader28,
  meta: () => meta20
});
var import_react106 = __toESM(require_react());
var import_jsx_dev_runtime45 = __toESM(require_jsx_dev_runtime()), meta20 = () => [{ title: "Hydrogen | Cart" }];
async function loader28({ params, request, context }) {
  let { handle } = params, { storefront } = context, { collections } = await storefront.query(FEATURED_COLLECTION_QUERY5);
  return defer3({ recommendedProducts: collections });
}
async function action11({ request, context }) {
  let { session, cart } = context, [formData, customerAccessToken] = await Promise.all([
    request.formData(),
    session.get("customerAccessToken")
  ]), { action: action12, inputs } = CartForm.getFormInput(formData);
  if (!action12)
    throw new Error("No action provided");
  let status = 200, result;
  switch (action12) {
    case CartForm.ACTIONS.LinesAdd:
      result = await cart.addLines(inputs.lines);
      break;
    case CartForm.ACTIONS.LinesUpdate:
      result = await cart.updateLines(inputs.lines);
      break;
    case CartForm.ACTIONS.LinesRemove:
      result = await cart.removeLines(inputs.lineIds);
      break;
    case CartForm.ACTIONS.DiscountCodesUpdate: {
      let formDiscountCode = inputs.discountCode, discountCodes = formDiscountCode ? [formDiscountCode] : [];
      discountCodes.push(...inputs.discountCodes), result = await cart.updateDiscountCodes(discountCodes);
      break;
    }
    case CartForm.ACTIONS.BuyerIdentityUpdate: {
      result = await cart.updateBuyerIdentity({
        ...inputs.buyerIdentity,
        customerAccessToken
      });
      break;
    }
    default:
      throw new Error(`${action12} cart action is not defined`);
  }
  let cartId = result.cart.id, headers = cart.setCartId(result.cart.id), { cart: cartResult, errors } = result, redirectTo = formData.get("redirectTo") ?? null;
  return typeof redirectTo == "string" && (status = 303, headers.set("Location", redirectTo)), json3(
    {
      cart: cartResult,
      errors,
      analytics: {
        cartId
      }
    },
    { status, headers }
  );
}
function Cart() {
  var _a2;
  let { recommendedProducts } = useLoaderData2(), [root] = useMatches2(), cart = (_a2 = root.data) == null ? void 0 : _a2.cart;
  return console.log("hydrogen cart ::", cart.lines), /* @__PURE__ */ (0, import_jsx_dev_runtime45.jsxDEV)("div", { className: "cart px-4", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime45.jsxDEV)("h1", { children: "Cart" }, void 0, !1, {
      fileName: "app/routes/($locale).cart.jsx",
      lineNumber: 97,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime45.jsxDEV)(import_react106.Suspense, { fallback: /* @__PURE__ */ (0, import_jsx_dev_runtime45.jsxDEV)("p", { children: "Loading cart ..." }, void 0, !1, {
      fileName: "app/routes/($locale).cart.jsx",
      lineNumber: 98,
      columnNumber: 27
    }, this), children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime45.jsxDEV)(Await2, { errorElement: /* @__PURE__ */ (0, import_jsx_dev_runtime45.jsxDEV)("div", { children: "An error occurred" }, void 0, !1, {
        fileName: "app/routes/($locale).cart.jsx",
        lineNumber: 99,
        columnNumber: 30
      }, this), resolve: cart, children: (cart2) => /* @__PURE__ */ (0, import_jsx_dev_runtime45.jsxDEV)(CartMain, { layout: "page", cart: cart2 }, void 0, !1, {
        fileName: "app/routes/($locale).cart.jsx",
        lineNumber: 101,
        columnNumber: 20
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale).cart.jsx",
        lineNumber: 99,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime45.jsxDEV)(
        RecommendedProducts4,
        {
          products: recommendedProducts.nodes[0].products,
          title: "Recommended Products"
        },
        recommendedProducts.nodes[0].id,
        !1,
        {
          fileName: "app/routes/($locale).cart.jsx",
          lineNumber: 104,
          columnNumber: 9
        },
        this
      )
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).cart.jsx",
      lineNumber: 98,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).cart.jsx",
    lineNumber: 96,
    columnNumber: 5
  }, this);
}
function RecommendedProducts4({ products: products2, title }) {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime45.jsxDEV)(import_jsx_dev_runtime45.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime45.jsxDEV)("h1", { className: "text-center font-semibold my-[15px]", children: [
      title,
      " "
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).cart.jsx",
      lineNumber: 117,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime45.jsxDEV)("div", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime45.jsxDEV)(import_react106.Suspense, { fallback: /* @__PURE__ */ (0, import_jsx_dev_runtime45.jsxDEV)("div", { children: "Loading..." }, void 0, !1, {
        fileName: "app/routes/($locale).cart.jsx",
        lineNumber: 119,
        columnNumber: 29
      }, this), children: /* @__PURE__ */ (0, import_jsx_dev_runtime45.jsxDEV)(Await2, { resolve: products2, children: /* @__PURE__ */ (0, import_jsx_dev_runtime45.jsxDEV)(ProductsCorousel_default, { products: products2 }, void 0, !1, {
        fileName: "app/routes/($locale).cart.jsx",
        lineNumber: 122,
        columnNumber: 14
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale).cart.jsx",
        lineNumber: 120,
        columnNumber: 11
      }, this) }, void 0, !1, {
        fileName: "app/routes/($locale).cart.jsx",
        lineNumber: 119,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime45.jsxDEV)("br", {}, void 0, !1, {
        fileName: "app/routes/($locale).cart.jsx",
        lineNumber: 125,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/($locale).cart.jsx",
      lineNumber: 118,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/($locale).cart.jsx",
    lineNumber: 116,
    columnNumber: 5
  }, this);
}
var FEATURED_COLLECTION_QUERY5 = `#graphql
  fragment FeaturedCollection on Collection {
    products(first:100){
      edges{
        node{
          id
          title
          handle
          priceRange {
            minVariantPrice {
              amount
              currencyCode
            }
          }
          variants(first: 100) {
          edges {
          node {
                id
                metafields(identifiers: [{namespace: "custom", key: "isdefault"} ]){
                    key
                    value
                  }
                }
              }
        }
        images(first:1){
          edges{
            node{
              url
            }
          }
        }
        }
      }
    }
    id
    title
    metafields(identifiers: [{namespace: "custom", key: "from_customer_inbox"}, {namespace: "custom", key: "1_custom_colllection"}]){
      id
      key
      namespace
      value
    }
    image {
      id
      url
      altText
      width
      height
    }
    handle
  }
  query FeaturedCollection($country: CountryCode, $language: LanguageCode)
    @inContext(country: $country, language: $language) {
    collections(first: 100) {
      nodes {
        ...FeaturedCollection
      }
    }
  }
`;

// app/routes/[robots.txt].jsx
var robots_txt_exports = {};
__export(robots_txt_exports, {
  ErrorBoundary: () => ErrorBoundary2,
  loader: () => loader29
});
var import_jsx_dev_runtime46 = __toESM(require_jsx_dev_runtime());
async function loader29({ request, context }) {
  let url = new URL(request.url), { shop } = await context.storefront.query(ROBOTS_QUERY), shopId = parseGid(shop.id).id, body = robotsTxtData({ url: url.origin, shopId });
  return new Response(body, {
    status: 200,
    headers: {
      "Content-Type": "text/plain",
      "Cache-Control": `max-age=${60 * 60 * 24}`
    }
  });
}
function ErrorBoundary2() {
  let error = useRouteError();
  if (isRouteErrorResponse(error))
    return /* @__PURE__ */ (0, import_jsx_dev_runtime46.jsxDEV)("div", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime46.jsxDEV)("h1", { children: "Oops" }, void 0, !1, {
        fileName: "app/routes/[robots.txt].jsx",
        lineNumber: 28,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime46.jsxDEV)("p", { children: [
        "Status: ",
        error.status
      ] }, void 0, !0, {
        fileName: "app/routes/[robots.txt].jsx",
        lineNumber: 29,
        columnNumber: 9
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime46.jsxDEV)("p", { children: error.data.message }, void 0, !1, {
        fileName: "app/routes/[robots.txt].jsx",
        lineNumber: 30,
        columnNumber: 9
      }, this)
    ] }, void 0, !0, {
      fileName: "app/routes/[robots.txt].jsx",
      lineNumber: 27,
      columnNumber: 7
    }, this);
  let errorMessage = "Unknown error";
  return error instanceof Error && (errorMessage = error.message), /* @__PURE__ */ (0, import_jsx_dev_runtime46.jsxDEV)("div", { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime46.jsxDEV)("h1", { children: "Uh oh ..." }, void 0, !1, {
      fileName: "app/routes/[robots.txt].jsx",
      lineNumber: 42,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime46.jsxDEV)("p", { children: "Something went wrong." }, void 0, !1, {
      fileName: "app/routes/[robots.txt].jsx",
      lineNumber: 43,
      columnNumber: 7
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime46.jsxDEV)("pre", { children: errorMessage }, void 0, !1, {
      fileName: "app/routes/[robots.txt].jsx",
      lineNumber: 44,
      columnNumber: 7
    }, this)
  ] }, void 0, !0, {
    fileName: "app/routes/[robots.txt].jsx",
    lineNumber: 41,
    columnNumber: 5
  }, this);
}
function robotsTxtData({ url, shopId }) {
  let sitemapUrl = url ? `${url}/sitemap.xml` : void 0;
  return `
User-agent: *
${generalDisallowRules({ sitemapUrl, shopId })}

# Google adsbot ignores robots.txt unless specifically named!
User-agent: adsbot-google
Disallow: /checkouts/
Disallow: /checkout
Disallow: /carts
Disallow: /orders
${shopId ? `Disallow: /${shopId}/checkouts` : ""}
${shopId ? `Disallow: /${shopId}/orders` : ""}
Disallow: /*?*oseid=*
Disallow: /*preview_theme_id*
Disallow: /*preview_script_id*

User-agent: Nutch
Disallow: /

User-agent: AhrefsBot
Crawl-delay: 10
${generalDisallowRules({ sitemapUrl, shopId })}

User-agent: AhrefsSiteAudit
Crawl-delay: 10
${generalDisallowRules({ sitemapUrl, shopId })}

User-agent: MJ12bot
Crawl-Delay: 10

User-agent: Pinterest
Crawl-delay: 1
`.trim();
}
function generalDisallowRules({ shopId, sitemapUrl }) {
  return `Disallow: /admin
Disallow: /cart
Disallow: /orders
Disallow: /checkouts/
Disallow: /checkout
${shopId ? `Disallow: /${shopId}/checkouts` : ""}
${shopId ? `Disallow: /${shopId}/orders` : ""}
Disallow: /carts
Disallow: /account
Disallow: /collections/*sort_by*
Disallow: /*/collections/*sort_by*
Disallow: /collections/*+*
Disallow: /collections/*%2B*
Disallow: /collections/*%2b*
Disallow: /*/collections/*+*
Disallow: /*/collections/*%2B*
Disallow: /*/collections/*%2b*
Disallow: */collections/*filter*&*filter*
Disallow: /blogs/*+*
Disallow: /blogs/*%2B*
Disallow: /blogs/*%2b*
Disallow: /*/blogs/*+*
Disallow: /*/blogs/*%2B*
Disallow: /*/blogs/*%2b*
Disallow: /*?*oseid=*
Disallow: /*preview_theme_id*
Disallow: /*preview_script_id*
Disallow: /policies/
Disallow: /*/*?*ls=*&ls=*
Disallow: /*/*?*ls%3D*%3Fls%3D*
Disallow: /*/*?*ls%3d*%3fls%3d*
Disallow: /search
Allow: /search/
Disallow: /search/?*
Disallow: /apple-app-site-association
Disallow: /.well-known/shopify/monorail
${sitemapUrl ? `Sitemap: ${sitemapUrl}` : ""}`;
}
var ROBOTS_QUERY = `#graphql
  query StoreRobots($country: CountryCode, $language: LanguageCode)
   @inContext(country: $country, language: $language) {
    shop {
      id
    }
  }
`;

// app/routes/($locale).$.jsx
var locale_exports = {};
__export(locale_exports, {
  loader: () => loader30
});
async function loader30({ request }) {
  throw new Response(`${new URL(request.url).pathname} not found`, {
    status: 404
  });
}

// node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/graphiql.jsx
var graphiql_exports = {};
__export(graphiql_exports, {
  loader: () => loader31
});
var loader31 = graphiqlLoader;

// node_modules/@shopify/cli-hydrogen/dist/virtual-routes/virtual-root.jsx
var virtual_root_exports = {};
__export(virtual_root_exports, {
  default: () => App2,
  links: () => links2
});

// node_modules/@shopify/cli-hydrogen/dist/virtual-routes/assets/styles.css
var styles_default = "/build/_assets/styles-G72WKIIU.css";

// node_modules/@shopify/cli-hydrogen/dist/virtual-routes/assets/favicon.svg
var favicon_default2 = "/build/_assets/favicon-5FIZBM2K.svg";

// node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/Layout.jsx
var import_jsx_dev_runtime47 = __toESM(require_jsx_dev_runtime(), 1);
function Layout2(props) {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime47.jsxDEV)("div", { className: "hydrogen-virtual-route", children: props.children }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/Layout.jsx",
    lineNumber: 2,
    columnNumber: 10
  }, this);
}

// node_modules/@shopify/cli-hydrogen/dist/virtual-routes/virtual-root.jsx
var import_jsx_dev_runtime48 = __toESM(require_jsx_dev_runtime(), 1), links2 = () => [
  { rel: "stylesheet", href: styles_default },
  { rel: "icon", type: "image/svg+xml", href: favicon_default2 }
];
function App2() {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime48.jsxDEV)("html", { lang: "en", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime48.jsxDEV)("head", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime48.jsxDEV)("meta", { charSet: "utf-8" }, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/virtual-root.jsx",
        lineNumber: 20,
        columnNumber: 7
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime48.jsxDEV)("meta", { name: "viewport", content: "width=device-width,initial-scale=1" }, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/virtual-root.jsx",
        lineNumber: 21,
        columnNumber: 7
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime48.jsxDEV)("title", { children: "Hydrogen" }, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/virtual-root.jsx",
        lineNumber: 22,
        columnNumber: 7
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime48.jsxDEV)("meta", { name: "description", content: "A custom storefront powered by Hydrogen" }, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/virtual-root.jsx",
        lineNumber: 23,
        columnNumber: 7
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime48.jsxDEV)(Meta, {}, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/virtual-root.jsx",
        lineNumber: 24,
        columnNumber: 7
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime48.jsxDEV)(Links, {}, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/virtual-root.jsx",
        lineNumber: 25,
        columnNumber: 7
      }, this)
    ] }, void 0, !0, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/virtual-root.jsx",
      lineNumber: 19,
      columnNumber: 5
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime48.jsxDEV)("body", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime48.jsxDEV)(Layout2, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime48.jsxDEV)(Outlet, {}, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/virtual-root.jsx",
        lineNumber: 28,
        columnNumber: 15
      }, this) }, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/virtual-root.jsx",
        lineNumber: 28,
        columnNumber: 7
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime48.jsxDEV)(ScrollRestoration2, {}, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/virtual-root.jsx",
        lineNumber: 29,
        columnNumber: 7
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime48.jsxDEV)(Scripts, {}, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/virtual-root.jsx",
        lineNumber: 30,
        columnNumber: 7
      }, this)
    ] }, void 0, !0, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/virtual-root.jsx",
      lineNumber: 27,
      columnNumber: 5
    }, this)
  ] }, void 0, !0, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/virtual-root.jsx",
    lineNumber: 18,
    columnNumber: 10
  }, this);
}

// node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx
var routes_exports = {};
__export(routes_exports, {
  ErrorBoundary: () => ErrorBoundary3,
  HYDROGEN_SHOP_ID: () => HYDROGEN_SHOP_ID,
  default: () => Index,
  links: () => links3,
  loader: () => loader32
});

// node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/HydrogenLogoBaseBW.jsx
var import_jsx_dev_runtime49 = __toESM(require_jsx_dev_runtime(), 1), HydrogenLogoBaseBW = (props) => /* @__PURE__ */ (0, import_jsx_dev_runtime49.jsxDEV)("svg", { width: 81, height: 82, fill: "none", xmlns: "http://www.w3.org/2000/svg", ...props, children: [
  /* @__PURE__ */ (0, import_jsx_dev_runtime49.jsxDEV)("path", { d: "M39.955 81.28 2.138 61.19l12.933-6.818 14.562 7.733 12.218-6.441L27.29 47.93l12.933-6.833L78.04 61.189l-12.934 6.817L51.35 60.7l-12.236 6.457 13.774 7.308-12.933 6.817Z", fill: "#000" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/HydrogenLogoBaseBW.jsx",
    lineNumber: 2,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime49.jsxDEV)("path", { fillRule: "evenodd", clipRule: "evenodd", d: "m40.225 0 39.953 21.227-15.073 7.945-13.756-7.308-10.096 5.328 13.775 7.309-15.075 7.945L0 21.22l15.073-7.945 14.562 7.732 10.078-5.313-14.56-7.731L40.225 0ZM29.426 7.967l14.564 7.734L29.63 23.27 15.07 15.537l-10.794 5.69 35.68 18.956 10.793-5.688-13.773-7.307L51.352 19.6l13.757 7.308 10.794-5.69-35.68-18.956-10.797 5.704Z", fill: "#000" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/HydrogenLogoBaseBW.jsx",
    lineNumber: 3,
    columnNumber: 3
  }, this)
] }, void 0, !0, {
  fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/HydrogenLogoBaseBW.jsx",
  lineNumber: 1,
  columnNumber: 39
}, this);

// node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/HydrogenLogoBaseColor.jsx
var import_jsx_dev_runtime50 = __toESM(require_jsx_dev_runtime(), 1), HydrogenLogoBaseColor = (props) => /* @__PURE__ */ (0, import_jsx_dev_runtime50.jsxDEV)("svg", { width: 76, height: 81, fill: "none", xmlns: "http://www.w3.org/2000/svg", ...props, children: [
  /* @__PURE__ */ (0, import_jsx_dev_runtime50.jsxDEV)("path", { d: "M37.817 80.149 0 60.057l12.934-6.817 14.561 7.733 12.218-6.441-14.561-7.733 12.933-6.833 37.818 20.091-12.934 6.817-13.757-7.307-12.236 6.457 13.775 7.308-12.934 6.817Z", fill: "#000" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/HydrogenLogoBaseColor.jsx",
    lineNumber: 2,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime50.jsxDEV)("path", { d: "M37.818 40.183 0 20.092l12.934-6.818 14.562 7.733 12.218-6.441-14.562-7.733L38.086 0l37.817 20.091-12.934 6.817-13.756-7.307-12.236 6.457 13.774 7.308-12.933 6.817Z", fill: "url(#a)" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/HydrogenLogoBaseColor.jsx",
    lineNumber: 3,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime50.jsxDEV)("defs", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime50.jsxDEV)("linearGradient", { id: "a", x1: 74.48, y1: 21.654, x2: 18.735, y2: 51.694, gradientUnits: "userSpaceOnUse", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime50.jsxDEV)("stop", { offset: 2e-3, stopColor: "#430470" }, void 0, !1, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/HydrogenLogoBaseColor.jsx",
      lineNumber: 5,
      columnNumber: 5
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime50.jsxDEV)("stop", { offset: 0.385, stopColor: "#8E01F0" }, void 0, !1, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/HydrogenLogoBaseColor.jsx",
      lineNumber: 6,
      columnNumber: 5
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime50.jsxDEV)("stop", { offset: 0.635, stopColor: "#354CF6" }, void 0, !1, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/HydrogenLogoBaseColor.jsx",
      lineNumber: 7,
      columnNumber: 5
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime50.jsxDEV)("stop", { offset: 1, stopColor: "#01FFFF" }, void 0, !1, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/HydrogenLogoBaseColor.jsx",
      lineNumber: 8,
      columnNumber: 5
    }, this)
  ] }, void 0, !0, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/HydrogenLogoBaseColor.jsx",
    lineNumber: 4,
    columnNumber: 9
  }, this) }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/HydrogenLogoBaseColor.jsx",
    lineNumber: 4,
    columnNumber: 3
  }, this)
] }, void 0, !0, {
  fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/HydrogenLogoBaseColor.jsx",
  lineNumber: 1,
  columnNumber: 42
}, this);

// node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconDiscord.jsx
var import_jsx_dev_runtime51 = __toESM(require_jsx_dev_runtime(), 1), IconDiscord = (props) => /* @__PURE__ */ (0, import_jsx_dev_runtime51.jsxDEV)("svg", { width: 26, height: 20, fill: "none", xmlns: "http://www.w3.org/2000/svg", ...props, children: /* @__PURE__ */ (0, import_jsx_dev_runtime51.jsxDEV)("path", { d: "M21.19 1.675A19.91 19.91 0 0 0 16.03 0c-.223.415-.482.973-.661 1.418a18.355 18.355 0 0 0-5.72 0A15.367 15.367 0 0 0 8.98 0a19.844 19.844 0 0 0-5.165 1.68C.55 6.776-.336 11.747.106 16.647c2.167 1.67 4.266 2.686 6.33 3.35.51-.724.964-1.495 1.356-2.306a13.149 13.149 0 0 1-2.135-1.073c.179-.137.354-.28.523-.428 4.116 1.989 8.588 1.989 12.655 0 .172.148.347.291.524.428a13.12 13.12 0 0 1-2.139 1.075c.392.81.844 1.582 1.356 2.306 2.066-.664 4.167-1.68 6.333-3.352.52-5.68-.887-10.606-3.718-14.973ZM8.353 13.635c-1.235 0-2.249-1.192-2.249-2.643 0-1.45.992-2.644 2.25-2.644 1.257 0 2.27 1.191 2.248 2.644.002 1.45-.991 2.642-2.249 2.642Zm8.311 0c-1.235 0-2.249-1.192-2.249-2.643 0-1.45.992-2.644 2.25-2.644 1.257 0 2.27 1.191 2.248 2.644 0 1.45-.991 2.642-2.249 2.642Z", fill: "#5C5F62" }, void 0, !1, {
  fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconDiscord.jsx",
  lineNumber: 1,
  columnNumber: 118
}, this) }, void 0, !1, {
  fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconDiscord.jsx",
  lineNumber: 1,
  columnNumber: 32
}, this);

// node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconGithub.jsx
var import_jsx_dev_runtime52 = __toESM(require_jsx_dev_runtime(), 1), IconGithub = (props) => /* @__PURE__ */ (0, import_jsx_dev_runtime52.jsxDEV)("svg", { width: 20, height: 20, fill: "none", xmlns: "http://www.w3.org/2000/svg", ...props, children: /* @__PURE__ */ (0, import_jsx_dev_runtime52.jsxDEV)("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M9.997 0C4.473 0 0 4.588 0 10.253c0 4.537 2.862 8.369 6.835 9.727.5.09.687-.218.687-.487 0-.243-.012-1.05-.012-1.91-2.512.475-3.161-.627-3.361-1.204-.113-.295-.6-1.205-1.025-1.448-.35-.192-.85-.667-.013-.68.788-.012 1.35.744 1.537 1.052.9 1.55 2.337 1.114 2.912.845.087-.666.35-1.115.637-1.371-2.224-.256-4.548-1.14-4.548-5.062 0-1.115.387-2.038 1.024-2.756-.1-.256-.45-1.307.1-2.717 0 0 .838-.269 2.75 1.051.8-.23 1.649-.346 2.499-.346.85 0 1.699.115 2.499.346 1.912-1.333 2.749-1.05 2.749-1.05.55 1.409.2 2.46.1 2.716.637.718 1.025 1.628 1.025 2.756 0 3.934-2.337 4.806-4.561 5.062.362.32.674.936.674 1.897 0 1.371-.012 2.473-.012 2.82 0 .268.187.589.687.486a10.036 10.036 0 0 0 4.93-3.74 10.45 10.45 0 0 0 1.88-5.987C19.993 4.588 15.52 0 9.997 0Z", fill: "#5C5F62" }, void 0, !1, {
  fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconGithub.jsx",
  lineNumber: 1,
  columnNumber: 117
}, this) }, void 0, !1, {
  fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconGithub.jsx",
  lineNumber: 1,
  columnNumber: 31
}, this);

// node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconTwitter.jsx
var import_jsx_dev_runtime53 = __toESM(require_jsx_dev_runtime(), 1), IconTwitter = (props) => /* @__PURE__ */ (0, import_jsx_dev_runtime53.jsxDEV)("svg", { width: 23, height: 20, fill: "none", xmlns: "http://www.w3.org/2000/svg", ...props, children: /* @__PURE__ */ (0, import_jsx_dev_runtime53.jsxDEV)("path", { d: "M20.53 4.979c.014.217.014.434.014.653C20.544 12.305 15.824 20 7.193 20v-.004C4.643 20 2.146 19.214 0 17.732c.37.048.743.072 1.117.073 2.113.002 4.165-.76 5.828-2.166-2.008-.04-3.77-1.45-4.384-3.506a4.356 4.356 0 0 0 2.118-.087C2.49 11.57.915 9.5.915 7.096v-.064a4.414 4.414 0 0 0 2.13.632C.983 6.18.348 3.229 1.593.92c2.382 3.155 5.897 5.073 9.67 5.276-.378-1.754.139-3.592 1.358-4.825 1.89-1.912 4.862-1.814 6.639.22A9.023 9.023 0 0 0 22.24.364c-.35 1.17-1.084 2.162-2.063 2.793a8.822 8.822 0 0 0 2.694-.795A9.97 9.97 0 0 1 20.53 4.98Z", fill: "#5C5F62" }, void 0, !1, {
  fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconTwitter.jsx",
  lineNumber: 1,
  columnNumber: 118
}, this) }, void 0, !1, {
  fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconTwitter.jsx",
  lineNumber: 1,
  columnNumber: 32
}, this);

// node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx
var import_jsx_dev_runtime54 = __toESM(require_jsx_dev_runtime(), 1), IconBanner = (props) => /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("svg", { width: 32, height: 36, fill: "none", xmlns: "http://www.w3.org/2000/svg", ...props, children: [
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#000", d: "M0 9.726h1.455v1.455H0z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 2,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#E172AC", d: "M1.454 9.726h1.455v1.455H1.454zM13.091 3.907h1.455v1.455h-1.455zM24.727 9.726h1.455v1.455h-1.455zM24.727 24.271h1.455v1.455h-1.455zM13.091 30.09h1.455v1.455h-1.455zM1.454 24.271h1.455v1.455H1.454z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 3,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#AC217D", d: "M5.818 9.726h1.455v1.455H5.818zM17.454 3.907h1.455v1.455h-1.455zM29.091 9.726h1.455v1.455h-1.455zM21.818 16.998h1.455v1.455h-1.455zM21.818 18.454h1.455v1.455h-1.455zM20.363 24.271h1.455v1.455h-1.455zM20.363 11.181h1.455v1.455h-1.455zM29.091 24.271h1.455v1.455h-1.455zM17.455 30.09h1.455v1.455h-1.455zM5.818 24.271h1.455v1.455H5.818z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 4,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#000", d: "M7.273 9.726h1.455v1.455H7.273zM1.454 8.271h1.455v1.455H1.454zM5.818 8.271h1.455v1.455H5.818zM2.909 6.817h1.455v1.455H2.909z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 5,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#D43694", d: "M2.909 9.726h1.455v1.455H2.909zM14.546 3.907h1.455v1.455h-1.455zM26.182 9.726h1.455v1.455h-1.455zM18.909 11.181h1.455v1.455h-1.455z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 6,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#D43694", d: "M20.363 12.635h1.455v1.455h-1.455zM20.363 14.09h1.455v1.455h-1.455z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 7,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#D43694", d: "M20.363 15.544h1.455v1.455h-1.455zM11.636 11.181h1.455v1.455h-1.455z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 8,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#D43694", d: "M10.182 12.635h1.455v1.455h-1.455zM10.182 14.09h1.455v1.455h-1.455z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 9,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#D43694", d: "M10.182 15.544h1.455v1.455h-1.455zM10.182 19.908h1.455v1.455h-1.455z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 10,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#D43694", d: "M10.182 21.362h1.455v1.455h-1.455zM10.182 22.817h1.455v1.455h-1.455z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 11,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#D43694", d: "M11.636 24.271h1.455v1.455h-1.455zM20.363 19.908h1.455v1.455h-1.455z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 12,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#D43694", d: "M20.363 21.362h1.455v1.455h-1.455zM20.363 22.817h1.455v1.455h-1.455z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 13,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#D43694", d: "M18.909 24.271h1.455v1.455h-1.455zM26.182 24.271h1.455v1.455h-1.455zM14.545 30.09H16v1.455h-1.455zM2.909 24.271h1.455v1.455H2.909zM2.909 11.181h1.455v1.455H2.909zM14.546 5.361h1.455v1.455h-1.455zM26.182 11.181h1.455v1.455h-1.455zM26.182 25.726h1.455v1.455h-1.455z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 14,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#D43694", d: "M14.546 31.544h1.455v1.455h-1.455zM2.909 25.726h1.455v1.455H2.909z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 15,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#000", d: "M4.364 6.817h1.455v1.455H4.364z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 16,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#D43694", d: "M4.364 9.726h1.455v1.455H4.364zM16 3.907h1.455v1.455H16zM27.637 9.726h1.455v1.455h-1.455zM27.637 24.271h1.455v1.455h-1.455zM16 30.09h1.455v1.455H16zM4.364 24.271h1.455v1.455H4.364z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 17,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#D43694", d: "M4.364 11.181h1.455v1.455H4.364zM16 5.361h1.455v1.455H16zM27.637 11.181h1.455v1.455h-1.455zM27.637 25.726h1.455v1.455h-1.455zM16 31.544h1.455v1.455H16zM4.364 25.726h1.455v1.455H4.364z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 18,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#E172AC", d: "M2.909 8.271h1.455v1.455H2.909zM14.545 2.453H16v1.455h-1.455zM26.182 8.271h1.455v1.455h-1.455zM26.182 22.817h1.455v1.455h-1.455zM14.546 28.635h1.455v1.455h-1.455zM2.909 22.817h1.455v1.455H2.909z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 19,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#AC217D", d: "M2.909 12.635h1.455v1.455H2.909zM14.545 6.817H16v1.455h-1.455zM26.182 12.635h1.455v1.455h-1.455zM26.182 27.181h1.455v1.455h-1.455zM14.546 32.998h1.455v1.455h-1.455zM2.909 27.181h1.455v1.455H2.909z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 20,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#E172AC", d: "M4.364 8.271h1.455v1.455H4.364zM16 2.453h1.455v1.455H16zM27.637 8.271h1.455v1.455h-1.455zM27.637 22.817h1.455v1.455h-1.455zM16 28.635h1.455v1.455H16zM4.364 22.817h1.455v1.455H4.364z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 21,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#AC217D", d: "M4.364 12.635h1.455v1.455H4.364zM16 6.817h1.455v1.455H16zM27.637 12.635h1.455v1.455h-1.455zM27.637 27.181h1.455v1.455h-1.455zM16 32.998h1.455v1.455H16zM4.364 27.181h1.455v1.455H4.364z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 22,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#000", d: "M2.909 14.09h1.455v1.455H2.909zM4.364 14.09h1.455v1.455H4.364zM0 11.181h1.455v1.455H0z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 23,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#000", d: "M1.454 12.635h1.455v1.455H1.454z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 24,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#E172AC", d: "M1.454 11.181h1.455v1.455H1.454zM8.727 16.998h1.455v1.455H8.727zM10.182 11.181h1.455v1.455h-1.455zM10.182 24.271h1.455v1.455h-1.455zM8.727 18.454h1.455v1.455H8.727zM13.091 5.361h1.455v1.455h-1.455zM24.727 11.181h1.455v1.455h-1.455zM24.727 25.726h1.455v1.455h-1.455zM13.091 31.544h1.455v1.455h-1.455zM1.454 25.726h1.455v1.455H1.454z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 25,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#AC217D", d: "M5.818 11.181h1.455v1.455H5.818zM17.454 5.361h1.455v1.455h-1.455zM29.091 11.181h1.455v1.455h-1.455zM29.091 25.726h1.455v1.455h-1.455zM17.454 31.544h1.455v1.455h-1.455zM5.818 25.726h1.455v1.455H5.818z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 26,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#000", d: "M5.818 12.635h1.455v1.455H5.818zM7.273 11.181h1.455v1.455H7.273zM0 24.271h1.455v1.455H0zM23.273 9.726h1.455v1.455h-1.455zM7.273 24.271h1.455v1.455H7.273zM30.546 9.726h1.455v1.455h-1.455zM1.455 22.817H2.91v1.455H1.455zM24.727 8.271h1.455v1.455h-1.455zM5.818 22.817h1.455v1.455H5.818zM29.091 8.271h1.455v1.455h-1.455zM2.909 21.362h1.455v1.455H2.909z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 27,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#000", d: "M26.182 6.817h1.455v1.455h-1.455zM4.364 21.362h1.455v1.455H4.364zM27.637 6.817h1.455v1.455h-1.455zM2.909 28.635h1.455v1.455H2.909zM26.182 14.09h1.455v1.455h-1.455zM4.364 28.635h1.455v1.455H4.364zM27.637 14.09h1.455v1.455h-1.455zM1.454 27.181h1.455v1.455H1.454zM24.727 12.635h1.455v1.455h-1.455zM0 25.726h1.455v1.455H0z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 28,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#000", d: "M23.273 11.181h1.455v1.455h-1.455zM5.818 27.181h1.455v1.455H5.818zM29.091 12.635h1.455v1.455h-1.455zM7.273 25.726h1.455v1.455H7.273zM30.546 11.181h1.455v1.455h-1.455zM23.273 24.271h1.455v1.455h-1.455zM11.636 30.09h1.455v1.455h-1.455zM11.636 3.907h1.455v1.455h-1.455zM18.909 30.09h1.455v1.455h-1.455zM30.546 24.271h1.455v1.455h-1.455zM13.091 28.635h1.455v1.455h-1.455zM18.909 3.907h1.455v1.455h-1.455zM17.454 28.635h1.455v1.455h-1.455z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 29,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#000", d: "M24.727 22.817h1.455v1.455h-1.455zM14.546 27.181h1.455v1.455h-1.455zM13.091 2.453h1.455v1.455h-1.455z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 30,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#000", d: "M16 27.181h1.455v1.455H16zM29.091 22.817h1.455v1.455h-1.455zM14.545 34.454H16v1.455h-1.455zM17.455 2.453h1.455v1.455h-1.455zM16 34.454h1.455v1.455H16zM26.182 21.362h1.455v1.455h-1.455zM13.091 32.998h1.455v1.455h-1.455zM14.546.998h1.455v1.455h-1.455zM11.636 31.544h1.455v1.455h-1.455zM27.637 21.362h1.455v1.455h-1.455zM17.454 32.998h1.455v1.455h-1.455z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 31,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#000", d: "M16 .998h1.455v1.455H16zM18.909 31.544h1.455v1.455h-1.455zM26.182 28.635h1.455v1.455h-1.455zM14.546 8.271h1.455v1.455h-1.455zM27.637 28.635h1.455v1.455h-1.455z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 32,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#000", d: "M16 8.271h1.455v1.455H16zM24.727 27.181h1.455v1.455h-1.455zM13.091 6.817h1.455v1.455h-1.455zM23.273 25.726h1.455v1.455h-1.455zM11.636 5.361h1.455v1.455h-1.455zM29.091 27.181h1.455v1.455h-1.455zM17.455 6.817h1.455v1.455h-1.455zM30.546 25.726h1.455v1.455h-1.455zM18.909 5.361h1.455v1.455h-1.455zM8.727 11.181h1.455v1.455H8.727z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 33,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#000", d: "M8.727 12.635h1.455v1.455H8.727zM8.727 19.908h1.455v1.455H8.727zM21.818 19.908h1.455v1.455h-1.455zM21.818 11.181h1.455v1.455h-1.455z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 34,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#000", d: "M8.727 21.362h1.455v1.455H8.727zM21.818 21.362h1.455v1.455h-1.455zM8.727 14.09h1.455v1.455H8.727zM21.818 12.635h1.455v1.455h-1.455zM8.727 22.817h1.455v1.455H8.727z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 35,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#000", d: "M8.727 24.271h1.455v1.455H8.727zM7.273 16.998h1.455v1.455H7.273zM21.818 22.817h1.455v1.455h-1.455zM23.273 16.998h1.455v1.455h-1.455z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 36,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#000", d: "M21.818 24.271h1.455v1.455h-1.455zM8.727 15.544h1.455v1.455H8.727zM21.818 14.09h1.455v1.455h-1.455zM7.273 18.454h1.455v1.455H7.273z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 37,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#000", d: "M21.818 15.544h1.455v1.455h-1.455zM23.273 18.454h1.455v1.455h-1.455zM11.636 12.635h1.455v1.455h-1.455zM11.636 19.908h1.455v1.455h-1.455zM18.909 19.908h1.455v1.455h-1.455zM18.909 12.635h1.455v1.455h-1.455zM11.636 14.09h1.455v1.455h-1.455z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 38,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#000", d: "M11.636 21.362h1.455v1.455h-1.455zM18.909 21.362h1.455v1.455h-1.455zM18.909 14.09h1.455v1.455h-1.455zM10.182 16.998h1.455v1.455h-1.455zM20.363 16.998h1.455v1.455h-1.455z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 39,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#000", d: "M11.636 15.544h1.455v1.455h-1.455zM11.636 22.817h1.455v1.455h-1.455zM18.909 22.817h1.455v1.455h-1.455zM18.909 15.544h1.455v1.455h-1.455zM13.091 24.271h1.455v1.455h-1.455zM17.454 24.271h1.455v1.455h-1.455zM13.091 25.726h1.455v1.455h-1.455zM17.454 25.726h1.455v1.455h-1.455zM11.636 25.726h1.455v1.455h-1.455zM20.363 25.726h1.455v1.455h-1.455z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 40,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#000", d: "M10.182 25.726h1.455v1.455h-1.455zM18.909 25.726h1.455v1.455h-1.455zM10.182 18.454h1.455v1.455h-1.455zM20.363 18.454h1.455v1.455h-1.455zM10.182 9.726h1.455v1.455h-1.455zM18.909 9.726h1.455v1.455h-1.455z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 41,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#000", d: "M11.636 9.726h1.455v1.455h-1.455zM20.363 9.726h1.455v1.455h-1.455zM13.091 9.726h1.455v1.455h-1.455zM17.454 9.726h1.455v1.455h-1.455z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 42,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime54.jsxDEV)("path", { fill: "#000", d: "M13.091 11.181h1.455v1.455h-1.455zM17.454 11.181h1.455v1.455h-1.455z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
    lineNumber: 43,
    columnNumber: 3
  }, this)
] }, void 0, !0, {
  fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconBanner.jsx",
  lineNumber: 1,
  columnNumber: 31
}, this);

// node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconError.jsx
var import_jsx_dev_runtime55 = __toESM(require_jsx_dev_runtime(), 1), IconError = (props) => /* @__PURE__ */ (0, import_jsx_dev_runtime55.jsxDEV)("svg", { width: 32, height: 32, fill: "none", xmlns: "http://www.w3.org/2000/svg", ...props, children: [
  /* @__PURE__ */ (0, import_jsx_dev_runtime55.jsxDEV)("path", { fill: "#000", d: "M6 18h20v2H6zM30 8h2v16h-2zM0 8h2v16H0z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconError.jsx",
    lineNumber: 2,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime55.jsxDEV)("path", { fill: "#F63310", d: "M2 8h2v16H2zM4 6h2v4H4zM6 4h2v4H6zM8 2h2v4H8zM24 4h2v2h-2zM26 6h2v2h-2z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconError.jsx",
    lineNumber: 3,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime55.jsxDEV)("path", { fill: "#74170B", d: "M26 24h2v2h-2zM28 22h2v2h-2zM24 26h2v2h-2zM22 28h2v2h-2z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconError.jsx",
    lineNumber: 4,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime55.jsxDEV)("path", { fill: "#971C06", d: "M6 26h2v2H6zM4 24h2v2H4zM4 18h2v2H4zM26 18h2v2h-2zM26 12h2v2h-2z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconError.jsx",
    lineNumber: 5,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime55.jsxDEV)("path", { fill: "#D62C0D", d: "M26 8h2v4h-2zM4 10h2v2H4zM8 6h18v2H8zM10 4h14v2H10zM6 8h20v2H6z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconError.jsx",
    lineNumber: 6,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime55.jsxDEV)("path", { fill: "#971C06", d: "M28 10h2v12h-2zM8 28h14v2H8z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconError.jsx",
    lineNumber: 7,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime55.jsxDEV)("path", { fill: "#D62C0D", d: "M26 20h2v2h-2zM4 20h2v2H4z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconError.jsx",
    lineNumber: 8,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime55.jsxDEV)("path", { fill: "#F63310", d: "M4 12h2v2H4z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconError.jsx",
    lineNumber: 9,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime55.jsxDEV)("path", { fill: "#971C06", d: "M6 20h20v2H6z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconError.jsx",
    lineNumber: 10,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime55.jsxDEV)("path", { fill: "#F63310", d: "M28 8h2v2h-2zM10 2h14v2H10zM6 10h20v2H6z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconError.jsx",
    lineNumber: 11,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime55.jsxDEV)("path", { fill: "#D62C0D", d: "M4 22h24v2H4zM6 24h20v2H6zM8 26h16v2H8z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconError.jsx",
    lineNumber: 12,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime55.jsxDEV)("path", { fill: "#000", d: "M6 12h20v2H6z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconError.jsx",
    lineNumber: 13,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime55.jsxDEV)("path", { fill: "#fff", d: "M6 14h20v2H6zM6 16h2v2H6z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconError.jsx",
    lineNumber: 14,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime55.jsxDEV)("path", { fill: "#ECEDEE", d: "M8 16h18v2H8z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconError.jsx",
    lineNumber: 15,
    columnNumber: 3
  }, this),
  /* @__PURE__ */ (0, import_jsx_dev_runtime55.jsxDEV)("path", { fill: "#000", d: "M4 14h2v4H4zM26 14h2v4h-2zM2 6h2v2H2zM4 4h2v2H4zM6 2h2v2H6zM24 2h2v2h-2zM26 4h2v2h-2zM26 26h2v2h-2zM24 28h2v2h-2zM6 28h2v2H6zM4 26h2v2H4zM2 24h2v2H2zM8 30h16v2H8zM28 6h2v2h-2zM28 24h2v2h-2zM8 0h16v2H8z" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconError.jsx",
    lineNumber: 16,
    columnNumber: 3
  }, this)
] }, void 0, !0, {
  fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/components/IconError.jsx",
  lineNumber: 1,
  columnNumber: 30
}, this);

// node_modules/@shopify/cli-hydrogen/dist/virtual-routes/assets/inter-variable-font.woff2
var inter_variable_font_default = "/build/_assets/inter-variable-font-PIM5FCLG.woff2";

// node_modules/@shopify/cli-hydrogen/dist/virtual-routes/assets/jetbrainsmono-variable-font.woff2
var jetbrainsmono_variable_font_default = "/build/_assets/jetbrainsmono-variable-font-QJMIHK5L.woff2";

// node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx
var import_jsx_dev_runtime56 = __toESM(require_jsx_dev_runtime(), 1), links3 = () => [
  {
    rel: "icon",
    type: "image/svg+xml",
    href: favicon_default2
  },
  {
    rel: "preload",
    href: inter_variable_font_default,
    as: "font",
    type: "font/ttf",
    crossOrigin: "anonymous"
  },
  {
    rel: "preload",
    href: jetbrainsmono_variable_font_default,
    as: "font",
    type: "font/ttf",
    crossOrigin: "anonymous"
  }
];
async function loader32({
  context: { storefront }
}) {
  return { layout: await storefront.query(LAYOUT_QUERY), isMockShop: storefront.getApiUrl().includes("mock.shop") };
}
var HYDROGEN_SHOP_ID = "gid://shopify/Shop/55145660472";
function ErrorBoundary3() {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)(ErrorPage, {}, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
    lineNumber: 41,
    columnNumber: 10
  }, this);
}
function Index() {
  let {
    isMockShop: isMockShop2,
    layout: { shop }
  } = useLoaderData2(), { name: shopName, id: shopId } = shop, configDone = shopId !== HYDROGEN_SHOP_ID && !isMockShop2;
  return (isMockShop2 || !shopName) && (shopName = "Hydrogen"), /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)(import_jsx_dev_runtime56.Fragment, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)(Layout3, { shopName, children: [
    configDone ? /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)(HydrogenLogoBaseColor, {}, void 0, !1, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
      lineNumber: 53,
      columnNumber: 19
    }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)(HydrogenLogoBaseBW, {}, void 0, !1, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
      lineNumber: 53,
      columnNumber: 47
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("h1", { children: [
      "Hello, ",
      shopName
    ] }, void 0, !0, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
      lineNumber: 54,
      columnNumber: 5
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("p", { children: "Welcome to your new custom storefront" }, void 0, !1, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
      lineNumber: 58,
      columnNumber: 5
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("section", { className: "Banner", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("div", { children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)(IconBanner, {}, void 0, !1, {
          fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
          lineNumber: 61,
          columnNumber: 9
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("h2", { children: configDone ? "Create your first route" : "Configure storefront token" }, void 0, !1, {
          fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
          lineNumber: 62,
          columnNumber: 9
        }, this)
      ] }, void 0, !0, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
        lineNumber: 60,
        columnNumber: 7
      }, this),
      configDone ? /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("p", { children: [
        "You\u2019re seeing this because you don\u2019t have a home route in your project yet. ",
        /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("br", {}, void 0, !1, {
          fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
          lineNumber: 66,
          columnNumber: 9
        }, this),
        "Run ",
        /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("code", { children: "h2 generate route home" }, void 0, !1, {
          fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
          lineNumber: 68,
          columnNumber: 9
        }, this),
        " to create your home route. Learn more about",
        " ",
        /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)(CreateRoutesLink, {}, void 0, !1, {
          fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
          lineNumber: 71,
          columnNumber: 9
        }, this)
      ] }, void 0, !0, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
        lineNumber: 64,
        columnNumber: 21
      }, this) : /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("p", { children: [
        "You\u2019re seeing this because you have not yet configured your storefront token. ",
        /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("br", {}, void 0, !1, {
          fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
          lineNumber: 74,
          columnNumber: 9
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("br", {}, void 0, !1, {
          fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
          lineNumber: 75,
          columnNumber: 9
        }, this),
        " To link your store,",
        " ",
        "run ",
        /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("code", { children: "h2 link && h2 env pull" }, void 0, !1, {
          fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
          lineNumber: 79,
          columnNumber: 9
        }, this),
        ". Then, run",
        " ",
        /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("code", { children: "h2 generate route home" }, void 0, !1, {
          fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
          lineNumber: 82,
          columnNumber: 9
        }, this),
        " to create your first route.",
        /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("br", {}, void 0, !1, {
          fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
          lineNumber: 84,
          columnNumber: 9
        }, this),
        "Learn more about",
        " ",
        /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("a", { target: "_blank", rel: "norefferer noopener", href: "https://shopify.dev/docs/custom-storefronts/hydrogen/environment-variables", children: "editing environment variables" }, void 0, !1, {
          fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
          lineNumber: 87,
          columnNumber: 9
        }, this),
        " ",
        "and",
        " ",
        /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)(CreateRoutesLink, {}, void 0, !1, {
          fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
          lineNumber: 91,
          columnNumber: 9
        }, this),
        "."
      ] }, void 0, !0, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
        lineNumber: 72,
        columnNumber: 14
      }, this)
    ] }, void 0, !0, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
      lineNumber: 59,
      columnNumber: 5
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)(ResourcesLinks, {}, void 0, !1, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
      lineNumber: 95,
      columnNumber: 5
    }, this)
  ] }, void 0, !0, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
    lineNumber: 52,
    columnNumber: 12
  }, this) }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
    lineNumber: 52,
    columnNumber: 10
  }, this);
}
function CreateRoutesLink() {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("a", { target: "_blank", rel: "norefferer noopener", href: "https://shopify.dev/docs/custom-storefronts/hydrogen/building/begin-development#step-4-create-a-route", children: "creating routes" }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
    lineNumber: 99,
    columnNumber: 10
  }, this);
}
function ErrorPage() {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)(import_jsx_dev_runtime56.Fragment, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)(Layout3, { shopName: "Hydrogen", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)(HydrogenLogoBaseBW, {}, void 0, !1, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
      lineNumber: 103,
      columnNumber: 5
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("h1", { children: "Hello, Hydrogen" }, void 0, !1, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
      lineNumber: 104,
      columnNumber: 5
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("p", { children: "Welcome to your new custom storefront" }, void 0, !1, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
      lineNumber: 105,
      columnNumber: 5
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("section", { className: "Banner ErrorBanner", children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("div", { children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)(IconError, {}, void 0, !1, {
          fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
          lineNumber: 108,
          columnNumber: 9
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("h2", { children: "There\u2019s a problem with your storefront" }, void 0, !1, {
          fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
          lineNumber: 109,
          columnNumber: 9
        }, this)
      ] }, void 0, !0, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
        lineNumber: 107,
        columnNumber: 7
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("p", { children: [
        "Check your domain and API token in your ",
        /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("code", { children: ".env" }, void 0, !1, {
          fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
          lineNumber: 113,
          columnNumber: 9
        }, this),
        " file. Learn more about",
        " ",
        /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("a", { target: "_blank", rel: "norefferer noopener", href: "https://shopify.dev/docs/custom-storefronts/hydrogen/environment-variables", children: "editing environment variables" }, void 0, !1, {
          fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
          lineNumber: 116,
          columnNumber: 9
        }, this),
        "."
      ] }, void 0, !0, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
        lineNumber: 111,
        columnNumber: 7
      }, this)
    ] }, void 0, !0, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
      lineNumber: 106,
      columnNumber: 5
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)(ResourcesLinks, {}, void 0, !1, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
      lineNumber: 120,
      columnNumber: 5
    }, this)
  ] }, void 0, !0, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
    lineNumber: 102,
    columnNumber: 12
  }, this) }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
    lineNumber: 102,
    columnNumber: 10
  }, this);
}
function ResourcesLinks() {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)(import_jsx_dev_runtime56.Fragment, { children: /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("section", { className: "Links", children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("h2", { children: "Start building" }, void 0, !1, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
      lineNumber: 125,
      columnNumber: 5
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("ul", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("li", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("a", { target: "_blank", rel: "norefferer noopener", href: "https://shopify.dev/custom-storefronts/hydrogen/building/collection-page", children: "Collection template" }, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
        lineNumber: 127,
        columnNumber: 11
      }, this) }, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
        lineNumber: 127,
        columnNumber: 7
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("li", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("a", { target: "_blank", rel: "norefferer noopener", href: "https://shopify.dev/custom-storefronts/hydrogen/building/product-details-page", children: "Product template" }, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
        lineNumber: 128,
        columnNumber: 11
      }, this) }, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
        lineNumber: 128,
        columnNumber: 7
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("li", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("a", { target: "_blank", rel: "norefferer noopener", href: "https://shopify.dev/custom-storefronts/hydrogen/building/cart", children: "Cart" }, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
        lineNumber: 129,
        columnNumber: 11
      }, this) }, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
        lineNumber: 129,
        columnNumber: 7
      }, this)
    ] }, void 0, !0, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
      lineNumber: 126,
      columnNumber: 5
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("h2", { children: "Resources" }, void 0, !1, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
      lineNumber: 131,
      columnNumber: 5
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("ul", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("li", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("a", { target: "_blank", rel: "norefferer noopener", href: "https://shopify.dev/custom-storefronts/hydrogen", children: "Hydrogen docs" }, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
        lineNumber: 133,
        columnNumber: 11
      }, this) }, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
        lineNumber: 133,
        columnNumber: 7
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("li", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("a", { target: "_blank", rel: "norefferer noopener", href: "https://shopify.dev/custom-storefronts/hydrogen/project-structure", children: "Remix and project structure" }, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
        lineNumber: 134,
        columnNumber: 11
      }, this) }, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
        lineNumber: 134,
        columnNumber: 7
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("li", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("a", { target: "_blank", rel: "norefferer noopener", href: "https://shopify.dev/custom-storefronts/hydrogen/data-fetching/fetch-data", children: "Data queries and fetching" }, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
        lineNumber: 135,
        columnNumber: 11
      }, this) }, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
        lineNumber: 135,
        columnNumber: 7
      }, this)
    ] }, void 0, !0, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
      lineNumber: 132,
      columnNumber: 5
    }, this)
  ] }, void 0, !0, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
    lineNumber: 124,
    columnNumber: 12
  }, this) }, void 0, !1, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
    lineNumber: 124,
    columnNumber: 10
  }, this);
}
function Layout3({
  shopName,
  children
}) {
  return /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)(import_jsx_dev_runtime56.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("header", { children: [
      /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("h1", { children: shopName == null ? void 0 : shopName.toUpperCase() }, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
        lineNumber: 145,
        columnNumber: 7
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("p", { children: "\xA0Dev Mode\xA0" }, void 0, !1, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
        lineNumber: 146,
        columnNumber: 7
      }, this),
      /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("nav", { children: [
        /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("a", { target: "_blank", rel: "norefferer noopener", href: "https://discord.com/invite/shopifydevs", children: /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)(IconDiscord, {}, void 0, !1, {
          fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
          lineNumber: 148,
          columnNumber: 100
        }, this) }, void 0, !1, {
          fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
          lineNumber: 148,
          columnNumber: 9
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("a", { target: "_blank", rel: "norefferer noopener", href: "https://github.com/Shopify/hydrogen", children: /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)(IconGithub, {}, void 0, !1, {
          fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
          lineNumber: 149,
          columnNumber: 97
        }, this) }, void 0, !1, {
          fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
          lineNumber: 149,
          columnNumber: 9
        }, this),
        /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("a", { target: "_blank", rel: "norefferer noopener", href: "https://twitter.com/shopifydevs?lang=en", children: /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)(IconTwitter, {}, void 0, !1, {
          fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
          lineNumber: 150,
          columnNumber: 101
        }, this) }, void 0, !1, {
          fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
          lineNumber: 150,
          columnNumber: 9
        }, this)
      ] }, void 0, !0, {
        fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
        lineNumber: 147,
        columnNumber: 7
      }, this)
    ] }, void 0, !0, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
      lineNumber: 144,
      columnNumber: 5
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("main", { children }, void 0, !1, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
      lineNumber: 153,
      columnNumber: 5
    }, this),
    /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("footer", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("div", { children: /* @__PURE__ */ (0, import_jsx_dev_runtime56.jsxDEV)("a", { href: "https://shopify.com", target: "_blank", rel: "noreferrer noopener", children: "Powered by Shopify" }, void 0, !1, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
      lineNumber: 154,
      columnNumber: 18
    }, this) }, void 0, !1, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
      lineNumber: 154,
      columnNumber: 13
    }, this) }, void 0, !1, {
      fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
      lineNumber: 154,
      columnNumber: 5
    }, this)
  ] }, void 0, !0, {
    fileName: "node_modules/@shopify/cli-hydrogen/dist/virtual-routes/routes/index.jsx",
    lineNumber: 143,
    columnNumber: 10
  }, this);
}
var LAYOUT_QUERY = `#graphql
  query layout {
    shop {
      name
      id
    }
  }
`;

// server-assets-manifest:@remix-run/dev/assets-manifest
var assets_manifest_default = { entry: { module: "/build/entry.client-ZRVNRO3Q.js", imports: ["/build/_shared/chunk-FM7TTYIF.js", "/build/_shared/chunk-CFXHHO4K.js", "/build/_shared/chunk-PNG5AS42.js"] }, routes: { root: { id: "root", parentId: void 0, path: "", index: void 0, caseSensitive: void 0, module: "/build/root-CWHEA4M2.js", imports: ["/build/_shared/chunk-YQCBG5EG.js", "/build/_shared/chunk-BGS7F2B5.js", "/build/_shared/chunk-APF24Q2F.js", "/build/_shared/chunk-7TS3EQ46.js", "/build/_shared/chunk-XBL5C6DB.js", "/build/_shared/chunk-6I5S762C.js", "/build/_shared/chunk-AQMJZ442.js", "/build/_shared/chunk-DGST5VAI.js", "/build/_shared/chunk-5Q66IB7E.js", "/build/_shared/chunk-D3AIAV2V.js", "/build/_shared/chunk-BSZVYZCA.js", "/build/_shared/chunk-OHHF25P7.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !0 }, "routes/($locale).$": { id: "routes/($locale).$", parentId: "root", path: ":locale?/*", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).$-DDDRNU3P.js", imports: void 0, hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).[sitemap.xml]": { id: "routes/($locale).[sitemap.xml]", parentId: "root", path: ":locale?/sitemap.xml", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).[sitemap.xml]-H6EIDNVM.js", imports: void 0, hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale)._index": { id: "routes/($locale)._index", parentId: "root", path: ":locale?", index: !0, caseSensitive: void 0, module: "/build/routes/($locale)._index-ES7KBF74.js", imports: void 0, hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).account": { id: "routes/($locale).account", parentId: "root", path: ":locale?/account", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).account-LSSFFJZI.js", imports: ["/build/_shared/chunk-7M6P6K7X.js", "/build/_shared/chunk-3G62A2VJ.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).account.$": { id: "routes/($locale).account.$", parentId: "routes/($locale).account", path: "*", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).account.$-IDA7PP7J.js", imports: void 0, hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).account.addresses": { id: "routes/($locale).account.addresses", parentId: "routes/($locale).account", path: "addresses", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).account.addresses-UW56T35F.js", imports: void 0, hasAction: !0, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).account.orders.$id": { id: "routes/($locale).account.orders.$id", parentId: "routes/($locale).account", path: "orders/:id", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).account.orders.$id-TTOMASP7.js", imports: ["/build/_shared/chunk-OHHF25P7.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).account.orders._index": { id: "routes/($locale).account.orders._index", parentId: "routes/($locale).account", path: "orders", index: !0, caseSensitive: void 0, module: "/build/routes/($locale).account.orders._index-7F7XVG3N.js", imports: ["/build/_shared/chunk-ZPBXTGWZ.js", "/build/_shared/chunk-BSZVYZCA.js", "/build/_shared/chunk-OHHF25P7.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).account.profile": { id: "routes/($locale).account.profile", parentId: "routes/($locale).account", path: "profile", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).account.profile-NXUTGPGB.js", imports: void 0, hasAction: !0, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).account_.activate.$id.$activationToken": { id: "routes/($locale).account_.activate.$id.$activationToken", parentId: "root", path: ":locale?/account/activate/:id/:activationToken", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).account_.activate.$id.$activationToken-TWBKTJHT.js", imports: void 0, hasAction: !0, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).account_.login": { id: "routes/($locale).account_.login", parentId: "root", path: ":locale?/account/login", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).account_.login-BCCBUGMG.js", imports: ["/build/_shared/chunk-3G62A2VJ.js"], hasAction: !0, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).account_.logout": { id: "routes/($locale).account_.logout", parentId: "root", path: ":locale?/account/logout", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).account_.logout-H6PFS4O4.js", imports: void 0, hasAction: !0, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).account_.recover": { id: "routes/($locale).account_.recover", parentId: "root", path: ":locale?/account/recover", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).account_.recover-WPHFFVHS.js", imports: void 0, hasAction: !0, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).account_.register": { id: "routes/($locale).account_.register", parentId: "root", path: ":locale?/account/register", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).account_.register-FCZOOCU5.js", imports: void 0, hasAction: !0, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).account_.reset.$id.$resetToken": { id: "routes/($locale).account_.reset.$id.$resetToken", parentId: "root", path: ":locale?/account/reset/:id/:resetToken", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).account_.reset.$id.$resetToken-QJ3G3N7V.js", imports: void 0, hasAction: !0, hasLoader: !1, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).api.predictive-search": { id: "routes/($locale).api.predictive-search", parentId: "root", path: ":locale?/api/predictive-search", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).api.predictive-search-6SBFKV26.js", imports: void 0, hasAction: !0, hasLoader: !1, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).blogs.$blogHandle.$articleHandle": { id: "routes/($locale).blogs.$blogHandle.$articleHandle", parentId: "root", path: ":locale?/blogs/:blogHandle/:articleHandle", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).blogs.$blogHandle.$articleHandle-CJ6TTZ46.js", imports: void 0, hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).blogs.$blogHandle._index": { id: "routes/($locale).blogs.$blogHandle._index", parentId: "root", path: ":locale?/blogs/:blogHandle", index: !0, caseSensitive: void 0, module: "/build/routes/($locale).blogs.$blogHandle._index-UZMD32PD.js", imports: void 0, hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).blogs._index": { id: "routes/($locale).blogs._index", parentId: "root", path: ":locale?/blogs", index: !0, caseSensitive: void 0, module: "/build/routes/($locale).blogs._index-AQR2NA5L.js", imports: void 0, hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).cart": { id: "routes/($locale).cart", parentId: "root", path: ":locale?/cart", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).cart-QA4HKUNR.js", imports: ["/build/_shared/chunk-QN7RQRAI.js"], hasAction: !0, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).collections.$handle": { id: "routes/($locale).collections.$handle", parentId: "root", path: ":locale?/collections/:handle", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).collections.$handle-URCWFC5Q.js", imports: ["/build/_shared/chunk-ZPBXTGWZ.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).collections._index": { id: "routes/($locale).collections._index", parentId: "root", path: ":locale?/collections", index: !0, caseSensitive: void 0, module: "/build/routes/($locale).collections._index-VBBI2UPC.js", imports: void 0, hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).lookbook.$id": { id: "routes/($locale).lookbook.$id", parentId: "root", path: ":locale?/lookbook/:id", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).lookbook.$id-BWD3RNX6.js", imports: void 0, hasAction: !0, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).offers": { id: "routes/($locale).offers", parentId: "root", path: ":locale?/offers", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).offers-PNLK3VAV.js", imports: void 0, hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).pages.$handle": { id: "routes/($locale).pages.$handle", parentId: "root", path: ":locale?/pages/:handle", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).pages.$handle-C7HM3UTA.js", imports: void 0, hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).policies.$handle": { id: "routes/($locale).policies.$handle", parentId: "root", path: ":locale?/policies/:handle", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).policies.$handle-XO72JGCK.js", imports: void 0, hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).policies._index": { id: "routes/($locale).policies._index", parentId: "root", path: ":locale?/policies", index: !0, caseSensitive: void 0, module: "/build/routes/($locale).policies._index-C4O43EB5.js", imports: void 0, hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).products.$handle": { id: "routes/($locale).products.$handle", parentId: "root", path: ":locale?/products/:handle", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).products.$handle-JGNGWGCH.js", imports: ["/build/_shared/chunk-G5T6MYWF.js", "/build/_shared/chunk-QN7RQRAI.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).products.$handle-old": { id: "routes/($locale).products.$handle-old", parentId: "root", path: ":locale?/products/:handle-old", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).products.$handle-old-W5I4PCZX.js", imports: ["/build/_shared/chunk-G5T6MYWF.js", "/build/_shared/chunk-QN7RQRAI.js"], hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/($locale).search": { id: "routes/($locale).search", parentId: "root", path: ":locale?/search", index: void 0, caseSensitive: void 0, module: "/build/routes/($locale).search-TRR7F763.js", imports: void 0, hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "routes/[robots.txt]": { id: "routes/[robots.txt]", parentId: "root", path: "robots.txt", index: void 0, caseSensitive: void 0, module: "/build/routes/[robots.txt]-VETGYYFE.js", imports: void 0, hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !0 }, "virtual-routes/routes/graphiql": { id: "virtual-routes/routes/graphiql", parentId: "virtual-routes/virtual-root", path: "graphiql", index: void 0, caseSensitive: void 0, module: "/build/virtual-routes/routes/graphiql-IUV5DDHT.js", imports: void 0, hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !1 }, "virtual-routes/routes/index": { id: "virtual-routes/routes/index", parentId: "virtual-routes/virtual-root", path: void 0, index: !0, caseSensitive: void 0, module: "/build/virtual-routes/routes/index-53PT7KYB.js", imports: void 0, hasAction: !1, hasLoader: !0, hasCatchBoundary: !1, hasErrorBoundary: !0 }, "virtual-routes/virtual-root": { id: "virtual-routes/virtual-root", parentId: void 0, path: "", index: void 0, caseSensitive: void 0, module: "/build/virtual-routes/virtual-root-OBQMRAOA.js", imports: ["/build/_shared/chunk-Z7RIBLB2.js"], hasAction: !1, hasLoader: !1, hasCatchBoundary: !1, hasErrorBoundary: !1 } }, version: "1d3d7c1d", hmr: void 0, url: "/build/manifest-1D3D7C1D.js" };

// server-entry-module:@remix-run/dev/server-build
var assetsBuildDirectory = "dist/client/build", future = { v2_dev: !1, unstable_postcss: !1, unstable_tailwind: !1, v2_errorBoundary: !0, v2_headers: !0, v2_meta: !0, v2_normalizeFormMethod: !0, v2_routeConvention: !0 }, publicPath = "/build/", entry = { module: entry_server_exports }, routes = {
  root: {
    id: "root",
    parentId: void 0,
    path: "",
    index: void 0,
    caseSensitive: void 0,
    module: root_exports
  },
  "routes/($locale).account_.activate.$id.$activationToken": {
    id: "routes/($locale).account_.activate.$id.$activationToken",
    parentId: "root",
    path: ":locale?/account/activate/:id/:activationToken",
    index: void 0,
    caseSensitive: void 0,
    module: locale_account_activate_id_activationToken_exports
  },
  "routes/($locale).blogs.$blogHandle.$articleHandle": {
    id: "routes/($locale).blogs.$blogHandle.$articleHandle",
    parentId: "root",
    path: ":locale?/blogs/:blogHandle/:articleHandle",
    index: void 0,
    caseSensitive: void 0,
    module: locale_blogs_blogHandle_articleHandle_exports
  },
  "routes/($locale).account_.reset.$id.$resetToken": {
    id: "routes/($locale).account_.reset.$id.$resetToken",
    parentId: "root",
    path: ":locale?/account/reset/:id/:resetToken",
    index: void 0,
    caseSensitive: void 0,
    module: locale_account_reset_id_resetToken_exports
  },
  "routes/($locale).blogs.$blogHandle._index": {
    id: "routes/($locale).blogs.$blogHandle._index",
    parentId: "root",
    path: ":locale?/blogs/:blogHandle",
    index: !0,
    caseSensitive: void 0,
    module: locale_blogs_blogHandle_index_exports
  },
  "routes/($locale).account.orders._index": {
    id: "routes/($locale).account.orders._index",
    parentId: "routes/($locale).account",
    path: "orders",
    index: !0,
    caseSensitive: void 0,
    module: locale_account_orders_index_exports
  },
  "routes/($locale).api.predictive-search": {
    id: "routes/($locale).api.predictive-search",
    parentId: "root",
    path: ":locale?/api/predictive-search",
    index: void 0,
    caseSensitive: void 0,
    module: locale_api_predictive_search_exports
  },
  "routes/($locale).products.$handle-old": {
    id: "routes/($locale).products.$handle-old",
    parentId: "root",
    path: ":locale?/products/:handle-old",
    index: void 0,
    caseSensitive: void 0,
    module: locale_products_handle_old_exports
  },
  "routes/($locale).collections.$handle": {
    id: "routes/($locale).collections.$handle",
    parentId: "root",
    path: ":locale?/collections/:handle",
    index: void 0,
    caseSensitive: void 0,
    module: locale_collections_handle_exports
  },
  "routes/($locale).account.orders.$id": {
    id: "routes/($locale).account.orders.$id",
    parentId: "routes/($locale).account",
    path: "orders/:id",
    index: void 0,
    caseSensitive: void 0,
    module: locale_account_orders_id_exports
  },
  "routes/($locale).collections._index": {
    id: "routes/($locale).collections._index",
    parentId: "root",
    path: ":locale?/collections",
    index: !0,
    caseSensitive: void 0,
    module: locale_collections_index_exports
  },
  "routes/($locale).account.addresses": {
    id: "routes/($locale).account.addresses",
    parentId: "routes/($locale).account",
    path: "addresses",
    index: void 0,
    caseSensitive: void 0,
    module: locale_account_addresses_exports
  },
  "routes/($locale).account_.register": {
    id: "routes/($locale).account_.register",
    parentId: "root",
    path: ":locale?/account/register",
    index: void 0,
    caseSensitive: void 0,
    module: locale_account_register_exports
  },
  "routes/($locale).account_.recover": {
    id: "routes/($locale).account_.recover",
    parentId: "root",
    path: ":locale?/account/recover",
    index: void 0,
    caseSensitive: void 0,
    module: locale_account_recover_exports
  },
  "routes/($locale).policies.$handle": {
    id: "routes/($locale).policies.$handle",
    parentId: "root",
    path: ":locale?/policies/:handle",
    index: void 0,
    caseSensitive: void 0,
    module: locale_policies_handle_exports
  },
  "routes/($locale).products.$handle": {
    id: "routes/($locale).products.$handle",
    parentId: "root",
    path: ":locale?/products/:handle",
    index: void 0,
    caseSensitive: void 0,
    module: locale_products_handle_exports
  },
  "routes/($locale).account.profile": {
    id: "routes/($locale).account.profile",
    parentId: "routes/($locale).account",
    path: "profile",
    index: void 0,
    caseSensitive: void 0,
    module: locale_account_profile_exports
  },
  "routes/($locale).account_.logout": {
    id: "routes/($locale).account_.logout",
    parentId: "root",
    path: ":locale?/account/logout",
    index: void 0,
    caseSensitive: void 0,
    module: locale_account_logout_exports
  },
  "routes/($locale).policies._index": {
    id: "routes/($locale).policies._index",
    parentId: "root",
    path: ":locale?/policies",
    index: !0,
    caseSensitive: void 0,
    module: locale_policies_index_exports
  },
  "routes/($locale).account_.login": {
    id: "routes/($locale).account_.login",
    parentId: "root",
    path: ":locale?/account/login",
    index: void 0,
    caseSensitive: void 0,
    module: locale_account_login_exports
  },
  "routes/($locale).[sitemap.xml]": {
    id: "routes/($locale).[sitemap.xml]",
    parentId: "root",
    path: ":locale?/sitemap.xml",
    index: void 0,
    caseSensitive: void 0,
    module: locale_sitemap_xml_exports
  },
  "routes/($locale).pages.$handle": {
    id: "routes/($locale).pages.$handle",
    parentId: "root",
    path: ":locale?/pages/:handle",
    index: void 0,
    caseSensitive: void 0,
    module: locale_pages_handle_exports
  },
  "routes/($locale).blogs._index": {
    id: "routes/($locale).blogs._index",
    parentId: "root",
    path: ":locale?/blogs",
    index: !0,
    caseSensitive: void 0,
    module: locale_blogs_index_exports
  },
  "routes/($locale).lookbook.$id": {
    id: "routes/($locale).lookbook.$id",
    parentId: "root",
    path: ":locale?/lookbook/:id",
    index: void 0,
    caseSensitive: void 0,
    module: locale_lookbook_id_exports
  },
  "routes/($locale).account.$": {
    id: "routes/($locale).account.$",
    parentId: "routes/($locale).account",
    path: "*",
    index: void 0,
    caseSensitive: void 0,
    module: locale_account_exports
  },
  "routes/($locale).account": {
    id: "routes/($locale).account",
    parentId: "root",
    path: ":locale?/account",
    index: void 0,
    caseSensitive: void 0,
    module: locale_account_exports2
  },
  "routes/($locale)._index": {
    id: "routes/($locale)._index",
    parentId: "root",
    path: ":locale?",
    index: !0,
    caseSensitive: void 0,
    module: locale_index_exports
  },
  "routes/($locale).offers": {
    id: "routes/($locale).offers",
    parentId: "root",
    path: ":locale?/offers",
    index: void 0,
    caseSensitive: void 0,
    module: locale_offers_exports
  },
  "routes/($locale).search": {
    id: "routes/($locale).search",
    parentId: "root",
    path: ":locale?/search",
    index: void 0,
    caseSensitive: void 0,
    module: locale_search_exports
  },
  "routes/($locale).cart": {
    id: "routes/($locale).cart",
    parentId: "root",
    path: ":locale?/cart",
    index: void 0,
    caseSensitive: void 0,
    module: locale_cart_exports
  },
  "routes/[robots.txt]": {
    id: "routes/[robots.txt]",
    parentId: "root",
    path: "robots.txt",
    index: void 0,
    caseSensitive: void 0,
    module: robots_txt_exports
  },
  "routes/($locale).$": {
    id: "routes/($locale).$",
    parentId: "root",
    path: ":locale?/*",
    index: void 0,
    caseSensitive: void 0,
    module: locale_exports
  },
  "virtual-routes/routes/graphiql": {
    id: "virtual-routes/routes/graphiql",
    parentId: "virtual-routes/virtual-root",
    path: "graphiql",
    index: void 0,
    caseSensitive: void 0,
    module: graphiql_exports
  },
  "virtual-routes/virtual-root": {
    id: "virtual-routes/virtual-root",
    parentId: void 0,
    path: "",
    index: void 0,
    caseSensitive: void 0,
    module: virtual_root_exports
  },
  "virtual-routes/routes/index": {
    id: "virtual-routes/routes/index",
    parentId: "virtual-routes/virtual-root",
    path: void 0,
    index: !0,
    caseSensitive: void 0,
    module: routes_exports
  }
};

// server.js
var server_default = {
  async fetch(request, env, executionContext) {
    try {
      if (!(env != null && env.SESSION_SECRET))
        throw new Error("SESSION_SECRET environment variable is not set");
      let waitUntil = (p7) => executionContext.waitUntil(p7), [cache, session] = await Promise.all([
        caches.open("hydrogen"),
        HydrogenSession.init(request, [env.SESSION_SECRET])
      ]);
      console.log("Env::", env.PUBLIC_STOREFRONT_API_VERSION);
      let { storefront } = createStorefrontClient2({
        cache,
        waitUntil,
        i18n: getLocaleFromRequest(request),
        storefrontApiVersion: env.PUBLIC_STOREFRONT_API_VERSION,
        publicStorefrontToken: "8a86833a9662d5cb1d69b9b88200dc3f",
        //env.PUBLIC_STOREFRONT_API_TOKEN,
        privateStorefrontToken: "",
        //env.PRIVATE_STOREFRONT_API_TOKEN,
        storeDomain: "15f63f.myshopify.com",
        //env.PUBLIC_STORE_DOMAIN,
        storefrontId: "",
        //env.PUBLIC_STOREFRONT_ID,
        storefrontHeaders: getStorefrontHeaders(request)
      }), cart = createCartHandler({
        storefront,
        getCartId: cartGetIdDefault(request.headers),
        setCartId: cartSetIdDefault(),
        cartQueryFragment: CART_QUERY_FRAGMENT
      }), response = await createRequestHandler2({
        build: server_build_exports,
        mode: "development",
        getLoadContext: () => ({ session, storefront, env, cart })
      })(request);
      return response.status === 404 ? storefrontRedirect({ request, response, storefront }) : response;
    } catch (error) {
      return console.error(error), new Response("An unexpected error occurred", { status: 500 });
    }
  }
}, HydrogenSession = class {
  sessionStorage;
  session;
  constructor(sessionStorage2, session) {
    this.sessionStorage = sessionStorage2, this.session = session;
  }
  static async init(request, secrets) {
    let storage = createCookieSessionStorage({
      cookie: {
        name: "session",
        httpOnly: !0,
        path: "/",
        sameSite: "lax",
        secrets
      }
    }), session = await storage.getSession(request.headers.get("Cookie"));
    return new this(storage, session);
  }
  has(key) {
    return this.session.has(key);
  }
  get(key) {
    return this.session.get(key);
  }
  destroy() {
    return this.sessionStorage.destroySession(this.session);
  }
  flash(key, value) {
    this.session.flash(key, value);
  }
  unset(key) {
    this.session.unset(key);
  }
  set(key, value) {
    this.session.set(key, value);
  }
  commit() {
    return this.sessionStorage.commitSession(this.session);
  }
}, CART_QUERY_FRAGMENT = `#graphql
  fragment Money on MoneyV2 {
    currencyCode
    amount
  }
  fragment CartLine on CartLine {
    id
    quantity
    attributes {
      key
      value
    }
    cost {
      totalAmount {
        ...Money
      }
      amountPerQuantity {
        ...Money
      }
      compareAtAmountPerQuantity {
        ...Money
      }
    }
    merchandise {
      ... on ProductVariant {
        id
        availableForSale
        compareAtPrice {
          ...Money
        }
        price {
          ...Money
        }
        requiresShipping
        title
        image {
          id
          url
          altText
          width
          height

        }
        product {
          handle
          title
          id
        }
        selectedOptions {
          name
          value
        }
      }
    }
  }
  fragment CartApiQuery on Cart {
    id
    checkoutUrl
    totalQuantity
    buyerIdentity {
      countryCode
      customer {
        id
        email
        firstName
        lastName
        displayName
      }
      email
      phone
    }
    lines(first: $numCartLines) {
      nodes {
        ...CartLine
      }
    }
    cost {
      subtotalAmount {
        ...Money
      }
      totalAmount {
        ...Money
      }
      totalDutyAmount {
        ...Money
      }
      totalTaxAmount {
        ...Money
      }
    }
    note
    attributes {
      key
      value
    }
    discountCodes {
      code
      applicable
    }
  }
`;
function getLocaleFromRequest(request) {
  var _a2;
  let firstPathPart = ((_a2 = new URL(request.url).pathname.split("/")[1]) == null ? void 0 : _a2.toUpperCase()) ?? "", pathPrefix = "", language = "EN", country = "US";
  return /^[A-Z]{2}-[A-Z]{2}$/i.test(firstPathPart) && (pathPrefix = "/" + firstPathPart, [language, country] = firstPathPart.split("-")), { language, country, pathPrefix };
}
export {
  HydrogenSession,
  server_default as default
};
/*! Bundled license information:

react/cjs/react.development.js:
  (**
   * @license React
   * react.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@remix-run/router/dist/router.js:
  (**
   * @remix-run/router v1.7.2
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

react-router/dist/index.js:
  (**
   * React Router v6.14.2
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

react-router-dom/dist/index.js:
  (**
   * React Router DOM v6.14.2
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

react-dom/cjs/react-dom-server-legacy.browser.development.js:
  (**
   * @license React
   * react-dom-server-legacy.browser.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-server.browser.development.js:
  (**
   * @license React
   * react-dom-server.browser.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react/cjs/react-jsx-dev-runtime.development.js:
  (**
   * @license React
   * react-jsx-dev-runtime.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

cookie/index.js:
  (*!
   * cookie
   * Copyright(c) 2012-2014 Roman Shtylman
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

react/cjs/react-jsx-runtime.development.js:
  (**
   * @license React
   * react-jsx-runtime.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

scheduler/cjs/scheduler.development.js:
  (**
   * @license React
   * scheduler.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom.development.js:
  (**
   * @license React
   * react-dom.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
  (**
   * Checks if an event is supported in the current execution environment.
   *
   * NOTE: This will not work correctly for non-generic events such as `change`,
   * `reset`, `load`, `error`, and `select`.
   *
   * Borrows from Modernizr.
   *
   * @param {string} eventNameSuffix Event name, e.g. "click".
   * @return {boolean} True if the event is supported.
   * @internal
   * @license Modernizr 3.0.0pre (Custom Build) | MIT
   *)

react-responsive/dist/react-responsive.js:
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

classnames/index.js:
  (*!
  	Copyright (c) 2018 Jed Watson.
  	Licensed under the MIT License (MIT), see
  	http://jedwatson.github.io/classnames
  *)

react-is/cjs/react-is.development.js:
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

object-assign/index.js:
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)

@floating-ui/react/dist/floating-ui.react.umd.js:
  (*!
  * tabbable 6.0.1
  * @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE
  *)

@remix-run/react/dist/esm/_virtual/_rollupPluginBabelHelpers.js:
  (**
   * @remix-run/react v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/errorBoundaries.js:
  (**
   * @remix-run/react v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/invariant.js:
  (**
   * @remix-run/react v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/routeModules.js:
  (**
   * @remix-run/react v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/links.js:
  (**
   * @remix-run/react v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/markup.js:
  (**
   * @remix-run/react v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/transition.js:
  (**
   * @remix-run/react v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/warnings.js:
  (**
   * @remix-run/react v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/components.js:
  (**
   * @remix-run/react v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/routes.js:
  (**
   * @remix-run/react v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/scroll-restoration.js:
  (**
   * @remix-run/react v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/server.js:
  (**
   * @remix-run/react v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/index.js:
  (**
   * @remix-run/react v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/warnings.js:
  (**
   * @remix-run/server-runtime v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/cookies.js:
  (**
   * @remix-run/server-runtime v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/mode.js:
  (**
   * @remix-run/server-runtime v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/errors.js:
  (**
   * @remix-run/server-runtime v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/responses.js:
  (**
   * @remix-run/server-runtime v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/entry.js:
  (**
   * @remix-run/server-runtime v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/headers.js:
  (**
   * @remix-run/server-runtime v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/invariant.js:
  (**
   * @remix-run/server-runtime v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/routeMatching.js:
  (**
   * @remix-run/server-runtime v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/data.js:
  (**
   * @remix-run/server-runtime v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/routes.js:
  (**
   * @remix-run/server-runtime v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/markup.js:
  (**
   * @remix-run/server-runtime v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/serverHandoff.js:
  (**
   * @remix-run/server-runtime v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/server.js:
  (**
   * @remix-run/server-runtime v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/sessions.js:
  (**
   * @remix-run/server-runtime v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/sessions/cookieStorage.js:
  (**
   * @remix-run/server-runtime v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/sessions/memoryStorage.js:
  (**
   * @remix-run/server-runtime v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/index.js:
  (**
   * @remix-run/server-runtime v1.19.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

tw-elements-react/dist/js/tw-elements-react.es.min.js:
  (*!
  * Tailwind Elements React 1.0.0-alpha1
  * 
  * Tailwind Elements React is an open-source UI kit of advanced components for TailwindCSS.
  * Copyright © 2023 MDBootstrap.com
  * 
  * Unless a custom, individually assigned license has been granted, this program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
  * In addition, a custom license may be available upon request, subject to the terms and conditions of that license. Please contact tailwind@mdbootstrap.com for more information on obtaining a custom license.
  * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
  * 
  *)

@shopify/hydrogen/dist/development/index.js:
  (*! @see: https://shopify.dev/docs/api/storefront/latest/mutations/cartCreate *)
  (*! @see https://shopify.dev/docs/api/storefront/latest/queries/cart *)
  (*! @see: https://shopify.dev/docs/api/storefront/latest/mutations/cartLinesAdd *)
  (*! @see: https://shopify.dev/docs/api/storefront/latest/mutations/cartLinesUpdate *)
  (*! @see: https://shopify.dev/docs/api/storefront/latest/mutations/cartLinesRemove *)
  (*! @see https://shopify.dev/docs/api/storefront/latest/mutations/cartDiscountCodesUpdate *)
  (*! @see https://shopify.dev/docs/api/storefront/latest/mutations/cartGiftCardCodesUpdate *)
  (*! @see https://shopify.dev/docs/api/storefront/latest/mutations/cartBuyerIdentityUpdate *)
  (*! @see https://shopify.dev/docs/api/storefront/latest/mutations/cartNoteUpdate *)
  (*! @see https://shopify.dev/docs/api/storefront/latest/mutations/cartSelectedDeliveryOptionsUpdate *)
  (*! @see https://shopify.dev/docs/api/storefront/latest/mutations/cartMetafieldsSet *)
  (*! @see https://shopify.dev/docs/api/storefront/2024-07/mutations/cartMetafieldDelete *)
*/
//# sourceMappingURL=index.js.map
