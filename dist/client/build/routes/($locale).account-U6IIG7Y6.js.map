{
  "version": 3,
  "sources": ["../../../../app/components/DefaultSidebar.jsx", "../../../../app/routes/($locale).account.jsx"],
  "sourcesContent": ["import {\n  Card,\n  Typography,\n  List,\n  ListItem,\n  ListItemPrefix,\n  ListItemSuffix,\n  Chip,\n} from \"@material-tailwind/react\";\nimport {\n  PresentationChartBarIcon,\n  ShoppingBagIcon,\n  UserCircleIcon,\n  Cog6ToothIcon,\n  InboxIcon,\n  PowerIcon,\n} from \"@heroicons/react/24/solid\";\nimport {Form, NavLink, Outlet, useLoaderData} from '@remix-run/react';\n \nexport function DefaultSidebar({heading}) {\n  return (\n    <>\n    {/*<div className=\"h-90 overflow-y-auto w-full max-w-[16rem] p-4 shadow-xl shadow-blue-gray-900/5\">\n<section className=\"flex font-medium items-center justify-center h-screen\">\n    <section className=\"w-64 mx-auto bg-[#20354b] rounded-2xl px-8 py-1 shadow-lg\">\n        <div className=\"flex items-center justify-between\">\n            <span className=\"text-gray-400 text-sm\">2d ago</span>\n            <span className=\"text-emerald-400\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z\" />\n              </svg>\n            </span>\n        </div>\n        <div className=\"mt-4 w-fit mx-auto\">\n            <img src=\"https://api.lorem.space/image/face?w=120&h=120&hash=bart89fe\" className=\"rounded-full w-28 \" alt=\"profile picture\" srcset=\"\"/>\n        </div>\n        <div className=\"mt-6 \">\n            <h2 className=\"text-white font-bold text-2xl tracking-wide\">{heading}</h2>\n        </div>\n    </section>\n    \n</section>\n<List>\n        <ListItem>\n          <ListItemPrefix>\n            <ShoppingBagIcon className=\"h-5 w-5\" />\n          </ListItemPrefix>\n          <a href=\"/account/order\">Orders</a>\n        </ListItem>\n        <ListItem>\n          <ListItemPrefix>\n            <UserCircleIcon className=\"h-5 w-5\" />\n          </ListItemPrefix>\n          Profile\n        </ListItem>\n        <Logout></Logout>\n      </List>     \n    </div>*/\n    }\n    <div>\n            <div className=\"pt-0 pr-0 pb-0 pl-0 mt-0 mr-0 mb-0 ml-0\">\n\n            </div>\n            <div className=\"bg-white\"></div>\n            <div className=\"bg-white\">\n                <div className=\"flex-col flex\">\n                    {/* <div className=\"w-full border-b-2 border-gray-200\">\n                    </div> */}\n                    <div className=\"flex bg-gray-100  overflow-x-hidden\">\n                        <div className=\"bg-white lg:flex md:w-60 md:flex-col hidden\">\n                            <div className=\"flex-col p-2 flex overflow-y-auto\">\n                                <div className=\"h-full justify-between flex\">\n                                    <div className=\"space-y-4\">\n                                        <div className=\"bg-top bg-cover space-y-1\">\n                                        <section className=\"w-40 mx-auto bg-[#20354b] rounded-2xl shadow-lg\">\n        {/* <div className=\"flex items-center justify-between\">\n            <span className=\"text-emerald-400\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z\" />\n              </svg>\n            </span>\n        </div> */}\n        <div className=\"w-fit mx-auto\">\n            <img src=\"https://api.lorem.space/image/face?w=120&h=120&hash=bart89fe\" className=\"rounded-full w-20 \" alt=\"profile picture\" srcset=\"\"/>\n        </div>\n        {/* <div className=\"mt-8\">\n            <h2 className=\"text-white font-bold text-2xl tracking-wide\">{heading}</h2>\n        </div> */}\n    </section>\n                                            <a href=\"/account/order\" className=\"font-medium text-sm items-center rounded-lg text-gray-900 px-4 py-2.5 flex\n                    transition-all duration-200 hover:bg-gray-200 group cursor-pointer\">\n                                                <span className=\"justify-center items-center flex\">\n                                                    <span className=\"justify-center items-center flex\">\n                                                        <span className=\"justify-center items-center flex\">\n                                                            <span className=\"items-center justify-center flex\">\n                                                            <ListItemPrefix>\n            <ShoppingBagIcon className=\"h-5 w-5\" />\n          </ListItemPrefix>\n                                                            </span>\n                                                        </span>\n                                                    </span>\n                                                </span>\n                                                <span>Order</span>\n                                            </a>\n                                            <a href=\"/account/profile\" className=\"font-medium text-sm items-center rounded-lg text-gray-900 px-4 py-2.5 flex\n                    transition-all duration-200 hover:bg-gray-200 group cursor-pointer\">\n                                                <span className=\"justify-center items-center flex\">\n                                                    <span className=\"justify-center items-center flex\">\n                                                        <span className=\"justify-center items-center flex\">\n                                                            <span className=\"items-center justify-center flex\">\n                                                            <ListItemPrefix>\n            <UserCircleIcon className=\"h-5 w-5\" />\n          </ListItemPrefix>\n                                                            </span>\n                                                        </span>\n                                                    </span>\n                                                </span>\n                                                <span>Profile</span>\n                                            </a>\n                                            <a href=\"/account/addresses\" className=\"font-medium text-sm items-center rounded-lg text-gray-900 px-4 py-2.5 flex\n                    transition-all duration-200 hover:bg-gray-200 group cursor-pointer\">\n                                                <span className=\"justify-center items-center flex\">\n                                                    <span className=\"justify-center items-center flex\">\n                                                        <span className=\"justify-center items-center flex\">\n                                                            <span className=\"items-center justify-center flex\">\n                                                            <ListItemPrefix>\n            <UserCircleIcon className=\"h-5 w-5\" />\n          </ListItemPrefix>\n                                                            </span>\n                                                        </span>\n                                                    </span>\n                                                </span>\n                                                <span>Address</span>\n                                            </a>\n                                            <Logout></Logout>\n                                        </div>                                      \n                                    </div>\n                                   \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div >\n    </>\n  );\n}\nfunction Logout() {\n  return (\n    <a href=\"#\" className=\"font-medium text-sm items-center rounded-lg text-gray-900 px-4 py-2.5 flex\n                    transition-all duration-200 hover:bg-gray-200 group cursor-pointer\">\n                                                <span className=\"justify-center items-center flex\">\n                                                    <span className=\"justify-center items-center flex\">\n                                                        <span className=\"justify-center items-center flex\">\n                                                            <span className=\"items-center justify-center flex\">\n                                                            <ListItemPrefix>\n      <PowerIcon className=\"h-5 w-5\" />\n    </ListItemPrefix>\n                                                            </span>\n                                                        </span>\n                                                    </span>\n                                                </span>\n                                                <Form method=\"POST\" action=\"/account/logout\">\n    <button type=\"submit\">Sign out</button>\n    </Form>\n                                            </a>\n  );\n}", "import {Form, NavLink, Outlet, useLoaderData} from '@remix-run/react';\nimport {json, redirect} from '@shopify/remix-oxygen';\nimport {DefaultSidebar} from '~/components/DefaultSidebar'\n\nexport function shouldRevalidate() {\n  return true;\n}\n\nexport async function loader({request, context}) {\n  const {session, storefront} = context;\n  const {pathname} = new URL(request.url);\n  const customerAccessToken = await session.get('customerAccessToken');\n  const isLoggedIn = Boolean(customerAccessToken?.accessToken);\n  const isAccountHome = pathname === '/account' || pathname === '/account/';\n  const isPrivateRoute =\n    /^\\/account\\/(orders|orders\\/.*|profile|addresses|addresses\\/.*)$/.test(\n      pathname,\n    );\n\n  if (!isLoggedIn) {\n    if (isPrivateRoute || isAccountHome) {\n      session.unset('customerAccessToken');\n      return redirect('/account/login', {\n        headers: {\n          'Set-Cookie': await session.commit(),\n        },\n      });\n    } else {\n      // public subroute such as /account/login...\n      return json({\n        isLoggedIn: false,\n        isAccountHome,\n        isPrivateRoute,\n        customer: null,\n      });\n    }\n  } else {\n    // loggedIn, default redirect to the orders page\n    if (isAccountHome) {\n      return redirect('/account/orders');\n    }\n  }\n\n  try {\n    const {customer} = await storefront.query(CUSTOMER_QUERY, {\n      variables: {\n        customerAccessToken: customerAccessToken.accessToken,\n        country: storefront.i18n.country,\n        language: storefront.i18n.language,\n      },\n      cache: storefront.CacheNone(),\n    });\n\n    if (!customer) {\n      throw new Error('Customer not found');\n    }\n\n    return json(\n      {isLoggedIn, isPrivateRoute, isAccountHome, customer},\n      {\n        headers: {\n          'Cache-Control': 'no-cache, no-store, must-revalidate',\n        },\n      },\n    );\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('There was a problem loading account', error);\n    session.unset('customerAccessToken');\n    return redirect('/account/login', {\n      headers: {\n        'Set-Cookie': await session.commit(),\n      },\n    });\n  }\n}\n\nexport default function Acccount() {\n  const {customer, isPrivateRoute, isAccountHome} = useLoaderData();\n\n  if (!isPrivateRoute && !isAccountHome) {\n    return <Outlet context={{customer}} />;\n  }\n\n  return (\n    <AccountLayout customer={customer}>\n      <br />\n      <br />\n      <Outlet context={{customer}} />\n    </AccountLayout>\n  );\n}\n\nfunction AccountLayout({customer, children}) {\n  const heading = customer\n    ? customer.firstName\n      ? customer.firstName\n      : customer.lastName\n    : 'Account Details';\n\n  return (\n    <div className=\"flex\">\n      {/*<h1>{heading}</h1>\n      <br />*/}\n      <AcccountMenu heading={heading}/>\n      {children}\n    </div>\n  );\n}\n\nfunction AcccountMenu({heading}) {\n  function isActiveStyle({isActive, isPending}) {\n    return {\n      fontWeight: isActive ? 'bold' : '',\n      color: isPending ? 'grey' : 'black',\n    };\n  }\n  return (\n  <DefaultSidebar heading={heading}/>\n  );\n}\n\nfunction Logout() {\n  return (\n    <Form className=\"account-logout\" method=\"POST\" action=\"/account/logout\">\n      &nbsp;<button type=\"submit\">Sign out</button>\n    </Form>\n  );\n}\n\nexport const CUSTOMER_FRAGMENT = `#graphql\n  fragment Customer on Customer {\n    acceptsMarketing\n    addresses(first: 6) {\n      nodes {\n        ...Address\n      }\n    }\n    defaultAddress {\n      ...Address\n    }\n    email\n    firstName\n    lastName\n    numberOfOrders\n    phone\n  }\n  fragment Address on MailingAddress {\n    id\n    formatted\n    firstName\n    lastName\n    company\n    address1\n    address2\n    country\n    province\n    city\n    zip\n    phone\n  }\n`;\n\n// NOTE: https://shopify.dev/docs/api/storefront/latest/queries/customer\nconst CUSTOMER_QUERY = `#graphql\n  query Customer(\n    $customerAccessToken: String!\n    $country: CountryCode\n    $language: LanguageCode\n  ) @inContext(country: $country, language: $language) {\n    customer(customerAccessToken: $customerAccessToken) {\n      ...Customer\n    }\n  }\n  ${CUSTOMER_FRAGMENT}\n`;\n"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime"]
}
