{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).account.orders.$id.jsx"],
  "sourcesContent": ["import {json, redirect} from '@shopify/remix-oxygen';\nimport {Link, useLoaderData} from '@remix-run/react';\nimport {Money, Image, flattenConnection} from '@shopify/hydrogen';\n\nexport const meta = ({data}) => {\n  return [{title: `Order ${data?.order?.name}`}];\n};\n\nexport async function loader({params, context}) {\n  const {session, storefront} = context;\n\n  if (!params.id) {\n    return redirect('/account/orders');\n  }\n\n  const orderId = atob(params.id);\n  const customerAccessToken = await session.get('customerAccessToken');\n\n  if (!customerAccessToken) {\n    return redirect('/account/login');\n  }\n\n  const {order} = await storefront.query(CUSTOMER_ORDER_QUERY, {\n    variables: {orderId},\n  });\n\n  if (!order || !('lineItems' in order)) {\n    throw new Response('Order not found', {status: 404});\n  }\n\n  const lineItems = flattenConnection(order.lineItems);\n  const discountApplications = flattenConnection(order.discountApplications);\n\n  const firstDiscount = discountApplications[0]?.value;\n\n  const discountValue =\n    firstDiscount?.__typename === 'MoneyV2' && firstDiscount;\n\n  const discountPercentage =\n    firstDiscount?.__typename === 'PricingPercentageValue' &&\n    firstDiscount?.percentage;\n\n  return json({\n    order,\n    lineItems,\n    discountValue,\n    discountPercentage,\n  });\n}\n\nexport default function OrderRoute() {\n  const {order, lineItems, discountValue, discountPercentage} = useLoaderData();\n  return (\n    <div className=\"account-order\">\n      <h2>Order {order.name}</h2>\n      <p>Placed on {new Date(order.processedAt).toDateString()}</p>\n      <br />\n      <div>\n        <table>\n          <thead>\n            <tr>\n              <th scope=\"col\">Product</th>\n              <th scope=\"col\">Price</th>\n              <th scope=\"col\">Quantity</th>\n              <th scope=\"col\">Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            {lineItems.map((lineItem, lineItemIndex) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <OrderLineRow key={lineItemIndex} lineItem={lineItem} />\n            ))}\n          </tbody>\n          <tfoot>\n            {((discountValue && discountValue.amount) ||\n              discountPercentage) && (\n              <tr>\n                <th scope=\"row\" colSpan={3}>\n                  <p>Discounts</p>\n                </th>\n                <th scope=\"row\">\n                  <p>Discounts</p>\n                </th>\n                <td>\n                  {discountPercentage ? (\n                    <span>-{discountPercentage}% OFF</span>\n                  ) : (\n                    discountValue && <Money data={discountValue} />\n                  )}\n                </td>\n              </tr>\n            )}\n            <tr>\n              <th scope=\"row\" colSpan={3}>\n                <p>Subtotal</p>\n              </th>\n              <th scope=\"row\">\n                <p>Subtotal</p>\n              </th>\n              <td>\n                <Money data={order.subtotalPriceV2} />\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\" colSpan={3}>\n                Tax\n              </th>\n              <th scope=\"row\">\n                <p>Tax</p>\n              </th>\n              <td>\n                <Money data={order.totalTaxV2} />\n              </td>\n            </tr>\n            <tr>\n              <th scope=\"row\" colSpan={3}>\n                Total\n              </th>\n              <th scope=\"row\">\n                <p>Total</p>\n              </th>\n              <td>\n                <Money data={order.totalPriceV2} />\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n        <div>\n          <h3>Shipping Address</h3>\n          {order?.shippingAddress ? (\n            <address>\n              <p>\n                {order.shippingAddress.firstName &&\n                  order.shippingAddress.firstName + ' '}\n                {order.shippingAddress.lastName}\n              </p>\n              {order?.shippingAddress?.formatted ? (\n                order.shippingAddress.formatted.map((line) => (\n                  <p key={line}>{line}</p>\n                ))\n              ) : (\n                <></>\n              )}\n            </address>\n          ) : (\n            <p>No shipping address defined</p>\n          )}\n          <h3>Status</h3>\n          <div>\n            <p>{order.fulfillmentStatus}</p>\n          </div>\n        </div>\n      </div>\n      <br />\n      <p>\n        <a target=\"_blank\" href={order.statusUrl} rel=\"noreferrer\">\n          View Order Status \u2192\n        </a>\n      </p>\n    </div>\n  );\n}\n\nfunction OrderLineRow({lineItem}) {\n  return (\n    <tr key={lineItem.variant.id}>\n      <td>\n        <div>\n          <Link to={`/products/${lineItem.variant.product.handle}`}>\n            {lineItem?.variant?.image && (\n              <div>\n                <Image data={lineItem.variant.image} width={96} height={96} />\n              </div>\n            )}\n          </Link>\n          <div>\n            <p>{lineItem.title}</p>\n            <small>{lineItem.variant.title}</small>\n          </div>\n        </div>\n      </td>\n      <td>\n        <Money data={lineItem.variant.price} />\n      </td>\n      <td>{lineItem.quantity}</td>\n      <td>\n        <Money data={lineItem.discountedTotalPrice} />\n      </td>\n    </tr>\n  );\n}\n\n// NOTE: https://shopify.dev/docs/api/storefront/latest/objects/Order\nconst CUSTOMER_ORDER_QUERY = `#graphql\n  fragment OrderMoney on MoneyV2 {\n    amount\n    currencyCode\n  }\n  fragment AddressFull on MailingAddress {\n    address1\n    address2\n    city\n    company\n    country\n    countryCodeV2\n    firstName\n    formatted\n    id\n    lastName\n    name\n    phone\n    province\n    provinceCode\n    zip\n  }\n  fragment DiscountApplication on DiscountApplication {\n    value {\n      __typename\n      ... on MoneyV2 {\n        ...OrderMoney\n      }\n      ... on PricingPercentageValue {\n        percentage\n      }\n    }\n  }\n  fragment OrderLineProductVariant on ProductVariant {\n    id\n    image {\n      altText\n      height\n      url\n      id\n      width\n    }\n    price {\n      ...OrderMoney\n    }\n    product {\n      handle\n    }\n    sku\n    title\n  }\n  fragment OrderLineItemFull on OrderLineItem {\n    title\n    quantity\n    discountAllocations {\n      allocatedAmount {\n        ...OrderMoney\n      }\n      discountApplication {\n        ...DiscountApplication\n      }\n    }\n    originalTotalPrice {\n      ...OrderMoney\n    }\n    discountedTotalPrice {\n      ...OrderMoney\n    }\n    variant {\n      ...OrderLineProductVariant\n    }\n  }\n  fragment Order on Order {\n    id\n    name\n    orderNumber\n    statusUrl\n    processedAt\n    fulfillmentStatus\n    totalTaxV2 {\n      ...OrderMoney\n    }\n    totalPriceV2 {\n      ...OrderMoney\n    }\n    subtotalPriceV2 {\n      ...OrderMoney\n    }\n    shippingAddress {\n      ...AddressFull\n    }\n    discountApplications(first: 100) {\n      nodes {\n        ...DiscountApplication\n      }\n    }\n    lineItems(first: 100) {\n      nodes {\n        ...OrderLineItemFull\n      }\n    }\n  }\n  query Order(\n    $country: CountryCode\n    $language: LanguageCode\n    $orderId: ID!\n  ) @inContext(country: $country, language: $language) {\n    order: node(id: $orderId) {\n      ... on Order {\n        ...Order\n      }\n    }\n  }\n`;\n"],
  "mappings": "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",
  "names": []
}
