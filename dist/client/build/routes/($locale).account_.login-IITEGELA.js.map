{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).account_.login.jsx"],
  "sourcesContent": ["import {json, redirect} from '@shopify/remix-oxygen';\nimport {Form, Link, useActionData} from '@remix-run/react';\nimport {\n  Card,\n  Input,\n  Checkbox,\n  Typography,\n} from \"@material-tailwind/react\";\n\n\nimport { LockClosedIcon } from '@heroicons/react/solid' \n\nexport const meta = () => {\n  return [{title: 'Login'}];\n};\n\nexport async function loader({context}) {\n  if (await context.session.get('customerAccessToken')) {\n\n    return redirect('/account');\n  }\n  return json({});\n}\n\nexport async function action({request, context}) {\n  const {session, storefront} = context;\n\n  if (request.method !== 'POST') {\n    return json({error: 'Method not allowed'}, {status: 405});\n  }\n\n  try {\n    const form = await request.formData();\n    const email = String(form.has('email') ? form.get('email') : '');\n    const password = String(form.has('password') ? form.get('password') : '');\n    const validInputs = Boolean(email && password);\n\n    if (!validInputs) {\n      throw new Error('Please provide both an email and a password.');\n    }\n\n    const {customerAccessTokenCreate} = await storefront.mutate(\n      LOGIN_MUTATION,\n      {\n        variables: {\n          input: {email, password},\n        },\n      },\n    );\n\n    if (!customerAccessTokenCreate?.customerAccessToken?.accessToken) {\n      throw new Error(customerAccessTokenCreate?.customerUserErrors[0].message);\n    }\n\n    const {customerAccessToken} = customerAccessTokenCreate;\n    //console.log(customerAccessToken)\n    session.set('customerAccessToken', customerAccessToken);\n\n    return redirect('/account', {\n      headers: {\n        'Set-Cookie': await session.commit(),\n      },\n    });\n  } catch (error) {\n    if (error instanceof Error) {\n      return json({error: error.message}, {status: 400});\n    }\n    return json({error}, {status: 400});\n  }\n}\n\nexport default function Login() {\n  const data = useActionData();\n  const error = data?.error || null;\n  console.log(data)\n  console.log(error)\n  return (\n    <>  \n      <div className=\"flex flex-col sm:flex-row\">\n        <div className=\"sm:w-2/3 sm:block\">\n          <img\n            src=\"https://cdn.shopify.com/s/files/1/0809/4253/0882/files/LoginSideImg-Photoroom_1_2.png?v=1709296234\"\n            alt=\"Login Background\"\n            className=\"w-full h-full object-cover\"\n          />\n        </div>\n        \n        <div className=\"w-full justify-center items-center flex flex-col\">\n        <Form className=\"w-full m-auto login_wrapper\" method=\"POST\">\n        <fieldset>\n          <div className=\"mb-3\" >\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" for=\"username\">\n              Email\n            </label>\n            <input className=\"shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              autoComplete=\"email\"\n              placeholder=\"Email address\"\n              aria-label=\"Email address\"\n              required/>\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" for=\"password\">\n              Password\n            </label>\n            <input className=\"shadow appearance-none border rounded w-full py-1 px-2 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\" \n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            placeholder=\"Password\"\n            aria-label=\"Password\"\n            minLength={8}\n            required/>\n            {error ? (\n                <p className=\"text-red-500 text-xs italic\">{error}</p>\n              ) : (\n                <br />\n              )}\n          </div>\n          \n          <div className=\"flex items-center justify-between\">\n            <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"submit\">\n              Sign In\n            </button>\n            <a className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800\" href=\"/account/recover\">\n              Forgot Password?\n            </a>\n          </div>\n          <a className=\"py-4 text-blue-500\" href=\"/account/register\"> Register </a>\n          </fieldset>\n        </Form>\n        <p className=\"text-center text-gray-500 text-xs\">\n          &copy;2023. All rights reserved.\n        </p>\n    </div>\n    </div>\n\n    </>\n  );\n}\n\n// NOTE: https://shopify.dev/docs/api/storefront/latest/mutations/customeraccesstokencreate\nconst LOGIN_MUTATION = `#graphql\n  mutation login($input: CustomerAccessTokenCreateInput!) {\n    customerAccessTokenCreate(input: $input) {\n      customerUserErrors {\n        code\n        field\n        message\n      }\n      customerAccessToken {\n        accessToken\n        expiresAt\n      }\n    }\n  }\n`;\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAEA,IAAAA,gBAKO;AAsEH;AAjEG,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC,EAAC,OAAO,QAAO,CAAC;AAC1B;AAyDe,SAAR,QAAyB;AAC9B,QAAM,OAAO,cAAc;AAC3B,QAAM,QAAQ,MAAM,SAAS;AAC7B,UAAQ,IAAI,IAAI;AAChB,UAAQ,IAAI,KAAK;AACjB,SACE,sFACE,6DAAC,SAAI,WAAU,6BACb;AAAA,uDAAC,SAAI,WAAU,qBACb;AAAA,MAAC;AAAA;AAAA,QACC,KAAI;AAAA,QACJ,KAAI;AAAA,QACJ,WAAU;AAAA;AAAA,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAIA,KALF;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,IAEA,mDAAC,SAAI,WAAU,oDACf;AAAA,yDAAC,QAAK,WAAU,+BAA8B,QAAO,QACrD,6DAAC,cACC;AAAA,2DAAC,SAAI,WAAU,QACb;AAAA,6DAAC,WAAM,WAAU,8CAA6C,KAAI,YAAW,qBAA7E;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA;AAAA,YAAC;AAAA;AAAA,cAAM,WAAU;AAAA,cACf,IAAG;AAAA,cACH,MAAK;AAAA,cACL,MAAK;AAAA,cACL,cAAa;AAAA,cACb,aAAY;AAAA,cACZ,cAAW;AAAA,cACX,UAAQ;AAAA;AAAA,YAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAOU;AAAA,aAXZ;AAAA;AAAA;AAAA;AAAA,eAYA;AAAA,QACA,mDAAC,SAAI,WAAU,QACb;AAAA,6DAAC,WAAM,WAAU,8CAA6C,KAAI,YAAW,wBAA7E;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA;AAAA,YAAC;AAAA;AAAA,cAAM,WAAU;AAAA,cACjB,IAAG;AAAA,cACH,MAAK;AAAA,cACL,MAAK;AAAA,cACL,cAAa;AAAA,cACb,aAAY;AAAA,cACZ,cAAW;AAAA,cACX,WAAW;AAAA,cACX,UAAQ;AAAA;AAAA,YARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQQ;AAAA,UACP,QACG,mDAAC,OAAE,WAAU,+BAA+B,mBAA5C;AAAA;AAAA;AAAA;AAAA,iBAAkD,IAElD,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,iBAAI;AAAA,aAhBV;AAAA;AAAA;AAAA;AAAA,eAkBA;AAAA,QAEA,mDAAC,SAAI,WAAU,qCACb;AAAA,6DAAC,YAAO,WAAU,gHAA+G,MAAK,UAAS,uBAA/I;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,OAAE,WAAU,mFAAkF,MAAK,oBAAmB,gCAAvH;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA,eAOA;AAAA,QACA,mDAAC,OAAE,WAAU,sBAAqB,MAAK,qBAAoB,0BAA3D;AAAA;AAAA;AAAA;AAAA,eAAqE;AAAA,WA1CvE;AAAA;AAAA;AAAA;AAAA,aA2CE,KA5CF;AAAA;AAAA;AAAA;AAAA,aA6CA;AAAA,MACA,mDAAC,OAAE,WAAU,qCAAoC,8CAAjD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAjDA;AAAA;AAAA;AAAA;AAAA,WAkDJ;AAAA,OA3DE;AAAA;AAAA;AAAA;AAAA,SA4DF,KA7DA;AAAA;AAAA;AAAA;AAAA,SA+DA;AAEJ;",
  "names": ["import_react"]
}
