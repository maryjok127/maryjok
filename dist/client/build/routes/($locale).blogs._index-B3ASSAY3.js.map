{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).blogs._index.jsx"],
  "sourcesContent": ["import {json} from '@shopify/remix-oxygen';\nimport {Link, useLoaderData} from '@remix-run/react';\nimport {Pagination, getPaginationVariables} from '@shopify/hydrogen';\n\nexport const meta = () => {\n  return [{title: `Hydrogen | Logs`}];\n};\n\nexport const loader = async ({request, context: {storefront}}) => {\n  const paginationVariables = getPaginationVariables(request, {\n    pageBy: 10,\n  });\n\n  const {blogs} = await storefront.query(BLOGS_QUERY, {\n    variables: {\n      ...paginationVariables,\n    },\n  });\n\n  return json({blogs});\n};\n\nexport default function Blogs() {\n  const {blogs} = useLoaderData();\n\n  return (\n    <div className=\"blogs\">\n      <h1>Blogs</h1>\n      <div className=\"blogs-grid\">\n        <Pagination connection={blogs}>\n          {({nodes, isLoading, PreviousLink, NextLink}) => {\n            return (\n              <>\n                <PreviousLink>\n                  {isLoading ? 'Loading...' : <span>\u2191 Load previous</span>}\n                </PreviousLink>\n                {nodes.map((blog) => {\n                  return (\n                    <Link\n                      className=\"blog\"\n                      key={blog.handle}\n                      prefetch=\"intent\"\n                      to={`/blogs/${blog.handle}`}\n                    >\n                      <h2>{blog.title}</h2>\n                    </Link>\n                  );\n                })}\n                <NextLink>\n                  {isLoading ? 'Loading...' : <span>Load more \u2193</span>}\n                </NextLink>\n              </>\n            );\n          }}\n        </Pagination>\n      </div>\n    </div>\n  );\n}\n\n// NOTE: https://shopify.dev/docs/api/storefront/latest/objects/blog\nconst BLOGS_QUERY = `#graphql\n  query Blogs(\n    $country: CountryCode\n    $endCursor: String\n    $first: Int\n    $language: LanguageCode\n    $last: Int\n    $startCursor: String\n  ) @inContext(country: $country, language: $language) {\n    blogs(\n      first: $first,\n      last: $last,\n      before: $startCursor,\n      after: $endCursor\n    ) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n      nodes {\n        title\n        handle\n        seo {\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n"],
  "mappings": ";;;;;;;;;;;;;AA2BM;AAvBC,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC,EAAC,OAAO,kBAAiB,CAAC;AACpC;AAgBe,SAAR,QAAyB;AAC9B,QAAM,EAAC,MAAK,IAAI,cAAc;AAE9B,SACE,mDAAC,SAAI,WAAU,SACb;AAAA,uDAAC,QAAG,qBAAJ;AAAA;AAAA;AAAA;AAAA,WAAS;AAAA,IACT,mDAAC,SAAI,WAAU,cACb,6DAAC,MAAW,YAAY,OACrB,WAAC,EAAC,OAAO,WAAW,cAAc,SAAQ,MAAM;AAC/C,aACE,sFACE;AAAA,2DAAC,gBACE,sBAAY,eAAe,mDAAC,UAAK,oCAAN;AAAA;AAAA;AAAA;AAAA,eAAqB,KADnD;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACC,MAAM,IAAI,CAAC,SAAS;AACnB,iBACE;AAAA,YAAC;AAAA;AAAA,cACC,WAAU;AAAA,cAEV,UAAS;AAAA,cACT,IAAI,UAAU,KAAK;AAAA,cAEnB,6DAAC,QAAI,eAAK,SAAV;AAAA;AAAA;AAAA;AAAA,qBAAgB;AAAA;AAAA,YAJX,KAAK;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAOA;AAAA,QAEJ,CAAC;AAAA,QACD,mDAAC,YACE,sBAAY,eAAe,mDAAC,UAAK,gCAAN;AAAA;AAAA;AAAA;AAAA,eAAiB,KAD/C;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAlBF;AAAA;AAAA;AAAA;AAAA,aAmBA;AAAA,IAEJ,KAxBF;AAAA;AAAA;AAAA;AAAA,WAyBA,KA1BF;AAAA;AAAA;AAAA;AAAA,WA2BA;AAAA,OA7BF;AAAA;AAAA;AAAA;AAAA,SA8BA;AAEJ;",
  "names": []
}
