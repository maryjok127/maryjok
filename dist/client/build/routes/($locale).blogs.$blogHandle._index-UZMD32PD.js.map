{
  "version": 3,
  "sources": ["../../../../app/routes/($locale).blogs.$blogHandle._index.jsx"],
  "sourcesContent": ["import {json} from '@shopify/remix-oxygen';\nimport {Link, useLoaderData} from '@remix-run/react';\nimport {Image, Pagination, getPaginationVariables} from '@shopify/hydrogen';\n\nexport const meta = ({data}) => {\n  return [{title: `Hydrogen | ${data.blog.title} blog`}];\n};\n\nexport const loader = async ({request, params, context: {storefront}}) => {\n  const paginationVariables = getPaginationVariables(request, {\n    pageBy: 4,\n  });\n\n  if (!params.blogHandle) {\n    throw new Response(`blog not found`, {status: 404});\n  }\n\n  const {blog} = await storefront.query(BLOGS_QUERY, {\n    variables: {\n      blogHandle: params.blogHandle,\n      ...paginationVariables,\n    },\n  });\n\n  if (!blog?.articles) {\n    throw new Response('Not found', {status: 404});\n  }\n\n  return json({blog});\n};\n\nexport default function Blog() {\n  const {blog} = useLoaderData();\n  const {articles} = blog;\n\n  return (\n    <div className=\"blog\">\n      <h1>{blog.title}</h1>\n      <div className=\"blog-grid\">\n        <Pagination connection={articles}>\n          {({nodes, isLoading, PreviousLink, NextLink}) => {\n            return (\n              <>\n                <PreviousLink>\n                  {isLoading ? 'Loading...' : <span>\u2191 Load previous</span>}\n                </PreviousLink>\n                {nodes.map((article, index) => {\n                  return (\n                    <ArticleItem\n                      article={article}\n                      title={blog.title}\n                      key={article.id}\n                      loading={index < 2 ? 'eager' : 'lazy'}\n                    />\n                  );\n                })}\n                <NextLink>\n                  {isLoading ? 'Loading...' : <span>Load more \u2193</span>}\n                </NextLink>\n              </>\n            );\n          }}\n        </Pagination>\n      </div>\n    </div>\n  );\n}\n\nfunction ArticleItem({article, loading}) {\n  const publishedAt = new Intl.DateTimeFormat('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  }).format(new Date(article.publishedAt));\n  return (\n    <div className=\"mst-card-md p-5 m-8 blog-article\" key={article.id}>\n\n      <Link to={`/blogs/${article.blog.handle}/${article.handle}`}>\n        {article.image && (\n          <div className=\"blog-article-image\">\n            <Image\n              alt={article.image.altText || article.title}\n              aspectRatio=\"3/2\"\n              data={article.image}\n              loading={loading}\n              sizes=\"(min-width: 768px) 50vw, 100vw\"\n            />\n          </div>\n        )}\n        <h3>{article.title}</h3>\n        <small>{publishedAt}</small>\n      </Link>\n    </div>\n  );\n}\n\n// NOTE: https://shopify.dev/docs/api/storefront/latest/objects/blog\nconst BLOGS_QUERY = `#graphql\n  query Blog(\n    $language: LanguageCode\n    $blogHandle: String!\n    $first: Int\n    $last: Int\n    $startCursor: String\n    $endCursor: String\n  ) @inContext(language: $language) {\n    blog(handle: $blogHandle) {\n      title\n      seo {\n        title\n        description\n      }\n      articles(\n        first: $first,\n        last: $last,\n        before: $startCursor,\n        after: $endCursor\n      ) {\n        nodes {\n          ...ArticleItem\n        }\n        pageInfo {\n          hasPreviousPage\n          hasNextPage\n          hasNextPage\n          endCursor\n          startCursor\n        }\n\n      }\n    }\n  }\n  fragment ArticleItem on Article {\n    author: authorV2 {\n      name\n    }\n    contentHtml\n    handle\n    id\n    image {\n      id\n      altText\n      url\n      width\n      height\n    }\n    publishedAt\n    title\n    blog {\n      handle\n    }\n  }\n`;\n"],
  "mappings": ";;;;;;;;;;;;;;AAqCM;AAjCC,IAAM,OAAO,CAAC,EAAC,KAAI,MAAM;AAC9B,SAAO,CAAC,EAAC,OAAO,cAAc,KAAK,KAAK,aAAY,CAAC;AACvD;AAyBe,SAAR,OAAwB;AAC7B,QAAM,EAAC,KAAI,IAAI,cAAc;AAC7B,QAAM,EAAC,SAAQ,IAAI;AAEnB,SACE,mDAAC,SAAI,WAAU,QACb;AAAA,uDAAC,QAAI,eAAK,SAAV;AAAA;AAAA;AAAA;AAAA,WAAgB;AAAA,IAChB,mDAAC,SAAI,WAAU,aACb,6DAAC,MAAW,YAAY,UACrB,WAAC,EAAC,OAAO,WAAW,cAAc,SAAQ,MAAM;AAC/C,aACE,sFACE;AAAA,2DAAC,gBACE,sBAAY,eAAe,mDAAC,UAAK,oCAAN;AAAA;AAAA;AAAA;AAAA,eAAqB,KADnD;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACC,MAAM,IAAI,CAAC,SAAS,UAAU;AAC7B,iBACE;AAAA,YAAC;AAAA;AAAA,cACC;AAAA,cACA,OAAO,KAAK;AAAA,cAEZ,SAAS,QAAQ,IAAI,UAAU;AAAA;AAAA,YAD1B,QAAQ;AAAA,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA;AAAA,QAEJ,CAAC;AAAA,QACD,mDAAC,YACE,sBAAY,eAAe,mDAAC,UAAK,gCAAN;AAAA;AAAA;AAAA;AAAA,eAAiB,KAD/C;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAhBF;AAAA;AAAA;AAAA;AAAA,aAiBA;AAAA,IAEJ,KAtBF;AAAA;AAAA;AAAA;AAAA,WAuBA,KAxBF;AAAA;AAAA;AAAA;AAAA,WAyBA;AAAA,OA3BF;AAAA;AAAA;AAAA;AAAA,SA4BA;AAEJ;AAEA,SAAS,YAAY,EAAC,SAAS,QAAO,GAAG;AACvC,QAAM,cAAc,IAAI,KAAK,eAAe,SAAS;AAAA,IACnD,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,EACP,CAAC,EAAE,OAAO,IAAI,KAAK,QAAQ,WAAW,CAAC;AACvC,SACE,mDAAC,SAAI,WAAU,oCAEb,6DAAC,QAAK,IAAI,UAAU,QAAQ,KAAK,UAAU,QAAQ,UAChD;AAAA,YAAQ,SACP,mDAAC,SAAI,WAAU,sBACb;AAAA,MAAC;AAAA;AAAA,QACC,KAAK,QAAQ,MAAM,WAAW,QAAQ;AAAA,QACtC,aAAY;AAAA,QACZ,MAAM,QAAQ;AAAA,QACd;AAAA,QACA,OAAM;AAAA;AAAA,MALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMA,KAPF;AAAA;AAAA;AAAA;AAAA,WAQA;AAAA,IAEF,mDAAC,QAAI,kBAAQ,SAAb;AAAA;AAAA;AAAA;AAAA,WAAmB;AAAA,IACnB,mDAAC,WAAO,yBAAR;AAAA;AAAA;AAAA;AAAA,WAAoB;AAAA,OAbtB;AAAA;AAAA;AAAA;AAAA,SAcA,KAhBqD,QAAQ,IAA/D;AAAA;AAAA;AAAA;AAAA,SAiBA;AAEJ;",
  "names": []
}
