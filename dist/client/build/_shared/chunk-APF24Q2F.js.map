{
  "version": 3,
  "sources": ["../../../../app/components/Search.jsx"],
  "sourcesContent": ["import {useParams, useFetcher, Link, Form} from '@remix-run/react';\nimport {Image, Money, Pagination} from '@shopify/hydrogen';\nimport React, {useRef, useEffect} from 'react';\nimport {useFetchers} from '@remix-run/react';\n\nexport const NO_PREDICTIVE_SEARCH_RESULTS = [\n  {type: 'queries', items: []},\n  {type: 'products', items: []},\n  {type: 'collections', items: []},\n  {type: 'pages', items: []},\n  {type: 'articles', items: []},\n];\n\nexport function SearchForm({searchTerm}) {\n  const inputRef = useRef(null);\n\n  // focus the input when cmd+k is pressed\n  useEffect(() => {\n    function handleKeyDown(event) {\n      if (event.key === 'k' && event.metaKey) {\n        event.preventDefault();\n        inputRef.current?.focus();\n      }\n\n      if (event.key === 'Escape') {\n        inputRef.current?.blur();\n      }\n    }\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  return (\n    <Form method=\"get\">\n      <input\n        defaultValue={searchTerm}\n        name=\"q\"\n        placeholder=\"Search\u2026\"\n        ref={inputRef}\n        type=\"search\"\n      />\n      &nbsp;\n      <button type=\"submit\">Search from custom</button>\n    </Form>\n  );\n}\n\nexport function SearchResults({results}) {\n  if (!results) {\n    return null;\n  }\n  const keys = Object.keys(results);\n  console.log(results)\n  return (\n    <div>\n      {results &&\n        keys.map((type) => {\n          const resourceResults = results[type];\n\n          if (resourceResults.nodes[0]?.__typename === 'Page') {\n            const pageResults = resourceResults;\n            return resourceResults.nodes.length ? (\n              <SearchResultPageGrid key=\"pages\" pages={pageResults} />\n            ) : null;\n          }\n\n          if (resourceResults.nodes[0]?.__typename === 'Product') {\n            const productResults = resourceResults;\n            return resourceResults.nodes.length ? (\n              <SearchResultsProductsGrid\n                key=\"products\"\n                products={productResults}\n              />\n            ) : null;\n          }\n\n          if (resourceResults.nodes[0]?.__typename === 'Article') {\n            const articleResults = resourceResults;\n            return resourceResults.nodes.length ? (\n              <SearchResultArticleGrid\n                key=\"articles\"\n                articles={articleResults}\n              />\n            ) : null;\n          }\n\n          return null;\n        })}\n    </div>\n  );\n}\n\nfunction SearchResultsProductsGrid({products}) {\n  return (\n    <div className=\"search-result\">\n      <h3>Products</h3>\n      <Pagination connection={products}>\n        {({nodes, isLoading, NextLink, PreviousLink}) => {\n          const itemsMarkup = nodes.map((product) => (\n            <div className=\"search-results-item\" key={product.id}>\n              <Link prefetch=\"intent\" to={`/products/${product.handle}`}>\n                <span>{product.title}</span>\n              </Link>\n            </div>\n          ));\n          return (\n            <div>\n              <div>\n                <PreviousLink>\n                  {isLoading ? 'Loading...' : <span>\u2191 Load previous</span>}\n                </PreviousLink>\n              </div>\n              <div>\n                {itemsMarkup}\n                <br />\n              </div>\n              <div>\n                <NextLink>\n                  {isLoading ? 'Loading...' : <span>Load more \u2193</span>}\n                </NextLink>\n              </div>\n            </div>\n          );\n        }}\n      </Pagination>\n      <br />\n    </div>\n  );\n}\n\nfunction SearchResultPageGrid({pages}) {\n  return (\n    <div className=\"search-result\">\n      <h2>Pages</h2>\n      <div>\n        {pages?.nodes?.map((page) => (\n          <div className=\"search-results-item\" key={page.id}>\n            <Link prefetch=\"intent\" to={`/pages/${page.handle}`}>\n              {page.title}\n            </Link>\n          </div>\n        ))}\n      </div>\n      <br />\n    </div>\n  );\n}\n\nfunction SearchResultArticleGrid({articles}) {\n  return (\n    <div className=\"search-result\">\n      <h2>Articles</h2>\n      <div>\n        {articles?.nodes?.map((article) => (\n          <div className=\"search-results-item\" key={article.id}>\n            <Link prefetch=\"intent\" to={`/blog/${article.handle}`}>\n              {article.title}\n            </Link>\n          </div>\n        ))}\n      </div>\n      <br />\n    </div>\n  );\n}\n\nexport function NoSearchResults() {\n  return <div>No results, try a different search.</div>;\n}\n\n/**\n *  Search form component that posts search requests to the `/search` route\n **/\nexport function PredictiveSearchForm({\n  action,\n  children,\n  className = 'predictive-search-form',\n  method = 'POST',\n  ...props\n}) {\n  const params = useParams();\n  const fetcher = useFetcher();\n  const inputRef = useRef(null);\n\n  function fetchResults(event) {\n    const searchAction = action ?? '/api/predictive-search';\n    const localizedAction = params.locale\n      ? `/${params.locale}${searchAction}`\n      : searchAction;\n    const newSearchTerm = event.target.value || '';\n    fetcher.submit(\n      {q: newSearchTerm, limit: '6'},\n      {method, action: localizedAction},\n    );\n  }\n\n  // ensure the passed input has a type of search, because SearchResults\n  // will select the element based on the input\n  useEffect(() => {\n    inputRef?.current?.setAttribute('type', 'search');\n  }, []);\n\n  return (\n    <fetcher.Form\n      {...props}\n      className={className}\n      onSubmit={(event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        if (!inputRef?.current || inputRef.current.value === '') {\n          return;\n        }\n        inputRef.current.blur();\n      }}\n    >\n      {children({fetchResults, inputRef, fetcher})}\n    </fetcher.Form>\n  );\n}\n\nexport function PredictiveSearchResults() {\n  const {results, totalResults, searchInputRef, searchTerm} =\n    usePredictiveSearch();\n\n  function goToSearchResult(event) {\n    if (!searchInputRef.current) return;\n    searchInputRef.current.blur();\n    searchInputRef.current.value = '';\n    // close the aside\n    window.location.href = event.currentTarget.href;\n  }\n\n  if (!totalResults) {\n    return <></> //<NoPredictiveSearchResults searchTerm={searchTerm} />;\n  }\n  return (\n    <div className=\"predictive-search-results w-[270px] lg:w-[470px] absolute right-0\">\n      <div>\n        {results.map(({type, items}) => (\n          <PredictiveSearchResult\n            goToSearchResult={goToSearchResult}\n            items={items}\n            key={type}\n            searchTerm={searchTerm}\n            type={type}\n          />\n        ))}\n      </div>\n      {/* view all results /search?q=term */}\n      {searchTerm.current && (\n        <Link onClick={goToSearchResult} to={`/search?q=${searchTerm.current}`}>\n          <div>\n            View all results for <q>{searchTerm.current}</q>\n            &nbsp; \u2192\n          </div>\n        </Link>\n      )}\n    </div>\n  );\n}\n\nfunction NoPredictiveSearchResults({searchTerm}) {\n  if (!searchTerm.current) {\n    return null;\n  }\n  return (\n    <div>\n      No results found for <q>{searchTerm.current}</q>\n    </div>\n  );\n}\n\nfunction PredictiveSearchResult({goToSearchResult, items, searchTerm, type}) {\n  const isSuggestions = type === 'queries';\n  const categoryUrl = `/search?q=${\n    searchTerm.current\n  }&type=${pluralToSingularSearchType(type)}`;\n\n  return (\n    <div className=\"predictive-search-result\" key={type}>\n      {/* <Link prefetch=\"intent\" to={categoryUrl} onClick={goToSearchResult}>\n        <h5>{isSuggestions ? 'Suggestions' : type}</h5>\n      </Link> */}\n      <ul>\n        {items.map((item) => (\n          <SearchResultItem\n            goToSearchResult={goToSearchResult}\n            item={item}\n            key={item.id}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction SearchResultItem({goToSearchResult, item}) {\n  return (\n    <li className=\"predictive-search-result-item\" key={item.id}>\n      <Link onClick={goToSearchResult} to={item.url}>\n        {item.image?.url && (\n          <Image\n            alt={item.image.altText ?? ''}\n            src={item.image.url}\n            width={50}\n            height={50}\n          />\n        )}\n        <div>\n          {item.styledTitle ? (\n            <div\n              dangerouslySetInnerHTML={{\n                __html: item.styledTitle,\n              }}\n            />\n          ) : (\n            <span>{item.title}</span>\n          )}\n          {item?.price && (\n            <small>\n              <Money data={item.price} />\n            </small>\n          )}\n        </div>\n      </Link>\n    </li>\n  );\n}\n\nfunction usePredictiveSearch() {\n  const fetchers = useFetchers();\n  const searchTerm = useRef('');\n  const searchInputRef = useRef(null);\n  const searchFetcher = fetchers.find((fetcher) => fetcher.data?.searchResults);\n\n  if (searchFetcher?.state === 'loading') {\n    searchTerm.current = searchFetcher.formData?.get('q') || '';\n  }\n\n  const search = searchFetcher?.data?.searchResults || {\n    results: NO_PREDICTIVE_SEARCH_RESULTS,\n    totalResults: 0,\n  };\n\n  // capture the search input element as a ref\n  useEffect(() => {\n    if (searchInputRef.current) return;\n    searchInputRef.current = document.querySelector('input[type=\"search\"]');\n  }, []);\n\n  return {...search, searchInputRef, searchTerm};\n}\n\n/**\n * Converts a plural search type to a singular search type\n * @param type - The plural search type\n * @returns The singular search type\n *\n * @example\n * ```ts\n * pluralToSingularSearchType('articles') // => 'ARTICLE'\n * pluralToSingularSearchType(['articles', 'products']) // => 'ARTICLE,PRODUCT'\n * ```\n */\nfunction pluralToSingularSearchType(type) {\n  const plural = {\n    articles: 'ARTICLE',\n    collections: 'COLLECTION',\n    pages: 'PAGE',\n    products: 'PRODUCT',\n    queries: 'QUERY',\n  };\n\n  if (typeof type === 'string') {\n    return plural[type];\n  }\n\n  return type.map((t) => plural[t]).join(',');\n}\n"],
  "mappings": "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",
  "names": ["import_react"]
}
